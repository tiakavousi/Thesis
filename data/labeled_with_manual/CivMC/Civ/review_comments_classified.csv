repository,file_type,id,pr_number,body,distilbert_sentiment_label,codebert_sentiment_label,deberta_sentiment_label,distilbert_confidence,codebert_confidence,deberta_confidence,majority_label,final_decision,decision_reason,manual_label
CivMC/Civ,review_comments,1797336629,634,`setmin_y` ?,0,0,0,0.9873605370521544,0.9925009608268738,0.9941284656524658,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1797337666,634,what's wrong?,-1,0,0,0.8307653069496155,0.8057692050933838,0.5024477243423462,0.0,accept,majority_agreement,2
CivMC/Civ,review_comments,1797338030,634,"if this class will only be used by the buildlimits hack, it could be made an inner-class of the hack. that's just a personal preference though.",0,0,0,0.9849976301193236,0.9874725341796876,0.9893237948417664,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1797338822,634,soundtech ok'ed this so :man_shrugging:,-1,1,1,0.6029884815216064,0.7626638412475586,0.9767552018165588,1.0,accept,majority_agreement,2
CivMC/Civ,review_comments,1797340312,634,just seems like an odd naming convention to have both camel and snake case. it's typical for getters in java to use camel casing (eg: `setminy`) or otherwise to have the field public if you want to retain the name.,-1,0,-1,0.7183979749679565,0.9206969738006592,0.9110292792320251,-1.0,accept,majority_agreement,2
CivMC/Civ,review_comments,1797343662,634,"oh, i used `y_min` in the config so it just got carried over to the var names. now that i look at it, it does feel a bit weird",-1,-1,-1,0.955893874168396,0.9597912430763244,0.7868807315826416,-1.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1797344436,634,okay :+1:,0,1,1,0.7454250454902649,0.8877530097961426,0.9670591950416564,1.0,accept,majority_agreement,2
CivMC/Civ,review_comments,1797406899,634,"yeah `setminy` is correct, you never wanna make exceptions to name casing.",0,0,0,0.9842968583106996,0.9334185123443604,0.99133563041687,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1797408353,634,nit: remove this empty line,0,0,0,0.9806146025657654,0.9783557653427124,0.99075049161911,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1797409963,634,nit: remove this empty line,0,0,0,0.9806146025657654,0.9783557653427124,0.99075049161911,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1797410325,634,nit: remove this empty line,0,0,0,0.9806146025657654,0.9783557653427124,0.99075049161911,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1797410848,634,move the declaration of `player` to right above this line or just use `e.getplayer()` directly.,0,0,0,0.9880075454711914,0.992229163646698,0.9942408800125122,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1797414896,634,`type` should ideally be an enum instead of a string.,0,0,0,0.986583650112152,0.992589831352234,0.9922502636909484,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1797418542,634,"public static buildlimit deserialize( map args) { int miny = 0; int maxy = 0; string type = ""altitude""; type = (string)args.get(""type""); if (type.equals(""altitude"")) { if (args.containskey(""min_y"")) { miny = (integer)args.get(""min_y""); } if (args.containskey(""max_y"")) { maxy = (integer)args.get(""max_y""); } } string world = ""world""; world = (string)args.get(""world""); return new buildlimit(world, type, miny, maxy); }",0,0,0,0.9828004837036132,0.9911994338035583,0.9891510009765624,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1798527270,634,there doesn't seem to be a `type` other than altitude. is this necessary?,0,0,0,0.9828431010246276,0.984197199344635,0.988515555858612,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1798529063,634,hack configs already store if they are enabled (shouldenable). the handling here is not really necessary.,0,0,0,0.923241376876831,0.9929903745651244,0.9927207231521606,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1798529984,634,"you don't need to log if a hack is enabled or disabled, that's done already.",0,0,0,0.986983060836792,0.9885208606719972,0.9868773818016052,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1798530257,634,why linkedhashmap here? is insertion order important?,0,0,0,0.984826683998108,0.9873758554458618,0.9936622381210328,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1798530665,634,are the setters necessary?,0,0,0,0.9862824082374572,0.9939672946929932,0.9936181306838988,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1798530877,634,unnecessary,0,0,-1,0.6610735654830933,0.9073663949966432,0.580326497554779,0.0,accept,majority_agreement,2
CivMC/Civ,review_comments,1798530899,634,unnecessary,0,0,-1,0.6610735654830933,0.9073663949966432,0.580326497554779,0.0,accept,majority_agreement,2
CivMC/Civ,review_comments,1798531248,634,"`component.text(string, textcolor)` could be used to make this more succint, but you don't have to do it that way",0,0,0,0.9756143093109132,0.988585889339447,0.9932811260223388,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1798531899,634,"instead of try-catching an assignment, you could use an iterator to check that each element is an instance of `buildlimit`, which then lets you print nice warnings for each offending entry.",0,0,0,0.9841235280036926,0.9887682795524596,0.9850446581840516,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1798533014,634,this one actually is necessary: it's only basichack that registers itself as a listener upon `onenable`,0,0,0,0.9862146973609924,0.9919175505638124,0.9944692850112916,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1798533714,634,goddamnit i hate hacks,-1,-1,-1,0.9886929392814636,0.9937449097633362,0.9958027005195618,-1.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1798534056,634,"needs an `ondisable` override here to remove this listener, then the `if(!config.isenabled()) return;` checks are not necessary since the event will only ever be called when the hack is enabled, because the listeners will only ever be registered upon hack enable.",0,0,0,0.981336772441864,0.9949081540107728,0.9942254424095154,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1798548319,634,why?,0,0,0,0.6633803844451904,0.8699262738227844,0.9622438549995422,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1798548604,634,soundtech asked to add `type` because he wants to add others (e.g radius limit) in the future,0,0,0,0.9881646633148192,0.991271436214447,0.9927507638931274,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1798558431,634,making it an enum would mean adding yet another useless for anything else class. can't make it a subclass because it needs to be accessed from different packages.,0,0,0,0.7408406138420105,0.6295747756958008,0.8646010756492615,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1798560699,634,is a type really necessary? just have a sealed interface and then [a link] it.,0,0,0,0.988923192024231,0.9883885979652404,0.9910436868667604,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1798724440,634,"i do not understand the concern with adding another class, even if it was necessary which i don't think it is? would defining a public enum in an already existing class not work just fine? in any case, using a string is quite bad form as: 1. it can be anything - easy for bugs to sneak in 2. finding out what it can be is near impossible enums fix these issues. btw, i recently did this exact refactoring: [a link]",-1,-1,-1,0.9222863912582396,0.7939884066581726,0.9258862137794496,-1.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1798783027,634,"use [a link], which is what basichack uses.",0,0,0,0.9879713654518129,0.9933078289031982,0.995104193687439,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1800034949,634,"this shouldenable() call is still unnecessary and will cause unexpected behaviour if something happens like the hack is disabled in the config, but then is enabled by a command.",0,0,0,0.9498800039291382,0.9565916061401368,0.9337318539619446,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1800042185,634,"this throwing is fine as it will disable the hack, which will be more visible to the administrator. just printing the error like this will cause strange behaviour as the hack will still be enabled but not initialised properly.",0,0,0,0.9666807651519777,0.9807557463645936,0.9644237756729126,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1800046273,634,"throwing is fine here as the exception will be handled and actually printed rather than discarded, so it's clearer what the problem actually is. see `org.bukkit.configuration.serialization.configurationserialization#deserializeviamethod`",0,0,0,0.9794460535049438,0.994536280632019,0.9939417839050292,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1649369392,550,would it better to allow for minimessage display names and lore?,0,0,0,0.98682701587677,0.9945375323295592,0.9923092126846312,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1649371963,550,"from what i remember, every itemmeta implements repairable, so you should be able to do what you did above with damage. or you could do an [a link].",0,0,0,0.9855995178222656,0.9772435426712036,0.9902378916740416,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1649377585,550,"might be worth looking into serialised item stacks using `==:`, though we'd need to find/create an item creator that produces a yaml output.",0,0,0,0.9860331416130066,0.9924867153167723,0.98427551984787,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1649391099,550,not a fan of all this kind of reformatting :p,1,-1,1,0.9489595890045166,0.4928672909736633,0.8970355987548828,1.0,accept,majority_agreement,2
CivMC/Civ,review_comments,1649398532,550,"not sure these work, iirc `.getitemmeta()` creates a duplicate meta, so any changes to it would then need to be saved back onto the item.",0,0,0,0.9670016765594482,0.9625108242034912,0.9589969515800476,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1650280497,550,"yeah, i think that'd be a much better solution just because of the volume of stuff that items can have now that needs to be checked for and assigned. i put something together using bukkit's inbuilt itemstack serialization that works pretty well, as well as a command in sah to quickly see what a serialized item should look like in a config.",0,0,0,0.9550456404685974,0.9587370753288268,0.8318467736244202,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1651933180,550,"small thing: it's better to do `component.text("" has left the game"", namedtextcolor.yellow)` instead as then you aren't re-creating the component with the colour, but instead are colouring the original component. just a small allocation optimisation.",0,0,0,0.9759401679039,0.9902494549751282,0.984162449836731,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1653783458,550,is it safe to remove this?,0,0,0,0.9818782210350036,0.9922099113464355,0.9929721355438232,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1653784370,550,if you're going to change indentation here at least fix it please,0,0,0,0.9855823516845704,0.9801897406578064,0.9616516828536988,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1653785707,550,"no point using a list here anymore, this can be simplified",0,0,0,0.9766825437545776,0.9870233535766602,0.9514363408088684,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1653787310,550,"if this replaces itemmetaconverterhack, that class should be deleted as well.",0,0,0,0.9851887226104736,0.993013322353363,0.9918823838233948,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1653789176,550,"it doesn't, the intent is to have something to see what an item should look like in a config. itemmetaconverterhack may not be necessary anymore though, but that'd want some testing to figure out.",0,0,0,0.9849107265472412,0.9885580539703368,0.987101674079895,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1653790018,550,"sorry, as you can see from my earlier conversation with orin my autoformatter just won't quit.",-1,-1,-1,0.98495215177536,0.9909454584121704,0.9911591410636902,-1.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1653790171,550,you've removed itemmetaconverterhack from the default config though?,0,0,0,0.9889371395111084,0.9941033720970154,0.99495267868042,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1653790791,550,just merged your autoformat pr so that should help,0,0,0,0.98338520526886,0.9837821125984192,0.9897908568382264,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1653790911,550,"whoops, will fix",-1,-1,-1,0.817053496837616,0.9629089832305908,0.9662599563598632,-1.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1653796841,550,"yeah, mojang changed the way it's handled so we don't have to care about it anymore.",0,0,0,0.7581488490104675,0.9604637622833252,0.950458288192749,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1729593513,606,"nit: no need for the double indents here, the `) {` being on its own line means a single indent is fine",0,0,0,0.8811697959899902,0.9760422706604004,0.9911255240440368,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1729596739,606,"misleading formatting, the `&&` is on the same line as the previous check but applies to the whole statement; use one of these, depending on intent: [code block] or [code block] also same nit as before: whole statement can be 1-indented",0,0,0,0.9699347615242004,0.99086993932724,0.740473747253418,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1729599097,606,"actually, shouldn't it just be [code block] ? was this tested?",0,0,0,0.9840484857559204,0.9932669401168824,0.989330232143402,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1729602986,606,"use an arraylist by default, unless you know you benefit from linked lists specifically (unlikely)",0,0,0,0.9719852805137634,0.9881687760353088,0.9869759678840636,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1729604956,606,oh it should be [code block] right?,0,0,0,0.9817848205566406,0.9891538023948668,0.9854087233543396,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1729608107,606,nit: the ifs can be squished together: [code block] (i also reversed the conditions since a null check should be cheaper than whatever `isair()` is doing,0,0,0,0.9849260449409484,0.9802224040031432,0.9926224946975708,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1729756576,606,oops yeah that should be what it is,-1,-1,0,0.8447539806365967,0.4766108393669128,0.9158408641815186,-1.0,accept,majority_agreement,2
CivMC/Civ,review_comments,1729761480,606,"tbh i just tried to make it as similar to the already existing getclicks code as possible, the previous one used linked lists so  ̄\_(ツ)_/ ̄",0,0,0,0.9791783094406128,0.8113642930984497,0.9441763162612916,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1729766888,606,awoos passionate hatred for linkedlists can be seen in praxis civ-dev,-1,-1,-1,0.9807664155960084,0.987824320793152,0.9336087107658386,-1.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1729948554,606,this is just how intellij formats it soz :loudly_crying_face:,-1,0,-1,0.9883115887641908,0.8875141739845276,0.6625438332557678,-1.0,accept,majority_agreement,2
CivMC/Civ,review_comments,1729951408,606,ahhh,0,-1,0,0.6481319069862366,0.48248490691185,0.6681990027427673,0.0,accept,majority_agreement,2
CivMC/Civ,review_comments,1729951712,606,as expected of java tooling,0,0,0,0.986586332321167,0.9865695834159852,0.9931858777999878,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1792645174,606,this message should only be sent once (by exiting the loop with break),0,0,0,0.984619677066803,0.9913119077682496,0.9939337372779846,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1792646016,606,"i agree with awoo, you can even pre-size it with new arraylist<>(acidtypes.length())",0,0,0,0.9749147295951844,0.518576979637146,0.9793137907981871,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1792675051,606,its a bit intentional since there could be situations where multiple acid operations could fail but one could still be valid,0,0,0,0.9479499459266664,0.6759933233261108,0.8744595050811768,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1792681366,606,hm ok this is probably fine,0,0,0,0.8091708421707153,0.7151198387145996,0.875220000743866,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1792697699,606,i have killed the linkedlist,0,0,0,0.7172346115112305,0.8027167916297913,0.9896005988121032,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1807560618,606,shouldn't acid blocks be able to affect other acid blocks now? this condition should be consistent with /cti,0,0,0,0.987323760986328,0.9940258264541626,0.9917279481887816,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1843265011,606,should be good now,0,1,0,0.5675919055938721,0.756521463394165,0.6094042658805847,0.0,accept,majority_agreement,2
CivMC/Civ,review_comments,1534860909,383,needs modifying to account for my comment below.,0,0,0,0.9287132620811462,0.9772192239761353,0.9931816458702089,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1534871556,383,needs updating.,0,0,0,0.9543787837028505,0.9726195335388184,0.9935534000396729,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1534873362,383,"might wanna be more considerate towards users by accepting both uppercase and lowercase, i.e. comparing with .tolowercase() or equivalent.",0,0,0,0.9825443625450134,0.9882665276527404,0.9857777953147888,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1534883975,383,fixed,0,0,0,0.975196123123169,0.9281549453735352,0.920660674571991,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1534887001,383,"or not, ig it's fine.",0,0,0,0.9089823365211488,0.9769592881202698,0.9541825652122498,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1534887013,383,updated,0,0,0,0.968149185180664,0.968669593334198,0.7592994570732117,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1500643803,319,ori is gonna love the fact someone else is using final variables,1,1,1,0.970879852771759,0.9896817803382874,0.91180419921875,1.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1500702137,319,"just keep in mind this is a *global* toggle, so if someone hides banned players in their `/ep showall` window, then everyone else after that will also have banned players hidden. and when someone then unhides them, everyone after that will also see them.",0,0,0,0.9729819893836976,0.9866058230400084,0.9888590574264526,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1500702794,319,contruct :],0,0,1,0.9625638127326964,0.8390387892723083,0.9340617656707764,0.0,accept,majority_agreement,2
CivMC/Civ,review_comments,1500704365,319,"huh, didn't realise. is there a better way to do it then?",0,-1,0,0.654960036277771,0.8735427260398865,0.7115095257759094,0.0,accept,majority_agreement,2
CivMC/Civ,review_comments,1500707796,319,"you could do something similar to the `cooldowns` map slightly above. or you could make it a player setting and let people toggle it on or off without needing to run `/ep showall`, which might be preferred since it's a particularly taxing command to run. it'll also help with option persistence, as in, you don't need to open `/ep showall` and then re-open it with the toggle, doubling the strain on the server, to see what you want to see.",0,0,0,0.970772385597229,0.9846471548080444,0.9864913821220398,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1500964356,319,this could be a hashset,0,0,0,0.9861389994621276,0.9903386235237122,0.9946662187576294,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1500975126,319,does this mean that the toggle can only clicked 10 seconds after opening the gui?,0,0,0,0.9832648634910583,0.9917007088661194,0.9923455119132996,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1500997444,319,yes but it will only matter on the rare occasion someone wants to look at banned pearls,0,0,0,0.9557029604911804,0.964940309524536,0.9357110261917114,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1501048410,319,updated with the former idea,0,0,0,0.9834627509117126,0.986574113368988,0.9927089214324952,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1501319426,319,this should be !bannedpearltoggle,0,0,0,0.5952091217041016,0.9840030074119568,0.979897439479828,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1903306966,564,extra whitespace?,0,0,0,0.988006830215454,0.9648253917694092,0.9907791614532472,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1903307223,564,i don't believe packets support hashcode? did you check this before using hashset?,0,0,0,0.7300459146499634,0.8454585671424866,0.9880411624908448,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1903313324,564,they seem to.,0,0,0,0.9476472735404968,0.9884232878684998,0.9699733853340148,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1798450909,631,error handling here is not necessary since you are now using try-with-resources. this method can just be removed tbh,0,0,0,0.9870617985725404,0.9914235472679138,0.9841800928115844,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1798450969,631,[code block] etc for subsequent uses,0,0,0,0.988223910331726,0.992715060710907,0.995381772518158,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1798451133,631,[code block] etc,0,0,0,0.9877819418907166,0.9850224852561952,0.9949100613594056,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1798451815,631,"you can use executeupdate here and checked if the number of updated rows was 0 or 1 to see if the insert was actually successful. since you are using insert ignore you could be doing nothing (that is, trying to add a warp with the same name as an existing warp) and this method will still return true",0,0,0,0.9845052361488342,0.9916438460350036,0.9945316314697266,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1798452074,631,[code block] unique and not null are implied by primary key,0,0,0,0.9886338710784912,0.9899882674217224,0.9956594109535216,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1798463382,631,nit: messed up indentation,-1,-1,-1,0.972459614276886,0.9337249994277954,0.9855684638023376,-1.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1798463743,631,nit: this entire section is double-indented,0,0,0,0.9817217588424684,0.9693167805671692,0.9808093309402466,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1801697401,631,you don't need to call close here. the connection is automatically closed with try-with-resources,0,0,0,0.9745897650718688,0.9880066514015198,0.9934642910957336,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1801698913,631,can this be made all non-static? global state is difficult to keep track of.,0,0,0,0.9445608258247375,0.9477100372314452,0.9112509489059448,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1964810724,750,what is the point of calling this function twice?,0,0,0,0.9433565139770508,0.977371871471405,0.744797945022583,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1964816210,750,"this is a line of code that took me several hours to write. unfortunately, this is necessary because of the way that minecraft handles knockback and damage. removing this just introduces the bug where you can deal knockback with no cooldwon. i think that paper should be fixing this in 1.21.3 so that may be a better way.",0,0,-1,0.7744114995002747,0.708574116230011,0.7095125913619995,0.0,accept,majority_agreement,2
CivMC/Civ,review_comments,1931375039,746,i'd argue that the priority should be set to lowest so that the transformation is done as early as possible. any event handlers thereafter would then be deciding based on the amended command.,0,0,0,0.9847399592399596,0.9910250902175904,0.9856051802635192,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1931380285,746,"since you're doing length checks, i'd advocate doing an `indexof()` instead since that's arguably has a more obvious control flow (i can only speak to myself, but i had to look up the documentation for that version of split to see what the second parameter would do). [code block]",0,0,0,0.980152428150177,0.9830809235572816,0.9929717183113098,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1932775999,746,i'm not sure about this one. to me the split makes intuitive sense vs. what you've got there. i'll leave it up to the admins on whether or not they care.,-1,-1,0,0.6074652671813965,0.712118923664093,0.6227230429649353,-1.0,accept,majority_agreement,2
CivMC/Civ,review_comments,1504483244,334,debug print,0,0,0,0.9889692068099976,0.9562515020370485,0.9887174367904664,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1504793761,334,"this is not necessary and can be removed, because this event will only be fired once for a given horse entity (unlike creaturespawnevent)",0,0,0,0.9821826815605164,0.9935871362686156,0.9947524070739746,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1509999528,353,"doesn't this just skip all blocks, not just reinforced ones?",0,0,0,0.9376822710037231,0.9783127307891846,0.9897671341896056,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1510193949,353,no? we do multiple checks on the block first i.e if its air etc before creating the reinforcement,0,0,0,0.9863824844360352,0.9900341629981996,0.9899876713752748,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1511440357,353,"i don't understand, what is this command supposed to do if skipreins is true then?",0,-1,-1,0.923001229763031,0.589743971824646,0.513157308101654,-1.0,accept,majority_agreement,2
CivMC/Civ,review_comments,1512219354,353,"my bad, good catch",-1,-1,-1,0.9704158902168274,0.9897385239601136,0.9896728992462158,-1.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1536672866,387,"i don't think this is intuitive as a toggle, the command should be something like `/cmc togglechunkmetalogs` or `/cmc chunkmetalogs true`",0,0,0,0.9762271642684937,0.9727762937545776,0.9352356195449828,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1536673361,387,"the command shouldn't hold what's effectively global state itself, there should be some dedicated collection of feature flags be it the config, or secondarily derived from the config",0,0,0,0.98579341173172,0.9947803616523744,0.987488567829132,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1536675523,387,"we shouldn't be logging with guard conditions like this in modern java, we should be using the appropriate log level and a message supplier to prevent resources spent on extra checks and calculations. this also makes the above command unnecessary. e.g. [code block]",0,0,0,0.9759795665740968,0.993645429611206,0.9887434244155884,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1536687519,387,"i did some research into this and there's not really any good options for runtime log configuration like that, and since it's temporary i just went for something easy",0,0,0,0.4945594668388366,0.8621636033058167,0.9497653841972352,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1536687590,387,no it shouldn't but it was the easiest option for a very accessory feature,0,0,0,0.965116024017334,0.8975169658660889,0.9599610567092896,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1536687618,387,i'll change that,0,0,0,0.9844842553138732,0.972000777721405,0.9885972142219543,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1498392042,275,you should do the same with all of these components too :],0,-1,1,0.726155161857605,0.5496878623962402,0.9792376756668092,,review,no_majority_disagreement,0
CivMC/Civ,review_comments,1498398531,275,nah,0,0,1,0.9303480386734008,0.9429860711097716,0.6602054238319397,0.0,accept,majority_agreement,2
CivMC/Civ,review_comments,1509893468,351,"nit: remove newline, the if statement pertains directly to the variable declared above, they're tightly related so they should be tightly visually placed as well.",0,0,0,0.9876070618629456,0.9747565984725952,0.9936823844909668,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1509893482,351,"nit: remove newline, same as above.",0,0,0,0.9839090704917908,0.977238118648529,0.9937884211540222,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1509893567,351,"perhaps turn this into an early return instead of nesting, i.e. `if (destrein == null) { return }`.",0,0,0,0.986393392086029,0.9936051964759828,0.9892451763153076,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1912082177,713,"i know this is for consistency's sake, but do you really want to commit yourself to handling tickets of everyone wanting replacement compactor repair kits? :)",1,1,1,0.982730269432068,0.970331072807312,0.9723157286643982,1.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1912082263,713,oh.. right....,-1,0,0,0.548973798751831,0.5174669623374939,0.8210525512695312,0.0,accept,majority_agreement,2
CivMC/Civ,review_comments,1653792581,547,why not loreline.compact() without component.empty()?,0,0,0,0.9847770929336548,0.987097144126892,0.9911696910858154,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1653875752,547,it's what worked. i'm just going to close this for now because the item issue didn't occur in 1.20.6.,0,0,0,0.9814829230308532,0.898600161075592,0.9911974668502808,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1691553084,570,"this won't find the comment if the build failed, no?",0,0,0,0.9745716452598572,0.9107426404953004,0.9923354983329772,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1691607914,570,yes? but that seems to be the behavior already? it's probably worth adding a check and saying it failed anyway.,0,0,0,0.966257631778717,0.987659752368927,0.9848465919494628,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1699144074,570,"ok so i just confirmed it, because of the conditional statement on line 13, it will never run on a failed build",0,0,0,0.9826067090034484,0.9664036631584167,0.9894825220108032,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1684468526,568,"this is only the case for linux/unix, should be `.\gradlew.bat build` for powershell and i believe `gradlew.bat build` for cmd on windows?",0,0,0,0.9828398823738098,0.9947858452796936,0.9934260845184326,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1691975722,568,"sorry, missed this. powershell and cmd on windows 10 both accept `.\gradlew`",-1,-1,-1,0.9899360537528992,0.9895015358924866,0.9919260144233704,-1.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1496981358,262,just thought i'd put this here :p ![a link],1,1,1,0.9837434887886048,0.982568860054016,0.9952789545059204,1.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1496982576,262,"best part about this is, i followed the logic of the promote player command... which doesnt even use this either",0,0,1,0.9535642862319946,0.9132086634635924,0.827470600605011,0.0,accept,majority_agreement,2
CivMC/Civ,review_comments,1496983116,262,civ code d:,0,0,0,0.977882444858551,0.9537980556488036,0.9945926070213318,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1495161954,239,please don't do wildcard imports,0,0,-1,0.9131776690483092,0.7044551372528076,0.694542646408081,0.0,accept,majority_agreement,2
CivMC/Civ,review_comments,1495167100,239,thanks and apologies. was probably an auto format.,0,1,-1,0.7512229681015015,0.9679577946662904,0.784828782081604,,review,no_majority_disagreement,1
CivMC/Civ,review_comments,1495235417,239,wildcard,0,0,0,0.9274687767028807,0.9795337915420532,0.9909602403640748,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1495235461,239,wildcard,0,0,0,0.9274687767028807,0.9795337915420532,0.9909602403640748,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1501190381,321,why not delete this whole file?,0,0,0,0.91915100812912,0.9563944935798644,0.986706793308258,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1501201102,321,"i intend to add some utilities to it soon in another pr since they're outside the scope of this pr, and i figured deleting the file then remaking it is probably a bit extra, but i can amend this pr to delete the file if that's what you really want.",0,0,0,0.9829564094543456,0.977441132068634,0.991511881351471,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1501210376,321,yes i would delete the file,0,0,0,0.9839653968811036,0.9885053634643556,0.9915924072265624,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1501210796,321,"okay, if you're sure",0,0,0,0.97222238779068,0.8696424961090088,0.9857995510101318,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1929619604,740,why pnpm? let's stick to npm,0,0,0,0.964254915714264,0.9868897199630736,0.993075966835022,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1929619858,740,"npm has performance issues, and pnpm fixes the ballooning node_modules size issues as well. i recommend reading [a link]",0,0,0,0.9777228832244872,0.9865947961807252,0.9622947573661804,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1501085268,273,"this config section needs some work, as it stands the config options are confusing and it's not clear that `skybase` is added to `base`, and lacks the ability to disable subfeatures. i would arrange it like this: [code block] if sky materials are really needed to be different, [code block]",0,0,0,0.748443603515625,0.9303927421569824,0.6030075550079346,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1501089223,273,"this doesn't seem like it ignores transparent blocks, which it should. otherwise stuff like glass and leaves would cause it to not reach full speed.",0,-1,0,0.5955268740653992,0.600721538066864,0.955426812171936,0.0,accept,majority_agreement,2
CivMC/Civ,review_comments,1501094849,273,"this is intentional, a bonus is provided if you can't protect your rails like that.",0,0,0,0.9385568499565125,0.8992033004760742,0.9923553466796876,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1527104076,339,no copy necessary [code block],0,0,0,0.98786860704422,0.9897831082344056,0.995630145072937,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1527104350,339,could just `new playernames()` here instead of a static method and an anonymous class,0,0,0,0.9887535572052002,0.9940193891525269,0.9922866821289062,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1527104434,339,[code block] no async going on here anymore,0,0,0,0.9815912246704102,0.983922004699707,0.9919920563697816,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1826877269,639,is there a reason for removing this?,0,0,0,0.957798719406128,0.9887851476669312,0.9930076599121094,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1826877532,639,can just remove commented line,0,0,0,0.9879619479179382,0.9848533868789672,0.9948034882545472,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1826877771,639,the global chat command has no reason to suggest nl groups to chat in,0,0,0,0.987659752368927,0.9693720936775208,0.9885302186012268,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1527208926,350,indentation?,0,0,0,0.9771732091903688,0.9491462707519532,0.9903632998466492,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1527209064,350,"this function is a throwback from the java 7 days, you can do `new arraylist<>(invites.keyset())` now",0,0,0,0.9865478873252868,0.9940564632415771,0.994820237159729,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1527209092,350,same here: `new arraylist<>();`,0,0,0,0.9855066537857056,0.9924553632736206,0.9947622418403624,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1536676480,386,"is it ever possible that this event can be fired simultaneously, such as during low tps? if so i could imagine it causing some problems, and potentially more players falling through portals than before.",0,0,0,0.964756190776825,0.967011570930481,0.940785586833954,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1536687382,386,simultaneously with what? it runs at the end of a tick.,0,0,0,0.9626250267028807,0.9840810298919678,0.9799075126647948,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1597730872,512,change,0,0,0,0.978324830532074,0.935030996799469,0.9141039848327636,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1597732286,512,woops done,0,-1,-1,0.9215362668037416,0.8037042021751404,0.8747569918632507,-1.0,accept,majority_agreement,2
CivMC/Civ,review_comments,1524022271,356,should be all tcp,0,0,0,0.9830467104911804,0.9733091592788696,0.9936531782150269,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1524027049,356,"i wanted to specifically call out the service not the protocol to clue people into that being what it is, especially since people might not be familiar with the rabbitmq admin gui, but i can change this to be more clear",0,0,0,0.9711922407150269,0.9631808400154114,0.9876612424850464,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1524037145,356,might be worth adding the rabbitmq dashboard port too: [a link],0,0,0,0.971455216407776,0.9851880073547364,0.9921047687530518,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1741066165,619,"might be worth setting this to true, as then the feature can be merged without any actual change to the game, which can be a different discussion.",0,0,0,0.9786989688873292,0.9922204613685608,0.983544647693634,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1741161332,619,"very true, default value is now true",0,0,0,0.986019492149353,0.8541473746299744,0.9562848210334778,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1691550498,565,"ls as left shift is a little ambiguous here, how can we make this more understandable?",0,-1,0,0.9612537622451782,0.6539825201034546,0.9600458741188048,0.0,accept,majority_agreement,2
CivMC/Civ,review_comments,1691676571,565,i could change it to l+ls. or move all of them from l/r to left/right to be even more clear,0,0,0,0.9800482392311096,0.985634744167328,0.9845200777053832,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1801711541,565,"how about we make this three lines, one for each option so they don't need to be abbreviated?",0,0,0,0.9829974174499512,0.9890124797821044,0.9924389123916626,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1826877687,638,hiddenore stuff in bastion pr?,0,0,0,0.9869911074638368,0.9909377098083496,0.985069215297699,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1826877735,638,yeah it was necessary to get this to build. but i deleted this class anyway so it doesn't matter,0,0,0,0.6511078476905823,0.9687944650650024,0.9674900770187378,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1797295816,630,catus,0,0,0,0.9434674978256226,0.8287087082862854,0.989801824092865,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1964424630,765,whats the point in checking the block type here? also doesn't this add another point where a blocklist needs to be maintained?,0,0,0,0.9857741594314576,0.9926572442054749,0.9837427735328674,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1964439038,765,"it's necessary to check the block type here because there is no `logstripevent` or equivalent, so the event needs to be inferred from a right-click block interaction involving a log and an axe. and while this switch will need to be maintained, the event handler is no longer vulnerable to collateral changes.",0,0,0,0.9839969277381896,0.986169695854187,0.9942665696144104,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1499515016,311,plugin.getlifecyclemanager?,0,0,0,0.9873446822166444,0.9926510453224182,0.9949055910110474,0.0,accept,unanimous_agreement,2
CivMC/Civ,review_comments,1511513065,335,"maybe i'm just paranoid, but i'd defensively replace this with `if (event.gethand() != equipmentslot.hand)` instead.",-1,0,0,0.6967434287071228,0.688825249671936,0.7834399938583374,0.0,accept,majority_agreement,2
CivMC/Civ,review_comments,1526604903,371,an npe here will never happen because of the previous check,0,0,0,0.9835414290428162,0.986959993839264,0.987441897392273,0.0,accept,unanimous_agreement,2

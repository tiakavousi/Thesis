id,pr_number,user,created_at,body,distilbert_sentiment_label,distilbert_confidence
1385885426,5439,knqyf263,2023-11-08T02:32:57Z,"a single package can have multiple identifiers, like cpe and purl. it should be able to accommodate all of them. one idea is make `pkgidentifier` an array, but it is a bit bothering to access purl because it needs to iterate the array every time. what if simply adding identifiers as the field? [code block]",0,0.9192559719085693
1385887019,5439,knqyf263,2023-11-08T02:35:50Z,we used to need it in order to store bom-ref. i'm afraid that removing this field affects scanning somewhere. but we may no longer need it since we dropped some capabilities. i'll take a look.,0,0.7284348607063293
1386479013,5439,juan131,2023-11-08T11:33:23Z,"all right, i'll adopt this approach.",0,0.945641815662384
1395469096,5439,juan131,2023-11-16T10:16:55Z,i marked it as deprecated at [a link] instead of removing it,0,0.9863533973693848
1396638425,5439,DmitriyLewen,2023-11-17T03:06:11Z,why is there extra `1%3a` in this line?,0,0.972679615020752
1396641131,5439,DmitriyLewen,2023-11-17T03:12:15Z,looks like purl should contain [a link]: [a link],0,0.9801678657531738
1396660395,5439,DmitriyLewen,2023-11-17T03:26:09Z,"do we need this change? we can just add `purl.newpackageidentifier(filetype, newpkg)`: [code block]",0,0.9880423545837402
1396669181,5439,DmitriyLewen,2023-11-17T03:41:26Z,do we need to use pointer?,0,0.9853296875953674
1396670327,5439,DmitriyLewen,2023-11-17T03:44:08Z,if i understand correctly - we will remove `pkgref` later. but why we remove it here?,0,0.9817990660667419
1396673891,5439,DmitriyLewen,2023-11-17T03:53:00Z,if we can't build purl for package - we use uuid - [a link] in this case we will skip this uuid. perhaps we need to add uuid as in `pkgidentifier`?,0,0.9893369674682617
1396682801,5439,DmitriyLewen,2023-11-17T04:07:26Z,previous numbers should not be changed - [a link] [code block],0,0.9849604964256287
1396698237,5439,DmitriyLewen,2023-11-17T04:40:39Z,i played with your changes and found that you run `purl.newpackageidentifier` for each detected line. we need to call this function after package detection is complete.,0,0.9879775047302246
1396842552,5439,juan131,2023-11-17T08:11:20Z,that's a good question... it might be related with some weird encoding done at the function below: - [a link],-1,0.8386226892471313
1396846978,5439,juan131,2023-11-17T08:16:22Z,"we can include the distro & arch information by providing a valid metadata in the line below (by ensuring this function receives it as an argument): - [a link] but i wasn't able to find the way to have that info when the function is invoked, e.g.: - [a link]",0,0.9852262139320374
1396849043,5439,juan131,2023-11-17T08:18:42Z,please note `purl.newpackageidentifier` receives the package as second parameter,0,0.9879912734031677
1396852919,5439,juan131,2023-11-17T08:22:46Z,"no. to be honest, i don't have a strong opinion about this. in terms of performance it depends on the size of the structs, these two reads can add more light on this topic: - [a link] - [a link] i usually prefer pointers because it's easier to determine if something is set or not: it's easier to do `foo != nil` than `foo != customtype{}`",-1,0.7639021277427673
1396854118,5439,juan131,2023-11-17T08:24:01Z,"good catch, reverting it",1,0.9701125621795654
1396858663,5439,juan131,2023-11-17T08:28:38Z,"i don't think uuids are valid to identify known vulnerabilities, at least i mainly find references to use purl, cpe or swid: - [a link] - [a link]",0,0.9496601223945618
1396866884,5439,juan131,2023-11-17T08:37:06Z,"done, see [a link]",0,0.9842819571495056
1396867051,5439,juan131,2023-11-17T08:37:16Z,"done, see [a link]",0,0.9842819571495056
1396874436,5439,juan131,2023-11-17T08:44:16Z,do you mean after `parseapkinfo` is invoked? or even after that?,0,0.9867374300956726
1396978395,5439,DmitriyLewen,2023-11-17T09:28:57Z,yep. i know about this decode([a link] but i missed first `1`. after decoding - `pkg:rpm/openssl-libs:1.1.1k-4.el8` but we should to move epoch to qualifiers - [a link],0,0.9783049821853638
1396983674,5439,DmitriyLewen,2023-11-17T09:32:29Z,"but we don't have metadata in pkg (apk, rpm, etc.) analyzers. perhaps we can just remove this condition: [a link] do you remember why we need this condition?",0,0.9859721660614014
1396985497,5439,DmitriyLewen,2023-11-17T09:33:42Z,i missed it. thanks for showing me this.,1,0.967624306678772
1396997613,5439,DmitriyLewen,2023-11-17T09:43:00Z,it looks like we can just create a function `func(i pkgidentifier) empty() bool`.,0,0.9857182502746582
1397002496,5439,DmitriyLewen,2023-11-17T09:47:28Z,"we don't need to change purl/cpe. i'm worried this might get confusing because `layer` and `digest` don't use pointers. i think we should either use pointers for each structural field (layer, digest, pkgidentifier) or not use them at all. in this case i am for the second option",0,0.4985107481479645
1397004799,5439,DmitriyLewen,2023-11-17T09:49:18Z,but we also add `pkgidentifier` for `package` structure. this makes sense for users using `trivy fs -f json --list-all-pkgs` command.,0,0.9876921772956848
1397009114,5439,DmitriyLewen,2023-11-17T09:52:35Z,i think we can move this logic before adding `pkg` to `pkgs`: [a link] [a link],0,0.9868162274360657
1397009657,5439,DmitriyLewen,2023-11-17T09:53:03Z,can you also check dpkg and rpm for same problem?,0,0.9888750314712524
1397043157,5439,juan131,2023-11-17T10:22:11Z,imho that condition doesn't make much sense since `parsequalifier` isn't using `metadata`. am i missing sth?,0,0.8483816981315613
1397043969,5439,juan131,2023-11-17T10:22:53Z,done at [a link],0,0.9888259172439575
1397045223,5439,juan131,2023-11-17T10:23:57Z,this can be addressed with the change below: [code block],0,0.9881664514541626
1397141529,5439,juan131,2023-11-17T11:39:53Z,done at [a link],0,0.9888259172439575
1397142473,5439,juan131,2023-11-17T11:40:18Z,tried this at [a link],0,0.9877246022224426
1397142911,5439,juan131,2023-11-17T11:40:33Z,tried this at [a link],0,0.9877246022224426
1398641104,5439,DmitriyLewen,2023-11-20T04:02:31Z,i also don't see the need for this condition. let's take a look at this after removing this.,0,0.9676063656806946
1398667690,5439,DmitriyLewen,2023-11-20T05:07:04Z,looks like we need to update this test,0,0.9845474362373352
1398670876,5439,DmitriyLewen,2023-11-20T05:14:12Z,we need to think about `ref` field. perhaps we can mark it as deprecated and upgrade logic to use `pkgidentifier`. but it seems that this would be better done in another pr.,0,0.9800121188163757
1398674432,5439,DmitriyLewen,2023-11-20T05:21:21Z,"if i remember correctly, i removed all cases where we could get `pkgurl != nil && pkgurl.type == """"`. we can remove `pkgurl.type == """"` check.",0,0.9864354729652405
1398675466,5439,DmitriyLewen,2023-11-20T05:23:32Z,this function is tested indirectly. can we add small unit test for it?,0,0.9893847107887268
1399019654,5439,juan131,2023-11-20T10:53:22Z,done at [a link],0,0.9888259172439575
1399019749,5439,juan131,2023-11-20T10:53:26Z,done at [a link],0,0.9888259172439575
1399021738,5439,juan131,2023-11-20T10:55:03Z,yup.. i added a comment at `pkg/types/vulnerability.go` mentioning that's to be deprecated but i took no further action.,0,0.9452499151229858
1399025164,5439,juan131,2023-11-20T10:58:02Z,done at [a link],0,0.9888259172439575
1399034290,5439,juan131,2023-11-20T11:05:50Z,"i understand the use of the uuid within the sbom doc since you can reference it but it doesn't add much value outside it, right? i think we should omit it.",0,0.9812397956848145
1399982691,5439,DmitriyLewen,2023-11-21T03:21:53Z,"okay, that makes sense. if we need it, we can always add it.",0,0.9687827229499817
1399985634,5439,DmitriyLewen,2023-11-21T03:27:59Z,"if i remember correctly, we simply copy `ref` from `package` to `detectedvulnerability`. it looks more logical to add comment for parent (i mean the first element of this chain (`package`)). but i think the best way is to add a comment in both places.",0,0.9840293526649475
1399996916,5439,DmitriyLewen,2023-11-21T03:51:02Z,it is not possible: [a link],0,0.9305070042610168
1400001325,5439,DmitriyLewen,2023-11-21T04:01:05Z,i don't think this makes sense. we already tried to create purl in `analyzer`. for sdpx we can remove this and leave `packageurl == nil`. in this case we simply don't include purl to spdx package: [a link],0,0.9678620100021362
1400003389,5439,DmitriyLewen,2023-11-21T04:05:11Z,can you check case if we just remove this? it looks like we will create uuids for packages without `pkg.identifier`.,0,0.9890817403793335
1400003821,5439,DmitriyLewen,2023-11-21T04:06:17Z,we don't seem to expect any changes in the desired results for this test.,0,0.9183816313743591
1400160845,5439,juan131,2023-11-21T08:02:48Z,addressed at [a link],0,0.9877157807350159
1400160889,5439,juan131,2023-11-21T08:02:50Z,addressed at [a link],0,0.9877157807350159
1400160970,5439,juan131,2023-11-21T08:02:54Z,addressed at [a link],0,0.9877157807350159
1400161176,5439,juan131,2023-11-21T08:03:06Z,addressed at [a link],0,0.9877157807350159
1400330283,5439,juan131,2023-11-21T10:08:00Z,done at [a link],0,0.9888259172439575
1401421097,5439,knqyf263,2023-11-22T02:14:17Z,"we need the file path in bom-ref. while bom-ref must be unique, purls can conflict. this is another example where bom-ref is different from purl.",0,0.9811813235282898
1401422155,5439,knqyf263,2023-11-22T02:16:26Z,looks like the purl is now wrong. the type should be `deb`. [a link],0,0.9728657603263855
1401643537,5439,juan131,2023-11-22T08:00:53Z,"this is sth that pointed out on this [a link] but the problem is that we don't have the [a link] info in pkg (apk, rpm, etc.) analyzers. after i moved the purls generation to the ""analysis"" part so `pkgidentifier` is also part of the `package` type per your suggestion, i was unable to find a way to obtain it. this is the reason why [a link] isn't receiving any metadata argument. i'd appreciate help on this because i don't really know how to achieve it.",0,0.6235368251800537
1401676669,5439,juan131,2023-11-22T08:31:16Z,fixed at [a link],0,0.9883076548576355
1402916545,5439,DmitriyLewen,2023-11-23T04:55:58Z,"we can move logic to creating purl's for pkg managers (dpg, rpm, apk) to [a link]. this will allow us to create simpler code (we build purl in 1 place for all pkgs, instead of collecting purl for each package separately). also we will have info about os.",0,0.985224723815918
1403293720,5439,juan131,2023-11-23T12:03:23Z,"proposal implemented at [a link] this proposal doesn't moves entirely the pkg identifier generation to handler but overwrites the work done by pkg managers when it's possible. this way, we also have pkg identifiers in distroless & similar images that may use pkg managers without an actual os.",0,0.9876521825790405
1403575496,5439,juan131,2023-11-23T16:19:31Z,i'd appreciate if you could re-generate amd64 golden images by the way.,1,0.676863431930542
1403919712,5439,DmitriyLewen,2023-11-24T04:08:53Z,but this golden file still has wrong purl: [a link] also i left some comments below,0,0.6775630116462708
1403919753,5439,DmitriyLewen,2023-11-24T04:08:57Z,i think it is better to use separate package.,0,0.9789712429046631
1403920968,5439,DmitriyLewen,2023-11-24T04:12:24Z,`result` and `blob` are pointers. but if i remember corerctly - we only need to change `blob` [a link],0,0.9877282381057739
1403921750,5439,DmitriyLewen,2023-11-24T04:14:41Z,i will do that after we finish with handler logic.,0,0.9842183589935303
1404240540,5439,juan131,2023-11-24T11:15:41Z,is the fluentd image used to generate `trivy/integration/testdata/fluentd-multiple-lockfiles.cdx.json.golden` distroless?,0,0.9713976979255676
1404240782,5439,juan131,2023-11-24T11:15:57Z,done at [a link],0,0.9888259172439575
1404240834,5439,juan131,2023-11-24T11:16:00Z,done at [a link],0,0.9888259172439575
1411571190,5439,DmitriyLewen,2023-12-01T03:53:46Z,sorry for delay. we use `testdata/fixtures/images/fluentd-multiple-lockfiles.tar.gz` image: [a link],-1,0.987953782081604
1411573187,5439,DmitriyLewen,2023-12-01T03:58:34Z,this name can be confusing. maybe something like `ospkgid`?,-1,0.5116260051727295
1411574928,5439,DmitriyLewen,2023-12-01T04:01:31Z,"i think we need to mode this function to new handler. `purl` package generates purls, but it shouldn't overwrite fanal structure.",0,0.9880545735359192
1411794899,5439,juan131,2023-12-01T08:54:25Z,"i've trying to figure out why it uses `pkg:dpkg` instead of `pkg:deb/debian`. to do so, i introduced the log below in my branch: [code block] as we can see below: [code block] the scanner only recognizes os family in one of the layers containing packages info from fluentd image. therefore, the packages detected in the other layer are not adapted with the right purl. i need further advice on how to address this.",0,0.9741722345352173
1411795414,5439,juan131,2023-12-01T08:54:54Z,fixed at [a link],0,0.9883076548576355
1411795542,5439,juan131,2023-12-01T08:55:01Z,fixed at [a link],0,0.9883076548576355
1411795681,5439,juan131,2023-12-01T08:55:08Z,fixed at [a link],0,0.9883076548576355
1413471626,5439,DmitriyLewen,2023-12-04T07:39:36Z,"hm... right. take a look at this feature for merging packages, licenses, secrets, etc. from all layers: [a link]",0,0.9809078574180603
1414111787,5439,juan131,2023-12-04T15:54:43Z,thanks ! this inspired me to address the issue in this commit: [a link],1,0.9839088320732117
1414880912,5439,DmitriyLewen,2023-12-05T04:58:18Z,hm... why we got new target?,0,0.6363375782966614
1414881571,5439,DmitriyLewen,2023-12-05T04:59:38Z,same,0,0.9733930826187134
1414894031,5439,DmitriyLewen,2023-12-05T05:19:00Z,"i'm not sure if one layer should affect another layer before saving to cache. i can't think of an example right now, but my intuition tells me we don't need to do this. i think it's better to update info after we take all layers from cache. can you share your opinion if you have time?",0,0.7865978479385376
1414894791,5439,DmitriyLewen,2023-12-05T05:20:16Z,perhaps this is system file and we didn't remove it.,0,0.9855567812919617
1414991653,5439,juan131,2023-12-05T07:32:59Z,"no problem on that, we can keep pushing the original layer to the cache by adding this small change: [code block]",0,0.9858124256134033
1415046725,5439,juan131,2023-12-05T07:53:43Z,"honestly, i don't know how this appeared here but i don't see how it can be related to my changes.",-1,0.6411808133125305
1423401825,5439,DmitriyLewen,2023-12-12T04:54:38Z,i checked this case. this problem seems to occur because `result` is nil: [a link] handlers don't work,0,0.861882209777832
1423464277,5439,DmitriyLewen,2023-12-12T06:10:34Z,i thought about this case and found 1 more way. i made these changes in another branch (i did not update client/server mode and sbom) – [a link] i think this way is easier. we add purl for os packages when filling out `layer` field for os packages: [a link] can you take a look?,0,0.960282027721405
1423467929,5439,DmitriyLewen,2023-12-12T06:14:14Z,1 more possible way - [a link],0,0.9854633808135986
1423810140,5439,juan131,2023-12-12T10:44:03Z,done at [a link],0,0.9888259172439575
1423810244,5439,juan131,2023-12-12T10:44:10Z,done at [a link],0,0.9888259172439575
1423810431,5439,juan131,2023-12-12T10:44:20Z,applied your suggestion at [a link],0,0.9867792129516602
1424958004,5439,DmitriyLewen,2023-12-13T07:38:46Z,this purl is broken. but this problem is not related to this pr. created #5783 to fix this.,0,0.8339220881462097
1424986992,5439,DmitriyLewen,2023-12-13T08:09:38Z,we do this when merge layers. it doesn't make sense.,-1,0.6526602506637573
1424987858,5439,DmitriyLewen,2023-12-13T08:10:28Z,same for `dpkg` and `rpm`,0,0.9845985174179077
1424991491,5439,DmitriyLewen,2023-12-13T08:14:10Z,use the correct purl row here.,0,0.9853675961494446
1424992253,5439,DmitriyLewen,2023-12-13T08:15:01Z,same for all inputs in this test file.,0,0.9870187044143677
1424993946,5439,DmitriyLewen,2023-12-13T08:16:43Z,as for image test - correct purls in this test file.,0,0.9871740341186523
1424994658,5439,DmitriyLewen,2023-12-13T08:17:28Z,same,0,0.9733930826187134
1424996086,5439,DmitriyLewen,2023-12-13T08:18:53Z,same,0,0.9733930826187134
1425010064,5439,DmitriyLewen,2023-12-13T08:31:53Z,we need to add logic for `apk` from imgconf - [a link] let me time think about this.,0,0.9794996976852417
1425010614,5439,DmitriyLewen,2023-12-13T08:32:21Z,do we need these changes?,0,0.9849812984466553
1425011501,5439,DmitriyLewen,2023-12-13T08:33:13Z,looks like these changes from previous solution.,0,0.9839629530906677
1425013352,5439,DmitriyLewen,2023-12-13T08:34:52Z,remove this?,0,0.9706291556358337
1425021789,5439,DmitriyLewen,2023-12-13T08:39:54Z,#5784,0,0.9718465209007263
1425195743,5439,juan131,2023-12-13T11:03:50Z,done at [a link],0,0.9888259172439575
1425195963,5439,juan131,2023-12-13T11:04:01Z,done at [a link],0,0.9888259172439575
1425196134,5439,juan131,2023-12-13T11:04:07Z,done at [a link],0,0.9888259172439575
1425196369,5439,juan131,2023-12-13T11:04:18Z,done at [a link],0,0.9888259172439575
1425196515,5439,juan131,2023-12-13T11:04:24Z,done at [a link],0,0.9888259172439575
1425196657,5439,juan131,2023-12-13T11:04:29Z,done at [a link],0,0.9888259172439575
1425196881,5439,juan131,2023-12-13T11:04:36Z,done at [a link],0,0.9888259172439575
1425196995,5439,juan131,2023-12-13T11:04:42Z,done at [a link],0,0.9888259172439575
1425197312,5439,juan131,2023-12-13T11:04:58Z,thanks,1,0.6094269156455994
1425374603,5439,juan131,2023-12-13T13:43:21Z,done at [a link],0,0.9888259172439575
1426234244,5439,DmitriyLewen,2023-12-14T06:35:54Z,all previous packages are retained. [code block],0,0.9877912998199463
1426351464,5439,juan131,2023-12-14T07:44:24Z,awesome!,1,0.9910373687744141
1426351686,5439,juan131,2023-12-14T07:44:40Z,done at [a link],0,0.9888259172439575
1821325001,7732,simar7,2024-10-29T18:07:24Z,`scanner engine but is lacking relevant security information needed to make security detections and recommendations. ` we repeat this in the air gap doc as well. is this intentional?,0,0.9582810401916504
1821328368,7732,simar7,2024-10-29T18:10:10Z,i would remove specific versions from this because they will get out of date easily. already the check-db is at default tag of 1. [code block],0,0.9850833415985107
1821332473,7732,simar7,2024-10-29T18:13:36Z,comma splice [code block],0,0.9860196113586426
1821356375,7732,simar7,2024-10-29T18:33:15Z,formatting [code block],0,0.9861038327217102
1821359289,7732,simar7,2024-10-29T18:35:42Z,"you can also add the checks db from [a link] `""mediatype"": ""application/vnd.oci.image.manifest.v1+json""`",0,0.9881553649902344
1821366363,7732,simar7,2024-10-29T18:41:39Z,fixing table borders [code block],0,0.987652063369751
1821366981,7732,simar7,2024-10-29T18:42:07Z,should we separate out the three dbs into their own rows?,0,0.9803895354270935
1822121564,7732,itaysk,2024-10-30T08:34:35Z,i thought it's worth reintroducing the motivation since someone might be reading one doc and not the other. i you think it's unnesessary i can remove the intro from the air gap doc.,0,0.9665066599845886
1822129367,7732,itaysk,2024-10-30T08:40:23Z,"actually i don't like adding extra spaces and dashes in markdown, it makes editing very annoying",-1,0.9886587262153625
1824017702,7732,nikpivkin,2024-10-31T07:44:53Z,should be `ghcr.io/aquasecurity/trivy-checks` here?,0,0.9878283739089966
1824019171,7732,nikpivkin,2024-10-31T07:45:53Z,why are some images with tags and some without?,0,0.9400120377540588
1824025903,7732,nikpivkin,2024-10-31T07:51:20Z,the database will be loaded from the next repository only in case of a temporary error. (429 status and some 5xx) [a link],0,0.9893490076065063
1824037010,7732,itaysk,2024-10-31T08:02:58Z,"it's mentioned here generally and more detailed later in the flags documentation. but ok, added here too",0,0.9824745059013367
1824136258,7732,knqyf263,2024-10-31T09:24:24Z,"trivy-java-db is not used for pom scanning, and also needed for sbom. [code block]",0,0.9895750880241394
1824139112,7732,knqyf263,2024-10-31T09:26:29Z,shouldn't we mention which one is the default?,0,0.9729194641113281
1824141840,7732,knqyf263,2024-10-31T09:28:25Z,i think it's more straightforward to aggregate them by artifacts so users can understand which address they can use for secondary. - trivy-db - ghcr.io/aquasecurity/trivy-db (default) - aquasec/trivy-db - public.ecr.aws/aquasecurity/trivy-db - trivy-java-db - ghcr.io/aquasecurity/trivy-java-db (default) - ... --,0,0.961118757724762
1824144313,7732,knqyf263,2024-10-31T09:30:22Z,it's repeated. [code block],0,0.986406147480011
1824145174,7732,knqyf263,2024-10-31T09:31:03Z,"we call it ""checks bundle"" in all other places. do we want to rename it officially?",0,0.9836920499801636
1824146572,7732,knqyf263,2024-10-31T09:32:09Z,the git protocol is not used for vex repositories. [code block],0,0.9874109625816345
1824147744,7732,knqyf263,2024-10-31T09:33:02Z,adding a link to the page about self-hosting?,0,0.9833933711051941
1824151665,7732,knqyf263,2024-10-31T09:36:11Z,"a comma also works, but the repeated flags may be easier to understand the intention. [code block]",0,0.9869422912597656
1824296252,7732,itaysk,2024-10-31T11:28:10Z,"i thought that the authoritative section is this one, which describes all the db flags, and the db locations section on top should point here, not the other way around.",0,0.9852489829063416
1824298409,7732,itaysk,2024-10-31T11:30:13Z,i'm fine with it.,0,0.9246673583984375
1824301936,7732,itaysk,2024-10-31T11:33:46Z,"i'm fine with making the change, but just thinking users might have a mirror preference based on their infrastructure, for example an aws customer would probably prefer ecr for all of the images.",0,0.9715356230735779
1824304998,7732,itaysk,2024-10-31T11:36:46Z,"i thought that all official repos should be used by default, in the order specified. but i realize this is not the case.",0,0.8369308114051819
1824314762,7732,knqyf263,2024-10-31T11:46:23Z,"i think you named it ""checks bundle."" what do you think?",0,0.9841444492340088
1825163703,7732,simar7,2024-10-31T21:06:09Z,yeah checks bundle is good with me.,1,0.7393147349357605
1825388091,7732,knqyf263,2024-11-01T03:25:54Z,"is calling it ""checks database"" in this pr. we should be consistent in what we call it within the project. either is fine for me. - checks bundle - checks database note we already have a flag `--checks-bundle-repository` and need to rename it to `--checks-db-repository` if we'll go with checks database. [code block]",0,0.9599742293357849
1832129641,7732,knqyf263,2024-11-07T06:33:21Z,need a newline ![a link] [code block],0,0.958742082118988
1832132852,7732,knqyf263,2024-11-07T06:37:20Z,does docker work for this purpose?,0,0.9839644432067871
1832133236,7732,knqyf263,2024-11-07T06:37:48Z,i'd mention [a link] as we usually use it.,0,0.98710697889328
1832133778,7732,knqyf263,2024-11-07T06:38:31Z,"need to add ""self-hosting trivy's databases""",0,0.9860325455665588
1832136875,7732,knqyf263,2024-11-07T06:42:32Z,"this page also explains network connectivity, but it's not the main content. this document is for those who want to run trivy under the restricted network. the title should be ""advanced network scenarios,"" ""restricted networks,"" or something similar.",0,0.9799096584320068
1832138699,7732,knqyf263,2024-11-07T06:44:46Z,it's broken now. need a tab. ![a link],-1,0.4867493510246277
1832140803,7732,knqyf263,2024-11-07T06:47:23Z,"the first section is an artifact name ""vulnerability & java databases"", but this section is a scanner name. we should rename ""vulnerability & java databases"" to ""sbom & vulnerabiliity scanning"" or rename this to ""iac checks"" for consistency.",0,0.9883838891983032
1832142944,7732,knqyf263,2024-11-07T06:49:48Z,"if we use the term ""misconfiguration database"", shouldn't it be ""embedded misconfiguration database""?",0,0.9612000584602356
1832143501,7732,knqyf263,2024-11-07T06:50:18Z,ditto [code block],0,0.9835489988327026
1832146441,7732,knqyf263,2024-11-07T06:53:45Z,"it's already described in ""trivy's databases"". imo, we should link to the page rather than repeat repository locations.",0,0.9863134622573853
1832148419,7732,knqyf263,2024-11-07T06:56:09Z,i don't think we will set all of them as the default repositories shortly. we should mark which one is the default for now.,0,0.9827409386634827
1833188766,7732,itaysk,2024-11-07T18:44:21Z,"since the intro says ""the rest of this document details each resource's connectivity requirements and relevant configuration options."" i'll go with ""misconfiguration checks database""",0,0.9876656532287598
1833193676,7732,itaysk,2024-11-07T18:48:35Z,"my implicit thought process was the checks from the misconfiguration db are embedded as a workaround to avoid loading the db, but it's very semantic and doesn't really matter.",0,0.8276430368423462
1833201072,7732,itaysk,2024-11-07T18:54:57Z,"my implicit thought process was that the this doc discusses all the network requirements and implications, so when discussing these dbs we need to mention where they are located (in addition to other network related info). in the dbs doc, i didn't intend to dive into network requirements, but i wanted to say that we push the dbs to several registries and are able to fallback between them. so there might be slight overlap, only the name of the images is repeated, but in different context that contribute the the doc's purpose. if we are removign one in favor of the other, then i'd need to move the related content with it, for example if i take your suggestion, i would need to move the protocol, hosts, and related info to the db docs together with the names of images.",0,0.9519585967063904
1833842493,7732,knqyf263,2024-11-08T07:39:44Z,"can you elaborate on that? it makes sense that the overview is on the db page and the details are on this page, but why do we have to move everything?",0,0.9830777049064636
1833848784,7732,knqyf263,2024-11-08T07:45:32Z,"i think we should define terms regarding misconfigurations. what is the misconfiguration database? is it pointing to the bundle.tar.gz? after extracting it, do we call it checks? embedded one is not archived, so we call it checks? i don't have an opinion, but it would be a good idea to define the terminology and share it within the project.",0,0.9459151029586792
1834738823,7732,itaysk,2024-11-08T16:53:46Z,i think i misunderstood you earlier. i made the change that i think you suggested,-1,0.5296502709388733
1835115149,7732,simar7,2024-11-08T22:25:09Z,i'm also fine with either.,0,0.9489957690238953
1838783376,7732,wkoot,2024-11-12T21:16:42Z,what about the [a link]?,0,0.9837679266929626
1838790985,7732,wkoot,2024-11-12T21:23:39Z,"this explanation is weird; ""the order"" is one single registry, while these ""alternative registries"" is not explained. if this refers to the locations named above, then it would make more sense to say that ghcr is the primary source and the other locations listed above would be attempted in case of transient errors.",-1,0.975155770778656
1838794060,7732,wkoot,2024-11-12T21:26:24Z,should vex repos not be treated in this section?,0,0.9761097431182861
1838796808,7732,wkoot,2024-11-12T21:28:49Z,"it makes sense to explain what will happen in this case; explicitly state that the local registry is tried first, and if it does not respond, then the gitlab source is attempted",0,0.9875195026397705
1838798566,7732,wkoot,2024-11-12T21:30:33Z,the `--offline-scan` option is not explained in this entire page,0,0.9865846037864685
1838801012,7732,wkoot,2024-11-12T21:32:56Z,"the `alpine` image is used in two other examples, i think it's a nice example because it is a reasonable copy-paste tryout",1,0.680934488773346
1838803284,7732,wkoot,2024-11-12T21:35:20Z,"please explain the use case for the ""only update"" option. does it fill a cache (if so, which cache) which can be used in a succession of scans (i.e. iterating over a set of containers without attempting updates all the time)?",0,0.9890250563621521
1838804730,7732,wkoot,2024-11-12T21:36:52Z,"it is strange that there is no entry for the `check` db, while the previous sections all mention it. perhaps address the reason as to why it isn't a possible option",0,0.7742952704429626
1838807001,7732,wkoot,2024-11-12T21:39:05Z,"strange that this is called `vuln-db`, but i guess it's because `db` would be too confusing. likewise, the `checks-bundle` is always `checks` in the more lengthier parameters. is there a separate ticket or discussion which treats the naming of these options?",0,0.8523821234703064
1838811830,7732,wkoot,2024-11-12T21:43:32Z,"indentation below this block is probably incorrect, if so, the change should be undone",0,0.9713620543479919
1838812208,7732,wkoot,2024-11-12T21:43:57Z,"indentation below this block is probably incorrect, if so, the change should be undone",0,0.9713620543479919
1838813678,7732,wkoot,2024-11-12T21:45:33Z,"this line makes more sense in the parent section, in an explanation around line 42 just after `surgically populate the trivy cache directory with them.`",0,0.9819289445877075
1838814848,7732,wkoot,2024-11-12T21:46:41Z,"in `db.md`, this is referred to this as the `misconfiguration db`",0,0.9581918120384216
1838818073,7732,wkoot,2024-11-12T21:49:59Z,then why is it treated in a separate section and not together with the vulnerability and java dbs?,0,0.9755918383598328
1838819329,7732,wkoot,2024-11-12T21:51:18Z,does the `--offline-scan` parameter affect these https requests?,0,0.9876546263694763
1838820377,7732,wkoot,2024-11-12T21:52:28Z,"when the vex hub sources are overridden (e.g. with a local repo), are calls to github still made or will they be omitted?",0,0.9855131506919861
1838821944,7732,wkoot,2024-11-12T21:54:03Z,is there a reference to a page that explains in which cases this might happen? it seems rather arbitrary although it would be important to know when implementing an air gapped environment,0,0.9695386290550232
1838826118,7732,wkoot,2024-11-12T21:58:19Z,"this seems weird to note in an air gapped or otherwise restricted network environment, it should be explained on `configuration/db.md`. instead, it might be useful to address a restricted network environment which implements rate limiting (i.e. the local infrastructure instead of the public infrastructure).",-1,0.9092043042182922
1850042174,7732,itaysk,2024-11-20T10:28:52Z,"i wanted to differentiate ""databases"" from ""external resources"". db is maintained by the trivy team and is fundemental to trivy operation. other external resources might be used by trivy like maven central, which are not considered ""databases"". vex repositories currently fall into the latter category i think",0,0.9731495976448059
1850043786,7732,itaysk,2024-11-20T10:30:00Z,the section was rewritten lmk if it's still unclear,0,0.9878316521644592
1850044950,7732,itaysk,2024-11-20T10:30:48Z,see response to other similar comment,0,0.9813743233680725
1850136390,7732,itaysk,2024-11-20T11:19:24Z,"i think the example is self explanatory, especially since it the preceding example is exactly the same jsut with one flag, and is supposedly clear. this example just shows how specify multiple values",0,0.9820575714111328
1850141996,7732,itaysk,2024-11-20T11:23:47Z,"this section relates only to vex hub, not to custom vex repositories. when using custom vex repositories there are no calls to github, do you think that isn't clear?",0,0.9851672053337097
1850148317,7732,itaysk,2024-11-20T11:28:42Z,"no. i think the documentation is accurate about this, however confusing the name of offline-scan is. i have raised this issue here: [a link]",0,0.9606067538261414
1850149156,7732,itaysk,2024-11-20T11:29:25Z,the section now shows which external resource is used by which trivy feature,0,0.9848010540008545
1850152284,7732,itaysk,2024-11-20T11:31:56Z,"the document was renamed to ""connectivity and network considerations"". it should be noted that all external resources can be unstable. in fact, we experienced stability issues with maven central too in the past.",0,0.9748029112815857
1855451208,7732,itaysk,2024-11-24T13:30:23Z,yes. updated,0,0.9782312512397766
1855452049,7732,itaysk,2024-11-24T13:34:28Z,added. cc:,0,0.9843207597732544
1855452338,7732,itaysk,2024-11-24T13:36:07Z,agree. i also mention this in several previous issues (that we need to standardize the names of databases) cc . for now that state is accurate,0,0.9683930277824402
1855452761,7732,itaysk,2024-11-24T13:38:25Z,"this moved to a new doc, but i checked that the tabs rendering works",0,0.9876006841659546
1855452804,7732,itaysk,2024-11-24T13:38:39Z,see other comment,0,0.9847960472106934
1855453044,7732,itaysk,2024-11-24T13:39:53Z,i think it reads ok now in the self-hosting document,0,0.9814013838768005
1855453417,7732,itaysk,2024-11-24T13:41:18Z,i didn't see this comment earlier but already merged them :),1,0.9429960250854492
1855931383,7732,knqyf263,2024-11-25T06:56:18Z,they deprecated container registry and migrated to artifact registry. [code block],0,0.9894211292266846
1855960786,7732,knqyf263,2024-11-25T07:19:43Z,do you think it is self-hosting?,0,0.9823234677314758
1856248338,7732,itaysk,2024-11-25T09:43:11Z,"yes. i initially made this doc only about oci hosting like you suggested but i couldn't help thinking it's exactly the same use case and motivation as cache-population, just different technique, so i put them together. i also added other self-hosting advice for example for vexhub. so the current structure is like: 1. network connectivity doc - explains why trivy access the internet and documents all external resources details 2. self-hosting - explains how to run trivy without internet access (should address all external resources exaplained in 1) 3. db doc - documents trivy's ""native"" databases (owned and maintained by trivy and cruicial to it's functioning), and the flags related to db management. p.s i even considered making the self-hosting guide into tutorials",0,0.8867103457450867
1856386362,7732,knqyf263,2024-11-25T10:54:42Z,"![a link] ""hosting"" sounds like accessing the data over the network. but i'll update it later as i want to re-add ""air-gapped environment"". i saw many people using trivy in air-gapped environments. we need a single page for them.",0,0.8357616066932678
1856393983,7732,knqyf263,2024-11-25T10:59:45Z,"i don't think it's resolved. i want to make a decision on terminology excplicitly. otherwise, ""check"", ""policy"" ""bundle"" and ""database"" will be mixed up in the document in the future. also, as i mentioned, we need to rename the cli flag of `--checks-bundle` if we change the term. also, there are several places calling it ""checks bundle"". [a link] [a link]",0,0.9725621342658997
1856423997,7732,knqyf263,2024-11-25T11:14:22Z,"i discussed with ai and now would like to vote for ""bundle"" as below: - check: rego file - built-in checks: rego files from trivy-checks - custom checks: user-defined rego files - checks bundle: bundle.tar.gz from trivy-checks - embedded checks: rego files embedded into the binary but i just want to make them consistent in the project. any others are also fine for me.",0,0.5875213146209717
1856450172,7732,itaysk,2024-11-25T11:31:41Z,"i don't mind changing the name or explicitly call it ""air gapped"" but i do think hosting oci image in private registry or manually populating the cache is 100% same use case, don't you think?",0,0.942931592464447
1856468662,7732,itaysk,2024-11-25T11:45:35Z,"this terminology list makes sense to me.. but i think we already use it this way so not sure what is the change you are suggesting 1. policy -> check: was discussed before (i can find the issue) 2. built-in/custom/embedded: it only makes sense to contextualize when needed, i think we use this terminology this way already. 3. bundle: this is opa terminology that i believe we borrowd which is fine, when applied to the distributable tar.gz. i'm trying to clarify your feedback, is it against using the word ""database"" for checks? if so, the list doesn't address this case, what is your suggstion?",0,0.6801056265830994
1856507303,7732,knqyf263,2024-11-25T12:09:08Z,"yes, i believe this is how we use terms now, but i wanted to ensure we're on the same page. and then, 1. do we all agree to add the term ""database""? 2. if so, how will we update the terminology?",0,0.8635302782058716
1857234502,7732,simar7,2024-11-25T19:27:21Z,"specially for the suggestion that you made above, i'm not sure if we need to change the terminology to use ""database"". what you mentioned [a link] makes sense to me and is the current terminology that we agree on. if so, is there any action item that still needs to addressed out of this?",0,0.967712938785553
1857781669,7732,knqyf263,2024-11-26T05:11:50Z,"this pr introduces several new terms, like [a link], [a link] and [a link]. i want to clarify what it refers to and whether we agree on the term. if we prefer [a link], we should delete ""misconfigurations database"" or things like that from this pr.",0,0.9827976226806641
1857884812,7732,itaysk,2024-11-26T06:39:39Z,how should we call it then?,0,0.9661821722984314
1857938613,7732,knqyf263,2024-11-26T07:19:29Z,"i don't probably understand your suggestion. what is ""misconfigurations database""? i thought it was trying to replace ""checks bundle"". according to the conclusion that we'd stay with the current terminology, we continue to use ""checks bundle"" instead of ""misconfigurations database"". but i'm confused with your question. does ""misconfigurations database"" mean something new?",-1,0.9047214388847351
1857996716,7732,itaysk,2024-11-26T08:04:35Z,"ok, i thought that we call all the trivy's native sources of information - databases, regardless of their underlying technology or file format. i thought bundle is just a technical term we inharited from opa to refer to the file format (specified by opa), but we still call it checks database when referring to it's functionality in trivy, so i didn't view those terms as mutually exclusive. i don't mind calling it checks bundle everywhere, if that's what you suggest (but i also think it's not benefiting the user experience). do you also think we should remove it from the databases page?",0,0.8752015233039856
1858014322,7732,knqyf263,2024-11-26T08:16:32Z,"oh, i didn't know that. i thought ""checks database"" was introduced in this pr. where do we use the term in trivy? since we already use ""checks bundle"" in the documentation and have a cli flag ""--checks-bundle-repository"", it's user-facing. we should use either ""checks bundle"" or ""checks database"". if we go for ""checks database"", we should delete ""checks bundle"" and vice versa. btw, i'd propose calling the external data ""scan assets"" instead of ""databases"". then, it's natural to keep ""checks bundle"" under the page. [a link]",0,0.8412675857543945
1858059550,7732,itaysk,2024-11-26T08:48:11Z,"i wrote that *i thought* we still call it checks database.. probably my misunderstanding about scan assets, i think i went in this direction with the connectivity considerations doc where i called these ""external resources"" to that are required by trivy. but to clarify your intention - do you consider vex hub and/or maven central as scan assets? how would you refer to (for example) the vex hub file (not a database i suppose)? about the databases page - it was originally created in order to document the relevant trivy options. the options groups today include ""db options"" for just vulnerability dbs options, ""vulnerabilities scanner"" which doesn't have any vulnerability dbs options, and ""misconfigurations scanner"" options which includes checks and checks bundle related options. do you suggest to change this as well?",0,0.9109572172164917
1858166226,7732,knqyf263,2024-11-26T09:55:05Z,"hmm. and should be more familiar with that. i've personally never seen that. i defined ""scan assets"" as external data that trivy downloads and uses during scanning. [a link] therefore, vex hub is an asset as trivy downloads it during scanning, but any api call, like maven central, is not an asset. we should also mention api calls on the network connectivity page, though. however, i'd put this discussion aside. i'll open a follow-up pr to share my suggestion. we can discuss ""checks database"" or ""checks bundle"" here.",0,0.8439237475395203
1858177034,7732,knqyf263,2024-11-26T10:01:38Z,"i found one use, but i think it's a mistake. i now understand why used ""misconfiguration database"". [a link]",-1,0.5936806797981262
1858182061,7732,knqyf263,2024-11-26T10:04:47Z,"i thought ""misconfiguration database"" was a newly introduced term. thought ""misconfigurations database"" was already used and just reused it. most pages call it a checks bundle. so, a checks bundle is the canonical term, imo. i think we should comply with that.",0,0.9737387299537659
1858189037,7732,itaysk,2024-11-26T10:09:19Z,so next steps to merge this pr - 1. change checks db to checks bundle 2. change databases page to scan assets does that make sense to you?,0,0.9843398332595825
1858194408,7732,knqyf263,2024-11-26T10:12:44Z,i'm fine with only the first item as the second item requires additional changes. let me try the second one in a separate pr.,0,0.9686112999916077
1858230301,7732,itaysk,2024-11-26T10:36:03Z,"ok. ptal at [a link] imo it now feels out of place in some cases in the context of other ""databases"" but if we will change the context then it might be ok.",0,0.9749152064323425
1859110904,7732,simar7,2024-11-26T19:19:08Z,lgtm,0,0.9795994758605957
502910984,679,knqyf263,2020-10-11T12:45:29Z,i think we can drop `errcheck`.,0,0.9866899251937866
502911243,679,knqyf263,2020-10-11T12:48:06Z,i'm just curious which linter says this.,0,0.846001923084259
502911339,679,knqyf263,2020-10-11T12:49:10Z,do we have to add `filepath.clean` to all file-related functions? i'm feeling like it is meaningless.,-1,0.9526388645172119
502911549,679,rahul2393,2020-10-11T12:51:00Z,read this [a link],0,0.9880918264389038
502911936,679,rahul2393,2020-10-11T12:53:49Z,"i can drop it, but then we are enabling developers to ignore errors, i think we should keep it, at least the developer should log the error, it will help us if we miss errors while development.",0,0.9534797668457031
502912348,679,knqyf263,2020-10-11T12:57:23Z,"it is the case when we know the size in advance. in this case, we specify 0, so i think the performance is worse than before.",-1,0.5038270354270935
502912514,679,knqyf263,2020-10-11T12:59:04Z,"yes, but in some cases, a path is hard-coded. it doesn't make sense to apply `filepath.clean`. this should be done for user input only.",0,0.9616150856018066
502912879,679,rahul2393,2020-10-11T13:02:11Z,"so if i don't clean it i will get linter errors, will this cause any issues?",0,0.838370680809021
502913383,679,knqyf263,2020-10-11T13:06:15Z,"it is better to have it, but we have to add `// nolint: errcheck` to all `defer` and some tests. it's a bit bothering me. do we have another way besides `nolint`?",-1,0.8357070088386536
502922153,679,rahul2393,2020-10-11T14:23:36Z,"i don't see performance difference in the benchmark test with 1000 size, do you want me to run with bigger numbers?",0,0.9771237969398499
502922513,679,rahul2393,2020-10-11T14:26:43Z,"i already skipped the test and mock files in the linter config so this is not required in tests, another way would be to have a common package for system functions and instead of calling file.open and closing in defer we will call the custom package function to get file reader.",0,0.9876910448074341
502927128,679,rahul2393,2020-10-11T15:03:32Z,"btw, i checked performance with preallocating the base capacity and its better than not allocating [a link]",0,0.978298008441925
503073155,679,knqyf263,2020-10-12T06:51:39Z,you can disable the linter. we don't have to follow all warnings from linters.,0,0.9813000559806824
503081284,679,knqyf263,2020-10-12T07:09:50Z,"ah, you didn't specify capacity. in that case, the performance should be the same as `var arr []int`. it means we don't have to change it. for example, `len(advisories)` is much greater than the length `vulns` requires. so, memory is wasted. [a link] if the number of elements is the tens of thousands or millions and it takes a few minutes, it's better to specify the capacity beforehand. but in our case, it is only 10 or 100 and takes only in milliseconds. the performance may improve slightly, but it wastes memory (depending on the situation) and reduces readability. we don't have to think about performance for now and should keep it simple. i'm feeling like ""premature optimization is the root of all evil"".",0,0.9413038492202759
503358102,679,rahul2393,2020-10-12T15:04:41Z,i have added the exception for obvious cases and now we don't need to add nolint in general cases.,0,0.9855589866638184
503358814,679,rahul2393,2020-10-12T15:05:50Z,"removed preallocate linter, reverted changes",0,0.9838432669639587
503358900,679,rahul2393,2020-10-12T15:06:00Z,done,0,0.9764507412910461
503678709,679,knqyf263,2020-10-13T05:39:47Z,"also, i found a warning from golangci-lint. [a link]",0,0.9848815202713013
503685196,679,knqyf263,2020-10-13T05:59:52Z,can we disable only g304 as follows? [a link],0,0.9898098707199097
503685782,679,rahul2393,2020-10-13T06:01:39Z,already removed [a link],0,0.9875161647796631
503687580,679,knqyf263,2020-10-13T06:06:52Z,v1.29 looks a bit old. [a link],0,0.7834010124206543
503688764,679,knqyf263,2020-10-13T06:10:13Z,"we've not introduced a new dependency, right? why were some dependencies added? it's weird if you are using go 1.15.",-1,0.9187913537025452
503689676,679,knqyf263,2020-10-13T06:12:38Z,you can exclude `integration/` for errcheck. the directory contains only test-related files.,0,0.9893755912780762
503690284,679,knqyf263,2020-10-13T06:14:24Z,we have to ignore this error. an error always occurs the first time. this change breaks trivy and trivy won't launch forever. could you add `nolint`?,0,0.8495044112205505
503691447,679,knqyf263,2020-10-13T06:17:26Z,is this necessary?,0,0.9814280271530151
503692900,679,knqyf263,2020-10-13T06:21:15Z,the length of severity is only 5. we don't have to specify the capacity in advance.,0,0.9814541935920715
503693147,679,knqyf263,2020-10-13T06:22:00Z,see a comment,0,0.9857800602912903
503694905,679,knqyf263,2020-10-13T06:26:23Z,"could you keep it as is? this script shows eol dates to stdout and the error pollutes stdout. or, it might work to show it in stderr.",0,0.9893071055412292
503694941,679,knqyf263,2020-10-13T06:26:29Z,ditto,0,0.8428916931152344
503697879,679,knqyf263,2020-10-13T06:33:44Z,which linter warns like this? and i'd like to know the detail.,0,0.9788438081741333
503698462,679,knqyf263,2020-10-13T06:35:04Z,`default` must be slim in this case. this change doesn't make sense.,-1,0.551014244556427
503700163,679,knqyf263,2020-10-13T06:39:13Z,could you add a comment that we can't find eol of photon os? [a link],0,0.9884176850318909
503722380,679,knqyf263,2020-10-13T07:23:51Z,it may be unnecessary. you can remove it.,0,0.9503496289253235
503723562,679,knqyf263,2020-10-13T07:25:49Z,what kind of error is this? does a linter say `_` should not be used?,0,0.8889153599739075
503724446,679,knqyf263,2020-10-13T07:27:19Z,this `filepath.clean` is necessary.,0,0.9855074882507324
503724502,679,knqyf263,2020-10-13T07:27:24Z,ditto,0,0.8428916931152344
503728196,679,knqyf263,2020-10-13T07:32:43Z,"we already defined `less`, so what if adding `len` and `swap` so that we can use `sort.sort`? [a link]",0,0.9879769682884216
503729541,679,knqyf263,2020-10-13T07:34:58Z,"such a change would increase the pr size. it makes review difficult. can we disable the linter once, revert this change, add todo, and fix it in the dedicated pr?",0,0.9216007590293884
503729743,679,knqyf263,2020-10-13T07:35:20Z,ditto,0,0.8428916931152344
503730656,679,knqyf263,2020-10-13T07:36:54Z,ditto,0,0.8428916931152344
503730743,679,knqyf263,2020-10-13T07:37:04Z,ditto,0,0.8428916931152344
503846645,679,rahul2393,2020-10-13T10:37:48Z,"yes gocyclo linter was complaining about cyclomatic complexity of more than 10, i had to return to make it under 10",-1,0.7917079925537109
503847753,679,rahul2393,2020-10-13T10:39:54Z,"yes gocyclo linter was complaining about cyclomatic complexity of more than 10, i had to remove default and return early to make it under 10",-1,0.8343951106071472
503848425,679,rahul2393,2020-10-13T10:41:05Z,"yes linter says, import of types ""_"" should be defined in the main file or should contain comment.",0,0.9883765578269958
503852778,679,rahul2393,2020-10-13T10:49:11Z,"shadow: declaration of ""err""",0,0.9756847620010376
503885683,679,knqyf263,2020-10-13T11:48:52Z,"this shadow? if so, the module generates many false positives. [a link] it looks like this example disables `shadow`. but it's weird that `check-shadowing` is true... [a link]",-1,0.9813251495361328
503892143,679,rahul2393,2020-10-13T12:00:01Z,updated,0,0.9681491851806641
503892247,679,rahul2393,2020-10-13T12:00:11Z,:thumbs_up:,0,0.8380307555198669
503894184,679,rahul2393,2020-10-13T12:03:24Z,"btw, i already declared fixedversion will it work?",0,0.9894428253173828
504549521,679,knqyf263,2020-10-14T09:52:29Z,"could you disable `shadow` and revert it? or, can we disable `shadow` only for `err`?",0,0.9865272641181946
504549658,679,knqyf263,2020-10-14T09:52:41Z,ditto,0,0.8428916931152344
504715263,679,knqyf263,2020-10-14T14:17:45Z,"hmm... i prefer the previous one. if we follow the linter, `return xxx.newscanner()` looks better.",0,0.6628332138061523
505226763,679,rahul2393,2020-10-15T06:55:53Z,"it was for running the linter check in workflow here, reverted",0,0.9875760078430176
505234213,679,knqyf263,2020-10-15T07:01:37Z,doesn't it work as follow? [a link],0,0.9859763383865356
505235826,679,knqyf263,2020-10-15T07:03:01Z,reverted to rahul2393?,0,0.980991542339325
505276889,679,rahul2393,2020-10-15T07:39:14Z,"ok, done,",0,0.9745250344276428
507664932,679,knqyf263,2020-10-19T11:14:47Z,"they are also `github.com/aquasecurity`, but look like a different group from l13-l18.",0,0.9814761281013489
507666064,679,knqyf263,2020-10-19T11:16:58Z,do we need these empty lines?,0,0.9841728210449219
507666384,679,knqyf263,2020-10-19T11:17:35Z,"also, i think we can merge it into the group in l12-",0,0.9800026416778564
507671160,679,rahul2393,2020-10-19T11:26:49Z,done,0,0.9764507412910461
507671231,679,rahul2393,2020-10-19T11:26:57Z,"no, removed",0,0.9545906782150269
508221338,679,knqyf263,2020-10-20T05:38:22Z,could you group them?,0,0.9862146973609924
508221422,679,knqyf263,2020-10-20T05:38:37Z,ditto,0,0.8428916931152344
508221463,679,knqyf263,2020-10-20T05:38:47Z,ditto,0,0.8428916931152344
508221558,679,knqyf263,2020-10-20T05:39:02Z,ditto,0,0.8428916931152344
508221852,679,knqyf263,2020-10-20T05:39:43Z,same here,0,0.982987642288208
508223728,679,knqyf263,2020-10-20T05:45:37Z,"i'd like to know why `gocyclo` complains `default`. is it only about `default`? or, even if we remove `default` and add a new family, will `gocyclo` complain again?",0,0.9846267104148865
508223936,679,knqyf263,2020-10-20T05:46:09Z,grouping,0,0.9712930917739868
508224136,679,knqyf263,2020-10-20T05:46:45Z,grouping,0,0.9712930917739868
508224245,679,knqyf263,2020-10-20T05:47:04Z,ditto,0,0.8428916931152344
508224332,679,knqyf263,2020-10-20T05:47:17Z,same,0,0.9733930826187134
508233322,679,rahul2393,2020-10-20T06:13:42Z,"even if you replace the default with a different case, it will complain because by default cyclomatic complexity of 10, and for this function, default branch is adding up to 11",0,0.7556325197219849
508449247,679,knqyf263,2020-10-20T12:14:28Z,"so, removing `default` doesn't address the root issue. let's consider it carefully later.",0,0.9840441346168518
1624284348,6781,knqyf263,2024-06-03T11:49:10Z,i found that the backport pr title also needs to follow [a link] so release please can create release prs. i changed the backport pr title to use the original one.,0,0.982559859752655
1624288868,6781,knqyf263,2024-06-03T11:53:04Z,"after testing for a while, i found it difficult to understand backported prs without a label, so i've added one. - prs that we want to backport: `backport-to-release/v0.50` - prs created by the tool ""backport"": `backport` cc:",0,0.9739911556243896
1624773827,6781,simar7,2024-06-03T16:51:29Z,what release would it backport to? would it automatically pickup the patch or minor depending on (fix/chore/etc.) and (feat)?,0,0.9874695539474487
1625314904,6781,knqyf263,2024-06-04T04:10:20Z,"i've updated my comment. it's simple. if we label ""backport-to-release/v0.52"" to a pr, the tool ""backport"" will cherry-pick the commit from the pr in the main branch and create a new pr with label ""backport"" aginst the branch ""release/v0.52"". it's backporting from ""main"" to ""release/v0.52"".",0,0.9813546538352966
1625568196,6781,DmitriyLewen,2024-06-04T08:17:56Z,"we will only process prs with `backport-to- ` tag. this means that all necessary prs will be caught by the `labeled` trigger, right?",0,0.9873148202896118
1625572751,6781,DmitriyLewen,2024-06-04T08:20:28Z,we will also see many similar errors for closed prs - [a link],0,0.9844621419906616
1625586651,6781,DmitriyLewen,2024-06-04T08:29:17Z,but we may want to use the following steps: 1. open pr 2. set `backport-to- ` label 3. merge pr 4. run this action in this case we will see error in p2 - [a link],0,0.9845619797706604
1625592583,6781,DmitriyLewen,2024-06-04T08:32:02Z,let's add one step before `backport action` to check label/`merge pr` to avoid an error (and just stop this action).,0,0.9878491759300232
1625658299,6781,DmitriyLewen,2024-06-04T09:15:20Z,we need to create new branch from release tag of `main` branch. take a look the following example([a link] 1. i pushed tag 2. i pushed commit (`test commit`) 3. after that i created `release/v0.54` branch. in this case patch will include this `test commit`.,0,0.9870442748069763
1625667158,6781,DmitriyLewen,2024-06-04T09:21:34Z,"is it possible to add options to return error for internal `sorenlouv/backport-github-action` errors? e.g. we got error, but action finished successfully - [a link]",0,0.9863052368164062
1625672592,6781,DmitriyLewen,2024-06-04T09:25:25Z,can we add note that we need to create pr for each fix? e.g. i expected that i would mark (set label)) all needed for `patch` prs -> backport would create one pr -> i would merge this pr,0,0.9804609417915344
1625725913,6781,knqyf263,2024-06-04T10:03:29Z,"oh, does the job fail if the pr doesn't have `backport-to-`?",0,0.9334498643875122
1625733376,6781,DmitriyLewen,2024-06-04T10:09:16Z,right,0,0.9538289308547974
1625735159,6781,knqyf263,2024-06-04T10:10:32Z,"ideally, we should create a branch here. what do you think? [a link]",0,0.9770163893699646
1625741201,6781,knqyf263,2024-06-04T10:15:26Z,"i didn't find such an option. but as for this specific case, we can use `commitconflicts: true`. [a link]",0,0.9835624098777771
1625756244,6781,knqyf263,2024-06-04T10:27:07Z,how about this? [a link],0,0.987173318862915
1625761236,6781,DmitriyLewen,2024-06-04T10:29:25Z,yeah. it looks good to me. we can create a branch for the next minor version in this/next step of this activity.,1,0.9677082300186157
1625773222,6781,DmitriyLewen,2024-06-04T10:37:50Z,"it doesn't work - [a link] iiuc problem in `contains(github.event.pull_request.labels.*.name, 'backport-to-')` `github.event.pull_request.labels.*.name` will be `backport-to-release/v0.54 ` and `backport-to-release/v0.54 ` != `backport-to-`",0,0.9338825941085815
1625870106,6781,knqyf263,2024-06-04T11:58:17Z,is there any way to apply `startswith` to all labels in `if` statement?,0,0.987392246723175
1626866812,6781,DmitriyLewen,2024-06-05T03:20:29Z,"i didn't find way for this. i thought we can [a link] labels array (e.g. `github.event.pull_request.labels.*.name.backport-to*`, but filtering doesn't work for arrays... [a link] looks like we need to add 1 more `step` for this check.",0,0.9747402667999268
1626953989,6781,knqyf263,2024-06-05T05:04:23Z,"yes, i eventually added one more step. [a link] i confirmed it skipped steps. [a link] please test this change.",0,0.9829504489898682
1626956108,6781,knqyf263,2024-06-05T05:06:33Z,i'll open another pr for that.,0,0.9702081680297852
1626993641,6781,knqyf263,2024-06-05T05:43:29Z,added [a link],0,0.9870722889900208
1627026206,6781,knqyf263,2024-06-05T06:09:18Z,added [a link],0,0.9870722889900208
1627044352,6781,DmitriyLewen,2024-06-05T06:23:16Z,looks like it works :+1:,1,0.9044221043586731
1627055436,6781,knqyf263,2024-06-05T06:30:58Z,thanks for confirming. i marked this conversation resolved.,1,0.8066551089286804
1627056624,6781,DmitriyLewen,2024-06-05T06:31:51Z,this doesn't work as we expected - [a link] [a link],0,0.9252443909645081
1627061385,6781,DmitriyLewen,2024-06-05T06:35:22Z,`commit conflicts: true` includes these conflicts in code instead of returning error ([a link],0,0.9845920205116272
1627091529,6781,knqyf263,2024-06-05T06:55:56Z,"yes, it's expected.",0,0.9792671203613281
1627092065,6781,knqyf263,2024-06-05T06:56:16Z,you can see the document.,0,0.9848125576972961
1627098106,6781,knqyf263,2024-06-05T07:00:07Z,"imo, it's better to open a pr anyway and resolve conflicts on the pr rather than abort.",0,0.9655507206916809
1627099542,6781,DmitriyLewen,2024-06-05T07:00:54Z,it doesn't look very comfortable. can we move table from merge pr to the pr backport? as here [a link],-1,0.8039671778678894
1627104838,6781,knqyf263,2024-06-05T07:04:12Z,does it show this error even with `commitconflicts: true`?,0,0.9676324725151062
1627109962,6781,DmitriyLewen,2024-06-05T07:07:33Z,no. backport just creates pr with `<<<<< ` and `>>>>>` : [a link] [a link],0,0.9873524904251099
1627113723,6781,DmitriyLewen,2024-06-05T07:09:59Z,"this makes sense, but gh doesn't mark it as `conflict` (see [a link] we can only see the problem in `tests`. so, to fix this: you need to pull this branch => manually update these changes => push these changes.",0,0.9845337867736816
1627117430,6781,DmitriyLewen,2024-06-05T07:12:25Z,before this it was better because backport told which pr you need to merge before that pr: [a link],0,0.9818650484085083
1627132988,6781,knqyf263,2024-06-05T07:20:49Z,"yes, there is a risk of accidentally merging `<<<<<` and `>>>>>`, but i didn't find a good approach. do you have any ideas? if `backport` aborts with conflicts (`commitconflicts: false`), it means we must manually create a backport pr with resolved conflicts. - `commitconflicts: true` - pros: - no need to run `git cherry-pick` or `backport` locally - cons: - risk of accidentally merging `>>>>>` as it is not treated as a conflict on github - `commitconflicts: false` - pros: - low risk of accidentally merging `>>>>>` (although manual `git cherry-pick` may fail) - cons: - need some manual work - `git cherry-pick` locally and resolve conflicts - create a pr against `release/vx.y` which is better?",0,0.9156906604766846
1627145906,6781,knqyf263,2024-06-05T07:28:40Z,opened [a link],0,0.9873035550117493
1627147058,6781,DmitriyLewen,2024-06-05T07:29:18Z,"correct me if i'm wrong, but i think it's better to merge related (another) pr before current pr to avoid conflict, no?",0,0.9595514535903931
1627153993,6781,knqyf263,2024-06-05T07:32:29Z,"let's say we added big changes for feature enhancement. we cannot backport the pr. if the critical fix is based on the change, the conflict cannot be avoided, and we have to resolve it manually.",0,0.9807882308959961
1627188521,6781,DmitriyLewen,2024-06-05T07:52:50Z,"okay, `commitconflicts: true` looks better to me. perhaps we can create `comment` that this pr contains a conflict?",0,0.8749813437461853
1627196171,6781,knqyf263,2024-06-05T07:57:23Z,"it sounds like a good idea, but i didn't find the option. [a link]",1,0.6816279292106628
1627204867,6781,DmitriyLewen,2024-06-05T08:02:34Z,"perhaps we need to check changes in the commit... linter should show error about this, so let's just leave `commitconflicts: true` and get some experience with it. if necessary, we will think about checking the commit to reduce risks",0,0.9480839371681213
1627208518,6781,knqyf263,2024-06-05T08:04:44Z,hmm. it may be better to create our own backport tool.,0,0.9761654138565063
1627221438,6781,DmitriyLewen,2024-06-05T08:12:36Z,this takes time... let's try current version. `test` workflow should protect us from mistakes,0,0.8886451721191406
1627527303,6781,knqyf263,2024-06-05T11:02:19Z,i already started before seeing your comment :grinning_face_with_smiling_eyes: [a link],0,0.8921268582344055
1628771887,6781,DmitriyLewen,2024-06-06T04:51:27Z,"can we add some ""protection"" so that only maintainers can run this workflow?",0,0.987409234046936
1628772264,6781,DmitriyLewen,2024-06-06T04:52:11Z,what if we will work only with `release/vx.y` branches?,0,0.9859159588813782
1628778554,6781,DmitriyLewen,2024-06-06T05:03:21Z,"do we need to upgrage this logic? e.g. remove remote branch `$new_branch` before creating that branch, or pull changes from `$branch_name` if `$new_branch` exists. example: 1. i merged pr1 and pr2 (with changes from pr1). ([a link] + [a link] 2. i ran the backport for pr2 by mistake and received a conflict warning. ([a link] 3. i ran backport for pr1 and merge this backport into `release/vx.y` branch. ([a link] 4. but when i again try to run backport for pr2 - i get error - [a link]",0,0.7496880292892456
1628778966,6781,DmitriyLewen,2024-06-06T05:03:58Z,can we use `-bot` for this comment?,0,0.9881666302680969
1628782759,6781,knqyf263,2024-06-06T05:10:47Z,`org_repo_token` is a pat for `aqua-bot`. the bot user will comment (i used my pat in my fork). [a link],0,0.9872421026229858
1628785065,6781,DmitriyLewen,2024-06-06T05:15:00Z,got it! :+1:,1,0.9692668318748474
1628788710,6781,knqyf263,2024-06-06T05:20:56Z,"in that case, i think we should merge `release/vx.y` into [a link] manually. [code block] or we can close [a link] delete the branch, and re-run backporting. i'm not sure if it's feasible. the conflicted changes are already committed. it sounds like we need to revert. in this case, we need to force-push the branch. i'm a bit afraid of unexpected accidents (e.g. important changes are overridden by force push).",-1,0.8438184261322021
1628793326,6781,knqyf263,2024-06-06T05:27:01Z,done [a link],0,0.987381100654602
1628799685,6781,DmitriyLewen,2024-06-06T05:35:32Z,"okay, let's start with the manual work for cases like this. we may update this later when we have more experience (if at all necessary).",0,0.9766353368759155
1628802552,6781,knqyf263,2024-06-06T05:40:01Z,added [a link],0,0.9870722889900208
1628803985,6781,knqyf263,2024-06-06T05:42:05Z,i'll add it to the document.,0,0.9845736622810364
1628917806,6781,DmitriyLewen,2024-06-06T07:31:55Z,it works - [a link] + [a link],0,0.976409912109375
1628919594,6781,DmitriyLewen,2024-06-06T07:33:24Z,it works: [a link] + [a link],0,0.9797722101211548
1628966939,6781,knqyf263,2024-06-06T08:00:14Z,added [a link] please take another look.,0,0.9818037748336792
1629060547,6781,DmitriyLewen,2024-06-06T08:50:56Z,lgtm,0,0.9795994758605957
1403923925,5635,DmitriyLewen,2023-11-24T04:21:08Z,it looks like `git` didn't remove it after merging main branch.,0,0.9782628417015076
1403925032,5635,DmitriyLewen,2023-11-24T04:24:47Z,also you need to add this page here: [a link] use `mage docs:serve` command to build local [a link],0,0.9869681000709534
1403925851,5635,DmitriyLewen,2023-11-24T04:26:54Z,`[^1]` link doesn't work.,0,0.8994723558425903
1403927223,5635,DmitriyLewen,2023-11-24T04:30:49Z,we separate `pre-build` and `post-build` - [a link] `manifest.toml` looks as lock file. perhaps we can scan these files only in `fs` mode?,0,0.9888553023338318
1403928279,5635,DmitriyLewen,2023-11-24T04:33:36Z,do we need all these test cases? we tested complex issues in go-dep-parser. i think 4 tests will be enough: - `manifest.toml` + `project.toml` - only `manifest.toml` - there are no dependencies - error,0,0.9740424156188965
1403931784,5635,DmitriyLewen,2023-11-24T04:43:24Z,i think it is better to use `pkg/fanal/analyzer/language/julia/pkgjl/pkgjl.go` [code block],0,0.9802674055099487
1403941514,5635,DmitriyLewen,2023-11-24T05:04:01Z,we use only `dependencies` field. [code block],0,0.9888030886650085
1403944175,5635,DmitriyLewen,2023-11-24T05:08:19Z,you will sort libs in postanalyze: [a link] [code block],0,0.9879543781280518
1403945535,5635,DmitriyLewen,2023-11-24T05:11:25Z,all `go-dep-parser` tests use uuid without version for pkg.id. what am i missing?,0,0.9808453321456909
1403946030,5635,DmitriyLewen,2023-11-24T05:12:17Z,looks like we can use `pkgids` [code block],0,0.9858441352844238
1406688537,5635,Octogonapus,2023-11-27T20:08:01Z,sorry this was before we changed that in go-dep-parser,-1,0.9860956072807312
1406692223,5635,Octogonapus,2023-11-27T20:12:53Z,"i just copied from rust as an example so we can change this, but why not support all modes? manifest.toml files can appear in both source code and in build artifacts, so i think it is relevant to scan image, fs, and repo. i'm not so sure about roosfs, but other languages do it, so why not julia as well?",0,0.9710753560066223
1407053342,5635,DmitriyLewen,2023-11-28T04:00:03Z,this is what i wanted to see. thank you. let's look at `manifest.toml` in all modes.,1,0.9567025303840637
1422016188,5635,DmitriyLewen,2023-12-11T07:11:34Z,"do you think we need this? if i understand correctly, pkg.id (this is the uuid from the julia file) is always unique.",0,0.9873377084732056
1422018674,5635,DmitriyLewen,2023-12-11T07:15:10Z,can you add testcase for this? (`testnewpackageurl`),0,0.9885112047195435
1422022638,5635,DmitriyLewen,2023-12-11T07:20:41Z,"you mean removing test dependencies, right? if so, it's best to update this comment to avoid confusion.",0,0.9814969301223755
1422024751,5635,DmitriyLewen,2023-12-11T07:23:34Z,"we recently added `dev` flag to `package` (dev dependencies are excluded from the report by default, but users can use `--include-dev-deps` to include them). but i'm not sure that julia's users need this feature. what do you think? do users need dev dependencies in reports?",0,0.9668495655059814
1422027383,5635,DmitriyLewen,2023-12-11T07:26:51Z,looks like you don't use comparer,0,0.9558433294296265
1423185969,5635,Octogonapus,2023-12-11T22:16:28Z,sorry this was left over from an earlier version. removed,-1,0.9861547350883484
1423186012,5635,Octogonapus,2023-12-11T22:16:32Z,done,0,0.9764507412910461
1423186226,5635,Octogonapus,2023-12-11T22:16:49Z,yes. done,0,0.9653884768486023
1423187058,5635,Octogonapus,2023-12-11T22:17:51Z,yes i think this will be helpful! i have tried to implement this from looking at other code and i've updated the test with some dev deps. lmk if it looks correct.,1,0.9341469407081604
1423187142,5635,Octogonapus,2023-12-11T22:17:57Z,removed,0,0.9654131531715393
1423369392,5635,DmitriyLewen,2023-12-12T03:46:40Z,[code block] wdyt?,0,0.9895826578140259
1423377864,5635,DmitriyLewen,2023-12-12T04:05:24Z,you can simply take `dev` from current package and remove `dev bool`. [code block],0,0.9893032312393188
1423379189,5635,DmitriyLewen,2023-12-12T04:08:19Z,as you correct wrote - this is expected behavior. i think we can remove this comment. [code block],0,0.9872955679893494
1423394792,5635,DmitriyLewen,2023-12-12T04:40:27Z,i think we don't need to return map here. [code block],0,0.9872055053710938
1424089733,5635,Octogonapus,2023-12-12T14:39:27Z,added,0,0.9735139608383179
1438069005,5635,knqyf263,2023-12-29T07:28:48Z,"we parse the lock file, right? we need to update the list. [a link]",0,0.9867591261863708
1438070840,5635,knqyf263,2023-12-29T07:34:36Z,i'm sorry i'm probably missing some context. do we need to use uuid here? can the combination `name + version` be non-unique?,-1,0.9870506525039673
1438072940,5635,DmitriyLewen,2023-12-29T07:41:06Z,we discussed about this here - [a link],0,0.9771187901496887
1438074039,5635,DmitriyLewen,2023-12-29T07:44:49Z,"there are cases when a file contains two dependencies with same name and version, but with different uuids - [a link] we thought it would be better to use uuids to separate dependencies, like julia does.",0,0.9845575094223022
1438076658,5635,knqyf263,2023-12-29T07:52:45Z,i'd like to see why it is allowed. is there any document?,0,0.9683921337127686
1438077255,5635,DmitriyLewen,2023-12-29T07:54:35Z,do you have any documents regarding this case?,0,0.9832152724266052
1438335094,5635,Octogonapus,2023-12-29T16:52:35Z,see [a link],0,0.9835211038589478
1454161380,5635,Octogonapus,2024-01-16T22:45:17Z,is there still a need to update this list?,0,0.9747331142425537
1599427388,5635,knqyf263,2024-05-14T06:04:38Z,we [a link]. we don't need tests for spdx and cyclonedx unless julia needs any specific handling for sbom. either of them is fine.,0,0.9504743218421936
1600076180,5635,Octogonapus,2024-05-14T13:47:24Z,no specific handling is needed. i have removed the cyclonedx test.,0,0.9862416982650757
914675876,2333,itaysk,2022-07-06T10:23:58Z,"since we removed this part from the docs (which is fine), wdo we want to keep the rest?",0,0.9819737672805786
914681335,2333,itaysk,2022-07-06T10:30:37Z,do we want to keep the grouping in this section based on content location? (presentations -> cncf webinar -> item vs just list of items),0,0.9872663617134094
914682324,2333,itaysk,2022-07-06T10:31:49Z,also add to one of tutorial index pages?,0,0.9869698286056519
914961101,2333,AnaisUrlichs,2022-07-06T15:11:27Z,"ah yes, good point, will include that",1,0.5678606629371643
914961528,2333,AnaisUrlichs,2022-07-06T15:11:50Z,"no, will rewrite it -- thanks for pointing it out",1,0.8363392353057861
945232931,2333,itaysk,2022-08-14T05:51:15Z,i cannot comment on the file so commenting here: we could add some context there about what is cks and why it's in the trivy docs.,0,0.9693462252616882
945233003,2333,itaysk,2022-08-14T05:52:14Z,"are we sure this is a ""first party"" tutorial and not ""third party""? do we want to maintain it?",0,0.9811621904373169
945233294,2333,itaysk,2022-08-14T05:55:49Z,"is there a specific place for ""community tutorials"" or just anywhere in tutorials? is this what the ""tools"" are for? if so, need to refine this instruction and also rename tools. otherwise lets clarify what tools are for",0,0.9848400950431824
945239803,2333,knqyf263,2022-08-14T07:02:15Z,"no, we can't. the first party tutorial should be - github actions - we have an official action - circleci - travis ci - gitlab ci - gitlab folks maintain our tutorial - bitbucket pipelines - we have [a link] - (aws codepipeline) - it should be moved to third party as the blog is written by aws, not us. - aws security hub - as we maintain [a link]",0,0.9698377847671509
945282518,2333,AnaisUrlichs,2022-08-14T12:30:44Z,"yes, will add that",0,0.982475996017456
945282598,2333,AnaisUrlichs,2022-08-14T12:31:21Z,hmm in addition to those we need tutorials such as deploy the `trivy operator through gitops` where do you see those?,0,0.9837065935134888
945283059,2333,AnaisUrlichs,2022-08-14T12:33:49Z,"i would only accept tutorials here that we want to maintain e.g. installing trivy operator through flux, visualising metrics in grafana etc. or similar, re trivy -- using trivy in an air-gapped environment -- and similar -- otherwise, tutorials should be added in the additional resource section and just reference an external link. this is how i had it in mind",0,0.9596583843231201
945506752,2333,knqyf263,2022-08-15T08:05:37Z,"we have many trivy-related tools such as docker desktop, vscode/intellij plugins, etc. do we want to put only trivy operator at the top level?",0,0.9813416004180908
945508829,2333,knqyf263,2022-08-15T08:09:11Z,"do you have a specific reason to change the order? do you prefer ""quick start"" being before ""installation""? i thought the order was the opposite as users can start using trivy after installation.",0,0.9749345779418945
945509547,2333,knqyf263,2022-08-15T08:10:23Z,"in addition, i prefer the directory name is the same as the section name. it is easy to find the relevant directory. [code block]",0,0.9420390129089355
945513426,2333,knqyf263,2022-08-15T08:16:27Z,"first of all, `#` is not shown in the navigator bar, so we should have a single `#` per a single page. ![a link] and do we want to put only operator installation here though we have many related tools such as docker extension?",0,0.9638665914535522
945544367,2333,knqyf263,2022-08-15T09:00:11Z,"""ci/cd"" section details how to run trivy in ci/cd, but this section is how to install trivy operator through gitops. i feel like this section is different from others. also, do we want to trivy operator things in the trivy doc?",0,0.736844539642334
945547001,2333,knqyf263,2022-08-15T09:03:57Z,"nit: imo, we don't need `trivy` everywhere like `trivy aws` and `trivy circleci` :grinning_squinting_face: [code block]",0,0.5312046408653259
945548385,2333,knqyf263,2022-08-15T09:06:11Z,"`trivy k8s` is not clear. i think we should mention what users can do with this tutorial, e.g. ""cluster scanning"" or something like that.",0,0.9599418044090271
945552123,2333,knqyf263,2022-08-15T09:11:50Z,"they are not cks relevant, no?",0,0.9701907634735107
945553162,2333,knqyf263,2022-08-15T09:13:29Z,"that page contains much of our content, so it is not community tutorials. [code block]",0,0.9802906513214111
945553605,2333,knqyf263,2022-08-15T09:14:10Z,there are two `#`. we need to remove this line or remove the first line.,0,0.9873396158218384
945554150,2333,knqyf263,2022-08-15T09:15:01Z,"most of them are our blogs, not from the community.",0,0.9121995568275452
945581670,2333,AnaisUrlichs,2022-08-15T09:57:29Z,hmmm itay and i discussed this -- but good point -- maybe we could put it at the top level integrations -- and then reference a page that links to either the docs or the different repo e.g. the lens trivy repo people can then easily go through it and find the integrations/tools that work for them. do you prefer to name it `tools`?,0,0.6566920876502991
945582581,2333,AnaisUrlichs,2022-08-15T09:58:52Z,i don't have any strong feelings about the order & agree with you on the dir name :grinning_face_with_smiling_eyes: will change it,-1,0.4276633560657501
945589250,2333,AnaisUrlichs,2022-08-15T10:09:39Z,i would add the docker extension as a tutorial and then link here to it since it does not seem too straightforward and is more about the use rather than the installation. what do you think?,0,0.9749746918678284
945591582,2333,AnaisUrlichs,2022-08-15T10:13:44Z,actually made the link to trivy operator part of the helm installation. that makes more sense to me (didn't change much),0,0.9304974675178528
945593074,2333,AnaisUrlichs,2022-08-15T10:16:18Z,"this boils down to the question -- if trivy is marketed as the all in one security scanner, do we want to send people do one docs where they can discover all features or to different docs -- or moreover, at what point do we send people to different docs? when itay and i spoke, we agreed to put the tutorials first into the trivy docs and then at some point move them over to the operator docs when there are too many -- but this might be counterintuitive since links might not work like expected. independently, i could add the gitops tutorial to the kubernetes tutorial section",0,0.7728108167648315
945605554,2333,AnaisUrlichs,2022-08-15T10:38:09Z,yes but they are also not trivy-focused and teach people something,0,0.7683696746826172
945605614,2333,AnaisUrlichs,2022-08-15T10:38:17Z,you have a point,0,0.9733334183692932
945605844,2333,AnaisUrlichs,2022-08-15T10:38:42Z,removed this line :),1,0.6976712942123413
945606001,2333,AnaisUrlichs,2022-08-15T10:38:59Z,"yes, will add more community ones -- you have a point tho hahah",1,0.8555390238761902
945627153,2333,knqyf263,2022-08-15T11:16:26Z,`integrations` and `tools` both work for me.,0,0.9853137135505676
945629620,2333,itaysk,2022-08-15T11:20:46Z,maybe kubernetes scanning,0,0.9838696122169495
945633225,2333,knqyf263,2022-08-15T11:27:03Z,"hmm. i thought trivy operator, docker extensions, and other tools would move to `integrations` or `tools`. do we have links in the `installation` section to all the tools?",0,0.9836829304695129
945638586,2333,knqyf263,2022-08-15T11:31:56Z,does it mean we will not have the same tutorial in the trivy operator doc? i just want to avoid duplication so that it could reduce the maintenance cost.,0,0.9568833708763123
945641863,2333,knqyf263,2022-08-15T11:34:32Z,"so, should we move these links to somewhere else? otherwise, it looks like these links help users pass the cks exam.",0,0.9839586019515991
945646387,2333,knqyf263,2022-08-15T11:39:52Z,we may want to have two sections: - additional references - all of the contents are from aqua (official) - community tutorials - all of the contents are from the community (unofficial),0,0.968458354473114
945667826,2333,AnaisUrlichs,2022-08-15T12:17:29Z,"i renamed it to additional resources -- the thing is that official vs unofficial is going to be a bit scarce, and people would have to look at multiple places that have the same goal",0,0.7269275784492493
945668162,2333,AnaisUrlichs,2022-08-15T12:18:03Z,"well, it is study material, that's why i wanted to include it",0,0.960793137550354
945889567,2333,itaysk,2022-08-15T15:45:12Z,"i think of this more as ""installing trivy in k8s through gitops"" rather than ""installing trivy operator through gitops"". in my mind trivy operator is just another face of trivy. does that make sense?",0,0.8880281448364258
945906848,2333,knqyf263,2022-08-15T16:04:59Z,"i'm ok with ""installing trivy in k8s through gitops"". i just wondered if we want to include all trivy-related tools in the tutorial. for example, docker extension is also another face of trivy. in that case, don't we have the same tutorial in the trivy operator doc? where is the single truth of source?",0,0.9784673452377319
947504375,2333,itaysk,2022-08-17T06:36:45Z,"last time we discussed documentation for integrations, we said that: 1. reference docs will live in the integration's own repo 2. we will link from the menu of trivy docs to the individual readmes/docs or other projects 3. tutorials will live in trivy docs under dedicated tutorials sections covering different scenarios examples: 1. trivy github actions document with all possible options is in the readme of the action's repo. it is linked to from the integrations section of trivy docs. the tutorial for using trivy in github actions is in trivy docs and linked in the triby tutorials section. 2. trivy semaphore document with all possible options is in the semaphore documentation. it is linked to from the integrations section of trivy docs. the tutorial for using trivy with semaphore is in the semaphore blog and linked in the trivy tutorials section. does this still makes sense?",0,0.89948570728302
947538751,2333,AnaisUrlichs,2022-08-17T07:20:46Z,we planned to put a link to trivy operator at the top header -- this turned now into trivy ecosystem linking to the external repos/docs -- so you are saying that you would like to keep it as trivy operator in the header and link to external tools in the integration section? we could still have the trivy ecosystem overview somewhere -- maybe in an overview in integrations?,0,0.9703404903411865
950513415,2333,itaysk,2022-08-19T19:43:52Z,"no i didn't mean to revert anything, just wanted to answer teppei's comment. i think (?) this model i described still works with ecosystem page",0,0.9622094035148621
957355819,2333,knqyf263,2022-08-29T13:43:13Z,"we moved `tools` to `ecosystem`. we don't need it anymore, right?",0,0.9794740080833435
957362028,2333,knqyf263,2022-08-29T13:48:55Z,"as for `trivy operator installation` and `docker desktop extension`, can we just put ""other tools"" and say `see the `ecosystem` tab?",0,0.9893494844436646
957364287,2333,knqyf263,2022-08-29T13:50:52Z,not fixed yet?,0,0.9582745432853699
957364619,2333,knqyf263,2022-08-29T13:51:09Z,ditto,0,0.8428916931152344
957366303,2333,knqyf263,2022-08-29T13:52:36Z,can we put `ci/cd` on the `kubernetes` section? ci/cd integration is the first citizen in trivy.,0,0.9882992506027222
957367875,2333,knqyf263,2022-08-29T13:53:39Z,ditto,0,0.8428916931152344
957368382,2333,knqyf263,2022-08-29T13:54:06Z,"ok, we can keep operator tutorials then.",0,0.9833008050918579
957371967,2333,knqyf263,2022-08-29T13:56:50Z,people might try unofficial tools first because community tools are listed first. can we put official tools before community tools?,0,0.9843636155128479
960639994,2333,AnaisUrlichs,2022-09-01T13:14:19Z,done,0,0.9764507412910461
960640139,2333,AnaisUrlichs,2022-09-01T13:14:27Z,removed it,0,0.9677612781524658
960640488,2333,AnaisUrlichs,2022-09-01T13:14:47Z,what do you mean?,0,0.9683603048324585
960640768,2333,AnaisUrlichs,2022-09-01T13:15:02Z,done :),1,0.8739592432975769
960643253,2333,AnaisUrlichs,2022-09-01T13:17:25Z,ah got it,1,0.6613131761550903
1510354838,6234,itaysk,2024-03-03T19:09:24Z,begine -> begin,0,0.9821186065673828
1510355300,6234,itaysk,2024-03-03T19:12:11Z,"i'm not sure this is mandatory, for example k8s. ?",-1,0.5459879636764526
1510355456,6234,itaysk,2024-03-03T19:13:04Z,shams -> schemas,0,0.9825863838195801
1510355541,6234,itaysk,2024-03-03T19:13:42Z,we should clarify what's mandatory / optional,0,0.984428882598877
1510355718,6234,itaysk,2024-03-03T19:15:25Z,"starts with an example, better to start with explanation",0,0.9651555418968201
1510355898,6234,itaysk,2024-03-03T19:16:27Z,"you imply that this is optional (can), is it?",0,0.9804897904396057
1510355963,6234,itaysk,2024-03-03T19:16:55Z,can,0,0.980562686920166
1510356208,6234,itaysk,2024-03-03T19:18:10Z,"i think this is relevant only for cloud checks? also i remember saying sometime that this is overlapping with selector, did we address that? ( )",0,0.9466561675071716
1510356412,6234,itaysk,2024-03-03T19:19:08Z,"""short code is a short code"" .. can remove this part, the rest is sufficient",0,0.9853399395942688
1510356927,6234,itaysk,2024-03-03T19:22:13Z,this section needs rewriting imo. need to better explain what is input and its meaning in the check. how to configure it and what structure it has. if needed expand this to a seperate section,0,0.9818975329399109
1510357013,6234,itaysk,2024-03-03T19:22:50Z,i think this should be further up towards the beginning,0,0.960840106010437
1510357115,6234,itaysk,2024-03-03T19:23:38Z,what if it's not a cloud check?,0,0.9642674326896667
1510357614,6234,itaysk,2024-03-03T19:26:24Z,"add (about the second argument): ""you can pass any rego variable that reference reference a field of the input document.""",0,0.9883933663368225
1510357827,6234,itaysk,2024-03-03T19:27:45Z,"since this is a doc not a tutorial, i think it needs to be clearer what is the description of how to add checks, and what is the example of the description",0,0.9688740968704224
1510359458,6234,itaysk,2024-03-03T19:31:07Z,"i think contributing providers/adapters is too complicated for this doc. i don't see anyone contributing a provider and if they did, this doc would probably be insufficient so i suggest to remove it",0,0.7414098978042603
1510361096,6234,itaysk,2024-03-03T19:33:30Z,what are those input(s)?,0,0.985037624835968
1510361799,6234,itaysk,2024-03-03T19:34:36Z,indentation,0,0.982236921787262
1510362260,6234,itaysk,2024-03-03T19:35:17Z,"again, need to draw the line that we are discussing an example",0,0.9739050269126892
1510363360,6234,itaysk,2024-03-03T19:37:04Z,"sentence about metadata can come first, as we're now covering the code and it comes first there",0,0.9864761829376221
1510364295,6234,itaysk,2024-03-03T19:38:42Z,"this is over simplification.. not sure it's helpful. what i recommend is creating this doc as an example for how to add a service to aws, and then mention the adapters needed to update for that scenario.",-1,0.6739567518234253
1510364391,6234,itaysk,2024-03-03T19:38:51Z,"explain what, who",0,0.9305851459503174
1510368236,6234,itaysk,2024-03-03T19:45:02Z,"there's naturally some overlap between this and the other doc about custom checks. given the difference between them is only an extra step (do you want to contribute it or keep it to yourself), it highlights the inconsistency between the otherwise similar docs. for example, this doc basically documents how to write an aws check, but i wouldn't think to read it if i didn't want to contribute to trivy. if it's not too much, i would refactor the content into: 1) creating custom checks - should fully document all the guidelines related to the rego file, testing, metadata, aws examples etc. this can be multiple docs if needed. 2) contributing a custom check to trivy - refers to the other doc and explains how to take a check you wrote (not explained here) and just contribute it.",0,0.9394259452819824
1511287790,6234,AnaisUrlichs,2024-03-04T14:51:33Z,"ah, it looked different on vs code, not showing the indentation",0,0.9566792845726013
1511291427,6234,AnaisUrlichs,2024-03-04T14:53:39Z,i rewrote it -- some components that are not relevant for anyone writing custom checks for their usage of trivy are however a requirement when contributing the check back into trivy,0,0.9875384569168091
1511374499,6234,AnaisUrlichs,2024-03-04T15:44:03Z,"i need some additional information on how people can add adapters -- i.e. what sections are required, what information should i highlight? the adapt.go file looks fairly complex",0,0.9631965756416321
1511375109,6234,AnaisUrlichs,2024-03-04T15:44:24Z,i cannot find where people run `make schemas`,0,0.9609007835388184
1511377900,6234,AnaisUrlichs,2024-03-04T15:46:16Z,could you please provide further information on the sections that are required in the `metadata` vs that aren't? if people contribute a check back to trivy they need the metadata defined in the check but do they need every field listed below?,0,0.9878755211830139
1511378679,6234,AnaisUrlichs,2024-03-04T15:46:45Z,what are subtypes?,0,0.9759735465049744
1511588345,6234,simar7,2024-03-04T18:26:37Z,"to support cloud providers in either live cloud scanning (like trivy aws) or iac scanning (like terraform, cloudformation or arm) we need to define the provider first. this is done as we build a [a link] locally. as for kubernetes scanning, it's a little different because we only need to parse the input (yaml) and make decisions on it. there's no concept of state as above. same goes for dockerfile scanning. so to summarize, i think we could probably re-write this as below: [code block]",0,0.9681543111801147
1511596970,6234,simar7,2024-03-04T18:34:19Z,[a link] an example of what the simplest policy should looks like. the input selector (and whatever fields are not here) are optional. the rest is needed to display the results.,0,0.9881254434585571
1511597415,6234,simar7,2024-03-04T18:34:43Z,yes. this is optional and only needed if you want to optimize your scanning. see my comment [a link] for what's optional and required.,0,0.9848825335502625
1511600909,6234,simar7,2024-03-04T18:38:07Z,"we've updated to use `magefiles` as the rest of the trivy targets. you can find them [a link] so to generate the new schema it would be `mage schema:generate` and to verify it, the command will be `mage schema:verify` you can see these targets by running `mage -l` in the trivy repo.",0,0.9856483936309814
1511601669,6234,simar7,2024-03-04T18:38:44Z,replied [a link],0,0.9855501651763916
1511603104,6234,simar7,2024-03-04T18:39:58Z,"subtypes are documented [a link] and are only needed at this time for cloud checks. they help us only run the checks that are needed for what's being scanned, optimizing the cloud scanning runtime a little.",0,0.9864891767501831
1511875715,6234,simar7,2024-03-04T22:24:20Z,comma splice [code block],0,0.9860196113586426
1511885647,6234,simar7,2024-03-04T22:36:09Z,"the comments on [a link] pr should help. as for learning about the resources themselves, i would say terraform documentation is a good place to go to. for instance [a link] is an example.",1,0.5164461731910706
1512667284,6234,AnaisUrlichs,2024-03-05T11:28:21Z,"could you please check this table, specifically the ""in table"" and ""in json"" parts?",0,0.9859712719917297
1513584812,6234,simar7,2024-03-05T22:40:03Z,"schema isn't required per se as it only is needed for validating the checks for functional correctness (syntax). furthermore, if a file has a file extension we expect scanning will still work just fine. for instance, if you try to scan argocd configs without having an argocd schema is still fine as they're treated as regular yaml files.",0,0.9821089506149292
1513585473,6234,simar7,2024-03-05T22:40:47Z,"can we format this a little better, this is how it renders for me in the browser.",0,0.984370768070221
1513590553,6234,simar7,2024-03-05T22:46:54Z,"we inform the user about policy namespaces in [a link] part of the docs but i wonder if we can tie that in here as well because without passing a custom namespace, the custom checks will not be evaluated (trivy by default only runs in it's own namespace, unless specified by the user).",0,0.9778825640678406
1513599668,6234,simar7,2024-03-05T22:58:49Z,we need to update the link to `source-types` to point to [a link],0,0.9887561202049255
1513604332,6234,simar7,2024-03-05T23:03:41Z,"tbh i don't understand what's the ""in table"" and ""json"" are for. could you clarify? the table is quite wide and not very easy to view as you can see below. should we split into two table assuming we need all the columns? but nevertheless, we should move the ""required"" column to the left as it's probably the most important for users to know.",0,0.9036638736724854
1513604886,6234,simar7,2024-03-05T23:04:21Z,use trivy hyperlinks.,0,0.983350932598114
1513606244,6234,simar7,2024-03-05T23:06:09Z,"services are defined within a provider, so rds is a service and aws is a provider. your link seems to point to providers directory.",0,0.9873393774032593
1513606682,6234,simar7,2024-03-05T23:06:54Z,maybe we can update all defsec links to point to trivy? that might uncover any shortcomings as well.,0,0.9836716055870056
1513608745,6234,simar7,2024-03-05T23:09:46Z,comma splice [code block],0,0.9860196113586426
1514116455,6234,AnaisUrlichs,2024-03-06T09:21:55Z,"upps, i did it at other locations, missed this one",0,0.597663402557373
1516039278,6234,AnaisUrlichs,2024-03-07T11:58:54Z,"could you please clarify what ""in table"" and ""in json"" is as we are not sure what that means? i assume the output format but not sure how it relates to writing policies?",0,0.978871762752533
1516045764,6234,AnaisUrlichs,2024-03-07T12:04:30Z,"i don't like them, it makes it more difficult to ""read"" in large documents",-1,0.9779794812202454
1548157622,6234,knqyf263,2024-04-02T15:59:11Z,"originally it represented which fields were displayed in json/table format, but as it does not appear to be maintained, it can be removed.",0,0.9884632229804993
1549308885,6234,AnaisUrlichs,2024-04-03T09:11:23Z,"oki, thank you",1,0.9120867848396301
1550642710,6234,simar7,2024-04-03T23:29:10Z,i saw the review request but i still see the json/table columns in the pr. did you forget to push the change?,0,0.9875916242599487
1595218153,6234,AnaisUrlichs,2024-05-09T09:37:41Z,there is a difference between 1. writing/contributing rego checks 2. writing/contributing custom compliance reports this docs is the first,0,0.9858112335205078
1883484981,8080,DmitriyLewen,2024-12-13T07:32:30Z,nit: use `parse.go` name,0,0.9869689345359802
1883493122,8080,DmitriyLewen,2024-12-13T07:40:26Z,can you create `packageid` function (as in other parsers)?,0,0.9898514747619629
1883496655,8080,DmitriyLewen,2024-12-13T07:43:26Z,this worries me. there are problems when there are multiple `root` packages (see #7802). perhaps we want to add a check for multiple root packages?,-1,0.9745449423789978
1883498530,8080,DmitriyLewen,2024-12-13T07:45:12Z,"uuic uv.lock contains sorted packages, but i still suggest to sort packages, dependencies, dependson",0,0.9888872504234314
1883524804,8080,DmitriyLewen,2024-12-13T08:09:20Z,i don't want to do 2 cycles what do you think about this? [code block],0,0.9605662822723389
1883536216,8080,DmitriyLewen,2024-12-13T08:19:20Z,"uurc usually don't use nested functions, using them for similar cases (e.g. [a link] can we move this function out?",0,0.9806681871414185
1883543379,8080,DmitriyLewen,2024-12-13T08:25:29Z,is this possible? if we didn't find the root package in the parser - maybe we need to find it in `pyproject.toml` file in analyzer,0,0.9854487776756287
1883555435,8080,DmitriyLewen,2024-12-13T08:35:01Z,"add this type to languages ​​and lock files. otherwise, this works for `rootfs`: [code block]",0,0.9886510372161865
1883556554,8080,DmitriyLewen,2024-12-13T08:35:46Z,debug?),0,0.9709766507148743
1883660569,8080,nikpivkin,2024-12-13T09:52:01Z,the suggested code does not use `devdeps`,0,0.9874812960624695
1883678853,8080,nikpivkin,2024-12-13T10:04:06Z,root package always exists inside the lockfile. see [a link],0,0.98895663022995
1883687084,8080,DmitriyLewen,2024-12-13T10:08:52Z,"sorry, i forgot to write 2nd part my suggest :grinning_face_with_smiling_eyes: we can save non-dev dependencies and check `!ok` here: [a link]",-1,0.9823052883148193
1883689263,8080,DmitriyLewen,2024-12-13T10:10:34Z,"then the case when the lock file does not have a root package is an invalid lock file. i suggest returning an error when the root package is not found (and attach this link to the comment, please)",0,0.9853690266609192
1883689276,8080,nikpivkin,2024-12-13T10:10:34Z,done [a link],0,0.987381100654602
1883689420,8080,nikpivkin,2024-12-13T10:10:40Z,done [a link],0,0.987381100654602
1883689693,8080,nikpivkin,2024-12-13T10:10:53Z,done [a link],0,0.987381100654602
1883690650,8080,nikpivkin,2024-12-13T10:11:36Z,lockfile cannot contain multiple root projects [a link],0,0.9875385761260986
1883692366,8080,nikpivkin,2024-12-13T10:12:58Z,fair enough. done [a link],0,0.9136762619018555
1883692978,8080,nikpivkin,2024-12-13T10:13:27Z,forgot about that. done [a link],-1,0.7775266170501709
1883693676,8080,nikpivkin,2024-12-13T10:13:55Z,fixed [a link],0,0.9879513382911682
1883699598,8080,nikpivkin,2024-12-13T10:18:15Z,for this `devdeps` needs to be filled in. i start a recursive traversal from the root project and its direct dependencies to get a list of all dependencies that don't belong to any group. all dependencies that are not visited during the traversal are dev.,0,0.9887855052947998
1883711484,8080,DmitriyLewen,2024-12-13T10:27:06Z,"you are absolutely right. essentially, i'm suggesting that you reverse your logic: [code block]",0,0.8257038593292236
1883713142,8080,nikpivkin,2024-12-13T10:28:20Z,would it be a good tone to refer to the uv codebase?,0,0.9823012351989746
1883717303,8080,DmitriyLewen,2024-12-13T10:31:44Z,we always try to reproduce the logic of the language file application. `mvn` is a very clear example. so it's quite normal.,0,0.9139021039009094
1883754533,8080,nikpivkin,2024-12-13T10:57:29Z,"what do you think about logging this instead of returning an error? if we return an error, the analyzer will stop traversing. by the way, the same is true for other analyzers. a project may contain test data with broken files, analyzing which we stop traversing.",0,0.975264847278595
1886170276,8080,DmitriyLewen,2024-12-16T04:56:48Z,good point. let's use logger here and return `nil`: [a link],1,0.9616259932518005
1886218634,8080,nikpivkin,2024-12-16T05:58:26Z,that's a good idea. done [a link],1,0.9653470516204834
1886495826,8080,DmitriyLewen,2024-12-16T09:43:40Z,i think it makes no sense to share the link for users. [code block],0,0.8177797198295593
1886498737,8080,DmitriyLewen,2024-12-16T09:45:35Z,[code block] but you need to use `packages` and `dependencies` here: [a link],0,0.9885106086730957
1886499540,8080,DmitriyLewen,2024-12-16T09:46:09Z,can you use `//` here?,0,0.9880174398422241
1886502360,8080,DmitriyLewen,2024-12-16T09:47:57Z,`parse` may return 2 errors: - no root package - wrong toml file so i think we won't get many errors and can use `warn` here.,0,0.9749945998191833
1886504788,8080,DmitriyLewen,2024-12-16T09:49:31Z,let's save one line :grinning_face_with_smiling_eyes: [code block],0,0.9030229449272156
1886507549,8080,DmitriyLewen,2024-12-16T09:51:24Z,we already found the root package above. let's use it here instead of re-finding the root package.,0,0.9874841570854187
1886583819,8080,nikpivkin,2024-12-16T10:41:56Z,then the example would be hard to copy,0,0.9735837578773499
1886587741,8080,DmitriyLewen,2024-12-16T10:44:44Z,"got it, then at least straighten it out",0,0.9744462370872498
1886626596,8080,nikpivkin,2024-12-16T11:08:53Z,i forgot to look at the sorting implementations :),1,0.8147984147071838
1887935031,8080,DmitriyLewen,2024-12-17T05:50:59Z,same as for root package. we already got `packages` map: [a link] let's use this map.,0,0.9853508472442627
1887936774,8080,DmitriyLewen,2024-12-17T05:53:20Z,let's check case when lock file contains 2 root package and return error for this case.,0,0.9890503883361816
1887936897,8080,DmitriyLewen,2024-12-17T05:53:30Z,and add test case for that.,0,0.986825168132782
1888043465,8080,nikpivkin,2024-12-17T07:50:04Z,wouldn't this check be unnecessary since uv doesn't support more than 1 root package?,0,0.9801738262176514
1888148801,8080,DmitriyLewen,2024-12-17T09:07:00Z,it's only 1 line of code. but it shows a warning to the user if he/she has changed the file incorrectly. we will also see the problem immediately if the following logic is changed: [a link],0,0.9832181930541992
1889979261,8080,knqyf263,2024-12-18T10:15:51Z,i don't think we need to fill in the deprecated field for the newly added package manager.,0,0.9737669825553894
1889986712,8080,knqyf263,2024-12-18T10:20:06Z,"we used to add this kind of test when the `package` struct was very small. today, it has `relationship`, `license` and many other fields, which makes it hard to maintain large test cases. instead, we manually create small test cases to cover edge cases these days. i think we can delete `uvlarge`.",0,0.9779819846153259
1889988461,8080,knqyf263,2024-12-18T10:21:15Z,i needed clarification on why this function could identify prod dependencies from the source code. can you please add some comments?,0,0.9845549464225769
1890190752,8080,nikpivkin,2024-12-18T12:53:52Z,added [a link],0,0.9870722889900208
1890190982,8080,nikpivkin,2024-12-18T12:54:03Z,removed [a link],0,0.980537474155426
1890191318,8080,nikpivkin,2024-12-18T12:54:17Z,done [a link],0,0.987381100654602
1890606062,8080,knqyf263,2024-12-18T17:31:44Z,"are development dependencies listed in `[package.dev-dependencies]`? if so, we need to parse them for `--include-dev-deps`.",0,0.989231526851654
1891199143,8080,knqyf263,2024-12-19T06:00:13Z,we will do that in a separate pr.,0,0.9863622784614563
1891328554,8080,DmitriyLewen,2024-12-19T08:19:02Z,"users don't always need to scan development dependencies, so we don't always use `dev` field and just skip them. do you have a feature request? if not, i suggest waiting for a user request (like we did for yarn dependencies).",0,0.9841901659965515
1919756905,8177,DmitriyLewen,2025-01-17T08:45:50Z,i added info about `-` and `0` into logs: [code block] but we can add info before table. e.g.: [code block] /trivy wdyt?,0,0.9895344376564026
1919759949,8177,DmitriyLewen,2025-01-17T08:48:18Z,the summary table contains aggregated targets. do we want to split them by `filepath` in this pr or just start working on removing the aggregation (in another pr)? cc.,0,0.9888229370117188
1922767474,8177,simar7,2025-01-20T18:54:34Z,"should we elaborate on why a certain file ""didn't scan""? is it because it was unable to get parsed, wasn't valid for the scan (then maybe we shouldn't even traverse it) or something else?",0,0.9654801487922668
1923076075,8177,DmitriyLewen,2025-01-21T05:05:25Z,"i think we can wait for user feedback: in most cases `-` will be used for the case when the file is scanned by another scanner. e.g., we scanned `dockerfile`, and `-` will be for vulnerabilities. in case the file is invalid (e.g. wrong lock file) - the report will not include the result with this file.",0,0.9868412017822266
1933152414,8177,knqyf263,2025-01-29T03:07:27Z,i prefer putting it in the footer. [code block],0,0.936261773109436
1933191544,8177,knqyf263,2025-01-29T03:18:31Z,"i didn't split aggregated results, but, actually yes, we can split them in the table writer. i think we should do that in this pr. we will not need the logic after removing the aggregation, though.",0,0.9777555465698242
1933339983,8177,DmitriyLewen,2025-01-29T06:44:23Z,examples: [code block],0,0.9847283959388733
1933391082,8177,DmitriyLewen,2025-01-29T07:42:04Z,"this check is required to hide os package licenses from summary table. this is necessary to avoid confusion - when we show that we were looking for licenses for os packages, but there were no os packages in the scanned folder. e.g.: [code block] but on the other hand it will be a problem for scanning an image where we did not find os packages. because the user may think that we did not look for licenses for os package files. but the second case is more rare, so i chose this way. tell me - if you disagree or have other ideas",0,0.9285334348678589
1933392989,8177,DmitriyLewen,2025-01-29T07:44:00Z,similar case. we only keep file licenses and dpkg licenses (but we remove them in `applier`) in this slice. so the report can only include file licenses. we don't need to show this result if the `--liecense-full` flag is not set.,0,0.9877848625183105
1933619210,8177,knqyf263,2025-01-29T10:24:02Z,"actually, after we introduce the summary table, i don't think we have to show os packages when trivy is unable to find os packages.",0,0.9833971858024597
1933669365,8177,DmitriyLewen,2025-01-29T10:58:17Z,it make sense. removed in [a link],0,0.9859068393707275
1933673301,8177,DmitriyLewen,2025-01-29T11:01:03Z,done - [a link] + [a link],0,0.9831010699272156
1933673597,8177,DmitriyLewen,2025-01-29T11:01:17Z,changed in [a link],0,0.9864720106124878
1933701726,8177,knqyf263,2025-01-29T11:21:59Z,"for example, suppose a flag has already been added for a long time, and we don't want to terminate a program for backward compatibility as it will change behavior. in that case, we have to make it a warning, but an error is basically better because the user may not see the warning message. [code block]",0,0.9782045483589172
1933708577,8177,knqyf263,2025-01-29T11:27:16Z,"it looks like the legend is still in header, not footer.",0,0.9841430187225342
1933744147,8177,DmitriyLewen,2025-01-29T11:51:43Z,"sorry. something ""stuck"" me. i don't know why i added legend before summary table. fixed in [a link]",-1,0.9883643388748169
1933749871,8177,DmitriyLewen,2025-01-29T11:55:29Z,i saw one case - we show log after summary table: [code block] we might want to add a header (e.g. `result tables`) before result tables (after the legend) to separate summary table from other tables. but on the other hand i think it's redundant.,0,0.9740014672279358
1940627922,8177,knqyf263,2025-02-04T07:23:54Z,nit: [code block],0,0.9873168468475342
1940701927,8177,knqyf263,2025-02-04T08:18:02Z,nit: we can probably remove an iteration over `vulns`. [code block],0,0.9895899891853333
1940728683,8177,knqyf263,2025-02-04T08:38:08Z,it might be time to split into functins. [code block],0,0.9867146611213684
1940744746,8177,knqyf263,2025-02-04T08:49:47Z,"we may need to write the rendered output to a buffer and flush it later to stdout, like [a link]. [a link]",0,0.9871794581413269
1942330835,8177,DmitriyLewen,2025-02-05T06:51:09Z,changed in [a link],0,0.9864720106124878
1942331074,8177,DmitriyLewen,2025-02-05T06:51:26Z,nice catch! removed in [a link],1,0.9903392195701599
1942331606,8177,DmitriyLewen,2025-02-05T06:52:07Z,changed in [a link],0,0.9864720106124878
1942333988,8177,DmitriyLewen,2025-02-05T06:54:54Z,i used renderer interface for summary table - [a link] i found that we have same problem in `main` branch: [code block] so i want to fix that in separate pr.,0,0.9850456118583679
1942469011,8177,DmitriyLewen,2025-02-05T08:53:22Z,- [a link],0,0.9849315881729126
1977038136,8177,DmitriyLewen,2025-03-03T08:04:18Z,i thought we could just enable all scanners. but i think we need to use the same format(logic) for `convert` and other subcommands. so i enabled `--scanners` that users can get summary table as for `table` format.,0,0.9832589626312256
1977040643,8177,DmitriyLewen,2025-03-03T08:06:37Z,i rebased and updated pr with updated interface,0,0.9788503050804138
1977221979,8177,DmitriyLewen,2025-03-03T10:03:46Z,changed in [a link],0,0.9864720106124878
1977222051,8177,DmitriyLewen,2025-03-03T10:03:49Z,changed in [a link],0,0.9864720106124878
1977222130,8177,DmitriyLewen,2025-03-03T10:03:51Z,changed in [a link],0,0.9864720106124878
1977222183,8177,DmitriyLewen,2025-03-03T10:03:53Z,changed in [a link],0,0.9864720106124878
1977239864,8177,knqyf263,2025-03-03T10:15:35Z,"this is a major ui change, so there might be some backlash from the community. in that case, since switching from opt-out to opt-in is possible, it might be a good idea to mark it as experimental. also, as [a link], boolean flags are not very flexible. specifying it as something like `--table summary,detail` could be an alternative option. this approach would allow us to meet future requests from users who may only want to display the summary table, and by changing the default values, it would be easy to switch between opt-in and opt-out.",0,0.9101565480232239
1977244300,8177,DmitriyLewen,2025-03-03T10:17:47Z,hm... it make sense. i will update pr.,0,0.9375168085098267
1977269437,8177,knqyf263,2025-03-03T10:30:53Z,"there are several options: - --table - --table-view - --table-format - --table-mode also, - summary|detail - summary|detailed - etc.",0,0.9839500188827515
1977273226,8177,nikpivkin,2025-03-03T10:33:37Z,"i think this is a good idea. in the `trivy-aws` plugin, the report flag takes an enumeration:",1,0.9046220183372498
1977275054,8177,DmitriyLewen,2025-03-03T10:34:51Z,`--table-mode` + `summary|details` (with `s` suffix) are my favorite.,0,0.9225729703903198
1977296637,8177,knqyf263,2025-03-03T10:49:39Z,"my friend :) recommended `detailed`, but you can decide it. --- when deciding on terminology to distinguish between a concise summary output and a more exhaustive one, many tools and uis use the terms **“summary”** and **“detailed.”** while “detail” or “details” might seem similar at first glance, **“detailed”** is often chosen for the following reasons: 1. **consistent adjective pairing** - in english, it’s common to describe views or reports using adjectives. for instance, many interfaces provide a “summary view” and a “detailed view,” or a “summary report” and a “detailed report.” using “detailed” as an adjective aligns naturally with “summary” in such contexts. 2. **clear mode indicator** - when specifying a mode in a cli or configuration file, saying `detailed` conveys that you want the more comprehensive or in-depth version of the output. an adjective like “detailed” feels more intuitive than the noun form “details,” which might be perceived as describing the objects being displayed rather than the mode or style of display. 3. **established convention** - many existing tools (even if they don’t directly use the exact words “summary” and “detailed”) follow the pattern of an abbreviated or condensed output versus a more verbose output. where explicit labels are used, it’s more common to see “detailed” than “details” for the extended version. 4. **smoother documentation** - documentation and user guides often refer to “detailed mode” (or a “detailed report”), making it very clear that it’s an expanded form of the output. conversely, “details mode” or “details report” can sound slightly off in english usage, as it doesn’t match the typical way we describe different presentation modes. in short, **“detailed”** pairs nicely with **“summary”** and is more recognizable to users as the counterpart for a “deep-dive” option, while “detail” or “details” tend to read more like nouns referring to the actual data rather than the presentation style.",1,0.9695671796798706
1977298780,8177,knqyf263,2025-03-03T10:51:11Z,"`--table-mode` also looks good to me. then, the pairing of ""summary mode"" and ""detailed mode"" may be straightforward.",1,0.7179853320121765
1978119487,8177,simar7,2025-03-03T20:02:16Z,"in the interest of not committing bike shedding... i'll vote for `--table-mode` flag with `=detailed,summary` as values. :grinning_squinting_face:",-1,0.6440958976745605
1978829936,8177,knqyf263,2025-03-04T07:58:14Z,"since it's a normal usage, we don't need to use a note, imo. [code block]",0,0.9856683015823364
1978830105,8177,knqyf263,2025-03-04T07:58:22Z,nit [code block],0,0.9879410862922668
1978832122,8177,knqyf263,2025-03-04T07:59:59Z,nit [code block],0,0.9879410862922668
1978832892,8177,DmitriyLewen,2025-03-04T08:00:35Z,changed `--no-summary-table` to `--table-mode` - [a link] perhaps you will have more ideas.,0,0.9816070795059204
1978923869,8177,knqyf263,2025-03-04T08:52:08Z,"i played with this pr and found that it's common that no secrets detected. since warnings should be displayed for unexpected things, i think the info level is better here. [code block]",0,0.9541407823562622
1978936811,8177,knqyf263,2025-03-04T08:59:07Z,"nit: it's no big deal, but the alignment looks a bit strange when `-` is used in all columns. [code block] [code block]",0,0.8500720858573914
1978960143,8177,DmitriyLewen,2025-03-04T09:09:01Z,nice catch. i somehow didn't pay attention to it. updated [a link],1,0.9806702136993408
307968523,99,SuperSandro2000,2019-07-27T15:26:56Z,you miss a newline here.,-1,0.5864071249961853
307968594,99,SuperSandro2000,2019-07-27T15:29:54Z,those lines are kinda useless.,-1,0.958390474319458
307968605,99,SuperSandro2000,2019-07-27T15:30:28Z,i would rather see the shell changed here. see [a link],0,0.9831520318984985
307968621,99,SuperSandro2000,2019-07-27T15:30:59Z,hardcoding version numbers is nice but i would make it a little bit less strict.,0,0.5072369575500488
307968720,99,SuperSandro2000,2019-07-27T15:33:20Z,i really dislike it when people do this. it prvents you from doing ``docker run --rm -it trivy/trivy bash``.,-1,0.9872274398803711
307973174,99,pascalandy,2019-07-27T18:12:50Z,"true, it's the way i draft my wip stuff :)",1,0.9752496480941772
307973194,99,pascalandy,2019-07-27T18:13:40Z,i don't follow?,0,0.9345024824142456
307973224,99,pascalandy,2019-07-27T18:14:59Z,don't know here. all official dockerfile use this format as well,0,0.9852520227432251
307973266,99,pascalandy,2019-07-27T18:16:26Z,"no problem. on my critical apps in prod, i prefer to do this as i had one nassssty bug cause but a package in the past.",0,0.8734938502311707
307973305,99,pascalandy,2019-07-27T18:17:51Z,"humm, this is strange. it should not prevent you to `docker run --rm -it trivy/trivy sh`",-1,0.9604032039642334
307973410,99,pascalandy,2019-07-27T18:21:17Z,the beauty of this is that you can overide cmd by passing an attribute during the docker run.,0,0.972981333732605
307973453,99,pascalandy,2019-07-27T18:22:12Z,done,0,0.9764507412910461
307989252,99,SuperSandro2000,2019-07-28T07:30:32Z,github told me that you miss a line break here. this breaks diffs at the end of the file. or you just override it and put a trivy before.,0,0.9684666395187378
307989301,99,SuperSandro2000,2019-07-28T07:32:01Z,but you would need to repeat this in every run. kinda pointless.,-1,0.9758816957473755
307989366,99,SuperSandro2000,2019-07-28T07:34:07Z,i think this is a mistake.,-1,0.9320451021194458
307989379,99,SuperSandro2000,2019-07-28T07:34:38Z,this would pass sh as an argument to trivy.,0,0.9874714016914368
308003350,99,pascalandy,2019-07-28T14:06:33Z,"well, this build runs perfectly. i don't know what to do with this.",0,0.6055212616920471
308005711,99,SuperSandro2000,2019-07-28T15:05:39Z,you added a new line to the file in a commit somewhere. consider this solved.,0,0.9795255661010742
308015887,99,pascalandy,2019-07-28T20:02:43Z,no idea where this is coming from. can you fix it?,0,0.8664150238037109
308016381,99,fbartels,2019-07-28T20:16:58Z,"you don't need to delete this dir, when running apk with --no-cache",0,0.9863665103912354
308023329,99,pascalandy,2019-07-28T23:25:00Z,it's best practice when installing packages.,0,0.9735469222068787
308023433,99,pascalandy,2019-07-28T23:27:13Z,agreed,0,0.9622963666915894
308023774,99,pascalandy,2019-07-28T23:33:57Z,done,0,0.9764507412910461
308091974,99,SuperSandro2000,2019-07-29T07:42:36Z,no i can't. it's your pr not mine.,0,0.7342774271965027
308227487,99,pascalandy,2019-07-29T13:25:15Z,fixed,0,0.975196123123169
308227805,99,pascalandy,2019-07-29T13:25:52Z,what do you suggest?,0,0.9787071943283081
308438563,99,SuperSandro2000,2019-07-29T21:08:50Z,just add trviy to the cmd. if you wan't to change it you just need to write trivy in the command arg.,0,0.9853877425193787
308463933,99,pascalandy,2019-07-29T22:28:22Z,agreed?,0,0.973708987236023
308463976,99,pascalandy,2019-07-29T22:28:31Z,done,0,0.9764507412910461
308464145,99,pascalandy,2019-07-29T22:29:07Z,done,0,0.9764507412910461
308487861,99,SuperSandro2000,2019-07-30T00:15:24Z,you are missing a new line here,0,0.9600198268890381
308497845,99,pascalandy,2019-07-30T01:12:52Z,this is weird. see screenshot: ![a link],-1,0.9910927414894104
308497864,99,pascalandy,2019-07-30T01:13:04Z,what's missing?,0,0.9348101615905762
308627454,99,SuperSandro2000,2019-07-30T09:40:35Z,the final new line. you always add a final new line to files in the linux world.,0,0.9877614974975586
308629588,99,pascalandy,2019-07-30T09:45:07Z,humm didn't know it. cheers!,1,0.9790938496589661
363371828,99,colin-nolan,2020-01-06T16:31:29Z,"referring to the previous discussion about this line ([a link] - the change from calling `trivy` from the entrypoint to the cmd does not really make sense... the first thing i did with the image after building it was to kick the tires: [code block] [code block] that's what i expected - i'd need to pass some arguments. happily, `trivy` printed usage information telling me that i needed to state the image as the first positional argument - i can now get to work: [code block] [code block] this is not what i expected to happen, given the usage information. setting the command to the application like this only makes sense if the application is a service. as `trivy` is not, the only thing that can ever happen is that it is envoked without any arguments and fails... that's not the most useful thing in the world! it would therefore be better if changed back to entrypoint (and it maintains compatibility with how the existing image works). if you want to hack around in a container when the entrypoint has been set to something that's not a shell, the way to do it is to override the entrypoint: `docker run --rm -it --entrypoint=bash trivy/trivy`.",-1,0.7429947257041931
363375129,99,colin-nolan,2020-01-06T16:38:50Z,"it would be great if `goarch` was based on the actual build architecture/a build variable (e.g. this builds fine for a rpi if set to `arm`). however, it may be better to solve this later, in a following pr.",0,0.9103068709373474
363471792,99,SuperSandro2000,2020-01-06T20:37:02Z,and i expect it to run bash cause all official images do function like this and adding ``--entrypoint`` works but it is not nice.,0,0.644232988357544
363472338,99,SuperSandro2000,2020-01-06T20:38:39Z,i would love to see something like [a link] . adds 116 bytes and fixes my and your problem.,0,0.6351915597915649
363527433,99,colin-nolan,2020-01-06T23:14:46Z,"i've not reviewed what all official images do but i would comment that running a shell inside such a container is perhaps not most people's the main use case. it is interesting to note that ""distroless"" images are seemingly becoming popular now (e.g. those by google [a link] which do not support such use case at all. i wouldn't mind a more exotic entrypoint as you suggested.",0,0.8383117318153381
363528216,99,colin-nolan,2020-01-06T23:17:43Z,these need to be populated (or removed if not relevant).,0,0.9806061387062073
363554641,99,pascalandy,2020-01-07T01:14:56Z,"please edit them as i'm not the maintainer of this project. or maybe remove it, and add this task in your backlog. these labels are following best practices.",0,0.9818846583366394
365021274,99,colin-nolan,2020-01-10T00:14:29Z,i am also not the maintainer ;). i will see if any of the maintainers will get involved.,0,0.5403620004653931
432822184,99,Johannestegner,2020-05-30T08:19:50Z,"if you are using docker buildx to build multi-arch the `$targetarch` argument (auto injected but needs to be defined) contains the build arch (`amd64`, `arm64` etc). so basically: [code block] should work just fine.",0,0.9788975715637207
509840036,99,pascalandy,2020-10-22T02:20:22Z,i fixed this: [a link],0,0.9856756925582886
509841355,99,pascalandy,2020-10-22T02:25:09Z,agree,0,0.9757640957832336
393040016,433,knqyf263,2020-03-16T13:56:55Z,"if it is vulnerabilities of libraries, we should not the severity of a vendor. we have to think about the way to display the vendor severity for os package vulnerabilities and the nvd/public database severity for library vulnerabilities.",0,0.957064151763916
397543183,433,simar7,2020-03-25T00:32:53Z,"roger that. with the latest changes, this is now possible: this was a node vulnerability where the vendor (node) rated it lower than nvd, so we preferred the node vulnerability instead.",0,0.9722937345504761
397558898,433,simar7,2020-03-25T01:29:16Z,i'm not sure if this is correct since we have to maintain `detect` for backwards compatibility. cc,0,0.8515483736991882
397834182,433,knqyf263,2020-03-25T13:01:03Z,i think we don't have to store `vendorseverity` in the result.,0,0.9832594394683838
398025720,433,knqyf263,2020-03-25T17:11:23Z,"if `ok` is false, we should display the severity of nvd. i couldn't find such a process. is there something to do it?",0,0.886384129524231
398027530,433,knqyf263,2020-03-25T17:13:51Z,"trivy is not a library for now, so i think it doesn't matter.",-1,0.5045627355575562
398028120,433,knqyf263,2020-03-25T17:14:37Z,todo: fill reporttype,0,0.9881066083908081
398028685,433,knqyf263,2020-03-25T17:15:20Z,"if we send a `reporttype` in a rpc request, we should use it instead of `req.osfamily`.",0,0.9884888529777527
398067054,433,simar7,2020-03-25T18:10:56Z,"by default, `getvulnerability` includes a vulnerability struct that already has a `severity` populated in it. you can see it here [a link] but there's another point that i think is possible, i added some tests to show that: [a link] and [a link] good catch!",1,0.96384197473526
398071479,433,simar7,2020-03-25T18:17:39Z,"yeah, where can we get this from?",0,0.9816606044769287
398074207,433,simar7,2020-03-25T18:21:45Z,could you explain this a little more?,0,0.9791058897972107
398083639,433,simar7,2020-03-25T18:36:36Z,yeah currently `detectedvulnerability ` includes `vulnerability` which includes `vendorseverity`. [a link] is there a way we can get rid of it in the result?,0,0.9858953356742859
398501249,433,knqyf263,2020-03-26T11:30:29Z,"`getvulnerability` populates a severity which is sometimes not from nvd. nit: btw, i feel it is weird `getxxx` doesn't return anything.",-1,0.9847713112831116
398502834,433,knqyf263,2020-03-26T11:33:33Z,we have to add `type` here. [a link] but this api exists for backward compatibility because we switched `detect` to `scan` for json cache. i'm not sure we should maintain this function.,0,0.9040554165840149
398502980,433,knqyf263,2020-03-26T11:33:49Z,ditto,0,0.8428916931152344
398780652,433,simar7,2020-03-26T18:01:51Z,also shouldn't a test be failing right now if this information is missing?,0,0.9645220041275024
398898124,433,simar7,2020-03-26T21:16:56Z,fixed [a link],0,0.9879513382911682
398898193,433,simar7,2020-03-26T21:17:05Z,fixed [a link],0,0.9879513382911682
398911855,433,simar7,2020-03-26T21:45:19Z,i added source [a link] and removed the vendorseverity here [a link],0,0.9872660636901855
398988449,433,simar7,2020-03-27T01:39:33Z,note to self: change this to master once [a link] is merged.,0,0.9874994158744812
400822525,433,knqyf263,2020-03-31T10:58:30Z,you have to add some tests for light database instead. it may be like the following. [code block],0,0.9846656322479248
400822890,433,knqyf263,2020-03-31T10:59:04Z,is this todo necessary? the bool seems to be already removed.,0,0.9870930314064026
400823196,433,knqyf263,2020-03-31T10:59:41Z,note: remove this todo.,0,0.9795814156532288
401176841,433,simar7,2020-03-31T19:57:31Z,added [a link],0,0.9870722889900208
406705331,433,knqyf263,2020-04-10T10:43:46Z,"it should point to this commit. [a link] in addition, you need `go mod tidy`",0,0.9870737791061401
406733146,433,knqyf263,2020-04-10T12:20:09Z,why is the only first one used?,0,0.9402996897697449
406734729,433,knqyf263,2020-04-10T12:25:06Z,cruft?,0,0.9747046232223511
406737051,433,knqyf263,2020-04-10T12:32:32Z,"didn't you fix them, yet?",0,0.9790462255477905
406737686,433,knqyf263,2020-04-10T12:34:15Z,i'd like to know why this result doesn't contain `type`.,0,0.9828164577484131
406738345,433,knqyf263,2020-04-10T12:36:25Z,this error should be just after line 49.,0,0.9649207592010498
406739721,433,knqyf263,2020-04-10T12:40:20Z,nit: [code block] ```,0,0.9845751523971558
406740257,433,knqyf263,2020-04-10T12:42:00Z,did you apply `make fmt`? it's a bit weird compared to `target`.,-1,0.9755479693412781
406740905,433,knqyf263,2020-04-10T12:43:50Z,nit: i think we don't have to change the import order like this.,0,0.9677771329879761
406741450,433,knqyf263,2020-04-10T12:45:21Z,is there any reason not to use `result.type`?,0,0.9851524829864502
406741761,433,knqyf263,2020-04-10T12:46:22Z,"`rpcresults` has `type` in the struct, right? why does it need `resulttype` as an argument?",0,0.9863787889480591
406741919,433,knqyf263,2020-04-10T12:46:52Z,can't we do like the following? [code block],0,0.9868649840354919
407705406,433,simar7,2020-04-13T20:36:17Z,"si, i just forget to take the commented section out. i've fixed it.",0,0.9765216708183289
407715249,433,simar7,2020-04-13T20:54:39Z,"the mock was missing it, i added it.",0,0.9782738089561462
407720566,433,simar7,2020-04-13T21:04:49Z,i think adding the temporal variable of source doesn't really help with duplication. i'd like to leave it as is unless i missed a point.,0,0.9439173936843872
407723126,433,simar7,2020-04-13T21:09:59Z,yes i ran `make fmt`,0,0.9844363927841187
407724806,433,simar7,2020-04-13T21:13:25Z,it's my ide that thinks this is the right order. i can revert back. i don't think it's a big deal though.,0,0.7697739601135254
407742030,433,knqyf263,2020-04-13T21:50:18Z,"ok. but i want to know why it doesn't help. if the signature of getvendorseverity is changed, we have to fix all of them.",0,0.9564352035522461
407749218,433,simar7,2020-04-13T22:08:04Z,ah good catch.,1,0.9452776908874512
407752596,433,simar7,2020-04-13T22:17:02Z,"you are right. i don't recall why i added this, maybe it was prior to introducing the `type` type. i have removed it now. thanks!",1,0.9732955098152161
407752681,433,simar7,2020-04-13T22:17:16Z,fixed.,0,0.9810503125190735
407753494,433,simar7,2020-04-13T22:19:31Z,but it does [a link] is that not right?,0,0.8437178134918213
407756849,433,simar7,2020-04-13T22:28:21Z,"fair enough, i refactored it.",0,0.9558349251747131
409507789,433,knqyf263,2020-04-16T12:14:57Z,ok.,0,0.9735831022262573
409508406,433,knqyf263,2020-04-16T12:16:01Z,"ah, i see. i saw the only first one. after `go mod tidy`, they will be removed.",0,0.9832205772399902
1168657039,4058,knqyf263,2023-04-17T13:01:07Z,i think we can change it to `[]*spdx.package`. [code block],0,0.9876076579093933
1168661125,4058,knqyf263,2023-04-17T13:04:23Z,i think they are no longer needed after changing packages to slice.,0,0.9716904759407043
1168663024,4058,knqyf263,2023-04-17T13:05:29Z,i'm curious why we need go-cmp here. doesn't `assert.equal` work?,0,0.9480018019676208
1168665222,4058,knqyf263,2023-04-17T13:07:13Z,`creators` is a slice. do we need to sort it?,0,0.9877311587333679
1168666272,4058,knqyf263,2023-04-17T13:07:57Z,i believe we will not need that.,0,0.8080291748046875
1168667531,4058,knqyf263,2023-04-17T13:08:51Z,is the order of files inconsistent?,0,0.9629698991775513
1168709377,4058,FrimIdan,2023-04-17T13:37:05Z,"i kept it in order to remove duplications, i've used `[]*spdx.package` before but then i've got multiple packages with the same `elementid`.",0,0.9869673848152161
1168713516,4058,FrimIdan,2023-04-17T13:39:39Z,"oops, i'll remove it :)",-1,0.48644202947616577
1168714778,4058,FrimIdan,2023-04-17T13:40:16Z,since the map is used to remove duplications i still needed it.,0,0.9855205416679382
1168721221,4058,FrimIdan,2023-04-17T13:43:48Z,"i've done it to be on the safe side, so the goldan file will not need to be changed to the exact order. i can remove it if you like.",0,0.9674689769744873
1168722707,4058,FrimIdan,2023-04-17T13:44:12Z,same as in [a link],0,0.986356258392334
1168724934,4058,FrimIdan,2023-04-17T13:45:03Z,same as [a link] should i remove it?,0,0.9851036667823792
1168725788,4058,knqyf263,2023-04-17T13:45:35Z,could you share an example where you saw the duplications?,0,0.9876667261123657
1168727277,4058,knqyf263,2023-04-17T13:46:39Z,"yes, it is relevant to this discussion. [a link]",0,0.9753325581550598
1168732581,4058,knqyf263,2023-04-17T13:50:04Z,"imo, the golden file should be sorted in the exact order. we can remove it. it would be great if `bom.creationinfo.creators` implements [a link], though.",0,0.6600168347358704
1168748901,4058,FrimIdan,2023-04-17T14:01:10Z,"sure, i've got it from the unit test `testmarshaler_marshal - happy path for container scan`, `actionpack` define in `target: ""app/subproject/gemfile.lock"",` and in `target: ""app/gemfile.lock"",` [code block]",1,0.6178693771362305
1168758194,4058,FrimIdan,2023-04-17T14:08:13Z,done,0,0.9764507412910461
1168758437,4058,FrimIdan,2023-04-17T14:08:22Z,removed,0,0.9654131531715393
1168758676,4058,FrimIdan,2023-04-17T14:08:32Z,removed,0,0.9654131531715393
1168810267,4058,knqyf263,2023-04-17T14:33:18Z,"thanks. that is what i expected, and i wanted to confirm it. i want to change it to have both files, but it can be done in another pr. we can leave it as is.",1,0.934469997882843
1168815927,4058,knqyf263,2023-04-17T14:36:14Z,i'd sort packages when marshaling rather than in tests. [a link],0,0.9862789511680603
1168859942,4058,FrimIdan,2023-04-17T15:01:14Z,done,0,0.9764507412910461
1168860294,4058,FrimIdan,2023-04-17T15:01:28Z,done,0,0.9764507412910461
453951381,542,simar7,2020-07-13T21:44:31Z,please avoid use of global constants. you should make these as part of the server config struct that's available here [a link] and initialize them here [a link],0,0.9862674474716187
453952226,542,simar7,2020-07-13T21:45:57Z,dry: have one function that can take the current args and in addition have another arg for the appropriate action.,0,0.9873172640800476
453953246,542,simar7,2020-07-13T21:47:20Z,what's the difference between the two? running them locally they are the same: [code block],0,0.9839287996292114
453953487,542,simar7,2020-07-13T21:47:38Z,inline,0,0.9861072301864624
453957307,542,simar7,2020-07-13T21:53:33Z,this will panic. logger will only log the error that happens but it will not prevent it from getting used in the future. a simple way to reproduce this is to pass in `nil` for `gaugemetric` which would signal that it was not initialized.,-1,0.7137531638145447
453958135,542,simar7,2020-07-13T21:54:49Z,should validate if the input args are sane or not. see previous comment on how this will be part of a panic.,0,0.9041397571563721
453962378,542,simar7,2020-07-13T22:00:51Z,i think we should probably set a sane `timeout` as not setting one will keep connections open indefinitely. see here [a link],0,0.9763035178184509
453995476,542,yashvardhan-kukreja,2020-07-13T23:02:33Z,"so, last db update corresponds to the timestamp of last successful db update. but last db update attempt corresponds to the timestamp of last db update attempt made no matter if it failed or succeeded.",0,0.9856239557266235
459072487,542,yashvardhan-kukreja,2020-07-22T20:45:39Z,"so , if such kind of situation happens, then should i programme the code to panic and exit with status 1. or should i just programme it to log in the terminal ""gaugemetric not initialised"" but still **not** make the code exit and hence, allow the user to use the existing session for other functionalities, if they want?",0,0.9753161072731018
462742417,542,simar7,2020-07-30T05:24:01Z,the latter. this shouldn't panic and exit as it's an optional component. we should log it and carry on as usual with ensuring that nothing else panics down the road.,0,0.9588677883148193
465967091,542,simar7,2020-08-05T19:55:07Z,i think you're fine with just having `prometheus gauge found to be nil` as `wanterr`.,0,0.9713336229324341
465967902,542,simar7,2020-08-05T19:56:35Z,lowercase the returned error. `prometheus gauge found to be nil` see [a link],0,0.9858520030975342
465968288,542,simar7,2020-08-05T19:57:22Z,these comments are not necessary. the code is self documenting.,0,0.9811919331550598
465968366,542,simar7,2020-08-05T19:57:31Z,remove as well,0,0.9853297472000122
465969987,542,simar7,2020-08-05T20:00:16Z,this is not needed. in go by default the value will be `nil`. you've added a check before using it in functions where it's used and that's sufficient.,0,0.9876691699028015
469803825,542,knqyf263,2020-08-13T09:00:09Z,`config` is for cli options. could you move it to the server package?,0,0.9894072413444519
469814253,542,knqyf263,2020-08-13T09:17:01Z,i'm just curious why you need `last_db_update_attempt`. is there any example in other oss?,0,0.9737535119056702
469815896,542,knqyf263,2020-08-13T09:19:47Z,`time.now()` doesn't match with the date when db is updated. we have to use metadata instead of `time.now`,0,0.9860401153564453
469816091,542,knqyf263,2020-08-13T09:20:05Z,would you wrap this error with some context?,0,0.9797037839889526
469843833,542,yashvardhan-kukreja,2020-08-13T10:08:24Z,"actually, the issue mentioned it as one of the requirements, so moved on with that :)",1,0.5226141214370728
485199465,542,yashvardhan-kukreja,2020-09-08T21:13:46Z,"actually, it was an old piece of code which i forgot to refactor. i'll deal with it.",0,0.9836927056312561
491199141,542,simar7,2020-09-18T21:29:21Z,remove,0,0.9725990891456604
491199283,542,simar7,2020-09-18T21:29:47Z,remove,0,0.9725990891456604
513553726,709,knqyf263,2020-10-28T15:47:11Z,"this change increases the possibility of breaking table format on a terminal. ![a link] we need to break a line in the middle or get the width of the terminal to dynamically change the output. if the terminal is wide enough, it displays avd links. or, we can disable it in the table, add a new key in json like `avdlink`, and put the link into it.",0,0.8332430124282837
513554157,709,knqyf263,2020-10-28T15:47:41Z,what's going to happen if `vulnerabilityid` is not cve-id?,0,0.9719851613044739
513554329,709,knqyf263,2020-10-28T15:47:55Z,ditto,0,0.8428916931152344
513554391,709,knqyf263,2020-10-28T15:48:00Z,ditto,0,0.8428916931152344
513772441,709,simar7,2020-10-28T21:29:03Z,is that a possibility? if so what could it be? i was assuming it never would be. but in that case today it will just be a 404.,0,0.971367597579956
513779194,709,simar7,2020-10-28T21:42:23Z,could you expand on what you meant by break a line in the middle? how wide is wide enough? >80px? anything under 80px is presented with no links? is that the idea? the problem with json is highlighted here [a link],0,0.9857483506202698
513970932,709,knqyf263,2020-10-29T05:00:09Z,there are many vulnerability ids other than cve-id. most of the vulnerabilities for programming language library are not cve-id assigned. do you think 404 is acceptable?,0,0.9603481292724609
513980468,709,knqyf263,2020-10-29T05:20:13Z,"i meant something like the following. it does make it harder to copy the link, though. [code block] you can calculate it. the width is the total length of package name + vulnerability id + ... + avd link. or, you can also output the table to a variable to determine the length of each row. you said `everywhere`, but afaik, we have only artifact and client/server, two places, right? also, a server doesn't need to return an avd link because a client is able to generate it. what's the big deal?",0,0.8980404138565063
514645251,709,simar7,2020-10-30T00:43:15Z,oh! see. yeah that's not acceptable to be left in like that. i have added a filter to remove such links here [a link],-1,0.5483137965202332
514645370,709,simar7,2020-10-30T00:43:42Z,diito^2,0,0.9195606112480164
514645383,709,simar7,2020-10-30T00:43:46Z,diito^2,0,0.9195606112480164
515392597,709,simar7,2020-10-30T21:33:35Z,fair point. i added it in [a link],0,0.9366992115974426
515395659,709,simar7,2020-10-30T21:42:34Z,how about the following? it can still be resolved and clicked upon (at least in most modern terminal emulators like iterm) and saves us 8 extra characters.,0,0.9867916107177734
516425959,709,knqyf263,2020-11-03T04:45:28Z,"ok, let's see how users react. if a lot of users complain about it, we'll remove it from the table.",0,0.9712756872177124
517020637,709,simar7,2020-11-03T23:46:42Z,ok. i added [a link],0,0.9864065051078796
517483779,709,knqyf263,2020-11-04T16:46:02Z,is there any reason that we don't generate an avd link in `fillinfo`? [a link],0,0.9855419397354126
517484099,709,knqyf263,2020-11-04T16:46:31Z,ditto,0,0.8428916931152344
517484178,709,knqyf263,2020-11-04T16:46:38Z,ditto,0,0.8428916931152344
517484289,709,knqyf263,2020-11-04T16:46:46Z,ditto,0,0.8428916931152344
517484608,709,knqyf263,2020-11-04T16:47:11Z,ditto,0,0.8428916931152344
517484652,709,knqyf263,2020-11-04T16:47:16Z,ditto,0,0.8428916931152344
517485082,709,knqyf263,2020-11-04T16:47:54Z,ditto,0,0.8428916931152344
517485552,709,knqyf263,2020-11-04T16:48:35Z,ditto,0,0.8428916931152344
517485650,709,knqyf263,2020-11-04T16:48:44Z,ditto,0,0.8428916931152344
517485857,709,knqyf263,2020-11-04T16:49:02Z,"[code block] `avd` is not a word users will be familiar with. we probably should use a more generic word such as `url`, `reference`, and `link`. also, we might be able to display a link other than avd in the future.",0,0.9888311624526978
517674519,709,simar7,2020-11-04T22:42:48Z,no reason - what's argument in favour?,0,0.8932667970657349
517680395,709,simar7,2020-11-04T22:57:12Z,one argument i have against adding it is that in that case we have to solely rely on integration tests far more than we can on unit tests. afaict `fillinfo` cannot be easily unit tested and it isn't today. nothing against integration testing - just the shorter feedback loop unit testing is something i see enough of a reason to stick with it.,0,0.6323133707046509
519952262,709,knqyf263,2020-11-09T16:39:50Z,"`dbc` can be injected, so we can write unit tests now, right? if we change the avd link a little, we have to fix all places now.",0,0.9881265163421631
520218120,709,simar7,2020-11-10T00:59:57Z,ok. i did it here [a link],0,0.9809963703155518
520229269,709,simar7,2020-11-10T01:32:58Z,ok updated [a link],0,0.9863615036010742
523769837,709,knqyf263,2020-11-15T14:55:57Z,craft?,0,0.9709799885749817
523770187,709,knqyf263,2020-11-15T14:59:29Z,necessary?,0,0.9708913564682007
523770544,709,knqyf263,2020-11-15T15:02:31Z,"there are 3 places to generate avd links. should we define a function? if we change the url path, we have to fix 3 places.",0,0.9873859882354736
523770557,709,knqyf263,2020-11-15T15:02:46Z,here,0,0.9784635901451111
523770621,709,knqyf263,2020-11-15T15:03:28Z,and here,0,0.9779892563819885
523770873,709,knqyf263,2020-11-15T15:05:17Z,"i think it's better to put the url on the rightmost side. we need to add ""url"" after ""title"".",0,0.9865443110466003
525652775,709,simar7,2020-11-18T02:16:38Z,"yes, fixed.",0,0.981860339641571
525653011,709,simar7,2020-11-18T02:16:53Z,ok fixed,0,0.9787641763687134
525664353,709,simar7,2020-11-18T02:29:19Z,ok i refactored into a function: [a link],0,0.9873491525650024
525694265,709,simar7,2020-11-18T03:01:03Z,i'm unable to run the linter locally but in the past when i pushed it up it started to complain. i think it's too aggressive as i find this function to have a reasonable cyclomatic complexity.,-1,0.9203954935073853
526318099,709,knqyf263,2020-11-18T18:16:58Z,you can easily run it. `$ golangci-lint run`.,0,0.9698905944824219
526321246,709,knqyf263,2020-11-18T18:21:55Z,where is this file used?,0,0.9858905076980591
526325654,709,knqyf263,2020-11-18T18:28:56Z,"we already have `references`. can we add an avd link to the field? [a link] in that case, we may not need to generate avd links in `convert.go` because a server calls `fillinfo` and `references` should have the avd link. we can just filter and extract the avd link from `references` in `writer.go`.",0,0.9775852560997009
526326543,709,knqyf263,2020-11-18T18:30:15Z,"also, it may not be necessary. if there is an avd link in `references`, we'll extract it, but if we don't find it, we can return the first element of `references`.",0,0.9876749515533447
526327411,709,knqyf263,2020-11-18T18:31:39Z,"so, this should be kind of like `getprimarylink`, `filterforprimarylink`, or something like that.",0,0.984650731086731
526328404,709,knqyf263,2020-11-18T18:33:24Z,"also, we can just call `getprimarylink` here. in that case, the url will not be empty, an avd link or another link.",0,0.9895044565200806
526454144,709,simar7,2020-11-18T22:05:58Z,it's part of a missing test case that was added here [a link],0,0.9854286313056946
1505401543,6217,DmitriyLewen,2024-02-28T05:57:51Z,iiuc this is only required for the test. what if we just created a new test for the `determineregion` function?,0,0.9882680773735046
1505403197,6217,DmitriyLewen,2024-02-28T06:00:20Z,is [a link] same file?,0,0.9849632382392883
1505407336,6217,DmitriyLewen,2024-02-28T06:06:16Z,you can use [a link] here,0,0.9879932403564453
1505407499,6217,DmitriyLewen,2024-02-28T06:06:31Z,do we need pointer here?,0,0.9889457821846008
1506022234,6217,knrc,2024-02-28T14:07:57Z,"that's correct, i'll look at it today.",0,0.979939341545105
1506028442,6217,knrc,2024-02-28T14:12:14Z,"it looks to be, and appears to be newer than the version i have installed in the aws cli. i can change the comment to refer to this instead.",0,0.9873712062835693
1506032116,6217,knrc,2024-02-28T14:14:44Z,"i chose to use a pointer to distinguish between not matching the regexp and returning a match, but i can return a boolean instead if that's your preference.",0,0.9859479665756226
1506053103,6217,knrc,2024-02-28T14:27:42Z,"i've removed the function from that interface and created a test interface instead, i wanted to ensure the client has the appropriate region set.",0,0.982377290725708
1506053526,6217,knrc,2024-02-28T14:27:54Z,replaced with a link to the tagged file,0,0.983100414276123
1506053714,6217,knrc,2024-02-28T14:28:00Z,done,0,0.9764507412910461
1506965415,6217,DmitriyLewen,2024-02-29T04:03:43Z,you can simply compare with empty string. [code block],0,0.9888474941253662
1507031403,6217,knrc,2024-02-29T05:28:06Z,"technically yes, but not something i'm a fan of to be honest. i prefer to be explicit.",-1,0.7587312459945679
1507065595,6217,DmitriyLewen,2024-02-29T06:17:59Z,"typically we use comparison logic with an empty string. i think it's best to stick to one code style. it may also make this part of the code difficult to maintain. because over time, maintainer must remember why we are using a pointer here.",0,0.9668956995010376
1507596340,6217,knrc,2024-02-29T13:36:58Z,"if that's your coding style i'll use it, even though i find this pattern is more likely to introduce problems for callers who now need to remember and check for special case returns. this tends to be clearer with pointer/boolean.",0,0.9767380356788635
1508445484,6217,DmitriyLewen,2024-03-01T03:44:06Z,i found 1 interesting case: if `aws_region` env != region from domain: should we use aws_region (we are overwriting this value now)? iiuc this case is user mistake (wrong`aws_region`). but perhaps it make sense to show warning log message about this.,0,0.9607713222503662
1508503562,6217,knrc,2024-03-01T05:36:59Z,"the point of the pr is to override the aws_region setting, if we don't do that then we end up with an authentication token for one region and have no visibility of containers hosted in other regions. our use case is multiple private repositories in multiple regions.",0,0.9877331256866455
1508547564,6217,DmitriyLewen,2024-03-01T06:49:34Z,i meant that we need to tell the user that region from aws_region != region from domain. something like that: [code block] also i am worried about asff template. we [a link] aws_region env for this template. perhaps we need to set `aws_region` env when we have overwritten the region.,-1,0.9817345142364502
1509063130,6217,knrc,2024-03-01T14:09:22Z,"ah gotcha. we can certainly add a message, although i'm not sure it would make much sense as it is likely to have been set by the webhook to match the eks installation. if you consider our use case, with multiple private repositories in different regions, then it would be impossible for the user to set the region appropriately so it would be defaulted to the webhook's view. i can take a look at the template today, i didn't consider that, and can certainly pass the parameter through to getsession as that seems cleaner than rewriting it.",0,0.5958445072174072
1509087418,6217,knrc,2024-03-01T14:28:23Z,"i've pushed the changes for getsession and the warning, looking at the template.",0,0.9814606308937073
1509128357,6217,knrc,2024-03-01T15:02:19Z,"i've reviewed the template but don't see anything which would concern me about the region parameter, i think we may be able to leave it as-is. i'm spinning up a cluster to double-check.",0,0.9619861841201782
1509255397,6217,knrc,2024-03-01T16:48:07Z,"i created the cluster and private repos to double-check, then ran the old/new versions of trivy against the repo from my local machine. the reports from both were identical, except for timestamps. interestingly enough my change doesn't appear to be required when running locally with my access key/secret access key, however within the eks cluster, using an assigned role, it does. the command was [code block] with `aws_region` set to `us-east-1`",0,0.963850200176239
1509258420,6217,knrc,2024-03-01T16:50:56Z,an excerpt [code block],0,0.9872717261314392
1510599327,6217,DmitriyLewen,2024-03-04T05:18:43Z,"hello thanks for your extensive research! i am worried about this: [code block] region from `id` != region from `region`. we can change `aws_region` only to run trivy. `os.setenv` changes env only while the program is running. i created small example [code block] so we can add `os.setenv(""aws_region"", region)` in [a link] wdyt? can you check this solution?",-1,0.5259577035903931
1511137614,6217,knrc,2024-03-04T13:08:32Z,"this output is the same as we would currently get, if running from the command line. the region is only used to obtain the correct authentication credentials for accessing the repository, nothing more. i'm not sure `os.setenv` would make sense in our use case, since it involves different private repositories in different regions, but i can take a look.",0,0.97925865650177
1511547707,6217,knrc,2024-03-04T17:50:14Z,"i cannot find any mention of the region that would impact the scanning we are doing. one place i did find, in the asff template, is the productarn which is registered with aws security hub. since this needs to be registered, and the asff templated report doesn't change with this fix in place, i think it is safer to leave this change only for generating the credentials and we shouldn't set the env variable.",0,0.9692953824996948
1511554193,6217,knrc,2024-03-04T17:55:11Z,"i should also add that i don't know enough about the aws security hub integration to know whether the current report is broken in its use of aws_region - should `region` match the image region? - is it wrong to assume `productarn` matches `region`? i think those questions should be answered separately, since this pr is not modifying that behaviour.",0,0.9774649143218994
1512152571,6217,DmitriyLewen,2024-03-05T05:29:03Z,aws docs([a link] say: [code block],0,0.9861599802970886
1512153358,6217,DmitriyLewen,2024-03-05T05:30:27Z,"but it looks like when using `asff` template, users will have `aws_region` set. in addition, we display a warning. we can start with these changes. if problems arise, we will think about fixing them (as another solution, we can add your regex to `asff.tpl`).",0,0.9858767986297607
1512891454,6217,knrc,2024-03-05T14:12:26Z,"+1, in my view arn and region are not related but the template assumes they are.",0,0.9745203852653503
1512894476,6217,knrc,2024-03-05T14:14:08Z,"yes, since the output doesn't change with this pr we are no worse off. i do think there is change needed for the template but that should be a separate issue.",0,0.8097491264343262
1513753867,6217,DmitriyLewen,2024-03-06T03:02:03Z,oh... i sent the wrong link. you can see arn formats here: [a link] [a link],-1,0.9369778633117676
1514996167,6217,knrc,2024-03-06T18:56:52Z,i don't think those other links change anything for this pr.,0,0.7729077935218811
1570028030,6217,DmitriyLewen,2024-04-18T05:52:58Z,iiuc we should compare `googleregistryclient`.,0,0.9865820407867432
1570767823,6217,knrc,2024-04-18T13:34:26Z,"should be good now, thanks for catching this",1,0.9541292786598206
763561214,1437,knqyf263,2021-12-07T01:35:24Z,looks like we have to pass the tool version. [a link],0,0.9860196113586426
764597147,1437,afdesk,2021-12-08T07:06:38Z,changed.,0,0.9753402471542358
764597195,1437,afdesk,2021-12-08T07:06:45Z,"ok, sure",0,0.9587004780769348
772492613,1437,knqyf263,2021-12-20T16:12:30Z,would you leave a comment that we will remove this warning after a while?,0,0.981303334236145
772839133,1437,knqyf263,2021-12-21T05:30:43Z,pkgpath can be used in case of individual packages.,0,0.9886067509651184
772840287,1437,knqyf263,2021-12-21T05:31:47Z,can we use consts?,0,0.9873534440994263
772840910,1437,knqyf263,2021-12-21T05:32:51Z,wrap error,0,0.9537960886955261
773107394,1437,afdesk,2021-12-21T12:47:35Z,"explicitly it didn't work, because `vuln.path` is empty sometimes. added a check: [code block]",0,0.9677271246910095
773110444,1437,afdesk,2021-12-21T12:52:13Z,"should i change all strings to consts? (""npm"", ""yarn"", ""nuget"", ""pipenv"", ""poetry"", ""bundler"", ""cargo"", ""composer"")",0,0.9874162077903748
773994202,1437,knqyf263,2021-12-22T15:55:59Z,yes. we have those consts anywhere.,0,0.9824737906455994
774000342,1437,knqyf263,2021-12-22T16:04:27Z,any reason we cannot use this struct? [a link],0,0.9854722619056702
774554630,1437,afdesk,2021-12-23T12:58:54Z,"i wanted to create test data with required fields, but `omitempty` allows to skip (forget) it in tests. also some of required fields maybe don't exist in `go-sarif`. we'd reveal it. but if this isn't important, i'll use specified structure",0,0.9823410511016846
774894057,1437,knqyf263,2021-12-24T06:31:41Z,i think it is ok if we are careful about expected data. do you mean we cannot use `go-sarif` to generate the sarif report if it is missing some required fields?,0,0.9841617345809937
774903418,1437,afdesk,2021-12-24T07:07:35Z,"i mean that we can detect missing fields and ask to add them. ok, i'll use `go-sarif`'s structs for tests.",0,0.9879288077354431
774904396,1437,afdesk,2021-12-24T07:10:51Z,ok,0,0.9667208194732666
774905546,1437,knqyf263,2021-12-24T07:15:05Z,i understand. i think it should be done aside from unit tests.,0,0.9561941623687744
774937098,1437,knqyf263,2021-12-24T08:56:21Z,"i guess this is not vulnerability type, but target type. this comes from report.result.type, right? if it is the case, these consts should be them. [a link]",0,0.9854200482368469
774938001,1437,knqyf263,2021-12-24T08:59:08Z,should we put severity to `properties.security-severity`? [a link],0,0.9882132411003113
774940385,1437,knqyf263,2021-12-24T09:06:14Z,seems to be missing many types such as `gemspec` and `gomod`.,0,0.9459133148193359
774940774,1437,knqyf263,2021-12-24T09:07:34Z,we may be able to use `report.result.class`.,0,0.987119197845459
774941295,1437,knqyf263,2021-12-24T09:09:01Z,"also, what about misconfigurations?",0,0.8699703216552734
774946501,1437,afdesk,2021-12-24T09:24:17Z,"sure, i'll add this fiels, but we have to exclude `severity` from `tags`? i'd leave `tags` unchanged",0,0.9885116815567017
774965201,1437,knqyf263,2021-12-24T10:19:36Z,"yes, it would be better to keep it since `tags` can be used for filtering.",0,0.9880727529525757
775055758,1437,afdesk,2021-12-24T17:02:38Z,"yes, you're right. it seems that is target type. changed.",0,0.9719406366348267
775056603,1437,afdesk,2021-12-24T17:09:21Z,"yes, i've added this field. but i'd like you review for mapping severity to the level of severity (between 0.0 and 10.0).",0,0.9667794704437256
775057496,1437,afdesk,2021-12-24T17:16:23Z,"yes, i've added all types and added config files too",0,0.9889380931854248
775058646,1437,afdesk,2021-12-24T17:26:04Z,"also i removed several tests from here, because there is no os with `-oval` suffix (`oracle-oval`, `debian-oval`, `redhat-oval` etc). [a link]",0,0.9892925024032593
775058872,1437,afdesk,2021-12-24T17:27:59Z,`suse-cvrf` and `opensuse-cvrf` were removed too,0,0.9875237941741943
775059217,1437,afdesk,2021-12-24T17:31:29Z,"yes, added config files.",0,0.9885536432266235
775068805,1437,knqyf263,2021-12-24T19:07:54Z,i meant this switch can be simplified [code block],0,0.9789720773696899
775069064,1437,knqyf263,2021-12-24T19:10:04Z,it should be descriptive enough. [code block],0,0.9826149940490723
775069149,1437,knqyf263,2021-12-24T19:10:50Z,it should not be reached here. [code block],0,0.951548159122467
775071951,1437,afdesk,2021-12-24T19:41:56Z,"oh, ok. changed",0,0.9461573958396912
779486088,1437,knqyf263,2022-01-06T11:35:54Z,i don't think this test is needed.,0,0.8686902523040771
779486886,1437,knqyf263,2022-01-06T11:37:23Z,"we don't keep the template as we remove, but we keep it working as is.",0,0.9751324653625488
779487165,1437,knqyf263,2022-01-06T11:37:57Z,can we use cvss score?,0,0.9861863851547241
780408523,1437,jplimack,2022-01-07T17:16:53Z,"if you could put the cvss score into a tag, that would make it filterable in the github security dashboard",0,0.9882317185401917
781788154,1437,afdesk,2022-01-11T06:24:51Z,removed.,0,0.9311882257461548
781790431,1437,afdesk,2022-01-11T06:30:47Z,changed this comment.,0,0.9754720330238342
781794067,1437,afdesk,2022-01-11T06:39:54Z,i can't find cvss score for misconfigurations...,-1,0.7830101251602173
781795430,1437,knqyf263,2022-01-11T06:43:22Z,"oh, you're right. we need this conversion for misconfigurations. can we use cvss only for vulnerabilities?",0,0.9343195557594299
782137657,1437,knqyf263,2022-01-11T13:22:16Z,we can use `severitysource` to take the vendor cvss score. i feel we should not use the nvd score. it is possible that the severity is low and the score is 9.5. the score depends on the severity source for consistency. the priority is 1. vendor score (it would be ok if it is nvd) 2. mapping score,0,0.967783510684967
1244838784,4652,DmitriyLewen,2023-06-28T08:00:18Z,[code block] wdyt?,0,0.9895826578140259
1244864039,4652,DmitriyLewen,2023-06-28T08:22:11Z,you are using `defer` in a loop. can we move this logic into a separate function to close each file?,0,0.9865672588348389
1244890681,4652,DmitriyLewen,2023-06-28T08:42:11Z,i think about 1 case when `node_modules` and `.yarn` folders exist. e.g. user updated project to yarn v2. does `node_modules` folder still exist or will `yarn` remove this folder? wdyt? perhaps we need to check `.yarn` folder first (as latest implementation) or(and) add debug message that 2 folder were found.,0,0.9850128889083862
1244895415,4652,DmitriyLewen,2023-06-28T08:46:01Z,i think we can remove the fields we don't need. as for a `happy` test: [a link],1,0.6826268434524536
1245298216,4652,nikpivkin,2023-06-28T14:23:09Z,"then user should delete `node_modules`) in fact, if the yarn [a link] is set as `node_modules`, then the packages will be installed in` node_modules`, but the folder `.yarn` can also exist, because it stores not only packages.",0,0.9635895490646362
1245303458,4652,nikpivkin,2023-06-28T14:26:02Z,"yes, you're right",0,0.9474586248397827
1245336050,4652,nikpivkin,2023-06-28T14:39:03Z,great catch! done.,1,0.9916658997535706
1245336249,4652,nikpivkin,2023-06-28T14:39:10Z,done.,0,0.9759407639503479
1245336669,4652,nikpivkin,2023-06-28T14:39:24Z,done,0,0.9764507412910461
1246097840,4652,DmitriyLewen,2023-06-29T04:47:41Z,thanks for information. i also played with `yarn`: after updating `yarn` and adding/updating package -> `yarn` moves packages from `node_modules` to `.yarn` folder. some example: [code block],1,0.9374686479568481
1246111610,4652,DmitriyLewen,2023-06-29T05:11:07Z,we use new function to only parse `package.json` **from zip file**. the name `parsepackagejson` can be confusing (i mean you might think that this function for any `package.json`). what if we use `parsepackagejsonfromzip` name?,0,0.9744599461555481
1246131215,4652,nikpivkin,2023-06-29T05:38:59Z,done,0,0.9764507412910461
1271898881,4652,knqyf263,2023-07-24T08:09:48Z,do we need this complex logic? do you mean dummy package.json? my question is why we cannot simply check if the file name matches `package.json`.,0,0.984641969203949
1271902187,4652,nikpivkin,2023-07-24T08:12:49Z,it can be a dummy file for tests.,0,0.979292631149292
1271915628,4652,knqyf263,2023-07-24T08:24:48Z,"does the dummy file have a valid package name and license, and can it lead to false detection? i guess it is unlikely to happen, no?",0,0.942040741443634
1272260923,4652,nikpivkin,2023-07-24T13:25:07Z,"yes, i agree",0,0.9430531859397888
1286549136,4652,DmitriyLewen,2023-08-08T03:05:16Z,looks like we can make this function non-exportable.,0,0.9872438311576843
1286555271,4652,DmitriyLewen,2023-08-08T03:21:12Z,can you add comment why we use `license` here?,0,0.9879741668701172
1286557902,4652,DmitriyLewen,2023-08-08T03:27:45Z,can you add comments why you use these conditions?,0,0.9840781688690186
1286559728,4652,DmitriyLewen,2023-08-08T03:32:24Z,if i understand correctly - any license file name is possible: [a link] perhaps we need to save `node_modules`/`.yarn` folder?,0,0.9880453944206238
1286560970,4652,DmitriyLewen,2023-08-08T03:35:35Z,`npm` also finds licenses in `node_modules/ /package.json` file. maybe we can use this function? or will these changes be in another pr?,0,0.9893390536308289
1286561460,4652,DmitriyLewen,2023-08-08T03:36:50Z,what if use `utils` file name for this file?,0,0.984260618686676
1286928751,4652,nikpivkin,2023-08-08T10:32:03Z,the cache folder can be large.,0,0.9874789714813232
1286930329,4652,nikpivkin,2023-08-08T10:33:40Z,how about making these changes in another pr?,0,0.97109454870224
1286932906,4652,nikpivkin,2023-08-08T10:36:18Z,done,0,0.9764507412910461
1286933022,4652,nikpivkin,2023-08-08T10:36:25Z,done,0,0.9764507412910461
1286933141,4652,nikpivkin,2023-08-08T10:36:32Z,done,0,0.9764507412910461
1286933230,4652,nikpivkin,2023-08-08T10:36:38Z,done,0,0.9764507412910461
1286933297,4652,nikpivkin,2023-08-08T10:36:42Z,done,0,0.9764507412910461
1286933424,4652,nikpivkin,2023-08-08T10:36:50Z,done,0,0.9764507412910461
1287883514,4652,DmitriyLewen,2023-08-09T03:12:40Z,i assumed that... okay. i think in most cases license file name contains `license`. let's wait for feedback from users. if users say that there are files with other names - we will return to this question.,0,0.975501537322998
1287887278,4652,DmitriyLewen,2023-08-09T03:21:53Z,okay. i created #4964 for this task.,0,0.9687793254852295
1287891032,4652,DmitriyLewen,2023-08-09T03:29:55Z,golden file doesn't contain license.,0,0.9773470759391785
1287892423,4652,DmitriyLewen,2023-08-09T03:33:26Z,"this is second time i am thinking of moving this file to `nodejs/license` folder, but i'm not sure about it. wdyt?",0,0.9350886344909668
1287894727,4652,DmitriyLewen,2023-08-09T03:38:38Z,can you add a test case with a missing license? i am referring to case where license field in `package.json` is missing and `license` file doesn't exist.,0,0.9877091646194458
1289714055,4652,nikpivkin,2023-08-10T07:51:31Z,good trick! i forgot to move this file after renaming fs to repo.,1,0.9915012121200562
1289723532,4652,nikpivkin,2023-08-10T07:59:11Z,done,0,0.9764507412910461
1289723633,4652,nikpivkin,2023-08-10T07:59:16Z,done,0,0.9764507412910461
1289726122,4652,nikpivkin,2023-08-10T08:01:19Z,"sounds good, i'll wait for answer",1,0.8942384123802185
1289730642,4652,knqyf263,2023-08-10T08:05:13Z,sounds good,1,0.9535238742828369
1290881331,4652,DmitriyLewen,2023-08-11T04:27:26Z,i understood that it can confused - users can think that we only parse `license` file. [code block],0,0.979219913482666
1291208227,4652,nikpivkin,2023-08-11T11:04:14Z,fixed,0,0.975196123123169
1574109921,6524,DmitriyLewen,2024-04-22T04:30:38Z,`go-dep-parser` in trivy now - [a link],0,0.9853848814964294
1574125031,6524,DmitriyLewen,2024-04-22T04:57:07Z,what about `windows` and `macos` formats?,0,0.9885541796684265
1574125792,6524,DmitriyLewen,2024-04-22T04:58:27Z,can you add a comment with a link where you get this regex?,0,0.9885033965110779
1574126445,6524,DmitriyLewen,2024-04-22T04:59:31Z,you use `dependent.id` once. so you can just use it here. [code block],0,0.9886360168457031
1574131572,6524,DmitriyLewen,2024-04-22T05:08:31Z,"is there a way to determine package name? looks like it might be confusing if all detected binaries are named ""python""",0,0.9526032209396362
1574132610,6524,DmitriyLewen,2024-04-22T05:10:13Z,you can use `require.errorcontains`,0,0.9857263565063477
1574135481,6524,DmitriyLewen,2024-04-22T05:14:46Z,"looks like we can use 1 file and change names, permissions, etc. in test. then we can reduce the number of copies of test files.",0,0.9874030351638794
1574137589,6524,DmitriyLewen,2024-04-22T05:18:06Z,looks like we don't need this change.,0,0.946045458316803
1574155254,6524,DmitriyLewen,2024-04-22T05:44:33Z,it looks like go 1.22 doesn't have this file. can you please update the link and double check - we may need to add some changes.,0,0.9815359711647034
1574175455,6524,DmitriyLewen,2024-04-22T06:10:58Z,will be great if you add some comment about these regex (e.g. link to docs),1,0.741215169429779
1574176783,6524,DmitriyLewen,2024-04-22T06:12:36Z,looks like we can use [a link] for new binaries,0,0.9844063520431519
1624132180,6524,kovacs-levent,2024-06-03T09:44:18Z,"i removed the go-dep-parser as a dependency, it only uses the internal package now",0,0.9868869185447693
1624135520,6524,kovacs-levent,2024-06-03T09:46:50Z,"it's from syft... should i link that? all the regexes i used, i mostly copied them from syft. for example python regex: [a link]",0,0.9834191799163818
1624136786,6524,kovacs-levent,2024-06-03T09:47:43Z,removed the packageid function from all parsers and replaced with dependency.id call only,0,0.988839328289032
1624138057,6524,kovacs-levent,2024-06-03T09:48:33Z,"i don't think so unfortunately, if there was additional package information, the standalone binary detection would not be needed. but i will look into it if it's obtainable from some metadata.",0,0.9780063629150391
1624138781,6524,kovacs-levent,2024-06-03T09:49:03Z,changed the tests according to this.,0,0.9789332151412964
1624139241,6524,kovacs-levent,2024-06-03T09:49:24Z,"yeah, i'll rework the tests for fanal in an upcoming commit.",0,0.9763752222061157
1624140809,6524,kovacs-levent,2024-06-03T09:50:36Z,"hmm, not sure why i did it, but i'll remove it in next commit, it's just some ""automatic"" line deletion i did i guess :)",1,0.8148149847984314
1624143055,6524,kovacs-levent,2024-06-03T09:52:21Z,i unfortunately didn't find this in go 1.22 either. i'll take a look into this in next commit.,-1,0.5090842247009277
1624143998,6524,kovacs-levent,2024-06-03T09:53:07Z,"same as for the other regexes, it's from syft, should i link that? [a link]",0,0.9880509376525879
1624144515,6524,kovacs-levent,2024-06-03T09:53:30Z,"change all the types to become ""typexexecutable"".",0,0.9859316349029541
1624151809,6524,kovacs-levent,2024-06-03T09:58:59Z,haven't thought about that yet. will have to check on those.,-1,0.5260341167449951
1624640434,6524,kovacs-levent,2024-06-03T15:18:45Z,fanal test cases were reworked. it uses the common logic of executable tests. added test cases for python/node/php binaries.,0,0.9847618341445923
1624640712,6524,kovacs-levent,2024-06-03T15:18:56Z,removed.,0,0.9311882257461548
1624651297,6524,kovacs-levent,2024-06-03T15:25:57Z,"i understand what you meant here now, that all the new binaries could be typeexecutable. i use the language specific types in fanal executable.go, to figure out which binary type was detected in case of ""detectable"" binary. it can be localized to executable.go instead and use the common type for the ""outside"" return types.",0,0.9840807318687439
1626285516,6524,kovacs-levent,2024-06-04T16:14:03Z,"i tried testing with windows pes, the interface can be implemented for `exe` and `openexe`, but the regex based detection methods don't work on the pe files i tried (i did manual testing to confirm). i honestly don't have any experience with macos binaries :face_with_diagonal_mouth: so not sure if i can implement the interface for those. i also tried to obtain files to test with, but failed, since now i don't have access to a macos system. any idea if regex based detection would work on those? if not, i'd rather not bother with implementing this for those binaries, even though you could implement the interface and `executableanalyzer` would still run on those, the binary version detection won't give package in the `analysisresult`.",-1,0.8908411860466003
1626302610,6524,kovacs-levent,2024-06-04T16:27:55Z,"i added them as a separate, new group of variables instead in this same file.",0,0.9843984842300415
1626328528,6524,kovacs-levent,2024-06-04T16:50:12Z,"i have updated the link and also the implementation was changed. it's not a 1on1 port, since they repurposed it for capturing go main module version, but we need to read whole executable file, but i used the same ideas. it also contains interfaces for other binaries (didn't put those in, only elf).",0,0.9831566214561462
1627258993,6524,kovacs-levent,2024-06-05T08:34:24Z,"there's a way to try detect it with os package managers, but they don't necessarily yield results unfortunately. i think if these were in package manager, then os pkg analyzer would be scanning these, so probably also not the right way to go about it. i wasn't able to find any way to figure out more concrete package name from the standalone binaries.",0,0.7274034023284912
1879433683,8077,DmitriyLewen,2024-12-11T06:43:44Z,"i wanted to override the `expression.normalizeforspdx` function, but we use `with` as a delimiter to parse licenses: [a link] so there are problems with overwriting licenses with the wrong exception",0,0.9763577580451965
1881116688,8077,goneall,2024-12-11T22:48:01Z,[code block] i would always include the license as the license name - not just when the text is present,0,0.9876335859298706
1881121449,8077,goneall,2024-12-11T22:54:20Z,"second thought, this may be appropriate if the license text is the actual text of the license. in most cases, the metadata for packages includes text that are supposed to be a license name or identifier in which case it should also be in the name. if we know the license text is really the text, then the existing code is ok. if, however, the license text is what is found in the package metadata files and they are not the actual text, i would add the same field as the name plus add a licensecomment to explain - something like `otherlicense.licensecomment = ""the license text represents text found in package metadata and may not represent the full text of the license""",0,0.9743907451629639
1881127536,8077,goneall,2024-12-11T22:59:40Z,"this comment may deserve to be a separate suggestion, but in reading the code i would recommend building the license and exception ids from the j[a link]. the license list is updated every 3 months with new ids and maintaining these in code can be a challenge to keep up and maintain. what i do in the code i maintain is attempt to access the current json files on the website [a link] and [a link] if i can not access the website or if the user specified not to use the online version, i'll use a cached version of the file.",0,0.883260190486908
1881135551,8077,goneall,2024-12-11T23:02:48Z,"minor suggestion - you could simplify this by including the ""-"" in the licenserefprefix definition and just use `licenserefprefix + licenseid` the string ""licenseref"" will likely never be used without the trailing ""-"".",0,0.9888940453529358
1881469620,8077,DmitriyLewen,2024-12-12T06:42:32Z,this is our internal decision - we don't use `-` suffixes in constants :),1,0.641941249370575
1881484240,8077,DmitriyLewen,2024-12-12T06:56:24Z,"there are cases when users run multiple times. downloading these files for each run is not good. but we can save `licenses.json` and `exceptions.json` files in the cache dir and use them. the files contain `releasedate` field, so we can update this file only when `releasedate + 3 months` has expired. how strictly is this rule followed? anyway let's move this discussion into another issue/pr. ___ i found that [a link] and [a link] are different (see `harbour-exception`). which file would be more correct to use?",0,0.7735069394111633
1881510091,8077,DmitriyLewen,2024-12-12T07:22:59Z,"there are cases (e.g. `license` field from python metadata files) when we can't understand that license is name/id/text. we tried to detect `text` of license: [a link] so trivy split license name/id and license text(`text://` prefix). that is why i used both `licensename` and `extractedtext` fields: [a link] another question - i used `noassertion` for `licensename` and `extractedtext` fields (see link above), because these fields are mandatory ([a link] is this correct?",0,0.980434775352478
1881515390,8077,DmitriyLewen,2024-12-12T07:27:48Z,i liked this idea :thumbs_up: added in [a link],1,0.9618934988975525
1882642397,8077,goneall,2024-12-12T17:57:25Z,"not very strictly. there is, however, a license list version field which is reliably incremented on release. which file would be more correct to use? the lists at [a link] - these will always be the latest _released_ version. the github repo master will have the latest in development version which may not be stable. the github repo is tagged with release versions, so if you go to the tag for the latest release in github, it will match what is on the website.",0,0.9863836765289307
1882658352,8077,goneall,2024-12-12T18:07:12Z,"makes sense - i wasn't sure how the text was captured. since you are capturing the text and name distinctly, your approach should work. btw, it's a bit tricky to find the start and end of the license text and even trickier to match it to know licenses - something we've been working on in the spdx java libraries for about 10 years and still don't have it perfected ;). is this correct? for the license name, this is ok. the spec isn't very clear on how these should be treated, so many people make up a name based on the text. unlike other parts of the spec, noassertion is not required if you don't know - but in this case i think it would be fine to use noassertion - for the name. for the text, i would put in whatever string was actually found - even if it is the name. the definition of the field is the license text found - so if someone puts in ""this software is licensed under mylicense"" - you can put that exact string in the text field even though it is not technically the text of ""mylicense"". i wouldn't use ""noassertion"" for the text field.",1,0.5236705541610718
1883358808,8077,DmitriyLewen,2024-12-13T06:18:26Z,got it! thanks for your opinion! updated text field in [a link],1,0.9894535541534424
1883359954,8077,DmitriyLewen,2024-12-13T06:19:11Z,"okay, update exception list in [a link]",0,0.9888383150100708
1887959748,8077,knqyf263,2024-12-17T06:23:29Z,"since we need to keep it up-to-date, it should be done by `mage spdx` or something like that. i think we should create a separate file for the list and add [code block] to the header.",0,0.9873212575912476
1887968896,8077,DmitriyLewen,2024-12-17T06:34:23Z,"do you want to check `exceptions.json` file in tests? i mean the same as for [a link] this will help keep the file up-to-date, but can be noisy for prs when a new version of file is released. on the other hand, we can add a separate action to check the file's relevance once a week.",0,0.9873520135879517
1887975653,8077,knqyf263,2024-12-17T06:41:05Z,"using `curl` and `awk` through `go generate` is the easiest way, but some environments don't have `curl`, and cli flags might be different. ideally, we should do that in go.",0,0.9848672747612
1887976600,8077,knqyf263,2024-12-17T06:41:57Z,"no, we don't need it for now. we can update the file when we notice that.",0,0.9835590720176697
1887978206,8077,DmitriyLewen,2024-12-17T06:43:12Z,"yes, that's what i planned this command (using `awk` and other commands) is just a quick way to get all exceptions",0,0.9840254187583923
1887978614,8077,knqyf263,2024-12-17T06:43:36Z,"this sounds better. also, we don't need to fail the test. we can notify it on microsoft teams.",0,0.7485993504524231
1888362141,8077,DmitriyLewen,2024-12-17T11:30:13Z,"i updated pr. take a look, when you have time, please.",0,0.9542021751403809
1919731265,8077,knqyf263,2025-01-17T08:24:33Z,nit: isvalidspdxlicense or validatespdxlicense are more aligned with the naming style in trivy.,0,0.9884397983551025
1919732799,8077,knqyf263,2025-01-17T08:25:49Z,looks like we can just call this function as nil is checked at the beginning of the function. [code block],0,0.9871944785118103
1919732953,8077,knqyf263,2025-01-17T08:25:57Z,ditto,0,0.8428916931152344
1919735245,8077,knqyf263,2025-01-17T08:27:52Z,"after merging [a link] into this branch, you can use set.set. [code block]",0,0.9879412055015564
1919735404,8077,knqyf263,2025-01-17T08:27:59Z,ditto,0,0.8428916931152344
1919745274,8077,knqyf263,2025-01-17T08:36:36Z,"nit: i tried to make the nest less, but it's just my preference. you can decide it. [code block]",0,0.9755951166152954
1919747712,8077,knqyf263,2025-01-17T08:38:39Z,nit: the current prefix is always lowercase. [a link] [code block],0,0.9877015948295593
1919748215,8077,knqyf263,2025-01-17T08:39:06Z,we might want to define a const for spdx as it's used in several places.,0,0.9860734939575195
1922023119,8077,knqyf263,2025-01-20T08:58:05Z,"what do you think about my approach? [a link] it would be as below. i just wrote a poc, so it doesn't work as is, of course, but i hope you'll get my point. ```go otherlicenses := map[string]*spdx.otherlicense{} replaceotherlicenses := func(expr expression.expression) expression.expression { var licensename string switch e := expr.(type) { case expression.simpleexpression: if expression.validspdxlicense(e.license) { return license } licensename = e.license case expression.compoundexpression: if e.conjunction() != expression.tokenwith { return expr } if expression.validspdxlicense(e.left().string()) && expression.validspdxlicense(e.right().string()) { return expr } licensename = e.string() } license := newotherlicense(licensename, false) if license == nil { ... } otherlicenses[license.licenseidentifier] = license return expression.simpleexpr{license: license.licenseidentifier} } normalizedlicense, err := expression.normalize(license, licensing.normalizelicense, expression.normalizeforspdx, replaceotherlicenses)",0,0.9626877903938293
1923157257,8077,DmitriyLewen,2025-01-21T06:52:17Z,"[code block] it looks like we need to return `simpleexpr` to a valid spdx license to avoid a separate license and exception checking, but overall your approach should work!",0,0.8775191903114319
1923202087,8077,knqyf263,2025-01-21T07:38:01Z,"it's just a waste of time as it will validate the same licenses and exceptions twice, but it doesn't cause any bugs, right?",-1,0.566871702671051
1923302735,8077,DmitriyLewen,2025-01-21T08:50:08Z,"won't we get something like duplicates? i mean `license with exception`, `license` and `separate exception`. but maybe i'm wrong - i'll check and let you know",0,0.9620722532272339
1923386053,8077,knqyf263,2025-01-21T09:43:41Z,"i believe not, but let's see.",0,0.9355374574661255
1923581765,8077,DmitriyLewen,2025-01-21T11:51:13Z,we use otherlicense for exception. e.g. for `happy path with with operator` test: [code block] so i saved license with exception as simpleexp.,0,0.9702881574630737
1923581881,8077,DmitriyLewen,2025-01-21T11:51:18Z,updated in [a link],0,0.9845641851425171
1923582515,8077,DmitriyLewen,2025-01-21T11:51:49Z,added in [a link],0,0.9876591563224792
1923582626,8077,DmitriyLewen,2025-01-21T11:51:55Z,changed in [a link],0,0.9864720106124878
1923583338,8077,DmitriyLewen,2025-01-21T11:52:27Z,i separated this logic in [a link],0,0.9865514039993286
1923583991,8077,DmitriyLewen,2025-01-21T11:52:58Z,updated in [a link],0,0.9845641851425171
1923584097,8077,DmitriyLewen,2025-01-21T11:53:03Z,updated in [a link],0,0.9845641851425171
1923584507,8077,DmitriyLewen,2025-01-21T11:53:24Z,removed in [a link],0,0.9858155250549316
1923584615,8077,DmitriyLewen,2025-01-21T11:53:26Z,removed in [a link],0,0.9858155250549316
1923584929,8077,DmitriyLewen,2025-01-21T11:53:40Z,renamed in [a link],0,0.9871048927307129
1923587638,8077,DmitriyLewen,2025-01-21T11:55:37Z,i save and check exceptions in uppercase because we don't have normalization for exceptions like we do for licenses. i suggest waiting for user feedback. maybe we need to update this logic (e.g. check in uppercase but save in original (from this file) case).,0,0.9842600226402283
1924466797,8077,goneall,2025-01-21T22:58:59Z,"in the spdx tools i maintain, i take the approach of saving in the original case but comparing ignoring case",0,0.9836929440498352
1924768762,8077,DmitriyLewen,2025-01-22T06:36:20Z,thanks i updated logic in [a link] + [a link],1,0.8996540307998657
1928555225,8077,knqyf263,2025-01-24T11:42:32Z,i think the `happy path with with operator` test is failing just because the exception validation is missing. the following code should pass the test. [code block],0,0.9236003756523132
1930061433,8077,DmitriyLewen,2025-01-27T07:07:13Z,"thanks for ""fresh"" look. it looks better. fixed in [a link]",1,0.9689907431602478
342460128,253,danielpacak,2019-11-05T09:35:34Z,"i think we should elaborate that the light mode is faster with db downloads, but the downside of it is lack of cve title/description in the output report.",0,0.9840333461761475
342463176,253,danielpacak,2019-11-05T09:41:38Z,i'd be more specific what version we're talking about. version of db or trivy binary? without looking into code the user might be confused.,0,0.9771711826324463
342465157,253,danielpacak,2019-11-05T09:45:35Z,for troubleshooting we might want to add expected and actual db schema version to the error message. also lowercase the error message.,0,0.9866678714752197
342466942,253,danielpacak,2019-11-05T09:49:08Z,i'm wondering whether `c.dbc.getmetadata()` should return error. anyway you ignore it. and my ide warns me that the `metadata` variable might be nil when you compare versions.,0,0.9169110059738159
342468435,253,danielpacak,2019-11-05T09:52:02Z,log debug that we're skipping db download. for troubleshooting.,0,0.9592085480690002
342469407,253,danielpacak,2019-11-05T09:53:48Z,reopen -> reopening ?,0,0.9828118681907654
342474697,253,danielpacak,2019-11-05T10:03:44Z,"i think you could `require.noerror(t, err)` here",0,0.9844123721122742
342478355,253,danielpacak,2019-11-05T10:11:38Z,we can possibly make this error message shorter without loosing the meaning & root cause.,0,0.9840912222862244
342479041,253,danielpacak,2019-11-05T10:13:07Z,"i'd keep it shorter, e.g. `xerrors.new(""opening new db: invalid database"")`",0,0.9847987294197083
342479736,253,danielpacak,2019-11-05T10:14:40Z,maybe it's better to use `require.noerror` here. if it fails at this state it probably doesn't make sense to check subsequent assertions.,0,0.9667150378227234
342481703,253,danielpacak,2019-11-05T10:18:51Z,do we really need this token? or is it just a workaround for tirvy-db being a private repo?,0,0.9858224987983704
342490575,253,danielpacak,2019-11-05T10:37:35Z,"nit: you can make this private, i.e. name it `repository` and shorten `repositoryinterface` to simply `repository`",0,0.9873602986335754
342492177,253,danielpacak,2019-11-05T10:40:53Z,add some message to the logger. log it as error?,0,0.9704100489616394
342493119,253,danielpacak,2019-11-05T10:43:02Z,"give some context to the log message, e.g. `log.logger.debugf(""inspecting github release: %s"", release.getname())`",0,0.9876283407211304
342496016,253,danielpacak,2019-11-05T10:49:14Z,"`require.noerror(t, err, ""init logger failed"")`",0,0.9856309294700623
342499018,253,danielpacak,2019-11-05T10:55:59Z,do you really need this for testing with mocks?,0,0.9739050269126892
342512126,253,danielpacak,2019-11-05T11:28:09Z,"formatting, break it into lines",0,0.9788322448730469
342512649,253,danielpacak,2019-11-05T11:29:23Z,what if err != nil?,0,0.6942433714866638
342512959,253,danielpacak,2019-11-05T11:30:09Z,which error are you checking here?,0,0.9663336277008057
343169886,253,knqyf263,2019-11-06T15:45:44Z,"i got it. by the way, i'm not sure `light` is a proper name. do you have any other idea? e.g. `fast`, `no-detail`, and so on.",0,0.9501879811286926
343170841,253,knqyf263,2019-11-06T15:47:16Z,i fixed it.,0,0.9755434989929199
343174519,253,knqyf263,2019-11-06T15:53:20Z,i fixed it.,0,0.9755434989929199
343180015,253,knqyf263,2019-11-06T16:01:54Z,"if the db is not in the local machine, getmetadata will return err. but `metadata` is a struct, not a pointer. a default value is stored. [a link] but my editor also warns me. i fixed it.",0,0.9834901094436646
343181490,253,knqyf263,2019-11-06T16:04:25Z,nice. i fixed it.,1,0.9426410794258118
343186727,253,knqyf263,2019-11-06T16:13:13Z,fixed,0,0.975196123123169
343188044,253,knqyf263,2019-11-06T16:15:23Z,fixed.,0,0.9810503125190735
343188671,253,knqyf263,2019-11-06T16:16:26Z,"do you mean we should make expectederror shorter? or, should we avoid wrapping error many times?",0,0.9811192750930786
343189352,253,knqyf263,2019-11-06T16:17:37Z,you're right.,0,0.9367263913154602
343276264,253,simar7,2019-11-06T19:11:47Z,i'm curious as to why is `getmetadata` a slice of `getmetadataoutput`? can there ever be more than one behaviour at a time for `getmetadata` in a single invocation? it also looks like all the test cases here only have a single element anyway.,0,0.9665401577949524
343280851,253,simar7,2019-11-06T19:21:25Z,are there some changes that haven't been pushed yet ? i don't see this fixed in the latest head of the branch.,0,0.9537805914878845
343281740,253,simar7,2019-11-06T19:23:10Z,this would be an example of a situation where testing what's logged would be useful.,0,0.9861002564430237
343298550,253,simar7,2019-11-06T19:58:24Z,"this will panic if releases is not empty but doesn't have all the elements inside of it, in particular `publishedat`. for example: [code block] should we explicitly check for that before proceeding to be safe?",0,0.6630765795707703
343318718,253,simar7,2019-11-06T20:46:42Z,the name `write` is confusing in this context where there's an interface `writer` and a method within that interface also called `write`. maybe we should rename this to something else like `writeoutput` for the lack of a better name?,-1,0.7277060151100159
343319066,253,simar7,2019-11-06T20:47:29Z,i like `light`!,1,0.9622107148170471
343335368,253,knqyf263,2019-11-06T21:25:07Z,"i'm sorry. i was interrupted at the end of today, so i couldn't push the commits. i pushed just before.",-1,0.9880991578102112
344493282,253,knqyf263,2019-11-10T13:51:47Z,i fixed it.,0,0.9755434989929199
344493412,253,knqyf263,2019-11-10T13:54:08Z,"yes, github release api sometimes returns a redirect url. in that case, trivy uses http client to fetch pre-built db. this mock is for the http client. [a link]",0,0.986799955368042
344494559,253,knqyf263,2019-11-10T14:16:48Z,fixed,0,0.975196123123169
344495191,253,knqyf263,2019-11-10T14:28:42Z,"in that case, the error is handled by line 46 - 49. the error would be displayed, but it wouldn't stop the loop.",0,0.9823408126831055
344495332,253,knqyf263,2019-11-10T14:30:52Z,"when `--light` is enabled, the error from line 41. when `--light` is disabled, the error from line 44. they are almost the same, so i made those error handling common. [code block] we can write as the above.",0,0.9884511232376099
344495649,253,knqyf263,2019-11-10T14:36:53Z,"i assumed a case where `getmetadata` was not called. in that case, i need to avoid calling `mock.on().return()`. this is because we use `assertexpectations`. if the slice is empty, we can skip the `for` loop. but for now, `getmetadata` is always called once. we can change from a slice to an object.",0,0.9857189059257507
344495854,253,knqyf263,2019-11-10T14:40:55Z,fixed.,0,0.9810503125190735
344496134,253,knqyf263,2019-11-10T14:46:48Z,great point. we should have used `getpublishedat`. this is safety for nil.,1,0.9173322319984436
344496551,253,knqyf263,2019-11-10T14:53:43Z,fixed,0,0.975196123123169
344496648,253,knqyf263,2019-11-10T14:55:30Z,"actually, i didn't feel that this name is good, but i couldn't come up with a good name. i will change write to writeoutput. thanks.",1,0.9556888937950134
344496738,253,knqyf263,2019-11-10T14:57:05Z,i used writeresults,0,0.9871780872344971
345415939,253,knqyf263,2019-11-12T20:01:03Z,i added the description for light mode.,0,0.9873701333999634
999448744,3015,liamg,2022-10-19T13:28:29Z,i think we should be pointed to this one now: [a link],0,0.9774358868598938
999449222,3015,liamg,2022-10-19T13:28:51Z,"(that said, i'm not sure it's been pushed with the v0.80.1 tag as expected, i'll check it out)",0,0.9775461554527283
999459237,3015,liamg,2022-10-19T13:36:27Z,i fixed the bundle tag issue here: [a link] - will tag and release a good bundle shortly.,1,0.5193058848381042
999486468,3015,liamg,2022-10-19T13:51:52Z,"fixed, `0`, `0.80` and `0.80.2` are now synonymous with `latest` :partying_face:",0,0.9873740077018738
1000014921,3015,simar7,2022-10-19T23:28:30Z,awesomesauce.gif,1,0.9781021475791931
1000015537,3015,simar7,2022-10-19T23:30:07Z,updated here [a link],0,0.9821210503578186
1035766953,3015,knqyf263,2022-11-30T10:03:08Z,"i'm just curious about why `<=` is better than `==` here. that value cannot be negative, right? [code block]",0,0.9500753879547119
1035770876,3015,knqyf263,2022-11-30T10:06:52Z,"btw, trivy will not use the downloaded policy if `--skip-policy-update` is specified. am i correct? i imagined as below: [code block] the above two commands should return the same result as the first command already downloads the policy.",0,0.9886960983276367
1035773997,3015,knqyf263,2022-11-30T10:09:54Z,"same here. when `--skip-policy-update` is specified, it always falls back into embedded policies. it looks weird to me. 1. `--skip-policy-update` is specified at the first run => use embedded policy 2. `--skip-policy-update` is specified when the policy is already downloaded => use the downloaded policy i might be missing something, as i've not been involved in the discussion.",-1,0.9838036298751831
1036596592,3015,simar7,2022-12-01T01:09:05Z,"yes you're correct. actually it's been too long for me to remember why i did this way as well :rolling_on_the_floor_laughing:. but yes i understand, it makes sense. i changed the behaviour as such here [a link]",-1,0.5099584460258484
1043101968,3015,knqyf263,2022-12-08T09:14:12Z,"i might be mistaken, but does it mean we will not use built-in policies if the user passes `--config-policy`? i thought built-in policies are loaded anyway, and custom policies are loaded in addition to that.",0,0.9800397157669067
1043957152,3015,simar7,2022-12-09T00:44:44Z,"yes this is correct. there is a good reason for this however and that is the fact that if we do load embedded policies when a user specifies a custom policy of their own, we risk the chance of getting rego namespace collisions. a more detailed explanation with an example: a user loads a custom policy that they've written that uses rego helper functions from an aqua library, like this: [a link] - in this case there's a chance that their code is using a version of the helper library (kubernetes.rego) that is out of date or different from the latest embedded helper library (kubernetes.rego). this would cause their custom policy to fail. they would also not be able to load their own helper either because of rego namespace collision (redeclaring the same functions). so in short, if a user loads a custom policy, it is on them to supply all necessary helper libraries as well for the policy to work properly. this eliminates any confusion or mismatch as described above.",0,0.9139936566352844
1044860517,3015,knqyf263,2022-12-09T21:38:17Z,"it makes sense that we don't want to load helper functions when custom policies are passed. but if i understand correctly, the current version loads custom policies in addition to built-in policies, right? will we change the behavior to disable all built-in policies when custom policies are specified? isn't this a breaking change?",0,0.9712684750556946
1044930996,3015,simar7,2022-12-10T00:45:11Z,"hm yeah that is a good point. although the breakage is limited to those custom policies that use any rego helpers we provide. do you have any proposal on how we can if possible, avoid this breaking change?",1,0.9298366904258728
1045193433,3015,knqyf263,2022-12-11T08:38:49Z,it is inconvenient if the built-in policies are disabled and not intuitive as users assume custom policies are add-on. i think we can accept the risk of out-of-date helper functions. we should warn it in our doc though. did you already see any issue from the version mismatch of the helper library? any thoughts?,0,0.9061201810836792
1045206344,3015,itaysk,2022-12-11T10:14:07Z,"thanks for catching this i agree, i don't think it's reasonable to expect the user to provide helpers for trivy's built-in policies, and moreover to make sure not to break any existing policy. agree with your recommendation.",1,0.8518331050872803
1045207473,3015,itaysk,2022-12-11T10:21:10Z,"in addition (another pr) wdyt about changing the namespace of built-in helpers for example to `lib.trivy.kubernetes` (instead of `lib.kubernetes` which is a popular existing library), this way it's clear that this is a trivy component, and if someone is using a custom/another kubernetes lib in custom policy, it would not conflict with trivy's.",0,0.9877880215644836
1045228247,3015,knqyf263,2022-12-11T12:48:25Z,"changing the namespace of our helpers sounds good to me. it could be a breaking change, so we can announce that along with the embedded policy retirement.",1,0.9010723829269409
1046405755,3015,simar7,2022-12-12T21:26:00Z,"actually i might have missed a thing here as it's been a while i made this pr. so i tested out the current set of changes and it is in fact loading both embedded policies and custom policies (if any are specified). iow loading custom policies does not disable embedded policies (current behaviour is maintained). also if a custom policy uses a helper, it will use the one that the embedding policies have (also current behaviour). see below for an example. note there are 4 results as the ""custom"" policy i'm loading is just a copy of an embedded policy, ds005. [code block] policy can be found here: [a link]",0,0.9649090766906738
1046756540,3015,itaysk,2022-12-13T07:44:12Z,"if this is the actually behavior (not sure since teppei spotted the behavior in the code) then it sounds like a good one to me. to summarize: 1. built-in policies are downloaded by default 1.1 can be disabled `--skip-policy-update` 2. built-in policies are loaded by default 2.1 can not be disabled (right?) 3. custom policies, if provided `--config-policy`, are loaded in addition to built-in 3. built-in helpers are always loaded and available for built-in and custom policies 3.1 if built-in policies bundle was not downloaded, built-in helpers are not available for custom policy author (correct? might want to fix it in the future) 3.2 todo: namespace built-in helpers",0,0.5394273400306702
1046802966,3015,knqyf263,2022-12-13T08:37:48Z,"oh, seems like we don't use downloaded polices like i pointed out, but use embedded policies. if custom policies are passed, we switch downloaded policies to embedded policies. this is why i said embedded policies complicate the logic. for example, - the latest downloaded policies: policy a, b, c (c was added to defsec recently) - the embedded policies: policy a, b - the user custom policy: policy d in this case, `trivy config /path/to/dir` detects a, b and c, but `trivy config --config-policy ./my-policy /path/to/dir` will detect a, b and d, not detect c anymore. i don't think it is expected behavior.",0,0.8416833281517029
1046815279,3015,itaysk,2022-12-13T08:47:49Z,"so if we consider the typical hierarchy: 1. embedded 2. downloaded 3. custom it should be loaded in this order, meaning 3 overrides 2 overrides 1 currently we miss step 2 if custom if provided. correct?",0,0.9859533905982971
1046815363,3015,knqyf263,2022-12-13T08:47:53Z,"iiuc, this pr behaves as below: 1. built-in policies are downloaded by default 1.1 can be disabled --skip-policy-update 1. built-in policies are loaded by default 2.1 can not be disabled (can be ignored by using exception policies though) 1. custom policies, if provided --config-policy, are loaded in addition to **embedded built-in** policies 3.1 regardless of whether built-in policies are downloaded 1. built-in helpers are always loaded and available for built-in and custom policies it should be like: 1. built-in policies are downloaded by default 1.1 can be disabled --skip-policy-update 1. built-in policies are loaded by default 2.1 can not be disabled (can be ignored by using exception policies though) 1. custom policies, if provided --config-policy, are loaded in addition to built-in policies 3.1 use downloaded policies if present 3.2 use embedded policies if there are no downloaded policies in local 1. built-in helpers are always loaded and available for built-in and custom policies please correct me if i'm wrong.",0,0.9618576765060425
1046819871,3015,knqyf263,2022-12-13T08:51:51Z,1. built-in 1.1. embedded 1.2. downloaded (if present) 1. custom `1.2` should override `1.1`. `2` should not override `1`. enabling `2` should not affect `1`. `1.1` or `1.2` should be selected regardless of `2`.,0,0.9873714447021484
1063944917,3015,simar7,2023-01-07T03:19:11Z,"thanks for the positive discussion from you both, i've read through it and i think i have an idea of what's desired. just to recap, i'm going by this as it's the most succinct and clear definition so far. here's a few results, please point out any logical flaws if you see any: 1. no cache, `--skip-policy-update` enabled and no custom policy passed: [code block] **result: only embedded policy is used.** 2. no cache, `--skip-policy-update` enabled and one custom policy passed: [code block] **result: observe that custom policy was scanned in addition to the embedded policy as desired by: `2 should not override 1. enabling 2 should not affect 1. 1.1 or 1.2 should be selected regardless of 2.`** 3. no cache, policy update is successful, no custom policy: [code block] **result: only newer downloaded policy is used.** 4. no cache, policy update is successful, one custom policy: [code block] **result: observe that again custom policy is scanned in addition but this time it is the newer downloaded policy. this is as per: `1.2 should override 1.1`.** 5. no cache, policy update fails, no custom policy [code block] **result: observe in this case the embedded policy is used as no new policies were downloaded.** 6. no cache, policy update fails, one custom policy: [code block] **result: observe again in this case embedded policy is used (in addition to custom policy).**",1,0.9535400867462158
1063945063,3015,simar7,2023-01-07T03:20:10Z,the changes to implement above are minimal but i want to confirm if the expectation is as desired before proceeding.,0,0.9863184690475464
1064160833,3015,knqyf263,2023-01-08T15:25:20Z,"thanks for sorting out. it looks perfect to me! there is one note about no.5. we should show the fallback message as an error so that users can be aware embedded policies are used. if there is no embedded policy, the logic can be much simplified, though. we may want to announce the retirement of embedded policies shortly.",1,0.9897498488426208
1065571076,3015,knqyf263,2023-01-10T10:00:33Z,"we need to close the file. otherwise, it fails tests on windows.",0,0.7883691191673279
1065571197,3015,knqyf263,2023-01-10T10:00:40Z,ditto,0,0.8428916931152344
1066335505,3015,simar7,2023-01-10T20:59:43Z,ah... thanks for catching this!,1,0.9774373769760132
1066949223,3015,knqyf263,2023-01-11T12:45:25Z,"it shows this error even when `--skip-policy-update` is specified on the first run. [code block] i think only unexpected things should be shown as an error. if policies cannot be pulled due to network or storage issues, it should be an error. what do you think? if you don't think embedded policies should be used even with `--skip-policy-update`, which means they should have downloaded policies locally, the error is ok because using embedded policies is unexpected.",0,0.9448590278625488
1066950000,3015,knqyf263,2023-01-11T12:46:18Z,forgot to remove?,0,0.9064918756484985
1066951769,3015,knqyf263,2023-01-11T12:48:08Z,shouldn't it be aligned with config scanning? seems like aws scanning will not download policies if custom policies are passed.,0,0.9578744173049927
1067557480,3015,simar7,2023-01-11T23:22:13Z,"right, i think the former is better (only error in unexpected situations). i think that's easy to check with err != nil and false skip update, that should signal that user intended to download new policies but failed to do so. i added that check in: [a link]",0,0.943303644657135
1067570946,3015,simar7,2023-01-11T23:45:37Z,good catch - fixed that here [a link],1,0.870539128780365
531792712,751,danielpacak,2020-11-27T21:46:26Z,the `--create-namespace` flag is pretty handy if he namespace does not exist: [code block],0,0.9212515354156494
531796570,751,danielpacak,2020-11-27T22:10:28Z,"iirc trivy does not recognize the `log_level` env, only trivy_debug. am i right ? if yes we can remove this setting and the loglevel value.",0,0.984946608543396
531800193,751,danielpacak,2020-11-27T22:36:26Z,"trivy server does not use the `trivy_reports_dir` env. it was only relevant for the harbor scanner adapter, which is storing vulnerability reports in temporary files.",0,0.9873805046081543
531801091,751,danielpacak,2020-11-27T22:43:28Z,"i'm not sure it makes sense to expose cachedir value to helm users. this is somehow implementation detail of this chart, which does not have any impact on scan results. what's more, i can imagine someone misconfiguring it.",-1,0.6331408023834229
531803758,751,danielpacak,2020-11-27T23:03:10Z,"we need to double check, but i played with trivy server run in the cluster and i had to specify `0.0.0.0:8080` to accept connection from client pods. see [a link]",0,0.985524594783783
531804496,751,danielpacak,2020-11-27T23:09:12Z,that's the name of env recognized by trivy: [code block],0,0.9850825071334839
531806262,751,danielpacak,2020-11-27T23:24:20Z,i'd not expose it as helm value. see my previous comment where this value is used.,0,0.9885419607162476
531806319,751,danielpacak,2020-11-27T23:24:40Z,does not take effect,0,0.859475314617157
531806553,751,danielpacak,2020-11-27T23:26:33Z,i'd use the default port of trivy server 4954,0,0.984519362449646
531806702,751,danielpacak,2020-11-27T23:28:01Z,scanner adapter -> trivy server,0,0.9867289662361145
531806738,751,danielpacak,2020-11-27T23:28:33Z,takes no effect,0,0.9073278307914734
531806770,751,danielpacak,2020-11-27T23:28:49Z,not used by trivy server,0,0.9735191464424133
531806842,751,danielpacak,2020-11-27T23:29:22Z,i'd use 4954 instead of 8080 to be consistent with trivy cli,0,0.9840373992919922
531807384,751,danielpacak,2020-11-27T23:34:14Z,"did you consider using deployment with emptydir volumes? i know that you're inspired by aquasecurity/harbor-scanner-trivy, but harbor adapter is using trivy in standalone mode. that was the reason to use statefulsets, but in case of client-server mode we may probably use deployment.",0,0.9858214259147644
531807876,751,danielpacak,2020-11-27T23:38:39Z,for aquasecrity/harbor-scanner-trivy image we created user scanner(id=1000). it's not the case for trivy image. so maybe you can use nobody(id=65534) as trivy image is based on alpine.,0,0.9852619767189026
531807983,751,danielpacak,2020-11-27T23:39:29Z,i think we don't use this anywhere. the server is not pulling image layers.,0,0.8558975458145142
531808006,751,danielpacak,2020-11-27T23:39:50Z,not used.,0,0.8704697489738464
531808114,751,danielpacak,2020-11-27T23:40:37Z,"actually, i've just tested it and it works fine!",1,0.8738150000572205
532153173,751,knqyf263,2020-11-29T04:23:50Z,"yes, trivy recognizes only `trivy_debug`.",0,0.989095151424408
532153517,751,knqyf263,2020-11-29T04:27:03Z,"as said, the server doesn't communicate with a registry.",0,0.9752587080001831
532364934,751,czunker,2020-11-30T06:06:04Z,"i understood the comments in a way, that trivy would pull the database from github. with the pvc and statefulset i wanted to prevent a pull for the database on every pod restart.",0,0.9636359214782715
532665290,751,danielpacak,2020-11-30T15:06:58Z,"okey so in case you want to reuse downloaded db files by configuring the storage class that has the reclaim policy set to `retain`, having statefulset makes sense. (afaik this is not possible with deployments and the only way is indeed `persistencevolumeclaimtemplate`.) on the other hand we can change the default `podmanagementpolicy` of the statefulset from `orderedready` to `paraller`, so pods are spun up independently rather than one after the other. there's no reason to wait in case of trivy server. pods can run and scale up or down independently.",0,0.9737347364425659
532690416,751,danielpacak,2020-11-30T15:39:30Z,add `trivy.ignoreunfixed` to values.yaml with short description,0,0.9835619330406189
532690697,751,danielpacak,2020-11-30T15:39:55Z,add `trivy.skipupdate` to values.yaml with short description,0,0.9860833287239075
533091301,751,czunker,2020-12-01T06:01:09Z,i changed the `podmanagementpolicy` and added a short note in the readme.,0,0.9874898791313171
533705015,751,danielpacak,2020-12-01T20:36:15Z,"even though we do not expose cache directory as helm value, we have to set it as env here. when i tested it pods were failing because we're running trivy server as non root user (`nobody`), but it's trying to read and write to the `/.cache` directory. [code block]",0,0.9573647379875183
533706281,751,danielpacak,2020-12-01T20:38:43Z,"i think we're missing description of the `githubtoken` property, which is referred to by the secret.",0,0.9753620624542236
533712186,751,danielpacak,2020-12-01T20:49:29Z,"by default this service has `spec.sessionaffinity: none`, which might cause inconsistency errors when we scale up statefulset replicas. i was actually able to see such errors in my env after scaling to 3 replicas. basically we have to make sure that all requests related to scanning a particular image are routed to the same pod, which has its own file system cache (pvc -> pv). the following sketch diagram depicts the problem that i'm trying to describe. ![a link] one way to fix it is to change `spec.sessionaffinity: none` to `spec.sessionaffinity: clientip`, but we have to double check how does that impact scalability. /cc",0,0.7077013850212097
533977070,751,czunker,2020-12-02T08:25:55Z,i think i missed to delete. in another comment mentioned the github token isn't needed to pull the database. [a link] or did i misunderstand this comment?,0,0.5248827338218689
533977338,751,czunker,2020-12-02T08:26:23Z,added this.,0,0.9845632910728455
533979574,751,czunker,2020-12-02T08:30:11Z,added,0,0.9735139608383179
534024746,751,danielpacak,2020-12-02T09:39:45Z,sorry for that you're right. i saw the secret referring to the gh token and i mixed up things. indeed we don't need the secret and the gh token for trivy client-server,-1,0.9893494844436646
537014840,751,knqyf263,2020-12-06T11:06:32Z,"i've supported redis and it will address this issue. [a link] should we wait for the redis support? or, can we merge this pr once and replace pv with redis in separate pr? what do you think, ?",0,0.976095974445343
537017420,751,knqyf263,2020-12-06T11:21:13Z,it will be done in the subsequent pr.,0,0.9864978194236755
537220048,751,knqyf263,2020-12-07T04:18:19Z,"i overlooked this conversation, but i was talking about `insecure`, not `githubtoken`. i meant `insecure` was unnecessary, but `githubtoken` was necessary for github rate limiting. even though a server doesn't pull the database from github so often (every 12 hours), a user might face the rate-limiting.",0,0.8301214575767517
537234424,751,czunker,2020-12-07T05:07:54Z,fixed this in pr #769,0,0.9867004752159119
537521630,751,danielpacak,2020-12-07T13:52:35Z,absolutely. i mixed up pulling layers from registry server by client (does not require gh token) and downloading trivy db from gh which is subject to rate limit and we should be able to configure gh token.,0,0.9012401103973389
667435479,1101,itaysk,2021-07-11T07:19:14Z,"iiuc, this section is not about scanning oci *image* but about oci *image layout directory*. saying image might confuse with a built image?",0,0.986844539642334
667436313,1101,itaysk,2021-07-11T07:26:31Z,"perhaps ""more blogs"", ""external blogs"", or ""what others are saying""",0,0.9689841270446777
667436924,1101,itaysk,2021-07-11T07:31:14Z,"""comprehensive vulnerability detection"" (otherwise it means the vulnerabilities are comprehensive, not trivy)",0,0.9824092388153076
667437236,1101,itaysk,2021-07-11T07:33:49Z,maybe merge these into: [code block],0,0.9856469035148621
667437922,1101,itaysk,2021-07-11T07:39:06Z,"how does this affect the license of trivy? the license file simply says apache 2, is that correct?",0,0.9717588424682617
667438306,1101,itaysk,2021-07-11T07:42:05Z,"""scan image for vulnerabilities""",0,0.9548168182373047
667438364,1101,itaysk,2021-07-11T07:42:27Z,"""scan directory for misconfigurations""",0,0.952526330947876
667438964,1101,itaysk,2021-07-11T07:47:54Z,"""trivy's usually scans each configuration file individually. sometimes it might be useful to compare values from different configuration files.""",0,0.9867825508117676
667439981,1101,itaysk,2021-07-11T07:55:56Z,"this was already said, can remove",0,0.9880849719047546
667446856,1101,itaysk,2021-07-11T08:51:29Z,suggestion: [code block],0,0.9879049062728882
667446987,1101,itaysk,2021-07-11T08:52:34Z,i think it's better to put this first,0,0.954733669757843
667447120,1101,itaysk,2021-07-11T08:53:25Z,"if you accept my suggestion for rule-based, can rewrite this in the same style",0,0.9836703538894653
667447761,1101,itaysk,2021-07-11T08:58:36Z,broken link,0,0.7162068486213684
667448104,1101,itaysk,2021-07-11T09:01:50Z,"what do you mean by ""allowed values"" the entire purpose of this flag is to supply my own custom value no?",0,0.974467933177948
667448439,1101,itaysk,2021-07-11T09:04:38Z,"wdym ""as a virtual machine""?",0,0.9873078465461731
667449481,1101,itaysk,2021-07-11T09:12:08Z,i think the details of how the policy db works is unnecessary for the quick start [code block],0,0.9607208371162415
667449698,1101,itaysk,2021-07-11T09:13:58Z,"please add ""for suggestions or issues regarding policy content, please open an issue under ""appshield"" or ""tfsec"" repository.",0,0.9812347292900085
667452900,1101,itaysk,2021-07-11T09:40:32Z,"maybe just to distinguish this list from the previous list, call the previous one ""file formats"" and this one ""configuration languages""",0,0.9870650768280029
667453071,1101,itaysk,2021-07-11T09:41:51Z,"""policy structure""?",0,0.9842076897621155
667453543,1101,itaysk,2021-07-11T09:45:52Z,"""metadata helps enrich trivy's scan results with useful information""",0,0.9587957859039307
667454130,1101,itaysk,2021-07-11T09:50:45Z,"maybe instead of this ""note"", add to the selector description above, that it's not just selecting which files to pass to the policy, but also affects how they will be parsed",0,0.9859765768051147
667465740,1101,knqyf263,2021-07-11T11:21:49Z,"add ""layout"" in accordance with [a link] [a link]",0,0.9876212477684021
667465826,1101,knqyf263,2021-07-11T11:22:22Z,done [a link],0,0.987381100654602
667465879,1101,knqyf263,2021-07-11T11:22:50Z,done [a link],0,0.987381100654602
667465887,1101,knqyf263,2021-07-11T11:22:56Z,done [a link],0,0.987381100654602
667470347,1101,knqyf263,2021-07-11T11:57:39Z,done [a link],0,0.987381100654602
667470381,1101,knqyf263,2021-07-11T11:57:57Z,done [a link],0,0.987381100654602
667470458,1101,knqyf263,2021-07-11T11:58:38Z,"`--file-pattern` does affect how files are parsed, but `selector` doesn't affect.",0,0.9854245781898499
667470554,1101,knqyf263,2021-07-11T11:59:41Z,done [a link],0,0.987381100654602
667470627,1101,knqyf263,2021-07-11T12:00:14Z,done [a link],0,0.987381100654602
667470704,1101,knqyf263,2021-07-11T12:00:34Z,done [a link],0,0.987381100654602
667471282,1101,knqyf263,2021-07-11T12:04:55Z,"no, it controls how trivy looks for config files. trivy looks for config files according to file name and extension. when a user might have dockerfile not named ""dockerfile"" and have different name conventions such as `webapp.docker` and `db.docker`, trivy will not handle the file as dockerfile. in that case, a user can specify `--file-patterns dockerfile:.*.docker`.",0,0.9852184653282166
667471405,1101,knqyf263,2021-07-11T12:06:01Z,looks it is working. still broken? [a link],0,0.9667930603027344
667471425,1101,knqyf263,2021-07-11T12:06:22Z,done [a link],0,0.987381100654602
667471458,1101,knqyf263,2021-07-11T12:06:49Z,"i rewrote, but could you review it again? [a link]",0,0.9819582104682922
667471467,1101,knqyf263,2021-07-11T12:06:55Z,done [a link],0,0.987381100654602
667471491,1101,knqyf263,2021-07-11T12:07:04Z,done [a link],0,0.987381100654602
667471518,1101,knqyf263,2021-07-11T12:07:16Z,done [a link],0,0.987381100654602
667471625,1101,knqyf263,2021-07-11T12:08:01Z,done [a link],0,0.987381100654602
667471651,1101,knqyf263,2021-07-11T12:08:16Z,done [a link],0,0.987381100654602
667471710,1101,knqyf263,2021-07-11T12:08:44Z,done [a link],0,0.987381100654602
667471739,1101,knqyf263,2021-07-11T12:08:49Z,done [a link],0,0.987381100654602
862458214,2065,chen-keinan,2022-05-01T11:03:00Z,`defer` in a loop might cause resource leak,0,0.9496579766273499
862477449,2065,chen-keinan,2022-05-01T13:45:56Z,"maybe the logic for persisting files on fs should be done in `trivy-kubernetes`, shouldn't trivy accept only root file folder path and walk it?",0,0.9881448745727539
862477609,2065,chen-keinan,2022-05-01T13:46:46Z,"we are calling k8s scan for each file path, shouldn't we call it once for folder path?",0,0.9878268837928772
862607748,2065,knqyf263,2022-05-02T06:10:07Z,"if there is no validation, we don't have to have `init()`.",0,0.9860824346542358
862609896,2065,knqyf263,2022-05-02T06:16:30Z,"could you point to the existing commit in remote so that reviewers can run this pr easily? like `go get -u github.com/aquasecurity/trivy-kubernetes`. after merging [a link] we will update go.mod again to point to the main branch. i don't mean you should not use `replace` directive. you can use `replace` in local, but it would be helpful if you use the actual commit when pushing commits to github.",0,0.9677950143814087
863937295,2065,knqyf263,2022-05-03T16:03:29Z,ioutil is deprecated,0,0.983440637588501
863953556,2065,josedonizetti,2022-05-03T16:22:13Z,"i can change the replace to point to my fork for now, as the branch exists on my fork i don't think go mod can pull it from the aquasecurity while the pr is not merged.",0,0.9889299273490906
863958151,2065,knqyf263,2022-05-03T16:27:25Z,please try [code block],0,0.9882170557975769
868947758,2065,chen-keinan,2022-05-10T08:11:35Z,this condition is redundant as there is a check already in `trivy-kubernetes` : [a link],0,0.9771721959114075
868971373,2065,chen-keinan,2022-05-10T08:35:38Z,`file handle` remains open if it fails on `yaml.marshal`,0,0.9857534170150757
868972219,2065,chen-keinan,2022-05-10T08:36:21Z,`file handle` remains open if it fails on `file.write`,0,0.98689866065979
868978647,2065,chen-keinan,2022-05-10T08:42:50Z,"resource config file removal should be deferred right after its creation (l195) , as if `k8sscan` fails, the file will remains on the disk",0,0.9869598746299744
869298921,2065,knqyf263,2022-05-10T14:17:54Z,this is an example. we don't have to put the entire json. can we shorten it?,0,0.9815904498100281
869524931,2065,knqyf263,2022-05-10T17:46:24Z,any reason we don't support timeout?,0,0.8740211725234985
869531891,2065,knqyf263,2022-05-10T17:54:58Z,"what do you think we put all k8s-related definitions into `pkg/k8s`? `report` and `writer` are much different from other artifacts. it makes it easy to find source code regarding k8s. another benefit is we can put codeowners in `pkg/k8s`, then you can do whatever you want under the directory. [a link]",0,0.9726973176002502
869539653,2065,knqyf263,2022-05-10T18:04:25Z,this verb can be used only in 'fmt.errorf' calls (%w). [code block],0,0.9873272776603699
869540875,2065,knqyf263,2022-05-10T18:05:58Z,"this `defer` should be put after the error handling. if it fails to create a temp file, it also fails to remove the file. [code block]",0,0.9845508933067322
870559536,2065,josedonizetti,2022-05-11T17:10:44Z,yup. as we spoke we are doing it after getting this pr in.,1,0.5969115495681763
870683673,2065,knqyf263,2022-05-11T19:40:11Z,looks like prs are already in the upstream (trivy-kubernetes). do we still need the `replace`?,0,0.9895892143249512
870685294,2065,knqyf263,2022-05-11T19:42:29Z,"i think ""scan kubernetes images and configurations"" or ""scan kubernetes vulnerabilities and misconfigurations"" are better since `image` is an artifact and `misconfigurations` is a security issue.",0,0.9795134663581848
870687375,2065,knqyf263,2022-05-11T19:45:27Z,the version 0 looks weird. is this because this feature is still experimental?,-1,0.9825448393821716
870688242,2065,knqyf263,2022-05-11T19:46:41Z,can we mention this is experimental here as below? [a link],0,0.9862046241760254
870692224,2065,knqyf263,2022-05-11T19:52:09Z,"any reason this is a debug message? i understand the error will be included in the report, but i feel like we should notify it in terminal.",0,0.7979351282119751
870693170,2065,knqyf263,2022-05-11T19:53:35Z,looks like this issue is remaining. [a link],0,0.9856535792350769
870695707,2065,josedonizetti,2022-05-11T19:56:17Z,"yes, i'm waiting for a last merge -> [a link]",0,0.9847931861877441
870696255,2065,josedonizetti,2022-05-11T19:57:04Z,"that was the idea, but i can change it to 1 if you think it makes more sense.",0,0.9754029512405396
870696428,2065,knqyf263,2022-05-11T19:57:17Z,"ok, let's wait for it then.",0,0.9764007329940796
870697150,2065,knqyf263,2022-05-11T19:58:12Z,it is ok then. i agree the schema is not fixed yet. i'm sure we will fix the schema soon.,0,0.9029462337493896
870700026,2065,josedonizetti,2022-05-11T20:02:05Z,"i asked a few friends to try it on their cluster with several resources (500-1000 resources), several resources were deployed with private images, and `trivy` was not configured to access the registry, the output becomes terrible, lots and lots of error logs, seems like everything is not working, and they cancelled the command, without waiting to generate a report , even to check at least the misconfigurations as the images were not reachable.",-1,0.9671651124954224
871002699,2065,knqyf263,2022-05-12T06:43:00Z,"interesting. we probably should notify users if it is an authentication error like ""to scan private images, please consider setting appropriate credentials."" let's keep it in our mind as a future enhancement.",1,0.5407548546791077
871095945,2065,owenrumney,2022-05-12T08:29:03Z,remove commented code and readd when required?,0,0.9856944680213928
1673374571,7131,DmitriyLewen,2024-07-11T04:11:06Z,i think we can omit this test. i think we'll just ask contributors to add new licenses to the `tests`. can you remove this test and revert `mapping` to `mapping`,0,0.9877644181251526
1673677586,7131,pbaumard,2024-07-11T09:09:37Z,"`mapping `is back to private. i also removed additional ""+"", ""-only"" and ""-or-later"" suffixes from [a link]",0,0.9884875416755676
1673692269,7131,DmitriyLewen,2024-07-11T09:19:58Z,thanks! spdx differentiates between `gpl-1.0-only` and `gpl-1.0-or-later` (see [a link] so i'm not sure we need to do this.,1,0.9569342136383057
1673952511,7131,pbaumard,2024-07-11T12:46:09Z,"1. there is no change in behavior, for example `gpl-2.0-only` and `gpl-2.0-or-later` are already mapped to gpl20 in current trivy mapping 2. `gpl-1.0-only` and `gpl-1.0-or-later` are not in current [a link], and it is probably not necessary to add them because of next point: 3. the main purpose of the normalization is to classify licenses into categories in [a link]. `gpl-1.0-only`, `gpl-1.0-or-later` and `gpl-1.0` would have the same category.",0,0.9832131862640381
1675069355,7131,DmitriyLewen,2024-07-12T03:18:06Z,"sorry, i missed that `licenseclassifier` uses same license for `gpl-2.0-only` and `gpl-2.0-or-later`. thank you for the clarification!",-1,0.8435397744178772
1675075638,7131,DmitriyLewen,2024-07-12T03:21:25Z,let's add a new variable for the updated license name to avoid renaming the license if we don't find that license in the `mapping` [code block] see [a link],0,0.9879024624824524
1675875705,7131,pbaumard,2024-07-12T13:14:53Z,i also performed additional space and spelling normalizations and added many new mappings from [a link] i need to fix integration tests.,0,0.9868593215942383
1677271669,7131,DmitriyLewen,2024-07-15T02:48:26Z,you can use `mage test:updategolden` command.,0,0.9864488244056702
1689473152,7131,DmitriyLewen,2024-07-24T09:44:39Z,can you add comment about this case?,0,0.9871767163276672
1689473463,7131,DmitriyLewen,2024-07-24T09:44:49Z,same,0,0.9733930826187134
1689477916,7131,DmitriyLewen,2024-07-24T09:48:01Z,iiuc licenses are already normalized. do we need this?,0,0.9877633452415466
1689514703,7131,DmitriyLewen,2024-07-24T10:11:23Z,can we use this function here? [a link],0,0.9882247447967529
1689516782,7131,DmitriyLewen,2024-07-24T10:12:56Z,i didn't find why we use `*-only` and `*-or-later` licenses here,0,0.9840668439865112
1689546604,7131,DmitriyLewen,2024-07-24T10:36:50Z,"we do not check all fields for os packages: [a link] therefore, there is no point in updating the os packages for the files `pkg/fanal/test/integration/testdata/goldens/packages/*.json.golden`.",0,0.9837371706962585
1690147476,7131,pbaumard,2024-07-24T16:56:12Z,i added a comment.,0,0.9832298159599304
1690147917,7131,pbaumard,2024-07-24T16:56:32Z,i also added a comment.,0,0.985877513885498
1690151711,7131,pbaumard,2024-07-24T16:59:46Z,the `license` from `normalizekeyandsuffix` is only used for the following assertion with the `panic` error. i added some comemnts to make it more explicit. the check could be made in unit test but it means having `mapping` public.,0,0.9895012974739075
1690155105,7131,pbaumard,2024-07-24T17:02:32Z,"i removed the cyclonedx normalization from this pr to reduce the scope. from [a link] that would ideally mean having : - id: ""a valid spdx license id"" - name: ""if spdx does not define the license used, this field may be used to provide the license name"",",0,0.9882642030715942
1690157124,7131,pbaumard,2024-07-24T17:04:27Z,this is explained in [a link] where the `apt` copyright has both: - license: gplv2+ interpreted as gpl-2.0-or-later - /usr/share/common-licenses/gpl-2 interpreted as gpl-2.0-only,0,0.9872708320617676
1690157389,7131,pbaumard,2024-07-24T17:04:40Z,i reverted those changes.,0,0.9696878790855408
1690732621,7131,DmitriyLewen,2024-07-25T03:24:40Z,"i think i understand your idea - you want to check the newly added licenses (from another pr later). i think we don't need to do this check every time we start trivy. you have added so many licenses, so i am not sure that many licenses will be added later. maybe a comment before `mapping` to the instructions for the new licenses will be enough. wdyt?",0,0.8578526973724365
1690732943,7131,DmitriyLewen,2024-07-25T03:25:23Z,got it! thanks,1,0.9877667427062988
1690785165,7131,DmitriyLewen,2024-07-25T04:33:58Z,"sorry, i confused you a little. `containerd` tests use full files. i have updated these golden files in [a link]",-1,0.9880809783935547
1690785882,7131,DmitriyLewen,2024-07-25T04:34:45Z,can you take a look?,0,0.9862033128738403
1693338523,7131,pbaumard,2024-07-26T16:43:12Z,fixed in latest commit.,0,0.9848797917366028
1693342194,7131,pbaumard,2024-07-26T16:47:01Z,"especially with latest commit with the version regular expression, it's becoming quite difficult to make sure to only add standardized keys. i added an `invalidmappingkeys` used in test and which might also be used later if adding new mappings from cli or other mean becomes possible.",0,0.5069916844367981
1698132425,7131,DmitriyLewen,2024-07-31T08:43:18Z,looks like we don't need this function anymore and we can just put everything in the map right away,0,0.9654881358146667
1698170491,7131,DmitriyLewen,2024-07-31T09:06:52Z,i'm not sure i understand where we need this. can you add an example in the comment?,-1,0.6096854209899902
1698178116,7131,DmitriyLewen,2024-07-31T09:11:17Z,i think this is a redundant test. we see this function working in `testparseapkinfo`.,0,0.9833498001098633
1698186399,7131,DmitriyLewen,2024-07-31T09:16:34Z,"what if we move this function to the test. to get `mapping`, we can create a function like [a link] for secrets.",0,0.9867144227027893
1698190502,7131,DmitriyLewen,2024-07-31T09:19:08Z,i tried to avoid using regex if possible. maybe we can avoid using this regex here,0,0.8935456871986389
1699888251,7131,pbaumard,2024-08-01T10:07:18Z,invalidmappingkeys no more used in latest commit.,0,0.9021864533424377
1699888746,7131,pbaumard,2024-08-01T10:07:44Z,testlaxsplitlicense was moved to normalize_test in latest commit.,0,0.9890944361686707
1699889829,7131,pbaumard,2024-08-01T10:08:33Z,normalize_test is now in package licensing to use internal mapping and functions.,0,0.9891754984855652
1699900800,7131,pbaumard,2024-08-01T10:16:38Z,the many version variations are in normalize_test. most of the mappings in current trivy version or in [a link] are because of slight variations in the way the version is declared in the license. so this regexp allows to: 1. greatly limit the number of mappings 2. avoid missing version mappings this regexp is strict by checking only version suffixes.,0,0.9871920347213745
1699958786,7131,pbaumard,2024-08-01T11:04:21Z,"done in latest commit, even if i am not sure it is more readable that way.",0,0.9773082137107849
1722843523,7131,DmitriyLewen,2024-08-20T07:44:00Z,can you add field names for better readability in these tests? e.g.: [code block],0,0.9870184659957886
1741052287,7131,pbaumard,2024-09-02T15:10:47Z,field names have been added in last commit.,0,0.9877921938896179
918865031,2490,DmitriyLewen,2022-07-12T11:36:15Z,"`pre-commit ` is developer helper, like `golangci-lint`. i am not sure that we need to add instruction to docs.",0,0.9678133130073547
918867169,2490,DmitriyLewen,2022-07-12T11:39:11Z,`trivy` repository has many test files with vulnerabilities. scan result will always return exit code 1 for these files. i think we can only select 1 file.,0,0.9829455614089966
918933284,2490,mxab,2022-07-12T12:53:40Z,"not sure if there is misunderstanding. this does not scan the trivy repo itself. (`.pre-commit-hooks.yaml` is not the same as the `.pre-commit-config.yaml`) it is the hook definition other users can reference in their pre-commit hook config for their repo. one ""less opinionated"" way might be to drop the `.` and let user specify this in the users hook config in the `args` block when the reference the `trivyfs` hook can you explain what you mean by that",0,0.917773425579071
918933337,2490,mxab,2022-07-12T12:53:44Z,"i thought as developer if i wanted to know on how to get started integrating trivy as a pre-commit hook i would look in the ""getting started / installation"" section",0,0.9710529446601868
919637146,2490,DmitriyLewen,2022-07-13T04:31:24Z,sorry for misleading you. yesterday i made a mistake with the logic of using `pre-commit`. thanks for help me understand.,-1,0.9885641932487488
919637269,2490,DmitriyLewen,2022-07-13T04:31:41Z,now i understand. you're right. this is a good place for it.,1,0.9714295864105225
919655668,2490,DmitriyLewen,2022-07-13T05:14:58Z,"do we need this hook? i think users will only use `trivyfs` hook. what do you think? p.s. i tried to use this hook but can't set `path` to `args`. i got errors. e.g.: `fatal multiple targets cannot be specified` when: [code block] `fatal unknown command ""fs ."" for ""trivy""` when: [code block]",0,0.9214937090873718
919660559,2490,DmitriyLewen,2022-07-13T05:25:45Z,what if we add information about the possibility of using [a link]? for example: [code block],0,0.9857293367385864
919756075,2490,mxab,2022-07-13T07:46:13Z,"yeah, i also misread something in the pre-commit docs, the reason why it works for the `trivyfs` hook but not the `trivy` one is that i configured `trivyfs` with [a link] `: false` pre-commit per default will not check all the files but only the staged one, therefore i think you got the error `fatal multiple targets cannot be specified` because pre-commit executed trivy like this: `trivy fs . staged-file1.txt staged-file2.txt` i'll remove the ""plain hook"" for now as it makes only sense if you can execute a command allows the appending of multiple files to check",0,0.6750412583351135
921057037,2490,DmitriyLewen,2022-07-14T11:36:55Z,i think it should be said that all flags work.,0,0.9826404452323914
1728448015,7336,DmitriyLewen,2024-08-23T06:39:43Z,we need to add info when we use `custom license` in docs and `license name`/`log message`,0,0.9891400337219238
1728449415,7336,DmitriyLewen,2024-08-23T06:40:55Z,add new field in `rpc` package.,0,0.9879058599472046
1728452246,7336,DmitriyLewen,2024-08-23T06:43:25Z,we use `file://` prefix in python. what if we create constants for these prefixes?,0,0.9877126812934875
1728453667,7336,DmitriyLewen,2024-08-23T06:44:47Z,we might want to add the first few words of the license text to the `name`.,0,0.989170253276825
1728500105,7336,afdesk,2024-08-23T07:23:12Z,"if agrees too, i'll add it. i thought about filtering by `custom license`, but maybe it doesn't matter",0,0.9803778529167175
1730884092,7336,afdesk,2024-08-26T08:23:40Z,done,0,0.9764507412910461
1730884287,7336,afdesk,2024-08-26T08:23:49Z,i hope i done it,1,0.5809788107872009
1730884865,7336,afdesk,2024-08-26T08:24:07Z,)) ![a link],0,0.555858850479126
1731078380,7336,DmitriyLewen,2024-08-26T11:02:40Z,looks like we can skip this change,0,0.9830633997917175
1731096814,7336,afdesk,2024-08-26T11:20:13Z,this change results the versions of `protoc-gen-go` for `cache/` and `common` to the same version. it was build automatically,0,0.9881278872489929
1731102208,7336,afdesk,2024-08-26T11:25:40Z,removed this update for this pr),0,0.9702816605567932
1731109957,7336,DmitriyLewen,2024-08-26T11:32:48Z,i thought about `custom license` again. this may not be clear to users. what if we use the name `incomparable license`/`unmatched license` this means that we can't compare license text with known trivy licenses and therefore store license as text. cc.,0,0.9870712161064148
1741735478,7336,knqyf263,2024-09-03T09:26:23Z,"i saw some places calling them ""custom licenses"", so i don't think it's that bad. [a link] [a link] [a link] or ""non-standard"" or something like that. `incomparable license`/`unmatched license` are also unclear what these did not match.",0,0.5811843276023865
1743122000,7336,knqyf263,2024-09-04T06:05:47Z,"nit: since this is ""detectedlicense"", `text` looks enough. [code block]",0,0.981295108795166
1743122111,7336,knqyf263,2024-09-04T06:05:53Z,ditto,0,0.8428916931152344
1743353772,7336,afdesk,2024-09-04T09:05:25Z,done,0,0.9764507412910461
1743353908,7336,afdesk,2024-09-04T09:05:30Z,done,0,0.9764507412910461
1650330692,6993,DmitriyLewen,2024-06-24T04:51:57Z,"for beauty and sameness: maybe we can move this log to the ""clear"" function (like for ""vuln-db"", ""java-db"" and ""checkbundle"")",1,0.9069291949272156
1650340528,6993,DmitriyLewen,2024-06-24T05:06:51Z,perhaps we can mark this flag as `removed`?,0,0.9879036545753479
1650368366,6993,DmitriyLewen,2024-06-24T05:33:12Z,what do you think about short name? [code block],0,0.9852017760276794
1650374283,6993,DmitriyLewen,2024-06-24T05:40:09Z,we say about removing cache**s**. i think it is better to use `-all` flag here. [code block],0,0.9850083589553833
1650374857,6993,DmitriyLewen,2024-06-24T05:41:01Z,if you will use `-all` flag. [code block],0,0.9891921877861023
1650376355,6993,DmitriyLewen,2024-06-24T05:43:16Z,we can use separate flags to remove dbs: [code block],0,0.9883956909179688
1650381999,6993,DmitriyLewen,2024-06-24T05:50:47Z,i'm not sure i understand why this was necessary. would removing this break gitlab integration?,0,0.5269749760627747
1650411084,6993,knqyf263,2024-06-24T06:22:09Z,"now, `--clear-cache` is actually just removing fanal cache (scan cashe) and not equivalent to `--all`. that's one of the reasons i want to delete `--clear-cache`.",0,0.9847598671913147
1650412054,6993,knqyf263,2024-06-24T06:23:24Z,"similar to [a link] `--reset` is not just removing databases, but removing all caches now. it's equivalent to `--all`.",0,0.987261950969696
1650414824,6993,knqyf263,2024-06-24T06:26:14Z,"the cache is based on image id and will not be used even when the same tag is used for different images, like the comment says. in other words, the comment is wrong and i believe we don't need `--clear-cache` here.",0,0.8681281805038452
1650419223,6993,knqyf263,2024-06-24T06:31:14Z,fixed in [a link],0,0.98800128698349
1650419449,6993,knqyf263,2024-06-24T06:31:31Z,i also added `--all`. [a link],0,0.988135576248169
1650420363,6993,knqyf263,2024-06-24T06:32:36Z,what is your suggestion? `suggested change` looks identical to me. do you mean `-a` or something similar?,0,0.9779540300369263
1650422488,6993,knqyf263,2024-06-24T06:34:45Z,it will be a breaking change as a command with `--light` will abort. i want to remove it separately. we probably need another announcement for the breaking change.,0,0.9751986265182495
1650430010,6993,knqyf263,2024-06-24T06:41:46Z,"agree. i think log messages are more of a user interface feature, so i moved them under `commands/clear`. [a link]",0,0.9655216932296753
1650432123,6993,DmitriyLewen,2024-06-24T06:44:07Z,got it!,1,0.9387748837471008
1650437739,6993,DmitriyLewen,2024-06-24T06:48:20Z,hm... looks like i saved suggestion incorrectly. yes. `-a` is usual shorthand for `--all` flag,0,0.9594019651412964
1650442880,6993,DmitriyLewen,2024-06-24T06:52:52Z,"yeah. i know this, but i doubted correctness of comment. thanks that clarified this for me.",1,0.9588223099708557
1650448625,6993,DmitriyLewen,2024-06-24T06:57:54Z,right. but this is db page. i think this page should say how to remove only dbs (instead of removing all caches).,0,0.9841728210449219
1650452814,6993,knqyf263,2024-06-24T07:01:14Z,added [a link],0,0.9870722889900208
1650454586,6993,knqyf263,2024-06-24T07:02:48Z,"oh, yes. you're right. i just replaced the existing flag (`--reset`) with the equivalent one (`--all`), but we now have better flags to remove dbs. thanks.",1,0.9661240577697754
1650551153,6993,DmitriyLewen,2024-06-24T08:16:28Z,"add new page to `mkdocs.yml`, please",0,0.9877507090568542
1650556998,6993,DmitriyLewen,2024-06-24T08:20:13Z,nit: [code block],0,0.9873168468475342
1650559947,6993,DmitriyLewen,2024-06-24T08:22:05Z,looks like it should be before `reset` flag.,0,0.9870882034301758
1650675420,6993,knqyf263,2024-06-24T09:29:18Z,added [a link],0,0.9870722889900208
1650675866,6993,knqyf263,2024-06-24T09:29:39Z,thanks. i was confused. fixed in [a link],-1,0.652803897857666
1650675995,6993,knqyf263,2024-06-24T09:29:44Z,fixed in [a link],0,0.98800128698349
1764465601,7526,DmitriyLewen,2024-09-18T06:21:31Z,just to make sure i understand correctly - `closed` is needed to check `github.event.pull_request.merged`? [a link],0,0.9863392114639282
1764483171,7526,DmitriyLewen,2024-09-18T06:38:16Z,"i think we need to say about `helm` in branch name, eg: [code block]",0,0.9873502850532532
1764486203,7526,DmitriyLewen,2024-09-18T06:41:06Z,"can we add a comment about this case? iiuc this work will be started after pushing a new tag, right?",0,0.9786267280578613
1764486720,7526,DmitriyLewen,2024-09-18T06:41:38Z,will be great to add comments for other jobs. this will make it easier to understand this workflow,1,0.9264988899230957
1764598161,7526,afdesk,2024-09-18T08:10:47Z,"yes, i keep the default types and add `closed` for pr merged",0,0.9889096617698669
1764615213,7526,afdesk,2024-09-18T08:23:06Z,done [a link],0,0.987381100654602
1764615797,7526,afdesk,2024-09-18T08:23:31Z,done [a link],0,0.987381100654602
1805881744,7526,DmitriyLewen,2024-10-18T05:28:43Z,what do you think about using [a link] you can get [a link] also you can [a link],0,0.9820284843444824
1805882991,7526,DmitriyLewen,2024-10-18T05:30:39Z,nit: [code block],0,0.9873168468475342
1805884457,7526,DmitriyLewen,2024-10-18T05:32:53Z,it seems like overwriting the versions in `jsondata` and writing this yaml would be more reliable. wdyt?,0,0.9857046604156494
1805886332,7526,DmitriyLewen,2024-10-18T05:35:34Z,it might make sense to write about change in `helm` version as well.,0,0.9864566326141357
1805888348,7526,DmitriyLewen,2024-10-18T05:38:11Z,`version` and `appversion` are default fields - [a link] let's create struct. something like that: [code block],0,0.9871150255203247
1805891682,7526,DmitriyLewen,2024-10-18T05:42:47Z,"i may be wrong, but i remember that the events for merging a pr by default and merging using `merge queue` may be different. does this work correctly?",0,0.9106653928756714
1810000231,7526,afdesk,2024-10-22T06:02:25Z,done [a link],0,0.987381100654602
1810000668,7526,afdesk,2024-10-22T06:02:55Z,done [a link],0,0.987381100654602
1810036710,7526,afdesk,2024-10-22T06:38:32Z,done [a link],0,0.987381100654602
1810247129,7526,afdesk,2024-10-22T08:39:13Z,added [a link],0,0.9870722889900208
1810292777,7526,afdesk,2024-10-22T09:02:04Z,"i tried several ways to overwriting `chart.yaml`. martshaling/unmarshaling doesn't allow to keep order of unknown fields. if we create a custom struct we can miss something in the future. using a specific library ([a link] doesn't allow to save only `chart.yaml`, it creates all helm files. so `sed` is the simplest way to update the yaml file. wdyt?",0,0.9773409366607666
1810467204,7526,DmitriyLewen,2024-10-22T10:33:56Z,"thanks for checking this out. then let's use `sed`, i don't mind :thumbs_up:",1,0.9119636416435242
1811205774,7526,afdesk,2024-10-22T18:35:05Z,"yep, it works: [a link] for the simplest job: [a link]",0,0.9376800656318665
1811866365,7526,DmitriyLewen,2024-10-23T05:13:23Z,just for info: you can use `t.tempdir()` to avoid having to do `defer os.remove(tempfile.name())`.,0,0.985323965549469
1811869348,7526,DmitriyLewen,2024-10-23T05:14:06Z,`ioutil` is deprecated - [a link] use `os.writefile`,0,0.9878262877464294
1811878575,7526,DmitriyLewen,2024-10-23T05:18:46Z,should helm tests be started if this workflow has been changed?,0,0.9857414960861206
1811882551,7526,DmitriyLewen,2024-10-23T05:21:31Z,i don't think we need to start testing if the pr has been merged.,0,0.9759128093719482
1811886043,7526,DmitriyLewen,2024-10-23T05:23:48Z,ubuntu-24.04 is currently `latest` version of `ubuntu` runner. can we bump runner version (maybe in another pr),0,0.9841512441635132
1814186768,7526,afdesk,2024-10-24T03:29:10Z,done [a link],0,0.987381100654602
1814187511,7526,afdesk,2024-10-24T03:30:37Z,done [a link],0,0.987381100654602
1814189960,7526,afdesk,2024-10-24T03:35:11Z,"i thought that yes. trivy helm chart depends on trivy image with a specific tag. if this image is removed, we shouldn't publish a new chart. does it wrong point?",0,0.9422481060028076
1814194186,7526,afdesk,2024-10-24T03:40:34Z,"done [a link] i've updated it here, because another actions already are bumped os version up (or using `-latest`).",0,0.988865315914154
1814244028,7526,afdesk,2024-10-24T04:49:03Z,i'm unsure about it. in any case we can see the result for created pr.,-1,0.8356532454490662
1814489243,7526,DmitriyLewen,2024-10-24T08:08:48Z,hm... i forgot about this case. thanks for reminding me!,1,0.9603252410888672
1308799708,5062,knqyf263,2023-08-29T13:13:03Z,"spdx mixes multiple types. in the example below, tye type of `elasticsearch` is `bitnami`, while the type of `apm-agent` is `maven`. if we force it to `bitnami`, it will not detect vulnerabilities in the java dependencies. [code block] the easiest approach is splitting an application into two applications, `bitnami` and other types. i'm thinking about where and how we should do that.",0,0.9786120653152466
1308889950,5062,juan131,2023-08-29T14:13:37Z,"we're just forcing it for the main application, right? i mean, we're not overwriting the type for all the associated libraries.",0,0.9684593677520752
1309770274,5062,knqyf263,2023-08-30T06:52:48Z,"no, it overwrites all packages included in spdx besides the main package like elasticsearch. ![a link]",0,0.9121969938278198
1310027602,5062,juan131,2023-08-30T10:06:47Z,"i see.. to be honest i don't know how we should parse relationships such as these ones... [code block] ... where it basically says ""_elasticsearch_ contains _jar_ which contains _co.elastic.apm:apm-agent_"". - should we consider both _elasticsearch_ & _jar_ applications? - should we _jar_ a library package of _elasticsearch_? - is _co.elastic.apm:apm-agent_ a library package of _elasticsearch_ or _jar_?",0,0.6240400075912476
1310464588,5062,knqyf263,2023-08-30T15:32:43Z,"yes, the bitnami package and the java packages are different from the purl perspective. i opened a pr. could you take a look? it works in my local environment. if you don't mind i can directly push the commits to your branch. [a link]",0,0.9577815532684326
1311141663,5062,juan131,2023-08-31T06:16:04Z,"thanks so much! i just merged! i'll continue my work based on that, i really appreciate it",1,0.9929046034812927
1311292800,5062,DmitriyLewen,2023-08-31T08:38:01Z,looks like we can remove that.,0,0.9840442538261414
1311297737,5062,DmitriyLewen,2023-08-31T08:42:03Z,what if we move this into [a link],0,0.985333263874054
1311313453,5062,DmitriyLewen,2023-08-31T08:54:10Z,"we [a link] `root package => application` case. but looks like we also need to remove tihs `application` from `orphanpkgs`. correct me, if i have missed something.",0,0.9766945838928223
1311339790,5062,juan131,2023-08-31T09:14:09Z,done at [a link],0,0.9888259172439575
1311341243,5062,juan131,2023-08-31T09:15:20Z,no cons on my side,0,0.8676225543022156
1311341317,5062,juan131,2023-08-31T09:15:23Z,could you address this?,0,0.9875240325927734
1311345270,5062,knqyf263,2023-08-31T09:18:35Z,"sure, i'll take care.",0,0.6398820281028748
1311379992,5062,DmitriyLewen,2023-08-31T09:46:42Z,we use `createpackagespdxidentifiermap` function 2 times: - [a link] - [a link] maybe we can only use `packagespdxidentifiermap`.,0,0.9886365532875061
1311431593,5062,knqyf263,2023-08-31T10:30:59Z,"they are for different purposes. we need to hold a whole mapping between spdx ids and packages since the same spdx id appears repeatedly, while orphan packages will be deleted gradually. any ideas on merging them?",0,0.9830717444419861
1311439551,5062,knqyf263,2023-08-31T10:39:00Z,"the analysis result is sorted later, so we don't have to do that in each analyzer. [a link] but then i just remember we could use `sort()`. fixed in [a link]",0,0.9848110675811768
1311442682,5062,knqyf263,2023-08-31T10:42:16Z,i've removed `application` only when it has dependencies. [a link],0,0.9882519841194153
1311445492,5062,DmitriyLewen,2023-08-31T10:45:13Z,oh... right. we need list of all spdx ids. sorry for confusing.,-1,0.9901698231697083
1311511353,5062,knqyf263,2023-08-31T11:49:24Z,"we need file paths. otherwise, users cannot understand where the package comes from. i remember the bitnami sbom used to include file paths. any reasons for removing file paths from sbom?",0,0.9857966303825378
1311612499,5062,knqyf263,2023-08-31T13:15:18Z,i've set the component path. it is much better than empty. we can talk about it later. [a link],0,0.8928306102752686
1311699709,5062,juan131,2023-08-31T14:11:29Z,it seems the main reason why we removed the `packages[].files[]` array is that we found issues validating the generated spdx files using the spdx validator below: - [a link] the error was: [code block] i'm trying to figure out why we were including the files information under `packages[].files[]` instead of `files[]` as it is done in this official example: - [a link] i'll let you know when i collect more information.,0,0.9655499458312988
1311701586,5062,juan131,2023-08-31T14:12:48Z,apparently this is sth that was already discussed at [a link],0,0.987692654132843
1311707990,5062,juan131,2023-08-31T14:17:23Z,"why this continue? i mean, why not iterating through `app.libraries` when type is `bitnami`?",0,0.9772704243659973
1311732198,5062,knqyf263,2023-08-31T14:34:45Z,"yes, spdx added a breaking change, and we fixed that. thus, i think you can include files in spdx. [a link] [a link]",0,0.9792280197143555
1311754093,5062,juan131,2023-08-31T14:49:47Z,"yes, after the fix we continued facing issues with the validator. it complained about `filesanalyzed` being set to `true` while missing the package verification code: [code block] see: - [a link] - [a link] and.. if we force `filesanalyzed` to `false` we find the error below: [code block] spec: [a link]",0,0.7664423584938049
1311785223,5062,juan131,2023-08-31T15:10:00Z,"if you apply these changes to the `elasticsearch.spdx.json`, you'll have a spdx file that's considered valid by [a link] [code block]",0,0.9876651167869568
1311828269,5062,knqyf263,2023-08-31T15:38:16Z,"added a comment. [a link] `application` in trivy represents a group of packages, such as package-lock.json, like a project. it doesn't make sense to set file paths to all the packages in package-lock.json. bitnami spdx aggregates packages and doesn't have the respective file paths now. then, we just set file paths to the application level. however, artifacts like jar files are located in the image separately. they all have different file paths, and those file paths are set to `application.libraries[].filepath` in trivy. in short, - application.filepath: a file path for aggregated packages - application.libraries[].filepath: a file path for artifacts ideally, we should determine that from `application.type`, but i put that in our backlog. i know the design is not straightforward now, so i'm planning to refactor it. it is in its early stages. we can improve this feature step by step.",0,0.9762251377105713
1311833784,5062,knqyf263,2023-08-31T15:42:16Z,thanks for the information. we'll look into it.,1,0.8088781833648682
1312521092,5062,knqyf263,2023-09-01T04:18:45Z,"can you please take a look? if we confirm the problem, we should create an issue and fix it.",0,0.9836429953575134
1312584601,5062,DmitriyLewen,2023-09-01T05:29:48Z,i checked our implementation: we don't use `filesanalyzed` (always `false`) and `packageverificationcode` fields. we add files to [a link] and use them in [a link]. that is why we have valid format. but perhaps it looks more correct to use `fileanalyzed`. perhaps we need to consider using this field.,0,0.9774031043052673
1312628585,5062,knqyf263,2023-09-01T06:35:26Z,"our spdx is valid. i guess you build sbom on top of our sbom, right?",0,0.9835980534553528
1312953979,5062,juan131,2023-09-01T12:16:31Z,"we obtain warnings in the [a link] such as the ones below with your spdx: [code block] yes, we use your sbom to build our spdx files.",0,0.989465594291687
1502164957,6176,DmitriyLewen,2024-02-26T07:53:53Z,nit: table has `plan json` -> `plan snapshot` order. but below `plan snapshot` -> `plan json` order. it's a little difficult to read,0,0.973863959312439
1502168097,6176,DmitriyLewen,2024-02-26T07:56:26Z,this is broken link.,0,0.8688876628875732
1502171493,6176,DmitriyLewen,2024-02-26T07:58:49Z,we have similar info in `coverage/iac/terraform/`. maybe we can just add link here?,0,0.9870720505714417
1502213991,6176,DmitriyLewen,2024-02-26T08:33:45Z,correct me if i am wrong. [code block],0,0.9314318895339966
1502218397,6176,DmitriyLewen,2024-02-26T08:37:32Z,iiuc this function is needed to re-generate tfplan files. can you add a comment on this? this will make this code easier to maintain,0,0.9796903133392334
1502269309,6176,nikpivkin,2024-02-26T09:16:06Z,"that's right, i couldn't find the link to which it should be changed to",0,0.9765723347663879
1502307734,6176,DmitriyLewen,2024-02-26T09:43:46Z,i was sure we had moved them. but it seems i am wrong - [a link] do you remember why we removed these examples? perhaps defsec (or another repo) contains these examples?,0,0.6850847601890564
1503672143,6176,simar7,2024-02-27T05:50:25Z,"is it easier if we simply parse the input within trivy and decide if the user has passed in a plan json or a plan snapshot? i feel having to know which kind of terraform plan scanner to use is a little overwhelming for the user as compared to just ""scanning the plan"" and letting trivy decide what the input is. another example would be: today we scan terraform, without the user telling us if it's hcl v1 or v2. wdyt?",0,0.5890023708343506
1503674958,6176,simar7,2024-02-27T05:54:41Z,i wasn't able to run this target. see below for details: [code block],0,0.8624656200408936
1503700173,6176,simar7,2024-02-27T06:26:44Z,"it seems we need to know the size as `zip.newreader` expects it, what if we use [a link] and get the size via something like the following? [code block] just trying to see if we can avoid reading the entire plan snapshot into memory.",0,0.9851371049880981
1503717871,6176,simar7,2024-02-27T06:48:55Z,another idea is if we can write a new function that like the `newreadseekerat()` but also returns the size as well.,0,0.9878538846969604
1504533119,6176,nikpivkin,2024-02-27T16:10:09Z,"[a link] copies the data from `io.reader` to a buffer, so there is no way to avoid reading the file completely, or am i wrong?",0,0.8504339456558228
1504537176,6176,nikpivkin,2024-02-27T16:12:32Z,"trivy automatically detects the type of configuration, so the user does not need to worry about selecting the type of scanner. this page describes the trivy coverage.",0,0.9777496457099915
1504548240,6176,nikpivkin,2024-02-27T16:19:22Z,done [a link],0,0.987381100654602
1504550139,6176,nikpivkin,2024-02-27T16:20:07Z,i've updated the link to `coverage`. [a link],0,0.9882524609565735
1504553854,6176,nikpivkin,2024-02-27T16:21:36Z,"thank you, fixed [a link]",1,0.8785097002983093
1504556651,6176,nikpivkin,2024-02-27T16:23:15Z,i have aws set to localstack by default. fixed it [a link],0,0.9855761528015137
1504673197,6176,nikpivkin,2024-02-27T17:24:48Z,done [a link],0,0.987381100654602
1505234552,6176,simar7,2024-02-28T01:56:42Z,it's a little better in my testing: [code block] you can find the results and the benchmark here: [a link],0,0.8531277179718018
1505307375,6176,simar7,2024-02-28T03:27:49Z,sorry i misread this. it makes sense now.,-1,0.9865919947624207
1505518591,6176,DmitriyLewen,2024-02-28T08:08:38Z,you don't disable `ryuk` for this test now. is this expected?,0,0.9849165081977844
1505522526,6176,DmitriyLewen,2024-02-28T08:12:10Z,i'm not sure: do we need to return `aws_endpoint_url` value after this function completes?,0,0.9506219029426575
1505525845,6176,DmitriyLewen,2024-02-28T08:15:16Z,what if we take this outside of the function?,0,0.9658265113830566
1505543786,6176,nikpivkin,2024-02-28T08:30:29Z,environment variable values are valid only within the current process and are not saved after the process is terminated,0,0.9876732230186462
1505552031,6176,nikpivkin,2024-02-28T08:36:46Z,i don't think this list will be used outside of this function,0,0.973474383354187
1505653024,6176,DmitriyLewen,2024-02-28T09:41:59Z,hm... i didn't check this. thanks for new information for me :grinning_face_with_smiling_eyes:,1,0.9696341753005981
1505654213,6176,nikpivkin,2024-02-28T09:42:35Z,fixed [a link],0,0.9879513382911682
1505678721,6176,nikpivkin,2024-02-28T09:57:12Z,thanks for the research! i found an even more effective way [a link],1,0.9891108870506287
1506901886,6176,simar7,2024-02-29T01:58:01Z,can we rename this to tfjson to avoid confusion with the stdlib package? [code block],0,0.9891669750213623
1506934388,6176,simar7,2024-02-29T02:59:42Z,"how about reusing `dir` and `name` vars to reduce test code, since they are called the same anyway.",0,0.9864278435707092
1507088111,6176,nikpivkin,2024-02-29T06:47:07Z,wouldn't this cause confusion with the json configuration syntax? [a link],0,0.9735826253890991
1507282427,6176,nikpivkin,2024-02-29T09:37:02Z,"checking the path of a remote module is not reliable, as the result may depend on the order in which the tests are executed. if the module is not in the cache, the path is a reference to the git, otherwise the path to the module is in the cache.",0,0.9382714033126831
1509554546,6176,simar7,2024-03-01T21:22:52Z,"i wasn't able to make this test fail, is it flaky? is there any way to test without the effects of the cache?",-1,0.8746636509895325
1510860391,6176,nikpivkin,2024-03-04T09:31:59Z,1. clear the cache `rm -rf $tmpdir/.aqua`. 2. comment out the first two test cases so that the test with the remote module is the first. 3. run test: [code block],0,0.9869892001152039
1510863181,6176,nikpivkin,2024-03-04T09:33:48Z,"since only the remote module is used in this test case, we only need to verify that the check detected misconfig. i'll update the test",0,0.9870823621749878
1510872667,6176,nikpivkin,2024-03-04T09:39:14Z,"i created an issue in defsec asking to add the ability to skip cache to avoid fluky tests, but the issues are now closed. can we move this issue to trivy?",0,0.9844478368759155
1510890224,6176,nikpivkin,2024-03-04T09:51:20Z,done,0,0.9764507412910461
1510890641,6176,nikpivkin,2024-03-04T09:51:39Z,fixed [a link],0,0.9879513382911682
1511857379,6176,simar7,2024-03-04T22:05:46Z,"yes please, if it's a small change you can just make a pr without the need to track with an issue.",0,0.9824602603912354
286617045,50,DanCech,2019-05-22T18:03:44Z,"rather than relying on the global in utils, would it make sense to define a `scanoptions` struct that could include the vuln types (for now, maybe more options later) and pass that as a parameter to `scanner.scanimage` and `library.scan`?",0,0.9889434576034546
286800910,50,Mallear,2019-05-23T06:59:40Z,i moved vulntype var and related functions in `pkg/types/scanoptions.go` file,0,0.9866909980773926
290612276,50,knqyf263,2019-06-05T07:36:59Z,this space is necessary for new line in markdown.,0,0.9868254065513611
290612377,50,knqyf263,2019-06-05T07:37:20Z,same as above,0,0.9772257208824158
290625149,50,knqyf263,2019-06-05T08:14:48Z,this doesn't make much sense. it is not decided where each lock file is located. e.g. `/myapp/package-lock.json` `xxx-app` is the specific case in my example. [a link],0,0.9040311574935913
291030667,50,Mallear,2019-06-06T06:04:15Z,fixed it with a `\`,0,0.9814070463180542
291030701,50,Mallear,2019-06-06T06:04:24Z,fixed it with a `\` too,0,0.9844808578491211
291030812,50,Mallear,2019-06-06T06:05:00Z,i have deleted this block,0,0.9793359637260437
291123118,50,knqyf263,2019-06-06T10:40:08Z,`\` does not seem to work. ![a link],-1,0.8962506651878357
291123411,50,knqyf263,2019-06-06T10:41:03Z,"this should also be fixed (os,library).",0,0.9876798391342163
291123521,50,knqyf263,2019-06-06T10:41:25Z,same as above,0,0.9772257208824158
291124084,50,knqyf263,2019-06-06T10:43:13Z,"how about `os,library` instead of `all`?",0,0.9885178804397583
291124898,50,knqyf263,2019-06-06T10:45:45Z,same as above,0,0.9772257208824158
291428715,50,knqyf263,2019-06-07T01:41:39Z,"`s/(os, library)/(os,library)/` the space between ""os"" and ""library"" should be removed because the later code doesn't trim a space.",0,0.9856230020523071
291428741,50,knqyf263,2019-06-07T01:41:52Z,same as above,0,0.9772257208824158
291428836,50,knqyf263,2019-06-07T01:42:32Z,unnecessary?,0,0.5867832899093628
291429249,50,knqyf263,2019-06-07T01:45:29Z,i think that isvulntypeselected is unnecessary because this function is the same with `utils.stringinslice`. is there a reason to need this function?,0,0.9806578159332275
291455458,50,Mallear,2019-06-07T05:23:19Z,i have build errors when keeping this line : [code block] i forgot to un-comment before commit,0,0.6177898049354553
291455658,50,Mallear,2019-06-07T05:25:05Z,"did not know about `utils.stringinslice`, i will delete isvulntypeselected.",0,0.9243220686912537
291457228,50,Mallear,2019-06-07T05:35:10Z,i have uncommented it,0,0.6564742922782898
291457262,50,Mallear,2019-06-07T05:35:21Z,done,0,0.9764507412910461
291524889,50,knqyf263,2019-06-07T09:49:49Z,you can remove this line.,0,0.9868996143341064
291526134,50,knqyf263,2019-06-07T09:53:28Z,"you used `if` block, so the scope has been changed. as a result, this line is already unnecessary.",0,0.9777672290802002
291549931,50,Mallear,2019-06-07T11:16:21Z,done,0,0.9764507412910461
1465503759,5999,Maxim-Durand,2024-01-24T20:31:11Z,using `report.artifactname` instead of `report.metadata.repotags` would miss the image tag.,0,0.9852141737937927
1465849215,5999,DmitriyLewen,2024-01-25T05:10:26Z,we aggregate some packages to 1 result - [a link] but we can find path from results.packages.filepath: [code block] maybe we just use filepath for these packages?,0,0.9880405068397522
1466138693,5999,Maxim-Durand,2024-01-25T10:11:49Z,"although i agree with you it's an interesting change as it would make the manifest more precise. nonetheless, i think the full `filepath` would be too much to render in github dependency and would bloat the ui. i can do a test with that change if you want and show the results here ? otherwise we could try to extract important values from the `filepath` and adding them to `result.target`, but that seems complex and prone to errors.",0,0.8655208945274353
1467215241,5999,DmitriyLewen,2024-01-26T04:38:01Z,"for other languages we already use filepath (filepath is stored in `target`): [code block] and we didn't get issues about ui. yes please. if you have time, check it out.",0,0.972908079624176
1468095610,5999,Maxim-Durand,2024-01-26T20:04:54Z,"so i have a few things to report: 1. as you pointed out trivy aggregates multiple packages in the same ""app"" (for instance `python` or `node`) into one result. the issue is that in the sbom format, the `source_location` is set at the `manifest` level not at the package level (`resolved` key in sbom format). meaning, if we keep the default trivy aggregation then we have to use only one of all the packages `filepath`. how to define that value is either arbitrary, or we need some sort of heuristic ? 2. in terms of ui it isn't as bloated as i expected, so i think you're right and it's ok to use. ![a link] the `source_location` used in the above screenshot is simply the `filepath` of the last package in `result.packages` so it's not even correct. 3. in the case trivy is scanning an image i think it's still pretty useless to replace the `manifest`'s `source_location` with this `filepath` value and we should instead reference the image's name and tag.",0,0.9681466221809387
1469105434,5999,DmitriyLewen,2024-01-29T05:53:06Z,"we have already seen cases where it is necessary to remove aggregation, but this requires large changes and we are not sure about it. i created a small function to get filepath for each package - [a link] can you take a look? this makes sense for ui. but what worries me is case where user only knows that image contains vulnerable package, but doesn't have filepath to find and update that package. it would be great to add filepath somehow. e.g. we can use ` : - ` format for [a link]. is it possible to see `gsbom` file after uploading to github?",-1,0.8959400653839111
1469441742,5999,Maxim-Durand,2024-01-29T11:16:07Z,"can you take a look? just had a look, so from the trivy `results` there is still aggregation but the sbom `manifest` is not keeping this aggregation. meaning each package is its own result with its own `source_location`, that seems like a good compromise to me. my assumption is that most people scanning images are in charge of maintaining those, meaning they know what's installed on them and how, so knowing the exact `filepath` of a dependency won't change much. but it's true we could always do ` : - ` although it's going to be super long and i'm not sure how github manifest filter will react to it. i feel like maybe we should ask a broader audience then just the 2 of us for the direction to go, but unsure how and where to ask. yes. from my testing it's not exactly the same sbom file trivy sends to github, but [a link]",0,0.7863026857376099
1469477171,5999,DmitriyLewen,2024-01-29T11:49:03Z,hello can you take part in this discussion? perhaps you'll see another idea.,0,0.9707446098327637
1474473178,5999,RichardoC,2024-02-01T13:30:19Z,"could we use ""repodigests"" instead, as that included both the tag and digest? that would address the comment i just put on the pr discussion?",0,0.9864675402641296
1476125770,5999,Maxim-Durand,2024-02-02T14:26:14Z,just to confirm using `repodigests` would work i did some testing and it seems to be working fine. each time you scan your image with a new sha it will close all the previously open alerts for that image and only keep the latest version open. but you're still able to see the previously closed alerts by simply using the `is:closed` filter and searching for a specific manifest works fine too.,0,0.8844068646430969
1476156309,5999,Maxim-Durand,2024-02-02T14:49:41Z,"a mix of suggestion at [a link] and yours would give us the longest form possible storing all information: ` / : : - ` ![a link] i tested it and although it's very long, filtering seems to work too (the `image_hash` is fake). to me this defeats the purpose, and that's why i would advise to only use ` / : : `.",-1,0.8875240087509155
1477059064,5999,Maxim-Durand,2024-02-03T12:31:21Z,"see [a link] i think the drawback of [a link] (each package becoming it's own manifest) would ruin the basic usage of github dependency as it would make filtering by manifest very complex. so i went ahead and pushed the change to use ` / : : `, until we find a better solution.",0,0.9424524307250977
1477075020,5999,RichardoC,2024-02-03T14:37:22Z,"yeah, showing the package location (while having those disadvantages) will help with investigations about what actually needs to be fixed/updated",0,0.9806170463562012
1477075118,5999,RichardoC,2024-02-03T14:38:20Z,why are you doing this rather than just using repodigests directly? mind adding a comment?,0,0.8665315508842468
1477604636,5999,knqyf263,2024-02-05T02:42:41Z,"unfortunately, it is not true. we've been seeing a lot of issues with people being confused about where a package is installed. this is because our table format doesn't include the full path. therefore, we always point out that the package path is included in the json report and that they should check the path. i might not be following the conversation., but what if adding file paths in `metadata`? [a link]",-1,0.6575071215629578
1477656287,5999,DmitriyLewen,2024-02-05T04:34:32Z,do you mean to get format like [a link],0,0.9860753417015076
1477774823,5999,knqyf263,2024-02-05T07:44:00Z,"iiuc, it just puts a file path to a key. i'm suggesting we put file paths under the metadata of packages. btw, the line i shared above was wrong. [a link] or i may not understand the problem correctly. i just answered this question. [a link]",0,0.9346434473991394
1477922786,5999,Maxim-Durand,2024-02-05T09:53:40Z,"`repodigests` looks like ` / : `. whereas `repotag` looks like looks like ` / : `. so if only using `repodigests` it means loosing the ` `. good question, i added a comment.",1,0.5333662033081055
1479587202,5999,Maxim-Durand,2024-02-06T11:00:29Z,i just tested and adding a `metadata` at the package level package: [code block] doesn't change anything in github dependency ui. but i agree at least the user would be able to find the path for each package by parsing the json.,0,0.9703122973442078
1480964695,5999,knqyf263,2024-02-07T06:42:59Z,interesting. isn't the metadata shown anywhere?,0,0.7221584320068359
1482849686,5999,Maxim-Durand,2024-02-08T11:55:53Z,"not that i can see in github dependency ui no, see screenshot below to see how it looks. ![a link]",-1,0.766505241394043
1483840624,5999,DmitriyLewen,2024-02-09T04:09:15Z,"so user can only get package metadata when [a link], right?",0,0.9887027740478516
1484010653,5999,Maxim-Durand,2024-02-09T08:33:37Z,"if they use trivy then there's no issue as the user will now be able to find the file path for each package by parsing the json report before sending it to github. but if they use trivy-action then the report is sent automatically and the user doesn't have access to the original report hence he wouldn't be able to parse it. maybe if the user then export it from github, the metadata tag with each package file path will still be there, i'll test that.",0,0.9752045273780823
1484092505,5999,Maxim-Durand,2024-02-09T09:49:53Z,"this is what i got from github export to sbom for the same package as in [a link] [code block] as you can see the `metadata` tag doesn't show up in the exported sbom. as this issue only involves `trivy-action` and not `trivy` itself anymore, i think we should continue this discussion once this pr is merged to find a solution for `trivy-action` users at [a link] (i would recommend to add an option for [a link] so that user can easily fetch the report).",0,0.9738977551460266
1487836399,5999,Maxim-Durand,2024-02-13T13:19:12Z,"i created [a link] to make sure users of `trivy-action` will know where to find the missing details from github dependency. and do you agree with this compromise ? if so, can you review this pr code ?",0,0.9736983776092529
1494254313,5999,DmitriyLewen,2024-02-19T09:32:46Z,[a link] [code block],0,0.987799882888794
1494263085,5999,DmitriyLewen,2024-02-19T09:36:23Z,"also it might make sense to use the separator `,` (without space) to get a string without spaces.",0,0.9865959286689758
1495210457,5999,DmitriyLewen,2024-02-20T03:44:41Z,can you also update other variables that use `_`?,0,0.9886411428451538
1495210628,5999,DmitriyLewen,2024-02-20T03:45:09Z,-durand wdyt about this? does it make sense?,0,0.9488245248794556
1497453510,5999,Maxim-Durand,2024-02-21T12:32:35Z,"already done in [a link] i honestly have no opinion on this as having a space there shouldn't break anything, so i left it as it was (but i'm totally ok changing it). is there a particular reason you want to remove the space ? if not, i'd say ""if it ain't broke, don't fix it"".",-1,0.6749083399772644
1498704671,5999,DmitriyLewen,2024-02-22T06:20:09Z,"thanks! is there a particular reason you want to remove the space ? if not, i'd say ""if it ain't broke, don't fix it"". i was worried that this might break something in github and make it harder to parse that string (i'm not sure of the use case or if this would be needed). but if you were told that this is normal, let these spaces remain.",1,0.6699301600456238
1558858755,6476,nikpivkin,2024-04-10T05:21:03Z,is it possible to remove the old flag and add it as an alias to the new flag? then you don't have to worry about handling two flags [code block],0,0.9818446636199951
1559170800,6476,nikpivkin,2024-04-10T09:56:17Z,the link should be changed to the trivy repo.,0,0.9867913722991943
1560394150,6476,simar7,2024-04-11T03:34:24Z,nice! yeah that's much simpler to implement.,1,0.982912540435791
1571843448,6476,DmitriyLewen,2024-04-19T05:52:09Z,does go always use commit for `github.com/aquasecurity/trivy-checks`? also [a link] released. maybe we can use it right away,0,0.9850152134895325
1571851917,6476,DmitriyLewen,2024-04-19T05:58:15Z,use commit instead of `main` to avoid breaking the link after an update. also looks like `checks/kubernetes/policies` and `rules/docker/policies` don't exist.,0,0.9878888726234436
1571855545,6476,DmitriyLewen,2024-04-19T06:01:44Z,looks like we missed `--reset-checks-bundle` here.,0,0.9737057089805603
1571866731,6476,DmitriyLewen,2024-04-19T06:12:06Z,"we've added logic for the trivy-db and trivy-java-db tags - #6410. i think users will expect the same logic for ""checks"".",0,0.9850174784660339
1571871357,6476,DmitriyLewen,2024-04-19T06:16:23Z,also i think we can rename link names [code block],0,0.9829059839248657
1576905564,6476,simar7,2024-04-23T21:18:21Z,"if i understand correctly, you are referring to versioning the bundles? if so, we already have that for checks: [a link] if not, could you explain your idea?",0,0.9859814643859863
1577186723,6476,DmitriyLewen,2024-04-24T03:19:59Z,"i meant similar logic - [a link] but we do that for backward compatibility: [a link] i thought about using the same logic for similar flags, but it looks like you were only adding tag (""bundleversion"") for default repository, so those changes might break user's scanning.",0,0.9830096364021301
1578586484,6476,simar7,2024-04-24T22:18:33Z,ok can we make that change (if needed) in a separate pr? this pr is purely for renaming everything that's a policy into a check.,0,0.9862678050994873
1578797914,6476,DmitriyLewen,2024-04-25T03:17:27Z,"to be honest, i already doubt the need for these changes. we made them for backward compatibility and will probably remove them soon. so let's leave it to your decision. we can always add this if users ask about it.",0,0.8967549204826355
1580417920,6476,DmitriyLewen,2024-04-26T02:42:26Z,perhaps we want to rename `policy` folder? `docs/docs/scanner/misconfiguration/policy/builtin.md` -> `docs/docs/scanner/misconfiguration/check/builtin.md`,0,0.9861737489700317
1580419345,6476,DmitriyLewen,2024-04-26T02:45:46Z,hmm... what version of go are you using on your local pc? why was this removed?,0,0.8769502639770508
1580420870,6476,DmitriyLewen,2024-04-26T02:49:04Z,do you know why the order was changed?,0,0.9835625290870667
1580422868,6476,DmitriyLewen,2024-04-26T02:53:47Z,let's try to always use the same name (e.g. [a link] [code block],0,0.9851052761077881
1580451542,6476,simar7,2024-04-26T04:00:50Z,"i'm not sure to be honest. maybe it's redundant to specify toolchain when the go version is the same? [a link] i run the following: [code block] if you get rid of the patch version from the go directive within go.mod, i get this error: [code block] running `go mod tidy` on the version in main automatically removes the `toolchain` directive and replaces it with this change.",-1,0.9126653075218201
1580484468,6476,simar7,2024-04-26T05:06:02Z,it seems we didn't sort them so the order changed over go versions. i added sorted results now. [a link],0,0.9812286496162415
1580484807,6476,simar7,2024-04-26T05:06:46Z,yes fixed a bunch of more places as well. thanks!,1,0.9614341259002686
1580496453,6476,DmitriyLewen,2024-04-26T05:28:33Z,hm... this is strange... my go doesn't remove `toolchain` :grinning_face_with_smiling_eyes: : [code block],-1,0.9850929379463196
1580497736,6476,DmitriyLewen,2024-04-26T05:31:02Z,[a link] is this debug strings? :grinning_face_with_smiling_eyes:,0,0.5553558468818665
1580516775,6476,simar7,2024-04-26T06:02:14Z,hmm i'm taking a look again to see what's going on. i will upgrade to go 1.22.2 as you and try again.,0,0.9713153839111328
1582020667,6476,simar7,2024-04-28T05:38:40Z,"i don't have a good answer but after updating to go 1.22.2, go removed the toolchain directive for me but added a patch version to the go version [a link] i personally think since our go version and toolchain are same, this behavior is normal and expected as specifying the same version for the toolchain and go version are redundant. but i'm not sure why i'm not able to replicate the behavior you see on your end. could you try the following? 1. restore the go version from the main branch into my branch 2. try running `go mod tidy`",-1,0.5102089643478394
1582593900,6476,knqyf263,2024-04-29T06:32:37Z,"go also applies [a link] to the go version. since `trivy-checks` uses `go 1.22.0` now, go chooses 1.22.0 rather than 1.22. [a link] i'd suggest removing the patch version in trivy-checks. otherwise, we need to bump the patch version every time (1.22.0 => 1.22.1 => 1.22.2...). [code block]",0,0.9868994951248169
1584133357,6476,simar7,2024-04-30T04:56:47Z,thanks for that info. i had a hunch it could be that but didn't get to it. good to know about mvs! i've updated trivy-checks repo and also used it within trivy [a link],1,0.9899583458900452
1590848870,6633,DmitriyLewen,2024-05-06T11:01:05Z,looks like we can use sort.sort,0,0.9798411130905151
1590854905,6633,DmitriyLewen,2024-05-06T11:02:46Z,same,0,0.9733930826187134
1590870150,6633,DmitriyLewen,2024-05-06T11:14:23Z,same for other,0,0.9805243015289307
1590879159,6633,DmitriyLewen,2024-05-06T11:21:11Z,we can use sort.sort(),0,0.9868930578231812
1590879271,6633,DmitriyLewen,2024-05-06T11:21:17Z,same,0,0.9733930826187134
1590881446,6633,DmitriyLewen,2024-05-06T11:23:00Z,same,0,0.9733930826187134
1592088782,6633,DmitriyLewen,2024-05-07T09:09:56Z,"iirc it's better to use new number, even if we just rename the field.",0,0.9843829274177551
1592158317,6633,knqyf263,2024-05-07T09:59:02Z,"renaming should be ok as protobuf internally uses number, not name. i'll check it just in case.",0,0.9870041012763977
1592162166,6633,knqyf263,2024-05-07T10:01:49Z,thanks. [a link],1,0.7931249141693115
1592180518,6633,knqyf263,2024-05-07T10:16:52Z,done [a link],0,0.987381100654602
1592180810,6633,knqyf263,2024-05-07T10:17:08Z,done [a link],0,0.987381100654602
1592181297,6633,knqyf263,2024-05-07T10:17:32Z,done [a link],0,0.987381100654602
1677279320,7160,knqyf263,2024-07-15T03:15:57Z,"authentication is not only for an air-gapped environment. i think we should leave it [a link] or move it [a link], and reference it in this page.",0,0.9848164916038513
1677319315,7160,knqyf263,2024-07-15T05:15:00Z,"the original document was incorrect. the vulnerability db and java db work the same, and it supports only `docker login` now.",0,0.9656031727790833
1677320300,7160,knqyf263,2024-07-15T05:17:16Z,we no longer need it and can delete it for now. but suggested re-implementing sonatype api. we'll add it back after that.,0,0.9803714156150818
1677320902,7160,knqyf263,2024-07-15T05:18:41Z,"also, users suggested that `--offline` enables all needed flags for air-gapped environments.",0,0.989165723323822
1677791755,7160,itaysk,2024-07-15T13:00:20Z,"i agree, i also thought about the allowlist and private access not belonging to the airgap document, but also didn't want to leave them in a vulnerability specific document since they are shared to misconfig and maybe other things in the future. wdyt about renaming the air-gap document to ""advanced database scenarios""? then it makes more sense why the network requirements, authentication, and offline settings are there. it does sounds similar to the existing ""configuration/db.md"" doc that you linked, but i thought that the entire ""configuration"" section is purely cli flags reference (and i thought it's auto-generated)",0,0.9625495672225952
1677809744,7160,nikpivkin,2024-07-15T13:14:07Z,"why does java db only support authentication via docker login? when an artifact is loaded, [a link] method is called, which loads the image with authentication.",0,0.9846704006195068
1677831545,7160,knqyf263,2024-07-15T13:27:05Z,"yes, it makes more sense, but since we also have checks bundle, advanced ""database"" scenarios might be misleading.",0,0.94915372133255
1677834315,7160,knqyf263,2024-07-15T13:28:47Z,it's my bad. i was using an old laptop today and referring to an old commit.,-1,0.9880247712135315
1677851876,7160,itaysk,2024-07-15T13:40:34Z,"so just to confirm, vuln db, java db, checks db all support the same authentication, and that is the same as trivy's ""private registry"" support. right?",0,0.9877134561538696
1678620740,7160,simar7,2024-07-16T00:58:24Z,formatting needs a fix,0,0.9862242937088013
1678637305,7160,simar7,2024-07-16T01:27:49Z,yes,0,0.9564858078956604
1679558804,7160,nikpivkin,2024-07-16T14:49:35Z,database? it's a page about checks.,0,0.9850499033927917
1680385527,7160,simar7,2024-07-17T04:24:10Z,it is a nit but i like to use `trivy config` instead of `trivy conf` as it is more descriptive.,0,0.962373673915863
1706936119,7160,knqyf263,2024-08-07T12:44:28Z,nit [code block],0,0.9879410862922668
1707097085,7160,knqyf263,2024-08-07T14:18:48Z,"do we call the checks bundle ""database""?",0,0.9883225560188293
1707685518,7160,itaysk,2024-08-07T18:55:29Z,"i have some thoughts about this, but don't want to delay this pr with them so i'll do change it",0,0.8900814056396484
1709224695,7160,knqyf263,2024-08-08T11:00:41Z,"i have an idea about re-structuring this page, but we can do that in another pr.",0,0.9784805774688721
1777890940,7605,simar7,2024-09-27T01:01:36Z,should we also have a debug log to say where the db was downloaded from?,0,0.9882511496543884
1777978632,7605,nikpivkin,2024-09-27T04:01:59Z,it's logged [a link],0,0.9889035820960999
1778452598,7605,DmitriyLewen,2024-09-27T11:10:20Z,looks like we can delete this log since we will show it later: [a link],0,0.9807166457176208
1778461333,7605,DmitriyLewen,2024-09-27T11:18:19Z,do we need this? we do same in initociartifact: [a link] + [a link],0,0.987782895565033
1778463774,7605,DmitriyLewen,2024-09-27T11:20:43Z,i think we can say that we keep order when trying to download the db (as for `--image-src`).,0,0.9893256425857544
1778513642,7605,nikpivkin,2024-09-27T12:06:29Z,"if we already have one artifact initialized with a repository via `withociartifact`, there is no point in looping through repositories.",0,0.9809231758117676
1778521996,7605,nikpivkin,2024-09-27T12:13:56Z,done [a link],0,0.987381100654602
1778522419,7605,nikpivkin,2024-09-27T12:14:19Z,updated [a link],0,0.9835633039474487
1779363608,7605,simar7,2024-09-28T04:45:16Z,"i meant to say log the success of the db. something along the lines of ""successfully download from ... "" as a debug print. but it's just a nit.",0,0.9647780060768127
1779455881,7605,nikpivkin,2024-09-28T09:53:56Z,"got it now, i added [a link]",0,0.9762334227561951
1780378136,7605,DmitriyLewen,2024-09-30T04:18:51Z,maybe i didn't make it clear. you have duplicate code. can we keep `c.artifact != nil` check and `a.download` function in just one place? [a link] [a link] and [a link] [a link],0,0.9751794934272766
1780449016,7605,nikpivkin,2024-09-30T05:17:43Z,"if the artifact already exists (manually created), then we don't need to create it [a link] and we can just download it instead of trying to load it from possible repositories.",0,0.9862468242645264
1780480301,7605,nikpivkin,2024-09-30T06:02:43Z,done [a link],0,0.987381100654602
1780802178,7605,knqyf263,2024-09-30T10:07:23Z,"we should try the next repository only when the error is 429 or 5xx, like [a link]. can we extract status code by using [a link] with [a link]? [a link] may help.",0,0.9848673939704895
1780832555,7605,knqyf263,2024-09-30T10:30:37Z,"all oci artifacts are always initialized now, even if the primary registry works correctly. it means we waste http calls. what if delaying initialization when needed? please let me know if i'm missing something. [code block]",0,0.9812644720077515
1780837076,7605,knqyf263,2024-09-30T10:34:19Z,"`client.artifact` is for testing purposes only. we don't need to expand it to a slice. it means it's okay to return the same instance, but we can change it if we really need it.",0,0.9831957221031189
1780852963,7605,nikpivkin,2024-09-30T10:39:24Z,"artifact initialization does not cause http requests and never returns an error. [a link] if necessary, i can do some refactoring in this pr.",0,0.9874675869941711
1780875479,7605,knqyf263,2024-09-30T10:43:43Z,hmm. we forgot to fix the error handling. i'll open a pr now.,0,0.9798913598060608
1780876963,7605,nikpivkin,2024-09-30T10:44:07Z,"artifact can be passed through the [a link] option, which is public. can anyone use it?",0,0.9883748292922974
1780884481,7605,nikpivkin,2024-09-30T10:48:15Z,"agreed, i think we can move [a link] error handling when downloading an artifact.",0,0.9871453046798706
1780894143,7605,knqyf263,2024-09-30T10:55:06Z,opened [a link],0,0.9873035550117493
1780936922,7605,knqyf263,2024-09-30T11:30:05Z,"we're unsure how the free tier in ecr public works, so we should probably avoid adding ecr for now. instead, we'll document how to use ecr public in another pr.",0,0.9628869891166687
1780969271,7605,knqyf263,2024-09-30T11:48:20Z,merged. [a link],0,0.9878852963447571
1782299725,7605,knqyf263,2024-10-01T08:05:48Z,"yes, anybody can use it, and it's actually used in several places. [a link] [a link]",0,0.9843591451644897
1782586057,7605,knqyf263,2024-10-01T11:17:32Z,i'm curious why it's always set to true. [code block],0,0.963489830493927
1782614600,7605,knqyf263,2024-10-01T11:38:24Z,"nit: to get aligned with `artifact.download`, what if defining `artifacts []*artifact` and `artifacts.download()`? [code block]",0,0.9897514581680298
1782668172,7605,nikpivkin,2024-10-01T12:20:39Z,"that's a typo, [a link].",0,0.9861283302307129
1782668389,7605,nikpivkin,2024-10-01T12:20:49Z,done [a link],0,0.987381100654602
1790070873,7605,beltran-rubo,2024-10-07T11:47:00Z,"the 2nd default repository is wrong, it should be ""public.ecr.aws/aquasecurity/trivy-db:2""",0,0.9092460870742798
1930230615,8294,DmitriyLewen,2025-01-27T09:41:15Z,"it's weird, but my ide complains :grinning_face_with_smiling_eyes: ![a link]",-1,0.9910036325454712
1930242413,8294,DmitriyLewen,2025-01-27T09:49:07Z,can we use? [a link],0,0.9889070987701416
1930246942,8294,DmitriyLewen,2025-01-27T09:52:10Z,i seem to be missing something why are we using an existing image archive (e.g. `vuln-image.tar.gz`)?,0,0.8870009183883667
1930255865,8294,DmitriyLewen,2025-01-27T09:58:01Z,can i add a comment here? because we might forget why we need to calculate size later if sum of layer sizes is already greater than `maximagesize`,0,0.9841745495796204
1930276635,8294,nikpivkin,2025-01-27T10:12:30Z,goland? i think the static analyzer should not show the warning because 4.1*mb is an integer. [a link],0,0.9871568083763123
1930277921,8294,nikpivkin,2025-01-27T10:13:29Z,"in this case, we don't know the size of the entire image.",0,0.9600887298583984
1930280178,8294,nikpivkin,2025-01-27T10:15:03Z,i created image2 as it is convenient for testing because it contains two 2mb layers.,0,0.9868727922439575
1930280746,8294,DmitriyLewen,2025-01-27T10:15:27Z,"yeah, i agree with you. just wanted to share :grinning_face_with_smiling_eyes:",1,0.8810384273529053
1930283571,8294,nikpivkin,2025-01-27T10:17:30Z,"strange that the behavior is different from vscode, i think they use the same lsp.",-1,0.7920229434967041
1930285976,8294,nikpivkin,2025-01-27T10:19:08Z,"sure, add it.",0,0.9776862859725952
1930287468,8294,DmitriyLewen,2025-01-27T10:20:12Z,but we only test 2 cases: - 1st layer size > `maximagesize`. - image size > `maximagesize`. why do we need the 2nd layer? we just don't want to add extra test files (there are too many of them anyway),0,0.9801521897315979
1930290676,8294,DmitriyLewen,2025-01-27T10:22:37Z,maybe we can update this function to use it in both cases? i think it's handy to have errors collected in one place,0,0.9527297019958496
1930297105,8294,nikpivkin,2025-01-27T10:26:55Z,"the layers are processed in parallel and if a small layer is processed first, we will not check the first case.",0,0.9841077327728271
1930313378,8294,DmitriyLewen,2025-01-27T10:38:37Z,"i'm not sure if this makes sense for this test, but okay, let's keep this file.",0,0.9575724005699158
1930319220,8294,nikpivkin,2025-01-27T10:42:53Z,done [a link],0,0.987381100654602
1930417896,8294,knqyf263,2025-01-27T12:02:52Z,"can't we test it as below? as dmitriy said, we want to avoid adding more testing images in a git repository. i regret committing test binaries :pensive_face: we've recently switched to [a link] ([a link]. if we really need a real tar file, we can go for this approach. [code block]",-1,0.9753212928771973
1930419101,8294,knqyf263,2025-01-27T12:03:51Z,2.44kb and 5.12kb may differ. we might want to get the values dynamically or exclude them from `errorcontains` somehow.,0,0.9832384586334229
1930419828,8294,knqyf263,2025-01-27T12:04:27Z,"btw, why is it `kb`, not `kb`?",0,0.9855178594589233
1930482001,8294,nikpivkin,2025-01-27T12:53:11Z,"thanks, i didn't know about the `github.com/google/go-containerregistry/pkg/v1/random` package. fixed [a link]",1,0.7845258712768555
1930484675,8294,nikpivkin,2025-01-27T12:55:10Z,the decimal prefix kilo is written with a small letter [a link],0,0.9846397638320923
1930495174,8294,nikpivkin,2025-01-27T13:03:18Z,done [a link],0,0.987381100654602
1930516863,8294,knqyf263,2025-01-27T13:19:35Z,"i thought [a link] kb in software meant kib (i know it's not strict), but do you know how it's handled in other software (e.g. docker)? the size shown in `docker images` is `mb`, not `mib`? for example, i'm sure docker hub uses `mb` as `mib`. it shows 3.47mb. but the actual size is 3641715. 3641715 / 1024**2 is 3.47. [code block] given this fact, i thought `mb` usually meant `mib` (i'm lazy and sometimes use 1,000 as kib if it doesn't have to be strict).",0,0.9726881980895996
1931627349,8294,DmitriyLewen,2025-01-28T07:00:49Z,i'm a bit confused. we use `totalsize` for the following check: [a link] iiuc we can remove `completedlayers != len(diffids)` and see this error here. parallelism shouldn't be a problem - we'll get this error on the last layer. what am i missing?,-1,0.8282865881919861
1931634508,8294,nikpivkin,2025-01-28T07:09:08Z,should we distinguish that the image is fully loaded or not?,0,0.9841449856758118
1931642298,8294,DmitriyLewen,2025-01-28T07:18:05Z,it seems to be a rare case (when we get error on image size because of last layer). but if you want - you can handle this case. but i think it makes more sense to do it here (so that all errors for uncompressed sizes (layers or image) are in one place),0,0.9728466868400574
1932266908,8294,nikpivkin,2025-01-28T14:25:59Z,agreed. i simplified the size check [a link],0,0.9781566858291626
1933302423,8294,knqyf263,2025-01-29T05:54:53Z,interesting... ``` $ docker images alpine:3.19 repository tag image id created size alpine 3.19 ace17d5d883e 12 months ago 7.73mb $ docker inspect alpine:3.19 | jq '.[].size' 7728534,0,0.5982961058616638
1933303296,8294,knqyf263,2025-01-29T05:56:04Z,docker: decimal prefixes (1000) docker hub: binary prefixes (1024),0,0.9867876768112183
1933309618,8294,knqyf263,2025-01-29T06:04:28Z,"for me, the most significant difference between markdown and mkdocs is that a newline is required before bullet points. [code block] it's broken now. ![a link]",-1,0.6916167140007019
1933486583,8294,knqyf263,2025-01-29T08:54:31Z,"it may be worth documenting. otherwise, users who check the size on docker hub may complain about it.",0,0.832712709903717
1933765018,8294,nikpivkin,2025-01-29T12:07:39Z,btw i found an open issue [a link],0,0.9875990152359009
1933848614,8294,nikpivkin,2025-01-29T13:08:01Z,docker hub: binary prefixes (1024) doesn't the docker cli display the actual binary size but uses decimal prefixes like docker hub?,0,0.9892318844795227
1933867173,8294,nikpivkin,2025-01-29T13:19:37Z,done [a link],0,0.987381100654602
1933867298,8294,nikpivkin,2025-01-29T13:19:42Z,fixed [a link],0,0.9879513382911682
1934089774,8294,nikpivkin,2025-01-29T15:21:15Z,added [a link],0,0.9870722889900208
613625422,935,simar7,2021-04-14T22:24:50Z,"i'm not familiar with this, could you explain its use and purpose?",-1,0.5728846192359924
613626870,935,simar7,2021-04-14T22:27:59Z,[code block] see [a link] for all the possible severity levels.,0,0.985607385635376
613627593,935,simar7,2021-04-14T22:29:42Z,inline [code block],0,0.9879240989685059
613627750,935,simar7,2021-04-14T22:30:05Z,inline [code block],0,0.9879240989685059
613628177,935,simar7,2021-04-14T22:31:08Z,"instead of using a local variable, you just do the return within each of the case statements.",0,0.9880898594856262
613629141,935,eddynaka,2021-04-14T22:33:44Z,"it avoids path repetition between the physical paths. for example, c:\folder1\folder2\folder3\filename.txt ant this c:\folder1\folder2\folder3 keeps repeating. with that, we can create a variable and re-use it.",0,0.9870173335075378
613633264,935,simar7,2021-04-14T22:44:11Z,"just taking this to illustrate an example, is this change sufficient enough for the github security tab to display the vulnerability information in the web ui? i was just trying to run it through the online validator and noticed this: i tried with a different image: `knqyf263/vuln-image`. you can see this by running: `trivy -q image -format=template -t=/sarif.tpl knqyf263/vuln-image `",0,0.9612820744514465
613639778,935,simar7,2021-04-14T23:01:16Z,should this be a valid uri? [a link],0,0.9891340136528015
613795901,935,yongyan-gh,2021-04-15T06:41:45Z,"since the region information is not available so far, we removed the region properties. what do you think about this github rule warning?",0,0.9847398400306702
613802133,935,yongyan-gh,2021-04-15T06:53:37Z,"this is value from .target field, in reality is it possible the value of .target will have this kind of suffix other than path? if yes we may need a logic to handle this case? i also tried to analyze image knqyf263/vuln-image, and from the result i see some of path are in format of file path, not uri path, e.g. ""rust-app\cargo.lock"". the backslash needs to be escaped to `""\\""` so it won't break the json format. we may need convert this path to uri format? e.g."" rust-app/cargo.lock"" cc",0,0.984418511390686
613806347,935,yongyan-gh,2021-04-15T07:01:07Z,fixed,0,0.975196123123169
613806447,935,yongyan-gh,2021-04-15T07:01:20Z,fixed,0,0.975196123123169
613806707,935,yongyan-gh,2021-04-15T07:01:54Z,fixed,0,0.975196123123169
613807530,935,yongyan-gh,2021-04-15T07:03:36Z,fixed,0,0.975196123123169
613807632,935,yongyan-gh,2021-04-15T07:03:47Z,done,0,0.9764507412910461
613937125,935,eddynaka,2021-04-15T10:05:40Z,"we should ignore this. it's better to have an absent region than having wrong information in it (hardcoding to startline=1, for example).",0,0.8629303574562073
613938454,935,eddynaka,2021-04-15T10:07:38Z,"-gh, i think we would just need to escape it. that would work. we can't have the `(alpine version)` in the uri. generate with backslash and try to validate in the online validator",0,0.9106987118721008
614283120,935,yongyan-gh,2021-04-15T18:01:25Z,"yes i compiled local version escaped the back slash, it caused below warning in the validator: sarif1002: runs[a link].",0,0.989598274230957
614286897,935,simar7,2021-04-15T18:07:49Z,"i agree with you but i was curious if we don't have this information, will it still show the vulnerability in the github security tab? it's one of the reasons we added startline=1 as at the time github security tab had a requirement on this to be able to show the vulnerability information.",0,0.9580999612808228
614289053,935,eddynaka,2021-04-15T18:11:25Z,got it. i asked some github guys. will try to update asap.,0,0.9007518291473389
614289644,935,eddynaka,2021-04-15T18:12:25Z,got it...,0,0.8602961301803589
614364071,935,eddynaka,2021-04-15T20:16:46Z,"we can remove. github adds it when we dont provide region. but, its something we should re-add later to prevent some information that isn't right.",0,0.9296743869781494
614497077,935,yongyan-gh,2021-04-16T01:32:10Z,", we found some results location uri path contains some extra strings in the end, e.g. ""testdata/fixtures/alpine-310.tar.gz (alpine 3.10.2)"". do you know if this is expected or its just test data? any suggestion how to extract file path from .target field? maybe split by space/bracket? also we may need to convert the path to uri path if its file path e.g. ""node-app\package-lock.json"" need to be ""node-app/package-lock.json"", simply replace ""\"" with ""/"". pls lets know if any concern.",0,0.9867515563964844
615083869,935,simar7,2021-04-16T19:40:10Z,"trivy also supports scanning of tar files individually. in that case it will look very similar to this. let me try to understand it better as it's not clear to me. are you saying how to get: `alpine-310.tar.gz` from the .target which is `testdata/fixtures/alpine-310.tar.gz`? if so, you could do a string split as you described. depending on what's being scanned, `.target` will vary. in the case of a programming library vulnerabilities, it will be a lock file (e.g. node-app/package-lock.json, etc.). in the case of os package vulnerability, it will be the distro:version (e.g. alpine:3.11) and finally in the case of a tarball scan, it will what you described above. why is this needed? backslash is a windows only file path convention, correct? are you suggesting to replace all ""\"" with ""/"" in the final output?",0,0.9767712354660034
615089011,935,simar7,2021-04-16T19:50:42Z,thanks for confirming. i just tested it out and it seems to work.,1,0.8947145938873291
615090068,935,eddynaka,2021-04-16T19:53:09Z,", the issue is not windows or linux. the issue here is that the field uri is actually an uri. with that, it must use ""/"". so, one alternative is to replace all \ for /.",0,0.9704883098602295
615092452,935,simar7,2021-04-16T19:58:12Z,"right, that works for me.",0,0.9265602827072144
615141920,935,simar7,2021-04-16T21:58:46Z,-gh let me know if you have any further questions. once we resolve this i think it's good to merge.,1,0.9142866134643555
615166167,935,yongyan-gh,2021-04-16T23:27:45Z,thanks for clarification. will add fix for location uri conversion soon.,1,0.8634127974510193
794415292,1638,AndreyLevchenko,2022-01-28T11:17:50Z,why `amd` is missed here,0,0.9781904220581055
794425570,1638,AndreyLevchenko,2022-01-28T11:30:39Z,though i see same in release files,0,0.9866484999656677
803690553,1638,knqyf263,2022-02-10T13:47:17Z,where is this used?,0,0.9846693873405457
903717207,1638,knqyf263,2022-06-22T13:04:36Z,"it's been a while, so i forgot the reason why we can't use multiple paths. could you explain it again? [a link]",0,0.9076118469238281
904619764,1638,DmitriyLewen,2022-06-23T06:17:14Z,"all files will be saved in 1 archive when we use multiple paths for one step `actions/upload-artifact`. in this case, we will save 4 trivy bins in 1 archive.",0,0.9881038069725037
904637206,1638,knqyf263,2022-06-23T06:43:51Z,"oh, yes, i just remember it. thanks for explaining it again!",1,0.9705880284309387
908105603,1638,knqyf263,2022-06-28T06:57:17Z,nit: goreleaser_config,0,0.9876012802124023
908105870,1638,knqyf263,2022-06-28T06:57:37Z,ditto,0,0.8428916931152344
908106970,1638,knqyf263,2022-06-28T06:58:54Z,we can use newer ubuntu as this workflow doesn't use createrepo.,0,0.988770604133606
908111475,1638,knqyf263,2022-06-28T07:04:28Z,"it restores modules from cache, right? looks like we don't cache anywhere. what if we remove it?",0,0.9579416513442993
908113215,1638,knqyf263,2022-06-28T07:06:20Z,"for consistency, name should be capitalized, build binaries",0,0.9867783784866333
908113578,1638,knqyf263,2022-06-28T07:06:48Z,ditto. and no hyphen.,0,0.9430072903633118
908114322,1638,knqyf263,2022-06-28T07:07:47Z,ditto,0,0.8428916931152344
908115183,1638,knqyf263,2022-06-28T07:08:58Z,deploy rpm/deb packages,0,0.98678058385849
908116088,1638,knqyf263,2022-06-28T07:10:06Z,"you mean ""after""?",0,0.9700245261192322
908120517,1638,knqyf263,2022-06-28T07:14:50Z,"did this workflow work? i thought we needed to checkout trivy. otherwise, ci/deploy-rpm.sh doesn't exist.",0,0.9511704444885254
908208499,1638,DmitriyLewen,2022-06-28T08:44:03Z,if i understand correctly: we either restore cache (if cache for this key was found) or save go modules to cache (if cache is not found). cache is stored for 7 days ([a link] i think we can use this action to avoid loading go modules every run(if `go.sum` file hasn't been changed).,0,0.9879361987113953
908237932,1638,DmitriyLewen,2022-06-28T09:11:35Z,"yes, my mistake, thanks.",-1,0.8710057735443115
908238126,1638,DmitriyLewen,2022-06-28T09:11:47Z,done,0,0.9764507412910461
908238218,1638,DmitriyLewen,2022-06-28T09:11:52Z,done,0,0.9764507412910461
908238303,1638,DmitriyLewen,2022-06-28T09:11:58Z,done,0,0.9764507412910461
908238440,1638,DmitriyLewen,2022-06-28T09:12:07Z,done,0,0.9764507412910461
908239940,1638,DmitriyLewen,2022-06-28T09:13:40Z,done,0,0.9764507412910461
908240115,1638,DmitriyLewen,2022-06-28T09:13:49Z,done,0,0.9764507412910461
908240432,1638,DmitriyLewen,2022-06-28T09:14:00Z,done,0,0.9764507412910461
908273960,1638,DmitriyLewen,2022-06-28T09:44:14Z,i missed that. thanks a lot! checkout has been added.,1,0.9922217726707458
908297134,1638,knqyf263,2022-06-28T10:07:51Z,but we don't have modules here as it will be downloaded by goreleaser. looks like we always cache an empty dir.,0,0.9849551320075989
908298164,1638,knqyf263,2022-06-28T10:08:59Z,could you test it in your forked trivy-repo? we may miss something else.,0,0.9689791798591614
908299995,1638,DmitriyLewen,2022-06-28T10:10:55Z,hm... i didn't think about goreleaser. i will remove it.,-1,0.5118158459663391
908304433,1638,DmitriyLewen,2022-06-28T10:15:48Z,"i already checked this: [a link] new rpm file has been added: [a link] i forgot to add `gpg_key`. but `deploy-rpm.sh` worked correctly, so `deploy-deb.sh` will also work correctly. also successfully running canary build: [a link]",0,0.9639047980308533
908415438,1638,knqyf263,2022-06-28T12:25:18Z,could you import a dummy gpg key you generate and make sure it works in your fork?,0,0.9878514409065247
909677670,1638,DmitriyLewen,2022-06-29T14:03:42Z,i checked. it works correctly : [a link],0,0.9703238606452942
1342297113,5285,DmitriyLewen,2023-10-02T05:45:35Z,i think we can make this function as separate function. also we can return only dependencies and slice of members: [code block],0,0.9878695607185364
1342297916,5285,DmitriyLewen,2023-10-02T05:47:59Z,are there cases where the found `members` contain other `members`? i mean `pkg1 => pkg2=> pkg3 etc` if yes => we need to use a queue or recursion to check all nested elements.,0,0.9883261322975159
1342298155,5285,DmitriyLewen,2023-10-02T05:48:40Z,can you add comment with link to docs about `members`?,0,0.9885746836662292
1342299044,5285,DmitriyLewen,2023-10-02T05:51:10Z,"can you check case where path from ""members"" does not exist? does rust return an error in this case? or do we need to check this path for existence?",0,0.9883411526679993
1347201831,5285,anfedotoff,2023-10-05T10:31:37Z,"i made a test: [code block] calling cargo build from the root workspace cause such error: [code block] so, i think workspace could be the one and only:).",1,0.8676599860191345
1347310952,5285,anfedotoff,2023-10-05T12:01:07Z,"i think, it's better to check or not to check;). btw, i'm not so familiar with go. what is the right way to check file for existence? i found this way: [code block] but i suppose, i should use `fs.fs` for that?",1,0.9266277551651001
1348252896,5285,DmitriyLewen,2023-10-06T05:17:14Z,great! thanks for this investigation. it would be nice if you could add comment that cargo doesn't support nested members.,1,0.9926202297210693
1348257827,5285,DmitriyLewen,2023-10-06T05:27:13Z,you already have the main cargo.toml file checked: [a link] you can use same logic.,0,0.9792389273643494
1369620754,5285,DmitriyLewen,2023-10-24T04:34:45Z,"`errnotexist` error can't exist here, because you are handling it in `tomldependities`. or did i miss something?",0,0.9378342032432556
1369631387,5285,DmitriyLewen,2023-10-24T05:00:30Z,this comment for `dependencies`: [a link],0,0.9877601265907288
1369635414,5285,DmitriyLewen,2023-10-24T05:07:45Z,we've already shown log message (`debug` is enough because `cargo.toml` is helper file for `cargo.lock`). [code block],0,0.9876453280448914
1384816873,5285,anfedotoff,2023-11-07T12:09:15Z,"yes, exactly...",0,0.9224523305892944
1385145087,5285,anfedotoff,2023-11-07T15:48:04Z,hm... tests are failing without this hack. trying to find a better solution...,-1,0.98360276222229
1385184119,5285,anfedotoff,2023-11-07T16:13:28Z,"i have question: do we need this check at all? [a link] i think, we will log this here: [a link]",0,0.9778177738189697
1386083721,5285,DmitriyLewen,2023-11-08T06:47:33Z,"if one of members doesn't exist, we continue to check the remaining members. without this check you will stop parsing remaining toml files. correct me, if i am wrong.",0,0.7180941104888916
1387944046,5285,anfedotoff,2023-11-09T12:39:00Z,"yes, you are right. but i think we should do the following: 1. stop if it is not possible to parse the root (workspace) cargo.toml 2. continue if it is not possible to parse member cargo.toml i pushed some changes. warnings in logs lgtm (i malformed some member field): [code block] p.s. sorry, for being so slow. i'm changing work, trying to find some time for open source:).",-1,0.9018306732177734
1388911978,5285,DmitriyLewen,2023-11-10T05:11:28Z,you can't continue parsing because in this case you don't have any members to parse :grinning_face_with_smiling_eyes: but you are right. i like this logic.,1,0.9769376516342163
1388914662,5285,DmitriyLewen,2023-11-10T05:16:41Z,but i'm not sure if we should show warning if the root `cargo.toml` file doesn't exist. this can confuse users if they only scan the `cargo.lock` file. i think we need to revert previous logic for root `cargo.toml` file (with debug message).,0,0.8728459477424622
1388944854,5285,DmitriyLewen,2023-11-10T05:59:20Z,"i don't have a lot of exp with cargo, can you help me understand: i have played with `cargo tree` command. and it looks like `cargo` builds separate tree for each members: [code block] perhaps we need to add members as libs or mark all dependencies from members as indirect?",0,0.9696906805038452
1390935453,5285,anfedotoff,2023-11-13T10:38:32Z,"according to [a link]: [code block] so, workspace is not a package, it couldn't be a dependency. for example casr workspace has to crates (packages): casr: [a link] libcasr: [a link] they are considered as separate crates. the same picture i see for libafl [a link]. i think, the way we process members is right, they are direct dependencies",0,0.9762356281280518
1392022614,5285,DmitriyLewen,2023-11-14T06:00:43Z,"okay, thanks for the explanation!",1,0.9212554693222046
1467477719,5285,knqyf263,2024-01-26T10:34:48Z,shouldn't it be false (meaning a direct dependency)? it is defined in cargo.toml.,0,0.977445125579834
1467486166,5285,knqyf263,2024-01-26T10:41:11Z,"iiuc, `workspace.dependencies` is overridden by mistake here and then loses the version constraint.",0,0.9863845705986023
1467568535,5285,DmitriyLewen,2024-01-26T11:52:21Z,you are right. thanks! fixed in [a link],1,0.9853274822235107
1467568552,5285,DmitriyLewen,2024-01-26T11:52:22Z,fixed.,0,0.9810503125190735
1969749660,8254,knqyf263,2025-02-25T13:07:33Z,it will probably not be rendered correctly. can you please test it with `mage docs:serve`?,0,0.9786186814308167
1969754532,8254,knqyf263,2025-02-25T13:10:51Z,"did you take the name somewhere? if not, we would go for `vex` [a link] [code block]",0,0.9882833957672119
1969793632,8254,knqyf263,2025-02-25T13:33:32Z,"since unmarshalreferencetype doesn't return an error, most references have empty types. is it intended?",0,0.9842446446418762
1969802707,8254,knqyf263,2025-02-25T13:38:54Z,nit [code block],0,0.9879410862922668
1969809179,8254,knqyf263,2025-02-25T13:42:31Z,do we need to check if `v` is nil?,0,0.9855007529258728
1969811319,8254,knqyf263,2025-02-25T13:43:42Z,do we need to export this function and some other functions?,0,0.9848151206970215
1969815234,8254,knqyf263,2025-02-25T13:46:03Z,is it possible `v` is nil?,0,0.9861628413200378
1970032386,8254,RingoDev,2025-02-25T15:36:26Z,fixed: ![a link],0,0.6783470511436462
1970041022,8254,RingoDev,2025-02-25T15:41:07Z,refactored,0,0.9850403070449829
1970069723,8254,RingoDev,2025-02-25T15:55:11Z,"good catch, that is very unintuitive. adapted `unmarshalreferencetype` to return an `unsupportedexternalreference` error similar to the `unsupportedtype` error that already existed. filtering out external references that returned error - only ""exploitability-statement"" external ref types should now be added to the bom",1,0.6948791742324829
1970088354,8254,RingoDev,2025-02-25T16:04:40Z,was a weird decision on my part to not return an error from the `decodevex` function. fixed,-1,0.9847753643989563
1970105261,8254,RingoDev,2025-02-25T16:13:48Z,made them private by lowercasing,0,0.9875955581665039
1970119914,8254,RingoDev,2025-02-25T16:21:50Z,"actually not, but same holds true for the `typeoci` case above where i mirrored this of. removed check for both.",0,0.9880064129829407
1970128707,8254,RingoDev,2025-02-25T16:26:31Z,"nvm rolled back change for `newoci`. there it makes sense to explicitly check for `nil`, because it is not able to return an empty set like the typerepository and the typesbomreference",0,0.9888772368431091
1971051256,8254,knqyf263,2025-02-26T07:10:25Z,"i don't think we need to define `errunsupportedexternalreference`.since `errunsupportedtype` is handled by the upstream caller, other types of errors may also be returned, so `errunsupportedtype` was necessary to ensure accurate identification of the error type. however, in this case, that is not necessary, so i think it is sufficient to simply return an error and continue if it is not nil. it can be defined at that time if it becomes necessary in the future. [code block]",0,0.9842496514320374
1971053046,8254,knqyf263,2025-02-26T07:12:15Z,nitpick [code block],0,0.9881828427314758
1971053752,8254,knqyf263,2025-02-26T07:13:00Z,nit [code block],0,0.9879410862922668
1971056754,8254,knqyf263,2025-02-26T07:15:54Z,nit: we basically use the snake case for log parameters. [code block],0,0.9876584410667419
1971056905,8254,knqyf263,2025-02-26T07:16:01Z,ditto,0,0.8428916931152344
1971062472,8254,knqyf263,2025-02-26T07:21:14Z,"if no valid vex documents are found, `v` will be nil, and in that case, it seems acceptable to also set sbomreferenceset to nil and skip it. i wasn't sure whether a nil check was needed for the return value of `newsbomreferenceset()`, but after making this change, it is necessary. [code block]",0,0.985511064529419
1971073552,8254,knqyf263,2025-02-26T07:31:42Z,"scans should ideally produce consistent results even when run multiple times. in this case, if the server hosting the vex documents is down or if network instability causes a download failure, vulnerabilities that should normally be excluded might be detected. since users currently expect vex to be applied by explicitly specifying `--vex sbom-ref`, it would be better to return an error to notify users that the expectation is unmet. while it might be worth fine-tuning certain aspects, such as allowing authentication failures, as an experimental feature, it’s acceptable to implement it such that an error is returned if vex cannot be retrieved.",0,0.9744027853012085
1971074634,8254,knqyf263,2025-02-26T07:32:42Z,"now, we should handle nil :) [code block]",1,0.9481891989707947
1971381170,8254,RingoDev,2025-02-26T10:56:53Z,"my thinking here was to make it ""easy"" to adopt the flag, without worrying about external factors breaking cli runs. but as you said, as an experimental feature that might make sense to be more verbose about. will propagate such errors",0,0.924229085445404
1971400020,8254,RingoDev,2025-02-26T11:10:40Z,done,0,0.9764507412910461
1971401214,8254,RingoDev,2025-02-26T11:11:35Z,is that a general suggestion? i saw that pattern in multiple parts of the code i believe. nevertheless changed it with your suggestion,0,0.9765666723251343
1971401461,8254,RingoDev,2025-02-26T11:11:46Z,done,0,0.9764507412910461
1971401835,8254,RingoDev,2025-02-26T11:12:05Z,done,0,0.9764507412910461
1971423885,8254,RingoDev,2025-02-26T11:29:48Z,this now raises a question for me. if this is an experimental feature and somebody explicitly scans an sbom with `--vex sbom-ref` shouldn't trivy throw an error if it finds no valid external references in the scanned sbom? similar to how it is now throwing an error if e.g. a server responds with 404.,0,0.8441782593727112
1972764312,8254,knqyf263,2025-02-27T03:19:16Z,"good question. the `--vex sbom-ref` flag tells trivy that it should use any vex reference found within the sbom. therefore, enabling it even if it's not yet clear whether external vex references exist in the sbom is expected behavior. conversely, it would be unexpected if external references were silently ignored even when present. similarly, the `-vex oci` flag is designed to use any available vex attestations. if no attestation is found, it [a link]; however, if attestation is found but contains issues, an error will be returned. that said, as you mentioned, if it is essential that external references are reliably loaded, returning an error might be more appropriate. this is something we can reconsider based on future community feedback. at the very least, it would be advisable to display a log message that no vex references are found for now.",1,0.7252910137176514
1169469499,4047,DmitriyLewen,2023-04-18T04:14:48Z,`types2` is a bit confusing. we usually use `ftypes` for `fanal/types`. [code block],0,0.5545316934585571
1169489268,4047,DmitriyLewen,2023-04-18T04:59:31Z,i have idea for setting priority. what if we will use functions for options. something like that: [code block],0,0.9795190691947937
1169953631,4047,pmengelbert,2023-04-18T12:22:39Z,thanks for the suggestions! i implemented them with some slight changes. please let me know what you think and hit resolve if no further comments,1,0.9855689406394958
1172095155,4047,DmitriyLewen,2023-04-20T05:26:08Z,we need this option only for `image` mode. you can disable flag for other modes. [a link],0,0.9881250858306885
1172101226,4047,DmitriyLewen,2023-04-20T05:37:44Z,wdyt? [code block],0,0.988066554069519
1172103270,4047,DmitriyLewen,2023-04-20T05:41:01Z,it is integration test. don't need to remove this.,0,0.9768193364143372
1172105334,4047,DmitriyLewen,2023-04-20T05:44:33Z,we can set multiple runtimes [code block],0,0.9880744814872742
1172109467,4047,DmitriyLewen,2023-04-20T05:52:01Z,"if i understand correctly - if you return this, then broken test will be fixed.",0,0.9696808457374573
1172110917,4047,DmitriyLewen,2023-04-20T05:54:33Z,nice work!,1,0.9868829846382141
1172568859,4047,pmengelbert,2023-04-20T13:12:26Z,"i moved this flag over to the `image` group, and regenerated the docs.",0,0.988491415977478
1172571643,4047,pmengelbert,2023-04-20T13:14:22Z,"both of these are taken care of. the format `(default <...>)` in the cli help is unalterable. to keep docs consistent with the cli help, i have the following: [code block]",0,0.9863964319229126
1172571844,4047,pmengelbert,2023-04-20T13:14:31Z,done,0,0.9764507412910461
1172572527,4047,pmengelbert,2023-04-20T13:15:04Z,"i restored this, but the same test is failing when i run `mage test:unit`. actually, it's failing for me (locally) even on the `main` branch.",0,0.85892653465271
1173283994,4047,DmitriyLewen,2023-04-21T04:09:11Z,it make sense. good solution.,1,0.9746147990226746
1173287736,4047,DmitriyLewen,2023-04-21T04:17:33Z,it should help with broken test [code block],0,0.9744011759757996
1176185339,4047,knqyf263,2023-04-25T08:30:51Z,it should be defined under imageoptions. [a link],0,0.9863746166229248
1176185511,4047,knqyf263,2023-04-25T08:30:59Z,it should be defined under imageoptions. [a link],0,0.9863746166229248
1176192158,4047,knqyf263,2023-04-25T08:36:33Z,i think it can be done in newcontainerimage. is there any benefit in exporting this function?,0,0.9870332479476929
1176625369,4047,pmengelbert,2023-04-25T14:43:25Z,"unit tests are passing now, thanks!",1,0.9687510132789612
1176627258,4047,pmengelbert,2023-04-25T14:44:45Z,"i moved this to `newcontainerimage`, and made the function private. the function was also renamed",0,0.9886713027954102
1176627394,4047,pmengelbert,2023-04-25T14:44:50Z,done,0,0.9764507412910461
1176627527,4047,pmengelbert,2023-04-25T14:44:55Z,done,0,0.9764507412910461
1718139700,7340,knqyf263,2024-08-15T08:50:25Z,"we don't include file paths in purl anymore. if it remains somewhere, it should be deleted.",0,0.97703617811203
1718280189,7340,afdesk,2024-08-15T11:22:48Z,"ok, i'm removing it",0,0.9770249128341675
1724303576,7340,knqyf263,2024-08-21T03:10:06Z,"can we re-use the existing json, `fluentd-multiple-lockfiles-cyclonedx.json`? you can change this file to use uuid in bom-ref.",0,0.9891401529312134
1726337578,7340,afdesk,2024-08-22T04:53:57Z,"the testcase is updated `fluentd-multiple-lockfiles-cyclonedx.json`. i wanted to use `fluentd-multiple-lockfiles.cdx.json.golden` also, but this cdx result is a large, because it's result for `fluentd-multiple-lockfiles.tar.gz`. `fluentd-multiple-lockfiles-cyclonedx.json` is shorter. so i've created a new golden file.",0,0.9168711304664612
1728471863,7340,DmitriyLewen,2024-08-23T07:00:09Z,input and output bomrefs for os are not equial: [a link],0,0.9832261204719543
1738268849,7340,DmitriyLewen,2024-08-30T09:09:45Z,looks like we can remove this,0,0.9856141209602356
1738277102,7340,DmitriyLewen,2024-08-30T09:14:55Z,iirc we correctly store bomrefs for the `root` component and packages. do we need this check for all types? maybe we can do this check only for `application` and `operatingsystem` types?,0,0.9889509081840515
1738368938,7340,afdesk,2024-08-30T10:13:46Z,"it seems that no, we have to allocate memory",0,0.9688702821731567
1738387834,7340,afdesk,2024-08-30T10:30:38Z,done,0,0.9764507412910461
1738411842,7340,afdesk,2024-08-30T10:51:01Z,updated,0,0.9681491851806641
1760537861,7340,DmitriyLewen,2024-09-16T05:07:57Z,it doesn't work for spdx. i thought about using spdx-id as bom-ref (see [a link],0,0.9691047072410583
1760542383,7340,DmitriyLewen,2024-09-16T05:15:27Z,it looks like we only use fakeuuid for `serialnumber`: [a link] this might be confusing (that we don't overwrite other uuid's). maybe we just don't check `serialnumber`? wdyt?,0,0.9474464058876038
1760544255,7340,DmitriyLewen,2024-09-16T05:18:43Z,nit: `addvulnerability` and `addvulnerabilities` use slightly different logic: - addvulnerability adds vulnerability to slice of existing vulnerabilities. - addvulnerabilities preserves vulnerabilities if component doesn't contain vulnerabilities. this behavior is more similar to `setvulnerabilities`.,0,0.9791743159294128
1760553931,7340,DmitriyLewen,2024-09-16T05:35:18Z,also i realized that there might be issues with non-trivy cyclonedx reports: `bom-ref` is an optional field - [a link] so there might be a case where `bom-ref` doesn't exist - so we won't add vulnerabilities for these components.,0,0.9839954972267151
1760567568,7340,knqyf263,2024-09-16T05:56:20Z,agree. fixed in [a link],0,0.9818634986877441
1760571481,7340,knqyf263,2024-09-16T06:00:39Z,"it's interesting. i was not aware of that. however, `vulnerabilities.affects.ref` must be bom-ref. do you think we should generate bom-refs in this case? [a link]",1,0.6761167645454407
1760573910,7340,knqyf263,2024-09-16T06:03:56Z,"hmm. i didn't think spdx supports vulnerabilities, but i just remember we added support. i'll think about it. [a link]",0,0.9752428531646729
1760587277,7340,DmitriyLewen,2024-09-16T06:20:35Z,this is a weird case. i still don't understand why `bom-ref` is not a required field. looks like we need to separate the possible cases: - sbom result without vulnerabilities - `vuln` scanner is disabled - we can skip adding bom-ref to preserve the scanned sbom file as much as possible. - trivy found no vulnerabilities - i'm not sure what we should do. i'm more inclined to think that we still need to add bom-refs (use the same logic when `vuln` scanner is enabled) - sbom result with vulnerabilities - `vulnerabilities.affects.ref` is a required field => we need to populate this field => we need to use the same `bom-ref` for the linked component.,-1,0.9861121773719788
1760594478,7340,knqyf263,2024-09-16T06:29:07Z,"yes, i agree bom-ref should be required. to keep things simple, imo, it is better to generate a bom-ref if it's missing in cyclonedx that trivy is scanning.",0,0.9422594308853149
1760598184,7340,DmitriyLewen,2024-09-16T06:33:17Z,since i don't have statistics on how often cyclonedx files without bom-refs are used - it's hard for me to make a choice. i'm not against your decision. let's do it this way and get feedback from users.,-1,0.7102254629135132
1760682671,7340,knqyf263,2024-09-16T07:49:26Z,"i wanted to reuse the sbom of the input as much as possible, but i found that my implementation did not work well when using `--pkg-relationships` or `--pkg-types` with `trivy sbom`.",0,0.8912324905395508
1764836395,7340,knqyf263,2024-09-18T10:48:23Z,the serial number is generated by uuid. i think it's better to confirm it is generated as expected rather than ignoring it.,0,0.9852184653282166
1480971294,6072,DmitriyLewen,2024-02-07T06:52:03Z,let's stay `vuln` scanner as default for sbom. [code block],0,0.9892710447311401
1480971622,6072,DmitriyLewen,2024-02-07T06:52:31Z,use `mage docs:generate` to update docs.,0,0.9878601431846619
1493833622,6072,bedla,2024-02-18T19:54:41Z,this change is here because of `\` and `/` differences between linux and windows filesystems. otherwise tests were failing because of wrong path generated. do you think that its change is ok?,0,0.8876405358314514
1494002905,6072,DmitriyLewen,2024-02-19T04:47:57Z,version `1.5` is currently latest.,0,0.984752357006073
1494004402,6072,DmitriyLewen,2024-02-19T04:49:45Z,we use sbom files generated with trivy for testdata.,0,0.9885537624359131
1494008510,6072,DmitriyLewen,2024-02-19T04:54:31Z,hmm... this pr doesn't change related code. what test failed?,0,0.7433666586875916
1494011317,6072,DmitriyLewen,2024-02-19T05:00:26Z,mistake?,-1,0.7929201126098633
1494011899,6072,DmitriyLewen,2024-02-19T05:01:45Z,"it should be `cyclonedx`, right? [code block]",0,0.988767683506012
1494944304,6072,bedla,2024-02-19T19:14:00Z,"hmm, interesting i am not aware of it ... let me check and fix it.",0,0.6839906573295593
1494952606,6072,bedla,2024-02-19T19:27:55Z,"test i am udpating `sbom_test.go` is failing without that change, because of windows filesystem.",0,0.9103869199752808
1495224827,6072,DmitriyLewen,2024-02-20T04:17:25Z,we run `integration` tests only for linux system - [a link],0,0.9882619976997375
1496840483,6072,DmitriyLewen,2024-02-21T03:23:17Z,i think there is no need for so many dependencies for this test. 3-4 will be enough,0,0.9579949378967285
1519400651,6072,DmitriyLewen,2024-03-11T09:33:58Z,looks like you added this by accident,0,0.9802377223968506
1519401844,6072,DmitriyLewen,2024-03-11T09:34:41Z,just reminding you about this,0,0.9296250343322754
1519426315,6072,bedla,2024-03-11T09:48:19Z,i will remove it ... i use goland and probably it was added by it / i do not know which action fired it.,0,0.5581956505775452
1517222192,6275,knqyf263,2024-03-08T06:36:23Z,"the ""contribution"" section is more generic, like how to open prs. this specific documentation should be located under ""compliance"" or something similar. [a link]",0,0.9835333228111267
1546241927,6275,itaysk,2024-04-01T11:41:34Z,"maybe instead of this, we ask the submitter to refer to the spec definition in the pr description, and we can decide if it's good for us or not when reviewing",0,0.9710988402366638
1546254900,6275,itaysk,2024-04-01T12:02:52Z,"it's a good idea to define a naming convention. ""provider-resource"" not sure this is the best terminology, also very cloud specific (and the compliance feature is not). i think in this case the entire ""aws-eks"" is the subject and there's no need to specify it's components in the generic template. another example there will be cis specs for specific k8s flavor (like open shift), which this needs to appear in the name but i don't think in the template. so i would suggest to simplify the template as `subject-spec.yaml` which means: specify the subject of the compliance (what are we evaluating?). if it's a cloud service or another example of a subcomponent, include the parent too, for example `aws-eks`. if the spec is specific to a version, optionally include it after the subject, e.g `k8s-1.21`. spec is a short name for the compliance framework that people can identify, e.g `cis`. if the spec is versioned, include the version too `cis-1.1`. wdyt?",0,0.5254420638084412
1546257421,6275,itaysk,2024-04-01T12:06:40Z,"imo there's too much duplication with the general compliance documentation, this should be about how to upstream a compliance, not the complete guide to write a compliance.",0,0.7636158466339111
1546259247,6275,itaysk,2024-04-01T12:08:49Z,compliance are not specific to k8s. fine to include an example just generalize the language please,0,0.9247087240219116
1546260902,6275,itaysk,2024-04-01T12:10:32Z,there's more to say about vulnerability checks and node checks,0,0.9851586222648621
1548022484,6275,AnaisUrlichs,2024-04-02T14:38:03Z,but then they would have already put the work into creating the compliance spec and we might potentially tell them we don't want it in trivy?,0,0.9752396941184998
1548032842,6275,AnaisUrlichs,2024-04-02T14:44:17Z,"what do you mean with this sentence: ""provider-resource-spectype-version.yaml"" the reasoning here was is that we call it provider and resource/service in other parts of the source code and docs the spec type is specific to a benchmark version e.g. cis, i don't think it makes much sense to include the k8s version as that won't tell people more about the compliance scan and in some cases cis specs correspond to different k8s versions -keinan thoughts? recent cis specs for reference",0,0.950171709060669
1548035264,6275,AnaisUrlichs,2024-04-02T14:44:59Z,does this relate to line 19 or to the minimum spec structure?,0,0.9844713807106018
1548036605,6275,AnaisUrlichs,2024-04-02T14:45:23Z,"ah yes, of course",0,0.9017019271850586
1548072069,6275,AnaisUrlichs,2024-04-02T15:03:53Z,i have moved some to the normal compliance documentation but i am thinking about the following instead: - divide the compliance docs into the following two separate sections in the table of content: built-in compliance and custom compliance. the custom compliance would then also detail how to contribute the custom compliance check to trivy,0,0.970887303352356
1548072723,6275,AnaisUrlichs,2024-04-02T15:04:20Z,-keinan i need your help here,0,0.7485160231590271
1551318753,6275,itaysk,2024-04-04T09:26:44Z,"for example, that opehshift needs to appear in the file name, but doesn't have to have a placeholder in the naming convention template. we can ignore this sentence :) i think this is true only to cloud. for example, i wrote a k8s compliance (pss) and didn't have to know about service/provider in trivy and didn't use it in the name ok, makes sense. but just to clarify, this isn't what text you quoted says ""include the parent too, for example aws-eks""",1,0.9873027801513672
1551321288,6275,itaysk,2024-04-04T09:28:33Z,minimum spec structure (and what follows),0,0.9852043390274048
1551324032,6275,itaysk,2024-04-04T09:30:23Z,not sure i understand how your suggestion is different than existing?,0,0.6124556660652161
1595202797,6275,AnaisUrlichs,2024-05-09T09:25:17Z,-keinan :) help,1,0.7656163573265076
1595295766,6275,chen-keinan,2024-05-09T10:54:11Z,"terminology could be confusing, could be `custom compliance specs` is more accurate ?",0,0.9707659482955933
1595314100,6275,chen-keinan,2024-05-09T11:14:40Z,"`trivy-policies` repo on github name has been changed to `trivy-checks`, change should apply to all references in doc",0,0.9858471751213074
1595331145,6275,chen-keinan,2024-05-09T11:34:10Z,in example i would put (manual) as there is no check (nil),0,0.9882670044898987
1603561683,6275,AnaisUrlichs,2024-05-16T15:09:04Z,but people are writing a rego check and we referred to rego files as checks? what would be the difference then between the spec and the rego check? :thinking_face:,0,0.956363320350647
1597896405,6674,DmitriyLewen,2024-05-13T05:31:58Z,this description is confusing. my first thought is that this command updates the plugin. my second thought is that this command downloads the `trivy-plugins-index` repository in its entirety. we need to come up with the most clear description possible to avoid confusion with `upgrade` command it’s also worth pointing out that we are only updating the `cachedir/trivy/plugin/index.yaml` file.,-1,0.7780922055244446
1597899114,6674,DmitriyLewen,2024-05-13T05:36:52Z,you use slice of args: [a link] therefore we must support more than 1 argument.,0,0.986874520778656
1597901119,6674,DmitriyLewen,2024-05-13T05:40:18Z,i thought it might be worth mentioning that we search by plugin names and descriptions.,0,0.9729397892951965
1597903692,6674,DmitriyLewen,2024-05-13T05:44:09Z,"line 786: ` use: ""run name | url | file_path"",`",0,0.9870203733444214
1597909227,6674,DmitriyLewen,2024-05-13T05:52:16Z,can we use multiple words for searching?,0,0.9871951937675476
1598028398,6674,knqyf263,2024-05-13T07:52:49Z,it should be ok as people are familiar with `apt-get update`.,0,0.9853082299232483
1598029478,6674,knqyf263,2024-05-13T07:53:37Z,this is mentioned.,0,0.9778550863265991
1598068993,6674,knqyf263,2024-05-13T08:23:13Z,"not only `apt`, but also [a link], [a link], and many other tools. but we can still update it if it confuses users.",0,0.982914388179779
1598122115,6674,DmitriyLewen,2024-05-13T09:01:00Z,my concern is that we will change the logic for `update`. these changes may confuse users who currently use plugins.,-1,0.5743846297264099
1598215188,6674,knqyf263,2024-05-13T10:04:09Z,"no, i just passed through the cli arguments, but it looks better to pass one argument for clarity. fixed in [a link]",0,0.9819662570953369
1598215809,6674,knqyf263,2024-05-13T10:04:44Z,you're right. thanks. deleted [a link],1,0.9337694048881531
1598223396,6674,knqyf263,2024-05-13T10:11:05Z,added [a link],0,0.9870722889900208
1599358608,6674,DmitriyLewen,2024-05-14T04:22:43Z,let's also add log about the removal of plugin.,0,0.989063560962677
1599369387,6674,DmitriyLewen,2024-05-14T04:39:20Z,iiuc we need to add `silenceusage` to all plugin flags to avoid printing usage information in case of error. e.g.: [code block],0,0.9865423440933228
1599388437,6674,DmitriyLewen,2024-05-14T05:11:30Z,add this page to [a link] please.,0,0.9750023484230042
1599388488,6674,DmitriyLewen,2024-05-14T05:11:36Z,add this page to [a link] please.,0,0.9750023484230042
1599392277,6674,DmitriyLewen,2024-05-14T05:17:41Z,numbering is broken. [code block]bash $ trivy plugin update [code block]bash $ trivy plugin search name description maintainer output aqua a plugin for integration with aqua security saas platform aquasecurity kubectl a plugin scanning the images of a kubernetes resource aquasecurity referrer a plugin for oci referrers aquasecurity ✓ [...] [code block]bash $ trivy plugin install referrer [code block]bash $ trivy referrer --help [code block]bash $ trivy plugin upgrade [code block]bash trivy plugin uninstall referrer [code block],0,0.9742931127548218
1599423327,6674,knqyf263,2024-05-14T05:59:59Z,thanks!,1,0.9308210611343384
1599436625,6674,knqyf263,2024-05-14T06:15:40Z,added [a link],0,0.9870722889900208
1599436789,6674,knqyf263,2024-05-14T06:15:52Z,added [a link],0,0.9870722889900208
1599437009,6674,knqyf263,2024-05-14T06:16:05Z,fixed [a link],0,0.9879513382911682
1599437275,6674,knqyf263,2024-05-14T06:16:24Z,grouped plugin subcommands [a link],0,0.9889311194419861
1599437321,6674,knqyf263,2024-05-14T06:16:28Z,grouped plugin subcommands [a link],0,0.9889311194419861
1898281725,8178,knqyf263,2024-12-27T05:58:28Z,"each artifact must have `clean()` method so that the caller can be responsible for cleanup. what if moving that to `clean()`? it might help in case `inspect()` is called several times (we don't assume such usage, though).",0,0.9887091517448425
1898282403,8178,knqyf263,2024-12-27T06:00:17Z,"nit: trivy already has several kinds of cache, like scan cache, cache assets, etc. `cachedir` looks like the root directory of the cache directory controlled by `--cache-dir`. i'd rename it to the explicit name. [code block]",0,0.9838929176330566
1898373753,8178,DmitriyLewen,2024-12-27T08:57:28Z,currently: [code block] let's use log.logger,0,0.9888260364532471
1898374447,8178,DmitriyLewen,2024-12-27T08:58:57Z,we can wait for feedback from users. but perhaps some users will want to set custom exit code.,0,0.9849343299865723
1898375950,8178,DmitriyLewen,2024-12-27T09:01:40Z,i think it's better to use `trivy` in the cache directory name. this is necessary so that users can understand what directory it is and delete it (if necessary) [code block],0,0.9840562343597412
1898379811,8178,DmitriyLewen,2024-12-27T09:09:17Z,correct me if i'm wrong: if layercachedir already contains a layer file - we'll still save the layer to that file (again): [a link],0,0.9666765332221985
1898390075,8178,nikpivkin,2024-12-27T09:24:51Z,we always delete it in case of an error or a successful scan.,0,0.9865473508834839
1898477892,8178,nikpivkin,2024-12-27T12:15:11Z,done [a link],0,0.987381100654602
1898478019,8178,nikpivkin,2024-12-27T12:15:28Z,done [a link],0,0.987381100654602
1898482603,8178,nikpivkin,2024-12-27T12:24:31Z,this is a temporary cache that is removed in the case of an error or when the scan completes,0,0.9870519638061523
1898536002,8178,nikpivkin,2024-12-27T14:16:01Z,done [a link],0,0.987381100654602
1898536151,8178,nikpivkin,2024-12-27T14:16:19Z,done [a link],0,0.987381100654602
1919686134,8178,knqyf263,2025-01-17T07:41:52Z,"we can delete the cache directory if `checkimagesize` returns an error, but how about other errors? if i understand correctly, `artifact.clean()` will not be called. so, should we call the defer function before handling the error? [a link]",0,0.9882509112358093
1919816753,8178,nikpivkin,2025-01-17T09:32:00Z,"`clean` takes artifactinfo, and if we call it before the error is checked, the artifactinfo will not be valid. maybe we should clear the cache inside `inspect` if any error occurred? [code block]",0,0.9886223673820496
1919825398,8178,knqyf263,2025-01-17T09:38:31Z,"i thought using `clean()` is more straightforward, but you're actually right. we don't need this cache after `inspect` is complete. it makes more sense to delete it in the method.",0,0.9681839346885681
1923444051,8178,knqyf263,2025-01-21T10:16:51Z,"aqua is still checking their logic to calculate the image size, so the flag behavior is subject to change. i would mark it as experimental.",0,0.9873078465461731
1923800104,8178,nikpivkin,2025-01-21T14:11:31Z,done [a link],0,0.987381100654602
959273897,2589,chen-keinan,2022-08-31T07:56:37Z,"would it make sense to replace this multiple (will be much clear) `if` and `continue` with `switch case` , example : [code block]",0,0.9880145192146301
959284806,2589,chen-keinan,2022-08-31T08:07:55Z,nit: [code block],0,0.9873168468475342
959287957,2589,chen-keinan,2022-08-31T08:11:06Z,"i'm using rancher desktop and did not got infra result at all , hope our checks take under consideration these use cases",1,0.739822506904602
960098891,2589,josedonizetti,2022-08-31T23:22:51Z,"what do you see when you do `kubectl get pods -n kube-system` on rancher? (rancher is not working on my computer not sure why, but kind/minikube/kops/k3 are all based on kubeadm, which will have all k8s components under `kube-system`)",0,0.9878469705581665
960500624,2589,josedonizetti,2022-09-01T10:51:00Z,so rancher doesn’t expose the apiserver? controller manager? or it is in another ns?,0,0.9842860102653503
991946695,2589,chen-keinan,2022-10-11T08:01:32Z,nit: [code block],0,0.9873168468475342
991950830,2589,chen-keinan,2022-10-11T08:02:53Z,nit: [code block],0,0.9873168468475342
1002721946,2589,knqyf263,2022-10-23T14:44:46Z,nit: there are `by default` twice.,0,0.9856593608856201
934118812,2607,DmitriyLewen,2022-08-01T03:55:49Z,i'm not sure if commit suffix needs to be trimmed here. versions made from tag and another commit must have different version numbers. this can be confusing. i think we can trim this suffix in the check: [a link],0,0.5148959159851074
934220481,2607,knqyf263,2022-08-01T07:31:49Z,could you elaborate on that?,0,0.9842915534973145
934228926,2607,Moulick,2022-08-01T07:42:32Z,"`subst` will remove any `v` in the tag. that would break if we have `v` elsewhere in the version like `v0.40v.6` for some reason. i'll try to change so it trims only the prefix we can't really trim it in the code as suggested that the version during the compile itself should not have the `v`, otherwise it becomes `version: version 0.29.1`.",0,0.9869546294212341
934240206,2607,Moulick,2022-08-01T07:56:15Z,"we can do `version := $(patsubst v%,%,$(shell git describe --tags --abbrev=0))` this will convert `v0.36v.0v` into `0.36v.0v`. aka stripping `v` only from prefix.",0,0.98896324634552
934242250,2607,Moulick,2022-08-01T07:58:33Z,"oh, i see what you mean now. i'll trim in the check.",0,0.9787508249282837
934244806,2607,DmitriyLewen,2022-08-01T08:01:31Z,"i only talked about the `--abbrev=0` flag. at the moment when i build the binary i get `v ` like this: `version: v0.30.4-11-g44d53bed` after the changes, we will only get the tag number in version for all commits between tags (for example, `version: v0.30.4` for the actual commit in the main branch). i think we only need to remove `v` prefix.",0,0.9839414954185486
934263645,2607,knqyf263,2022-08-01T08:22:53Z,it makes sense. good catch. thanks.,1,0.9838789701461792
934366696,2607,Moulick,2022-08-01T10:14:13Z,"please check now with the latest commit | case | build | versions | output url | | ---- | ------------------------------------------------------------------------------------------------------ | --------------------------------- | ----------------------------------------------------------------------------------------------------------------------------- | | 1 | go build -ldflags ""-s -w -x=main.version=v0.30.4"" ./cmd/trivy/main.go | version: v0.30.4 | please see also [a link] for faster secret detection | | 2 | go build -ldflags ""-s -w -x=main.version=0.30.4"" ./cmd/trivy/main.go | version: 0.30.4 | please see also [a link] for faster secret detection | | 3 | go build ./cmd/trivy/main.go | version: dev | please see also [a link] for faster secret detection | | 4 | goreleaser check && goreleaser release --snapshot --rm-dist --skip-publish --skip-docker --skip-before | version: 0.30.4-snapshot-f2b17e3c | please see also [a link] for faster secret detection | | 5 | make build | version: 0.30.4-6-gf2b17e3c | please see also [a link] for faster secret detection |",0,0.9539570808410645
934432999,2607,DmitriyLewen,2022-08-01T11:40:13Z,i think we can not use regex: what do you think of something like this? [code block],0,0.9566114544868469
934436521,2607,DmitriyLewen,2022-08-01T11:44:41Z,what about pre-release versions (e.g. `0.30.5-alpha`). should this be considered?,0,0.9872682690620422
934450979,2607,knqyf263,2022-08-01T12:03:08Z,i think we can just replace them with `dev` or accept the invalid url.,0,0.9867754578590393
934481864,2607,Moulick,2022-08-01T12:40:22Z,i was in favour of the regex as that would cover other cases for semver like if we had `v0.36.0+snapshot-1` or like `0.36.0-beta+exp.sha.5114f85`. wdyt?,0,0.9815396666526794
935087988,2607,DmitriyLewen,2022-08-02T03:48:00Z,"i agree with you. `v0.36.0+snapshot-1` requires a regex, but as said, we can return the invalid url for pre-release versions and versions with build metadata. wdyt? what is preferable?",0,0.9682520031929016
935179306,2607,Moulick,2022-08-02T06:52:56Z,"we can replace it with `dev`, but the question is again about detecting it's not a release version but a snapshot or pre-release or something, that again falls back to regex. i am the last person to want to use regex but also then i do want to produce valid urls as much as possible",0,0.9557501673698425
936372886,2607,knqyf263,2022-08-03T08:17:12Z,"in development, i don't mind even if an invalid url is produced. if we want to make it valid as much as possible, we can use [a link]. [code block]",0,0.9685237407684326
936446809,2607,Moulick,2022-08-03T09:31:04Z,"sure, i'll switch to `go-version`.",0,0.9875325560569763
945125252,2607,Moulick,2022-08-13T10:48:54Z,resolved,0,0.9733997583389282
945621081,2607,knqyf263,2022-08-15T11:05:30Z,"as mentioned earlier, we want to use our go-version, not hashicorp/go-version. [a link]",0,0.9861177802085876
1219701931,4557,AnaisUrlichs,2023-06-06T13:54:16Z,"maybe dividing it into two lines? #### kubernetes sbom i.e. kbom kubernetes sbom referred to as `kbom`, produces the k8s core components (control plane components, node components and addons) bill of material",0,0.9648994207382202
1225902699,4557,itaysk,2023-06-11T19:20:37Z,[code block]sh trivy k8s cluster --format cyclonedx [code block],0,0.9769218564033508
1225903357,4557,itaysk,2023-06-11T19:21:39Z,i think this is not needed here if you accept the other suggestion,0,0.9836455583572388
1225903602,4557,itaysk,2023-06-11T19:22:33Z,"needs some more documentation if we have it: examples, supported platforms, limitation, etc.",0,0.9873741269111633
1227477526,4557,knqyf263,2023-06-13T03:18:23Z,i don't want to add marshalkbom here. kubernetes should directly call core.marshal.,0,0.980927586555481
1227479038,4557,knqyf263,2023-06-13T03:22:06Z,it is kubernetes-specific. i think it should be located under `pkg/k8s/report`.,0,0.9879891872406006
1227479072,4557,knqyf263,2023-06-13T03:22:11Z,it is kubernetes-specific. i think it should be located under `pkg/k8s/report`.,0,0.9879891872406006
1227482035,4557,knqyf263,2023-06-13T03:29:29Z,i don't think we need to call `marshalreport` here. you can directly construct core.component. [code block],0,0.9864405989646912
1227521124,4557,chen-keinan,2023-06-13T04:36:36Z,we might need to replace it with this method instead : [code block] the other option is to expose(public) `marshaler` and `marshaler.core` what do you prefer?,0,0.9865787625312805
1227521193,4557,chen-keinan,2023-06-13T04:36:43Z,we might need to replace it with this method : [code block] the other option is to expose (public) `marshaler.core` what do you prefer?,0,0.9852178692817688
1229389669,4557,knqyf263,2023-06-14T10:36:54Z,"i'm not sure, but do we want to remove all `v` occurrences? doesn't `strings.trimprefix(version, ""v"")` work?",0,0.9794268608093262
1229391104,4557,knqyf263,2023-06-14T10:38:17Z,please use our library. [a link],0,0.9646309018135071
1229393395,4557,knqyf263,2023-06-14T10:40:26Z,you can use this const. other places as well [a link],0,0.9871740341186523
1229393427,4557,knqyf263,2023-06-14T10:40:28Z,ditto [a link],0,0.9577217102050781
1229393546,4557,knqyf263,2023-06-14T10:40:35Z,ditto,0,0.8428916931152344
1229393628,4557,knqyf263,2023-06-14T10:40:40Z,ditto,0,0.8428916931152344
1229393766,4557,knqyf263,2023-06-14T10:40:48Z,ditto,0,0.8428916931152344
1229399119,4557,knqyf263,2023-06-14T10:45:57Z,we can use the constructor. [a link],0,0.9880107045173645
1229399647,4557,knqyf263,2023-06-14T10:46:28Z,nit [code block],0,0.9879410862922668
1229436416,4557,knqyf263,2023-06-14T11:21:30Z,i think we can leverage the existing function. [code block],0,0.9881823658943176
1229439749,4557,knqyf263,2023-06-14T11:25:02Z,"if you just want to sort by name, you don't need the new type implementing `sort.interface`. [code block]",0,0.987726628780365
1229454438,4557,knqyf263,2023-06-14T11:37:25Z,i aim to keep `pkg/report` and `pkg/k8s/report` independent. can we add a tiny writer in `pkg/k8s/report/cyclonedx.go`? [code block],0,0.9870664477348328
1230374158,4557,knqyf263,2023-06-15T03:16:59Z,"for purl, we should use canonical names, `k8s.io/kubelet`. [a link]",0,0.9872667193412781
1230374917,4557,knqyf263,2023-06-15T03:18:36Z,"other components as well, like `k8s.io/apiserver`. you can see the list here. [a link]",0,0.9816668033599854
1230709462,4557,knqyf263,2023-06-15T09:17:28Z,"do we need to replace it? if it is a helm error, we can bump the helm version in defsec. [code block] [a link]",0,0.9885041117668152
1230886541,4557,chen-keinan,2023-06-15T11:44:16Z,"sure, created [a link] for defsec",0,0.9841666221618652
1231452134,4557,chen-keinan,2023-06-15T19:30:25Z,"i have replaced `defsec` with `helm v3.12.1` still getting error as result from dependency issue , see my comments on `go.mod` file, could be replacing kubectl is the best option until latest `github.com/docker/docker` can be used, wdyt?",0,0.9856693744659424
1233212787,4557,knqyf263,2023-06-18T07:03:14Z,replacing `oras-go` helps. it works in my local env. [a link],0,0.9782770276069641
1701256436,7261,DmitriyLewen,2024-08-02T04:51:00Z,we expected an array here. but now it's a string. i think ` custom-headers: []` would be better.,0,0.9744449853897095
1701274069,7261,DmitriyLewen,2024-08-02T05:08:20Z,we duplicate default values ​​in comment and values. maybe we can set a limit on values ​​(like 2 values) to avoid such a big page e.g.: [code block],0,0.9743650555610657
1701277665,7261,DmitriyLewen,2024-08-02T05:12:34Z,"i think it's not convenient to work with such a large number of values ​​(gh pages use horizontal scrolling) i don't like hardcoding, but maybe we should override default values with gh links (as is done now)?",-1,0.8592513203620911
1701278759,7261,DmitriyLewen,2024-08-02T05:14:21Z,i think `client/server` flags are not most popular. perhaps we can move them to the end of the array or just lower in the list.,0,0.9833577275276184
1701287765,7261,DmitriyLewen,2024-08-02T05:27:47Z,"we can remove case for `string`. `default` also works correctly for `string` we get extra space after `:` for empty strings, but this is still valid `yaml`. [code block]",0,0.9878377914428711
1701529020,7261,afdesk,2024-08-02T08:54:11Z,sure. it's a mistake,-1,0.8366828560829163
1701529136,7261,afdesk,2024-08-02T08:54:17Z,done,0,0.9764507412910461
1701530267,7261,afdesk,2024-08-02T08:54:59Z,done,0,0.9764507412910461
1701531364,7261,afdesk,2024-08-02T08:55:46Z,"ok, done",0,0.9768383502960205
1701533471,7261,afdesk,2024-08-02T08:56:14Z,done,0,0.9764507412910461
1701537110,7261,afdesk,2024-08-02T08:58:10Z,i'm not sure about it. usually the content is searched in alphabetical order,0,0.6261706352233887
1701555804,7261,afdesk,2024-08-02T09:10:11Z,"as we told offline, my thought about usecases is next: it's convenient to copy/paste default values from docs and then to customize it. maybe i'm wrong. i thought the hardcoded link was added to show actual state for default values. now the actual state is added automatically.",0,0.9269042015075684
1701557999,7261,afdesk,2024-08-02T09:11:45Z,"there are aws options is in the end. i'm not sure, that we should add these flags now.",0,0.9760125279426575
1701563671,7261,afdesk,2024-08-02T09:14:38Z,client/server flags are reordered now,0,0.9885220527648926
1701648301,7261,DmitriyLewen,2024-08-02T10:15:54Z,"if we use all default values ​​in `yaml` struct - it will be easier for users to get default values ​​from `yaml` struct than to copy them from comment. i suggested limiting the number of default values ​​[a link]. but maybe a better way is to remove `default is ...` comment, but use all default values ​​in the `yaml` struct. especially since now the structure clearly shows the type: - `addr: `. we can add `""""` for empty string to get `addr: """"` - `custom-headers: []` - `download-java-only: false` - etc.",0,0.9774616360664368
1701658983,7261,DmitriyLewen,2024-08-02T10:25:51Z,"yes. you are right. overall, the alphabetical order suits me. why?",0,0.8922222256660461
1701662595,7261,afdesk,2024-08-02T10:29:21Z,"ok, let's try. removed default values.",0,0.985715925693512
1701662841,7261,DmitriyLewen,2024-08-02T10:29:34Z,oh... right! i forgot about that. so we don't need to include `aws` flags.,0,0.8459290266036987
1701666501,7261,DmitriyLewen,2024-08-02T10:33:30Z,let's add information before `global options` - that `yaml` files below contain default values. and the user can find possible values `./cli/trivy.md`,0,0.9845380783081055
1701666511,7261,afdesk,2024-08-02T10:33:30Z,aws flags removed,0,0.9819459319114685
1701674975,7261,afdesk,2024-08-02T10:39:09Z,done,0,0.9764507412910461
1701677940,7261,DmitriyLewen,2024-08-02T10:42:12Z,great. thanks!,1,0.9902663826942444
1794896945,7679,DmitriyLewen,2024-10-10T07:48:01Z,"24 hours is incorrect. we publish trivy-db every 6 hours, but update interval is 24 hours. for trivy-java-db: publish every 24 hours, update interval is 3 days.",0,0.954049825668335
1843431133,7679,DmitriyLewen,2024-11-15T09:11:36Z,thanks !,1,0.9308210611343384
1846010600,7679,knqyf263,2024-11-18T07:32:36Z,"if i understand correctly, there is no chance that `mirror.gcr.io` requires authentication. we should skip `mirror.gcr.io` here. [a link]",0,0.9858596920967102
1846024172,7679,DmitriyLewen,2024-11-18T07:44:37Z,"yeah, you're probably right, i didn't think about it changed in [a link]",0,0.9496697783470154
1846051406,7679,knqyf263,2024-11-18T08:08:36Z,it's not correct. ghcr doesn't respect the github token now.,0,0.5981626510620117
1846052955,7679,knqyf263,2024-11-18T08:09:55Z,nit [code block],0,0.9879410862922668
1846063989,7679,DmitriyLewen,2024-11-18T08:19:11Z,but some users wrote that gh token helps them. do you think that for ghcr it makes no difference at all whether the user is authorized or not when downloading the image?,0,0.9876135587692261
1846071453,7679,knqyf263,2024-11-18T08:24:56Z,"trivy has [a link] that doesn't reflect `github_token` now, so i'm sure those users luckily didn't see rate limit errors. i saw [a link] when i set the token, so i believe it has no effect on ghcr. if we confirm it helps, we can add it back.",0,0.9710426330566406
1846075640,7679,DmitriyLewen,2024-11-18T08:27:57Z,got it! removed info about ghcr in [a link],1,0.5118688344955444
1846075840,7679,DmitriyLewen,2024-11-18T08:28:06Z,thanks! fixed in [a link],1,0.9739446043968201
1846101109,7679,benji78,2024-11-18T08:46:52Z,is amazon ecr still relevant here if it has been replaced by gcr?,0,0.9871485829353333
1846116036,7679,benji78,2024-11-18T08:56:58Z,there is an extra `c` in `once` which should be `one example of this ...`,0,0.9831212759017944
1846149737,7679,DmitriyLewen,2024-11-18T09:18:13Z,we still push trivy-db and trivy-java-db into ecr. so this is still relevant for users using ecr.,0,0.9840127229690552
1846150204,7679,DmitriyLewen,2024-11-18T09:18:29Z,thanks! we will fix that in another pr.,1,0.983182430267334
1846178253,7679,DmitriyLewen,2024-11-18T09:36:52Z,- #7942,0,0.9331057071685791
355468898,303,danielpacak,2019-12-09T14:09:49Z,i'd rather log or return error. having both we might see duplicate error messages in the error log,0,0.971701979637146
355471029,303,danielpacak,2019-12-09T14:14:03Z,missing call to `mockvulnclient.assertexpectations(t)` ?,0,0.957413911819458
355471947,303,danielpacak,2019-12-09T14:15:39Z,i'd skip this log and stick to the rule; either log or propagate error to avoid duplicates,0,0.9834733605384827
355474428,303,danielpacak,2019-12-09T14:20:30Z,"here and in previous test you have a very similar strucs to hold input and return args passed to mocks. you can consider having a generic structure to describe an expected behaviour of the given mock, see [a link] [code block] this might improve readability of the test cases.",0,0.9801264405250549
355475670,303,danielpacak,2019-12-09T14:22:56Z,add assert expectations for `mockvulnclient`,0,0.9837074875831604
355477539,303,danielpacak,2019-12-09T14:26:21Z,log with debug or trace?,0,0.9894318580627441
355479877,303,danielpacak,2019-12-09T14:30:34Z,add some context message why it failed unless err contains all the details to facilitate troubleshooting.,0,0.9822302460670471
355481644,303,danielpacak,2019-12-09T14:33:45Z,add some context message to the error. i assume we continue running the server without error because in 10 seconds there's a retry. is that correct?,0,0.9822419881820679
355499917,303,danielpacak,2019-12-09T15:04:36Z,what's actually asserted in theses tests?,0,0.982977032661438
355501764,303,danielpacak,2019-12-09T15:07:45Z,add message unless err contains all info to figure out what's wrong in case of error.,0,0.9539350271224976
355512416,303,danielpacak,2019-12-09T15:25:55Z,shouldn't it depend on wire install goal? it fails on my local [code block],0,0.9756830930709839
355522737,303,knqyf263,2019-12-09T15:44:05Z,i'm so sorry... i fixed it. would you try it again?,-1,0.9869137406349182
355524524,303,knqyf263,2019-12-09T15:47:03Z,"this is a function in a server side. so, if a server returns an error, the error will be displayed only in a client side. the error will not be duplicated in the server side. or, do you mean the server should not display an error?",0,0.9837170839309692
355527497,303,knqyf263,2019-12-09T15:52:15Z,it was intended because i thought the test failed due to a lack of calling vulnclient in some test cases. but it was misunderstood. i added assertexpectations [a link] thanks.,0,0.7492241859436035
355528022,303,knqyf263,2019-12-09T15:53:07Z,"it is the same reason. if it is confusing, we can add a comment. [a link]",0,0.9790065884590149
355529175,303,knqyf263,2019-12-09T15:55:02Z,i fixed it. [a link],0,0.9865824580192566
355530488,303,knqyf263,2019-12-09T15:57:19Z,absolutely:loudly_crying_face: thanks. [a link],1,0.8239073157310486
355536106,303,danielpacak,2019-12-09T16:06:53Z,"yup, it works now",0,0.7253625392913818
355536183,303,knqyf263,2019-12-09T16:07:01Z,"`tt.want` is a `config` type which has many fields, but `context` is a pointer. so, i wanted to do `assert.equal(t, tt.want, c, tt.name)` except for `tt.want.context` and `tt.want.logger`. i had no idea to do it, so i copied the value (ctx) to the wanted value (tt.want.context). do you have any idea to compare an actual value and an expected value if they contain a pointer?",0,0.9774615168571472
355639434,303,danielpacak,2019-12-09T19:28:18Z,my concern was that it's logged twice on the server side. here and where `detect()` with error handling.,0,0.9656127095222473
355648575,303,danielpacak,2019-12-09T19:47:12Z,"i wish we had such utility in golang which i used a lot in my java days -> [a link] we can improve it later on though. just remember to add assert which refers to `tt.want`. i don't see it, so even if you set the `context` we don't actually do asserts.",0,0.9506842494010925
355946286,303,knqyf263,2019-12-10T10:07:17Z,i see. `detect()` is a method called internally via http server. [a link] this error will be handled on a client side. it will not be logged twice on the server side.,0,0.9885491728782654
355953146,303,knqyf263,2019-12-10T10:20:56Z,it's true. i will add more context message.,0,0.9775927662849426
355954577,303,knqyf263,2019-12-10T10:23:42Z,"in this case, the error has enough information. but i will add more information just in case.",0,0.9840944409370422
355957759,303,knqyf263,2019-12-10T10:30:14Z,i fixed it [a link],0,0.9855576157569885
355958560,303,knqyf263,2019-12-10T10:31:54Z,i fixed it. 52ebb2c,0,0.9799202084541321
355958646,303,knqyf263,2019-12-10T10:32:04Z,i fixed it. 52ebb2c,0,0.9799202084541321
355968546,303,danielpacak,2019-12-10T10:52:34Z,got it!,1,0.9387748837471008
356224760,303,knqyf263,2019-12-10T19:11:16Z,"your approach looks so cool, but i'd like to keep named args. i refactored here. let me know your thought, please. if it looks fine, i will try to refactor other places. [a link]",1,0.9497359991073608
356233812,303,knqyf263,2019-12-10T19:29:52Z,"yes, that is exactly what i want. i didn't find it in testify/assert. that was my fault. i added the assertion. [a link]",-1,0.9628720879554749
356506888,303,danielpacak,2019-12-11T10:09:40Z,i like having a struct for mock expectations as you did in `detector_mock.go`. also setting the expectations in the `newmockdetector` is a great place to do so.,1,0.972817599773407
356518248,303,danielpacak,2019-12-11T10:32:52Z,nit: you can use varargs in newmockdetector constructor to shorten this line,0,0.9850289225578308
1324009775,5154,nikpivkin,2023-09-13T06:01:52Z,this comment is no longer needed,0,0.9624837636947632
1324013976,5154,nikpivkin,2023-09-13T06:08:18Z,why this comment? it almost duplicates the variable name,0,0.9197454452514648
1324052211,5154,j1nka,2023-09-13T06:49:37Z,thanks! done.,1,0.9528998732566833
1324052564,5154,j1nka,2023-09-13T06:49:55Z,agreed! done.,0,0.5407895445823669
1324052874,5154,j1nka,2023-09-13T06:50:15Z,thanks again :) done,1,0.9874919652938843
1328232217,5154,DmitriyLewen,2023-09-18T04:05:10Z,what if we handle all possible ways? something like that: [code block],0,0.9713125824928284
1328236753,5154,nikpivkin,2023-09-18T04:22:39Z,"according to the [a link], name is a required field.",0,0.9861708879470825
1328238855,5154,DmitriyLewen,2023-09-18T04:27:16Z,"oh... right. thanks! then, we can check that the ""name"" field contains ""groupid"".",1,0.9646835327148438
1328319300,5154,j1nka,2023-09-18T07:12:01Z,thanks for your advices! added some more checks. main idea is to catch smth like: 1st version of sbom (we don't have group and that's why we can get empty list of vulners): [code block] 2nd version of sbom (we have both - group and name): [code block],1,0.971572995185852
1328324015,5154,DmitriyLewen,2023-09-18T07:17:58Z,your examples are not valid. e.g. `name` is required field.,0,0.9766077995300293
1328327972,5154,DmitriyLewen,2023-09-18T07:22:31Z,"also there is problem in next case: `purl` field is not required - [a link] if `purl` and `group` are empty - we miss package name. i understand that this is strange case, but we need to check all possible cases.",0,0.7714441418647766
1328341431,5154,j1nka,2023-09-18T07:37:34Z,"hm, i removed all data in this two examples just to show fields. in both cases we have `name`, but in first we don't have `group`. maybe i didn't understand you comment abiut ""`name` is required"". yes if `purl` and `group` are missing we miss the package. in last commit i've added checks like you told me - check the `group`. you want me to add some checks to identify if `purl` is present? because at the moment i don't check if `purl` is present and trying to parse it.",0,0.937179684638977
1328362770,5154,DmitriyLewen,2023-09-18T07:57:30Z,"oh... i didn't understand that you removed all values from these fields ( i thought these field are empty). i think we need to add that. `group` and `purl` can be omitted. so in this case we need to get package name from `name` field. it is strange, but it is possible: [code block] i",-1,0.7293396592140198
1328381231,5154,j1nka,2023-09-18T08:15:08Z,ok! will do it. but if we don't have `group` or `purl` what we need in return? in case of java only `name` will be not enough to get vulnerability data,0,0.7615107297897339
1328386990,5154,DmitriyLewen,2023-09-18T08:20:34Z,use `name` field. it is better than nothing. it is also possible that `name` will use ` : ` format. e.g. we used this format in `name` before #4674.,0,0.9674022197723389
1328401576,5154,j1nka,2023-09-18T08:33:58Z,hope i get it right :) added checks and `name` as default behavior if there is no `group` or `purl`,1,0.9795371294021606
1328419975,5154,DmitriyLewen,2023-09-18T08:48:50Z,we already parsed `purl` here - [a link] we can use this.,0,0.9893155097961426
1328482182,5154,j1nka,2023-09-18T09:46:34Z,"great idea, thanks! made some changes",1,0.992837131023407
1329768061,5154,DmitriyLewen,2023-09-19T08:33:55Z,"i rechecked code before this line and found that we don't parse cyclonedx without `purl` - [a link] so we can remove this check (sorry for confusing you). i think we can remove `purl == """"` check and move logic to `getpackagename` and use [a link] ([a link]. something like that: [code block]",0,0.7924613952636719
1331142614,5154,j1nka,2023-09-20T07:36:49Z,wow :) great idea! thanks a lot! done :),1,0.9944493770599365
1062487767,3391,itaysk,2023-01-05T13:43:47Z,i think we want the company to be the title. otherwise what do we expect the title to be?,0,0.9792388081550598
1062490005,3391,itaysk,2023-01-05T13:46:20Z,you probably didn't mean to add this as a label right?,0,0.9620551466941833
1062494976,3391,itaysk,2023-01-05T13:51:24Z,so in other words i think we should remove this field,0,0.9788383841514587
1062496935,3391,itaysk,2023-01-05T13:53:25Z,:face_with_monocle:,0,0.9853910207748413
1062500164,3391,itaysk,2023-01-05T13:56:46Z,"not sure if this is valuable info to collect, but also - the state oss today isn't easy to define, for example gitlab using trivy - oss or not? we need to make sure the form is frictionless to fill",0,0.9690892696380615
1062501285,3391,itaysk,2023-01-05T13:57:55Z,just to match the description you gave,0,0.985243558883667
1062502626,3391,itaysk,2023-01-05T13:59:23Z,"as much as this is super valuable to us, i think all the fields should be optional. if someone wants to just put their name and leave, they should be able to. wdyt?",0,0.7694134712219238
1062506936,3391,itaysk,2023-01-05T14:03:59Z,(see my other comment about company name for why this suggestion),0,0.9800494909286499
1071477358,3391,AnaisUrlichs,2023-01-16T17:47:38Z,"people will not know that they should put as title the company -- so i would rather ask explicitly. in the discussion yaml itself on the first line, the title has to be ""show and tell"" so the form shows up when people select show and tell",0,0.9587594270706177
1071478457,3391,AnaisUrlichs,2023-01-16T17:49:32Z,in the gh documentation on creating a discussion form they explicitly said that the title of the yaml for the form has to match the selection name in the gh discussions of your project -- i think this does not mean that people cannot set a title for their discussion (?),0,0.9570208191871643
1071478643,3391,AnaisUrlichs,2023-01-16T17:49:51Z,oki,0,0.9661612510681152
1071479286,3391,AnaisUrlichs,2023-01-16T17:50:57Z,hmm you have a point,0,0.9722447991371155
1071486962,3391,itaysk,2023-01-16T18:03:56Z,i think you might have confused name of file with title of form?,0,0.9798840284347534
1071874318,3391,AnaisUrlichs,2023-01-17T08:04:56Z,would you like the type to be markdown?,0,0.9860338568687439
1071894208,3391,itaysk,2023-01-17T08:24:25Z,that's also not desired (will render as markdown codeblock). just remove it,0,0.9869078397750854
1804399827,7690,nikpivkin,2024-10-17T09:08:36Z,nit: we have `log.filepath` to log the path [a link],0,0.9891947507858276
1804419866,7690,nikpivkin,2024-10-17T09:22:19Z,what if we put the loop body in a separate function for readability? then the error will only need to be logged once,0,0.9845349788665771
1804527046,7690,afdesk,2024-10-17T10:36:07Z,done [a link],0,0.987381100654602
1804527416,7690,afdesk,2024-10-17T10:36:21Z,"oh, thanks. i didn't know it done [a link]",1,0.9114214181900024
1805653721,7690,simar7,2024-10-18T00:37:27Z,is there any benefit of defining this of fixed length? why not simplify like so [code block],0,0.9820613265037537
1805663259,7690,simar7,2024-10-18T00:43:32Z,"it seems that this file is a little short on test coverage, maybe we can improve that a bit?",0,0.9781241416931152
1805701768,7690,simar7,2024-10-18T01:40:27Z,"just a thought, would they be also cleaned when we run `trivy clean`?",0,0.9861971735954285
1805871852,7690,afdesk,2024-10-18T05:12:47Z,these temporary files remove after the k8s scan. so i don't think we should use `trivy clean` here,0,0.9850061535835266
1805895164,7690,afdesk,2024-10-18T05:47:44Z,"try to avoid a few copy operations and memory allocations by grabbing it all up front. (it's a quota )). i'm not sure it makes sense, so we can change this one. do you think we should use a simple construction?",0,0.9379463791847229
1805939056,7690,simar7,2024-10-18T06:28:25Z,"i'm just thinking of the case when trivy exits unexpectedly and files are not cleaned up. i think the `defer` should take care of it, but just a thought.",0,0.8274253606796265
1805940667,7690,afdesk,2024-10-18T06:30:06Z,"yes, you're right. we should improve test cases",0,0.9059963822364807
1805957463,7690,afdesk,2024-10-18T06:44:03Z,"trivy creates these files inside temporary folder, so i think os can take care of it. or do i miss something? thanks",1,0.9545210599899292
1806964208,7690,afdesk,2024-10-18T19:59:55Z,done [a link],0,0.987381100654602
1807125559,7690,simar7,2024-10-19T00:45:56Z,i haven't benchmarked this so i can't say for sure but i would assume the go runtime can grow the slice as needed without much of an overhead.,0,0.9800242781639099
1807127247,7690,simar7,2024-10-19T00:49:42Z,fair enough :thumbs_up:,0,0.5936712622642517
1807138197,7690,simar7,2024-10-19T01:26:42Z,"ok - since this pr also fixes a critical bug for k8s scanning, we can merge it first. i opened [a link] to track improving the test coverage.",0,0.975714385509491
1808394990,7690,knqyf263,2024-10-21T09:13:59Z,"`make` is faster than `var`, so if we know the length beforehand, we should use `make` for performance reasons. [a link] if the length of the slice is small enough, i personally prefer `var` because it's easier to read. in this case, k8s resources can be a lot. it makes sense to use `make`.",0,0.9636529684066772
1808401992,7690,knqyf263,2024-10-21T09:18:39Z,"nit: i think `directory` is more common than `folder` in unix. this function actually calls `mkdirtemp`, not `mkfoldertemp`.",0,0.9867364764213562
1808457127,7690,afdesk,2024-10-21T09:53:52Z,rename [a link],0,0.9854812026023865
747469261,1230,afdesk,2021-11-11T12:45:13Z,"[a link] shows an error: [code block] it seems that we should remove `+1`, right?",0,0.9734805226325989
747542161,1230,simon-engledew,2021-11-11T14:25:02Z,"ah yes, my bad! :downcast_face_with_sweat:",-1,0.9903404116630554
747660560,1230,afdesk,2021-11-11T16:48:21Z,the trailing comma is wrong,0,0.8523991107940674
1002710944,2951,josedonizetti,2022-10-23T13:30:05Z,-keinan wouldn't this be better under the `kubernetes` section? it is very specific to k8s.,0,0.9851030111312866
1002711289,2951,josedonizetti,2022-10-23T13:32:30Z,"both word as plural doesn't read correct, maybe simplify as `results` only?",0,0.9695799350738525
1002711309,2951,josedonizetti,2022-10-23T13:32:38Z,same,0,0.9733930826187134
1002746268,2951,knqyf263,2022-10-23T17:54:29Z,+1,0,0.696722686290741
1002746550,2951,knqyf263,2022-10-23T17:57:03Z,i don't think we can keep maintaining this test data as it is quite large. can we make it small?,0,0.9276413917541504
1002746686,2951,knqyf263,2022-10-23T17:57:50Z,ditto,0,0.8428916931152344
1002746817,2951,knqyf263,2022-10-23T17:58:32Z,"if we need a test using actual data, we can do that in integration tests rather than unit tests.",0,0.986212968826294
1002747042,2951,knqyf263,2022-10-23T18:00:42Z,ditto,0,0.8428916931152344
1002747088,2951,knqyf263,2022-10-23T18:01:04Z,ditto,0,0.8428916931152344
1002748823,2951,chen-keinan,2022-10-23T18:16:32Z,but we will have to move it later again as we are planning to add `aws cis compliance spec` as well so kubernetes section will not match.,0,0.9605485796928406
1003218853,2951,knqyf263,2022-10-24T11:46:30Z,"i think we can have nsa under kubernetes and cis under aws respectively. `trivy k8s` users may not be interested in aws cis. we can also have a dedicated page for compliance, but the page just contains links to each page.",0,0.9843701124191284
1003226976,2951,knqyf263,2022-10-24T11:56:10Z,shouldn't it be under report flags?,0,0.9746201038360596
1003277343,2951,knqyf263,2022-10-24T12:52:46Z,does `id` mean the control id?,0,0.9850417971611023
1004320936,2951,knqyf263,2022-10-25T10:47:47Z,can we add a reference to the nsa hardening guidance? this one? [a link],0,0.9886921644210815
1004321551,2951,knqyf263,2022-10-25T10:48:19Z,can we add a description of what the percentage describes? non-root containers: 89.89% might not be clear.,0,0.984566867351532
1004328661,2951,chen-keinan,2022-10-25T10:54:08Z,"not sure, as it trigger scanning behind the scene , so it invoke scan process",0,0.9812524914741516
1004332925,2951,chen-keinan,2022-10-25T10:57:24Z,its scan checks id --> `map[avd-124-1234]types.results`,0,0.9866108894348145
1004354152,2951,knqyf263,2022-10-25T11:13:07Z,"yes, it also affects scanning, but it is mainly for reporting, no?",0,0.9729596376419067
1004361819,2951,knqyf263,2022-10-25T11:21:29Z,"for example, `--format cyclonedx` also affects scanning since sbom doens't need vulnerabilities, misconfigurations and secrets, but it is under report flags as it is mainly for reporting.",0,0.9783824682235718
1004414707,2951,knqyf263,2022-10-25T12:20:14Z,do we need to override unmarshalyaml? i wonder if we can validate scanners after unmarshaling.,0,0.9040714502334595
1004419527,2951,chen-keinan,2022-10-25T12:25:05Z,sure can be done afterwards,0,0.9808502793312073
1004451162,2951,chen-keinan,2022-10-25T12:55:39Z,fixed,0,0.975196123123169
1211063681,4210,knqyf263,2023-05-31T04:05:00Z,i'm not too fond of this approach. any ideas?,-1,0.9442186951637268
1211272672,4210,DmitriyLewen,2023-05-31T08:19:25Z,"what if we will add flag (folder names) insted of this hardcode? flag will show that we need to get packages from sbom instead of language files for those folders. for `fs,` image`, etc.. `opt/bitnami` will be default value. therefore, users can use this flag for other folders.",0,0.9893206357955933
1212499257,4210,knqyf263,2023-06-01T02:35:08Z,"in the case of bitnami, sbom and executable files are located under `opt/bitnami`, but i'm not sure about other cases. i'm afraid the flag is very bitnami specific.",-1,0.7008998990058899
1212502296,4210,DmitriyLewen,2023-06-01T02:42:29Z,"what if we parse both files (i mean jar + sbom), merge packages and add logic to exclude duplicates? e.g. if we found packages from sbom files - we need to check these packages in the found language files and skip the duplicate",0,0.9871169924736023
1212510043,4210,knqyf263,2023-06-01T02:54:36Z,"yeah, that is what i was thinking first. but for example, jar scanning is quite expensive (download trivy-java-db, etc.). if there is sbom, we should skip analyzing.",0,0.9070143103599548
1212511246,4210,DmitriyLewen,2023-06-01T02:57:36Z,we can scan sbom first(pre-analyzer) and add check for language analyzers - if filepath from sbom == language package filepath => skip analyze,0,0.9853528141975403
1212514428,4210,knqyf263,2023-06-01T03:04:15Z,"interesting, but how? `io.reader` for image layer tarballs is read only once. we cannot iterate twice. [a link]",0,0.8943830132484436
1212518384,4210,DmitriyLewen,2023-06-01T03:14:12Z,"most expensive language packages use post-analyzers ( or we can move them to post-analyzer). we will add check for filepath from sbom into start of `postanalyze` func. e.g. for jar: we will add check before downloading trivy-java-db if bom contains all jar files - we will not download java-db correct me, if i am wrong",0,0.9555757641792297
1212700615,4210,knqyf263,2023-06-01T07:19:05Z,"it was impossible since a single sbom includes several files, and trivy didn't store those file paths. but it may be possible now after [a link]. trivy has file paths of nested dependencies. i'll give it a shot. thanks!",1,0.970313549041748
1212919052,4210,DmitriyLewen,2023-06-01T10:11:29Z,[code block] this does not work?,0,0.9353721141815186
1212919705,4210,DmitriyLewen,2023-06-01T10:12:05Z,can you add testcase for this?,0,0.9890648126602173
1212935872,4210,DmitriyLewen,2023-06-01T10:22:18Z,"if spdx doesn't have application - we think that all packages are from 1 application, i understand correctly?",0,0.9859651327133179
1212937973,4210,DmitriyLewen,2023-06-01T10:24:22Z,also perhaps we want to use `initapplication`?,0,0.9870346188545227
1212955004,4210,DmitriyLewen,2023-06-01T10:37:38Z,maybe we need to add generic logic for other folders. but we can do it after user questions.,0,0.9870708584785461
1212957767,4210,DmitriyLewen,2023-06-01T10:39:17Z,maybe we need to add testcase for cyclonedx or are testcases from `sbom` package enough? wdyt?,0,0.9894429445266724
1213127298,4210,knqyf263,2023-06-01T13:07:01Z,true. this can be used for the case where an application exists in sbom.,0,0.9881914258003235
1213129065,4210,knqyf263,2023-06-01T13:08:03Z,"yes, agree. but i guess there is no standard for this.",0,0.9599432349205017
1213144528,4210,knqyf263,2023-06-01T13:19:43Z,added in [a link],0,0.9876591563224792
1213145252,4210,knqyf263,2023-06-01T13:20:19Z,done [a link],0,0.987381100654602
1213145674,4210,knqyf263,2023-06-01T13:20:36Z,done [a link],0,0.987381100654602
1213147719,4210,knqyf263,2023-06-01T13:22:08Z,added [a link],0,0.9870722889900208
1213958051,4210,DmitriyLewen,2023-06-02T06:01:21Z,`filepath.ext` doesn't work from `.spdx.json`,0,0.9841780066490173
1213968541,4210,DmitriyLewen,2023-06-02T06:19:02Z,fixed in 0b9daa2441e7c583046563ca3ecfa4e634a6a1fe,0,0.9826174378395081
1214166071,4210,ChristianCiach,2023-06-02T09:51:05Z,"i think it should be clarified that this currently **only** works for bitnami images. i came here from reading the release notes that just state: [code block] this got me excited, because we could use this for our own images, but unfortunately this currently only works for this hardcoded directory.",0,0.7387073040008545
1214196932,4210,knqyf263,2023-06-02T10:23:52Z,why do you think it works with the hardcoded directory?,0,0.9795370101928711
1214260007,4210,ChristianCiach,2023-06-02T11:33:27Z,"i am referring to this discussion: [a link] even in current `main`, the `sbom.go` only checks the hardcoded path `/opt/bitnami` for spdx-sboms: [code block] or am i reading this wrong and other paths/formats are somehow implicitly supported?",0,0.9567766189575195
1214350563,4210,knqyf263,2023-06-02T13:05:25Z,"no, it is just rewriting file paths for bitnami. sbom itself is analyzed anyway.",0,0.9874465465545654
1687482593,7206,DmitriyLewen,2024-07-23T06:16:13Z,i am not sure about this. perhaps we want don't use aliase for `vex`. [code block],0,0.7780354022979736
1687486893,7206,DmitriyLewen,2024-07-23T06:21:06Z,do we need this? also looks like it doesn't work: [code block],0,0.972217857837677
1687486971,7206,DmitriyLewen,2024-07-23T06:21:12Z,same for other `list` and `download`,0,0.9859469532966614
1687523463,7206,DmitriyLewen,2024-07-23T06:55:57Z,let's add info about cache dir with repositories in [a link],0,0.9878923892974854
1687553911,7206,DmitriyLewen,2024-07-23T07:20:06Z,do you think we don't need this anymore? it saves resources for spdx and cyclonedx formats.,0,0.9856611490249634
1687577325,7206,DmitriyLewen,2024-07-23T07:37:53Z,can you add comment here? we can add link to vexhub ([a link] or vex-repo-spec ([a link] btw - `vex-repo-spec` doesn't say about `subpath`,0,0.9887872338294983
1687602553,7206,DmitriyLewen,2024-07-23T07:56:12Z,"perhaps we need to add more context: - user can write names of repositories for downloading - we only download enabled repositories (maybe we should download user repo, even repo is disabled)",0,0.9819789528846741
1687610285,7206,DmitriyLewen,2024-07-23T08:01:42Z,perhaps we need to add flag to disable vex repositories (remove `repository.yaml` or disable all repos). at a minimum we should write in docs how to stop using vex repos,0,0.9825828075408936
1687642912,7206,DmitriyLewen,2024-07-23T08:24:20Z,vex-repo-spec doesn't contain this field- [a link],0,0.9872720837593079
1687653792,7206,DmitriyLewen,2024-07-23T08:31:16Z,is this debug line?,0,0.980977475643158
1690911858,7206,knqyf263,2024-07-25T06:56:04Z,it was a mistake. deleted. [a link],-1,0.7913995385169983
1690912106,7206,knqyf263,2024-07-25T06:56:17Z,we don't need it. deleted. [a link],0,0.9734981060028076
1690912362,7206,knqyf263,2024-07-25T06:56:29Z,`init` is needed. added more examples. [a link],0,0.9864245653152466
1690948822,7206,knqyf263,2024-07-25T07:21:12Z,"currently, our sbom scanning process involves several steps: 1. [a link] 2. [a link] 3. for certain operations (e.g., vex application), [a link] we've identified that this process, particularly the decoding and re-encoding between `core.sbom` and `types.report`, is not as efficient as it could be. ideally, we should reuse the decoded sbom instead of re-encoding it. one key challenge i've encountered is that during the initial sbom decoding, we can't always determine whether ""parents"" will be needed later in the process (applying vex or not). given this uncertainty, i decided to always generate the parents. i attempted to implement the reuse of the decoded sbom, but found that it required more extensive modifications to our codebase than i initially anticipated. as a result, i've reverted these changes for now to maintain code stability and manageability. looking ahead, i still plan to remove the parent field in question to facilitate this optimization in the future. however, i'm keeping the option open to reintroduce this field if needed in the short term. reverted in [a link]",0,0.8910415172576904
1690950426,7206,knqyf263,2024-07-25T07:21:57Z,thanks. added in [a link] please let me know if you think we should describe it more.,1,0.8907343149185181
1690983567,7206,knqyf263,2024-07-25T07:36:40Z,opened a pr. [a link],0,0.9868571162223816
1690985516,7206,knqyf263,2024-07-25T07:37:47Z,added a comment [a link],0,0.9874956011772156
1691005869,7206,knqyf263,2024-07-25T07:54:01Z,added [a link] i think it's okay to download only enabled repositories. i'm open to changing it if the community requests it.,0,0.9692143201828003
1691006919,7206,knqyf263,2024-07-25T07:54:48Z,it's activated only when `--vex repo` is passed. they can just remove the flag to stop using vex repos.,0,0.9879591464996338
1691007956,7206,knqyf263,2024-07-25T07:55:34Z,thanks. deleted [a link],1,0.6567130088806152
1691009476,7206,knqyf263,2024-07-25T07:56:36Z,absolutely. deleted in [a link],0,0.9695954322814941
1691079511,7206,DmitriyLewen,2024-07-25T08:47:22Z,exactly! i didn't think about this.,-1,0.8401303887367249
1691143758,7206,DmitriyLewen,2024-07-25T09:32:47Z,perhaps we don't need this. we show list all non-suppressed vulns: [code block],0,0.9856907725334167
1691320681,7206,knqyf263,2024-07-25T11:57:08Z,i have changed it to be shown once per package. [a link] [code block],0,0.9879912734031677
1691321927,7206,DmitriyLewen,2024-07-25T11:58:15Z,cool :thumbs_up:,1,0.9820370078086853
1680436648,7163,knqyf263,2024-07-17T05:43:05Z,"since go uses `go` line if `toolchain` is omitted, we probably need to check the `go` line as well. [a link] but we need to consider how to treat a go line omitting a patch version, like `go 1.22`. i think we can skip stdlib in this case.",0,0.9882709383964539
1682103665,7163,DmitriyLewen,2024-07-18T04:35:16Z,"if module uses version without patch (and child modules don't use patch and `toolchain`) - `go` doesn't add patch/toolchain: [code block] since we say we use `minimum required version` for `stdlib` - we can say that `v1.x.0` (`v1.21.0` for this example) is the minimum required version, no? i think i'm missing something, but i can't figure out what :grinning_face_with_smiling_eyes:",0,0.610468864440918
1682109503,7163,DmitriyLewen,2024-07-18T04:46:01Z,"or do you mean that if `go` version doesn't contain patch - that means it is not a situation where `toolchan` is omitted? and we don't need to check for cases where `toolchain` is not used (or omitted). but it doesn't work for `v1.19` or early: `the standard go toolchains are named gov where v is a go version denoting a beta release, release candidate, or release. for example, go1.21rc1 and go1.21.0 are toolchain names; go1.21 and go1.22 are not (the initial releases are go1.21.0 and go1.22.0), but go1.20 and go1.19 are.`",0,0.9812543392181396
1682120681,7163,DmitriyLewen,2024-07-18T05:04:03Z,"i found answer - `1.21` != `1.21.0`: `for example, 1.21 < 1.21rc1 < 1.21rc2 < 1.21.0 < 1.21.1 < 1.21.2.`",0,0.9790375232696533
1682389909,7163,DmitriyLewen,2024-07-18T08:01:22Z,i updated this pr: - if toolchain is omitted - check `go` line - check go version (take only >= 1.21) - check patch - check `rc` releases,0,0.9714742302894592
1682424315,7163,knqyf263,2024-07-18T08:22:56Z,"i'd like to clarify my understanding of the `go` and `toolchain` lines in go.mod files, as it's pretty complex: 1. prior to go 1.20, the `go` line was **not** a minimum required version. this is a common misconception. for details, see: [a link] - from go 1.21 onwards, it can be considered a minimum required version, aligning with the common misconception. 2. the meaning of v1.m changed before/after go 1.20. previously, versions were go 1.20, 1.20.1, 1.20.2, etc. from 1.21, it's go 1.21.0, 1.21.1, 1.21.2, etc., for clarity. given that go currently supports the latest two versions, 1.21 and 1.22, we can focus on the behavior from 1.21 onwards. it was unclear to me how go behaves when go.mod contains `go 1.21`, as 1.21 ≠ 1.21.0 as you pointed out. as described in the proposal, cloud native buildpacks and [a link] use the latest patch version if a patch version is omitted, meaning `go 1.21` would use 1.21.12 (current latest patch). therefore, i conducted some tests. ## go version behavior test results all tests were conducted using go 1.21.12. note that the output of `go version` reflects the toolchain selection. ### base environment [code block] ### test cases #### case 1: `go 1.22` (patch version omitted, newer than local) result: 1.22.0 is downloaded and used. no changes to `go` or `toolchain` lines. [code block] #### case 2: `go 1.21` (patch version omitted, older than local) result: local version 1.21.12 is used. [code block] #### case 3: `go 1.21.3` (patch version specified, older than local) result: local version 1.21.12 is used. [code block] #### case 4: `go 1.22.3` (patch version specified, newer than local) result: 1.22.3 is downloaded and used. [code block] #### case 5: `toolchain go1.21.3` (toolchain specified, older than local) result: local version 1.21.12 is used. [code block] #### case 6: `toolchain go1.22.0` (toolchain specified, newer than local) result: 1.22.0 is downloaded and used. [code block] from these tests, we can conclude: - the versions specified in `go` or `toolchain` lines aren't always used (if the local version is newer). - if `toolchain` is omitted, `go` is referenced. - `go 1.21` is treated as `go 1.21.0`. for trivy to detect vulnerabilities based on the minimum required version: - ignore the local go version (for reproducibility from go.mod). - use the `toolchain` version if specified. - use the `go` version if `toolchain` is omitted. - treat versions without patch numbers (e.g., `go 1.21`) as the first patch version (1.21.0). this approach should provide consistent vulnerability detection based on the go.mod file. we don't have to mention the trivy policy that doesn't run the local go binary. it is better to explain that it is for reproducible scan results.",0,0.9326197504997253
1682491004,7163,DmitriyLewen,2024-07-18T09:08:34Z,this is only for `go` 1.21 or higher. i think we can return `1.21.0` instead of `1.21` to reduce the number of questions from users.,0,0.9886957406997681
1682500818,7163,DmitriyLewen,2024-07-18T09:15:48Z,"after your tests i began to doubt the need for these changes. case with the version of `go` used is already quite complicated. if we exclude the local version of `go`, this may confuse users even more and users will have more questions than answers. also, some users don't read (or don't read carefully) docs and will think that the version detected by trivy is the version of `go` they are using. might be better off asking users to scan binaries - this would be a significantly more reliable option for detecting `go` version. wdyt?",0,0.9124733209609985
1682586784,7163,DmitriyLewen,2024-07-18T10:13:10Z,anyway i updated logic related to your tests - [a link] and updated docs - [a link],0,0.9856197834014893
1682644253,7163,knqyf263,2024-07-18T10:58:36Z,"honestly, the current go seems to behave differently from the proposal (and i expected). [a link] from my tests, `toolchain` also sees older/newer distinctions. i expected case 5 to return 1.21.4. i thought the `toolchain` version is always used regardless of the local go version. i didn't find that statement [a link]. this is talking about the other way around, but it probably means the default go toolchain is used if it is newer than `toolchain `. in summary, even `toolchain` is not deterministic. as you said, it can confuse users. i agree. i'm not sure if we should add this feature. having said that, i think we can mitigate confusion with log messages. also, ecosystems will probably use `toolchain` for go version selection (e.g., [a link] it's still open, though). i guess the `toolchain` version will likely be used in ci/cd. it's not that bad that trivy relies on it. but perhaps it should be possible to pass different versions from the `toolchain` line in some way. for example, `trivy_gotoolchain=$(go version | awk ‘{print $3}’`).",0,0.8695459365844727
1683759995,7163,DmitriyLewen,2024-07-19T04:17:03Z,"` for example, when using the go command bundled with go 1.21.3 in a main module that says go 1.21.0, the go command uses go 1.21.3.` uuic this is related with `go` and `toolchain` lines i will try to add as accurate logs as possible for this. this is good option. but i see 2 moments: - it will work only for 1 repository. user can't set this env for modules (from different dirs) with different `go` versions. - users can try using logic as for `gotoolchain` with `+` and `auto` (e.g. `gotoolchain=go1.21.3+auto`). we will need to add info to docs and add warning for this case. but it can still be confusing for users... the rest looks good. in our case this is a good workaround. i will update this pr. perhaps at this time we will find more ideas on how to improve this.",1,0.593338668346405
1683928533,7163,knqyf263,2024-07-19T07:17:22Z,"i was just thinking out loud, but it may be too much. we can just recommend scanning go binaries if they want to detect stdlib vulnerabilities.",0,0.5812127590179443
1686095128,7163,DmitriyLewen,2024-07-22T07:32:07Z,"i thought about this today with clear head and i think we don't need to add this at the moment. we try to do trivy simple and working from the box. but this future adds a lot of nuanses: 1. users should understand how works go toolchains (even we spent time to understand/check that) 2. users should check local go version (in some cases developers don't know about go version using in cd/cd (e.g. because devops works with ci/cd). 3. if we will add `trivy_gotoolchain` user need to set this env or skip vulns if you know that local go version is not vulnerable. let's also add here that users don't always read logs and documentation well, and sometimes they hide logs altogether and don't read documentation. this will lead to users mistakenly thinking that there is a vulnerability in their application, and even worse if they think that there is no vulnerability (this is a rare but possible case)",0,0.6665643453598022
1686099377,7163,knqyf263,2024-07-22T07:35:38Z,how about enabling it with `--vuln-detection-level=lax`?,0,0.6656391024589539
1686105975,7163,DmitriyLewen,2024-07-22T07:41:02Z,hm... i like this solution. this flag will force users to carefully read docs and investigate result of trivy.,1,0.984927773475647
1686136546,7163,knqyf263,2024-07-22T08:02:40Z,"detection using the minimum version may be better enabled when this flag is used. for example, `django>=3.0.0` in requirements.txt, we can take `3.0.0` as the version even if the project may use newer than 3.0.0. the toolchain version is the same. from `toolchain go1.21.4` in go.mod, we consider it go 1.21.4 even if the project may actually use go 1.21.5.",0,0.9870471954345703
1686151399,7163,DmitriyLewen,2024-07-22T08:13:53Z,agree with you.,0,0.960660994052887
1686155628,7163,knqyf263,2024-07-22T08:17:02Z,"ok, i've converted this pr to draft. let's finalize [a link] first and come back here.",0,0.9819221496582031
1686156081,7163,DmitriyLewen,2024-07-22T08:17:24Z,this is good idea :thumbs_up:,1,0.9335904717445374
1738167679,7163,DmitriyLewen,2024-08-30T08:08:37Z,"i updated this pr using `--detection-priority` flag. take a look, when you have time, please.",0,0.9786916375160217
1740651841,7163,knqyf263,2024-09-02T10:02:38Z,what is this for?,0,0.9697429537773132
1740652896,7163,knqyf263,2024-09-02T10:03:31Z,"nit: it's no big deal, but if `useminversion == false`, we don't need to get the toolchain version. we may want to evaluate `useminversion` first before getting the toolchain version.",0,0.9829492568969727
1740671014,7163,DmitriyLewen,2024-09-02T10:18:46Z,hm... maybe i checked something and didn't remove it. thanks for showing me this. removed in [a link],1,0.9325699210166931
1740671318,7163,DmitriyLewen,2024-09-02T10:19:01Z,it make sense. updated in [a link],0,0.9754645824432373
1745307526,7444,afdesk,2024-09-05T11:40:30Z,can we update `resource`? i think it's a bit hard to keep 2 similar structs.,0,0.7505289316177368
1745312113,7444,afdesk,2024-09-05T11:44:11Z,also there are no tests for this case.,0,0.9760692119598389
1746837564,7444,smtan-gl,2024-09-06T09:37:50Z,"thanks for the feedback, i'm not sure why i assumed the `resource` struct was used by other packages in trivy, but it doesn't seem to be the case. i'll work on updating the `resource` struct accordingly. regarding the tests, i wanted to get feedback on the approach before proceeding. i'll focus on adding the tests next.",1,0.611505389213562
1764780167,7444,afdesk,2024-09-18T10:04:04Z,the test uses `assert.equal`. is it possible don't use `reflect`?,0,0.9864864349365234
1764782128,7444,afdesk,2024-09-18T10:05:31Z,do you really need a separated test instead of `testreport_consolidate`?,0,0.9874282479286194
1766236681,7444,smtan-gl,2024-09-19T06:34:00Z,that's possible. i've [a link] to use `assert.equal` and consolidated it in `testreport_consolidate`.,0,0.9863947629928589
1766237138,7444,smtan-gl,2024-09-19T06:34:30Z,that's possible. i've made the change [a link].,0,0.9841740131378174
1766350295,7444,afdesk,2024-09-19T07:57:25Z,great! thanks!,1,0.9903974533081055
1308934349,5059,chen-keinan,2023-08-29T14:34:28Z,maybe replace the wording `object` with `resource`,0,0.9872933626174927
1308938646,5059,chen-keinan,2023-08-29T14:37:39Z,nit: [code block],0,0.9873168468475342
1309004405,5059,thapabishwa,2023-08-29T15:23:42Z,done.,0,0.9759407639503479
1309004605,5059,thapabishwa,2023-08-29T15:23:52Z,done,0,0.9764507412910461
1311321092,5059,knqyf263,2023-08-31T09:00:12Z,we have a lot of flags now and want to assign shorthand to frequently used flags.,0,0.9714445471763611
1311365921,5059,thapabishwa,2023-08-31T09:34:49Z,removed the shorthand for `--exclude-owned` flag.,0,0.9818440079689026
1537340243,6357,DmitriyLewen,2024-03-25T10:05:48Z,we can simply add `requires` to `lockfile`. [code block] in this case we will unmarshal file once.,0,0.9898618459701538
1537355933,6357,DmitriyLewen,2024-03-25T10:18:55Z,iiuc we can add line numbers: [code block],0,0.9861353635787964
1537365419,6357,DmitriyLewen,2024-03-25T10:26:51Z,"one functions for: - v1 : `lib, err := tolibrary(node.ref, node.startline, node.endline)` - v2 : `lib, err := tolibrary(req.dep, req.startline, req.endline)` [code block]",0,0.9876211285591125
1537366115,6357,DmitriyLewen,2024-03-25T10:27:25Z,"handle error, please.",0,0.967033863067627
1550461330,6357,dus7eh,2024-04-03T20:47:49Z,i can try to put this info. not sure if that's useful tho - it's going to point to a single line :),1,0.9442957639694214
1550593409,6357,dus7eh,2024-04-03T22:23:23Z,fixed,0,0.975196123123169
1550593603,6357,dus7eh,2024-04-03T22:23:35Z,added line info,0,0.9823828935623169
1550593752,6357,dus7eh,2024-04-03T22:23:43Z,fixed,0,0.975196123123169
1550593975,6357,dus7eh,2024-04-03T22:23:54Z,refactored,0,0.9850403070449829
1550594126,6357,dus7eh,2024-04-03T22:24:06Z,fixed,0,0.975196123123169
1550594245,6357,dus7eh,2024-04-03T22:24:14Z,fixed,0,0.975196123123169
1565342165,6357,DmitriyLewen,2024-04-15T08:04:06Z,dependency graph is only supported for version v1. add note please [code block],0,0.9876590371131897
1568001160,6357,dus7eh,2024-04-16T22:25:37Z,fixes applied,0,0.9876499772071838
1577369532,6357,knqyf263,2024-04-24T06:52:46Z,can we split a line? [code block],0,0.9893116354942322
1579260496,6357,dus7eh,2024-04-25T10:41:31Z,updated and rebased to resolve conflicts,0,0.981971800327301
1718022223,7339,nikpivkin,2024-08-15T06:31:17Z,"should only those finds that exactly match the start and end of the lines be ignored? or is it better to ignore everything between the passed position? for example, i want to ignore a misconfig that is found inside a terraform block, but i want to specify the position of the block.",0,0.9820990562438965
1718022716,7339,nikpivkin,2024-08-15T06:32:02Z,you can log the start and end separately,0,0.9868276119232178
1718026943,7339,nikpivkin,2024-08-15T06:38:44Z,id already exists in findingsresults.,0,0.9872402548789978
1718470689,7339,michael-a-shelton,2024-08-15T14:20:31Z,i went back and forth here and thought it made more sense to be explicit to match the lines of the finding itself instead of a range.,0,0.960519552230835
1718471594,7339,michael-a-shelton,2024-08-15T14:21:16Z,fair enough. i can make that adjustment.,0,0.8721569776535034
1718477201,7339,michael-a-shelton,2024-08-15T14:24:40Z,"i also debated on this quite a bit. the only scanner passing multiple ids is the misconf scanner. i decided to avoid refactoring all the other scanner functions up the stack to support a slice of strings for ids, when they only had one, and instead just pass the single string down. i could just as well refactor those and move the for loop from the misconf method into the match method, but felt that a bit clunky to put a for loop over all other scanners, when only one uses it (even though it would just be one iteration for the others). i'm open to making that change if we want to make the method signature friendlier. open to feedback here.",-1,0.5087457299232483
1735377618,7339,simar7,2024-08-28T23:05:03Z,-a-shelton could you give an example of why passing a range isn't ideal? just trying to understand. to me it feels passing an explicit range would have more flexibility.,0,0.9121253490447998
1735378187,7339,simar7,2024-08-28T23:06:21Z,"i guess to me this log line would change if the results are ignored in a range (start:end, would be one line like you currently have) but if not probably best to log separately.",0,0.984529435634613
1737422736,7339,michael-a-shelton,2024-08-29T23:04:46Z,"for instance, someone typos the ""end_line"" in their ignore file. maybe they meant to do: [code block] but instead, fat-fingered the number on end_line so it was something like: [code block] this would still pass if using a range, but should actually instead fail as now you're ignoring more than intended. the start and end line numbers are actually how the finding itself is captured as well, so those fields are there mirroring the causemetadata struct for the misconf: [a link]",0,0.9457255005836487
1747185727,7339,michael-a-shelton,2024-09-06T14:07:04Z,updated!,0,0.8773723840713501
1747665266,7339,simar7,2024-09-06T20:13:24Z,shouldn't this be zero inclusive? what if start or end are actually 0?,0,0.9572198987007141
1747977786,7339,michael-a-shelton,2024-09-07T06:43:15Z,"the only place i found references to a possible usage of 0 in a test for either start or end line were here: [a link] in this scenario the start and end line checks would be skipped. there are also references to `>0` here: [a link] i am trying to think of a scenario where there is a line 0 in a finding, but can't come up with one. it should always start with 1, no?",0,0.9651437997817993
1750842107,7339,simar7,2024-09-09T19:49:12Z,you're right.,0,0.9367263913154602
1917828923,8244,knqyf263,2025-01-16T06:44:24Z,nit [code block],0,0.9879410862922668
1917832664,8244,knqyf263,2025-01-16T06:46:15Z,i think we should explain how it works with some examples. how about orders? when does trivy fall back into the next mirror? is the original registry used? and so on.,0,0.976469099521637
1917835281,8244,knqyf263,2025-01-16T06:48:52Z,"currently, this page shows the default values. i'm wondering if it confuses users. since the document describes an example, isn't it enough?",0,0.9304693341255188
1917836986,8244,knqyf263,2025-01-16T06:51:02Z,i'm impressed it works!,1,0.988013744354248
1917837638,8244,knqyf263,2025-01-16T06:51:51Z,smart :clapping_hands:,1,0.625194251537323
1917841243,8244,knqyf263,2025-01-16T06:55:38Z,"instead of nesting it, i prefer adding another method, like `tryref`, `tryimage` or something like that.",0,0.95932537317276
1917853320,8244,knqyf263,2025-01-16T07:09:02Z,"nit: i thought `ctx` would be used later in the function, but actually just used to get a registry string. imo, it's better not to define a new variable here to reduce confusion. but it's no big deal. you can decide it. [code block]",0,0.9526162147521973
1917855326,8244,knqyf263,2025-01-16T07:11:17Z,this means users specified the wrong registry. i think we should return an error to notify users. what do you think?,0,0.7954570055007935
1917857819,8244,knqyf263,2025-01-16T07:14:11Z,"i want to make sure that container runtimes work in the same way. even if it fails due to an authentication error, do they try the next mirror?",0,0.9845257997512817
1919543753,8244,DmitriyLewen,2025-01-17T04:41:27Z,"we are not adding flags support, so we need to include something in the config file docs. but honestly, i added this example because i could come up with good lines for an empty `map[string][]string` this is a yaml file, and the `go` (`map[string][]string`) syntax can be confusing to users. i can use `<..>` in the example. eg: [code block] let me know if you have another idea.",0,0.8840512633323669
1919613741,8244,DmitriyLewen,2025-01-17T06:14:08Z,added testcase - [a link] full error trace: [code block],0,0.9880895018577576
1919614368,8244,DmitriyLewen,2025-01-17T06:15:08Z,it make sense. thanks! updated in [a link],1,0.9844300746917725
1919614544,8244,DmitriyLewen,2025-01-17T06:15:24Z,updated in [a link],0,0.9845641851425171
1919614730,8244,DmitriyLewen,2025-01-17T06:15:41Z,added order and example - [a link] + [a link],0,0.984731912612915
1919700914,8244,knqyf263,2025-01-17T07:56:48Z,"this document well describes how the configuration should look. [a link] imho, `config-file.md` can be simply `mirros:` because it's the default value. [code block] but your approach also looks good. [code block] in that case, we may want to [a link] for examples and generate `config-file.md` from them rather than [a link]",1,0.7011715173721313
1919704167,8244,knqyf263,2025-01-17T07:59:54Z,"i just wanted to ask if docker, containerd or other runtimes also fall back into the next mirror with authentication errors. i'm asking this because i was wondering if they might try the next one only with 404 error.",0,0.9260876178741455
1919786594,8244,DmitriyLewen,2025-01-17T09:09:54Z,i misunderstood you. i will check it and write to you,-1,0.9391042590141296
1919803756,8244,DmitriyLewen,2025-01-17T09:23:05Z,"looks like you are right - we can use `mirrors: ` value. also, frankly, i don't want to introduce a new flag field to use it only for one flag (given that we can get by with documentation). so i chose your option - [a link] i think about it too. we will think about it - if we need examples somewhere else.",0,0.9272958040237427
1919827515,8244,knqyf263,2025-01-17T09:40:05Z,"agree. if we need to generate more examples, we can implement it.",0,0.9677063822746277
1919828423,8244,knqyf263,2025-01-17T09:40:44Z,i'm sorry i should have explained to you more clearly.,-1,0.9853118658065796
1919863651,8244,DmitriyLewen,2025-01-17T10:06:04Z,"no problem :thumbs_up: i started local docker registry with authentication, configured it as mirror in `docker`, and tried to pull an image. i can confirm that `docker` checks the original registry if the mirrors return a `401` error.",0,0.9712308049201965
1919885431,8244,knqyf263,2025-01-17T10:22:52Z,thanks for confirming!,1,0.9222665429115295
1920208464,8244,nikpivkin,2025-01-17T13:40:34Z,it's always false :),1,0.8650573492050171
1920209696,8244,nikpivkin,2025-01-17T13:41:30Z,same as above,0,0.9772257208824158
1921820497,8244,DmitriyLewen,2025-01-20T05:34:57Z,nice catch! i missed that when created tryimage and tryget functions. fixed in [a link],1,0.992929995059967
1921820538,8244,DmitriyLewen,2025-01-20T05:35:01Z,fixed in [a link],0,0.98800128698349
767215378,1287,knqyf263,2021-12-12T02:46:18Z,what if we define a new http transport? [code block],0,0.987758457660675
767215590,1287,knqyf263,2021-12-12T02:49:39Z,ditto,0,0.8428916931152344
767216057,1287,knqyf263,2021-12-12T02:57:17Z,i think looking up env in many places makes maintenance hard. we might want to add `-insecure` here. [a link],0,0.7093420028686523
767697522,1287,czunker,2021-12-13T12:07:19Z,thanks for the pointer. will have a look at how to rewrite this.,1,0.8191473484039307
767697559,1287,czunker,2021-12-13T12:07:22Z,with a new `transport` we would lose the defaults for the other settings: [code block] [a link],0,0.9866448044776917
767804349,1287,czunker,2021-12-13T14:25:57Z,"i hope, i found all the needed pieces. please have a look.",0,0.5385518670082092
803392653,1287,knqyf263,2022-02-10T08:01:10Z,"what if we define the http client directly? ``` client := &http.client{ transport: &http.transport{ tlsclientconfig: &tls.config{ insecureskipverify: true, }, }, }",0,0.9844083189964294
803394405,1287,knqyf263,2022-02-10T08:03:38Z,why do we need to return an error?,0,0.9477986097335815
803394804,1287,knqyf263,2022-02-10T08:04:13Z,we should add a test with an insecure https server.,0,0.9579442739486694
803395862,1287,knqyf263,2022-02-10T08:05:50Z,the same as the cache client,0,0.9872612953186035
803396233,1287,knqyf263,2022-02-10T08:06:23Z,looks like these cases don't test anything since the error is always nil.,0,0.9546236395835876
803599986,1287,czunker,2022-02-10T11:58:17Z,good catch. thanks. that's a left over from some other implementation i tried.,1,0.9857016801834106
803600192,1287,czunker,2022-02-10T11:58:33Z,good catch. thanks. that's a left over from some other implementation i tried.,1,0.9857016801834106
803601880,1287,czunker,2022-02-10T12:00:47Z,"this way, we would lose the other defaults of `http.transport`. when i clone the default, i only change the `insecureskipverify` setting.",0,0.9785943031311035
803656306,1287,knqyf263,2022-02-10T13:07:51Z,i think it will be the case when we use `http.defaultclient`. `&http.client{}` should not cause any issues.,0,0.9880968332290649
804382357,1287,czunker,2022-02-11T06:21:35Z,changed that in the latest commits.,0,0.9804162383079529
804382478,1287,czunker,2022-02-11T06:22:04Z,re-wrote the tests in the latest commits.,0,0.984539806842804
804382611,1287,czunker,2022-02-11T06:22:30Z,re-wrote the tests in the latest commits to connect against an insecure tls server.,0,0.977946937084198
1657367758,7039,ericstj,2024-06-27T15:43:59Z,"packages which don't contribute runtime assets to the application cannot contribute to a runtime vulnerability since nothing from the package persists at runtime. runtime assets can be identified by examining the targets section since that's what the host uses to probe for those. there are lots of ways packages might be referenced by an app and excluded from runtime. the package might be referenced with `excludeassets=""runtime""`, the package might have been superseded by the .net runtime itself and excluded but the build, or the package might have overlapping assets with another package that is preferred. in all cases - if it's bits don't make it to the final app it cannot be a source of a vulnerability in that app.",0,0.9762436747550964
1658107400,7039,DmitriyLewen,2024-06-28T03:54:24Z,"in general i think the same way. thank you for detailing this :+1: there are times when users want to see dependencies that are not used at runtime (we encountered this in nodejs). that's why we've added options to allow users to see all dependencies (we hide them by default). for example, this may be needed not for scanning vulnerabilities, but for generating a sbom",1,0.9788605570793152
1658108175,7039,DmitriyLewen,2024-06-28T03:55:23Z,do we need to check this case? can you write more info about this? [a link] don't have info about `excludeassets` field.,0,0.9865860939025879
1658126726,7039,knqyf263,2024-06-28T04:32:26Z,"i would add more contexts. as interest in supply chain security grows, there is a demand to understand vulnerabilities in packages that are used for ci/cd and other purposes, even if they are not included in production applications and are used only for development. if the library is not used at all, even for development purposes, there is no need to include it.",0,0.9821861982345581
1660640315,7039,knqyf263,2024-07-01T08:06:12Z,"since we're unfamiliar with .net core, we need your input. given the above context, do you think we don't have to save these libraries?",0,0.9817550778388977
1669027855,7039,ericstj,2024-07-08T17:31:35Z,"you can find the docs on excludeassets [a link]. they may be interesting for informational purposes, but for the actual cve which apply to runtime libraries (the vast majority of cves) they are not interesting. there could be a case where a package only provides development time assets. for instance - a build target that inserts code into the binary. that package might appear without any runtime assets, however such a package is not the norm. such a package could also remove all traces from the deps.json if it wanted to, so trying to use that for detecting it isn't a legitimate use case. the deps.json isn't a manifest of the things used when building the project - it's a manifest to be used by the runtime to determine what it can load.",0,0.9699082970619202
1669587056,7039,DmitriyLewen,2024-07-09T02:55:13Z,".net uses so many files that it can get confusing... iiuc `packagereference` field is related with `packages.config` and `*packages.props` files (`xml` format). can this field be used for *.deps.json files? if there are cases when non-runtime dependencies might be needed - i think we need to hide them (instead of remove them). as [a link] devops engineers may need to check these packages, for example in pipelines.",0,0.9281650185585022
1669640170,7039,knqyf263,2024-07-09T03:49:53Z,"in other ecosystems, it is common to include test assertion libraries as development libraries. and while these libraries are not used at runtime, their vulnerability is important. this example you gave is certainly not legitimate, but are libraries used for development purposes in general use such as the one i gave not included in deps.json?",0,0.98375004529953
1674566823,7039,ericstj,2024-07-11T19:36:37Z,"`deps.json` isn't the file to see all dependencies that might be used at development time. it's used for loading binaries at runtime. at development time projects use `packagereference` (direct references) in the project, which gets computed to the full package graph in `project.assets.json`. the old format `packages.config` had a flattened graph in the single file and was really just a log for the package modifications that were made to the project file separately. these two files are better for identifying development dependencies - and are used by component governance for that purpose. they are present on the build machine / source control. there's also the new sbom infrastructure which is better suited as a catch all. they may or may not be included, it depends on the type of package and how its referenced. `deps.json` is only used for telling the runtime what to load. when a library is present you can be certain it's used - so if that library/package is vulnerable it should be flagged. if the package is listed in the deps file, you can be certain it was at least referenced - but it may have been eliminated by the build and not loadable at runtime - so it should not be flagged. you can't assume that a package being absent means it wasn't used at dev time since the deps.json doesn't list all development time dependencies.",0,0.9749265313148499
1675043052,7039,DmitriyLewen,2024-07-12T02:53:02Z,hm.. it looks like that we can remove non-runtime dependencies. also we need to write in docs that trivy only detects runtime deps from `*.deps.json`,0,0.9573724865913391
1675404379,7039,knqyf263,2024-07-12T06:56:41Z,"thanks for your explanation. it might be similar to go binary scanning. it doesn't have any development modules, while go.mod includes it. we can just delete non-runtime dependencies and improve it later if we see any feedback.",1,0.9134327173233032
1677268895,7039,DmitriyLewen,2024-07-15T02:38:16Z,done :+1: can you review this pr?,0,0.5802164673805237
1679654555,7039,ericstj,2024-07-16T15:38:48Z,looks to me like it checks if they are not empty. [code block],0,0.9646298289299011
1679657918,7039,ericstj,2024-07-16T15:41:03Z,"[code block] i think this function returns true if the library **contains** one of these sections, or if the library is completely missing from the section. the behavior looks correct, just the comment seems inverted.",0,0.987722635269165
1679808424,7039,ericstj,2024-07-16T17:39:10Z,would it be possible to add another testcase that references some of the commonly reported false positives and proves that those aren't flagged? for example - a deps file listing a vulnerable version of `system.net.http` etc. here's a sample deps file: [a link] this was created with [code block] this shows that all the old packages (some vulnerable) making up the netstandard surface area are all excluded when targeting the latest frameworks which provide inbox support for all those package.,0,0.9887524247169495
1680569587,7039,DmitriyLewen,2024-07-17T07:34:38Z,"i updated this function, but forgot to update comment. thanks! fixed in [a link]",1,0.9837968945503235
1680569724,7039,DmitriyLewen,2024-07-17T07:34:44Z,fixed in [a link],0,0.98800128698349
1680571841,7039,DmitriyLewen,2024-07-17T07:36:19Z,your test file is too large. so i only inserted `system.net.http` and `netstandard.library` libraries into test file. - [a link],0,0.9683650135993958
392549075,435,simar7,2020-03-14T02:33:25Z,note to self: change this to master once [a link] is merged.,0,0.9874994158744812
392698543,435,knqyf263,2020-03-15T18:15:43Z,"if metadata.nextupdate is nil, it causes panic.",0,0.5504729747772217
392699105,435,knqyf263,2020-03-15T18:22:17Z,"i feel the default output should be human-readable. when we receive `-f json`, we should display it as a json format.",0,0.9854161143302917
392699197,435,knqyf263,2020-03-15T18:23:19Z,we need to take `-cache-dir` option.,0,0.9882041215896606
392699352,435,knqyf263,2020-03-15T18:25:26Z,"it sometimes returns an error. even if we don't handle it, it might be better to display a warning/error message.",0,0.9640387296676636
392700058,435,knqyf263,2020-03-15T18:34:07Z,"type in db.metadata is just int. if we display it, should we convert it to string such as ""light"".",0,0.9894893765449524
392700359,435,knqyf263,2020-03-15T18:37:49Z,[code block] i feel `version` is not necessary here.,0,0.9831316471099854
392700990,435,knqyf263,2020-03-15T18:46:09Z,"if db isn't in a local file system, this shows like the following. is it intended? [code block]",0,0.9850358963012695
393244644,435,knqyf263,2020-03-16T18:54:58Z,`c.app.version` may be better here,0,0.9739413857460022
393341202,435,simar7,2020-03-16T22:21:02Z,yeah like we discussed it has been switched now: [a link],0,0.9681532979011536
393346569,435,simar7,2020-03-16T22:31:59Z,"this isn't the case today. the output is the same regardless of the `-f` option specified. [code block] ~~i'm not aware of a way where we can parse the `-f` flag at initialization time with this cli framework. i also think this output is simple enough to be human readable even in json format and we could avoid logic complexity.~~ there is actually a way, using `c.string(""format"")`. i can switch to using that.",0,0.9658158421516418
393354836,435,simar7,2020-03-16T22:57:25Z,fixed 0952d709b17878654fad853c46de616984c4b2a5,0,0.9765157103538513
393371806,435,simar7,2020-03-16T23:48:03Z,yes good point. addressed here [a link],1,0.9263296723365784
393372340,435,simar7,2020-03-16T23:50:05Z,fixed here [a link],0,0.9879476428031921
393376339,435,simar7,2020-03-17T00:04:39Z,type names fixed here: [a link],0,0.987247884273529
393377493,435,simar7,2020-03-17T00:08:47Z,if we handle the error like this [a link] then we would have something like: `unable to display current version: unexpected end of json input` what do you prefer? i have no strong opinions.,-1,0.9082589745521545
393377552,435,simar7,2020-03-17T00:09:02Z,fixed.,0,0.9810503125190735
393715025,435,knqyf263,2020-03-17T14:21:30Z,"ah, i meant `vulnerabilitydbversion` is empty here. we should show a version of trivy anyway even if db is not there. you tried not to show nextupdate and updatedat if they are zero value, but you didn't do anything for `vulnerabilitydbversion`. i just imagined you wanted to display something like this :grinning_face_with_smiling_eyes: [code block] never mind. it doesn't matter even if empty `vulnerabilitydbversion` is displayed.",0,0.482403427362442
394582691,435,knqyf263,2020-03-18T19:16:31Z,[code block] you have to pass c.app.version to this function.,0,0.9885193705558777
394587156,435,knqyf263,2020-03-18T19:24:51Z,"i'm sorry i didn't mean a table format, but a plain text. also, the current table is not easy to see. [code block] i think `docker version` is preferred here. [code block] i know the default value of `-format` is `table`, but i think we can ignore it in this case.",-1,0.9853100776672363
394687439,435,simar7,2020-03-18T23:01:24Z,fixed here [a link],0,0.9879476428031921
394687723,435,simar7,2020-03-18T23:02:17Z,i already do this [a link] what's missing?,0,0.9761741161346436
394693291,435,simar7,2020-03-18T23:19:40Z,fixed here [a link],0,0.9879476428031921
394852461,435,knqyf263,2020-03-19T08:14:46Z,"sorry, i didn't notice.",-1,0.9838168621063232
394853324,435,knqyf263,2020-03-19T08:16:28Z,`library.go` is the file for the programming language library. it is better to put this struct in another file.,0,0.985474705696106
395391778,435,simar7,2020-03-20T00:34:02Z,i moved it out to `app.go` in favour of temporal locality [a link],0,0.9881917834281921
820263761,1799,knqyf263,2022-03-06T17:30:11Z,looks like `sbom` doesn't need `--exit-code` since this option makes the job fail when critical vulnerabilities are found.,0,0.9809902906417847
820265288,1799,knqyf263,2022-03-06T17:43:22Z,"i'd like to return an error in this case. like ""invalid artifact type, ""docker:"", ""dir:"" or ""artifact:"" are allowed"" or something like that.",0,0.9858668446540833
820266420,1799,knqyf263,2022-03-06T17:54:22Z,"in addition to usage, we may want to add a description since this subcommand is a bit complex. [code block]",0,0.9813302159309387
820266688,1799,knqyf263,2022-03-06T17:56:48Z,trivy also supports podman and we're trying to add support for containerd. how about `image`? [code block],0,0.9852737784385681
820494933,1799,tamirkiviti13,2022-03-07T08:56:44Z,"i don't want the artifact type prefix to be mandatory. one of the goals of `trivy sbom` as a dedicated subcommand is to be able to determine the artifact type by itself. i added the artifact type prefix for edge cases (for example if you want sbom for ubuntu image, but also have a local ubuntu directory, so you can specify exactly what you want trivy to generate sbom for)",0,0.9742237329483032
820644836,1799,knqyf263,2022-03-07T12:09:46Z,`table` and `template` don't make sense. we should restrict formats that can be specified.,0,0.9196569919586182
820649136,1799,knqyf263,2022-03-07T12:16:08Z,"i think it is confusing and makes debugging harder for users. filesystem scanning also supports a single file, so we don't know if it is an image archive or a dependency file. and if your local filesystem accidentally has the same file name as an image name you want to scan, the scanning will fail. i'm sure users will get confused. users must know what kind of artifact they want to scan. adding a prefix is not a big effort. i feel that the disadvantages of the confusion without prefixes would be greater.",-1,0.892633318901062
820794843,1799,tamirkiviti13,2022-03-07T15:06:06Z,"i completely understand this point of view. however, i believe the user experience here is more important than the specific edge case. we can reflect the process better with dedicated logs, something like - ""searching for artifact ...” “generating sbom for image “ :latest” or “generating sbom for package “ ” ... plus, to expect trivy users to figure out the right flag to use might be confusing on its own. i think that the main goal of the dedicated sbom command is to let the user to simply generate them on a result of a build process. without inferring the resulting artifact type. i think we should consider keeping the artifact type detection by trivy",0,0.6278544664382935
820827884,1799,knqyf263,2022-03-07T15:38:31Z,"what is the benefit of removing prefixes for users? do you think adding prefixes is a big effort? i think it is no big deal, so it is better to reduce confusion.",0,0.9549753069877625
821046662,1799,tamirkiviti13,2022-03-07T19:46:14Z,"i don't think that we need to remove the prefixes, just to make it optional :beaming_face_with_smiling_eyes: i think that not requiring the prefixes simplifies the command for the users. in my opinion, this is a very important advantage, and the main goal of creating a dedicated subcommand for sbom generation. another benefit of the ""auto-detection"", is that it makes the command generic, the user doesn't need to use different commands for different types, he has one unified command. then, if you use it in a ci pipeline for example, you can make it generic and you don't have to customize the command for each pipeline. the use of a flag in a cli is to let the user customize the configuration of the command execution, like the sbom format or quite mode. the artifact type is not up to the user to decide, it is a given thing. the user can't say that a directory is an image (for example). the only reason i added the prefix option is to handle the spoken edge case - the user can use the prefixes to overcome it, but we want that by default he won't need it. we want to let the user to generate sbom in minimum effort, and i think the prefixes add unnecessary effort.",0,0.7854363322257996
821426279,1799,knqyf263,2022-03-08T08:26:05Z,"no, i mean users can remove prefixes (optional) and how important it is for users. i'd like to know why it is very important. as far as i understand, the main goal is generating multiple sbom formats for multiple formats. the ""auto-detection"" sounds like another thing. i don't say we should not have `sbom` subcommand. we have one unified command regardless of prefixes. i'm asking how big the effort is. if users don't know what they want to scan, i agree we should detect it automatically. but they must know it. how hard do they specify it? i feel like the optional prefixes reduce very small effort and bring confusion. if you can tell me how hard it is, i'll be convinced:thinking_face: another idea is that the artifact type will be a container image by default and they can overwrite it with `fs` or others with the prefix.",0,0.8464261293411255
821585478,1799,tamirkiviti13,2022-03-08T11:45:29Z,"i don't think that container image as default is a good idea, it is more confusing. i removed the auto-detection and updated the documentation - now it returns error when the artifact type prefix is unknown (or empty)",0,0.63105708360672
822384544,1799,knqyf263,2022-03-09T08:12:46Z,"i'm not saying the optional prefix is a bad idea, but we should sort out the pros and cons. actually, i know it is optional in some tools, while required in other tools. we should discuss the trade-off. i'm curious why you think it is very important and we can make it optional if it makes sense.",0,0.7647629380226135
830578785,1799,knqyf263,2022-03-20T08:32:56Z,this tab is required. [a link],0,0.9864274859428406
830578896,1799,knqyf263,2022-03-20T08:33:44Z,nit [code block],0,0.9879410862922668
830579306,1799,knqyf263,2022-03-20T08:37:09Z,"we can define this flag under sbom flags at 546-553 line since this flag is unique for sbom subcommand. also, we should have another validation for sbom.",0,0.9875181317329407
830579382,1799,knqyf263,2022-03-20T08:37:45Z,this description looks stale. we don't have a prefix now.,-1,0.890444815158844
830579575,1799,knqyf263,2022-03-20T08:39:01Z,we have to check if this type is valid.,0,0.9812927842140198
830579663,1799,knqyf263,2022-03-20T08:39:53Z,"also, we need to support git repositories.",0,0.9867357611656189
830579788,1799,knqyf263,2022-03-20T08:40:49Z,"also, we can put it under `newsbomcommand`.",0,0.9890152812004089
830853531,1799,tamirkiviti13,2022-03-21T08:29:15Z,what do you mean in validation for sbom?,0,0.9853314161300659
830897429,1799,knqyf263,2022-03-21T09:26:51Z,i mean the same as below. [a link],0,0.9836090803146362
826896713,1832,knqyf263,2022-03-15T12:05:08Z,the path is wrong. it would be like [code block] i'm not sure about nokogiri. please make the path look correct.,-1,0.5207945704460144
826899565,1832,knqyf263,2022-03-15T12:08:52Z,"if it is not a requirement from cyclonedx, i think we should not sort vulns by id so that vulns can keep the same order as trivy's other results such as json.",0,0.9860126376152039
826916933,1832,knqyf263,2022-03-15T12:29:46Z,just a question. is `cdx.advisory` exported as `externalreferences`?,0,0.9877979159355164
826917733,1832,knqyf263,2022-03-15T12:30:44Z,what if we remove these lines and return an empty slice? is it problematic?,0,0.9417913556098938
826918407,1832,knqyf263,2022-03-15T12:31:28Z,looks like `%s` is fine in this case. [code block],0,0.9770593047142029
826918862,1832,knqyf263,2022-03-15T12:32:01Z,nit [code block],0,0.9879410862922668
826919161,1832,knqyf263,2022-03-15T12:32:19Z,`i` looks like an index.,0,0.9823958277702332
826932156,1832,knqyf263,2022-03-15T12:47:11Z,"if the data source has severity, rating will be duplicated?",0,0.9825531244277954
826934671,1832,knqyf263,2022-03-15T12:49:59Z,"we probably should not remove vendorseverity from our result. then, we can use it for this field. [a link]",0,0.9861769080162048
826937172,1832,knqyf263,2022-03-15T12:52:44Z,looks like we don't need to convert string to types.severity. [code block],0,0.9758735299110413
826943342,1832,knqyf263,2022-03-15T12:59:31Z,"also, specversion should be updated.",0,0.9871921539306641
826964143,1832,masahiro331,2022-03-15T13:20:55Z,"in the future, when outputting file hash values as cyclonedx, the processing results must always be equal.",0,0.9865397810935974
826966406,1832,masahiro331,2022-03-15T13:23:07Z,thank you i will fix.,1,0.8248959183692932
826971282,1832,masahiro331,2022-03-15T13:27:39Z,i may not have understood the question correctly. i think that vulnerability advisories and external references are different things. [a link],0,0.7788231372833252
826981147,1832,masahiro331,2022-03-15T13:37:04Z,"because vendor advisory does not always return the cwe-ids, i returned nil. although not explicitly stated in the documentation probably, by returning an empty array, the absence of a cwe-id is clearly expressed.",0,0.9897941946983337
826983416,1832,masahiro331,2022-03-15T13:39:08Z,thank you i will fix that.,1,0.7576737403869629
826983505,1832,masahiro331,2022-03-15T13:39:13Z,thank you i will fix that.,1,0.7576737403869629
826984222,1832,masahiro331,2022-03-15T13:39:54Z,thank you i will fix that.,1,0.7576737403869629
826991806,1832,masahiro331,2022-03-15T13:46:34Z,thank you ! i forgot about it.,1,0.9668253660202026
826992085,1832,masahiro331,2022-03-15T13:46:49Z,thank you i will fix that.,1,0.7576737403869629
827000368,1832,masahiro331,2022-03-15T13:54:06Z,"i understood. i remove that line. then, use that rather than calculating from score.",0,0.9807555079460144
827029081,1832,masahiro331,2022-03-15T14:19:25Z,the process was incorrect. processing in the case of no cvss has been added.,0,0.8889943957328796
830583399,1832,knqyf263,2022-03-20T09:09:33Z,i mean the result is already sorted. [a link],0,0.9862594604492188
830583648,1832,knqyf263,2022-03-20T09:11:22Z,you can see `type: advisories` in `externalreferences` here. what is the difference between `advisories` and `externalreferences`? [a link],0,0.9871382713317871
830584759,1832,knqyf263,2022-03-20T09:19:59Z,i suggested as below. [a link],0,0.9859573841094971
830585737,1832,masahiro331,2022-03-20T09:27:18Z,thank you! understood...,1,0.9824747443199158
830900506,1832,masahiro331,2022-03-21T09:30:31Z,[a link] vulns are temporarily unsorted by map.,0,0.9783530235290527
928206854,2567,knqyf263,2022-07-24T06:58:36Z,do we need to bump the version?,0,0.9814852476119995
928206858,2567,knqyf263,2022-07-24T06:58:41Z,ditto,0,0.8428916931152344
928210175,2567,otms61,2022-07-24T07:26:17Z,"no, we don't. i updated go.mod unintentionally. i checked again, and go.mod needs no modifications.",0,0.9517996311187744
928210322,2567,otms61,2022-07-24T07:27:11Z,same [a link],0,0.9862238168716431
928778103,2567,knqyf263,2022-07-25T11:31:18Z,"add this link, please. [a link]",0,0.9825353622436523
928780009,2567,knqyf263,2022-07-25T11:33:34Z,do we need it?,0,0.9835900664329529
928781804,2567,knqyf263,2022-07-25T11:35:51Z,"it is a nitpick, but we're recently trying to comply with the same convention. [a link] [code block]",0,0.98453289270401
928781972,2567,knqyf263,2022-07-25T11:36:06Z,nit: ditto [code block],0,0.9793906211853027
928783046,2567,knqyf263,2022-07-25T11:37:22Z,"nit: imho, `require` is better here as all the subsequent assertions will fail anyway when it returns an error. [code block]",0,0.9860416054725647
928783225,2567,knqyf263,2022-07-25T11:37:35Z,ditto,0,0.8428916931152344
928785472,2567,knqyf263,2022-07-25T11:40:19Z,can we add a keyless section?,0,0.9895490407943726
928786826,2567,knqyf263,2022-07-25T11:41:55Z,[code block] and put it at the bottom. [code block],0,0.9881316423416138
929424443,2567,otms61,2022-07-26T00:31:53Z,alright. i've added the link.,0,0.9771889448165894
929424938,2567,otms61,2022-07-26T00:33:15Z,"sorry, i forgot to remove it.",-1,0.9844874739646912
929425199,2567,otms61,2022-07-26T00:33:59Z,i've fixed it.,0,0.9759785532951355
929425239,2567,otms61,2022-07-26T00:34:07Z,i've fixed it.,0,0.9759785532951355
929425548,2567,otms61,2022-07-26T00:35:03Z,it makes sense. i've fixed it.,0,0.9641695618629456
929425664,2567,otms61,2022-07-26T00:35:24Z,i've fixed it.,0,0.9759785532951355
929425925,2567,otms61,2022-07-26T00:36:11Z,alright. i've added a keyless signing section.,0,0.9824902415275574
929425980,2567,otms61,2022-07-26T00:36:20Z,i've fixed it.,0,0.9759785532951355
930748561,2567,knqyf263,2022-07-27T08:05:12Z,to align with their doc. [a link] [code block],0,0.9880258440971375
930750159,2567,knqyf263,2022-07-27T08:06:54Z,we may have more predicates in the future. [code block],0,0.9882660508155823
930755264,2567,knqyf263,2022-07-27T08:12:02Z,this pr got merged. but we can keep our own structs so that we won't depend on cosign only for those small structs.,0,0.9877898693084717
931082952,2567,otms61,2022-07-27T13:45:14Z,done,0,0.9764507412910461
931083181,2567,otms61,2022-07-27T13:45:25Z,done,0,0.9764507412910461
931083299,2567,otms61,2022-07-27T13:45:31Z,done,0,0.9764507412910461
931086854,2567,otms61,2022-07-27T13:48:39Z,i have added comments on the background and references.,0,0.9845794439315796
1104440430,3599,AndreyLevchenko,2023-02-13T12:59:54Z,remote mode should support `dockerhost` properly,0,0.987621009349823
1104452845,3599,AndreyLevchenko,2023-02-13T13:11:53Z,it's better to pass all options here. see `tryremote(...)`,0,0.9855198264122009
1104883374,3599,aswath-s-tw,2023-02-13T18:41:15Z,"not sure how `dockerhost` will be an option to scan a remote docker repository like dockerhub etc. i guess leaving it as `""""` (empty) is fine. please do correct me if i'm wrong.",0,0.9499548673629761
1104883643,3599,aswath-s-tw,2023-02-13T18:41:32Z,:check_mark_button:,0,0.9869791269302368
1104883745,3599,aswath-s-tw,2023-02-13T18:41:38Z,:check_mark_button:,0,0.9869791269302368
1105716879,3599,AndreyLevchenko,2023-02-14T12:02:47Z,"ah right, i mixed it up with client server mode. sorry for confusion",-1,0.9877524375915527
1105718544,3599,aswath-s-tw,2023-02-14T12:04:23Z,marking this as resolved !,0,0.9665104150772095
1791265605,7664,DmitriyLewen,2024-10-08T06:22:23Z,`--password-stdin` doesn't support `comma-separated`. but we can use `user` and `password`. if we don't want use a multiple credentials - we need to say about that in docs: [a link],0,0.9870972633361816
1791266850,7664,DmitriyLewen,2024-10-08T06:23:43Z,add new pages in `mkdocs.yml`,0,0.9864253997802734
1791277373,7664,DmitriyLewen,2024-10-08T06:34:23Z,what if we also add the username here?,0,0.9857380390167236
1791295835,7664,DmitriyLewen,2024-10-08T06:50:40Z,`docker login` checks credentials: [code block] we don't do that: [code block] users will expect the same behavior. we need to add this check (if possible) or write in the docs that trivy just records the credentials without checking.,0,0.9859957098960876
1791306309,7664,DmitriyLewen,2024-10-08T06:58:49Z,"nit: `docker logic` can be used without registry (default `docker.index.io` is used in this case). i guess we are not docker, so we don't need to use the same logic. but maybe we want to write in docs that default registry for `docker` is `docker.index.io` (because i never thought about it and checked `docker/cli` to find it :grinning_face_with_smiling_eyes: ).",1,0.9244906306266785
1791361048,7664,knqyf263,2024-10-08T07:39:36Z,"there are several tools supporting authentication nowadays. most of them don't have the default registry. [code block] [code block] [code block] [code block] i don't think we need to mention `docker login` here. it's well described. [code block] if we see users who get confused, we can update the doc.",0,0.9704138040542603
1791367916,7664,knqyf263,2024-10-08T07:44:22Z,added [a link],0,0.9870722889900208
1791374085,7664,knqyf263,2024-10-08T07:48:33Z,thanks. i always forget to update it. we probably need to automate it... [a link],1,0.9131876230239868
1791382759,7664,knqyf263,2024-10-08T07:54:33Z,nice catch. it's better to exit in that case. fixed in [a link],1,0.9623182415962219
1791401840,7664,knqyf263,2024-10-08T08:07:47Z,added [a link],0,0.9870722889900208
1791490447,7664,knqyf263,2024-10-08T08:59:50Z,"i was aware of the difference, but `crane auth login` doesn't validate the credential, and i complied with it. however, it's better to do that in terms of ux, as you said. added [a link]",0,0.9807456731796265
1791517198,7664,DmitriyLewen,2024-10-08T09:17:27Z,"i think we don't need to split `--password-stdin` with `,` here: [a link] without `strings.split` we will immediately return an error on the number of users/passwords.",0,0.9887240529060364
1791679623,7664,DmitriyLewen,2024-10-08T11:13:09Z,^,0,0.4896445572376251
1791706418,7664,knqyf263,2024-10-08T11:33:20Z,thanks. i tested it locally and forgot to revert. [a link],1,0.9197775721549988
1005340280,3037,knqyf263,2022-10-26T07:54:05Z,what if using `matrix`? [a link] we can have different installation steps respectively. [a link],0,0.9883527159690857
1005341231,3037,knqyf263,2022-10-26T07:55:03Z,what is this file for?,0,0.9856863617897034
1005341805,3037,knqyf263,2022-10-26T07:55:37Z,doesn't rego work on windows?,0,0.9726263880729675
1005343510,3037,knqyf263,2022-10-26T07:57:12Z,analyzing os doesn't work on windows?,0,0.938373327255249
1005360831,3037,knqyf263,2022-10-26T08:14:26Z,"it always seems to get skipped. am i missing something? also, this package is essential for scanning alpine linux. i think we need to run the test even on windows.",0,0.9388642311096191
1005364772,3037,knqyf263,2022-10-26T08:18:14Z,don't we need `testing.short()`? [code block],0,0.9878969192504883
1005371515,3037,knqyf263,2022-10-26T08:24:43Z,we might be able to leverage `unix`. [code block] [a link],0,0.9881961941719055
1005378728,3037,knqyf263,2022-10-26T08:31:13Z,seems like it already skips windows. do we need these lines? [a link],0,0.9761102795600891
1005379999,3037,knqyf263,2022-10-26T08:32:24Z,do we need the if-statement as only windows reaches here? [a link],0,0.9895970225334167
1005380691,3037,knqyf263,2022-10-26T08:33:03Z,looks like it skips anytime. [code block],0,0.9831974506378174
1005382374,3037,knqyf263,2022-10-26T08:34:29Z,this test is essential for container image scanning. is it hard to run tests on windows?,0,0.9862145781517029
1005384192,3037,knqyf263,2022-10-26T08:36:06Z,what if using maps.keys? [a link],0,0.9879321455955505
1005386120,3037,knqyf263,2022-10-26T08:37:50Z,i'd like to know the reason we should check the key existence. doesn't the following work? [code block],0,0.9804114103317261
1005387092,3037,knqyf263,2022-10-26T08:38:44Z,please correct me if i'm wrong. [code block],0,0.943761944770813
1005387658,3037,knqyf263,2022-10-26T08:39:13Z,ditto,0,0.8428916931152344
1014072347,3037,owenrumney,2022-11-04T14:14:52Z,it didn't but i've found the issue in defsec so its resolved.,0,0.9767425656318665
1014155115,3037,owenrumney,2022-11-04T15:16:36Z,fixed,0,0.975196123123169
1014155262,3037,owenrumney,2022-11-04T15:16:45Z,fixed in all the places,0,0.982003390789032
1014155327,3037,owenrumney,2022-11-04T15:16:49Z,"no reason, it works fine. changed",1,0.5144593119621277
1014155363,3037,owenrumney,2022-11-04T15:16:50Z,"yup, good good",1,0.9871084094047546
1014155386,3037,owenrumney,2022-11-04T15:16:52Z,test working now,0,0.9825589656829834
1014155413,3037,owenrumney,2022-11-04T15:16:53Z,this is passing the tests now,0,0.9861928820610046
1014155434,3037,owenrumney,2022-11-04T15:16:55Z,fixed this - removed the requirement for `skipwindows`,0,0.9873756170272827
1014155498,3037,owenrumney,2022-11-04T15:16:58Z,removed,0,0.9654131531715393
1014157069,3037,owenrumney,2022-11-04T15:18:21Z,"i'll have another look at this. i did it in a single file initially, but it was very ugly with so many conditions",-1,0.9137589931488037
1015208148,3037,owenrumney,2022-11-07T09:47:06Z,"okay - done, not as ugly as i was worried it would be",-1,0.8958034515380859
1045229164,3215,knqyf263,2022-12-11T12:54:30Z,"does wolfi provide advisories for unfixed vulnerabilities? if no, we can remove these lines.",0,0.9857117533683777
1045229390,3215,knqyf263,2022-12-11T12:55:44Z,"this is because wolfi doesn't have releases and eol, right? could you write it down why it always returns true?",0,0.9806898236274719
1045229576,3215,knqyf263,2022-12-11T12:57:02Z,this test case is for alpine linux. we can remove.,0,0.9866587519645691
1045229755,3215,knqyf263,2022-12-11T12:58:05Z,it is not used anywhere.,0,0.8127294182777405
1045273802,3215,luhring,2022-12-11T18:00:56Z,"okay, thanks! removed in 40c4eb3f",1,0.9711986780166626
1045273846,3215,luhring,2022-12-11T18:01:14Z,"yes, correct. added a comment to clarify in 0dfe8322",0,0.984879195690155
1045273861,3215,luhring,2022-12-11T18:01:27Z,removed in a9f359ff,0,0.9845761060714722
1045273885,3215,luhring,2022-12-11T18:01:39Z,removed in 5dee0a29,0,0.9862626791000366
1510211377,6240,chen-keinan,2024-03-03T08:21:26Z,"nit: keep function call consist, in some cases `dependency.id` called directly in some cases it has a wrapper `packageid` in another case there is a wrapper [a link]",0,0.988535463809967
1510214121,6240,chen-keinan,2024-03-03T08:36:07Z,remove commented struct,0,0.9842365980148315
1510220115,6240,chen-keinan,2024-03-03T09:11:18Z,is this test should be removed ?,0,0.9828453660011292
1510225235,6240,chen-keinan,2024-03-03T09:41:50Z,nit: [code block],0,0.9873168468475342
1510226305,6240,chen-keinan,2024-03-03T09:48:07Z,is this case is needed ? as later `if c.type == core.typelibrary || c.pkgid.purl != nil {` will catch it,0,0.9638763070106506
1510227049,6240,chen-keinan,2024-03-03T09:53:03Z,nit: [code block],0,0.9873168468475342
1510685986,6240,DmitriyLewen,2024-03-04T07:22:38Z,do you want to store this package in root dir of dependency package (`pkg/dependency`)? maybe it make sense to use value familiar to `utils` or `type` dir?,0,0.9896017909049988
1510703170,6240,DmitriyLewen,2024-03-04T07:42:00Z,some language types still don't use `id` field (e.g. gobinary - [a link] we may need to add id for them (we can do this in another pr) to avoid reporting differences.,0,0.9830151796340942
1517532485,6240,knqyf263,2024-03-08T10:24:58Z,"yes, we should do that in another pr. this pr is already large.",0,0.9812427759170532
1517537563,6240,knqyf263,2024-03-08T10:29:29Z,"it generates an id for dependencies. i don't think it's terrible to put it under `pkg/dependency.` the name `utils` should be used as little as possible, as it does not express anything. we only use it when we can't come up with a good package name, no matter how much we think about it. i would like to delete `utils` in the future.",-1,0.6181164979934692
1517548110,6240,knqyf263,2024-03-08T10:39:53Z,"if it is called once, i'd call `dependency.id` directly. if it is called several times. i defined `packageid`. as you said, `id` and `packageid` should be aligned. fixed in [a link] thanks!",1,0.9260699152946472
1517552091,6240,knqyf263,2024-03-08T10:43:42Z,my bad. thanks. removed in [a link],-1,0.9889967441558838
1517552637,6240,knqyf263,2024-03-08T10:44:11Z,fixed in [a link],0,0.98800128698349
1517552746,6240,knqyf263,2024-03-08T10:44:19Z,fixed in [a link],0,0.98800128698349
1517552956,6240,knqyf263,2024-03-08T10:44:29Z,deleted [a link],0,0.9631725549697876
1519151902,6240,DmitriyLewen,2024-03-11T04:44:19Z,got it.,0,0.8921144008636475
1519159075,6240,DmitriyLewen,2024-03-11T05:00:36Z,can you help me understand why we can't just always use `dependency.id`? ___ add `packageid`: - pkg/dependency/parser/java/pom/parse.go use `dependency.id`: - pkg/dependency/parser/swift/swift/parse.go,0,0.8735746741294861
1519173149,6240,knqyf263,2024-03-11T05:29:20Z,i'll update the test.,0,0.9842405915260315
1519246418,6240,knqyf263,2024-03-11T07:22:20Z,added [a link],0,0.9870722889900208
1519248336,6240,DmitriyLewen,2024-03-11T07:24:39Z,take a look comment above.,0,0.9848339557647705
1520898747,6240,knqyf263,2024-03-12T06:02:38Z,fixed. but it is not that strict policy. it won't end the world even if we don't follow it. [a link] [a link],0,0.9214431047439575
1574524190,6329,knqyf263,2024-04-22T10:29:52Z,"i found this example in [a link]. [code block] we probably need a regexp like ``name\s*=\s*""([^""]+)""``. i want to avoid using regular expressions wherever possible, though.",0,0.9646158218383789
1574541454,6329,knqyf263,2024-04-22T10:43:29Z,"in addition, if a conanfile.py is small enough, applying regexp to the file content might be simpler and faster. [code block] i am not 100% sure which is faster as i have not compared it with processing one line at a time. i was just thinking out loud, and it's not a performance critical process. you can decide.",0,0.8050113320350647
1574547143,6329,knqyf263,2024-04-22T10:47:00Z,we also need to parse the version as the license can be different depending on the version.,0,0.9871535897254944
1575905222,6329,DmitriyLewen,2024-04-23T09:01:07Z,"if i understand correctly - `conan` uses same file for each version: repository: [code block] cache dir: [code block] repository also contains 1 conanfile.py file for all versions. look at `conandata.yaml` file - [a link] i was thinking about the case where different versions use different licenses. but i didn't find an example for this. so i think we can define licenses by package name first. if we have any problems, we will update this logic.",0,0.9717413783073425
1575913464,6329,DmitriyLewen,2024-04-23T09:07:05Z,"it looks as bug, but we can also parse this case. i also don't trust regexp and try not to use them. i think we can just remove all the spaces. in the files that i checked, `name` and `license` fields are placed in first 20-30 lines. so i think we won't gain much time by doing this. 675 lines - [a link]",-1,0.7601925730705261
1575923228,6329,DmitriyLewen,2024-04-23T09:13:16Z,i added removing extra spaces - [a link],0,0.9851425290107727
1575927775,6329,knqyf263,2024-04-23T09:16:07Z,"where is the `conanfile.py` file defined in `conandata.yaml`? i found urls, but didn't find `conanfile.py`.",0,0.9873132109642029
1575932561,6329,DmitriyLewen,2024-04-23T09:19:18Z,if i understand correctly here it is -[a link],0,0.9846899509429932
1575934409,6329,knqyf263,2024-04-23T09:20:38Z,i probably got you. there is only one file stored in the repository. [a link] it seems like conan is unable to define different licenses. we can go with you implementation.,0,0.9427730441093445
1575937103,6329,knqyf263,2024-04-23T09:22:41Z,why is it a bug? it does not break the python semantics.,0,0.8448082208633423
1575942257,6329,knqyf263,2024-04-23T09:26:27Z,"it introduces another bug with `license = ""apache or mit"".",0,0.9617630839347839
1575942803,6329,DmitriyLewen,2024-04-23T09:26:52Z,"i haven't seen such cases. also, all test cases use the format `name = ""foo""`. therefore, i assumed that this was a bug or maybe just a typo in the documentation. in any case, this is easy to solve.",0,0.9810968637466431
1575945349,6329,knqyf263,2024-04-23T09:28:49Z,"it should be more strict. otherwise, it matches other than the license line. that's why i suggested regexp this time. [a link]",0,0.9847614765167236
1575946343,6329,knqyf263,2024-04-23T09:29:36Z,ditto,0,0.8428916931152344
1575949465,6329,knqyf263,2024-04-23T09:31:50Z,"conanfile is written by hand, so any format is possible, isn't it? i think there is a customary preferred format, but it is legitimate.",0,0.9859991669654846
1575952956,6329,DmitriyLewen,2024-04-23T09:34:11Z,you are right :thumbs_up:,0,0.7392419576644897
1575954488,6329,DmitriyLewen,2024-04-23T09:35:23Z,it looks like we can't avoid using regexp...,0,0.6420727968215942
1575956519,6329,knqyf263,2024-04-23T09:36:56Z,"if possible, i don't want to use regexp. i'm still considering a way to parse the license line without regexp, but...",0,0.527718722820282
1575957435,6329,knqyf263,2024-04-23T09:37:35Z,isn't `conanfile.txt` used?,0,0.9854492545127869
1575983179,6329,DmitriyLewen,2024-04-23T09:54:38Z,take a look this -[a link],0,0.9850428104400635
1575989355,6329,knqyf263,2024-04-23T09:59:08Z,"yes, it's better.",0,0.9272701740264893
1576005273,6329,DmitriyLewen,2024-04-23T10:11:45Z,cache dir contains only `conanfile.py` files: [code block],0,0.9887073040008545
1576043924,6329,DmitriyLewen,2024-04-23T10:45:53Z,used `strings.cut` - [a link] + [a link],0,0.9883418679237366
1576575948,6329,knqyf263,2024-04-23T16:49:28Z,is `conanfile.py` required? i'm wondering if we just don't find a project using `conanfile.txt` as most projects use `conanfile.py`. but we can handle `conanfile.txt` if we find such a case.,0,0.9857469797134399
1576580660,6329,knqyf263,2024-04-23T16:53:41Z,[a link] seems better. [code block],0,0.9661272168159485
1577167446,6329,DmitriyLewen,2024-04-24T02:50:38Z,"iiuc only `conanfile.py` contains [a link] - [a link] therefore, we can't detect package name/license from `conanfile.txt` files. then we don't need to parse the conanfile.txt files.",0,0.9874396324157715
1577187870,6329,DmitriyLewen,2024-04-24T03:22:25Z,changed in [a link],0,0.9864720106124878
1632652139,6882,knqyf263,2024-06-10T06:34:50Z,the code base doesn't seem to support the dependency graph. it needs which package depends on which package. it returns nil here. [a link],0,0.9775835275650024
1633113184,6882,stringbean,2024-06-10T11:45:51Z,"sorry, corrected that.",-1,0.9868637323379517
1633640906,6882,knqyf263,2024-06-10T18:01:26Z,seems like it's not used anywhere. we can delete it. [code block],0,0.9728023409843445
1634210107,6882,DmitriyLewen,2024-06-11T05:27:14Z,[code block] - use `var libraries ftypes.packages` for this. - you can remove this after that: [a link],0,0.9856508374214172
1634211331,6882,DmitriyLewen,2024-06-11T05:29:03Z,[code block] i think we can avoid unmarshalling unused fields.,0,0.9853007197380066
1634215090,6882,DmitriyLewen,2024-06-11T05:34:04Z,we don't need to parse other files (we only need lock file) so i think it's better to use [a link],0,0.9741173982620239
1634217926,6882,DmitriyLewen,2024-06-11T05:38:18Z,"correct me, if i am wrong. uuic default name is `build.sbt.lock`. but you can use any name with [a link] i think in this case we can compare file names with `build.sbt.lock`. for other names user can use [a link] or do users often use the names `*.sbt.lock`?",0,0.9773364663124084
1634219116,6882,DmitriyLewen,2024-06-11T05:39:54Z,we don't add empty apps. e.g.: [a link],0,0.9811683893203735
1634221350,6882,DmitriyLewen,2024-06-11T05:42:57Z,nit: we try to use tests with results first (`v1 lockfile` -> `empty lockfile` in your case).,0,0.9896826148033142
1634224322,6882,DmitriyLewen,2024-06-11T05:46:42Z,we include only `runtime` and `compile` scopes for `pom.xml` files: [a link] i think we need to use same logic here.,0,0.9882835149765015
1634231302,6882,knqyf263,2024-06-11T05:52:01Z,i thought we would parse other files in the future. let's ask the future plan of sbt-dependency-lock.,0,0.9849334359169006
1634399680,6882,stringbean,2024-06-11T08:10:18Z,future improvements to sbt-dependency-lock will be added to the existing `*.sbt.lock` files. is it still possible to walk the directory in an `analyzer`? it is common to have multiple sub-projects in sbt and each of these would generate their own `build.sbt.lock` file.,0,0.9889379739761353
1634404418,6882,stringbean,2024-06-11T08:13:15Z,i'm not aware of anyone overriding the default filename (`build.sbt.lock`) but i'm sure someone is using it! i'll change it over to use the default.,0,0.9227569103240967
1634561891,6882,knqyf263,2024-06-11T09:54:23Z,"what is the sub-project? does it belong to the main project? or are they separate projects? if you need to process those files at the same time, you need to use `postanalyzer`. if you only need to parse them individually, `analyzer` is more efficient. for example, trivy needs both `package.json` and `package-lock.json` for npm projects and uses `postanalyzer` in this case.",0,0.9854875802993774
1635171999,6882,stringbean,2024-06-11T16:26:53Z,sbt supports having multiple projects within a single parent project. generally each sub-project will generate its own artifacts (jars/wars/graalvm binaries etc) and will be in a sub-directory of the parent project. configuration for sub-projects (including dependencies) is _extremely_ flexible and can be defined in any of the following locations (or a combination): - `build.sbt` in the sub-project dir. - inherited from the root `build.sbt`. - configured from the `project` directory of the root project. the sbt-dependency-lock plugin will generate a separate `build.sbt.lock` file in each of the sub-projects that will contain all the dependencies of that sub-project.,0,0.9191383719444275
1635878021,6882,knqyf263,2024-06-12T06:24:07Z,"do you want to process `build.sbt.lock` separately or together? when processed together, all dependent packages are shown as root `build.sbt.lock`. if not, they are just different lock files and show dependencies respectively.",0,0.9890100359916687
1644077229,6882,stringbean,2024-06-18T08:41:29Z,after thinking about it i reckon that processing them separately is probably better for the majority of sbt users.,0,0.9599503874778748
1645517121,6882,knqyf263,2024-06-19T06:58:23Z,thanks for your insight. we can use the analyzer for now and switch to the post-analyzer when we need to combine those files.,1,0.9456839561462402
1645536087,6882,DmitriyLewen,2024-06-19T07:09:14Z,`input.filepath` is enough. [code block],0,0.9864647388458252
1645537953,6882,DmitriyLewen,2024-06-19T07:10:54Z,nit: [code block],0,0.9873168468475342
1645713823,6882,knqyf263,2024-06-19T08:46:04Z,done [a link],0,0.987381100654602
1645714079,6882,knqyf263,2024-06-19T08:46:16Z,done [a link],0,0.987381100654602
1528302220,6333,DmitriyLewen,2024-03-18T10:43:42Z,`package` already contains location - [a link] what if we just add location when creating a new vulnerability? [a link],0,0.9890033602714539
1528303861,6333,DmitriyLewen,2024-03-18T10:44:46Z,iirc os packages don't have locations,0,0.9858298897743225
1528305951,6333,DmitriyLewen,2024-03-18T10:46:21Z,location from package is different- [a link],0,0.983951985836029
1529457109,6333,parvez0,2024-03-18T23:33:34Z,not clear on this should i create a new type for locations in fanal/types for both packages and vulnerabilitydetected?,0,0.9760718941688538
1529612673,6333,parvez0,2024-03-19T02:45:19Z,"not sure, i copied the first test case and used it, it has location fields in packages but if you want i change it as well. also it will be great if you can point out any relevant reading materials that i can go through.",1,0.5919827818870544
1529795148,6333,DmitriyLewen,2024-03-19T06:25:53Z,you can see the packet parser [a link]. you can see the language files that support places [a link],0,0.98508620262146
1529797106,6333,DmitriyLewen,2024-03-19T06:27:29Z,i think it's better to add language package (like yarn.lock or pom.xml) to avoid confusion when we support this code later.,0,0.9786403775215149
1529801791,6333,DmitriyLewen,2024-03-19T06:30:59Z,no. you can use `ftypes.location` in `vulnerabilitydetected`. you have already chosen right solution: [a link],0,0.987497091293335
1529822410,6333,DmitriyLewen,2024-03-19T06:53:23Z,we don't need location cache and package check now. what do you thin about this update for this function: [code block],0,0.975165069103241
1529824039,6333,DmitriyLewen,2024-03-19T06:55:08Z,you need to add locations in both places: - package - detectvulnerability but these must be the same line numbers.,0,0.9869660139083862
1531330925,6333,parvez0,2024-03-20T00:36:11Z,"initially, i considered this approach. however, i decided that implementing backward compatible changes would be beneficial as some other code might be using this. if you're confident that this won't impact the approach, i'll proceed with updating it to match the example you provided.",0,0.9712963700294495
1531461911,6333,DmitriyLewen,2024-03-20T02:57:44Z,"if another app generates `report` using trivy packages - these changes will have no effect. but if this app creates `report` on its own, it will need to simply copy `location` from `package` to `vulnerabilities detected`. so i think these changes won't be a problem.",0,0.9806493520736694
1531469041,6333,parvez0,2024-03-20T03:16:35Z,"it appears there might be referring to wrong test case in the comment. my changes actually begin from line 544. nevertheless, i've refactored the test case for a package vulnerability as per your suggestion.",0,0.9778487086296082
1531469354,6333,parvez0,2024-03-20T03:17:19Z,i have added a yarn vulnerability as a test case replacing the previous osdependency,0,0.9842246770858765
1887990776,8106,DmitriyLewen,2024-12-17T06:55:54Z,"wdyt about moving this function to `pkg/dependency/parser/python/utils.go` this is the logic described in `pep`, so we can say that it is a common function for python",0,0.9813289642333984
1887995355,8106,DmitriyLewen,2024-12-17T07:01:29Z,is this used anywhere?,0,0.9868593215942383
1888000403,8106,DmitriyLewen,2024-12-17T07:07:11Z,uuic we use only map keys we still create `unmarshaltoml` function for dependencies. perhaps we want to use map[string]struct{}.,0,0.9897831082344055
1888116108,8106,DmitriyLewen,2024-12-17T08:43:49Z,wdyt? [code block],0,0.988066554069519
1888227283,8106,nikpivkin,2024-12-17T09:57:45Z,done [a link],0,0.987381100654602
1888227412,8106,nikpivkin,2024-12-17T09:57:50Z,deleted,0,0.9476664662361145
1888227744,8106,nikpivkin,2024-12-17T09:58:02Z,done [a link],0,0.987381100654602
1888229004,8106,nikpivkin,2024-12-17T09:58:59Z,"got the idea, used the package id [a link]",0,0.9794211387634277
1889644139,8106,DmitriyLewen,2024-12-18T05:38:34Z,"do we need to check if a package with `pkgid` exists before adding it to `visited`? iiuc we check for this case in the parser: [a link] but i would still prefer to leave the ""correct"" order of actions wdyt?",0,0.9890263676643372
1889648220,8106,DmitriyLewen,2024-12-18T05:44:04Z,i am thinking about moving logic into `getproddeps` and renaming function to `filterdevdeps`. wdyt?,0,0.9851436018943787
1889903224,8106,nikpivkin,2024-12-18T09:26:01Z,"should we be strict when checking? a package can only be missing in 1 case if `pyproject.toml` is manually updated and a new dependency is added and no dependency locking is performed, but the `lockfile` is still considered valid.",0,0.9889774918556213
1889910582,8106,nikpivkin,2024-12-18T09:30:41Z,"ok, but i think it's more correct to call it `filterprodpackages`, since `filderdev` stands for dependency filtering and dev extraction.",0,0.9868307113647461
1890085511,8106,DmitriyLewen,2024-12-18T11:33:28Z,"let's stay this check for this case. sometimes users forget to update the lock file after updating the ""main"" file this check will remove ambiguities",0,0.9777282476425171
1890220463,8106,nikpivkin,2024-12-18T13:15:33Z,"i was a little mistaken. with recursive traversal, the packet is guaranteed to exist. it can only be missing [a link] for two reasons: the user removed the package manually from `pyproject.toml` or the package is not a direct dependency, but we cannot determine the exact reason.",0,0.9299723505973816
1891206050,8106,DmitriyLewen,2024-12-19T06:10:27Z,"okay, then we can remove this check.",0,0.9856318235397339
1893539721,8106,knqyf263,2024-12-20T06:48:55Z,nit: for consistency and stacktrace [code block],0,0.9874306917190552
1893546580,8106,knqyf263,2024-12-20T06:58:27Z,"we should flag [a link] instead of filtering for `--include-dev-deps`, but if you want to keep the original behavior in this pr, we can add the change in a separate pr.",0,0.9895574450492859
1893549458,8106,DmitriyLewen,2024-12-20T07:02:31Z,as i wrote in [a link] - are you sure that we want to add dev deps under `dev` field? previously we only did this upon request from users. i have yet to meet a python user who needs to scan for dev dependencies,0,0.9849233627319336
1893964745,8106,knqyf263,2024-12-20T13:50:47Z,"hmm. it sounds reasonable, but we should add a new column showing if --include-dev-deps is supported.",0,0.9751943349838257
1893978531,8106,knqyf263,2024-12-20T14:03:49Z,"but if the implementation cost is not so different, it's better to mark dev dependencies.",0,0.9803080558776855
1894593920,8106,nikpivkin,2024-12-21T09:49:34Z,fixed [a link],0,0.9879513382911682
1894593985,8106,nikpivkin,2024-12-21T09:50:05Z,i'll open another pr for this one,0,0.960055947303772
369567830,376,knqyf263,2020-01-22T13:48:15Z,would you replace these lines with an install script? [a link],0,0.9890940189361572
369569261,376,knqyf263,2020-01-22T13:51:00Z,does the scan without this line fail? trivy is supposed to fetch an image from docker registry automatically after docker finishes `docker login` equivalent.,0,0.9886317849159241
369569834,376,knqyf263,2020-01-22T13:52:02Z,are these lines required?,0,0.9852880835533142
369580874,376,knqyf263,2020-01-22T14:11:53Z,it seems to work. [a link],0,0.9740744233131409
369581851,376,knqyf263,2020-01-22T14:13:43Z,i tested it here. [a link],0,0.9821233153343201
369900026,376,tnir,2020-01-23T01:57:15Z,fix it in d4e0cc9.,0,0.9858387112617493
369900262,376,tnir,2020-01-23T01:58:20Z,nice improvement! fix it in d4e0cc9.,1,0.9881932139396667
369901724,376,tnir,2020-01-23T02:04:10Z,"as these indicates only that this is ready for the integration with gitlab container scanning feature, we can remove them.",0,0.9889960289001465
369901992,376,tnir,2020-01-23T02:05:08Z,let's remove them. did it in df726fe.,0,0.9884704351425171
369907124,376,tnir,2020-01-23T02:29:52Z,`contrib/gitlab.tpl` is missing now while the install script was improved.,0,0.9886287450790405
369915412,376,tnir,2020-01-23T03:15:16Z,could you help me find out what is wrong? it is confirmed that template exists and the command arguments look correct: [a link],0,0.9826182126998901
369992895,376,knqyf263,2020-01-23T08:52:25Z,"i'm sorry the install script fetches the latest version of trivy, but the latest version doesn't support a file template yet. i'll release it soon.",-1,0.9871784448623657
370020991,376,knqyf263,2020-01-23T09:52:18Z,i've released v0.4.3. would you try it again?,0,0.9853041768074036
370222792,376,mrueg,2020-01-23T16:28:40Z,want to make this alpine:3.11 or :latest to be explicit?,0,0.9749209880828857
370288531,376,mrueg,2020-01-23T18:40:10Z,"is there a way we could not fetch this from master? if the template changes and the downloaded binary does not support it, this could cause incompatibilities. maybe we can parse $(trivy --version) and pull from the tag instead?",0,0.917027473449707
370648894,376,tnir,2020-01-24T14:04:50Z,thanks. it works now! :smile: [a link] script will be updated when other matters are addressed.,1,0.9916179776191711
370649209,376,tnir,2020-01-24T14:05:25Z,let use use `3.11` :thumbs_up:,0,0.9780785441398621
370650813,376,tnir,2020-01-24T14:08:41Z,"you are right. we should use environment variables to fix. with environment variables with the default value of trivy version, (gitlab ci) users can inject arbitrary version of (trivy-gitlab) template, which will reduce regression and be helpful for users of non-latest version gitlab.",0,0.8073713779449463
370758058,376,mrueg,2020-01-24T17:42:07Z,"we could call the trivy binary after fetching and installing. `trivy_version=${trivy_version:-$(/usr/local/bin/trivy --version | sed -e ""s/trivy version //"")}`",0,0.9850416779518127
370988378,376,tnir,2020-01-26T10:31:19Z,"thanks for your suggestion. on reflection, we do not have to get version from trivy binary :grinning_face_with_smiling_eyes: i prefer pinning the trivy version to make users' devops robust as much as possible.",1,0.9584455490112305
1242182829,4706,knqyf263,2023-06-26T13:20:17Z,why do we need this field?,0,0.9629247784614563
1242230945,4706,AliDatadog,2023-06-26T13:52:12Z,good catch! it was added by mistake. it will be fixed along with the other comment in the next commit.,1,0.9917538166046143
1246185175,4706,knqyf263,2023-06-29T06:47:59Z,seems like this file doesn't have to be updated,0,0.9576886892318726
1246185261,4706,knqyf263,2023-06-29T06:48:05Z,ditto,0,0.8428916931152344
1246185383,4706,knqyf263,2023-06-29T06:48:12Z,ditto,0,0.8428916931152344
1246187576,4706,knqyf263,2023-06-29T06:50:25Z,is it needed? `pkg` seems to be already reset above.,0,0.9865685701370239
1246188282,4706,knqyf263,2023-06-29T06:51:12Z,"looks like an absolute path, no?",0,0.9629341959953308
1246190456,4706,knqyf263,2023-06-29T06:53:26Z,"`keepsysteminstalledfiles` shouldn't always be true. we should pass the value for each test case. otherwise, we cannot test the case where `keepsysteminstalledfiles` is false.",0,0.974122941493988
1273380077,4706,AliDatadog,2023-07-25T11:15:32Z,"indeed, i changed it",0,0.9828343391418457
1273380313,4706,AliDatadog,2023-07-25T11:15:46Z,it should be removed as well,0,0.9822196960449219
1275905618,4706,AnaisUrlichs,2023-07-27T08:18:13Z,do we need to further document the usage of the flag?,0,0.9832665920257568
1291202935,4706,AliDatadog,2023-08-11T10:58:15Z,thanks for the comment ! i changed it to`--retain-system-installed-files retains the files installed by each package in the analysis output when set to true.` do we need to add anything ?,1,0.9669263362884521
1299318597,4706,knqyf263,2023-08-20T07:14:45Z,"nit: this field is located under `package`, so we can simply call it `installedfiles`. [code block]",0,0.9886806011199951
1299318944,4706,knqyf263,2023-08-20T07:17:07Z,"this mistake is not from your change, but we should close this file. [code block]",0,0.9255695343017578
1299319355,4706,knqyf263,2023-08-20T07:20:22Z,does `pkg` make more sense? [code block],0,0.9873320460319519
1299319799,4706,knqyf263,2023-08-20T07:23:35Z,we should merge these two values since `systeminstalledfiles` is now just a collection of installed files for all packages. it doesn't make sense to have them differently. but we can refactor that after merging the pr.,0,0.9833405613899231
895115443,2186,knqyf263,2022-06-12T06:20:42Z,does k8s subcommand accept multiple commands?,0,0.9876322746276855
895170758,2186,chen-keinan,2022-06-12T12:56:57Z,does all and cluster subcommands should appear at the end,0,0.9883688688278198
895175527,2186,chen-keinan,2022-06-12T13:33:54Z,"i would put more informative error msg , so the user will know what to do to fix it",0,0.9812861680984497
895175563,2186,chen-keinan,2022-06-12T13:34:01Z,"i would put more informative error msg, so the user will know what to do to fix it",0,0.9812861680984497
895184465,2186,josedonizetti,2022-06-12T14:25:00Z,the idea is supporting resources scanning like kubectl: eg: [code block],0,0.9820499420166016
895184684,2186,josedonizetti,2022-06-12T14:26:12Z,"yes, `all` and `cluster` should be at the end, as they are `targets`. like we do for other trivy commands. `trivy image --security-checks=config alpine:latest`",0,0.9577742218971252
897638998,2186,knqyf263,2022-06-15T07:38:34Z,we can change it after we move to cobra.,0,0.9864010214805603
897639802,2186,knqyf263,2022-06-15T07:39:25Z,thanks. it makes sense.,1,0.8335576057434082
919955456,2494,knqyf263,2022-07-13T11:13:21Z,can you tell me the reason you removed this line? i thought it would be helpful even when we fetch only a single branch.,0,0.9750383496284485
919956088,2494,knqyf263,2022-07-13T11:14:13Z,debug code?,0,0.9882348775863647
919956925,2494,knqyf263,2022-07-13T11:15:20Z,why don't you use newbranchreferencename? [code block],0,0.9866852760314941
919957213,2494,knqyf263,2022-07-13T11:15:43Z,same [code block],0,0.986836314201355
919959791,2494,knqyf263,2022-07-13T11:19:07Z,nit [code block],0,0.9879410862922668
919961084,2494,knqyf263,2022-07-13T11:20:51Z,these fields require a prefix as this struct is embedded into `options`. [code block],0,0.988369345664978
919994915,2494,ShubhamPalriwala,2022-07-13T12:02:09Z,"so this now, by default, stays removed because a user might pass the `--commit` argument for which we would need the entire commit history. and for cases when its not a `--commit`, we set it back to `1` [a link]",0,0.9871402382850647
919995352,2494,ShubhamPalriwala,2022-07-13T12:02:42Z,"sorry my bad, forgot to remove the debugs here.",-1,0.9874835014343262
919997449,2494,ShubhamPalriwala,2022-07-13T12:05:16Z,"woah, did not notice this function at all. thanks a lot, implementing this for tags as well as branches both!",1,0.9908624887466431
919997676,2494,ShubhamPalriwala,2022-07-13T12:05:32Z,implementing the change,0,0.9825088977813721
920028675,2494,knqyf263,2022-07-13T12:39:22Z,it makes sense. thanks.,1,0.9032182693481445
920834595,2494,knqyf263,2022-07-14T07:20:04Z,we don't depend on the internet in unit tests. please think about the use of a dummy server. [a link],0,0.9840846061706543
920905871,2494,ShubhamPalriwala,2022-07-14T08:40:24Z,could not find much of documentation about this :/ can you help me out here if possible?,-1,0.8680728673934937
920906165,2494,ShubhamPalriwala,2022-07-14T08:40:43Z,made and pushed these changes,0,0.9836381673812866
921104179,2494,knqyf263,2022-07-14T12:34:57Z,we have a bare git repository in `testdata`. [code block] i hope it works.,1,0.5788601636886597
921203543,2494,ShubhamPalriwala,2022-07-14T14:12:13Z,"thank you for this, was able to do it (i hope) correctly!",1,0.9679045677185059
1029003601,3130,chen-keinan,2022-11-22T08:23:17Z,it will be more informative to put more info and the cis checks and link to spec,0,0.9738472104072571
1029019282,3130,chen-keinan,2022-11-22T08:38:09Z,wonder if there is a way to override it so it will not show `cis` for `trivy k8s` and `nsa` for `trivy aws` sub command as it is not supported and throw an error if used by users,0,0.649101734161377
1029955078,3130,simar7,2022-11-23T01:30:39Z,thanks added,1,0.5284340977668762
1029955793,3130,simar7,2022-11-23T01:32:46Z,we could leave the specs out of the help text to make it more generic. [code block],0,0.9884900450706482
1031337964,3130,chen-keinan,2022-11-24T10:20:34Z,"the compliance framework also provide data when `opt.reportformat == ""all""` not just `summary` and also support json and table view. so in total you can produce four types of output: - table with report == summary - table with report == all - json with report == summary - json with report == all",0,0.9745166301727295
1031766881,3130,simar7,2022-11-24T18:31:51Z,`--format=json --report=summary`: [a link] `--format=json --report=all`: [code block] `--format=table --report=summary`: [a link] `--format=table --report=all`: [a link] (this combination today doesn't actually return a table in trivy k8s fyi). please let me know if i've missed something.,0,0.9702110886573792
1031817236,3130,chen-keinan,2022-11-24T20:52:31Z,"do we want to produce report for `opt.reportformat == all`? maybe the condition `opt.reportformat == ""summary""` can be removed?",0,0.9886766672134399
1031865188,3130,simar7,2022-11-24T21:33:19Z,"yes i agree, that makes sense. updated here [a link]",0,0.9352908730506897
1037011394,3130,knqyf263,2022-12-01T11:43:49Z,"we can override usage like [a link] but should the value `cis`? i thought it should be `awscis1.2` and `awscis1.4`. please correct me if i'm missing something. btw, even though we can override the accepted values, do we still need the `aws` prefix? i mean `cis1.2` vs `awscis1.2`.",0,0.9870162010192871
1037066649,3130,knqyf263,2022-12-01T12:45:59Z,i prefer text-based as it is easy to update. do you have any reason you want to use an image here?,0,0.8365378975868225
1037072638,3130,knqyf263,2022-12-01T12:52:23Z,this page is not included in mkdocs.yml. [code block],0,0.9791364073753357
1037073328,3130,knqyf263,2022-12-01T12:53:09Z,and the page is broken. you can build the doc and test it locally with `make mkdocs-serve`.,0,0.9808216094970703
1038500488,3130,simar7,2022-12-02T20:15:55Z,ah sorry thanks i forgot about this - i fixed it.,-1,0.9832592010498047
1038501011,3130,simar7,2022-12-02T20:16:47Z,"it was an image in the k8s compliance markdown so i decided to go that route. i changed it to text, no problem.",0,0.9034962058067322
1038922017,3130,knqyf263,2022-12-04T07:31:46Z,i think you need spaces or tabs here.,0,0.9868683815002441
1038924752,3130,knqyf263,2022-12-04T07:54:46Z,fixed in [a link],0,0.98800128698349
1038925007,3130,knqyf263,2022-12-04T07:56:44Z,"please review my change. also, do we support cis 1.4 too? don't we mention that in the doc? looks like the current doc mentions cis 1.2 only.",0,0.9798955917358398
1041589724,3130,simar7,2022-12-06T23:44:34Z,thanks for catching that!,1,0.9599462151527405
1041691766,3130,simar7,2022-12-07T02:36:15Z,"your change looks good, thanks i learnt something new! i updated the docs to include 1.4 as well. as for the prefixes, i think we should include them. cis publishes many benchmarks and we should be clear that its the aws version of the cis benchmarks.",1,0.9880486130714417
1042574403,3130,knqyf263,2022-12-07T18:59:08Z,got it :thumbs_up:,0,0.508533239364624
1307167178,5037,knqyf263,2023-08-28T09:14:56Z,"is there any specific logic for the combination of cyclonedx and cocoapods besides purl? if not, we don't need to test the same thing again here as we test the purl logic in the `purl` package enough.",0,0.988754391670227
1307182321,5037,DmitriyLewen,2023-08-28T09:28:23Z,we don't test [a link] function in `purl` package. i only found 1 my mistake with `subpath` when testing sbom manually. that is why i added tests in sbom.,0,0.9528233408927917
1307335724,5037,knqyf263,2023-08-28T12:03:23Z,"oh, we should add `testpackage` then.",0,0.9873428344726562
1308153298,5037,DmitriyLewen,2023-08-29T03:25:51Z,removed added test for sbom and added `testpackage`.,0,0.9883284568786621
1308246386,5037,knqyf263,2023-08-29T05:53:41Z,we should mention the limitation that all modules are detected under the same git url.,0,0.9866330623626709
1308247406,5037,knqyf263,2023-08-29T05:55:05Z,the link should be permanent. the main branch can be updated.,0,0.9848330616950989
1308249387,5037,knqyf263,2023-08-29T05:58:00Z,isn't the subpath `#twitter` in the example of `pkg:cocoapods/sharekit.0#twitter`?,0,0.9879701137542725
1308263842,5037,DmitriyLewen,2023-08-29T06:18:55Z,done,0,0.9764507412910461
1308263890,5037,DmitriyLewen,2023-08-29T06:18:58Z,done,0,0.9764507412910461
1308263946,5037,DmitriyLewen,2023-08-29T06:19:03Z,done,0,0.9764507412910461
1308265062,5037,DmitriyLewen,2023-08-29T06:20:32Z,done,0,0.9764507412910461
1308265141,5037,DmitriyLewen,2023-08-29T06:20:37Z,done,0,0.9764507412910461
1308265207,5037,DmitriyLewen,2023-08-29T06:20:42Z,done,0,0.9764507412910461
1308268479,5037,DmitriyLewen,2023-08-29T06:24:58Z,i'm not sure i understand what you mean. `twitter` is subpath for `pkg:cocoapods/sharekit.0#twitter` `nsdata+zlib`is subpath for `pkg:cocoapods/googleutilities.5.2#nsdata+zlib`,0,0.7981761693954468
1308279744,5037,knqyf263,2023-08-29T06:38:31Z,"so, why do you join name and subpath with `/`?",0,0.9770827293395996
1308285401,5037,DmitriyLewen,2023-08-29T06:45:11Z,`cocoapods` uses ` / ` format. e.g for `googleutilities`: [code block] i join `module` and `submodule` with `/` to reproduce this format.,0,0.9891967177391052
1308287858,5037,DmitriyLewen,2023-08-29T06:47:57Z,i will add comment for this,0,0.9836875200271606
1308290197,5037,knqyf263,2023-08-29T06:50:22Z,got it. thanks.,1,0.9481641054153442
1308297712,5037,DmitriyLewen,2023-08-29T06:57:53Z,added in 775a6c39af9f14214fdf1c08f322b50c12194760,0,0.9759469032287598
1308437127,5037,knqyf263,2023-08-29T08:49:56Z,"thanks! btw, is `googleutilities` a pod name, a module name or a spec name? is `googleutilities/appdelegateswizzler` a subpod, submodule or subspec? ""module might be used in swift, but not used in cocoapods. i just want to make sure of the official name. [a link]",1,0.9855644106864929
1308543679,5037,DmitriyLewen,2023-08-29T10:15:45Z,"i'm not sure we can choose ""right"" name. `cocoapods` uses: - [a link] - [a link] - [a link] - [a link]",0,0.9400507807731628
1308720833,5037,knqyf263,2023-08-29T12:12:07Z,"we'll go with ""module"" and fix it later if needed.",0,0.9838773608207703
778715326,1539,AndreyLevchenko,2022-01-05T10:37:49Z,seems hint is not required if you are using `_`,0,0.9848922491073608
778761481,1539,AndreyLevchenko,2022-01-05T11:54:41Z,why is it separate method? it's never called without `download()`,0,0.9852655529975891
778821171,1539,AndreyLevchenko,2022-01-05T13:34:38Z,why don't use `decompress()` method? it would be at least more clear [a link],0,0.987193763256073
778832600,1539,AndreyLevchenko,2022-01-05T13:51:35Z,it's just a question: is order of `defer` important?,0,0.961802065372467
778846045,1539,AndreyLevchenko,2022-01-05T14:10:18Z,"it doesn't work well if customer reverts to previous trivy version (like 0.21.3). it's a cache anyway, why doesn't just override it with version supported by current `trivy` binary?",0,0.8174049258232117
778849620,1539,AndreyLevchenko,2022-01-05T14:15:02Z,actually i think it may be useful to stop use of outdated db. but in this case missed scenario is: version is not updated anymore but user keep using old binary. this may lead to false negatives as db will be outdated,0,0.8783546090126038
778853921,1539,AndreyLevchenko,2022-01-05T14:20:40Z,i think this is ok long term. but for now it will break processing for everyone who is using `--skip-update` option (until they update db using `oras`),0,0.9690343737602234
778857778,1539,AndreyLevchenko,2022-01-05T14:25:34Z,"one of option to fix that add check like [code block] meaning: ""expected update has not happen""",0,0.986581563949585
778942660,1539,knqyf263,2022-01-05T16:05:24Z,"do you mean if `defer` should be called after the error handling? when it fails to create a temp file, we don't need to close and remove it.",0,0.9870672821998596
778946881,1539,knqyf263,2022-01-05T16:10:53Z,"we added breaking change to trivy db, so the newer trivy doesn't work with an old database. `--skip-update` should not work with the old db. in other words, the following case should fail: - trivy: v0.24.0 - trivy db: v1",0,0.9721665978431702
778949966,1539,knqyf263,2022-01-05T16:14:47Z,"yes, but we need to add the check to the older binary, right? it doesn't make sense to add the check to the new version. if you are talking about future migration like v2 to v3, you are right.",0,0.9751684665679932
778951635,1539,knqyf263,2022-01-05T16:16:57Z,"we want to encourage users to update to the latest version. we can download the v1 db when they use an old binary, but the v1 database will be outdated and lead to false negatives as you said.",0,0.9659567475318909
778952573,1539,knqyf263,2022-01-05T16:18:11Z,"for those who revert the binary to an old version, they need to clear the new database once and download the old database explicitly.",0,0.9816085696220398
778954775,1539,knqyf263,2022-01-05T16:21:14Z,it failed in my environment. [code block],-1,0.8237389326095581
778983960,1539,knqyf263,2022-01-05T16:58:48Z,"that is because `updatedownloadedat()` is always called with `download()`, but `download()` may not be called with `updatedownlodedat()` in client/server mode. but i updated it according to your suggestion. [a link]",0,0.9878870248794556
778985797,1539,knqyf263,2022-01-05T17:01:08Z,"the benefit of `go-getter` can take a variety of input formats and users don't have to care about it. in this case, the input is a local compressed file, but we can use the same function `download()`. [a link]",0,0.9765024185180664
779433789,1539,AndreyLevchenko,2022-01-06T10:04:37Z,should it be documented somewhere?,0,0.9825992584228516
779438646,1539,AndreyLevchenko,2022-01-06T10:12:50Z,i can understand it will work correctly but question is about code readability. it may be unexpected for someone that method called `download()` used to decompress file.,0,0.9781318306922913
779447352,1539,AndreyLevchenko,2022-01-06T10:27:36Z,i think the check i suggested is required (or something else). just to notify users (eventually) that db with old schema version is not updated anymore. (if they stick to old binary version for some reasons). i can create separate issue if required.,0,0.9853665828704834
779463512,1539,knqyf263,2022-01-06T10:53:12Z,ok. we can do that in a dedicated pr.,0,0.9747291803359985
779464225,1539,knqyf263,2022-01-06T10:54:25Z,"is the error not enough? if you feel so, we can document it.",0,0.9247968792915344
779469038,1539,knqyf263,2022-01-06T11:03:07Z,"first of all, my answer is to your question. we don't need to use `decompress()` since `get()` in `go-getter` can do the same thing. from the perspective of readability, ""download"" may be confusing as you said. should we rename `download()` to `get()` to be aligned with `go-getter`? or, we can define aliases like: [code block] what do you think?",0,0.9583294987678528
779484181,1539,AndreyLevchenko,2022-01-06T11:32:03Z,let's better keep it as is,0,0.9685225486755371
779489363,1539,AndreyLevchenko,2022-01-06T11:42:06Z,"i checked and seems there is no good place to document it. change log has reference to this pr. and it's good enough but i would change message to mention ""schema"". like ""local db has schema version which is not supported anymore. it needs to be updated"". just to distigush that it's not regular db update is required.",0,0.9503529667854309
779558561,1539,knqyf263,2022-01-06T13:49:19Z,"thanks. i've updated. also, i mentioned it in the trouble shooting doc. [a link]",1,0.9471045136451721
872937564,2111,itaysk,2022-05-14T06:08:30Z,"we left compliance out of this release, so remove this",0,0.9830650091171265
872937930,2111,itaysk,2022-05-14T06:12:20Z,remove reference of cis benchmarks,0,0.9803850650787354
872937966,2111,itaysk,2022-05-14T06:12:38Z,remove reference of compliance,0,0.9759841561317444
872938131,2111,itaysk,2022-05-14T06:14:49Z,remove,0,0.9725990891456604
872938531,2111,itaysk,2022-05-14T06:18:59Z,remove this,0,0.9735968708992004
872938860,2111,itaysk,2022-05-14T06:22:38Z,remove,0,0.9725990891456604
872946195,2111,owenrumney,2022-05-14T07:33:48Z,removed,0,0.9654131531715393
872946203,2111,owenrumney,2022-05-14T07:33:53Z,removed,0,0.9654131531715393
872946207,2111,owenrumney,2022-05-14T07:33:56Z,removed,0,0.9654131531715393
872946211,2111,owenrumney,2022-05-14T07:33:59Z,removed,0,0.9654131531715393
872946230,2111,owenrumney,2022-05-14T07:34:05Z,removed,0,0.9654131531715393
872946235,2111,owenrumney,2022-05-14T07:34:09Z,removed,0,0.9654131531715393
873115020,2111,chen-keinan,2022-05-15T06:10:19Z,"this probably should be trivy related version, or i assume this section can be removed if it wasn't exist before",0,0.9870527386665344
873629884,2111,chen-keinan,2022-05-16T11:47:18Z,remove the kube hunter line : `kubectl delete crd kubehunterreports.aquasecurity.github.io`,0,0.9798579216003418
873632138,2111,owenrumney,2022-05-16T11:50:00Z,should the one above it also be removed?,0,0.9829423427581787
1020907600,2910,knqyf263,2022-11-13T13:58:03Z,nit: move it under `k8s`. [a link],0,0.9888540506362915
1020907968,2910,knqyf263,2022-11-13T14:01:09Z,what is this for?,0,0.9697429537773132
1020908401,2910,knqyf263,2022-11-13T14:04:04Z,can't we use t.tempdir()?,0,0.9867167472839355
1020908688,2910,knqyf263,2022-11-13T14:05:27Z,it is not obvious what it looks for. please add comments here.,0,0.9445196986198425
1020908886,2910,knqyf263,2022-11-13T14:06:52Z,`--dependency-tree` should work with the vm scanning,0,0.9867836236953735
1020910090,2910,knqyf263,2022-11-13T14:14:32Z,i think it is better to just configure the default value to 30 mins. i'll update aws scanning later.,0,0.9773752093315125
1020921747,2910,knqyf263,2022-11-13T15:31:42Z,do we need `vm` here? what if just returning `io.sectionreader`?,0,0.9885419607162476
1020921961,2910,knqyf263,2022-11-13T15:32:49Z,why don't you call that in `clean()`?,0,0.9685884118080139
1020922405,2910,knqyf263,2022-11-13T15:35:39Z,"cannot use snapshot id as is for the cache key. the cache key should be re-calculated according to analyzer versions, options, etc.",0,0.9849578142166138
1020939741,2910,knqyf263,2022-11-13T17:41:27Z,i'm not sure it works properly.,-1,0.9455973505973816
1022957892,2910,masahiro331,2022-11-15T15:44:47Z,need to this test. [a link],0,0.9867881536483765
1022960175,2910,masahiro331,2022-11-15T15:46:38Z,because target is include directory path. [a link],0,0.9891322255134583
1022979766,2910,masahiro331,2022-11-15T16:02:23Z,because it is no longer needed when inspect method is finished. there is no need to keep it until clean is called.,0,0.9736917018890381
1025281688,2910,masahiro331,2022-11-17T14:39:57Z,"[a link] now, the mode function returns the mode stored in the xfs or ext4 inode.",0,0.9892994165420532
1652143214,6861,knqyf263,2024-06-25T07:26:21Z,is it breaking because of this change?,0,0.735501766204834
1652144884,6861,chen-keinan,2024-06-25T07:27:37Z,i know thats why i put `feat(k8s)!` in title,0,0.8897179961204529
1652153107,6861,knqyf263,2024-06-25T07:33:58Z,"yes, i was wondering how it is breaking. are you going to announce?",0,0.7899981737136841
1652154297,6861,chen-keinan,2024-06-25T07:34:52Z,"yes, but also for k8s compliance report naming, all compliance report include version now (except of aws which has it before) , that way it breaking unless you don't think it should be announce as breaking",0,0.9856025576591492
1652284693,6861,knqyf263,2024-06-25T08:47:45Z,i think all naming updates should be announced as it will break user commands.,0,0.9819728136062622
1652329951,6861,nikpivkin,2024-06-25T09:15:54Z,became curious about how embedded files are loaded and found that `trivy-kubernetes` [a link] without command filesystems and node configs. apparently that was missed in this [a link]?,0,0.910232663154602
1652378664,6861,chen-keinan,2024-06-25T09:43:36Z,logic can be found [a link],0,0.9879568219184875
1652420892,6861,nikpivkin,2024-06-25T10:03:50Z,"i see it, but file systems are not passed to the collector.",0,0.9859980344772339
1652496218,6861,chen-keinan,2024-06-25T10:30:06Z,"thanks for catch up, fixed with [a link] , pr is updated with latest trivy-kubernetes",1,0.9339867830276489
1667968107,6965,DmitriyLewen,2024-07-08T04:12:48Z,let's update `fixedversion` to show vulnerability for `opensuse-tumbleweed.tar.gz` [code block] after these changes you will need to update the gold file.,0,0.9845815300941467
1667969748,6965,DmitriyLewen,2024-07-08T04:16:40Z,do we need this?,0,0.983482837677002
1667971386,6965,DmitriyLewen,2024-07-08T04:20:15Z,it would be great to add advisory details to `vulnerability.yaml`. i took this from database: [code block],0,0.8448715806007385
1667975837,6965,DmitriyLewen,2024-07-08T04:28:18Z,we check only `name` and `version` of package: [a link] let's remove `installed files` arrays to reduce the file length.,0,0.9896020293235779
1668301849,6965,msmeissn,2024-07-08T09:26:25Z,"vulnerability.yaml is per cve indexed, should i add the two cves? or can i add the opensuse identified to vulnerability.yaml?",0,0.9761897325515747
1668304693,6965,msmeissn,2024-07-08T09:28:07Z,should i do this manually or how?,0,0.9711172580718994
1668306207,6965,msmeissn,2024-07-08T09:29:09Z,removed it for now,0,0.9851481914520264
1668330358,6965,DmitriyLewen,2024-07-08T09:46:52Z,`jq 'del(.[].installedfiles)'` should work,0,0.9838238954544067
1668333605,6965,DmitriyLewen,2024-07-08T09:49:17Z,"you need to add `opensuse-su-2024:13065-1` with `title`, `description`, etc. fields into `vulnerability.yaml` file.",0,0.9893333315849304
1668335310,6965,DmitriyLewen,2024-07-08T09:50:36Z,we use this file to fill `vulnerability` bucket in test db,0,0.9894481897354126
1668712222,6965,msmeissn,2024-07-08T14:09:38Z,i did so,0,0.9725131988525391
1668712638,6965,msmeissn,2024-07-08T14:09:53Z,"added it, it seems to fill it into golden now",0,0.6599511504173279
1669652072,6965,DmitriyLewen,2024-07-09T04:04:30Z,i found a problem with this and have already created #7122 to fix it. i added advisory details here - [a link],0,0.9758743643760681
1891587643,8134,knqyf263,2024-12-19T10:39:06Z,"i don't remember why this page doesn't mention `--include-dev-deps` like [a link], but we should.",0,0.930655837059021
1895298075,8134,knqyf263,2024-12-23T06:16:45Z,this package is not marked as a development dependency. is it correct? i'm concerned transitive dependencies introduced by direct development dependencies are not marked correctly.,0,0.5989783406257629
1895379898,8134,nikpivkin,2024-12-23T07:58:30Z,`httpx` is not a development dependency: `uv add httpx==0.28.1 --extra socks`,0,0.9876903295516968
1896386930,8134,knqyf263,2024-12-24T04:54:59Z,why did we newly introduce this dependency? i thought the test case was updated for optional or development dependencies.,0,0.9844473600387573
1896389872,8134,knqyf263,2024-12-24T05:00:30Z,did we need it to test extra packages?,0,0.9856453537940979
1896394274,8134,nikpivkin,2024-12-24T05:06:47Z,"ah, i should have added about test cases in the description. yes, i added some more test cases: - an optional dependency in the root package - direct dependency with an extra dependency that is optional",0,0.970642626285553
1896419807,8134,knqyf263,2024-12-24T05:47:27Z,"ok, thanks.",1,0.5829715132713318
1896422468,8134,DmitriyLewen,2024-12-24T05:51:27Z,can use link for `include` as in [a link]?,0,0.9893781542778015
1896423864,8134,DmitriyLewen,2024-12-24T05:53:36Z,trivy doesn't support `--include-dev-deps` flag for `pip`,0,0.9800894260406494
1896425241,8134,DmitriyLewen,2024-12-24T05:55:27Z,same,0,0.9733930826187134
1896436805,8134,nikpivkin,2024-12-24T06:12:35Z,fixed [a link],0,0.9879513382911682
1896436880,8134,nikpivkin,2024-12-24T06:12:40Z,fixed [a link],0,0.9879513382911682
1896440080,8134,nikpivkin,2024-12-24T06:17:57Z,"by the way, why are `include/exclude` used to link the table and sections and not the package manager names from the first column?",0,0.9831339120864868
1896454937,8134,DmitriyLewen,2024-12-24T06:39:20Z,"by default, we don't show dev dependencies. this link is intended to draw users attention to this and direct them to the section about the file, where they can see that `--include-dev-deps` flag needs to be used.",0,0.9877535700798035
1896528121,8134,DmitriyLewen,2024-12-24T08:18:15Z,you only need to add links if the `--include-dev-deps` flag is used for the file,0,0.9883253574371338
1896532162,8134,nikpivkin,2024-12-24T08:23:35Z,in nodejs all package managers have links. i think the documentation should be consistent.,0,0.9806079864501953
1896533822,8134,nikpivkin,2024-12-24T08:25:42Z,then we should update the nodejs documentation,0,0.9836946725845337
1896552621,8134,nikpivkin,2024-12-24T08:48:25Z,fixed,0,0.975196123123169
1896569428,8134,DmitriyLewen,2024-12-24T09:07:40Z,"i missed that a link was added for `bun`. we can remove the link for that. but for other files - `yarn`, `npm` and `pnpm` support `--include-dev-deps`. that's why they have links.",0,0.9647473096847534
1896686174,8134,knqyf263,2024-12-24T11:52:05Z,"i think we should write the default behavior, like [a link]. or am i missing something? [code block]",0,0.9844385981559753
1896687051,8134,nikpivkin,2024-12-24T11:53:27Z,"ok, i'll open a pr for that.",0,0.9792097806930542
1896688612,8134,nikpivkin,2024-12-24T11:55:29Z,fixed [a link],0,0.9879513382911682
335128890,201,simar7,2019-10-15T19:11:45Z,why is the file closed here?,0,0.9502552151679993
335129447,201,simar7,2019-10-15T19:13:11Z,does it make sense to keep this method inside of `tar_input_test.go` as it's purely for testing and nothing else at the moment?,0,0.9840688109397888
335138939,201,knqyf263,2019-10-15T19:36:46Z,"i need just a temp file. the result of trivy is exported to this file through pseudo cli (`app.run`) like this. `trivy --output /path/to/tempfile` in short, `app.run` writes the result to this file. we don't use this file descriptor directly. if the file is left open, an error occurs when trivy (= `app.run`) tries to open it.",0,0.9848566651344299
335140279,201,knqyf263,2019-10-15T19:40:17Z,"i separated the file so i can add more tests later. as you said, it doesn't make sense for now. i can merge this function to `tar_input_test.go`.",0,0.9782059192657471
335142461,201,simar7,2019-10-15T19:45:45Z,gotcha. thank you for the explanation!,1,0.9824057221412659
335183238,201,simar7,2019-10-15T21:20:31Z,"i couldn't reason out why this was being changed to a `[]*result`. would it make sense to change it back to `[]result` unless i've missed a reason not to, in order to keep things simple?",0,0.8664915561676025
335631443,201,simar7,2019-10-16T18:09:31Z,one thought: [a link],0,0.9804931282997131
335750238,201,simar7,2019-10-16T23:15:53Z,this function doesn't seem to be used anywhere. should this be removed?,0,0.9714486598968506
335835163,201,knqyf263,2019-10-17T06:55:32Z,"yes, but this function is used by a different tool. [a link] before, i'd like to develop a different tool to scan lock files. i suspend to develop it now, but i'm supposed to resume it in the future. let me keep this function.",0,0.9626950621604919
336205615,201,simar7,2019-10-17T20:15:50Z,"should an `unknown` severity be ranked higher than a known `low` one, if the `low` vulnerability has a `pkgname` set? i see this is the current behaviour but i'm just probing to see if it is what we want. you can see a test that demonstrates this here: [a link]",0,0.9814341068267822
336212310,201,simar7,2019-10-17T20:31:42Z,tests like these which use the `rpm` command fail for me (because i didn't have the `rpm` tool installed). should we ensure that wherever these tests will get run (e.g. ci) we have the `rpm` binary installed so the tests don't fail out as a result?,0,0.9502031207084656
336215135,201,simar7,2019-10-17T20:38:16Z,"based on our conversation offline, i've switched it back to `[]result` in this commit [a link]",0,0.9834860563278198
336223761,201,simar7,2019-10-17T20:58:29Z,would you have an example of an acceptable input template that the user can pass in?,0,0.9876789450645447
336226202,201,simar7,2019-10-17T21:04:22Z,i'm not sure why this isn't coming out in the diff but it looks like `getignoredids()` no longer takes in an argument for `ignorefile`. is that a flag we're going to deprecate? would that break backwards compatibility with existing usage of the flag?,0,0.8360405564308167
336591533,201,knqyf263,2019-10-18T17:14:10Z,like this [code block],0,0.9861828088760376
336592103,201,knqyf263,2019-10-18T17:15:37Z,`getignoreids()` takes an argument in `master` branch. i'll fix this conflict. [a link],0,0.9867905974388123
336593195,201,knqyf263,2019-10-18T17:18:25Z,"exactly. we need to install `rpm` in ci. besides, we probably should prepare makefile and ensure `rpm` will be installed on the test environment.",0,0.9859817028045654
336604386,201,knqyf263,2019-10-18T17:45:42Z,i fixed it.,0,0.9755434989929199
336668805,201,knqyf263,2019-10-18T20:43:11Z,"basically, all vulnerabilities have pkgname. i'd like to display vulnerabilities sorted by a package name. why do you expect `hogepkg`? this package doesn't seem to be defined. [a link]",0,0.9842945337295532
336670519,201,simar7,2019-10-18T20:48:43Z,makes sense if pkgname takes preference!,0,0.9618872404098511
336671568,201,simar7,2019-10-18T20:51:58Z,i addressed this. moved it back to `tar_input_test.go` for now until we have the need for a separate file.,0,0.9877259135246277
450081986,552,knqyf263,2020-07-06T08:59:56Z,"would you make sure some corner cases work, such as `^` and `~`. [a link] node.js has some special constraints. [a link] [a link] if it doesn't work, we need to define `matchversions` for each language.",0,0.9880151152610779
450284106,552,rahul2393,2020-07-06T15:02:07Z,"i used [a link] it passed all constraints reported in issue, also it will work with all possible node.js special constraints, please take a look at tests now.",0,0.9776582717895508
450862120,552,rahul2393,2020-07-07T13:26:19Z,please check,0,0.980006754398346
452036174,552,knqyf263,2020-07-09T08:02:09Z,"what is `a`? it is ok if the short name is clear what it means like `for _, m := range msgs {`, but in this case, it is difficult to understand what `a` indicates.",0,0.9806157946586609
452048205,552,knqyf263,2020-07-09T08:23:28Z,`assert` goes through even if it doesn't satisfy the condition. [code block],0,0.9884626269340515
452049007,552,knqyf263,2020-07-09T08:24:46Z,is there any reason that you need the suffix 2? [code block],0,0.9874463081359863
452053528,552,knqyf263,2020-07-09T08:32:27Z,thanks!,1,0.9308210611343384
452056617,552,knqyf263,2020-07-09T08:37:53Z,do you think `-java` is pre-release? it looks just a kind to me. [a link] i meant we might need to change the comment. i think we don't need to change the logic.,0,0.7890799641609192
452060367,552,knqyf263,2020-07-09T08:44:17Z,"i know this change affects all `advisory.go` for each language, but `go-version` is no longer necessary. so, i feel it is the right way to replace `go-version` with `semver` in all places. [code block]",0,0.9346979260444641
453202257,552,rahul2393,2020-07-11T14:51:13Z,fixed,0,0.975196123123169
453202311,552,rahul2393,2020-07-11T14:51:59Z,"it was committed mistakenly, was comparing the older/new version for correctness, fixed",0,0.9417775869369507
453202325,552,rahul2393,2020-07-11T14:52:07Z,done,0,0.9764507412910461
453202331,552,rahul2393,2020-07-11T14:52:14Z,done,0,0.9764507412910461
455631799,552,knqyf263,2020-07-16T08:55:59Z,i found this version was old. you have to import `semver` as follows. [code block],0,0.9870113134384155
455634508,552,knqyf263,2020-07-16T09:00:20Z,"i think there is no reason to overwrite `rangeversions` and it sometimes introduces a bug, so `for _, v := range rangeversions {` looks enough in this case.",0,0.9855185747146606
455636048,552,knqyf263,2020-07-16T09:02:56Z,could you define this process as another function?,0,0.9876328706741333
455641568,552,knqyf263,2020-07-16T09:11:41Z,"i think it doesn't work with a patch version including a dot such as `1.2.3-beta.1. [a link] it might work even if we replace valid dots, but i think we should keep the version in its original form as much as possible to avoid an unexpected bug. the best way i think of at the moment is [code block] let me know your thought.",0,0.976405680179596
455740860,552,rahul2393,2020-07-16T12:14:55Z,"updated, as suggested, i think you are right, let's see if we get any other issues later",0,0.903537929058075
456914894,552,knqyf263,2020-07-19T14:23:00Z,"nit: it is wide, so what if we split the line? [code block]",0,0.9847871661186218
456915196,552,knqyf263,2020-07-19T14:25:37Z,"this `msgs` will not be used, right? or, does it affect the loop variable at line 37? if it is not used, we should make it easy to understand. [code block]",0,0.9862335920333862
456917103,552,rahul2393,2020-07-19T14:42:39Z,done,0,0.9764507412910461
661300783,1081,nscuro,2021-06-30T09:43:46Z,this is now possible as of cyclonedx-go [a link],0,0.9867749214172363
686729502,1081,masahiro331,2021-08-11T11:10:30Z,thank you! deep respect. i have a few question. does cyclonedx-go have any plans to support vulnerability? i want to use this struct. [a link],1,0.9886888861656189
686779511,1081,nscuro,2021-08-11T12:24:48Z,"no plans currently, as the vulnerability extension is only supported for xml. working with xml (and especially namespacing in xml) in go is a pain, which is why i didn't bother implementing it yet. i see you've asked a similar question in the cdx slack already. i think or may be able to give some insights in how vulnerabilities are supposed to be or will be handled in cyclonedx going forward. if the proposed solutions don't help your case with trivy, you could consider using xml output instead, and i'll see how i can integrate the vulnerability extension into cyclonedx-go.",-1,0.9497070908546448
686905904,1081,stevespringett,2021-08-11T14:48:47Z,"refer to cyclonedx support for [a link] and [a link]. disclosing vulnerabilities in an sbom is currently only supported in xml. that will be changing in a big way with v1.4 of the spec. so in terms of design, i would plan for the eventual support for json, but it will be changing from its current format.",0,0.9844979643821716
687106753,1081,masahiro331,2021-08-11T19:17:11Z,"thank for reply. i understood perfectly. i will wait for cyclonedx 1.4 to be released. in this pull request, i will implement to create sboms for package information, etc.",1,0.9666951298713684
776674414,1081,knqyf263,2021-12-30T10:55:33Z,is there any reason why we cannot this version? [a link],0,0.978302001953125
804526880,1081,nscuro,2022-02-11T10:31:15Z,cyclonedx v1.4 including support for vulnerabilities is now available in [a link].,0,0.9886921644210815
805610994,1081,knqyf263,2022-02-14T08:42:41Z,any reason you moved it here?,0,0.974403440952301
805622542,1081,knqyf263,2022-02-14T08:56:50Z,we may want to assert `dependson` as well.,0,0.9875679016113281
806024103,1081,masahiro331,2022-02-14T16:31:12Z,"if we don't separate the function, gocyclo's checks will cause it to fail. [code block] i separated the functions because i think there will be more cases in the future where list-all-pkg needs to be enforced.",0,0.9839882254600525
797970584,1668,knqyf263,2022-02-02T20:05:05Z,is there any reason to remove ecr?,0,0.981965959072113
797970745,1668,knqyf263,2022-02-02T20:05:20Z,ditto,0,0.8428916931152344
797971273,1668,knqyf263,2022-02-02T20:06:04Z,"we cannot use the default token since this action pushes commits to another repository. if you need additional permission, please let me know.",0,0.9836873412132263
797971532,1668,knqyf263,2022-02-02T20:06:24Z,devops?,0,0.919328510761261
797971703,1668,knqyf263,2022-02-02T20:06:39Z,looks like it is your account.,0,0.9763577580451965
797984599,1668,developer-guy,2022-02-02T20:25:17Z,"so sorry about that, i forgot to revert the changes that i've been made for testing purposes.",-1,0.9866985082626343
797984830,1668,developer-guy,2022-02-02T20:25:38Z,"to be able to use sign feature, i need to update the latest version of goreleaser",0,0.9848282933235168
797984867,1668,developer-guy,2022-02-02T20:25:42Z,"so sorry about that, i forgot to revert the changes that i've been made for testing purposes.",-1,0.9866985082626343
797984914,1668,developer-guy,2022-02-02T20:25:46Z,"so sorry about that, i forgot to revert the changes that i've been made for testing purposes.",-1,0.9866985082626343
797984952,1668,developer-guy,2022-02-02T20:25:49Z,"so sorry about that, i forgot to revert the changes that i've been made for testing purposes.",-1,0.9866985082626343
798273087,1668,knqyf263,2022-02-03T07:06:02Z,"i got it. please pin the version then. otherwise, we have a concern about supply chain attacks and may face an unexpected error.",0,0.94355309009552
798977279,1668,developer-guy,2022-02-03T21:19:20Z,"gotcha! fixed right now, thanks",1,0.9889951944351196
799777864,1668,knqyf263,2022-02-04T20:07:08Z,"according to the document, what we need looks like `docker_signs`. `sign-blob` is a subcommand for signing artifacts such as binaries and packages. [a link] am i missing something?",0,0.9838210344314575
799813395,1668,developer-guy,2022-02-04T21:11:24Z,"ah yes, you are totally right, this was my mistake, i'll fix that asap, really good catch, thank you for watching my back :man_raising_hand_light_skin_tone::smiling_face_with_heart-eyes:",1,0.9859384894371033
799856683,1668,knqyf263,2022-02-04T22:29:55Z,but we want to sign our binaries and packages as well as container images in another pr:winking_face:,0,0.8746044635772705
800360160,1668,developer-guy,2022-02-07T06:59:13Z,"thank you, it should be fixed right now.",1,0.7349888682365417
805186506,1668,naveensrinivasan,2022-02-12T17:50:42Z,i would recommend pin-by-sha [a link],0,0.978958010673523
807242437,1668,developer-guy,2022-02-15T19:35:53Z,"fixed, thank you",1,0.8080604672431946
825440735,1668,knqyf263,2022-03-13T12:26:27Z,i think we need more permissions since it disables other permissions. [a link] i'll take it.,0,0.983758270740509

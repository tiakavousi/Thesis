id,pr_number,user,created_at,body
778318916,331,DjLegolas,2022-01-04T19:00:48Z,Doesn't this needs to be a x64 version of GTK?
778322855,331,cas--,2022-01-04T19:07:49Z,There is only two lines difference between these nsi files so there should only be one nsi script that be be called with optional argument for 32-bit build (64-bit default?)
778324478,331,cas--,2022-01-04T19:10:37Z,there should be no reason to skip isort on this file
778484845,331,doadin,2022-01-05T01:08:24Z,yes the x64 build had not completed yet so I didn't have a url. Its done now and I just woke up so I'm going to update.
778485045,331,doadin,2022-01-05T01:09:02Z,"I am not really familiar with NSIS, I will look into that."
778485180,331,doadin,2022-01-05T01:09:32Z,"Was just a copy paste from the bbfreeze file, sorry."
780330445,331,cas--,2022-01-07T15:17:56Z,Is this a typo? Also this does not match the x86 step
780330548,331,cas--,2022-01-07T15:18:05Z,"Can we use [strategy matrix](https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#using-environment-variables-in-a-matrix) to deduplicate the Build-Windows steps.

So perhaps set a `gvsbuild` for download link, `arch` key set to `x86` or `x64` and `wheel_arch` to `win32` or `amd64`  etc... 

"
780331793,331,cas--,2022-01-07T15:20:07Z,I know this was just renamed but can we point to the correct dependencies reference in docs
780333095,331,cas--,2022-01-07T15:22:09Z,Could we convert this to a 'markdown' document so rename extension to `.md`?
780334242,331,cas--,2022-01-07T15:23:50Z,Can we install latest specific version to avoid surprises 
780780944,331,cas--,2022-01-09T13:20:43Z,"This seems very fragile having github actions specific lines in the spec file. Also this is added for x86 arch which probably not what we want?

What is causing pyinstaller not to include them? Could this issue not always be the case any x64 build not just github actions?

Is there a way of specifying it via argument or perhaps without full path? e.g. `libcrypto-1_1-x64.dll`"
780781008,331,cas--,2022-01-09T13:21:29Z,"Is this being used? Remove if not

I was just thinking that the actual wheel platform is `win_amd64` and a better name would have been `py_platform` since it's platform tag generated by Python."
780782061,331,cas--,2022-01-09T13:30:43Z,Can simplify to using run command `working-dir`keyword: https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#jobsjob_idstepsrun
780782728,331,cas--,2022-01-09T13:36:15Z,Can we rename `delugensis.py` to something more meaningful such as `setup_nsis.py`
780782891,331,cas--,2022-01-09T13:37:51Z,I dont' think we need to complicate this by setting envs for matrix options
780783452,331,cas--,2022-01-09T13:42:55Z,What is the current status of the redistributables? Will the user always have them installed? 
780803224,331,cas--,2022-01-09T16:30:55Z,"Easier to maintain if move `gvsbuild` as an env to install deps section, use python and arch to populate filename."
780803492,331,cas--,2022-01-09T16:32:43Z,"Can we simplify by moving this as a matrix list:

```
      matrix:
        arch: [x64, x86]
        python: [3.7]
        libtorrent: [2.0.5]
```"
780803767,331,cas--,2022-01-09T16:35:10Z,Can you replace this env with `${{ matrix.libtorrent }}`
780804078,331,cas--,2022-01-09T16:37:48Z,Set-Location line can be removed then 
784068053,331,DjLegolas,2022-01-13T15:29:30Z,Needs to be dropped
784118311,331,CirnoT,2022-01-13T16:23:08Z,"```diff
- tmp_ret = collect_all('deluge')
- hiddenimports += tmp_ret[2]
+ hiddenimports += collect_all('deluge')[2]
```"
784119326,331,CirnoT,2022-01-13T16:24:16Z,"```diff
- #Add Hidden Imports for Plugins
+ # Add Hidden Imports for Plugins
- tmp_ret2 = collect_all('twisted')
- hiddenimports += tmp_ret2[2]
+ hiddenimports += collect_all('twisted')[2]
```"
784119911,331,CirnoT,2022-01-13T16:24:50Z,"This is not used anywhere.

```diff
- # Get build_version from installed deluge.
- build_version = deluge.common.get_version()
```"
784120423,331,CirnoT,2022-01-13T16:25:25Z,"Only used by `get_version` which itself is unused.

```diff
- import deluge.common
```"
784122974,331,CirnoT,2022-01-13T16:28:16Z,Any specific reason why rest of file uses `pip` while this line uses `python -m pip`? Note that `pip` might reference different binary than module loaded by `python -m`.
784123334,331,CirnoT,2022-01-13T16:28:40Z,Any reason this is done separately from `libtorrent`?
784124566,331,CirnoT,2022-01-13T16:30:00Z,"While I have nothing against it by itself, this is introducing dependency on binary release that is outside of Deluge control. We should patch it ourselves or keep patched repository under `deluge-torrent` organization."
784126100,331,CirnoT,2022-01-13T16:31:46Z,"Have you checked if this is necessary on GH instance? A quick run from 64-bit Windows shows that there are no `libssl-1_1.dll` files produced when running with 64-bit Python, only `x64` variants. Perhaps GH `x64` arch uses 32-bit Python?"
784127980,331,CirnoT,2022-01-13T16:33:50Z,"This section looks good however it could be cleaner if we put the executable generation in a loop, so that any changes need to be done only once, not 6 times."
789674273,338,cas--,2022-01-21T13:52:14Z,This should not be encoded 
789674855,338,cas--,2022-01-21T13:52:58Z,Please import at top of module
789688659,338,cas--,2022-01-21T14:10:56Z,This should not be logging anything
791145666,338,DjLegolas,2022-01-24T20:58:19Z,Why changed to `%-string`? `f-string` is much better
791167272,338,DjLegolas,2022-01-24T21:32:08Z,"the `log.warning` call seem redundant as in the `except Exception` below we print the same line, but with the exception info."
791168412,338,DjLegolas,2022-01-24T21:33:55Z,"why split the `ip`? are we expecting it to have several options?
the same goes for `is_ipv6` function
"
791175224,338,doadin,2022-01-24T21:44:29Z,Yes for multi-homing.
791176755,338,doadin,2022-01-24T21:46:45Z,We could do the for loop else where where we need to verify interfaces/ips I guess.
791178459,338,DjLegolas,2022-01-24T21:49:35Z,"I asked because running it on the entire string will fail in case it contain several types of interfaces:
```
>>> is_ipv4('127.0.0.1,eth01')
Unable to verify IPv6 Address with socket.
False
```"
791187453,338,doadin,2022-01-24T22:03:24Z,True. Would it work to extend is_ip to return return is_ipv4(ip) or is_ipv6(ip) or is_net_interface(ip)
791188669,338,doadin,2022-01-24T22:05:22Z,No that would still fail. Hmmm not sure how to fix this.
791190043,338,doadin,2022-01-24T22:07:38Z,I think I need to move the for loop out of the ip_* etc checks.
791202634,338,DjLegolas,2022-01-24T22:28:41Z,"yep. maybe the outer function I suggested in the opening message.
For example (the name needs to be changed ðŸ˜…):
```python
def verify_ip_or_interface(ip):
    interfaces = []
    for interface in ip.split(','):
        if is_ip(interface) or is_net_interface(interface):
            interfaces.apped(interface)
    return ','.join(interfaces)
```"
791220550,338,doadin,2022-01-24T23:00:55Z,Honestly I think Multi-Homing is above my understanding.
791232270,338,DjLegolas,2022-01-24T23:23:51Z,"don't worry, eventually we will get it also :)
you are doing great, even without that feature ðŸ’¯ "
791241158,338,doadin,2022-01-24T23:43:22Z,I added a test but still not sure how to clean up if is_ip(inter) or is_net_interface(inter)
791304931,338,doadin,2022-01-25T02:21:55Z,@DjLegolas would something like https://github.com/deluge-torrent/deluge/pull/338/commits/7384191554606094c94813effce5270e314d7219 work?
792027178,338,cas--,2022-01-25T18:56:20Z,"I agree returning the binary format is not correct but when using try..except try to keep code being wrapped to a minumum:

```
try:
    socket...
except OSError:
    return False
else:
    return True
```"
792031190,338,cas--,2022-01-25T19:01:44Z,"Should not be logging a warning and needs to return `False` since:

> If the IP address string ip_string is invalid, OSError will be raised.
"
792031658,338,cas--,2022-01-25T19:02:20Z,I think we should move this to top of the module
792032752,338,cas--,2022-01-25T19:03:53Z,This is not something that a common function should care about and should not modify either
792034891,338,cas--,2022-01-25T19:07:02Z,I think we should standardise on the naming. So interface in libtorrent terms is an IP or Adapter therefore `is_interface` would suffice perhaps?
792040360,338,cas--,2022-01-25T19:14:40Z,Continuing from previous comment how about `is_adapter`? 
792042893,338,doadin,2022-01-25T19:18:06Z,"I figured it would make it easyer on people to avoid simple errors and depending on how they find the network guid it may or may not provide it in upper and lead to confusion I could see people thinking ""im putting it in right, why is deluge broken?"" hence why it also logs a message so people know what it should be. Your call though ill take it out. "
792044472,338,doadin,2022-01-25T19:20:11Z,yea @DjLegolas already said just there for testing if the code works. Which it does.
792044689,338,cas--,2022-01-25T19:20:29Z,I understand but we can do that verification in the UI where we can easily provide feedback to the user.
792045430,338,doadin,2022-01-25T19:21:38Z,Alternatives? Cause it doesn't work when its not. So not sure what you mean by shouldn't be.
792383110,338,cas--,2022-01-26T07:59:07Z,This is the wrong way round `is_interface` should be `is_adapter`. An interface is either an IP address or adapter id and we are trying to match the function calls to the what is required for lt `listen_interface`
792444633,338,cas--,2022-01-26T09:23:17Z,"So this should be `str` and it looks like there is platform bug in ifaddr 0.1.7 since it's returning `bytes` on Windows for adapter name, not good... https://github.com/pydron/ifaddr/pull/32

Can install that specific commit with:

```
pip install https://github.com/pydron/ifaddr/archive/37cb5334f392f12811d38d90ec891746e3247c76.zip
```"
792947017,338,cas--,2022-01-26T18:56:08Z,"For this function we are only checking if it's an `ip` or `adapter` so not if there are multiple interfaces specified, quick list of changes:

* Replace `ip` parameter with `interface`  
* Remove the comma split.
* Can you rename docstring to `Check if interface is a valid IP or network adapter`
* Can be simplified to `return is_ip... or is_adapter...`

This function can then be used in rest of modules for listen_interface or outgoing_interface checks"
792949593,338,cas--,2022-01-26T18:59:33Z,"Why are we restricting to Windows, if it's available we should use it"
792949933,338,cas--,2022-01-26T19:00:01Z,The param should be named `adapter`
792953150,338,cas--,2022-01-26T19:04:15Z,"Is this correct, I think 'in' would be error prone vs equality check?"
792981698,338,cas--,2022-01-26T19:33:03Z,"Can we put ifaddr check first.

Also with an OSError we are unable to determine adapter status so have to return True.

We could include a fallback for Windows with your regex to do a pattern match 

So something like:
```python
if not adapter:
    return False

if not windows_check():
    try:
           adapters = socket.if_nameindex()
    except OSError:
         pass
    else:
         return any([adapter == a[1] for a in adapters])

if ifaddr:
    try:
        adapters = ifaddr.get_adapters()
    except OSError:
         return True
    else:
         return any([adapter == a.name for a in adapters])

if windows_check():
     regex = '^{[0-9A-Z]{8}-([0-9A-Z]{4}-){3}[0-9A-Z]{12}}$'
     return  re.search(regex, str(interface))

return True"
792989944,338,doadin,2022-01-26T19:44:34Z,The coma split is for multi-homing support while we did decide to focus on one thing in this PR I think it would be better kept as is so we don't have to re-write this again later.
792990964,338,doadin,2022-01-26T19:46:07Z,later on we do linux_check() or osx_check() to not run ifaddr on linux or mac as it should not be needed since those platforms can use socket.if_nameindex().
792994865,338,doadin,2022-01-26T19:51:29Z,"Would it not be better to rely first on built-in vs third party? I would think third party would be less reliable, which is why I have it only using that on windows because windows we dont have a built-in, at least not yet."
792999963,338,cas--,2022-01-26T19:58:27Z,"Okay, there are pros and cons to third party libs but I'll concede here that we could put ifaddr after. I've updated the snippet to also pass on OSError so that it tries `ifaddr` if it's available and also rather than testing for linux/macos we just do negative check for windows to exclude it"
793003815,338,cas--,2022-01-26T20:03:22Z,Sorry please remove and we'll create another function for that as needed
793014955,338,cas--,2022-01-26T20:19:00Z,Can you put this comment in the commit message
793014982,338,cas--,2022-01-26T20:19:04Z,We need to mention the optional dependency in DEPENDS.md and add it setup.py extras
793015828,338,cas--,2022-01-26T20:20:08Z,This should use `is_interface`
793016355,338,cas--,2022-01-26T20:20:42Z,Should use `is_interface`
793023645,338,doadin,2022-01-26T20:31:17Z,for some reason the git ui im using is not letting me.
793023967,338,doadin,2022-01-26T20:31:44Z,Other than this rest is merged.
793024021,338,cas--,2022-01-26T20:31:51Z,This can be put in the requirements.txt with `sys_platform == 'win32'` to only install for Windows
793030752,338,doadin,2022-01-26T20:41:19Z,nvm I got it to work.
793937874,338,cas--,2022-01-27T19:35:57Z,This should be is_interface and the empty check has been removed which would prevent clearing the field
793938020,338,cas--,2022-01-27T19:36:10Z,is_interface
793952278,338,cas--,2022-01-27T19:56:51Z,"Naming here is quite important so apologies for changing my mind on this again.

Probably `is_interface_name(name)` is better here since adapter does suggest physical hardware whereas it could be a virtual interface and we are just checking that the name of the interface is correct.

Try not to use 'test' in this context for the docstring, this might be better:
```
- A test to see if 'interface' is a valid network interface.
+ Returns True if an interface name exists
```
Make sure to update rest of docstring "
793952809,338,cas--,2022-01-27T19:57:39Z,If this is in requirement we don't need it here
793954717,338,cas--,2022-01-27T20:00:20Z,We can just say `Verify ...`
793956454,338,cas--,2022-01-27T20:02:45Z,"Please remove both the comments as they don't add anything here. If anything the usage of ifaddr would be mentioned in the function.

We can look at the git commit if we need to know why it was added"
793957165,338,cas--,2022-01-27T20:03:48Z,This docstring needs correcting to from `ip` to `interface`
793958963,338,cas--,2022-01-27T20:06:23Z,"Can be simplified `if_nametoindex(adapter)` and replace in else statement any() with True

"
793960923,338,cas--,2022-01-27T20:09:26Z,Oh re.search should be wrapped in bool()
793963545,338,cas--,2022-01-27T20:13:22Z,"This is using plural but this change is only for singular. Could also be shortened


`IP address or network interface name to listen for incoming BitTorrent connections. Leave empty to use system default.`"
793963819,338,cas--,2022-01-27T20:13:45Z,Singular just now please
793964570,338,cas--,2022-01-27T20:14:51Z,See listen_interface comment
793965000,338,cas--,2022-01-27T20:15:32Z,Should not remove the empty check and use is_interface
793965402,338,cas--,2022-01-27T20:16:10Z,Same as incoming
794279801,338,DjLegolas,2022-01-28T08:09:04Z,The IP or interface name to test
794283460,338,DjLegolas,2022-01-28T08:15:15Z,Make sure there are both `assertTrue` and `assertFalse` for all cases of tests
794284548,338,DjLegolas,2022-01-28T08:16:59Z,Maybe add also `ifaddr; sys_platform != 'win32'` for other OSs
795133037,338,DjLegolas,2022-01-30T06:07:54Z,Add at the end of the file `[ifaddr]: https://pypi.org/project/ifaddr/` to make it a link.
227136962,221,aresch,2018-10-22T21:01:29Z,"```suggestion
            if self.session.wait_for_alert(1000) is None:
                continue
```"
227137152,221,aresch,2018-10-22T21:02:08Z,We should crash if there is an exception raised here. Alerts from libtorrent are critical for Deluge to function.
227139737,221,aresch,2018-10-22T21:10:35Z,"I think we could do this better by overriding pause() and clearing a threading event[0] and likewise with resume() setting the threading event. Then just have a event.wait() call here to block until the component is resumed. This would require us to expose these methods in component since we currently don't do that.

[0] - https://docs.python.org/3/library/threading.html#event-objects"
227139845,221,aresch,2018-10-22T21:10:54Z,This should be removed.
227504760,221,DjLegolas,2018-10-23T18:07:38Z,Done.
227504921,221,DjLegolas,2018-10-23T18:08:06Z,"Hmm, good idea. Done."
227505181,221,DjLegolas,2018-10-23T18:08:46Z,Thought I removed it... Done.
227543175,221,aresch,2018-10-23T20:02:28Z,Why timeout here? This thread should block until the component has been resumed.
227546656,221,aresch,2018-10-23T20:13:32Z,These comments can be removed as they are no longer relevant.
227954766,221,aresch,2018-10-24T20:49:31Z,"I think this should be similarly to how _component_stop() is done. In other words, we should call pause() and then add on_pause() as a callback which does a _component_timer.stop().

This way it's consistent with the other behaviour and the pause() resume() signatures do not need to include a result from a previous deferred."
227954837,221,aresch,2018-10-24T20:49:42Z,Same comment as above with pause().
228270005,221,cas--,2018-10-25T17:42:59Z,"There is a callback scoping issue with need_start, the value needs to be passed with the callback but I'm not sure the full purpose of this variable, can you elaborate?

Same in _component_pause()"
228275050,221,cas--,2018-10-25T17:57:06Z,It would be nice to not keep using hasattr: https://hynek.me/articles/hasattr/
228276784,221,cas--,2018-10-25T18:01:59Z,@aresch I saw you've used `set_alert_notify` in spritzle... better than timer perhaps? 
228278234,221,cas--,2018-10-25T18:06:03Z,Need to update the `Component` docstring for these new methods
228281273,221,cas--,2018-10-25T18:15:15Z,"In fact the pause method is defined in the class so the object would always have the `pause` attribute. I think it is an artefact of initial rewrite: b0714f625f50

Edit: Hmm it seems my vague fix, changed things: 9053280e148799

@aresch thoughts? :)"
228336780,221,DjLegolas,2018-10-25T21:13:52Z,"I was thinking about preventing the next lines from being called in case we already called them...
For example, in case we are in `_component_resume` and need to start the timer. If the component has the attribute `resume`, we need to call `resume()` and to `on_resume()` as a callback, in which we will start the timer.
But, if the component don't this attribute, I call `_component_start_timer` and only than `on_resume()`.
In this situation, I'll be calling `_component_start_timer` twice. So I need to prevent it.

I'll change the signature of `on_resume` and `on_pause` so both will get this flag as parameter and not from the outer scope."
228387136,221,aresch,2018-10-26T02:02:52Z,"Yea, I would suggest using it but I'm not sure if it's in a released libtorrent. I think it would only be available in 1.2 with this commit: https://github.com/arvidn/libtorrent/commit/c2ea38fdfe4cc8f5bd9a9525f6d179ebcf4ab4d6#diff-87803408b3e578d01ff14ecd078cfb4c

We probably don't want to raise the minimum libtorrent dependency to 1.2 quite yet."
228387262,221,aresch,2018-10-26T02:03:50Z,"Yea, I don't think we need hasattr() anymore, you're right, we define the functions in the class now."
229638726,221,cas--,2018-10-31T10:32:25Z,"Hmm well it is in 1.1 so that binding should have be exposed there...
"
229640667,221,cas--,2018-10-31T10:37:51Z,"@aresch The `wait_for_alert` is now `1s` whereas the AlertManager was polling at `0.3s`, do you think this is perhaps too long?"
229811233,221,aresch,2018-10-31T18:11:17Z,"I don't think it's a problem since the only thing done in update() is the clean-up of delayed calls. I was actually going to propose removing that entirely but it was out of scope for this PR. I'll mention that idea now though.

We could wrap all handler functions with another function that removes the delayed call from the list on completion which would remove the need to run a clean-up on the list. We'd probably want to change delayed_calls to a dictionary to make this work efficiently.

```python
def run_handler(self, handler, alert):
    handler(alert)
    del self.delayed_calls[(handler, alert)]
```

In handle_alerts() we'd change the creation of the delayed call as such:
```python
for handler in self.handlers[alert_type]:
  self.delayed_calls[(handler, alert)] = reactor.callLater(0, self.run_handler, handler, alert)
```

Anyways, if we think this is a good idea we should do it in a separate PR."
229812147,221,aresch,2018-10-31T18:13:40Z,"> Hmm well it is in 1.1 so that binding should have be exposed there...

I don't see it in the RC_1_1 branch, I think it's only in 1.2."
229819397,221,cas--,2018-10-31T18:34:07Z,I mean it is in C++ code for [RC_1_1](https://github.com/arvidn/libtorrent/blob/RC_1_1/include/libtorrent/session_handle.hpp#L960) so the binding should have been fixed there
229829079,221,aresch,2018-10-31T19:03:52Z,"Oh, yea, we'd need to add it to the bindings. I think that for now, this approach is fine and there isn't much advantage to switching to use set_alert_notify."
230605954,221,aresch,2018-11-04T21:24:25Z,I think this should probably be put in set_up().
230606031,221,aresch,2018-11-04T21:26:16Z,"I'm worried about the timing here. I think the pause should happen and then alerts should be added to the SessionMock, then check to make sure an alert wasn't handled. The way its done right now, I think the alerts in the SessionMock could be handled before the pause occurs and the test isn't really testing anything since SessionMock.alerts == []."
230882954,221,DjLegolas,2018-11-05T19:34:21Z,"I tried moving it to `set_up()`, but got errors on other tests because of it.
So currently I'm not changing it."
230883387,221,DjLegolas,2018-11-05T19:35:35Z,Reasonable point. Changed.
230929507,221,aresch,2018-11-05T22:00:41Z,"This still doesn't address my original comments. Since you are setting self.am.session = SessionMock() before the pause happens, those alerts that are in the SessionMock.__init__ have already been processed. In other words, by the time you set the handler, there are no alerts to handle anyways so the test isn't actually testing what you expect.

What you need to do here is simulate alerts coming from libtorrent while AlertManager is paused will not trigger a handler to run, so I think SessionMock.alerts needs to be built _after_ the AlertManager is paused."
793179294,221,DjLegolas,2022-01-27T01:15:55Z,"4 years later, done ðŸ˜… "
793179354,221,DjLegolas,2022-01-27T01:16:03Z,"4 years later, done ðŸ˜… "
793203961,221,aresch,2022-01-27T02:23:41Z,"Since component.pause() is asynchronous, wouldn't you need to call set_alerts() in a callback on the deferred? Otherwise you may be calling set_alerts() before the component has actually been paused."
793205605,221,gazpachoking,2022-01-27T02:28:06Z,@aresch immediately shows up to comment on an updated 4 year old ticket. ðŸ˜® 
793372509,221,DjLegolas,2022-01-27T08:42:31Z,"@aresch this is what happens when one writes code at 2AM.. will be fixed.
@gazpachoking lol"
59131269,57,cas--,2016-04-10T10:18:38Z,"log.warn or log.error instead?
"
59131290,57,cas--,2016-04-10T10:19:29Z,"Do we know the exception to be raised?
"
59131296,57,cas--,2016-04-10T10:20:15Z,"two too many log lines 
"
59131311,57,cas--,2016-04-10T10:21:21Z,"pylint complains about redefining builtin `help`
"
59131394,57,cas--,2016-04-10T10:30:46Z,"I think reword this ""Enable logfile rotation (optional max file size, default 50MB)""

What do you think about renaming the command to `--logrotate`? 
"
59131426,57,cas--,2016-04-10T10:34:12Z,"Shouldn't really have a human-readable format as arg for a method
"
59131454,57,cas--,2016-04-10T10:36:42Z,"I like the idea of this but it fails if you enter an integer or '50MB'
"
59202744,57,bendikro,2016-04-11T13:25:44Z,"Change to warn
"
59203564,57,bendikro,2016-04-11T13:31:36Z,"Hmm...not really.  Agree that it should not catch Exception. Tbh, it could just be part of dev testing and may not be needed now.
"
59203703,57,bendikro,2016-04-11T13:32:30Z,"Will fix.
"
59203805,57,bendikro,2016-04-11T13:33:13Z,"What would you sugggest?
"
59206241,57,cas--,2016-04-11T13:48:07Z,"it's probably reasonable to expect an integer that would be megabytes
"
59294252,57,bendikro,2016-04-11T22:40:52Z,"remove log.exception(ex)
"
59297011,57,bendikro,2016-04-11T23:05:32Z,"Fixed
"
59297096,57,bendikro,2016-04-11T23:06:23Z,"Removed the try/except.
"
59341819,57,cas--,2016-04-12T08:50:47Z,"Just to clarify I meant that only ui code should be using human2bytes.
"
59342547,57,cas--,2016-04-12T08:55:51Z,"I think we remove this for now and create a ticket to revisit inclusion.
"
59342984,57,cas--,2016-04-12T08:59:05Z,"Sorry I meant to add remove the `-r` as it's not an option that needs a shorthand. 

Perhaps split the max size to `--logrotatesize`? 
"
59344186,57,bendikro,2016-04-12T09:08:35Z,"Isn't an optional argument ok?
"
59344466,57,cas--,2016-04-12T09:11:07Z,"I guess so, perhaps it just needs better worded help hint.
"
59552298,57,bendikro,2016-04-13T13:59:04Z,"Having a human readable has the advantage that it is human readable. Having int in megabytes means you cannot set log size smaller than 1MB.
"
59553471,57,cas--,2016-04-13T14:06:00Z,"I know but who would need to rotate logs at less than 1MB? I still maintain that you should not have human readable format as a input for an internal method, it should all be converted upon user input. 
"
59554520,57,bendikro,2016-04-13T14:11:49Z,"I actually agree the function should take an integer, but it doesn't really a need a default value?
I'd say the value should be in bytes as a user may need less than MB even if it sounds strange.
Also considering the convert function outputs in bytes anyways, there is nothing to gain by converting that to MBs?
"
59554621,57,bendikro,2016-04-13T14:12:23Z,"Btw, does the convert functions look ok?
"
59587273,57,aresch,2016-04-13T17:13:59Z,"Yes, make it an integer of bytes.
"
59984508,57,cas--,2016-04-17T13:41:52Z,"docstring needs `bytes` specified
"
59984547,57,cas--,2016-04-17T13:43:56Z,"`delay=0` is a default value so can be omitted
"
59984621,57,cas--,2016-04-17T13:46:42Z,"Looking at docs `filemode` must simply be ignored as it's actually a named arg `mode`, defaults to `a` anyway so can be omitted.
"
59984668,57,cas--,2016-04-17T13:48:32Z,"Do we think a backupcount of 3 is enough?
"
59984733,57,cas--,2016-04-17T13:51:09Z,"I think mention either here or in manpage about the backupcount being a set value
"
59991228,57,bendikro,2016-04-17T19:53:38Z,"Will fix
"
59991289,57,bendikro,2016-04-17T19:56:06Z,"No idea, should ideally be customizable.
"
59991330,57,bendikro,2016-04-17T19:58:49Z,"Not following...
"
59993827,57,cas--,2016-04-17T21:50:43Z,"> class logging.handlers.RotatingFileHandler(filename, mode='a', maxBytes=0, backupCount=0, encoding=None, delay=0)
"
59993885,57,cas--,2016-04-17T21:51:26Z,"I was thinking that but perhaps 5 would be better for now. 
"
59994161,57,bendikro,2016-04-17T22:04:35Z,"Sure
"
59994188,57,bendikro,2016-04-17T22:06:31Z,"I see. Just remove the filemode argument to RotatingFileHandler then.
"
59994433,57,cas--,2016-04-17T22:24:22Z,"Yep (along with delay) perhaps I should have just written it that way first of all :D
"
59994980,57,bendikro,2016-04-17T23:01:51Z,"Done
"
59994983,57,bendikro,2016-04-17T23:02:03Z,"Fixed
"
59995145,57,bendikro,2016-04-17T23:16:16Z,"Fixed
"
189428376,181,doadin,2018-05-19T08:02:44Z,here wont work in windows
189446641,181,cas--,2018-05-19T22:51:39Z,See fix here: https://github.com/deluge-torrent/deluge/pull/182/commits/3cbbd6186ee0b9fd58c6590917e3353623298299
189448508,181,doadin,2018-05-20T01:11:50Z,"ok, ill re-run all the tests on windows and modify the commit as needed. ty."
189473984,181,doadin,2018-05-20T23:28:14Z,apparently this breaks the deps install on appveyor. good news is it seems its not needed anyways since test still run just fine on travis.ci. and we get one passing test flake8 yay! lol
189521438,181,cas--,2018-05-21T08:13:43Z,"The colon is os specific: https://tox.readthedocs.io/en/latest/config.html#globally-available-substitutions

But I agree there is no need for it here."
189521626,181,cas--,2018-05-21T08:14:33Z,Why is the deluge-reporter being removed?
189522202,181,cas--,2018-05-21T08:17:15Z,Please use `windows_check()` from deluge.common
189522538,181,cas--,2018-05-21T08:18:45Z,Use a windows check to exclude importing instead of a try..except. We want the test to error if there are any issues importing these modules.
189639915,181,doadin,2018-05-21T16:20:33Z,"It stops the test from being run at all. The setup goes fine but then at the first command fails. says something about only passing report to something...I don't remember at the moment.
"
191636742,181,gazpachoking,2018-05-30T03:59:13Z,"Should the separator be `{:}` to be cross platform compatible? https://tox.readthedocs.io/en/latest/config.html#globally-available-substitutions

I've barely followed this PR, so please ignore me if I'm off base."
191637526,181,doadin,2018-05-30T04:08:12Z,Im not sure in general about the cross platform of the whole tox file still have to fix the depends too. Have not really tried a whole lot so I dont know much either though @cas-- mentioned about the separator earlier. Any thoughts on it much appreciated. 
192101230,181,cas--,2018-05-31T13:37:32Z,"This matrix section can be improved by removing all the duplication of specifying PYTHON, see: https://packaging.python.org/guides/supporting-windows-using-appveyor/

and https://www.appveyor.com/docs/build-configuration/#build-matrix"
192105809,181,cas--,2018-05-31T13:51:11Z,"I *think* you can set Python version outside matrix for all matrix jobs e.g. 

```
environment:
  PYTHON_VERSION: ""2.7""
  matrix:
    TOXENV: pydef
...
```"
192108378,181,cas--,2018-05-31T13:58:47Z,"could we change this to remove `-d` on windows e.g.:

    daemon_args = ['-c', '%s', '-L', 'info', '-p', '%d']
    if not windows_check():
        daemon_args.append('-d')
   sys.argv.extend(daemon_args)

I assume using `-d` causes an error? Perhaps we should simply ignore the `-d` option on Windows.
"
192109716,181,cas--,2018-05-31T14:02:50Z,I just realised we should use the unittest `skipIf`: https://docs.python.org/2/library/unittest.html#skipping-tests-and-expected-failures
192110592,181,cas--,2018-05-31T14:05:25Z,So os.devnull is cross-platform so perhaps `get_path_size` needs fixed rather than skip this test
192111364,181,cas--,2018-05-31T14:07:35Z,"A possible issue with `files_list`!

However, inside Python Windows should handle this so perhaps the test needs tweaked."
192113021,181,cas--,2018-05-31T14:11:54Z,"Since this is in the tests, a more generic version would do: https://stackoverflow.com/a/8894488/175584"
192114696,181,cas--,2018-05-31T14:17:08Z,should this not be prefixed with `mywindows:`?
192147418,181,doadin,2018-05-31T15:49:19Z,for now sure since we are only python 2 compatible but in the future adding 3.x python testing it would have to be non-global. changing now later it doesn't make a difference too much to me.
192147782,181,doadin,2018-05-31T15:50:19Z,yes -d isnt a option on windows so it says unrecognized option or something like that.
192149967,181,doadin,2018-05-31T15:56:48Z,I had issues trying to get that to work in my testing. got various results including it saying something like invalid package pywin3 or :pywin. feel free to try but I couldn't get it right and with ONLY adding mywindows: pywin32 it didn't work if I remeber right.
192284223,181,doadin,2018-06-01T02:09:06Z,in linux if you do os.path.getsize(os.devnull) you get 0 in windows you get error parameter incorrect nul. so yes os.devnull is available but no they are not the same. Similarly if you do os.path.exists(os.devnull) linux returns true windows returns false which makes deluge.get_path_size@line772 return -1 on windows instead of 0.
192350425,181,cas--,2018-06-01T09:56:40Z,"Well we cannot have this in tox.ini if it breaks on linux. 

Could it be related to this issue: https://github.com/mhammond/pywin32/issues/1177
"
192504267,181,doadin,2018-06-01T20:15:50Z,"not sure how thats related thats a issues, as stated in that issue, with pywin32's setup. I havn't even gotten it to go to that step. it errors trying to install a module not even in the list(pywin3, NOT pywin32) hence why its not valid and fails."
192515690,181,cas--,2018-06-01T21:06:18Z,If you could provide the actual error that would be helpful.
192528438,181,cas--,2018-06-01T22:21:08Z,"I think there is a bug in tox when reusing deps, I was testing with `tox -e py27` and this workaround worked:

```diff
--- tox.ini
+++ tox.ini
@@ -17,9 +17,9 @@ minversion = 2.0
 
 [testenv]
- platform =
-           mylinux: linux
-           mymacos: darwin
-           mywindows: win32
 install_command = pip install --ignore-installed {opts} {packages}
 passenv = DISPLAY PYTHONPATH
 setenv = PYTHONPATH = {toxinidir}
@@ -35,7 +35,6 @@ deps =
     mock
     slimit
     pillow
-    mywindows: pywin32
 whitelist_externals = pytest bash
 commands = {envpython} setup.py test
 
@@ -78,8 +77,13 @@ commands =
     pytest -v --basetemp=_pytest_temp -s deluge/plugins
 
 [testenv:py27]
+platform =
+    mylinux: linux
+    mymacos: darwin
+    mywindows: win32
 deps =
     {[testenv]deps}
+    mywindows: pywin32
     py2-ipaddress
 basepython = python2.7
 commands = {[testenv:pydef]commands}

```

All other combinations failed. So you need to specify pywin32 in each env "
192550299,181,doadin,2018-06-02T05:17:58Z,"unless I did it wrong seems to work, besides a minor mistake I made, on travis(linux) but still a no go on appveyor(windows). "
101111955,138,cas--,2017-02-14T18:51:45Z,Checking if the port is a valid int should be done in `parse_host_port`
101112581,138,cas--,2017-02-14T18:54:15Z,a better descriptive name would be `split_ip_port` also it needs a docstring.
101112717,138,cas--,2017-02-14T18:54:49Z,Should return an empty tuple
101113059,138,cas--,2017-02-14T18:56:20Z,What happens if the return from method is None or empty tuple?
101898047,138,cas--,2017-02-18T17:42:25Z,Not important please remove
101898231,138,cas--,2017-02-18T17:49:31Z,What is the purpose of prefixing with slashes?
101898548,138,cas--,2017-02-18T18:00:47Z,Is this required? If so it likely should be at the start or end of the method.
101898555,138,cas--,2017-02-18T18:01:05Z,"Since you are looking for text that is either not an empty string or None, all the `is not None` should be removed.
"
101898650,138,cas--,2017-02-18T18:05:30Z,Can you rename paste to clipboard so it's a bit clearer what the var is.
101916044,138,matiasw,2017-02-19T12:16:25Z,"Well, it is the pasted text and not the clipboard returned by clipboard_get(), but ok."
101916072,138,matiasw,2017-02-19T12:18:07Z,"If there is no scheme (like `http://`), the address needs an empty scheme (or ""prefixing with slashes"") so that eg. ?in `username:password@host` style addresses, `username` does not get confused with a scheme identifier."
101916104,138,matiasw,2017-02-19T12:19:31Z,"If you mean the `emit_stop_by_name`, it is required strictly when we modify the entry field manually (to stop the clipboard contents from getting pasted at the end of the text we've set)."
101916144,138,cas--,2017-02-19T12:21:21Z,Ok I see
101916211,138,cas--,2017-02-19T12:24:21Z,"you can just use `text`, paste is too vague"
101916293,138,cas--,2017-02-19T12:27:18Z,"Ok so just do:

```
# [comment with explanation]
text = text if '//' in text else '//' + text
parsed_txt = urlparse(text)
```"
101916325,138,matiasw,2017-02-19T12:28:35Z,"I don't understand what you mean by this? Would you rather have `TypeError: Gtk.Entry.set_text() argument 1 must be string, not None` each time one of these is None?"
101916450,138,cas--,2017-02-19T12:33:31Z,`if parsed.username:` is false for None
101918385,138,cas--,2017-02-19T14:07:02Z,Just use `.strip()`
101918850,138,matiasw,2017-02-19T14:24:00Z,`strip()` only gets whitespace from the beginning and end of a string.
101918997,138,cas--,2017-02-19T14:29:24Z,We are primarily concerned with trailing newlines causing issues so start and end is fine.
17928811,12,cas--,2014-09-23T18:30:20Z,"This list indentation needs correcting: http://dev.deluge-torrent.org/wiki/Contributing/CodingStyle#Python
"
17928859,12,cas--,2014-09-23T18:31:07Z,"No need for a new line here, as per http://dev.deluge-torrent.org/wiki/Contributing/CodingStyle, max line length is 119
"
17928940,12,cas--,2014-09-23T18:31:59Z,"You can merge these two lines `zip_dir_path = _winreg.QueryValueEx(hkey, ""Path"")[0]`
"
17929105,12,doadin,2014-09-23T18:34:15Z,"https://github.com/deluge-torrent/deluge/blob/develop/deluge/plugins/Extractor/deluge/plugins/extractor/core.py#L35 just coping what was there before.
"
17929119,12,cas--,2014-09-23T18:34:29Z,"rename ambiguous `zip` to `win_7z`
"
17929165,12,doadin,2014-09-23T18:35:03Z,"ok
"
17929237,12,doadin,2014-09-23T18:36:12Z,"cool was also just copying what you had before from what you linked in the forums.
"
17929605,12,cas--,2014-09-23T18:41:19Z,"I'm afraid you have actually changed the indentation, the diff clearly shows it. 
"
17930384,12,doadin,2014-09-23T18:51:55Z,"Im sorry you are correct it was like that before but in copying to github the formatting was changed. Corrected.
"
17930467,12,cas--,2014-09-23T18:53:27Z,"Indent is still not correct.
"
17930554,12,cas--,2014-09-23T18:54:33Z,"You may as well merge and replace `win_7z_dir_path`, it would still be readable.
"
17930932,12,doadin,2014-09-23T18:59:32Z,"I dont understand.
"
17932503,12,gazpachoking,2014-09-23T19:23:18Z,"Yeah, I think that's what he meant.
"
17932937,12,doadin,2014-09-23T19:29:37Z,"If what i had before i edited my post was what he ment that doesnt work. It doesnt actually find the value of the registry key it just returns the code.
"
17933171,12,gazpachoking,2014-09-23T19:32:44Z,"`win_7z_path = os.path.join(_winreg.QueryValueEx(hkey, ""Path"")[0], ""7z.exe"")`
"
17933353,12,doadin,2014-09-23T19:34:58Z,"ah ok didnt know "" was bad. Still trying to understand python lol.
"
17940060,12,gazpachoking,2014-09-23T21:17:53Z,"Bare excepts are not good. We should explicitly put the exceptions we are expecting here.
"
17940675,12,gazpachoking,2014-09-23T21:27:53Z,"Looks like WindowsError would be the right one, and as much code as possible should be moved outside the try block.  I think just the OpenKey needs to be in the try block, the import can go before, and the rest can go in an else block.
"
17989048,12,doadin,2014-09-24T18:08:23Z,"That to me just seems more complex. Why do we need to limit the try block?
"
17989926,12,cas--,2014-09-24T18:21:28Z,"It should be try..except..else. Example from existing code: https://github.com/deluge-torrent/deluge/blob/develop/deluge/ui/gtkui/common.py#L163

One major reason is that it makes it easier to understand in the future when looking at the code what was actually being guarded.  http://www.jeffknupp.com/blog/2013/02/06/write-cleaner-python-use-exceptions/

Also could you keep the existing list of win_7x_exes and insert the path from reg at `index 1` in the `else`.  It doesn't hurt to have a fallback to default location. 
"
17990292,12,cas--,2014-09-24T18:26:50Z,"Sorry keep this list as is
"
17990324,12,cas--,2014-09-24T18:27:01Z,"replace this with `pass`
"
17990396,12,cas--,2014-09-24T18:27:59Z,"change this to `win_7z_exes.insert(1, win_7z_path)`
"
17990821,12,doadin,2014-09-24T18:34:09Z,"its probably just me but i dont understand what you want me to replace. Also you guys have commented saying to pretty much re-write the whole thing you guys can just do that if you want lol. Its like a 10 line commit seems like it would be easier. I said i would take a stab at it and i did but honestly you guys could probably have made this change like 10 hours ago in only like 2 min.(you know what your doing obviously.)
"
17991417,12,cas--,2014-09-24T18:42:01Z,"Instead of creating the list `win_7z_exes[...]`, you should insert `win_7z_path` into the existing list which should be returned to it's original position above the try..except. https://docs.python.org/2/tutorial/datastructures.html#more-on-lists

Sometimes that's the way of things but it's your code idea that you are submitting and it means future code you submit will be more polished because we offered guidance on the changes required here.
"
17992042,12,doadin,2014-09-24T18:49:55Z,"I appreciate the help. I just dont understand your explanations sorry.
"
17992235,12,cas--,2014-09-24T18:53:23Z,"Ok first of all, move the list `win_7z_exes` on `lines 63-67` above the `import` on line 58. Then replace `lines 71-73` with the example I gave in the first comment: `win_7z_exes.insert(1, win_7z_path)`
"
17993558,12,cas--,2014-09-24T19:13:55Z,"Keep the `except:` and `else:` and put the pass in the except statement:

```
except:
    pass
else:
```
"
185393399,180,aresch,2018-05-02T04:56:12Z,"This overrides the listen_interface, so it either needs to be renamed (and logic added below to restore the config value) or removed."
185639577,180,doadin,2018-05-02T21:09:48Z,This should maybe be put in its own def.
189018513,180,cas--,2018-05-17T16:16:37Z,Is it single or multiple interfaces that can be specified? If it is multiple then we will need to handle and document it.
189061877,180,doadin,2018-05-17T18:42:19Z,"I don't know how long it has been like this but it is multiple just like listen_interfaces/listen_interface thats kinda why i was a little confused as I was seeing a lot of ""listen_interface"" and not ""listen_interfaces"" when I was looking how that was implemented. From the online documents for libtorrent listen_interfaces is ""a comma-separated list of IP port-pairs."". However at least more recently for outgoing_interfaces I believe this can be a interface eg. eth0,wlan0... On linux or unix type OSs. However in deluge you have listen_interfaces set to verify against a single ip and no interface so a rework would be needed to support those. ( https://libtorrent.org/reference-Settings.html#outgoing_interfaces )

1. don't verify listen_interfaces against a single ip, also listen_interfaces is ip and port so accept a port but strip it from the string in the ""is_ip"" function?
2. Find a way to verify a interface instead of just a ip for the outgoing_interfaces.

Both are a comma-separated list of IPs. listen also takes a port, outgoing also accepts in place of a ip a OS interface."
189157653,180,doadin,2018-05-18T03:52:58Z,"so something like https://github.com/deluge-torrent/deluge/pull/180/commits/3b7a04a3883d4957734e212069e95bfc275d5f9b is what I was thinking however this still doesn't cover network interfaces but does fix checking ips that may or may not have more than one or an ipv6 address with ""[]"" which we also have to separate out the brackets to get the ip separate from the port. If that made sense...lol those changes probably dont even work but hopefuly im at least close at an idea that can be worked out."
189427878,180,cas--,2018-05-19T07:30:04Z,"Can we concentrate on just a single outgoing interface for now? So my suggestion is to rename it to `outgoing_interface` to keep with the naming style of `listen_interface`.

We can add code to support multiple interfaces and interface name in future PRs. 

Keeping a PR simple will help it get merged sooner. 

Also can you add a changelog entry."
189428201,180,cas--,2018-05-19T07:52:07Z,"I'd prefer this change:

```diff
-        self.add_text_input('listen_interface', '%s:' % _('IP address of the interface to listen on '
-                                                          '(leave empty for default)'),
-                            core_conf['listen_interface'])
+        self.add_text_input(
+            'listen_interface',
+            _('IP address of the interface to listen on (leave empty for default):'),
+            core_conf['listen_interface'],
+        )
```

The translation string was incorrect since the colon could not be moved by the translator and there is no need for substitution as it is a fixed string."
189428206,180,cas--,2018-05-19T07:52:13Z,This should be a docstring
189428428,180,doadin,2018-05-19T08:06:29Z,Yup sorry meant to make same change as above...whoever added these bits of code didn't flake8 shoulda realized that but really was wanting passing tests to see when i broke things :P
189428924,180,doadin,2018-05-19T08:39:56Z,"sure. I was a bit confused before I was like how is this setting getting applied if the libtorrent setting is ""listen_interfaces"" but every where in deluge its 'listen_interface"" but i see it now deluge\core\preferencesmanager.py>__set_list_on has apply_session_settings ""listen_interfaces"". *facepalm*"
189428981,180,doadin,2018-05-19T08:43:33Z,"should this really be listen interface maybe? since ""interface"" setting is for the daemon interface to listen on.

or even incoming interface something idk."
189446575,180,cas--,2018-05-19T22:48:27Z,"The daemon setting is rarely something a user will specify. However, if you have added Outgoing Interface then yes changing this to Incoming Interface ."
189450906,180,doadin,2018-05-20T04:30:46Z,This would also make the heading match gtkui and webui. So it will all look more uniform. Though there it is Incoming Address not incoming interface. Though also in the future both would be right as hopefully one day we can specify either.
189513524,180,cas--,2018-05-21T07:31:52Z,Remove this added line
189514737,180,cas--,2018-05-21T07:38:55Z,"There is no need for `str()` function here, it is already a string if you are using `strip()` method"
189514964,180,cas--,2018-05-21T07:40:00Z,The join can be removed as it is only needed if you have a list and there is only a string passed here.
189515490,180,cas--,2018-05-21T07:43:02Z,We should be more specific and say: `The IP address to open outgoing BitTorrent connections on.`
189516107,180,cas--,2018-05-21T07:46:13Z,Please use: `IP address of the interface to open outgoing connections on.`
189517883,180,cas--,2018-05-21T07:55:45Z,Please use: `IP address for outgoing BitTorrent connections.`
189518095,180,cas--,2018-05-21T07:56:54Z,Please use: `The IP address for outgoing BitTorrent connections.`
189518447,180,cas--,2018-05-21T07:58:42Z,Please see other comments and use: `Set the interface address for outgoing BitTorrent connections.`
799581356,359,gazpachoking,2022-02-04T15:44:14Z,This isn't so nice. We import reactor quite a bit. If we enable mypy I think we should figure out some better way than doing this in every file.
799581803,359,gazpachoking,2022-02-04T15:44:44Z,I can't really fathom why mypy doesn't infer the type here?
799582838,359,gazpachoking,2022-02-04T15:45:57Z,This change was made so that mypy type narrowing worked and knew that torrent_ids couldn't be None any longer. For some reason `not torrent_ids` doesn't have the same result as far as mypy is concerned.
799583427,359,cas--,2022-02-04T15:46:39Z,"This changes the functionality, an empty list would return nothing"
799583846,359,gazpachoking,2022-02-04T15:47:13Z,"Ignored a bunch of stuff on inlineCallbacks for now. The generator would have to be properly type hinted as a generator, which is weird. This is one thing that would be a _lot_ easier with the `maybe_coroutine` branch. Type hinting an async function is the same as doing a normal function, no need to do fancy gen typing stuff."
799585744,359,cas--,2022-02-04T15:49:28Z,Why are we ignoring type here and below?
799614615,359,gazpachoking,2022-02-04T16:18:52Z,"Oh yeah, good point."
799615762,359,gazpachoking,2022-02-04T16:20:14Z,Mypy was complaining about inlinecallbacks getting the wrong type. (becasue I didn't document the generator as a generator) For some reason the ignore had to be on this line. I think struggles with typing inlinecallbacks for mypy probably go away if we switch to async/await.
799617034,359,gazpachoking,2022-02-04T16:21:42Z,I think I figured this out. Made some stubs for twisted that I told mypy to load. Defined reactor in the twisted.internet.__init__.pyi stub. I _think_ that still lets mypy use the real definitions for all the other twisted modules.
799642725,359,aresch,2022-02-04T16:52:59Z,"You have to make torrent_ids an Optional[List[str]] since the default is None.

https://docs.python.org/3/library/typing.html#typing.Optional"
799643971,359,gazpachoking,2022-02-04T16:54:32Z,Optional is implied when the default is none.
799650904,359,gazpachoking,2022-02-04T17:03:08Z,"Hmm, I guess current recommendations are to make the `Optional` explicit, but the default mypy behavior still allows inferring it. https://mypy.readthedocs.io/en/stable/config_file.html#confval-no_implicit_optional"
799655507,359,aresch,2022-02-04T17:09:19Z,Maybe it only makes it Optional if you provide no typing?
799659564,359,gazpachoking,2022-02-04T17:14:56Z,"It for sure was getting the Optional type. The issue I was actually trying to solve was: `Item ""None"" of ""Optional[List[str]]"" has no attribute ""__iter__"" (not iterable)`. When the if was just `if not torrent_ids` it didn't narrow the type down to List[str], but when the check changed to `if torrent_ids is not None` it did narrow the type down, and allow iterating on it without complaint."
799886159,359,gazpachoking,2022-02-04T23:50:23Z,"I did a test merging my mypy stuff with the maybe_coroutine branch, and type hinting is muuuch nicer (than inlineCallbacks.) No need to wrap stuff in `Deferred[returntypehere]` no need to document generators with weird generator type hints where you have to specify the yield, send, and return types, all just works."
799929361,359,aresch,2022-02-05T02:45:13Z,"Huh, I guess it's because of the for loop below the conditional. Mypy doesn't know that you're changing the None into a List[str] with the call to get the torrents list. I suppose there are a few ways to change the code to work without reassigning torrent_ids which would likely fix the issue. I also wonder if setting the return value of TorrentManager.get_torrent_list() to List[str] would help?"
799932216,359,gazpachoking,2022-02-05T03:08:51Z,"I actually figured it out. It wasn't the `not torrent_ids` that was messing up, it was that I hadn't typed `self.torrentmanager`, so it didn't actually know the return type when torrent_ids got reassigned. Did some more testing in another branch and got it working fine."
790301237,343,cas--,2022-01-23T16:41:18Z,If we bump this version we can also remove any conditionals related to 1.2.0 elsewhere in code
18391483,14,cas--,2014-10-03T12:13:30Z,"It can't return both a `bool` and `list`...
"
18391604,14,bendikro,2014-10-03T12:17:36Z,"Good point
"
18391738,14,cas--,2014-10-03T12:21:37Z,"Already emitted on line 550
"
18391861,14,cas--,2014-10-03T12:25:28Z,"`KeyError` should be unneeded here
"
18391897,14,cas--,2014-10-03T12:26:29Z,"Assign `torrent = self.torrents[torrent_id]` here to save repeated lookups

The get_status could then be outside the try..except
"
18392058,14,cas--,2014-10-03T12:31:03Z,"`except Exception` Argh!
"
18392087,14,cas--,2014-10-03T12:31:50Z,"Both these lines should be outside try
"
18392119,14,cas--,2014-10-03T12:32:43Z,"except Exception Argh!

Also it's better to use `ex` than `e`
"
18392175,14,cas--,2014-10-03T12:34:52Z,"comparison should use `==` unless comparing objects

Also this should be done in `core.remove_torrent`.
"
18392233,14,cas--,2014-10-03T12:36:59Z,"should fit fine on one line?
"
18397252,14,cas--,2014-10-03T14:18:31Z,"This function should be converted to a TM method `remove_torrent`
"
18414864,14,bendikro,2014-10-03T19:29:35Z,"Thats not mine actually ;-)
https://github.com/bendikro/deluge/blame/83df1159c096260f233c5b0bd162058b7b7990e7/deluge/core/torrentmanager.py#L620
"
18414887,14,bendikro,2014-10-03T19:30:08Z,"Ok, thats mine
"
18417123,14,cas--,2014-10-03T20:15:00Z,"It has actually been updated since... https://github.com/deluge-torrent/deluge/blob/develop/deluge/core/torrentmanager.py#L567
"
18417197,14,bendikro,2014-10-03T20:16:26Z,"I know, already updated that part.
"
18421679,14,cas--,2014-10-03T21:55:56Z,"`defer` docstring line needs removing
"
18421704,14,cas--,2014-10-03T21:56:21Z,"needs updating
"
18422250,14,cas--,2014-10-03T22:11:41Z,"this `emit` has to be before `session.remove_torrent`
"
21093154,14,bendikro,2014-12-01T15:03:09Z,"Fixed
"
21093158,14,bendikro,2014-12-01T15:03:16Z,"Fixed
"
21149127,14,cas--,2014-12-02T10:00:42Z,"Just need `if save_state`
"
21157882,14,bendikro,2014-12-02T13:21:56Z,"Fixed
"
784413842,337,CirnoT,2022-01-14T00:00:23Z,"```diff
- from PyInstaller.utils.hooks import collect_all, copy_metadata
+ from PyInstaller.utils.hooks import collect_all, collect_submodules, copy_metadata
```"
784413961,337,CirnoT,2022-01-14T00:00:42Z,"```diff
- hiddenimports += collect_all('deluge')[2]
+ hiddenimports += collect_submodules('deluge')
```"
784414282,337,CirnoT,2022-01-14T00:01:29Z,"We don't need tests from Twisted polluting resulting binaries

```diff
- hiddenimports += collect_all('twisted')[2]
+ hiddenimports += collect_submodules('twisted', filter=lambda name: 'test' not in name)
```"
784785750,337,CirnoT,2022-01-14T11:55:26Z,"This code is broken, on `>= 3 < 10` nothing happens."
784788634,337,CirnoT,2022-01-14T12:00:25Z,"I know I recommended it myself, but after checking it it seems to pollute resulting binaries by doubling their size. This is most likely due to stuff like `dis`, `compileall`, `mslib`, `winsound`, `pipes`, `trace` and various multimedia/3d modules that are of no use.

I am at the moment conflicted whether we should keep using a list of curated modules or some sort of list of modules we should ignore."
784795770,337,CirnoT,2022-01-14T12:12:58Z,The issue with excluding would be that we'd never know if something of Deluge (for example `pygame`) doesn't depend on it (for example `winsound`)
784796084,337,cas--,2022-01-14T12:13:31Z,`version_info` not `versioninfo`
784797221,337,CirnoT,2022-01-14T12:15:30Z,"Also I'd recommend updating the list to a new one I've just made by manually checking modules instead of going by common names:

```
stdlib = [ 'string', 're', 'unicodedata', 'struct', 'codecs', 'datetime', 'zoneinfo', 'calendar', 'collections', 'array', 'weakref', 
  'types', 'copy', 'enum', 'numbers', 'math', 'cmath', 'decimal', 'fractions', 'random', 'statistics', 'itertools', 'functools', 
  'operator', 'pathlib', 'fileinput', 'stat', 'tempfile', 'glob', 'fnmatch', 'shutil', 'pickle', 'copyreg', 'shelve', 'marshal',
  'dom', 'sqlite3', 'zlib', 'gzip', 'bz2', 'lzma', 'csv', 'hashlib', 'hmac', 'secrets', 'os', 'io', 'time', 'logging', 'platform',
  'errno', 'queue', 'socket', 'ssl', 'email', 'json', 'mimetypes', 'base64', 'binhex', 'binascii', 'quopri', 'uu', 'html', 'xml',
  'urllib', 'http', 'ftplib', 'smtplib', 'uuid', 'xmlrpc.client', 'ipaddress', 'locale', 'sys' ]
```"
784799652,337,cas--,2022-01-14T12:19:42Z,"curated has worked fine for Deluge in the past so happy to go with that, although nearly all of those are already used by core code anyway. 

Also `csb` looks like typo for `csv`"
784802169,337,CirnoT,2022-01-14T12:23:49Z,"> although nearly all of those are already used by core code anyway.

They are indeed, if I'm not mistaken only `http.cookies`, `urllib.*` and `email.*` was additionally imported (though I've tested on 2.0.5 so that might change with removal of `six` from dependencies)"
784803269,337,cas--,2022-01-14T12:25:33Z,"wheel should be kept here so it's available when pip installs packages

we should either go for `python -m pip install` or use `pip install` (seems fine to use this) but let's try not to mix usage. As CirnoT mentioned it's a bad practice that under other environments can give you unexpected results.

"
784806630,337,cas--,2022-01-14T12:31:09Z,"If we modify the run to use [folded style yaml](https://yaml-multiline.info/) this could be much cleaner:

```
run: >
   $WebClient = New-Object System.Net.WebClient
...

  pip install
  $pycairopath
  $PyGObjectpath
...
  pygame

  pip install -r requirements.txt
```

Remember to keep a space between commands"
784865083,337,CirnoT,2022-01-14T14:01:10Z,This is still broken - you are collecting `twisted` in a loop.
784876283,337,doadin,2022-01-14T14:16:17Z,"> In addition, adding this before we collect on `twisted` should solve our worries with plugins:
> 
> ```python
> # Add stdlib as Hidden Imports.
> # This is filtered list that excludes some common examples or stuff not useful in plugins (such as tty, mailbox, tutledemo etc.).
> # It is safe to assume that 90% of that list would already be included anyway.
> stdlib = [ 'pickle', 'json', 'email', 'http', 'marshal', 'uuid', 'base64', 'string', 'struct', 'glob', 'ssl', 'urllib', 'html', 'sys', 
>   'crypt', 'datetime', 'hmac', 'locale', 'queue', 're', 'enum', 'collections', 'tokenize', 'hashlib', 'xml', 'csb', 'ipaddress', 'os' ]
> for module in stdlib:
>   hiddenimports += collect_submodules(module, filter=lambda name: 'test' not in name)
> ```
copy pasted part from your comment didn't really look at this. oops."
784879544,337,doadin,2022-01-14T14:20:33Z,my bad fixed it.
789472442,337,doadin,2022-01-21T09:02:03Z,"imo ""cleaner"" is a personal opinion type thing so I am not going to try and cover this. :)"
789652059,337,cas--,2022-01-21T13:21:08Z,"@CirnoT Is this list intended for all python3 versions, not just 3.10?"
790022452,337,CirnoT,2022-01-21T22:00:18Z,Yes that list works for all Python 3 versions
802748049,369,cas--,2022-02-09T14:54:24Z,Why was this removed?
802750019,369,gazpachoking,2022-02-09T14:56:02Z,"It was never activated, because we are inside an if block that already checks it:
https://github.com/deluge-torrent/deluge/blob/b59549eaf2a222679a7cc53d8a95dbb63c0daf36/deluge/core/torrentmanager.py#L276"
802763187,369,cas--,2022-02-09T15:07:55Z,"Naming of `update_status` seems misleading, `get_status` or `fetch_status` perhaps? Maybe with a `cached=False` arg?"
802767719,369,cas--,2022-02-09T15:11:58Z,I'm not sure if it would make it more or less complex to use `cached_property` but moving to a status property looks good :+1: 
802773484,369,gazpachoking,2022-02-09T15:17:11Z,"Yeah, I did `get_status` at first, until I realized there already is a `get_status` which is a combined options and status dict. Maybe rename `torrent.status` cache to `torrent.lt_status`, and have `torrent.get_lt_status`?"
802785823,369,gazpachoking,2022-02-09T15:27:44Z,"Took a peek at cached_property, doesn't look like it helps us much."
802957826,369,gazpachoking,2022-02-09T18:14:10Z,"So I did the rename to `torrent.lt_status`, with the refresh option now being `torrent.get_lt_status()`. I think this helps clarify the difference between the libtorrent object and the deluge status dict, which is grabbed by `torrent.get_status()`. Happy to do it a different way though if anyone has better ideas."
802974829,369,cas--,2022-02-09T18:34:56Z,This is a problem since `lt_status` is not defined
802975815,369,cas--,2022-02-09T18:36:07Z,Yeah I did want to think about this some more as I am not sure that we should be exposing torrent handle status outside of the Torrent class
803016105,369,gazpachoking,2022-02-09T19:27:53Z,It's the `@property` I added.
803016996,369,gazpachoking,2022-02-09T19:29:10Z,"Yeah, I was thinking that as well. It's only used in a few spots in torrentmanager, which could probably be updated."
803020226,369,cas--,2022-02-09T19:33:20Z,doh missed that
803024224,369,gazpachoking,2022-02-09T19:38:33Z,"The one spot in torrentmanager where it seems sorta important is here https://github.com/deluge-torrent/deluge/pull/369/files#diff-3416e08006d0ef78d79619b83bf6d42c888dc1e5b20ea03801a71e357d5484c9R1615

Which is where it handles the bulk update alert and updates the status cache of all the torrents. I think this was one of the things that improved performance on large numbers of torrents."
805849314,369,cas--,2022-02-14T13:38:39Z,"I am not sure about wholesale renaming here, perhaps we keep `status` attribute for now and keep new `get_lt_status`?"
805882828,369,gazpachoking,2022-02-14T14:14:24Z,"That seems good to me too. I think perhaps `status` could/should be renamed and become private in the future, (maybe `self._lt_status`,) but I don't think that needs to be tied up in this bugfix. I'll fix the PR up when I get a chance."
806455012,369,gazpachoking,2022-02-15T05:21:15Z,"Reverted the `.status` rename, but kept the `.get_lt_status()` now."
806651859,369,cas--,2022-02-15T09:57:09Z,"Imported Optional but is string here, overzealous stringifying?"
806655530,369,cas--,2022-02-15T10:00:58Z,It seems that using `lt.torrent_status` here and for above method is causing the autodoc errors. Using the full `libtorrent.torrent_status` works though :shrug: 
806666504,369,cas--,2022-02-15T10:12:53Z,Actually using `lt` module seems to be the issue here so any other string would work
806679395,369,cas--,2022-02-15T10:27:16Z,I added some debug to sphinx_autodoc_typehints.process_docstring and I can see the issue is that it is encountering a `Mock object` which seems to be tripping it up. This is likely due to mocking libtorrent and other 3rd party modules in sphinx config.
806750951,369,cas--,2022-02-15T11:53:40Z,Fixed: 62a40521789eab27341
807010700,369,gazpachoking,2022-02-15T16:04:00Z,"Good sleuthing, thank you!"
60835255,78,cas--,2016-04-23T21:29:28Z,"this looks unneeded
"
60835271,78,cas--,2016-04-23T21:30:57Z,"I was hoping to not have a dependency on `ui` in core... Revisit as some future point
"
60835873,78,cas--,2016-04-23T22:16:16Z,"should add a log warning that translation is unavailable but strings have been marked for translation
"
60836140,78,bendikro,2016-04-23T22:39:28Z,"Oh, yeah
"
60836210,78,bendikro,2016-04-23T22:42:48Z,"It only needs this:

``` python
def set_dummy_trans():                                                                                                                                                                      
    import __builtin__                                                                                                                                                                      
    __builtin__.__dict__[""_""] = lambda x: x                                                                                                                                                 
```
"
60836397,78,cas--,2016-04-23T23:01:43Z,"I can't see any other use for it in `lang.py` so perhaps move it here is a good idea
"
60842060,78,bendikro,2016-04-24T10:00:17Z,"Log warning where? in `set_dummy_trans()` or when `_` is called?
"
60851903,78,cas--,2016-04-24T21:07:53Z,"When `_` is called
"
60852039,78,bendikro,2016-04-24T21:15:21Z,"It's called from setup_translations as well
"
60852199,78,bendikro,2016-04-24T21:24:34Z,"Done
"
60852248,78,cas--,2016-04-24T21:27:40Z,"Was this meant to set `warn_msg=True`?
"
60852542,78,bendikro,2016-04-24T21:43:30Z,"Ah, yeah
"
60893438,78,bendikro,2016-04-25T10:36:07Z,"This causes an error when trying to save when not connected to a daemon. It should be possible to save the Interface page when not connected.
"
60897716,78,cas--,2016-04-25T11:18:53Z,"This change causes an error?
"
60898064,78,cas--,2016-04-25T11:22:59Z,"I shall revert it
"
60903263,78,bendikro,2016-04-25T12:19:04Z,"Reverted this change and added the refresh popup
"
1741030999,454,Lord-Kamina,2024-09-02T14:54:26Z,This is just to avoid using a deprecated class name.
1741032160,454,Lord-Kamina,2024-09-02T14:55:02Z,"Currently, pytest is pinned due to console tests failing, which is fixed by this PR."
1741033487,454,Lord-Kamina,2024-09-02T14:55:47Z,"libtorrent is pinned also due to a test failure, but the change was introduced in 2.0.9. We should eventually fix our test rather than keep pinning, but we can still update libtorrent even if just a bit."
1741038372,454,Lord-Kamina,2024-09-02T14:58:32Z,"These changes are due to the pytest developers recommending that twisted not be used directly in tests with fixtures. From the pytest-twisted docs:

`Using twisted.internet.defer.inlineCallbacks as a decorator for test functions, which use fixtures, does not work. Please use pytest_twisted.inlineCallbacks instead.`"
1741039790,454,Lord-Kamina,2024-09-02T14:59:29Z,"This was calling the real `ConsoleUI.quit()`, which was stopping the reactor and thus making the tests go boom."
1741042007,454,Lord-Kamina,2024-09-02T15:00:47Z,"This flat-out produces an error, because `__qualname__` is an attribute that classes (not their instances) have."
1744287814,454,cas--,2024-09-04T19:06:24Z,These are pinned to avoid breaking the CI over time so can be version bumped but must still be pinned
1744295074,454,cas--,2024-09-04T19:13:45Z,"We support a minimum version of Twisted and afaik this would break that so needs to be reverted, I don't think they are actually removing it anytime soon. We could add a Twisted version check for the import but would need a comment to explain why gireactor is being used since the Twisted docs are now contradictory about not using it for UI."
1744304348,454,cas--,2024-09-04T19:22:14Z,When does it raise an error? Handlers are functions or methods not class instances so `handle.__class__.__qualname__` does not make seem to make sense here?
1744305797,454,Lord-Kamina,2024-09-04T19:23:47Z,"> These are pinned to avoid breaking the CI over time so can be version bumped but must still be pinned

For now, I'm happy to change it to `libtorrent==2.0.8`, but I think there's a discussion to be had about this (not in the context of this PR): I can understand the desire for the CI to not break easily, especially if you have little time as-is, but IMO a CI shouldn't easily break (if at all) due to a dependency publishing new bug-fix level releases. 

You're pinned to a two-year old version of what is quite probably your most important dependency. There has to be a better way to approach it (I have a few different ideas, but I don't really know where is the best place to start a discussion such as this?)"
1744315710,454,Lord-Kamina,2024-09-04T19:33:22Z,"Does it though? the current requirement spec is: 
```
twisted[tls]>=17.1; sys_platform != 'win32'
twisted[tls]<23,>=17.1; sys_platform == 'win32'
```

And the Twisted api documentation for 16.4.1, a full major version earlier (https://twisted.org/documents/16.4.1/api/twisted.internet.gireactor.html), already has the `gireactor`, with an API that I think is identical?"
1744320268,454,Lord-Kamina,2024-09-04T19:38:05Z,"> When does it raise an error? Handlers are functions or methods not class instances so `handle.__class__.__qualname__` does not make seem to make sense here?

See this log, for an example:

https://github.com/Lord-Kamina/deluge/actions/runs/10050873417/job/27779525108

EDIT (copied the error here for ease):

```python3
deluge/tests/test_alertmanager.py::TestAlertManager::test_pop_alert
  /opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/_pytest/threadexception.py:82: PytestUnhandledThreadExceptionWarning: Exception in thread alert-poller
  
  Traceback (most recent call last):
    File ""/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/threading.py"", line 1016, in _bootstrap_inner
      self.run()
    File ""/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/threading.py"", line 953, in run
      self._target(*self._args, **self._kwargs)
    File ""/home/runner/work/deluge/deluge/deluge/core/alertmanager.py"", line 93, in wait_for_alert_in_thread
      threads.blockingCallFromThread(reactor, self.maybe_handle_alerts)
    File ""/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/twisted/internet/threads.py"", line 135, in blockingCallFromThread
      result.raiseException()
    File ""/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/twisted/python/failure.py"", line 505, in raiseException
      raise self.value.with_traceback(self.tb)
    File ""/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/twisted/internet/defer.py"", line 212, in maybeDeferred
      result = f(*args, **kwargs)
    File ""/home/runner/work/deluge/deluge/deluge/core/alertmanager.py"", line 113, in maybe_handle_alerts
      self.handle_alerts()
    File ""/home/runner/work/deluge/deluge/deluge/core/alertmanager.py"", line 177, in handle_alerts
      handler=handler.__qualname__,
    File ""/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/unittest/mock.py"", line 645, in __getattr__
      raise AttributeError(name)
  AttributeError: __qualname__
```"
1744326691,454,Lord-Kamina,2024-09-04T19:42:43Z,"Although now... reading that again, it might be an issue specific to running the tests."
1749010254,454,Lord-Kamina,2024-09-08T00:10:40Z,@cas-- I have reverted that change and implemented a proper fix in the actual test now.
63072658,90,cas--,2016-05-12T18:31:30Z,"action='store' is default so can be omitted 
"
63072714,90,cas--,2016-05-12T18:31:51Z,"action='store' is default so can be omitted
"
63106852,90,bendikro,2016-05-12T22:17:42Z,"Fixed
"
63106859,90,bendikro,2016-05-12T22:17:45Z,"Fixed
"
63966531,90,cas--,2016-05-19T22:46:33Z,"At first glance I'm not sure what the differences are between `do_command`, `parse_command` and `exec_command` are. I think updates to the docstrings might help.
"
63966859,90,cas--,2016-05-19T22:49:41Z,"I don't see further usage of `self.ui_args`?
"
63967002,90,cas--,2016-05-19T22:51:08Z,"I don't see further usage of `self.ui_args` here either?
"
63967876,90,cas--,2016-05-19T22:59:42Z,"Needs a better docstring to differentiate from above one
"
63968145,90,cas--,2016-05-19T23:02:21Z,"Is this text about the help option correct? It doesn't seem to have any relevance here but if it does I think a bit more info is needed.
"
63968421,90,bendikro,2016-05-19T23:05:24Z,"The difference is explained tho...
"
63969023,90,cas--,2016-05-19T23:12:25Z,"Perhaps `Parse UI arguments and handle common and process group options without error.` will do.

It just need a bit more explanation for future code browsing :D 
"
63970858,90,bendikro,2016-05-19T23:32:07Z,"Fixed
"
63971236,90,cas--,2016-05-19T23:36:41Z,"I think you should replace these 3 lines with:

```
# Reuse UI Options group to actually display the group text to the user. The result from these args is not used.
parser._action_groups.append(group)
```

I know it's using a private method but the duplication is hurting my eyes :P
"
63971512,90,cas--,2016-05-19T23:40:21Z,"This comment should perhaps mention that the arg results are processed here but the text will not be shown and reusing the group later in code is required for displaying to the user.
"
63971834,90,bendikro,2016-05-19T23:44:25Z,"Updated docs
"
63973521,90,bendikro,2016-05-20T00:03:25Z,"Updated comments
"
64040297,90,bendikro,2016-05-20T13:26:04Z,"No, can just do with the pop
"
64040465,90,bendikro,2016-05-20T13:26:40Z,"Same. Only used in console
"
64061302,90,cas--,2016-05-20T15:35:25Z,"This code seems to have no effect when removed? The UI Options help is still displayed with `deluge -h console`
"
64071199,90,bendikro,2016-05-20T16:41:57Z,"You are right. The issue this code handled was actually fixed by the changes here: https://github.com/deluge-torrent/deluge/pull/90/files#diff-1250fcb4c9343ad6037f48af416b41acL83
"
198511971,196,cas--,2018-06-27T14:17:17Z,"Should avoid using hanging indents so drop the first item onto a new line and dedent.

Also, include a reference link to where this list originated from for aid future devs looking at this code."
198512109,196,cas--,2018-06-27T14:17:37Z,Should not need to use `str` here
198515362,196,cas--,2018-06-27T14:26:02Z,"Instead of a major addition we could override the server version manually before creating the site:
```diff
+ server.version = 'TwistedWeb'
self.site = server.Site(self.top_level)
```
Since this is only set once when the server module is imported it should not be altered.
"
198516417,196,cas--,2018-06-27T14:28:46Z,"I don't think we want `insecurelyLowerMinimumTo`, see https://twistedmatrix.com/documents/current/core/howto/ssl.html#tls-protocol-options

I have set TLS 1.2 for Python 3 changes using: `raiseMinimumTo=TLSVersion.TLSv1_2`

Do you think that the minimum that Twisted require will be an issue?"
198680003,196,DjLegolas,2018-06-28T00:34:33Z,Done.
198680020,196,DjLegolas,2018-06-28T00:34:44Z,Done.
198680109,196,DjLegolas,2018-06-28T00:35:14Z,"hmm, good idea.. Done."
198680194,196,DjLegolas,2018-06-28T00:35:56Z,"No, I don't think so.
BTW, your change forced me to merge the two branches manually."
201328044,196,cas--,2018-07-10T12:48:33Z,Perhaps instead of adding more code to common.py create a new crypto.py or crypto_utils.py file
201504185,196,DjLegolas,2018-07-10T21:39:56Z,Done. Moved to `crypto_utils.py`
207725835,196,cas--,2018-08-05T05:36:05Z,Can we use google style docstrings here please
209314089,196,cas--,2018-08-10T16:22:26Z,This change shouldn't be needed it will only run security tests with `-m`. Is this accidental?
59982432,67,cas--,2016-04-17T11:27:24Z,"Is this very short sleep required?
"
59982635,67,cas--,2016-04-17T11:41:49Z,"Does this signal still get caught? I feel that self.close and self.pre_shutdown be combined and use just this trigger?
"
59982809,67,cas--,2016-04-17T11:51:07Z,"Are these torrentmanager changes related to this PR?
"
59982904,67,cas--,2016-04-17T11:58:07Z,"Probably better with `if not self.closing` and drop the `return`
"
59991645,67,bendikro,2016-04-17T20:16:29Z,"Umm...no
I checked the return value during testing, but it's not needed for the PR. Would be reasonable to return a value or success/failure? Not strictly used for anything at the moment tho.
"
59992394,67,bendikro,2016-04-17T20:48:55Z,"Not sure, just found this: http://stackoverflow.com/questions/2844902/python-four-steps-setup-with-progressbars
I was going to ask whether this code is even necessary at all...?
"
59992407,67,bendikro,2016-04-17T20:49:13Z,"I've combined the two functions.
"
59992426,67,bendikro,2016-04-17T20:50:02Z,"I'd say it's best to avoid indentations of possible?
"
59994186,67,cas--,2016-04-17T22:06:29Z,"I'm sure I looked into it before but forgotten the original reason. As this is on shutdown the delay should be unneeded.

One of the original sources for this code is probably the pygtk faq: http://faq.pygtk.org/index.py?req=all
"
59994523,67,cas--,2016-04-17T22:29:53Z,"I think without a concrete idea of return value, it's best left without so it's relatively obvious
"
60021166,67,bendikro,2016-04-18T08:24:59Z,"The comment says `# Process any pending gtk events since the mainloop has been quit`, but what events would this be? When performing a long running task the GUI is unable to update making it seem to freeze. In which case this code would be useful.

Maybe it was added to try to fix issues with the GTKUI not properly closing in standalone mode when closing with CTRL-C?
If that is the case, it's not needed, as it does not fix that problem, and the issue is fixed by this PR anyways.
"
60040939,67,cas--,2016-04-18T11:14:30Z,"The changes were made in 790a10e3, d0fb657adaa, a3636ccd and 848b14605eb3b but there are few details of the whys...
"
60041643,67,cas--,2016-04-18T11:20:48Z,"This has to be done before shutdown as the comment describes and is tied to `self.torrentview.save_state()`
"
60041701,67,cas--,2016-04-18T11:21:28Z,"To me this seems like the exact same as if twisted catches the sigint before shutdown.

Why not simply `reactor.addSystemEventTrigger(""before"", ""shutdown"", self.close)`?
"
60044006,67,bendikro,2016-04-18T11:44:43Z,"They do explain the purpose of the changes:
- `Fix #535 fix saving column widths`
- `Fix exception when quitting in classic mode`
- `Fix saving torrent state on fresh configs`

So if all these work now it should be ok to remove the code. I haven't tested if the column widths are saved. State should be properly saved, but ideally there would be unit tests for this.

When testing with print statements the save state function did run properly, because the whole component shutdown process is now ensured to be performed before the reactor is shutting down.

I have not tested on Windows, which probably would be a good idea.
"
60044255,67,bendikro,2016-04-18T11:47:07Z,"It is done before reactor shutdown. Before the last rebase, pre_shutdown was actually run after the close function, but now the same code is run before.
"
60045013,67,bendikro,2016-04-18T11:54:15Z,"Well, it doesn't work. GTKUI ends up hanging. Current code closes GTKUI standalone flawlessly both with regular quit (from menu or X button) as well as SIGINT.
"
60045489,67,bendikro,2016-04-18T11:58:53Z,"Umm...after rebase on latest develop SIGINT gives new stacktrace.

**Edit: False alarm**. Had some old files lurking around. Still works good.
"
60046308,67,cas--,2016-04-18T12:06:19Z,"I was actually going to test this myself after lunch but thanks for checking.
"
60046789,67,cas--,2016-04-18T12:10:48Z,"Considering for a while Windows was excluded from running this code I think it'll be safe to remove :D
"
60048906,67,bendikro,2016-04-18T12:29:34Z,"Good point. Removed the code.
"
795852668,354,cas--,2022-01-31T16:36:54Z,We don't normally run this test as it's quite a long test but this module can be tested if you add the text security_test to PR description: https://github.com/deluge-torrent/deluge/blob/73394f1fc5da75ccf0bd466385c2141ff93bd604/.github/workflows/ci.yml#L45
795977836,354,gazpachoking,2022-01-31T19:04:04Z,"Not sure if we care about this or not, I didn't see any code that would actually handle this case."
795978415,354,gazpachoking,2022-01-31T19:04:46Z,"The test claims it should raise an exception, but it just logs the error right now. Don't know if we want to update the behavior."
795979277,354,gazpachoking,2022-01-31T19:05:55Z,"Was there a reason this didn't get returned before? It was being patched in the tests to return this, but I couldn't figure why we didn't want it to return in the real code."
795979592,354,gazpachoking,2022-01-31T19:06:27Z,Anyone remember what this is for? Can it just be ripped out?
795981379,354,gazpachoking,2022-01-31T19:08:51Z,"Not wild about this file not being in the `tests` subfolder, but I didn't know how to make it apply to plugin tests as well without moving it up to the root."
796012538,354,aresch,2022-01-31T19:51:07Z,Just delete this file?
796020481,354,gazpachoking,2022-01-31T20:02:21Z,"That was my thought, was just seeing if anyone remembered what it was for first."
796186075,354,gazpachoking,2022-02-01T00:49:15Z,"Thanks. Yep, those are looking good too."
798647136,354,cas--,2022-02-03T14:55:29Z,"This should be excluded from the packaging if it's in this dir. 

Is this [pytest issue](https://github.com/pytest-dev/pytest/issues/5822#issuecomment-697331920) the problem? Can we try the suggested solution?"
798649907,354,cas--,2022-02-03T14:57:55Z,I'm not sure that there was any need to return it so seems fine to include it
798682095,354,gazpachoking,2022-02-03T15:28:04Z,"> The simplest solution is to just move the conftest.py up one directory (repo1/conftest.py).

This suggested solution is the one I went with.

Just tried the second solution of putting a conftest in both of our plugins that have tests test folders, looks like that suggested method isn't supported anymore.

```
Defining 'pytest_plugins' in a non-top-level conftest is no longer supported:
It affects the entire test suite instead of just below the conftest as expected.
  C:\Users\chase\PycharmProjects\deluge\deluge\plugins\Stats\deluge_stats\tests\conftest.py
Please move it to a top level conftest file at the rootdir:
  C:\Users\chase\PycharmProjects\deluge
For more information, visit:
  https://docs.pytest.org/en/latest/deprecations.html#pytest-plugins-in-non-top-level-conftest-files
collected 0 items / 1 error
```"
798693437,354,gazpachoking,2022-02-03T15:38:43Z,To exclude this from the package... that'd be MANIFEST.in?
799015513,354,cas--,2022-02-03T22:18:40Z,"Actually ignore my muttering about excluding it, must have been thinking of something else"
807379872,376,DjLegolas,2022-02-15T22:43:39Z,change the `i in range` to `i in addrinfo` (and change the names to something even better)
807388593,376,aresch,2022-02-15T22:58:40Z,"Why not something like:
```python
ips = [addrinfo[4][0] for addrinfo in getaddrinfo(host, None)]
```"
807389303,376,aresch,2022-02-15T22:59:54Z,Use plural named variable (`ips`) since it's a list of IPs.
807399076,376,DjLegolas,2022-02-15T23:18:13Z,"@aresch yeah, even better"
807399259,376,doadin,2022-02-15T23:18:37Z,"@aresch I guess that is possible, my python skills are very basic so, I often miss things like this. If that is what you guys want I'll update the PR."
807789943,376,cas--,2022-02-16T10:45:35Z,This comment doesn't provide any extra information that the code doesn't tell us so suggest it's removed
807789988,376,cas--,2022-02-16T10:45:38Z,"This is redundant and should be combined with above e.g. `except (gaierror, IndexError) as ex`

"
807793593,376,cas--,2022-02-16T10:49:41Z,"`ips` could be more descriptive e.g. `host_ips`

Also converting this to a set comprehension would remove any duplicates then convert to list e.g.

```
list({x for x in y})
```"
807810070,376,cas--,2022-02-16T11:06:56Z,"This can be simplified to a list comprehension 

Also use of `host in ips` is not correct as it overwrites the host check `host in LOCALHOST`. Naming is important to prevent confusion or errors so a better option is `ip` or `host_ip`.

Although it appears that LOCALHOST contains both hostname and ip, although is missing ipv6 `::1`. So the lookup could be replaced with `host_ip in LOCALHOST` with the ipv6 addition."
808554133,376,doadin,2022-02-16T23:57:30Z,um....sure.
808554394,376,doadin,2022-02-16T23:58:06Z,The log message seems less accurate in the case of IndexError which is why I had it separate but ok.
810039474,376,cas--,2022-02-18T14:19:07Z,This change would break the lookup for an ip or host here. The `::1` ip just need appended to the tuple so not a tuple of tuples  
810039546,376,cas--,2022-02-18T14:19:11Z,I think it is more robust to lookup with `host_ip` instead of `host` 
810283305,376,doadin,2022-02-18T19:26:31Z,not sure what you mean.
810303631,376,DjLegolas,2022-02-18T19:59:17Z,"Just change it to `('127.0.0.1', 'localhost', '::1')`"
810309856,376,doadin,2022-02-18T20:10:08Z,"oh wow, oops I was thinking of it was like connection pairs, thats localhost not localclient. ok that makes sense."
202543872,204,cas--,2018-07-15T13:51:09Z,"The data dir path for ui will not always be at this location so should use `deluge.common.resource_filename` with module name `deluge.ui` and I would also use a separate location to differentiate from web ui images. e.g. `putChild('ui_images', ...`"
794633810,352,cas--,2022-01-28T15:59:52Z,I think for class/function names expand `Coro` e.g. `CoroutineDeferred` but retain `coro` for params
794645961,352,cas--,2022-01-28T16:14:14Z,"Twisted already has [maybeDeferred](https://twistedmatrix.com/documents/current/api/twisted.internet.defer.html#maybeDeferred) so it might be confusing to name the decorator `maybe_deferred` so what if we went the other way with `maybe_coroutine`?
"
201403343,201,cas--,2018-07-10T16:08:45Z,Probably can use the getRawHeaders default value instead of this test
201405146,201,cas--,2018-07-10T16:14:11Z,Remove extra indent
201405473,201,cas--,2018-07-10T16:15:11Z,I don't think this class needs an underscore prefix
201412584,201,cas--,2018-07-10T16:37:07Z,use `.encode()` please
201511528,201,DjLegolas,2018-07-10T22:09:39Z,Do you mean `self.url = bytes(url.encode('utf-8'))`? Or something else?
201611041,201,cas--,2018-07-11T08:50:24Z,"Even simpler `self.url = url.encode()`, default ascii encoding as a url strictly shouldn't have non-ascii chars."
201691495,201,cas--,2018-07-11T13:36:50Z,Restore the trailing comma please
201692162,201,cas--,2018-07-11T13:38:29Z,Shouldn't really have an extra newline between `if` and `else` statements
201704538,201,cas--,2018-07-11T14:11:49Z,"I was thinking we should be able to use twisted RedirectAgent to deal with redirects and also ContentDecoderAgent for decoding gzip thus simplify this code. 

To deal with deflate might need to subclass GzipDecoder to add 32 instead of 16.

What are your thoughts?"
201707897,201,cas--,2018-07-11T14:20:20Z,"Better to use super so no don't need to refer to parent class so:
```python
super(BodyHandler, self).__init__(request, finished)
```"
201725301,201,cas--,2018-07-11T15:02:21Z,"I am not sure about subclassing Agent, I would prefer to pass agent as an arg so follow the style of the other web client agents: https://github.com/twisted/twisted/blob/trunk/src/twisted/web/client.py#L1941

This would mean that URL and headers should be passed to request instead of HTTPDownloaderAgent instantiation "
202065167,201,DjLegolas,2018-07-12T14:53:52Z,"hmm, this will simplify things...
But some things will have to the same, like how to handle a redirect when not using `RedirectAgent`. The current code of `TrackerIcon` is using `HTTPDownloader` but handles the redirect of the original page by itself and thous requires a `PageRedirect` if the page marked as redirect."
202066066,201,DjLegolas,2018-07-12T14:56:09Z,"This one will need me to change to `class BodyHandler(HTTPClientParser, object):` as `HTTPClientParser` is old style object, and super needs a new style class."
202090828,201,cas--,2018-07-12T16:02:12Z,"Ah! I don't see that being an issue though, just explain that it in commit message. It'd be preferable to use new style and super where possible."
202092413,201,cas--,2018-07-12T16:07:12Z,There is the `handle_redirects` arg (I assume Trackicons uses this) for `download_file()` that could be used to determine whether to wrap the agent with `RedirectAgent`?
202101856,201,DjLegolas,2018-07-12T16:37:42Z,"Yes, and in the last commit I use it for this purpose. Just explaining why some of the code must stay."
808193780,364,cas--,2022-02-16T16:24:50Z,Let's keep fail-fast on
808194158,364,cas--,2022-02-16T16:25:06Z,can we test just 3.7 and 3.10
808194592,364,cas--,2022-02-16T16:25:29Z,let's move this to the requirements.txt and remove the version requirement
808197028,364,cas--,2022-02-16T16:27:21Z,this lib copy should not be needed if using pip install
809574022,364,DjLegolas,2022-02-18T00:12:36Z,"Just a reminder, removing the version requirement will install libtorrent 2"
809582118,364,DjLegolas,2022-02-18T00:29:26Z,Done
809582295,364,DjLegolas,2022-02-18T00:29:39Z,Removed.
813789760,364,cas--,2022-02-24T11:26:33Z,"What I meant was, can we remove this line"
61677141,83,bendikro,2016-04-30T23:56:22Z,"This doesn't work as you may expect.
"
61677318,83,Tanz0rz,2016-05-01T00:19:06Z,"How does it work?
"
61677455,83,bendikro,2016-05-01T00:33:13Z,"`ext == "".torrent"" or "".TORRENT""` will resolve to True when ext contains "".torrent"". If it does not contain "".torrent"", it will resolve to "".TORRENT"". This means the if test expression will always be true, and `magnet` set to `False`
"
61677532,83,aresch,2016-05-01T00:46:16Z,"Why not just make this string lowercase? Simply add .lower() to the end.
"
61677745,83,Tanz0rz,2016-05-01T01:10:38Z,"Ah good point. I do not code in python and thought this was shorthand. I am going to add what aresch suggested and just make the extension check all lowercase.
"
61677810,83,Tanz0rz,2016-05-01T01:19:54Z,"Done
"
61685385,83,cas--,2016-05-01T11:08:00Z,"I'm not sure this is needed. If a user uses a directory that contains other files in it then a lot of log messages will be generated.
"
61686237,83,bendikro,2016-05-01T12:09:31Z,"Yeah, that is a good solution. Your code could also be written as
`if ext  in ["".torrent"", "".TORRENT""]`
"
61688917,83,Tanz0rz,2016-05-01T16:03:16Z,"The reason I want to add some sort of logging here is because I spent at least an hour trying to figure out why the auto-add setting wasn't paying any attention to my specified folder. in reality, it was paying close attention to that folder, but silently failing. I see your concern, though.

An alternative that I can think of right now would be to add a debug message to the extension check to just say something like ""evaluating file for auto-add."" 
"
62319871,83,cas--,2016-05-06T11:47:18Z,"Fair enough, log.debug would be fine
"
62337580,83,Tanz0rz,2016-05-06T14:34:19Z,"Debug on the current line in this comment chain (already done above), or debug on the initial check of files in the watch folder?
"
47490937,50,cas--,2015-12-14T12:20:06Z,"I think this would be better caught in the test with a get() method as per https://github.com/deluge-torrent/deluge/blob/develop/deluge/tests/test_torrent.py#L27
"
58849831,50,cas--,2016-04-07T10:23:01Z,"Are you sure about replacing port with user?
"
59116079,50,cas--,2016-04-09T14:36:31Z,"afaik the convention is to drop the parens with multiple values
"
59116080,50,cas--,2016-04-09T14:36:34Z,"Perhaps log this as a warning?
"
59116122,50,cas--,2016-04-09T14:38:51Z,"Should we use an underscore prefix to denote this is a 'private' method?
"
59116145,50,cas--,2016-04-09T14:40:31Z,"Is this solely for Test cases?
"
59116250,50,cas--,2016-04-09T14:48:17Z,"Hmm a try and an if... I think the try statement is enough?
"
59116376,50,bendikro,2016-04-09T14:55:43Z,"`log.warn(""Ignored attempt to overwrite web config key '%s'"" % key)` ?
"
59116403,50,cas--,2016-04-09T14:58:02Z,":+1: 
"
59116468,50,cas--,2016-04-09T15:04:16Z,"This could be combined with the log.error below. 

`""Error attempting to listen on %s:%s: %s"", hostname, port, ex`
"
59116563,50,cas--,2016-04-09T15:09:54Z,"Is this return used?
"
59116879,50,bendikro,2016-04-09T15:35:39Z,"Yes, to prevent call to reactor.run() and stop() in deluge.ui.web.server
"
59116905,50,bendikro,2016-04-09T15:37:33Z,"Yeah, try/except shouldn't be required.
"
59116920,50,bendikro,2016-04-09T15:38:14Z,"Sure
"
59119295,50,bendikro,2016-04-09T18:34:26Z,"Just removed the new line as the exception contains the same info
"
59119360,50,bendikro,2016-04-09T18:39:18Z,"Yes, without the return statement a call to the exported connect method will  return None instead os the methods.
"
59119369,50,bendikro,2016-04-09T18:40:04Z,"Changed connect_daemon to _connect_daemon and get_host to _get_host
"
59121781,50,cas--,2016-04-09T21:31:00Z,"Oh is this another one for tests? Perhaps mock will work for this one.
"
243924763,228,DjLegolas,2018-12-25T21:10:52Z,should inherit from `basetest.BaseTestCase` as well for the tests to be run.
246120202,228,hukal,2019-01-08T19:20:49Z,Done.
62939968,93,aresch,2016-05-11T22:45:02Z,"Maybe this instead to reduce repetition?

```
e = external_ip if external_ip else ""n/a""
self.external_ip_item.set_markup(_(""<b>IP</b> %s"") % e)
```

Also, should we be concatenating the strings to ensure translation can happen?

```
_(""<b>IP</b> "" + e)
```
"
62940009,93,aresch,2016-05-11T22:45:24Z,"This should be set_markup() if you don't change the function to remove this line.
"
62940119,93,aresch,2016-05-11T22:46:35Z,"Need a docstring here.
"
62940281,93,bendikro,2016-05-11T22:48:22Z,"Shouldn't d5 be added to the DeferredList?
"
62940516,93,bendikro,2016-05-11T22:50:29Z,"Would translating `5 KiB/s` ever be needed?
"
62990813,93,cas--,2016-05-12T09:34:01Z,"This was to keep consistency, the unit is translated. 
"
62993067,93,cas--,2016-05-12T09:49:19Z,"Good point, at the time I thought it could be neater...

I have been making the mistake of thinking I should avoid `%s` in the translation string but found since then that [concat is not correct](http://read-the-docs.readthedocs.io/en/latest/i18n.html#interpolation). The string should use substitution (or format) so that translators can change the position of `%s` if the word order is different. With this new knowledge I may have to go back through the code and make the correct alterations!
"
62994053,93,cas--,2016-05-12T09:57:00Z,"oh hah, it worked though :D
"
62994289,93,cas--,2016-05-12T09:58:59Z,"Should make the same changes as gtkui
"
62994520,93,cas--,2016-05-12T10:00:43Z,"Use substitution
"
60482204,62,cas--,2016-04-20T20:33:52Z,"Should it just be 'output_stream'? 
"
61064578,62,bendikro,2016-04-26T10:41:34Z,"I wonder whether it's a good idea to translate strings like this which includes argument option description.
If `key` and `value` should be translated, they must also be translated in the other arguments below.
"
61064623,62,bendikro,2016-04-26T10:42:08Z,"Like here `metavar=""<value>""`
"
61064647,62,bendikro,2016-04-26T10:42:20Z,"And `metavar=""<keys>""`
"
61064949,62,cas--,2016-04-26T10:45:01Z,"Yes I did ponder that and it's a good point about the `key` and `value`... I'll have a think :)
"
85639697,62,cas--,2016-10-29T12:53:30Z,"Should be [""torrentview""][""separate_complete""]
"
85649154,62,bendikro,2016-10-29T21:56:16Z,"Fixed
"
231077029,224,cas--,2018-11-06T10:50:01Z,Need to keep this for Python 2 compatibility 
231077745,224,cas--,2018-11-06T10:52:29Z,The `X` has jumped lines so diff looks like more has changed here
231080222,224,cas--,2018-11-06T11:00:17Z,This information should be in the class docstring
231374548,224,aresch,2018-11-07T03:58:11Z,Done.
231374557,224,aresch,2018-11-07T03:58:19Z,Done.
231374571,224,aresch,2018-11-07T03:58:26Z,Done.
794991005,353,aresch,2022-01-29T03:18:41Z,"Shouldn't this be an async def? Presumably you're using this decorator on async functions, so it should return one?"
794993988,353,gazpachoking,2022-01-29T03:50:28Z,"Nope, it turns it into a regular function. That's why it's usable in situations outside of async functions. Works almost the same as the two commented lines below using 'ensureDeferred'."
794994173,353,gazpachoking,2022-01-29T03:53:11Z,"Sorta like this wrapper here. https://stackoverflow.com/a/44627140 `CoroutineDeferred` has _almost_ the same function as `ensureDeferred`, except it will pass the coroutine through directly where appropriate."
800093665,353,cas--,2022-02-05T19:49:56Z,I was about to merge this but this typing (I assume Twisted again) is tripping me up
800098932,353,gazpachoking,2022-02-05T20:53:17Z,"I switched it to a comment now, that should fix things."
800102495,353,gazpachoking,2022-02-05T21:37:23Z,"And now I switched it to a string, which is a bit nicer."
579784683,306,DjLegolas,2021-02-21T10:19:30Z,"Just switch the order like this:
```python
from gi.repository import Gdk, Gtk
```"
579788152,306,matiasw,2021-02-21T10:49:03Z,"Ok, done."
714228765,306,cas--,2021-09-22T19:02:13Z,"Can we simplify by using existing functions `get_clipboard_text`, `is_url` and `is_magnet` as used in `on_button_url_clicked`"
716055947,306,cas--,2021-09-25T15:33:42Z,Remove unused import
716056035,306,cas--,2021-09-25T15:34:35Z,Can we name this `prev_clipboard_text` or `previous_clipboard_text`
716056139,306,cas--,2021-09-25T15:35:52Z,Can omit this else
716056247,306,cas--,2021-09-25T15:36:57Z,Remove stray added newline
775261875,325,cas--,2021-12-26T16:30:12Z,"This doesn't seem correct, should be string not bytes. 

Discussion for reference: https://github.com/pyca/pyopenssl/issues/730
"
775261926,325,cas--,2021-12-26T16:30:54Z,Can we remove the unneeded comment
775262079,325,cas--,2021-12-26T16:32:05Z,This will need to be 2.1.0 since it's a breaking compatibility change
775263050,325,cas--,2021-12-26T16:42:52Z,Actually just import SimpleNamespace from types 
775263494,325,cas--,2021-12-26T16:47:49Z,We might be able to drop the `object` class here
775266277,325,cas--,2021-12-26T17:16:46Z,Remove these lines instead of commenting out
775266422,325,cas--,2021-12-26T17:18:12Z,"Please leave don't include TODO comments, this will be dealt with when the time comes"
775266830,325,DjLegolas,2021-12-26T17:23:36Z,"Stupid docstring... The IDE warned me about it being bytes and not string because of it.
Will change in the next push."
775267228,325,DjLegolas,2021-12-26T17:27:08Z,"No problem.
Do you want me to tag it already as 2.1.0 or add a new one for future releases like `develop`?"
775267926,325,cas--,2021-12-26T17:34:47Z,Sure you can change the version number. I'll remember to bump to dev tag when merging
775558789,325,cas--,2021-12-27T16:03:23Z,Best to remove this since we'll add it back when needed
18949029,19,cas--,2014-10-16T10:57:38Z,"I think this should be a comment rather than log line and should read something like: ""Could not create for all users, falling back to current user""
"
71378025,103,cas--,2016-07-19T16:51:24Z,"Can you add a git commit message about this change.
"
71378164,103,cas--,2016-07-19T16:52:16Z,"docstring for return value

also `ret` should perhaps be renamed to something a bit clearer
"
71378524,103,cas--,2016-07-19T16:54:26Z,"Think this be moved under `reactor.run()`
"
71545327,103,bendikro,2016-07-20T15:16:23Z,"Added comment on commit message:
""Added parameter log.setup_logger to prevent output noise in unit tests""

Is that good?
"
71545431,103,bendikro,2016-07-20T15:16:54Z,"Removed the return value as it isn't needed.
"
71545480,103,bendikro,2016-07-20T15:17:09Z,"Removed.
"
71547194,103,bendikro,2016-07-20T15:25:40Z,"Crap, that was apparently just wrong.
"
72773236,103,cas--,2016-07-29T10:36:30Z,"Think that this can be refactored to bring the reactor.run and return into this statement.
"
72886112,103,bendikro,2016-07-30T11:33:37Z,"I just left the logic as it already was, but I wasn't too happy about it :-)
I'll rewrite it...
"
72892576,103,bendikro,2016-07-30T18:56:28Z,"Pushed a change to this function.
"
83627142,103,cas--,2016-10-17T11:52:14Z,"Should start indented under `Returns` with `Deferred: ...`
"
83801223,103,bendikro,2016-10-18T08:08:28Z,"Fixed.
"
83802629,103,bendikro,2016-10-18T08:17:16Z,"This has been fixed btw.
"
439755434,296,cas--,2020-06-13T17:35:51Z,This is actually a stable PPA so shouldn't be called development PPA. It was actually a pain to maintain the original stable PPA and this 'daily' PPA tracks master branch. I think for now just call it Deluge PPA.
439755750,296,cas--,2020-06-13T17:40:50Z,"Deluge actually has two maintained daily build PPA, one each for develop and master branches. The stable PPA is for the latter. You have conflated the two here so in the first case it should only be mentioned as stable and link to such: https://launchpad.net/~deluge-team/+archive/ubuntu/stable/ 

It might be good to mention the other PPA but I feel a link to another document with those details is better than easily giving users access to work-in-progress code."
439755876,296,cas--,2020-06-13T17:42:52Z,There is no mention of server or client in this document so simply say `Deluge` 
439755900,296,cas--,2020-06-13T17:43:12Z,"There is no need to install both deluge and deluge-gtk, just *deluge* will do"
439755913,296,cas--,2020-06-13T17:43:24Z,see above
439839430,296,SergioInToronto,2020-06-14T15:12:07Z,"Does Deluge consider master stable? When I think ""stable"" I'm only thinking about releases."
439839531,296,SergioInToronto,2020-06-14T15:13:05Z,"I guess since there's a develop branch, that is the unstable work."
439839801,296,SergioInToronto,2020-06-14T15:16:08Z,"I found that confusing. I installed `deluge`, then pressed super, typed ""deluge"", but nothing appeared. It was because only the server was installed. I think it's important to mention both."
439840050,296,SergioInToronto,2020-06-14T15:19:05Z,"Whoops my mistake. That only happened when installing the snap from Ubuntu's software app. The first entry is a snap, the 2nd is from apt.
![image](https://user-images.githubusercontent.com/66286679/84597255-da28ed80-ae30-11ea-8d93-b700f3f8f4f9.png)
"
439840504,296,SergioInToronto,2020-06-14T15:23:51Z,"Speaking of, what is this?
https://github.com/Lukewh/deluge-snap"
1736425466,462,cas--,2024-08-29T15:03:37Z,Using list indexes is rather opaque and indicates area for improvement. Did you consider using `get_content_type`?
1736434522,462,cas--,2024-08-29T15:07:29Z,Why not use `EmailMessage` instead of legacy `Message` class?
1736474876,462,cas--,2024-08-29T15:22:21Z,"Why not use `content-disposition` and then `get_filename`

```
message['content-disposition'] = content_disp
new_file_name = message.get_filename()
if new_file_name:
    new_file_name = sanitise_filename(new_file_name)
```"
1736498155,462,cas--,2024-08-29T15:28:41Z,"We can simplify with 
```
cont_type = message.get_content_type()
params = message['content-type'].params
```"
1738027611,462,mtasaka,2024-08-30T06:32:47Z,"Okay, thanks. will update."
1738027715,462,mtasaka,2024-08-30T06:32:51Z,Thank you for comment. I did not notice this. Will reflect your review.
1738028204,462,mtasaka,2024-08-30T06:33:14Z,Thank you . Actually https://docs.python.org/3/library/cgi.html#cgi.parse_header says your way is preferred. Will update.
19869685,16,cas--,2014-11-05T12:24:59Z,"needs a docstring
"
19869828,16,cas--,2014-11-05T12:28:17Z,"I know this is c&p but I think just a log.error is needed here, with `ex`. 
"
19870045,16,cas--,2014-11-05T12:32:10Z,"afaik `add` method doesn't explicitly throw any exceptions so possibly just catch a libtorrent `RunTimeError`, and again remove the log.exception. 
"
19870380,16,cas--,2014-11-05T12:40:57Z,"return deferred without assign
"
21093217,16,bendikro,2014-12-01T15:04:19Z,"Fixed
"
21093231,16,bendikro,2014-12-01T15:04:33Z,"Fixed
"
21093240,16,bendikro,2014-12-01T15:04:41Z,"Fixed
"
21093255,16,bendikro,2014-12-01T15:04:48Z,"Fixed
"
21148780,16,cas--,2014-12-02T09:53:58Z,"Could this be better written as `for idx, torrent in enumerate(torrent_files)`...
"
21231572,16,bendikro,2014-12-03T13:48:13Z,"It could, but we still need the `count` to check for the last entry.
"
21231743,16,cas--,2014-12-03T13:51:43Z,"Yes. I think it makes it clearer and don't feel using `xrange` is correct here. 
"
21234543,16,bendikro,2014-12-03T14:39:20Z,"Fixed
"
202691180,202,cas--,2018-07-16T13:56:10Z,"Using python assert is for pytest and will not output traceback with trial on failure so please revert this change. The assertTrue could be replaced with assertEquals but it's not really worth unless changing whole test file...
"
202697325,202,gazpachoking,2018-07-16T14:12:52Z,Isn't pytest what's being used now?
202710305,202,cas--,2018-07-16T14:47:00Z,"Well, both are in use and I can't remember what the end-goal was... It doesn't actually test the twisted deferreds properly so would need this plugin: https://github.com/pytest-dev/pytest-twisted

The point is that changing it for one subset of tests is not a good idea. The tests themselves are subclassing trial unittest so best to keep that compatibility."
202717130,202,gazpachoking,2018-07-16T15:04:32Z,"No prob. I thought the intention was to switch over to pytest, and had introduced a failure that wasn't giving me any good info with assertTrue."
202726741,202,cas--,2018-07-16T15:30:18Z,Sure it would be good to move to pytest entirely but it's better to do it as part of an overall change rather than here and there and potentially cause more headaches.
202728246,202,cas--,2018-07-16T15:34:23Z,Add a small comment to indicate truncating floats and casting to int
287791921,240,cas--,2019-05-27T13:30:50Z,"This should not be changed, the de-facto standard for getting Python lib version is `__version__`"
287792332,240,cas--,2019-05-27T13:32:13Z,"Using `lt.torrent_flags` is a breaking change for 1.1, lt 1.2 with deprecated enabled should still have `add_torrent_params_flags_t`"
287792450,240,cas--,2019-05-27T13:32:39Z,I don't want to rely on 1.2 solely yet
287792937,240,cas--,2019-05-27T13:34:13Z,I'm sure that using the value is intentional to avoid relying on `libtorrent` in a test. A comment would suffice or create variables with those values.
287796532,240,cas--,2019-05-27T13:45:00Z,"These changes are breaking for 1.1, please revert"
287842652,240,DjLegolas,2019-05-27T16:29:09Z,"The problem with this hard-coded value is the change of values in lt-1.2.
For testing this properly, without relying on `libtorrent`, we should set some environment flag to know which version of it we are using and set the proper value accordingly.

Do you have any suggestions for how to do this?"
287884113,240,cas--,2019-05-27T21:26:34Z,"Ah ok, then import and use the old-style lt flags. "
287886601,240,cas--,2019-05-27T21:51:43Z,"Instead of testing for 1.2. Replace these three dict with the following that should work for both versions:

```
atp['flags']  = (
    LT_DEFAULT_ADD_TORRENT_FLAGS  
    | lt.add_torrent_params_flags_t.flag_duplicate_is_error
    & ~lt.add_torrent_params_flags_t.flag_paused
)
```"
287886860,240,cas--,2019-05-27T21:55:01Z,Replace with boolean flag operation that would work for both versions
814527564,377,cas--,2022-02-25T07:17:12Z,Can you remove this change please
814529575,377,KtlTheBest,2022-02-25T07:21:22Z,Sure! Must have slipped from the other branch
814532432,377,cas--,2022-02-25T07:27:22Z,"Excellent thanks, I'll merge later today

Do you know how to rebase to single commit and update the commit message? We would like to always have a summary of why and what changed in the commit message body, along with any ticket references. 

If you can give it a go that would be great, otherwise is not a big issue on this one.

Helpful commit message tips: https://cbea.ms/git-commit/#seven-rules"
814766827,377,KtlTheBest,2022-02-25T13:27:47Z,"By rebase to single commit do you mean ""squash""? Yes, I can do that."
814788761,377,KtlTheBest,2022-02-25T13:58:38Z,"It seems I did it. There is one commit that encapsulates all of the changes, but the previous commits are also there... The message of the squashed commit is updated to contain the context, as well as the link to the ticket."
815092553,377,doadin,2022-02-25T20:13:59Z,assuming you have the base repo(https://github.com/deluge-torrent/deluge) setup in your git clone as deluge-torrent. if you run in terminal from the deluge folder: `git rebase deluge-torrent/develop` that should update the repo and put your commit last. Currently it looks like its out of date but then commits merged in.(why there is 12 commits to the PR vs 1)
815097967,377,doadin,2022-02-25T20:15:58Z,"cas could always just cherry-pick your change as well but if you clean it up its a little easier.as he said `If you can give it a go that would be great, otherwise is not a big issue on this one.`"
815100134,377,doadin,2022-02-25T20:16:36Z,just thought id try to help on how to do the rebase.
815277748,377,KtlTheBest,2022-02-26T06:47:45Z,I see... I was somehow under impression that I should rebase against my fork of the deluge instead of the original one and that is what I did. Still not sure how I ended up with 12 commits though... I was pretty clear to squash the commits. Thanks for your help @doadin! I will keep that in mind
815278029,377,doadin,2022-02-26T06:51:41Z,"np, yea you want to rebase against the official deluge git repo. Rebasing updates with all the commits at the time of the rebase then applies your changes after. So thats why it should go down to one, because after updating your commit should be the only different one.

if you use `git rebase -i deluge-torrent/develop` it will open your default git editor and give you options for each commit, again in this case there should only be one but in other cases if you have more than one commit -i is for interactive and it will stop and let you chose to use/drop/rename/squash and other things to commits."
895165606,386,cas--,2022-06-12T12:17:24Z,"I don't see `gstreamer` as part of gvsbuild, why do we need this? If it is included then likely better to not build it in the first place by adding `gstreamer` to the [skip step](
https://github.com/deluge-torrent/gvsbuild-release/blob/5c3100a8726af2945915029673853b70aa616373/.github/workflows/release.yml#L50)
"
895168129,386,mhertz,2022-06-12T12:37:29Z,"Gstreamer project isn't built, but for some reason some references to it is picked up by pyinstaller through gi.repository. This was same in pyinstaller 4.x and displayed a ""traceback"" error in cmd-output during freeze, but the freezing continued till end succesfully regardless - this was one of the things they changed/fixed in pyinstaller 5.x i.e. implememnted a new child/parent method which would now correctly block/quiet the run(main-loop I gather) whenever some sub-process failed.

This fix/workaround is fixing a ""missing typelib"" error for various gst components for both pyinstaller 4.x and 5.x, but just now doesn't quit the process in error litle after start in pyinstaller 5.x.

I have been trying to see if could find the culprit specifically so could report to gvsbuild devs, but haven't yet though.

When you asked if I could clarify, then did you refer to the commit-message, or to you(like here)? Sorry for being dense :)

I understand of-course if you close this, but was also just to note(as you have no ""issues"" section here) that either need something like this, or, need stipulate 'pip install pyinstaller==4.10' to produce a freezed build currently.

Thanks for taking a look :)"
895172396,386,cas--,2022-06-12T13:09:24Z,"It is always good to include the reason why something has changed in the commit message, that way in the future we can use `git blame` to see why the change was made.

As for the error, I don't see any issues with the CI builds, is this a local build issue? What are your steps to reproduce? 

![image](https://user-images.githubusercontent.com/606038/173234632-2f4e8383-f212-442f-ac78-17245acb5331.png)

I am happy to merge the Readme changes but without more details on the error I am reluctant to include that change"
64148469,99,cas--,2016-05-22T11:34:02Z,"Should be Args
"
64148623,99,cas--,2016-05-22T11:47:59Z,"Could you elaborate in the commit message why this fix was needed
"
64148687,99,bendikro,2016-05-22T11:55:17Z,"I was looking here which uses Kwargs as well as Args: https://pythonhosted.org/an_example_pypi_project/sphinx.html#full-code-example

But maybe that's not necessary.
"
64148753,99,cas--,2016-05-22T12:01:26Z,"Ah... I don't really see the need and the convention so far is without
"
64221006,99,bendikro,2016-05-23T13:22:11Z,"The problem is simply that exceptions can't be serialized by rencode. The tests pass because it's run locally without serializing. I would prefer a solution where the reason could be returned as part of the return value. We could return the exceptions getMessage value?
"
64223547,99,bendikro,2016-05-23T13:38:40Z,"Updated with a fixup that reverts the change and uses a string value instead of the exception. What do you think?
"
64224279,99,cas--,2016-05-23T13:43:29Z,"Do we care enough about removing torrents that don't exist to log it? :)
"
64224625,99,cas--,2016-05-23T13:45:48Z,"That seems like a better fix
"
64230707,99,bendikro,2016-05-23T14:21:34Z,"Well, the main reason is that it shouldn't really be happening, so at least it informs us that something isn't right
"
64230880,99,cas--,2016-05-23T14:22:36Z,"Ok perhaps warning or debug then?
"
64306186,99,bendikro,2016-05-23T23:22:26Z,"Sure, used warning as debug is never really used by anyone I imagine..
"
160313265,175,aresch,2018-01-09T03:40:01Z,You'll want to remove this line.  Currently the update() method is called every ~0.3 seconds (see line 84) by the Component system.
160313468,175,aresch,2018-01-09T03:43:12Z,Change this to call self.alert_manager.handle_alerts() directly.
160313535,175,aresch,2018-01-09T03:43:53Z,You should probably at least log the exception here since it should rarely (if ever) occur and it would be good for debugging issues.
160314594,175,aresch,2018-01-09T03:57:16Z,"Typically you would subclass threading.Thread and override run() for something like this.  However, I think that you could probably even forego the class entirely and just run a thread of a method in AlertManager itself.  You could probably use the state of the Component class in lieu of self.running. I would just write a new method called 'wait_for_alerts' (essentially your run() method) and run that as a thread.  It will have access to all the member variables of AlertManager and you don't need to worry about synchronization since Python has the GIL.

Here is an example of just running a method as a thread:

```python
import threading


class AlertManager:
    def __init__(self):
        self.foo = 'bar'

    def thread(self):
        if self.foo == 'bar':
            self.foo = 'foobar'

    def start(self):
        print(self.foo)
        t = threading.Thread(target=self.thread)
        t.start()
        t.join()
        print(self.foo)

a = AlertManager()
a.start()
```"
160328562,175,AllSeeingEyeTolledEweSew,2018-01-09T06:45:05Z,Done.
160328579,175,AllSeeingEyeTolledEweSew,2018-01-09T06:45:15Z,Done.
160328601,175,AllSeeingEyeTolledEweSew,2018-01-09T06:45:27Z,I think I already do this.
160328737,175,AllSeeingEyeTolledEweSew,2018-01-09T06:46:23Z,"I'm a little paranoid about this, since I'm not sure I've caught all the cases of the component lifecycle."
275435528,234,cas--,2019-04-15T16:07:42Z,`full_distribution_name` should be True to match original line.
275435784,234,cas--,2019-04-15T16:08:16Z,Since the distro details are not that important this would be better as optional package
275444098,234,cas--,2019-04-15T16:28:57Z,Change this to test for `disto` or `linux_distribution` perhaps?
275448006,234,cas--,2019-04-15T16:39:50Z,Technically `distro` supports BSD too so perhaps just check not Windows or Darwin?
275497311,234,DjLegolas,2019-04-15T18:50:32Z,How do I do that? Isn't it by stating in the requires section in `setup.py` (which I forgot to add)?
275522173,234,cas--,2019-04-15T20:01:02Z,"This will importerror if distro is not installed, have a look at dbus below for example"
275877904,234,DjLegolas,2019-04-16T16:08:18Z,"Oh, OK.
But now I got a question... Should I add `distro` to `requirements.txt` (or any other file of them) and to `install_requires` in `setup.py`?"
276155042,234,cas--,2019-04-17T09:30:01Z,"> Should I add `distro` to `requirements.txt` (or any other file of them) and to `install_requires` in `setup.py`?

Yes add to both. `install_requires` list is automatically installed by pip and requirements.txt is for manual environment setup with `pip -r`. 

I have put optional packages in `install_requires` because they are soft-required for best user-experience and would be a headache to put in `extra_require` and ensure they are installed. 

My reasoning for making `distro` package optional is to help with packaging. For example there is no deb package on Ubuntu so Deluge would break if it's missing.
"
276155082,234,cas--,2019-04-17T09:30:10Z,Oh don't forget to update the DEPENDS file too.
276370015,234,DjLegolas,2019-04-17T18:12:06Z,"Not sure if this condition is good.
What do you think @cas-- ?"
276981640,234,cas--,2019-04-19T13:05:13Z,"I would simplify to `platform_system != 'Windows' and platform_system != 'Darwin'`. I don't think the Microsoft check is required these days.

I do wonder what happens if try to install distro on those OS but it's fine with the check for now.

An amusing alternative would be `'win' not in sys_platform` since it would cover `cygwin`, `win32` and `darwin` but a bit too obscure ;)"
277007801,234,DjLegolas,2019-04-19T14:57:48Z,"I installed `distro` on windows successfully, but all the functions return empty string to something like it.

And I changed the line to the obscure way :wink:"
884125918,385,cas--,2022-05-28T11:55:38Z,"This is a rather complicated solution to the problem, especially since there the charset value is unused. Therefore could be simplified to `content_type.startswith('application/json')`

Alternatively if want to verify charset is `utf-8` we can use [cgi.parse_header](https://docs.python.org/3/library/cgi.html#cgi.parse_header) to extract the type value and the parameters which is a dict with `charset` key."
884126222,385,cas--,2022-05-28T11:58:41Z,"This is not the correct place for the content-type test, it should be a new json_api unit test under an existing content-type test:

https://github.com/deluge-torrent/deluge/blob/4f81dfd2cca01d4b05d1a484ec3503a17f0602e5/deluge/tests/test_json_api.py#L91"
884166326,385,ibizaman,2022-05-28T18:45:20Z,"Good call. I agree with your proposal although TBH I donâ€™t know which one to choose.

Being more strict and asserting the charset to be utf-8 would probably avoid some headaches down the line by failing early.

But on the other side being more lenient can avoid badly configured clients to be blocked.

My gut tells me being stricter is better but what do you think? Are there some similar choices that had been made on the past?"
884167027,385,ibizaman,2022-05-28T18:53:13Z,Ah I totally missed that. Iâ€™ll change it. 
884170445,385,cas--,2022-05-28T19:33:21Z,"It's safe to assume that all `application/json` content type will be `utf-8`, in fact the charset parameter is not part of the standard: https://github.com/request/request/issues/383#issuecomment-18455635

So let's keep it simple, you could still use `cgi.parse_header` and ignore the second tuple value using the `_`:

```
content_type, _ = cgi.parse_header(header-content-type)
```"
884188618,385,ibizaman,2022-05-28T23:23:10Z,Oh I had no idea about that. Cool letâ€™s keep it simple. Iâ€™ll definitely add a comment about it.
884216198,385,ibizaman,2022-05-29T06:05:23Z,"So instead, I wanted to check that the content-type was valid for `application/json` and `application/json;charset=utf-8` so I created a new test function for it. I'm happy to change that in any way, just tell me."
884262537,385,cas--,2022-05-29T12:24:50Z,"I appreciate the addition of a comment but without any context about charset it is not worth mentioning here as comment. We should always err towards less comments unless the code we write is unclear but even then refactoring the code might help. 

The actual reasoning for making this change should be stored in the git commit message so we then use git blame in future if we are uncertain about this line of code. We also have the tests that could improved with a docstring to quickly outline reasoning."
884263081,385,cas--,2022-05-29T12:28:54Z,"I would split this into two tests, helps with understanding should a test fail
```
test_on_json_request_content_type
""""""Ensure content-type application/json is accepted""""""

test_on_json_request_content_type_charset
""""""Ensure content-type parameters such as charset are ignored""""""
```"
1306156736,430,cas--,2023-08-25T21:16:10Z,"If I'm not mistaken we don't need a new method, create_torrent can return a deferred without affecting existing client usage"
1306446400,430,cas--,2023-08-26T14:24:02Z,"Cannot import libtorrent here, this burdens UI clients with libtorrent requirement"
1306452651,430,cas--,2023-08-26T14:40:55Z,"I don't feel it is a good idea to have these libtorrent implementation details leaking into the functions and API. It would be better to use something like a TorrentFormat Enum and have a `format` param that can accept str or Enum.

A tentative implementation attempt:

```
class TorrentFormat(str, Enum):
     V1 = 'v1_only'
     V2 = 'v2_only'
     HYBRID = 'hybrid'

     @classmethod
     def _missing_(cls, value):
         if not value:
             return cls.V1

         value = value.lower()
         for member in cls:
             if member.value.startswith(value):
                return member

     def to_lt_flag(self):
         if self.value == 'v1_only':
             return 64
         if self.value == 'v2_only':
             return 32
         return 0
```

This can be better represent available options to users."
1307312301,430,rcarpa,2023-08-28T11:37:34Z,I updated the PR to return a Deferred directly from the existing function. Looks like you were right. 
1307312952,430,rcarpa,2023-08-28T11:38:17Z,I imported libtorrent in the corresponding function only
1307314229,430,rcarpa,2023-08-28T11:39:47Z,"Did it a bit differently. The called it torrent_format everywhere to avoid clash with the builtin `format` function. The format names are `v1`, `v2` and `hybrid` (without the _only suffix). And enforce a valid format string in _missing_. Instead of returning `v1` on invalid format. "
1307346907,430,cas--,2023-08-28T12:14:41Z,"I forgot to mention that we don't import libtorrent directly

```suggestion
    from deluge._libtorrent import lt
```"
1307347329,430,cas--,2023-08-28T12:15:06Z,Already imported as `lt` below
1307350063,430,cas--,2023-08-28T12:17:46Z,"We should no longer be relying on pkg_resources, however there is a VersionSplit module in common"
1307352332,430,cas--,2023-08-28T12:20:07Z,Use _libtorrent.LT_VERSION with VersionSplit
1307357729,430,cas--,2023-08-28T12:25:36Z,It is possible to use pytest_twisted.inlinecallbacks to simplify the tests
17940959,10,cas--,2014-09-23T21:32:46Z,"Needs a dot 
"
17961382,10,cas--,2014-09-24T09:18:03Z,"We were going to remove duplicated `pep8` and `flakes`
"
17961460,10,cas--,2014-09-24T09:20:04Z,"no need for extra line here
"
17961471,10,cas--,2014-09-24T09:20:24Z,"no need for extra line here
"
17961666,10,cas--,2014-09-24T09:24:58Z,"what does this do?
"
17962190,10,cas--,2014-09-24T09:37:55Z,"indent issue
"
17962196,10,cas--,2014-09-24T09:38:09Z,"indent issue
"
17962218,10,cas--,2014-09-24T09:38:39Z,"what are the commented out commands?
"
17962265,10,cas--,2014-09-24T09:39:52Z,"is this comment still valid?
"
17962543,10,cas--,2014-09-24T09:46:21Z,"add space above and remove one below (`isort` will change this)
"
17998224,10,bendikro,2014-09-24T20:31:50Z,"Leftover from when it failed to import.
"
59857158,65,cas--,2016-04-15T10:42:53Z,"The return statement here means that the code below is never run...
"
59885800,65,bendikro,2016-04-15T14:48:24Z,"Ah, that extra return should not be there.
"
59982327,65,cas--,2016-04-17T11:18:10Z,"Leave this code in place
"
59990865,65,bendikro,2016-04-17T19:35:23Z,"Added back
"
61406600,79,cas--,2016-04-28T10:37:52Z,"Should this have been added?
"
61410973,79,bendikro,2016-04-28T11:23:05Z,"Wops, no
"
61411235,79,bendikro,2016-04-28T11:25:51Z,"Fixed
"
61415532,79,cas--,2016-04-28T12:01:57Z,"What does ""call is queued"" mean? Ok I've looked up deferredlock and see it has a `self.waiting` list so should the calls not just skipped until next timer, otherwise it could start stacking the saves?
"
61418900,79,cas--,2016-04-28T12:34:00Z,"I knew this seemed familiar, could we not use the same implementation as we did for [`save_state`](https://github.com/bendikro/deluge/blob/develop-save-fastresume-separate-thread/deluge/core/torrentmanager.py#L662)
"
61421741,79,bendikro,2016-04-28T12:56:22Z,"The reasoning for stacking the calls is that the resume data is dependent on callbacks from libtorrent. In theory, a `_save_resume_data_file()` call may be running when a shutdown is initiated. If all `save_resume_data alerts` triggered by the call to `save_resume_data()` in `torrentmanager.stop()` are finished before the `_save_resume_data_file()` call (already running when shutting down) has finished, the new call to `_save_resume_data_file()` initiated by the shutdown would be ignored.

With that said, the problem with stacking calls in general did cross my mind, so I think the best solution is to only stack calls when `flush_disk_cache` is true, i.e. on shutdown.
"
61436368,79,cas--,2016-04-28T14:29:09Z,"Good catch!
"
70293884,105,cas--,2016-07-11T16:48:00Z,"If this is the default flag then there should be no need for this change
"
70304858,105,minus7,2016-07-11T17:52:38Z,"You need to pass one parameter though (although it has a default value in C++). lt bug?
"
70306352,105,cas--,2016-07-11T18:01:21Z,"Yes looks like a bug in the [binding](https://github.com/arvidn/libtorrent/blob/RC_1_1/bindings/python/src/session.cpp#L775)

This should fix it:

``` diff
-    .def(""post_torrent_updates"", allow_threads(&lt::session::post_torrent_updates))
+   .def(""post_torrent_updates"", allow_threads(&lt::session::post_torrent_updates), arg(""flags"") = 0xffffffff)
```
"
70645858,105,bendikro,2016-07-13T15:16:52Z,"Should probably create an issue for this?
"
70721674,105,cas--,2016-07-13T22:40:35Z,"Done
"
86218413,133,cas--,2016-11-02T18:59:45Z,"Docstrings should start on the first line as opening quotes: `""""""A simple test...`
"
86218567,133,cas--,2016-11-02T19:00:26Z,"Replace usage with `Examples:` and indent the code below
"
86218780,133,cas--,2016-11-02T19:01:38Z,"I don't think this should be `None` and it can't be `False` as we don't know so kind of leaves us back at `True`?
"
86218968,133,cas--,2016-11-02T19:02:34Z,"Needs docstring
"
86218981,133,cas--,2016-11-02T19:02:41Z,"Needs docstring
"
86219179,133,cas--,2016-11-02T19:03:42Z,"All docstring sentences should end with a fullstop `.`. 
"
95211914,139,cas--,2017-01-09T18:13:22Z,Use of `\` line continuation is discouraged and it easily is below 100-120 char line length
95212126,139,cas--,2017-01-09T18:14:39Z,I have just pushed a fix for this so rebase will merge this out.
95214509,139,cas--,2017-01-09T18:24:58Z,Please use google docstring format as this is now the default for new docstrings.
790031355,342,doadin,2022-01-21T22:18:36Z,I'm guessing this excludes exes with console? However we need to exclude from more than just that also the web exes as well. And does console here refer to the console window or the deluge console? Cause if its window console and not deluge console we need to exclude deluge console as well.
790036696,342,doadin,2022-01-21T22:30:50Z,"Sorry if that was not clear what i mean is the deluge-web-script has console false so would fall under this check but it is not a gtk exe and therefore doesn't need the hook, is it a big deal probably not but the way it is now we can control that so lets not go backwards? :)"
790038842,342,CirnoT,2022-01-21T22:36:03Z,"Please check with code:

```py
...
EXE(
  ...
  console=d['console'],
  ...)
...
```

You are right however, this can't be used this way."
1215415329,427,cas--,2023-06-03T10:46:09Z,"We can improve on the naming here and simplify it.

The expected use-case is new core functionality usage by the client so that could either be the latest daemon version or less likely a previous version. So the parameter can be an optional `version` where we use `get_version()` as default.

From there the method naming could be improved to `is_daemon_compatible` unless you have other suggestions?"
1215416518,427,cas--,2023-06-03T10:47:35Z,"We shouldn't need these checks since VersionSplit will always return True or TypeError and calling above function does a connected check. Instead I would add a guard clause:

```py
if not (daemon_version and version):
    return False
```
"
1215429815,427,cas--,2023-06-03T10:59:30Z,"I feel this is ambiguous method name since it is not clearly defining whether this is daemon or client version. I think would be better as `daemon_version` and probably nice as a property. 

I know that using connection ties into `connection_info` but that also feels rather vague, especially since we get version using `daemon.info` RPC call...

"
1215432179,427,cas--,2023-06-03T11:00:32Z,"Can be a one line return:

```suggestion
        return self._daemon_proxy.daemon_info if self.connected() else ''
```"
1215433674,427,cas--,2023-06-03T11:01:22Z,The `str` type should be moved to function definition
1215852012,427,DjLegolas,2023-06-03T21:38:32Z,Removed
1215852130,427,DjLegolas,2023-06-03T21:38:50Z,changed
1215852461,427,DjLegolas,2023-06-03T21:39:36Z,"hmm, ok, changed"
81636385,109,cas--,2016-10-03T20:47:22Z,"You shouldn't use numeric comparison where `None` is a known possible value. This should be a simple boolean comparison of self.__num_pieces as `0` and `None` return `False`.

What is the UI outcome if neither `__draw_pieces_completed()` or `__draw_pieces()` methods are called?
"
81643792,109,elemongw,2016-10-03T21:26:55Z,"When neither is called an empty bar is drawn
"
81844328,109,cas--,2016-10-04T20:19:57Z,"Perhaps you misunderstood what I meant before but you only need `if not self.__pieces and self.__num_pieces`

However this entire codeblock can be refactored by swapping the two statements and methods around e.g.

```
if self.__pieces:
...
elif self.__num_pieces
...
```
"
82371009,109,elemongw,2016-10-07T11:19:03Z,"Yeah I thought you wanted me to write it explicitly, I am gonna fix it soon.
"
121280482,158,cas--,2017-06-11T12:41:27Z,I'd prefer it called `prev_saved_state` as a loose consistency ;)
121280733,158,cas--,2017-06-11T12:49:53Z,"Would prefer a `try..except` here. It is more likely to be an instance of TorrentState than not, and bit more pythonic."
121280742,158,cas--,2017-06-11T12:50:17Z,Same use `try..except` as above 
121282873,158,ratoaq2,2017-06-11T14:24:29Z,"I didn't fully get you here:

```
    def __eq__(self, other):
        try:
            return self.__dict__ == other.__dict__
        except:
            return False
```

In theory the following could still happen:

```
class A:
    def __init__(self):
        a = 'a'
    
class B:
    def __init__(self):
        a = 'a'

A().__dict__ == B().__dict__
True
```"
121285209,158,cas--,2017-06-11T16:03:44Z,"Fair point. I do prefer a positive isinstance statement and you could do it in one line:

```python    
def __eq__(self, other):
    return isinstance(other, TorrentState) and self.__dict__ == other.__dict__
```

"
63289717,92,cas--,2016-05-15T10:48:42Z,"Should we replace this with the `setup.py build_docs` command?
"
63398864,92,bendikro,2016-05-16T18:16:40Z,"I'd prefer it like this as it's much easier to see the exact commands that are executed as well as copy pasting for testing manually.
"
63404357,92,cas--,2016-05-16T18:49:17Z,"I guessed that might have been the reason but it means there is a potential disparity between `setup.py` and `tox`. How about verbose command to print out the command in `setup.py`?
"
63416358,92,bendikro,2016-05-16T20:09:19Z,"Sure, I guess that is possible, but I'm not sure how to access the build command executed by `sphinx.setup_command.BuildDoc`
"
63963837,92,cas--,2016-05-19T22:19:20Z,"I can't actually get that spinx-build command to work locally...

My other reason for asking is so that tox is testing the setup.py BuildDocs command. We can get the config from `BuildDoc.dump_options(self)` but it's not quite the same...
"
64062044,92,bendikro,2016-05-20T15:40:06Z,"Could add another tox target
"
64062921,92,cas--,2016-05-20T15:45:38Z,"That seems a waste...

How about print out those two lines and call `BuildDocs`?
"
64064077,92,bendikro,2016-05-20T15:53:13Z,"That works I guess
"
47488897,47,cas--,2015-12-14T11:54:10Z,"Is this old code? I see d being assigned again below.
"
47489046,47,bendikro,2015-12-14T11:56:27Z,"Yes indeed. Will remove.
"
47489510,47,cas--,2015-12-14T12:02:09Z,"result is unused
"
47489556,47,cas--,2015-12-14T12:02:50Z,"log line should be in method
"
47489613,47,cas--,2015-12-14T12:03:37Z,"convert to # comment 
"
47489830,47,bendikro,2015-12-14T12:06:38Z,"Indeed.
"
47539907,47,bendikro,2015-12-14T18:54:33Z,"Fixed
"
58851905,55,cas--,2016-04-07T10:43:12Z,"We probably discussed this before but what was the reason for removing this? 
"
58871071,55,bendikro,2016-04-07T13:33:47Z,"We haven't discussed this before. The reason for adding the self.wait_on_handler variable in the first place was reduce the startup load time by avoiding processing all the torrent added events generated while adding the torrents to the session.
When using async_add instead, it's all asynchronous, so there is no longer the same need to postpone handling the events.
"
58907329,55,cas--,2016-04-07T17:02:45Z,"Ah you are reverting a change you made a while ago, that might be what I was thinking of. Do you think we need to retain the `wait` argument for `handle_alerts()`?
"
58907837,55,bendikro,2016-04-07T17:06:30Z,"I guess the wait parameter can be removed as it's not used.
"
58928695,55,aresch,2016-04-07T19:15:54Z,"We probably don't need to catch InvalidTorrentError here anymore as the raise was removed.
"
58928904,55,aresch,2016-04-07T19:17:25Z,"Should we check if torrent_id is already in torrents_loading to prevent a possible race condition adding the same torrent multiple times very quickly?
"
58949278,55,bendikro,2016-04-07T21:35:21Z,"Indeed.
"
58953120,55,bendikro,2016-04-07T22:04:53Z,"Not likely an issue, but added a test for this.
"
779908441,334,cas--,2022-01-06T22:28:18Z,This change will break standalone mode
779932435,334,DjLegolas,2022-01-06T23:26:18Z,"a possible solution is:
```python
info_hash, metadata = result
if isinstance(info_hash, bytes):
    # in thinclient mode info_hash is bytes, we need it to be Unicode
    info_hash = info_hash.decode()
```"
1209265992,412,cas--,2023-05-29T12:23:07Z,"Please fix typo, should be `i2p`"
1209266832,412,cas--,2023-05-29T12:24:12Z,"Should be removed since should not be describing changes in comments, those are for commit messages"
1209267596,412,cas--,2023-05-29T12:25:12Z,"Can simplify this comment to just say 

```suggestion
                # Use I2P logo as country flag
```"
1209268753,412,cas--,2023-05-29T12:26:43Z,this comment should be removed as it's not relevant here and should be in commit message
1214031176,412,jiigen,2023-06-02T07:37:49Z,where???
1731666740,460,cas--,2024-08-26T18:47:51Z,"I don't really want every editor added to gitignore, it's better for a dev to add this to their global `gitignore` to avoid needing to specify for every project."
1731687989,460,cas--,2024-08-26T19:06:46Z,Hmm I wonder if `anchorify_urls` might be a bit more succinct
1731689332,460,cas--,2024-08-26T19:08:13Z,"Try to avoid describing the implementation detail, using regex, in docstring/comment. Also 'simple' is quite subjective so should be avoided."
1731690291,460,cas--,2024-08-26T19:09:09Z,With Python 3 type hints can be moved to function definition
1731740909,460,zakkarry,2024-08-26T19:48:51Z,"Sure, I understand."
1731750674,460,zakkarry,2024-08-26T19:58:30Z,"Sure, I'm just used to JSDocs in typescript and saw it used in other functions in common, so I just copy pasted it and did the small editing you see. 

Will move to type hints in the definition though."
1731755700,460,zakkarry,2024-08-26T20:03:20Z,sounds good to me
61684400,84,cas--,2016-05-01T09:36:07Z,"Since we are not supporting twisted < 12 the `try...except` can be removed
"
61694835,84,doadin,2016-05-01T23:06:10Z,"related side note might wana throw in an update to depends file at some point
"
64202034,101,cas--,2016-05-23T10:43:57Z,"`args` is still optional

Also need to document `sys_argv`
"
64202966,101,bendikro,2016-05-23T10:51:44Z,"Fixed
"
64296189,101,cas--,2016-05-23T21:54:17Z,"Should this be `Handle UI args...`, I don't think a third method with almost identical summary is a good idea :)
"
64296766,101,bendikro,2016-05-23T21:58:12Z,"Well, the idea is that arguments are the cmd line arguments, and the options is the result of the parsed arguments.
"
64301876,101,cas--,2016-05-23T22:40:14Z,"Sorry I meant `handle UI options`
"
64305758,101,bendikro,2016-05-23T23:17:30Z,"Oh, you mean the docs...Yeah of course
"
85659452,128,cas--,2016-10-30T13:06:08Z,"This will `ImportError` on Windows
"
85660365,128,bendikro,2016-10-30T13:59:16Z,"Ah, umm..thanks for testing that
"
85673269,128,aresch,2016-10-30T23:52:51Z,"Please use the print function from **future**: from **future** import print_function
"
85735961,128,bendikro,2016-10-31T13:20:36Z,"Sure
"
192566687,186,cas--,2018-06-02T18:26:33Z,rename address to adapter name
192566707,186,cas--,2018-06-02T18:27:17Z,Remove `The`
192566741,186,cas--,2018-06-02T18:28:47Z,Interface adapter name for outgoing BitTorrent connections. (Leave  empty for default).
192566746,186,cas--,2018-06-02T18:28:59Z,`Interface adapter name for outgoing BitTorrent connections. (Leave  empty for default).`
192566756,186,cas--,2018-06-02T18:29:21Z,`outgoing_interface`
195941786,189,cas--,2018-06-17T21:19:45Z,assign getting the component in the plugin __init__ to `self.rpcserver` and it can be reused in the entire class.
195942107,189,DjLegolas,2018-06-17T21:32:35Z,Done.
234170918,226,cas--,2018-11-16T11:16:30Z,Please provide details in this commit message as to what if being fixed by this change. From my perspective both provide pywin32 and I havn't seen any problems.
234358737,226,doadin,2018-11-16T21:51:48Z,"In further testing this appears to be a issue with modules getting installed with the setup.py script(at least during a ""python setup.py develop"") After this setup pywin32 is ""installed"" but doesn't work, when going through the uninstall process you can see theres a big difference in files. and since it is ""installed"" following up with a pip install -r requirements.txt just says its already installed. However if you uninstall pywin32 then install with pip -r... it installs properly.

This occurs with a up-to-date pip and setuptools."
813780436,380,cas--,2022-02-24T11:13:09Z,"We don't need the section number, it's optional and would open at 1 anyway"
1209310435,404,cas--,2023-05-29T13:20:01Z,"It would be good to have a check for meta version as required by the spec but it's not crucial to this PR...

> Implementations must check this field first and indicate that a torrent is of a newer version than they can handle before performing other validations which may result in more general messages about invalid files."
1209312544,404,cas--,2023-05-29T13:22:33Z,"Having the name FileTreeV2 and FileTree2 is quite confusing. Perhaps `FileTree_BTv2`?? There will also need to be a `FileTree2_BTv2`...

Could also add class docstring to help indicate difference

"
1209482130,404,cas--,2023-05-29T17:38:17Z,"This doesn't work for a rootless multifile torrent with a single file. https://dev.deluge-torrent.org/ticket/3602

From just parsing the 'file tree' key I don't think we can get the relevant info. This might be a better check

```suggestion
            def single_file_torrent(info_dict):
                if len(info_dict['file tree']) > 1:
                    return False
                
                filename = [key for key in info_dict['file tree']][0]
                return info_dict['name'] == filename

            if not single_file_torrent(info_dict):
                info_dict['file tree'] = {info_dict['name']: info_dict['file tree']}
```

I'm thinking that single_file_torrent should be a static method in FileTree v2 class"
1214563205,404,DjLegolas,2023-06-02T16:06:05Z,Added `FileTree2BTv2` and a detailed docstring for all 4 classes of `FileTree`
1214563996,404,DjLegolas,2023-06-02T16:07:00Z,Agree. So added it also.
804782646,372,gazpachoking,2022-02-11T15:55:14Z,"I think we could use `unittest.mock.Mock` to simplify these callbacks a bit, as well as eliminate the problem of having to wait longer than needed for them.
```python
def mock_callback(timeout=0.5):
    """"""Returns a `Mock` object which can be registered as a callback to test against.

    If callback was not called within `timeout` seconds, it will raise a TimeoutError.
    The returned Mock instance will have a `deferred` attribute which will complete when the callback has been called.
    """"""
    deferred = defer.Deferred()
    deferred.addTimeout(timeout, reactor)
    mock = unittest.mock.Mock(side_effect=lambda: deferred.callback(True))
    mock.deferred = deferred
    return mock

cb = mock_callback()
config.register_change_callback(cb)
config['foo'] = 1
await cb.deferred
cb.assert_called_once_with('foo', 1)
```

If we need to test registering callbacks like this in any other tests, maybe the mock_callback functions goes somewhere common to import."
805177721,372,DjLegolas,2022-02-12T16:22:44Z,I have created a fixture from this code and changed the tests
805178827,372,gazpachoking,2022-02-12T16:33:36Z,"I think just hardcode the timeout, don't think there is any way to actually pass this value to a fixture. "
805179586,372,gazpachoking,2022-02-12T16:41:11Z,"I might just spell out the whole `orig` here, not saving much space, and it seems more clear."
805180376,372,DjLegolas,2022-02-12T16:50:01Z,Done
805180380,372,DjLegolas,2022-02-12T16:50:06Z,Done
59984992,68,cas--,2016-04-17T14:02:45Z,"Remove translation hint and reword: ""Starting webui server at PID %s"" 
"
59993937,68,bendikro,2016-04-17T21:53:41Z,"Sure
"
223320066,155,cas--,2018-10-08T10:47:38Z,"Lets try and drop pywin32 module usage, so I'm thinking:

```python
from ctypes.wintypes import HWND, WPARAM, LPARAM, UINT, WINFUNCTYPE
from ctypes import windll, c_wchar_p
CallWindowProc = windll.user32.CallWindowProcW
SetWindowLong = windll.user32.SetWindowLongW

LRESULT = LPARAM
WNDPROC = WINFUNCTYPE(LRESULT, HWND, UINT, WPARAM, LPARAM)

WM_QUERYENDSESSION = 17
GWL_WNDPROC = -4
```

References:

- https://github.com/KellyZ/USB-Clipboard/blob/master/clipboard.py
- https://github.com/rene-aguirre/pywinusb/blob/master/pywinusb/hid/wnd_hook_mixin.py"
223320389,155,cas--,2018-10-08T10:48:44Z,"Need to fix `old_wndproc` scoping.

Additionally if dropping pywin32 need to wrap `on_wndproc` with above `WNDPROC` func."
223519904,155,DjLegolas,2018-10-08T22:59:58Z,In what way to fix `old_wndproc` scoping?
223610102,155,cas--,2018-10-09T08:48:49Z,"Needs to be a class variable when you have a callback so i'd call it `self.win32_prev_wndproc`

Also it is best to define a class variable in __init__ and assign it None."
341055288,256,cas--,2019-10-31T10:19:34Z,"This change should be a separate pull request that replaces all usage of Gtk.Alignment not just a single instance. However Alignment is only deprecated for Gtk >=3.14 and it is not a critical requirement to be updated just now.

I have also noticed that this has not removed the usage of Gtk.Alignment, the margins values don't match the original padding values and using the margin property as suggested below would be a better substitute for `set_padding`

> Gtk.Alignment has been deprecated in 3.14 and should not be used in newly-written code. The desired effect can be achieved by using the Gtk.Widget :halign, Gtk.Widget :valign and Gtk.Widget :margin properties on the child widget.
"
341073125,256,cas--,2019-10-31T10:57:20Z,This is orphaned code and does not need fixing. I shall push a commit to remove `self.colour_*ground` lines
341073852,256,cas--,2019-10-31T10:58:57Z,Why has the size changed from 7 to 14?
341078926,256,cas--,2019-10-31T11:11:47Z,"Please don't use a bare a Exception, did you encounter any errors that require the try..except? From the docs it would raise a Glib.Error. Also no need for `pass` and print statement should be log.error"
341103256,256,doadin,2019-10-31T12:14:34Z,Its been so long now I don't remeber.
771956500,288,cas--,2021-12-19T14:21:08Z,"This doesn't actually work since it's not exported for pytest. To use `env` job keyword to set env var in an action: https://docs.github.com/en/actions/learn-github-actions/environment-variables

Thinking further maybe instead remove the `or security` from pytest step and add a step before `install dependencies` that sets the env vars, something like this:

```
      - name: Sets env var for security
        if: contains(github.event.head_commit.message, 'security_test')
        run: echo ""SECURITY_TESTS=True"" >> $GITHUB_ENV

      - name: Install dependencies
      ...

      - name: Install security dependencies
        if contains(env.SECURITY_TESTS, 'True')
        run: |
          wget -O- $TESTSSL_URL | tar xz
          mv -t deluge/tests/data testssl.sh-$TESTSSL_VER/testssl.sh testssl.sh-$TESTSSL_VER/etc/;
        env:
          TESTSSL_VER=3.0.1
          TESTSSL_URL=https://codeload.github.com/drwetter/testssl.sh/tar.gz/refs/tags/$TESTSSL_VER
```

If you use the latest version 3.0.6 then the TESTSSL_URL needs to a `v` prefixed e.g. `.../tags/v$TESTSSL_VER`"
772005962,288,cas--,2021-12-19T21:55:38Z,The `v` prefix is the issue here. It cannot be substituted into the run mv cmds
772103579,288,DjLegolas,2021-12-20T06:20:54Z,sounds good. changed to this implementation.
84392786,122,cas--,2016-10-20T22:59:13Z,"Should this not be testing for `__pieces` before `__num_pieces` since all torrent have `__num_pieces`? 

Also you could reuse the for loop e.g.

```
if __pieces:
    pieces = __pieces
elif __num_pieces:
    pieces = [3] * __num_pieces

for state in pieces:
...
```
"
84393893,122,cas--,2016-10-20T23:08:03Z,"Really should avoid using global.. In this situation a good alternative would be to enumerate for loop and pass as an arg to fill function. 

However if you implement the suggestion in my other comment below you can remove this function and put the code back into the for loop.
"
84555225,122,cas--,2016-10-21T22:30:19Z,"This doesn't look right... in my example it was: `[3] * self.__num_pieces`
"
192626697,187,gazpachoking,2018-06-04T04:52:26Z,"I'd probably avoid the duplicate windows_check, and just do:
```python
if deluge.common.is_ip(listen_interface) or not windows_check():
```"
192627369,187,gazpachoking,2018-06-04T05:00:50Z,"Perhaps it's clearer to say:
`Invalid listen interface. (Must be IP Address or, on Linux, adapter name.)`? (That question mark is because I don't actually know if it's clearer.)

Alternatively, just add a comma, (and fix capitalization,) into your current message. i.e. `must be adapter name or IP address on Linux, or IP address on Windows`

"
202509843,203,cas--,2018-07-14T08:25:44Z,"The script is not available to an installed deluge-web. Also, we should not be creating new files within an application directory. 

I thought I had outlined my thought process for this in the ticket but seems not... Anyway, what I wanted to fix was that there should not be a requirement for the gettext.js file in the code. I.e. disable translation or prevent errors if file not available.
"
202528060,203,DjLegolas,2018-07-15T00:03:40Z,"OK, now changed to mocking function `_`."
202537956,203,cas--,2018-07-15T10:26:23Z,"`os.path.join` can take any number of args and join them so only one needed. Also `isfile` is preferred to `exists` as we are definitely looking for a file. 

Also there is the `rpath` function to simplify generating absolute script paths. So you can remove this code and just use:

```python
if os.path.isfile(rpath('js', 'gettext.js'):
   self.putChild ...
```"
202538061,203,cas--,2018-07-15T10:30:24Z,"The first line of a docstring should not continue onto next line and should end with a full-stop. 

This is the style we should be using: http://www.sphinx-doc.org/en/stable/ext/example_google.html"
419350249,289,cas--,2020-05-04T10:44:33Z,This is comparing strings so the version comparison will not work as you expect it to. Look for other examples of version comparisons in the code.
419720704,289,DjLegolas,2020-05-04T20:52:11Z,Fixed :)

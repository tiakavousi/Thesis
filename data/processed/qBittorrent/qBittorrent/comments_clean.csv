id,pr_number,user,created_at,body
974844960,15769,Mazino-Urek,2021-11-21T16:03:42Z,opened in favor of #15758 rebase disaster.
974859638,15769,xavier2k6,2021-11-21T17:26:04Z,quick glance.......... pr title & commit title are wrong no `reannounce.svg` included in `icons.qrc` file & **spacing is wrong** here: [a link] here: [a link] here: [a link] how come this passed the file health check? ____ you need to omit `.svg` [a link] icon images for `user-group-delete.svg` & `user-group-new.svg` are reversed. image for `view-calendar-journal.svg` doesn't look good in gui. same for `force-recheck.svg` imo would suggest these: ![a link] ![a link]
974862245,15769,Mazino-Urek,2021-11-21T17:42:31Z,for forced recheck: ![a link] for view-calendar-journal: ![a link]
974900150,15769,xavier2k6,2021-11-21T21:36:57Z,"i think those two icons are ok after seeing them in the gui, still not sold on the matchstick/wand looking thing for `torrent-creator` but that's only just my opinion."
975106966,15769,Mazino-Urek,2021-11-22T04:44:52Z,i will look for some alternatives.
975356935,15769,xavier2k6,2021-11-22T10:06:31Z,"i wouldn't spend too much time on it at this stage & would suggest we move on for now as more important work to be done than holding up this pr any longer for the sake of 1 icon. (we can come back to it if needs be) **for example:** todo: - [ ] adhere to advice in [a link] / [a link] - [ ] make icons consistent where applicable across for e.g. `mainwindow/context/filter/tabs` views. ![a link] ![a link] ![a link] ![a link] [code block]` would prefer if these displayed `minus` symbol ![a link]. this would make them consistent with context menu. ![a link] change: `list-remove` -> `edit-clear` **1x** `/src/gui/properties/propertieswidget.cpp` **1x** `/src/gui/properties/trackerlistwidget.cpp` **2x** `/src/gui/tagfilterwidget.cpp` **2x** `/src/gui/categoryfilterwidget.cpp` there may be other places that could be changed, but certain features i don't use/haven't looked into. ____ - [ ] ensure below icon colors are distinguishable from each other & match their respective `transfer list - rgb` text colors. (visible in light & dark theme - if possible) - [ ] `downloading` - [ ] `seeding` - [ ] `completed` - [ ] `paused` - [ ] `stalled uploading` - [ ] `stalled downloading` - [ ] `checking` - [ ] `errored` - [ ] `queued` ____ - [ ] make necessary changes to `webui` - [ ] add screenshots of icons being used & various in-app gui interfaces"
975531786,15769,Mazino-Urek,2021-11-22T13:38:28Z,"i think `text-plain` can be changed from this: ![a link] to this: ![a link] seems simpler. in general, trash looks not very visible to me. i have two proposal: ![a link] ![a link] ![a link] another issue caught my eyes. as icon names were based on gnome icon naming spec, i suspect some icon doesn't have real action based names. this issue needs to be addressed. some examples: ![a link] ![a link] ![a link] ![a link] ![a link]"
975552829,15769,Mazino-Urek,2021-11-22T13:58:07Z,"besides, i am targeting this changes for qbt version 5.0, as most user has no idea what goes under the hood. it will be a nice change for them."
975620272,15769,ArcticGems,2021-11-22T15:05:58Z,i like this one :thumbs_up:
975628553,15769,Mazino-Urek,2021-11-22T15:14:08Z,"i think this works best: ![a link] ![a link] ![a link] ![a link] ![a link] 1st and 4th works for me. between them, 1st for me."
975678440,15769,xavier2k6,2021-11-22T16:07:02Z,"i don't see any issue with changing it, seems to be only used in one place in code from what i can see. i will leave this to you. the `bin` icon, i'd have concerns about how the swirling arrows would look in the gui......may appear a bit scrunched but will see."
975744776,15769,Mazino-Urek,2021-11-22T17:14:57Z,i am deleting `text-plain` and replacing with `view-calendar-journal` then. i will need some screenshots. my linux distro can't run the artifact program file for this #12229. test it out.
975796719,15769,Mazino-Urek,2021-11-22T18:19:17Z,"please confirm. **after some deep search, following icons are not used anywhere.** - [x] `dialog-cancel` - [x] `dialog-information` - [x] `document-encrypt` - [x] `document-import` - [x] `document-save` - [x] `edit-clear-history` - [x] `edit-cut` - [x] `edit-paste` - [x] `expand` (possibly) - [x] `rss-config` - [x] `services` (possibly) - [x] `tab-close` - [x] `tools-report-bug` **miscellaneous observation:** - [x] `checking` can be replaced with `task-ongoing` - [x] `completed` can be replaced with `checked` (same icon) - [x] `document-properties` should be replaced with `checked` or a new icon i have in mind - [x] `help-about` might need change - [x] `mail-folder-inbox`, kindly look into it, might not be needed or should be changed. - [x] `mail-mark-read`, kindly look into it, might need change. - [x] `queued` deep search needed. - [x] `unavailable` and `task-reject` same icon. one can be removed. - [x] replace `edit-delete` by `list-remove` - [x] replace `document-edit` by `edit-rename` - [x] replace `mail-mark-read` by `task-complete` - [x] replace `task-attention` by `dialog-warning`"
975798063,15769,Mazino-Urek,2021-11-22T18:20:49Z,i am so sad right now. it broke my back designing those icons and yet so much of them are not really used. what a mess.
975816218,15769,xavier2k6,2021-11-22T18:44:31Z,-imran you may be right that some icons may not be used as over time features have been changed etc. & the icons may have remained but also some of those icons could be used by webui etc. edit: i haven't researched them fully.
976181980,15769,Mazino-Urek,2021-11-23T05:41:28Z,"i did some thinking. these icons were designed for this project and strict coherence was maintained. here is my proposal: 1. ununsed icons are to be kept. i might add some following gnome guidelines. each icon are less than 1 kilobytes, some are even half a kilobytes after optimization. these icons can be used in future if new features are added. 2. in case of repeated icons, only one is to be kept and other should be deleted."
976395918,15769,xavier2k6,2021-11-23T10:52:22Z,"i wouldn't be in favor of adding unnecessary bloat currently, if a new future feature was added & it required a new icon - we could give you a . in general i would agree with this......"
976399351,15769,Mazino-Urek,2021-11-23T10:56:00Z,"another idea. i will maintain a personal repository that will have the icons i have created. links will be given in read me. in that way, the icons won't be lost and can be used in future."
976617932,15769,Mazino-Urek,2021-11-23T14:28:49Z,i have created a [a link] for the archive purpose. removing unused icons. p.s build fine. trying renaming now.
976900676,15769,Mazino-Urek,2021-11-23T17:33:04Z,tracked a problem. `list-add` is a hard requirement. it must stay as this: ![a link] we can't change it to this everywhere: ![a link] it should be a new icon. kindly help me with the code. i propose `document-new` change into this and this can be used where ever needed. it is serving the same purpose now. another trash candidate: ![a link]
977072934,15769,Mazino-Urek,2021-11-23T19:38:00Z,"i have made some very big changes. kindly, test if everything works or not and provide me screenshots."
978207335,15769,xavier2k6,2021-11-24T20:43:55Z,oh boy! (quantum leap reference) nope! - missing icons. (quick check & glaringly obvious) do you not have any system available at all to test these builds/changes?? here ya go: ![a link]
978213929,15769,Mazino-Urek,2021-11-24T20:56:31Z,"sincerely, the sheer amount of change i have done yesterday, one icon mess up is nothing. [a link] (only three issues left) no, i exclusively use linux. ubuntu builds just doesn't work for me. i tried a lot. i think this trash icon works. ![a link] help me with this one [a link] and rss feed icon. then, we can proceed with your checklist."
979227570,15769,Mazino-Urek,2021-11-25T13:45:01Z,"ok, this is the first time i have been able to compile the package myself. imo, the whole icon set is finger licking good. ![a link] this icon needs to be changed. i propose this new icon. ![a link] it needs some new icon. ![a link]"
979277034,15769,Mazino-Urek,2021-11-25T14:51:45Z,fixed! ![a link]
979358949,15769,ArcticGems,2021-11-25T16:55:50Z,or maybe something similar to this?? = ![a link]
979367474,15769,Mazino-Urek,2021-11-25T17:11:55Z,that is complex and most complex icons takes tremendous work and doesn't look well when very small and gets rejected most of the time. ![a link] i have used this. try a current build. i have been working on this more than 6 hours straight. loads of improvement done. from my end it is in the final phase.
979397694,15769,ArcticGems,2021-11-25T18:01:14Z,maybe it only looks good on my theme :confused_face: = ![a link] try later :thumbs_up:
979402399,15769,Mazino-Urek,2021-11-25T18:04:57Z,zoom out. that is the trick. most user won't zoom in to see the icon. just open the app and see if the icon still looks good or shows what it meant to show. that is the trick. i have changed and modified dozens of icon because of that for the last couple of days.
979424554,15769,Mazino-Urek,2021-11-25T18:56:27Z,i think refactoring from my part is done. all excess icons have been removed. all duplicate icon has one remaining now. my best work till now. we can start with your checklist now.
979814626,15769,xavier2k6,2021-11-26T09:21:32Z,"-imran there are still icons missing from the gui, you've also deleted an icon that is being used in the transferlist."
979833924,15769,Mazino-Urek,2021-11-26T09:50:33Z,can you kindly find those icons out? i have already chewed way more than i can.
979878112,15769,Mazino-Urek,2021-11-26T10:53:21Z,this might work. it is simple and means direction change. ![a link]
979920693,15769,ArcticGems,2021-11-26T11:49:16Z,"almost good, something is ""weird"" with the bent part of the arrow as a 16x16 icon, but i can't explain why. :confused_face: maybe it's just me."
979977930,15769,Mazino-Urek,2021-11-26T13:27:04Z,how about this one? ![a link]
980644917,15769,xavier2k6,2021-11-27T15:39:49Z,i already showed them in screenshot i posted previously in [a link] just to speed things up for you: look at `checking/completed` in filter list in the screenshot or even open the app. if you enable queueing in the settings - you will se the associated icon is missing from transferlist (you deleted it)
980692951,15769,Mazino-Urek,2021-11-27T16:42:37Z,thanks for the pointers. probably fixed all of them. check it out. i think i have found a nice compromise. ![a link]
980696256,15769,Mazino-Urek,2021-11-27T16:46:12Z,"keeping the link here for reference, and some renaming might be due. [a link]"
980779773,15769,ArcticGems,2021-11-27T18:15:54Z,the arrow + dot didn't show well as 16x16 icon. :disappointed_face: maybe make them bigger?? how about something similar to these (ignore colors) = ![a link] ![a link] ![a link]
980780671,15769,Mazino-Urek,2021-11-27T18:22:43Z,will this work? ![a link]
980790021,15769,ArcticGems,2021-11-27T19:35:01Z,it works! :thumbs_up:
980791285,15769,Mazino-Urek,2021-11-27T19:45:22Z,done.
981088076,15769,xavier2k6,2021-11-28T13:44:06Z,"-imran just for clarification, have you used release versions for `ionicons` / `la-capitaine-icon-theme` icon packs & what version has been used? i haven't tested any recent build yet as there's been a few changes again."
981103010,15769,Mazino-Urek,2021-11-28T15:19:06Z,"for `ionicons` version [a link] licensed under mit and for `la-capitaine-icon-theme` [a link] under gpl v3. i have used some whole icon from them, sometimes multiple icons were used to create one icon, some are original. i have made some changes, as loads of unused icons were deleted and some single used icons were redesigned to have multiple use. from my end, work is done. now, only your issues remain unsolved. after that, it will be merge ready. i am targeting this change for version 5 though."
981151639,15769,xavier2k6,2021-11-28T21:03:09Z,"for anyone interested, these are the icons being proposed as of now: ![a link] ____ these are some of the icons as shown in the main gui: ![a link] ![a link]"
981151887,15769,xavier2k6,2021-11-28T21:04:41Z,-imran there are some issues in relation to the checking icon not appearing in the transfer list - i haven't looked through your code changes to find out where the issue lies. i also think some of the icons need to be changed in places/can be used still in more than one place.....will follow-up - don't go changing them yet.
981152545,15769,Mazino-Urek,2021-11-28T21:09:29Z,"even if i wanted to, i most likely won't be able to. i am at my wits end."
981259971,15769,ArcticGems,2021-11-29T03:27:28Z,"i think all the icons looks great now! :thumbs_up: when it comes to the coding issues, can't you help nowshed-imran with it?? ="
981269451,15769,Chocobo1,2021-11-29T03:54:49Z,"just some comment and questions, doesn't meant to be a blocker. it looks fine mostly. i noticed that the stalled icons are using a darker color, will that be suitable on a dark theme? or compatibility with dark themes isn't a goal anymore? i would prefer icons be monochrome, having 2 or more colors in a icon seems a bit unstable. and it is unusual for me to see red (a strong) color appearing in the bottom 3 icons. afaik strong colors are usually reserved for special uses, like something that requires user attention. also why don't rss use the usual orange color? i mean the tone can be tweaked if the usual orange doesn't fit in with the rest."
981279373,15769,Mazino-Urek,2021-11-29T04:19:14Z,"i have though about it. how about exchanging black with red/orange? in that way those icons can be visible in dark. compatibility with dark theme initiated this project in the first place. it is a priority. in that case, i can turn them all into blue. which is a very neutral color imo. i am not getting it. i have used only one orange color in all the icon. there shouldn't be two variant."
981281098,15769,ArcticGems,2021-11-29T04:23:31Z,i actually like the multiple colors. maybe we should get more peoples opinion about monochrome vs 'multiple colors'.
981287105,15769,Chocobo1,2021-11-29T04:40:52Z,"i'm fine with either. i quite like the way you used gray/black icons for the stalled icons, imo it looks good with a light theme and too bad it can't stay due to compatibility reasons."
981339818,15769,Mazino-Urek,2021-11-29T06:58:31Z,"for reference, adobe contrast analyzer tool can be used to find color that might work in both dark and white theme. if you got some spare time, can you find me a color. i am looking for darkish color for the `stale` icons. [a link]"
981398662,15769,xavier2k6,2021-11-29T08:33:44Z,"isn't that what i've been doing in, i don't know how many iterations now of this pr, i've already pointed out previously in different pr & an open issue of where the transfer list text colors need to be changed to match icon color & showed where certain icons for different menus/tabs reside. i've put an awful lot of my time in to this in an effort to help get it over the line since the 1st attempt a year ago. unfortunately, there have been a few setbacks/changes that now calls for work/effort to be again refocused. thalieht had posted screenshots in one of the other pr's where we matched all but 2 icons that were visible in both dark/light, however this progress was lost when the rebasing went wrong for nowshed. (imo - i think it's achievable to match icon/text colors for both light/dark theme with exception of course as thalieht suggested previously the light/dark monochrome icons) and it is unusual for me to see red (a strong) color appearing in the bottom 3 icons. afaik strong colors are usually reserved for special uses, like something that requires user attention. i tend to agree & the rubbish icon seems to pop/draw attention to itself with 2 separate colors. :thumbs_up: - imo -the icon for `general` in the bottom menu bar should be the same as the `show logs` icon - also, i noticed in a previous iteration that the `stop watch` icon not be used - i think that still holds through. - the `checking` icon in the filter list should be changed back to showing a `cog` icon"
981409344,15769,xavier2k6,2021-11-29T08:49:39Z,"are you willing to see this through to the end? if you're not, then i don't think there's any need for me or anyone else to spend anymore time here. ____ i know you mentioned in the past that you give permission for anyone to use these icons in the future. i don't know if any other team member wants to take over this pr, do they?"
981414364,15769,Mazino-Urek,2021-11-29T08:56:21Z,"no one doubts that, my friend. without you, i would have just made cosmetic changes and core problems would have remained unsolved. you should be equally credited for this pr, if merged. i will provide both screenshot side by side later. let me get back to home, i will make necessary change. i meant from coding side. icons i will manage. but, i will need help with codes like you have been doing. no one needs to take on this task yet, and yes i have made a personal icon repository that can be used if necessary for this project in the future."
981743281,15769,Mazino-Urek,2021-11-29T15:28:20Z,change side by side: ![a link] ![a link]
981759488,15769,ArcticGems,2021-11-29T15:45:46Z,:thumbs_up: monochrome is fine if it's in 'options window' only.
981760120,15769,Mazino-Urek,2021-11-29T15:46:25Z,"all requested changes have been made. `task-ongoing` and `document-properties` can be removed now, they have been supplemented by other icons. please confirm."
981764871,15769,Mazino-Urek,2021-11-29T15:51:49Z,"other than rss, all are blue option windows only, and it looks fine."
981843442,15769,xavier2k6,2021-11-29T17:17:16Z,"`task-ongoing` and `document-properties` can be removed now, they have been supplemented by other icons. please confirm. one issue remains with checking icon not showing up in transfer list when run - ~i will investigate~ found it, when time permits i will walk you through it. ___ suggested change: icon for `on downloads done` under tools should be same as ![a link]"
981880568,15769,xavier2k6,2021-11-29T18:03:18Z,"change x3 instances of `getcheckingicon` to `getconfigureicon` change `checking` to `confiure`: `static qicon cached = uithememanager::instance()->geticon(qlatin1string(""checking""));` reference: `/src/gui/transferlistmodel.cpp`"
981905207,15769,Mazino-Urek,2021-11-29T18:34:34Z,done and thanks a lot!
981921297,15769,xavier2k6,2021-11-29T18:56:47Z,"`static qicon cached = uithememanager::instance()->geticon(qlatin1string(""checking""));` `/src/gui/transferlistmodel.cpp` :rolling_on_the_floor_laughing: you actually changed it to my typo! my apologies..... change `confiure` to `configure`: `static qicon cached = uithememanager::instance()->geticon(qlatin1string(""confiure""));` reference: `/src/gui/transferlistmodel.cpp`"
981926569,15769,Mazino-Urek,2021-11-29T19:03:42Z,:man_facepalming:
981946956,15769,xavier2k6,2021-11-29T19:29:01Z,this is now resolved.
982044385,15769,xavier2k6,2021-11-29T21:34:51Z,-imran can you adjust the color associated with these icons from the filter/transfer list: `completed` `#4285f4` change to `#009900` `queued` `#f25022` change to `#339966`
982101307,15769,xavier2k6,2021-11-29T23:03:45Z,"just spotted another missing icon in the transfer list in further testing. (will have to check where the issue lies...no doubt it's due to a renamed icon or different icon in it's place) edit: please rename `checked.svg` to `completed.svg` ____ you will also have to change back below & add a `checking.svg` (you can still use the configure image ie `cog`) & modify `icons.qrc` file accordingly. (this will allow us to change it's color to match text in transfer list) x3 instances of `getconfigureicon` back to `getcheckingicon` `configure` back to `checking`: `static qicon cached = uithememanager::instance()->geticon(qlatin1string(""configure""));` reference: `/src/gui/transferlistmodel.cpp`"
982238864,15769,ArcticGems,2021-11-30T03:04:52Z,"if you want 'completed' to be 'green', then download needs to be changed since it's green. personally, i like green for working download and blue icon/text + 100% blue progress bar for completed torrents."
982433476,15769,xavier2k6,2021-11-30T09:13:05Z,"completed/checking/seeding are all the same color ""blue"" this is an effort to differentiate between the icons & their respective text colors in transfer list, i haven't requested the checking icon color to be changed yet. besides, it's a different shade of green to ""download"""
982548430,15769,xavier2k6,2021-11-30T11:29:14Z,"in an ideal world, for consistency i'd actually would like the progress bar color to also match with the respective icon/text color. i'd also like the `queued` status to be shown in `filter list` but that is a conversation etc. for another time. the changes we are attempting now are a real overhaul of the default qbittorrent theme & hopefully will be a better visual experience for users."
982716546,15769,Mazino-Urek,2021-11-30T14:59:35Z,update?
982785881,15769,xavier2k6,2021-11-30T16:11:33Z,you may have overlooked my previous instructions in [a link]
982795948,15769,Mazino-Urek,2021-11-30T16:22:23Z,i misunderstood it first. why don't we use this icon for loading? ![a link]
982830394,15769,xavier2k6,2021-11-30T16:59:10Z,the original loading icon is a `.png` file.........further discussion is needed on that & the other 4 remaining at another stage.... i must get onto the original creator of the qbittorrent `mascot` to give us an updated icon in `.svg` format. `sphere.png` seems to be used in `rss` & `sphere2.png` only seems to reside in the `icons.qrc` file but this was only a quick look.
982836122,15769,xavier2k6,2021-11-30T17:05:13Z,btw........(for those looking on/interested in pr) i know the text in transfer list doesn't match the icons correctly (we haven't matched them yet!)
982863918,15769,Mazino-Urek,2021-11-30T17:36:24Z,i think all the changes you have request is done. i would like to change the color of `checking` so that it is exactly not like `configure`.
983295658,15769,Mazino-Urek,2021-12-01T05:11:30Z,any idea how we can solve the stall icon problem? the goal is to make stalled icon visible both light and dark theme.
983332344,15769,ArcticGems,2021-12-01T06:32:56Z,-imran tricky... either you choose a color that might be to close to others or give the icon a 'light' border or maybe something similar to this (quick edit)?? = ![a link]
983335769,15769,Mazino-Urek,2021-12-01T06:40:45Z,i think has provided a probable solution. i think this works. what do you say?
983420435,15769,xavier2k6,2021-12-01T08:50:43Z,i'd be against any two-tone icon colors especially for the transfer list.......which color should we choose to match with text? can you post a screenshot of what the icons look like in transfer list under dark theme.......... as i've said previously....there only seemed to be an issue with two icon colors in dark theme according to thalieht.....this was downloading......which happened to be a different green (i was experimenting with colors) to what we have now & the completed icon.
983439340,15769,Mazino-Urek,2021-12-01T09:13:23Z,fair point. i will try that later in the day.
983447971,15769,ArcticGems,2021-12-01T09:23:32Z,"the stalled icons are tricky. if you use stalleddl from [a link] you could use grey text and green underline (which need added code :disappointed_face:). another idea is to add two sets of stalled icons, darker version for light theme and a lighter version for dark theme, but that goes against the concept of this pr of course :disappointed_face: as i said, tricky... we need more ideas :confused_face:"
983467630,15769,xavier2k6,2021-12-01T09:47:53Z,another option if the stalled download icon is too dark is give the same color as stalled upload & we can give that icon then a lighter shaded grey. before anything is done to the icons though.......really need to see screenshots of them being shown in the transfer list.
983475781,15769,xavier2k6,2021-12-01T09:58:48Z,"quick reference search & below is a screenshot from one of the other iterations of this pr showing the stalled download icon in the transfer list. (it's not showing stalled upload - but both can be seen in filter list for reference) ![a link] ____ this comment of mine still holds, as it's no harm to have an updated image (text color will obviously not match as we haven't progressed to that yet.)"
983671716,15769,Mazino-Urek,2021-12-01T14:04:10Z,"i have an alternative proposal. changing stalling from download black icon to an icon that represent as stop. here is a mock-up. it means stop, and we don't need it to be black. thoughts? ![a link]"
983681010,15769,xavier2k6,2021-12-01T14:12:17Z,"the stalled download & stalled upload aren't black, they are both different shades of grey. the icons are fine as is, we just need to focus on colors & how they look currently in a black theme."
983693699,15769,Mazino-Urek,2021-12-01T14:26:11Z,"consider this color, `#757fa1` ![a link] this color passes both white and black background in adobe contrast analyzer: `#757575` ![a link] ![a link]"
983702746,15769,xavier2k6,2021-12-01T14:35:59Z,this may actually be useable for `checking` that should be ok.
983781824,15769,thalieht,2021-12-01T15:57:33Z,current: ![a link]
983812382,15769,xavier2k6,2021-12-01T16:28:21Z,"as-is, the stalled downloading/uploading icon colors look fine. imo i'd actually make the error icon a different shade of red.... any other feedback?"
983820281,15769,Mazino-Urek,2021-12-01T16:37:24Z,"after color improvement, i think the visibility is enough now. ![a link]"
983838022,15769,xavier2k6,2021-12-01T16:58:03Z,see screenshot in [a link] & my follow-up [a link] ____ ![a link] as i've said numerous times we need to differentiate between icon colors......you've made stalled download/upload the same.......
983863740,15769,ArcticGems,2021-12-01T17:25:27Z,in the right-click menu in screenshot [a link] the icon for 'queue' is missing.
983868190,15769,xavier2k6,2021-12-01T17:31:01Z,is it in qbittorrent 4.3.9? nope! so that's not due to this pr.
983876346,15769,ArcticGems,2021-12-01T17:41:31Z,"edit: ah, you mean because it's not in qbittorrent 4.3.9, it shouldn't be included in this pr. ok"
983990258,15769,xavier2k6,2021-12-01T19:35:58Z,no no......i meant that it wasn't broken because of changes in this pr - it was never there originally even with official version. i don't see why it can't be added now as we already added an icon for `check for updates` under help & i consider this pr an overhaul as i've said previously.
985666403,15769,Mazino-Urek,2021-12-03T16:42:08Z,what to do next?
985937993,15769,ArcticGems,2021-12-04T01:15:27Z,"i guess we start to add icons that aren't in qbit 4.3.9, right ??"
988771284,15769,xavier2k6,2021-12-08T12:31:09Z,do below: this may actually be useable for `checking` i'd wait a while....... n.b.: it's a bit difficult at times to see what has/hasn't been changed due to only one commit being used all the time to make numerous changes/deletions etc. keep your repo up-to-date periodically with `master` so that there's no more set-backs & have to re-do work that we've already covered like what happened previously on rebase gone wrong. with xmas almost upon us.....we may need to put any further work on-hold......
989017772,15769,Mazino-Urek,2021-12-08T17:25:18Z,successfully rebased. ![a link] this one? i am available. feel free to knock anytime.
989045837,15769,xavier2k6,2021-12-08T18:01:59Z,:thumbs_up:
989051749,15769,Mazino-Urek,2021-12-08T18:09:32Z,done.
989215717,15769,xavier2k6,2021-12-08T21:36:20Z,"change `configure` to `checking` `checking->setdata(qt::decorationrole, uithememanager::instance()->geticon(qlatin1string(""configure"")));` reference: `/src/gui/transferlistfilterswidget.cpp`"
989758443,15769,Mazino-Urek,2021-12-09T11:17:07Z,done.
991655637,15769,xavier2k6,2021-12-11T14:05:54Z,"to add `queued` icon to transfer widget `/src/gui/transferlistwidget.cpp` change this `qmenu *queuemenu = listmenu->addmenu(tr(""queue""));` to look like this: [code block]` ____ btw: i think the paused icons can be toned down from ( `#f25022` `outrageous orange`) alternatives: `#ffb85c` `texas rose` `#ffa633` `lightning yellow` `#ff9000` `dark orange` `#ffb85c` `texas rose` `#cc7300` `mango tango` i'd also change the `queued` icon to one of these alternatives too but not make it the same as paused. (i haven't tested any of these colors in-app myself) edit: `sphere2.png` could be potentially removed - i don't see anywhere in the code where it's used."
991669235,15769,Mazino-Urek,2021-12-11T14:47:11Z,"current: ![a link] proposed: 1. texas rose ![a link] 2. lightning yellow ![a link] 3. dark orange ![a link] 4. mango tango ![a link] i wanted to use a color that pops. other than `dark orange`, all colors are muted. i wanted to use one orange color for coherence. let's change all orange rather than one or two, if we must."
991679334,15769,xavier2k6,2021-12-11T15:18:24Z,that's the thing....for me it just seems to pop too much hence why i suggested to tone it down. `dark orange` still pops (imo) the reason i want the `queued` icon to be a similar shade of orange is to indicate that it isn't downloading/uploading (inactive)......similar to how we made the stalled icons similar in color but yet differentiable (transfer list) how about? `dark orange` for `paused` `outrageous orange` for `queued`
991685069,15769,Mazino-Urek,2021-12-11T15:34:38Z,"on a second thought, there can be two orange, one light and the other green. but, the use case needs to be conservative. the ui must not suffer from too many colors. done."
991688799,15769,xavier2k6,2021-12-11T15:45:02Z,the `transfer list` imo is where we need 9 distinguishable icons & text colors.
991689125,15769,ArcticGems,2021-12-11T15:46:07Z,"for `paused` i like `#e38000` better, but `#ff9000` `dark orange` is good too. :thumbs_up:"
991689286,15769,Mazino-Urek,2021-12-11T15:46:36Z,i think it works. ![a link]
991691938,15769,Mazino-Urek,2021-12-11T15:54:47Z,why does this four place have no icon? ![a link] we can easily add icons there. all icons are available. we just need the code. 1. for speed in title bar: `office-chart-line.svg` 2. for search engine: `edit-find.svg` 3. for rss reader: `application-rss+xml.svg` 4. for log: `view-calendar-journal.svg` edit: why left the upper two then? all icons gap will be filled. 1. for top toolbar: `preferences-other.svg` 2. for status bar: this might need a new icon. what do you think?
991707653,15769,xavier2k6,2021-12-11T16:45:26Z,"possibly yes... is that `#e38000`? why left the upper two then? ok, i'll explain.........(3 of 4) `speed in title bar`/`search engine` & ` rss reader` are checkboxes just like `top toolbar`/`status bar` (upper two) hence why these two boxes have `ticks` showing that they've been selected/active. `log` (4 of 4) however doesn't have a checkbox or icon associated with it & could potentially get an icon for consistency."
991711625,15769,ArcticGems,2021-12-11T16:58:26Z,"no. nowshed-imran posted almost immediately after me, so he had not seen my comment. it's `#ff9000` in his screenshot"
991712437,15769,xavier2k6,2021-12-11T17:01:13Z,____ -imran please fix spacing......see that the capital `u` from `uithememanager` is directly under the lower case `u` of `qmenu`
991715941,15769,Mazino-Urek,2021-12-11T17:11:58Z,"`#e38000` ![a link] `#ff9000` ![a link] i think dark orange works better. code spacing fixed. if there were checkboxes instead of icons it might have worked. it has open space for icons that can look good with icons. for example, [a link] has lots of dialogs with and without icons. ![a link] ![a link] what do you think? can we add icons here or not? ![a link]"
991717747,15769,xavier2k6,2021-12-11T17:17:20Z,maybe for linux or whatever but not on windows......checkboxes line up with icons. ![a link]
991718948,15769,Mazino-Urek,2021-12-11T17:21:08Z,"ok, didn't know that. in that case, nothing can be done other than `log`."
991720215,15769,ArcticGems,2021-12-11T17:25:34Z,it's like that on linux and no one complained?? :thumbs_up:
991722593,15769,Mazino-Urek,2021-12-11T17:32:41Z,"linux operating system users are only 1% of the pc users. a great portion of them are ancient ui lovers(i am talking about windows xp like ui). after i have started linux in 2016, lots of changed though. many great looking options available. for example, i use [a link] which has improved tremendously for the last 2 years. more improvements are coming."
991723513,15769,xavier2k6,2021-12-11T17:35:36Z,look. maybe it can be done across all os's but it's not something i'd be comfortable myself with code wise.
991725808,15769,Mazino-Urek,2021-12-11T17:43:18Z,"i understand. can you do the `log`? although i can't code, i understand all checkbox changes will need some big refactoring. i don't want to impose that much burden on you anyway."
991732077,15769,xavier2k6,2021-12-11T18:02:38Z,"`/src/gui/mainwindow.cpp` create this line: `m_ui->menulog->seticon(uithememanager::instance()->geticon(""view-calendar-journal""));` for now put it under: `m_ui->actionmanagecookies->seticon(uithememanager::instance()->geticon(""preferences-web-browser-cookies""));`"
991744051,15769,Mazino-Urek,2021-12-11T18:41:49Z,it worked. thanks!
991796763,15769,xavier2k6,2021-12-11T22:17:58Z,can you try `tenne (tawny)` `#cc6600` for `paused` & `gamboge` `#cc9900` for `queued`
991798176,15769,xavier2k6,2021-12-11T22:31:03Z,we also may need to swap out this icon for another: ![a link]
991799056,15769,xavier2k6,2021-12-11T22:39:02Z,"since `unavailable.svg` was removed `/src/gui/rss/feedlistwidget.cpp` change `unavailable` to `task-reject` ` if (feed->haserror()) return uithememanager::instance()->geticon(qlatin1string(""unavailable""));`"
991799499,15769,xavier2k6,2021-12-11T22:43:15Z,may need to look into this [a link] more. (putting this here as reminder to self)
991901188,15769,Mazino-Urek,2021-12-12T13:44:30Z,"`#cc6600` ![a link] `#cc9900` ![a link] to be sincere, not liking these muted colors at all. we can explore different color options. but, i am in favor of brigthish color. i think this icon fits the bill perfectly. it will need to be added as a new icon though. ![a link] ![a link] done."
991905062,15769,Mazino-Urek,2021-12-12T14:09:21Z,i am using [a link] for colors. give it a go.
991918911,15769,ArcticGems,2021-12-12T15:33:18Z,"`#e8680c` is also nice for paused, but chosing for checking is tricky. does checking really need to be close to the color of paused? can't checking be in a shade of purple or something?"
991921845,15769,xavier2k6,2021-12-12T15:51:22Z,checking is `#757fa1` `ship cove` i presume you meant `queued` - i'd like it to be similar to stalled up/down as previously mentioned....slight differentiation........not active....ie no uploading/downloading etc. `queued` is essentially paused.
991924483,15769,xavier2k6,2021-12-12T16:06:50Z,-imran you've changed the `dialog-warning` & `error` icons......please leave a note etc in future as there's changes being made while we're discussing other changes.....just a bit hard to keep track of changes as i've said previously as you make only one commit. i'm not against those icon changes by the way & would actually welcome them! to just the skinny exclamation mark that was there previously.
991924820,15769,xavier2k6,2021-12-12T16:08:34Z,i'd be ok with that icon if it looks ok. (blue color)
991925346,15769,Mazino-Urek,2021-12-12T16:11:51Z,"i was experimenting with them while keeping a backup. i was unable to distinguish them in qbtittorrent. they are looking better now. we are avoiding more shades of color, if possible."
991939446,15769,Mazino-Urek,2021-12-12T17:38:31Z,![a link] looks great.
991940170,15769,Mazino-Urek,2021-12-12T17:42:38Z,"in my opinion, two icon needs change. ![a link] log like icon doesn't work here. something different is needed. this might work: ![a link] ................. ![a link] webui icon can be simpler. like this: ![a link]"
991943931,15769,xavier2k6,2021-12-12T18:06:15Z,"![a link] log like icon doesn't work here. something different is needed. i disagree, i think it does work as it's depicting just general information like a leaflet, i wouldn't be too keen on the map icon thing. `webui` can be changed but i dunno about making it a compass icon......to me it doesn't signify that it's to do with a web user interface."
991946629,15769,ArcticGems,2021-12-12T18:23:04Z,it also reminds me of safari's logo.
991947750,15769,Mazino-Urek,2021-12-12T18:30:39Z,i am thinking about webui icon for very long. nothing seems appropriate.
991948740,15769,ArcticGems,2021-12-12T18:37:22Z,something similar to these icons could be good for the webui icon = ![a link] ![a link] ![a link]
991950278,15769,xavier2k6,2021-12-12T18:47:47Z,could just use `application-x-mswinurl.svg` instead.........i suppose.
991950808,15769,Mazino-Urek,2021-12-12T18:51:15Z,how about this? ![a link]
991951720,15769,xavier2k6,2021-12-12T18:57:23Z,no objections
991952276,15769,xavier2k6,2021-12-12T19:01:27Z,from: `src/webui/www/private/views/filters.html` why did you change `checking.svg` to `configure.svg`? ` qbt_tr(checking (0))qbt_tr[context=statusfilterwidget] `
991953309,15769,Mazino-Urek,2021-12-12T19:07:52Z,"i removed `checking` and used `configure`, as they were the same icon. you recommended keeping them. the change was not reverted. fixing it now."
992109999,15769,Mazino-Urek,2021-12-13T04:54:29Z,"let's fix the color now. green, blue, red, grey is done now. we need to have one more color that has two shades. like, `deep orange` and `light orange` but not different two color like `orange` and `megenta`. however, after we change this color, it needs to be fixed. i am open to new colors if we get a better color than orange. however, i think we need to use bright color. for example, `light orange` in most cases and `dark orange` in only some selected places. after this, we can focus on webui."
992344275,15769,xavier2k6,2021-12-13T10:58:58Z,"what do you mean?, where?"
992725894,15769,Mazino-Urek,2021-12-13T17:55:07Z,"i am talking about changing this color `#f25022` if necessary. possibly having a second variation, like `#ff9000` `dark orange`. but, i am against multiple iterations like current `pause` and `queued`."
992899164,15769,xavier2k6,2021-12-13T20:53:42Z,sorry......i'm not really seeing/understanding the need for another color change?!
992907060,15769,xavier2k6,2021-12-13T21:03:29Z,`tools-report-bug.svg` can also be removed.
993148894,15769,Mazino-Urek,2021-12-14T04:30:46Z,"done. this is what i wanted to hear. i think. `#f25022` and `#ff9000` is a great combination. let's use `#ff9000` for `pause` and for `queued` we can use `gray` `#909090`, if necessary. let't not add any more colors?"
993301949,15769,xavier2k6,2021-12-14T08:36:35Z,so this is about having a hang up on the `pause`/`queued` icons.......i thought since you mentioned the `#f25022` color - you meant all the remaining icons with that color.......
993330725,15769,Mazino-Urek,2021-12-14T09:13:21Z,"i want color coherence, that's all."
998395935,15769,xavier2k6,2021-12-21T01:30:28Z,i'd probably change `preferences-desktop.svg` (keeping blue color) to below: ![a link] ____ try `#707070` for `stalleddl.svg` ____ `force-recheck.svg` should probably be the same color as `checking.svg` = `#757fa1` ____ there's a few more icons that could be removed & substituted for others we already have in place. (naming scheme permitted) example: remove `seeding.svg`/`uploading.svg` & substitute with `kt-set-max-upload-speed.svg` remove `view-filter.svg` & substitute with `filterinactive.svg` remove `download.svg` & substitute with `downloading.svg` `dialog-warning.svg`/`task-attention.svg` - use only one if possible. `media-playback-pause.svg`/`paused.svg` & `media-playback-start.svg`/`resumed.svg` - use only one of each if possible. (keep `resumed` color) ____ change `media-seek-forward.svg` color to that of `resumed` ____ can you change color of `kt-magnet.svg` to red `#db3236`/grey `#909090` - like below example image: ![a link]
998827297,15769,Mazino-Urek,2021-12-21T14:32:46Z,"![a link] done. i think `seeding.svg` can stay, as it has different color. second part, done. done. i don't know if i got every `download`, as it is very common in this app. i replaced `task-attention.svg` already. forgot to delete the icon. kept `media-playback-pause.svg` and `media-playback-start.svg` for better discovery in the future. done. again, let's not go wild with colors. we have fixed red and orange color. possibly another orange variation `#ff9000` and grey colors. i will use them to make something."
998836563,15769,Mazino-Urek,2021-12-21T14:45:05Z,will this work? used currently set red `#db3236` and gray `#707070`. ![a link]
998849924,15769,xavier2k6,2021-12-21T15:02:19Z,the reason i want it gone/changed is so that it matches the other download/upload icons & speed graph text. can we rename `completed.svg` to `checked-completed`??
998861908,15769,Mazino-Urek,2021-12-21T15:16:47Z,done.
998881084,15769,Mazino-Urek,2021-12-21T15:38:25Z,can we improve here? ![a link]
999052774,15769,xavier2k6,2021-12-21T19:52:48Z,name: perhaps a simple `ab` icon (do you know - like a spellcheck icon) info hash v1/info hash v2 hashtag icon `#`? torrent id: perhaps `help-about.svg`
999057852,15769,xavier2k6,2021-12-21T20:01:36Z,oh man........you changed the orange colors back again that we had differentiated for transfer list. you missed `uploading` to `kt-set-max-upload-speed` in `filter` & `transfer` list. (so icon doesn't show up) i see you made an attempt at transfer list colors....they don't match.....i will go through this with you when we get most things sorted look & feel wise. also........(this is more for webui) `/src/webui/www/private/index.html` `downloading_small.svg` can be changed to `downloading.svg` `checked.svg` can be changed to `checked-completed.svg`
999145124,15769,xavier2k6,2021-12-21T22:47:11Z,"you asked previously about the `loading` icon.......how about using the `infinite/infinity` symbol for ""loading"" that way we can hopefully migrate another icon to `*.svg` can you find anything suitable to replace `sphere.png`? we would only be left with `mascot.png` & `splash.png` then"
999625514,15769,Mazino-Urek,2021-12-22T14:40:19Z,"done. i have two candidates: ![a link] ![a link] i don't even understand what is this icon really, how can i find the replacement? these are brand icon. changing them should be a different pr."
999643004,15769,Mazino-Urek,2021-12-22T15:05:28Z,done.
999698408,15769,xavier2k6,2021-12-22T16:16:27Z,i'm thinking......this one (others may have a different opinion) ____ it's used in `rssarticle`....to be honest i'm not fully sure of it's purpose....i'd leave that for now & can revisit at a later stage. i agree & was really only meant as a reference comment really. ____ screenshot of icons added from [a link] & reference [a link] below: ![a link]
999711051,15769,Mazino-Urek,2021-12-22T16:34:28Z,"changed `loading.png` to `loading.svg`. icon: infinity. i think, sphere is kind of loading icon."
999747959,15769,xavier2k6,2021-12-22T17:30:31Z,that's my thinking too
999773098,15769,Mazino-Urek,2021-12-22T18:14:30Z,replaced `sphere` by `loading`. let's see.
1000531145,15769,xavier2k6,2021-12-23T21:29:03Z,"`/src/webui/www/private/index.html` change `document-edit-verify.svg` to `force-recheck.svg` `id=""rechecklink""> ' + ' ' [code block] const html = ' ' + ' ' [code block] const html = ' ' + ' ' ```"
1000678029,15769,Mazino-Urek,2021-12-24T06:23:33Z,wow. thank you! it must have taken some time to find these.
1000793800,15769,xavier2k6,2021-12-24T11:07:21Z,"no problem, i forgot to paste one in! ____ `/src/webui/www/private/scripts/contextmenu.j` replace `inode-directory.svg` with `view-categories.svg` (there's only one)"
1000827946,15769,xavier2k6,2021-12-24T12:52:34Z,`/src/webui/www/private/views/searchplugins.html` change `checked.svg` to checked-completed.svg` [code block]
1000830032,15769,Mazino-Urek,2021-12-24T12:59:34Z,done.
1000846048,15769,xavier2k6,2021-12-24T13:50:22Z,"`/src/webui/www/private/index.html` change `view-categories.svg` to `tags.svg` `href=""#tags"" class=""arrow-right""><img src=""icons/view-categories.svg"" alt=""qbt_tr(tags)`"
1001079554,15769,xavier2k6,2021-12-25T22:28:46Z,will be back to this asap.
1001101242,15769,Mazino-Urek,2021-12-26T03:21:28Z,take your time. no problem.
1003629599,15769,xavier2k6,2022-01-01T22:36:14Z,"`/src/gui/search/searchjobwidget.cpp` change `downloading` to `kt-set-max-download-speed` `menu->addaction(uithememanager::instance()->geticon(""downloading""), tr(""open download window"")` edit: (don't change the other `downloading` icon, just the one where i mentioned above) change `edit-copy` to `name` `copysubmenu->addaction(uithememanager::instance()->geticon(""edit-copy""), tr(""name"")` change `edit-copy` to `insert-link` `copysubmenu->addaction(uithememanager::instance()->geticon(""edit-copy""), tr(""download link"")` change `edit-copy` to `application-x-mswinurl` `copysubmenu->addaction(uithememanager::instance()->geticon(""edit-copy""), tr(""description page url"")` ____ `/src/webui/www/private/views/search.html` change `edit-copy` to `name` `href=""#"" id=""copysearchtorrentname"" class=""copysearchdatatoclipboard""> <img src=""icons/edit-copy.svg"" alt=""qbt_tr(description page url)` ____"
1003749909,15769,Mazino-Urek,2022-01-02T17:35:02Z,done.
1003763251,15769,xavier2k6,2022-01-02T19:26:55Z,i'm not 100% on this as being the right icon choice for this action.....but i'm going to leave it for now.... ____ seems to be a few issues in `webui` for some icons but that may just be a browser caching issue....(didn't clear it) or view box sizes need to be changed to accommodate new icon sizes. will look in to it again at a later stage. -imran any questions?
1003763397,15769,xavier2k6,2022-01-02T19:28:18Z,i'd change/re-work the `security-high.svg` & `security-low.svg` icons too.
1003976702,15769,Mazino-Urek,2022-01-03T09:51:05Z,"tobe honest, i can't get the webui running. i have no idea how it looks. ideas?"
1007207400,15769,Mazino-Urek,2022-01-07T07:52:55Z,ping everyone. i think `security-high` can be this: ![a link] and `security-low`: ![a link]
1007212492,15769,Mazino-Urek,2022-01-07T08:03:55Z,"alternative, `security-high`: ![a link] `security-low`: ![a link]"
1013242289,15769,Mazino-Urek,2022-01-14T15:51:05Z,ping!
1013677779,15769,xavier2k6,2022-01-15T12:56:03Z,"-imran very little free time at moment - however for now, i'd suggest going with alternatives from [a link] with a slight icon change for `security-high`: ![a link] edit: source - `ionicons`"
1013705736,15769,Mazino-Urek,2022-01-15T15:55:38Z,i am putting the project on hold as long as you are not free. `security-high` ![a link] `security-low` ![a link]
1013879890,15769,Mazino-Urek,2022-01-16T13:50:02Z,can we replace these two files? - [ ] `qbittorrent.ico` - [ ] `qbittorrent_file.ico`
1019509392,15769,xavier2k6,2022-01-23T15:36:33Z,"not sure, what would you suggest? i should hopefully be able to have more time for this pr next week."
1019513260,15769,Mazino-Urek,2022-01-23T15:56:19Z,"we have exactly same svg alternative. ![a link] ![a link] ![a link] we can replace this. no problem. i think version 5.0 will be very late. we can target 4.5, i think."
1022202772,15769,xavier2k6,2022-01-26T13:35:08Z,suggest keep naming (for now): `qbittorrent.ico` -> `qbittorrent.svg` `qbittorrent_file.ico` -> `qbittorrent_file.svg` haven't time to look through code to see where names need to be changed...
1022224300,15769,Mazino-Urek,2022-01-26T14:01:16Z,"done. if the program works correctly, i would like to keep just one."
1022244118,15769,xavier2k6,2022-01-26T14:22:58Z,failing to compile on windows! change: `qbittorrent.ico` -> `qbittorrent.svg` `qbittorrent_file.ico` -> `qbittorrent_file.svg` `\src\qbittorrent.rc`
1022253283,15769,Mazino-Urek,2022-01-26T14:32:41Z,fixed.
1022344596,15769,Mazino-Urek,2022-01-26T16:02:57Z,windows build failing.
1022377996,15769,xavier2k6,2022-01-26T16:37:45Z,reason: `d:\a\qbittorrent\qbittorrent\src\qbittorrent.rc(3) : error rc2175 : resource file icons\qbittorrent.svg is not in 3.00 format`
1022467963,15769,Mazino-Urek,2022-01-26T18:19:37Z,"fix is coming, how about replacing this: ![a link] with this: ![a link]"
1022479352,15769,Mazino-Urek,2022-01-26T18:33:55Z,"or, simple but awesome, this one? ![a link]"
1022480818,15769,Mazino-Urek,2022-01-26T18:35:41Z,"or, better yet? ![a link]"
1022682966,15769,xavier2k6,2022-01-26T23:04:46Z,"i'd go with [a link] for now. will be able to give more time/help/feedback soon. edit: with the re-introduction of the `set location` option, we could add a new icon for this.....(name it accordingly) below example: ![a link] ____ ![a link] change `inode-directory` to `set-location` (or whatever you name it) `auto *actionsettorrentpath = new qaction(uithememanager::instance()->geticon(""inode-directory""), tr(""set location...""), listmenu);` `/src/gui/transferlistwidget.cpp`"
1023284447,15769,Mazino-Urek,2022-01-27T14:45:42Z,done.
1024897755,15769,xavier2k6,2022-01-29T11:58:13Z,-imran any particular reason `32x32` size was used/chosen instead of say `48x48`?
1024914168,15769,Mazino-Urek,2022-01-29T13:41:43Z,"two reasons: 1. icons shown in qbittorrent are very small, and 32×32 is more than enough for these cases. it is also keeping file sizes low after optimization. 2. we are using svg icon formats which is scalable. it is a lossless icon format, even when the icon is blown to let's say 10 times. that is in `.ico` file, i have used 512×512 format."
1024940138,15769,xavier2k6,2022-01-29T16:15:00Z,"well, we probably need to make the tray icons `48x48` as it doesn't maintain same size as previously throughout different places in the program/taskbar/tray or look at some other option......(this is on windows)"
1024942037,15769,Mazino-Urek,2022-01-29T16:26:14Z,"it really shouldn't happen. current icons don't even have a standard size. some icons are very small and some are even `512x 512` pixels. yet, it works because the icons are in svg format, not png. i think what is really happening is icons are simpler now. however, if you insist, i can do it. however, changing all these icons will take time."
1024942905,15769,xavier2k6,2022-01-29T16:31:40Z,"i don't insist, not at the moment - it maybe something else causing the discrepancy. i'm giving a build from this pr a whirl over the next few hours to see where we are/what's left to do."
1024944732,15769,xavier2k6,2022-01-29T16:42:35Z,can you make these 3x icons `48x48` as a test case example. `qbittorrent-tray.svg` `media-playback-pause.svg` `media-playback-start.svg`
1024947178,15769,Mazino-Urek,2022-01-29T16:56:51Z,done.
1024961061,15769,xavier2k6,2022-01-29T18:15:43Z,"the discrepancy i'm seeing is actually because of the `qbittorrent.ico` - you were going to change this over to `svg` previously, is that still the plan?? `qbittorrent_file.ico` was changed too & not for the best. (not as sharp/crisp/clean etc.) #### yours is on the left, original on right ![a link] ____ ![a link] ____ i liked & would prefer that option ![a link] as it maintains the current logo scheme."
1024962988,15769,Mazino-Urek,2022-01-29T18:27:30Z,"`.ico` can't be changed to `svg`. i changed the shape size. i can restore previous size, though. done."
1025123409,15769,xavier2k6,2022-01-30T11:31:02Z,the quality is still too low on those 2x files - they need further work or revert to the originals. regarding the 3x `48x48` test case icons - these can be reverted back to `32x32`.
1025143607,15769,Mazino-Urek,2022-01-30T13:27:29Z,can you provide me with some screenshot that is causing the problem?
1025151088,15769,xavier2k6,2022-01-30T14:06:37Z,"look at the quality of the screenshots from [a link] & my comment about them not being sharp/crisp also, the `qbittorrent` text in `qbittorrent_file.ico` is practically `illegible` see: ![a link] maybe, it's just system/screen i'm testing on - (not using my own rig for testing)"
1025154488,15769,Mazino-Urek,2022-01-30T14:25:18Z,what about now?
1025196552,15769,xavier2k6,2022-01-30T18:03:08Z,"still problematic, please revert for now & we can possibly revisit. ____ somehow - this got changed?? (created categories should also have the category icon) ![a link]"
1025203801,15769,Mazino-Urek,2022-01-30T18:40:49Z,this must be the result of rebasing. recent commit must have introduced these icons.
1025206873,15769,xavier2k6,2022-01-30T18:57:51Z,"ya, the reintroduction of the context menu items #### fix is below `/src/gui/transferlistwidget.cpp` change `inode-directory` to `view-categories` `qaction *categoryaction = categorymenu->addaction(uithememanager::instance()->geticon(""inode-directory""), escapedcategory`"
1025376644,15769,Mazino-Urek,2022-01-31T04:43:40Z,"besides, shouldn't the `reset` action use a different button? i will change it later."
1025986881,15769,Mazino-Urek,2022-01-31T16:49:08Z,i have made some changes. what is the status now of the `.ico` problem?
1030862411,15769,xavier2k6,2022-02-06T16:05:00Z,still issues.... i don't want to dwell too much on that at the moment. ____ `error.svg`/`dialog-warning` - exclamation mark is a little bit hard to see/make out: ![a link] can you also change `view-refresh` ![a link] image to maybe same image as `sync` ![a link]
1033871414,15769,Mazino-Urek,2022-02-09T15:17:39Z,check out the changes.
1033973624,15769,xavier2k6,2022-02-09T16:50:09Z,`error/dialog-warning` all good! :thumbs_up: still unsure about `view-refresh` icon....lol can you use: `ionicons (reload-circle)` ![a link]
1033980725,15769,Mazino-Urek,2022-02-09T16:57:05Z,done.
1034667646,15769,xavier2k6,2022-02-10T09:08:11Z,"will take a look, please `rebase` first."
1034904308,15769,Mazino-Urek,2022-02-10T13:09:25Z,rebased successfully.
1040321600,15769,Mazino-Urek,2022-02-15T14:12:48Z,ping.
1044359549,15769,xavier2k6,2022-02-18T11:16:38Z,-imran not forgetting you.....busy with other things & also currently testing transfer list color matching.
1044377812,15769,Mazino-Urek,2022-02-18T11:34:25Z,got it. no problem.
1046169132,15769,Pentaphon,2022-02-20T06:01:08Z,this is great. the entire qbittorrent dark theme needs to be redone to **improve overall contrast** and this is a good first step. i can't believe this didn't make it into 4.4.0
1046171938,15769,Mazino-Urek,2022-02-20T06:17:36Z,"you will be surprise to know this initiative goes all the way back to 2018, initial pr being #8406. so, i am not too worried that it didn't make into 4.4.0 release. hopefully 4.5 version. qbittorrent needs a lot of work in dark mode for windows users. for linux users this will be 2000% better than the current ui."
1046180221,15769,Pentaphon,2022-02-20T07:31:36Z,"i'm very glad, but on linux this setting is on by default, replacing most of the icons that come with qbittorrent with the system icons, and most people won't change the setting unless they are told to. perhaps this is a default that should instead be checked off so that linux users get to see your customized work out of the box and instead have to check the box if they want to use their system icons. after all, nothing is better for an app than the icons that were custom designed for it, especially now with this pr. ![a link]"
1046181381,15769,Mazino-Urek,2022-02-20T07:40:12Z,"excellent point. i am leaving this as a reminder, kindly look into it when you are free. i think we shouldn't choose ""system icon theme"" as default anymore. at this point it would cause strange behaviors."
1046791857,15769,xavier2k6,2022-02-21T11:47:02Z,"i will let other team members decide on this at a later stage, if it needs to be a separate pr etc (don't really use linux myself & don't believe that setting is applicable to windows os)"
1046881737,15769,Mazino-Urek,2022-02-21T13:27:55Z,"how about this, after this pr gets, i will create an issue to discuss it with everyone?"
1053638773,15769,Mazino-Urek,2022-02-27T18:26:09Z,i have seen your comment on another thread. is there any way i can give you the credit you are due? i would be glad to do my part.
1053651912,15769,xavier2k6,2022-02-27T19:18:24Z,"apologies.......we all need a little rant now & again, nothing personal to you or anyone else involved there. there is a way to give me credit/co-author but is not hugely important for this pr or to me at this time. i'm only trying to help best way i can."
1053894655,15769,Mazino-Urek,2022-02-28T05:07:09Z,"i have a proposal. what about you do `transfer list` coloring in a separate pr after this gets merged, and i will provide you feedback there? let's just tackle the other issues and get this done."
1054154306,15769,xavier2k6,2022-02-28T11:20:31Z,mark it for review & let others comment/advise.
1054169523,15769,Mazino-Urek,2022-02-28T11:39:29Z,got it.
1054259214,15769,Mazino-Urek,2022-02-28T13:30:43Z,ready for review.
1054982361,15769,glassez,2022-03-01T04:01:38Z,"i see that a lot of icon names have been changed. i don't remember if this was mentioned earlier, but, iirc, the icon names were initially chosen based on compatibility with those of the system themes used in linux etc. has anyone tried to enable a system theme support on top of this pr?"
1055012468,15769,Mazino-Urek,2022-03-01T04:44:40Z,"one of the huge problem regarding redesigning the icons were that loads of icons were not reflecting its name. plus, it was agreed that qbittorrent should keep as much previous icon names as possible but new icons will have simpler and better name. that is why some new icon names were introduced. as far as i understand only in linux oses it will have some issues."
1055244969,15769,xavier2k6,2022-03-01T09:58:10Z,feedback on these `text `colors for `transfer list`? (queued is left out as this is a wip & original icons are being used hence why they don't match up with text) ![a link] ____ ![a link]
1055252605,15769,xavier2k6,2022-03-01T10:04:57Z,one thing that bugs me with `stalled` status is that if a torrent enters `stalled downloading` it's reflected as `stalled` but if it enters `stalled uploading` it's reflected as `seeding` still...... it would be better if the status for these two were able to be more defined i.e. `stalled downloading/stalled uploading` instead of just stalled.
1055521883,15769,Mazino-Urek,2022-03-01T14:46:48Z,"the issue is other than blue, no color is looking good in both dark and white theme. 1. light green is working well in dark theme, but not in dark theme. opposite is with green color. 2. red is not working in dark mode. you get the point. can we do something like this from **`src/gui/transferlistmodel.cpp`**: [code block]"
1055589171,15769,xavier2k6,2022-03-01T15:54:36Z,"i think they look fine in both themes imo & i'm not using different `rgb` colorings. well, that's the color it's always been `master` & there's been no differentiation in the code for light/dark mode. nobody's complained about it before until now. [a link] [a link]"
1055646467,15769,Mazino-Urek,2022-03-01T16:52:52Z,"i am not saying it is bad. it is good, actually. however, it can be better by tweaking a bit. try this in the place of red. ` {219, 50, 54}; // bright red`"
1055668061,15769,thalieht,2022-03-01T17:13:05Z,i remember requested to be called before any major gui changes are merged
1057067140,15769,Mazino-Urek,2022-03-02T15:36:27Z,"i have figured the transfer list problem. based on [a link], if the background is one color, text color and back color should have 4.5:1 contrast ratio. i have applied this theory to the transfer list. to be safe, i maintained 5:1 ratio. check out the result. you can use this brilliant adobe [a link] to experiment with colors. update: it is not working out. it works only in light theme. when i apply a dark theme, it still shows the light theme color. which doesn't work. update 2: rather than using two colors, i have applied one color that has 4.5:1 contrast ratio in both light and dark theme. this is as far as my brain allows."
1059712202,15769,Mazino-Urek,2022-03-05T07:24:46Z,reverted most `transferlist` changes. up to you now.
1059961349,15769,xavier2k6,2022-03-06T13:17:49Z,"i'll look in to this for you more in next few days (that `color-contrast-analyzer` certainly looks promising), i think it is possible for the `transfer list text` to just use one color across both light/dark themes for each `torrent state`."
1059995373,15769,xavier2k6,2022-03-06T16:37:53Z,-im we may need to change some icon colors to match text in transfer list especially when `orange` seems to be an issue with `contrast` etc. leave it with me for now.....
1059999519,15769,Mazino-Urek,2022-03-06T17:03:14Z,"ok, if it is necessary. no problem."
1061015992,15769,xavier2k6,2022-03-07T18:50:27Z,there was a menu action added in a previous pr that needs a change in icon naming otherwise with this pr the icon is missing. `src/gui/transferlistfilterswidget.cpp` change `edit-delete` to `list-remove` [code block]
1061806298,15769,Mazino-Urek,2022-03-08T13:57:40Z,done.
1067850152,15769,Mazino-Urek,2022-03-15T11:02:40Z,ping.
1067979211,15769,ghost,2022-03-15T13:19:07Z,the tray icon looks a bit small to me. the speedometer icons everywhere looks like trash. this icon also very bad view-calendar-journal. icon used for completed torrents is too bright.
1068557264,15769,xavier2k6,2022-03-15T23:21:16Z,"has been highlighted before, will hopefully be sorted at later stage. they're better than what's currently available, although alternative icons were suggested previously in another pr. perhaps `help-contents.svg` can be used in-place of `view-calendar-journal.svg` for `execution log` & `help-about.svg` can be used for `general tab` colors aren't final yet.......still a wip appreciate the feedback though."
1068700056,15769,Mazino-Urek,2022-03-16T03:43:32Z,"i can get behind this. only transfer list colors are incomplete. icon colors are at this point fixed, i say."
1068909899,15769,xavier2k6,2022-03-16T09:26:18Z,"then we can't really use the `w3c` contrast ratio of `4.5:1` ""orange"" for example..... we have to be practical too over vibrancy, imo. (we aren't going to be able to cater to everyone or every use case.)"
1068923579,15769,Mazino-Urek,2022-03-16T09:41:14Z,"i get it. however, `4.5:1` is for text color in a solid background. in example, in a white word document, the text color(which are by default in 10-12 size range) must have at least 4.5:1 contrast ratio. that is applicable to `transferlist` but icons are bigger and more easily visible. i am not saying i am against color change. i am willing to adjust them if necessary. the thing is, the original pr #8406 is dragging from february 2018. so, you might understand if i am not as enthusiastic as i used to be about bigger changes."
1069043008,15769,xavier2k6,2022-03-16T11:51:38Z,"-im i totally get where you're coming from. i just think though - aiming for 100% `4.5:1` contrast for approximately 10 colors across both light & dark themes requires an awful lot of time/work especially when trying to keep differentiation between what the torrent `states` represent. we've only had one real instance where `readability` was an issue across light/dark themes & this will hopefully be resolved soon elsewhere. in relation to the speed icons, i don't really have an issue with them........so it's all down to users opinion, i will say though that the alternative (free) icons i had suggested have now been put under a pay-wall."
1069146728,15769,xavier2k6,2022-03-16T13:44:03Z,"i honestly think that the `example method` i used from [a link] is currently the way to go due to it being practical/~eligible~ legible & this includes code wise too, with this method we can match the icons `hex value` to the `associated transfer list model text` perfectly to maintain consistency."
1069235956,15769,Mazino-Urek,2022-03-16T15:13:13Z,"on second inspection, most of them are rather good. my only complaint is tone down the red just a bit. others look ok."
1069727455,15769,Pentaphon,2022-03-16T23:06:49Z,i agree with this. the single most important thing is legibility. this probably won't be merged until 4.5 so there's time to tweak it.
1072298373,15769,xavier2k6,2022-03-18T10:57:24Z,"-im quick glance, all ci failing to build due to below: ` m_ui->lineefilter->setstylesheet(u""qlineedit { color: #ff0000; }_qs"");` it should be: ` m_ui->lineefilter->setstylesheet(u""qlineedit { color: #ff0000; }""_qs);` ____ [ note the placement of quotation mark `""` by `_qs` ] file reference (line 818): `/src/gui/rss/automatedrssdownloader.cpp`"
1072461524,15769,Mazino-Urek,2022-03-18T14:25:04Z,fixed.
1072992762,15769,xavier2k6,2022-03-19T11:29:07Z,":thumbs_up: ____ i think i've made some significant headway in transfer list text colors - just need `checked-completed` to be differentiated now from the rest. (have to take in to account when the text is highlighted, that it's still legible) will update with screenshots at later stage."
1079079258,15769,Mazino-Urek,2022-03-25T14:25:06Z,didn't get any reply from . what now?
1079194311,15769,thalieht,2022-03-25T16:28:24Z,"-im you should rebase. there were compilation errors last time you did and they are now fixed. as for he is always pretty busy afaik. may take some time to respond. we now know he is aware of this pr so if he doesn't respond, it's up to the devs what happens."
1079254022,15769,Mazino-Urek,2022-03-25T17:37:47Z,"right now, this is pr is completely rebased without any problem. build errors are from master. got it."
1079297733,15769,xavier2k6,2022-03-25T18:34:19Z,are you ok with this (examples below)? ![a link] ____ ![a link] ____ ![a link] ____ ![a link]
1079711769,15769,Mazino-Urek,2022-03-26T15:04:33Z,we should at least add another one. it is getting overused. what about this? ![a link]
1079739124,15769,xavier2k6,2022-03-26T17:31:27Z,it looks like the top-down view of the star ship enterprise & another ship! :rolling_on_the_floor_laughing: i don't think it fits in & don't see the real need to change/add it. only icon that could be changed is `view-refresh` as i'm still not 100% sold on it in the gui.....just doesn't look right on 1080p screen.......it looks ok on 125%+ scaling etc. (it could be just me & that i have a hang-up about it) :rolling_on_the_floor_laughing: ____ i have all transfer list text colors hopefully sorted now for `9 torrent states` & they match the associated icons from `filter list`. (originally there was `7 torrent states` - some shared same color) ![a link] ____ **was also thinking of having variations of tracker icons.** ![a link]
1079842451,15769,Mazino-Urek,2022-03-27T05:17:03Z,ok. i deserve this one. i will have a look. that is a lot of color. more color equals to more dark/light theme conflict.
1079949530,15769,Mazino-Urek,2022-03-27T15:04:55Z,i have changed `view-refresh` a bit. check it out.
1081735352,15769,xavier2k6,2022-03-29T11:09:12Z,"still unsure of it in `gui`.....however, what do you think about using the `repeat` icon??....you used a flipped version of this for `force-recheck`. ![a link] ____ ![a link] ____ i know the text says `reset` here (as in reset-to-defaults) & you changed the icon for `view-refresh` but i think it should be reverted to `edit-clear` ![a link] ____ we could re-word if really required to maybe `remove` to be consistent with `tags`. ![a link]"
1081872903,15769,Mazino-Urek,2022-03-29T13:28:22Z,"what about, rather than shape cut, only this? ![a link] i think, `force-recheck` might work better as a square icon. ![a link] done."
1081924253,15769,xavier2k6,2022-03-29T14:12:55Z,"that works except for the pointed edges....that kind of thing was mentioned previously by another member........another icon that could work is the `sync` icon, it was used previously but the arrow lines were a bit thin - if they were thickened.....could be a viable solution too."
1081959386,15769,Mazino-Urek,2022-03-29T14:42:33Z,check out.
1082002293,15769,xavier2k6,2022-03-29T15:16:26Z,it's not as rounded as `sync` icon.....looks a bit like an oval `0` instead of circle `o` also i would take a tiny bit off the tail end of the arrow line to increase the gap (if you understand what i mean) if you're going to mage it square then line it up as much as possible that it looks like it's a square.
1082012001,15769,xavier2k6,2022-03-29T15:23:37Z,"i don't think so........if you look at code, we currently have `12 text colors` for `7 torrent states` (in transfer list). `downloading` - 2x colors (1x light, 1x dark) `stalled downloading/stalled uploading` - 2x colors (1x light, 1x dark - shared/no differentiation) `seeding` - 2x colors (1x light, 1x dark) `paused` - 1x color `completed` - 2x colors (1x light, 1x dark) `errored` - 1x color `queued / checking / moving` - 2x colors (1x light, 1x dark - shared/no differentiation) ____ now i have `9 torrent states` differentiated with `9 text colors` which match the associated icons & are readable across both light/dark theme. `downloading` - 1x color `stalled downloading` - 1x color `stalled uploading` - 1x color `seeding` - 1x color `paused` - 1x color `completed` - 1x color `errored` - 1x color `queued` - 1x color `checking / moving` - 1x color (shared/no differentiation for now as `moving` may be added to `filter list` in another pr)"
1082048078,15769,Mazino-Urek,2022-03-29T15:48:56Z,"done. on your change, i really don't have any major issue with it. in your pr, i will provide some feedback. will this work? ![a link] alternative: ![a link]"
1083370419,15769,xavier2k6,2022-03-30T16:38:19Z,"reference: [a link] how about using something like that & give it the look of [a link] (rounded edges) for `force-recheck`. perhaps then we could just use one icon for `force-recheck` & `checking`?? :thumbs_up: can you also change `stroke-width=""3""` to `stroke-width=""4""` for `set-location` just to thicken the icon lines. maybe the blue lines of relevant `speed` icons can be thickened slightly too.....this may improve the look & feel to help alleviate others comments."
1083406191,15769,Mazino-Urek,2022-03-30T17:13:27Z,"![a link] using, `force-recheck`, as it is more distinguishable. done. is the pr ready for final review?"
1083451546,15769,xavier2k6,2022-03-30T18:05:11Z,"for me...it's very very close....depends on transfer list text colors & change in icon colors being accepted. (this would also mean a change in readme etc. for source of colors/naming.) you may still have to make more than one commit to make it easier for review.....i will let others decide/give feedback on that. as i said previously, this is a big `default theme overhaul` with newly added icons/differentiated icons/color changes etc. if it does need to be split up in to different commits or even separate pr's - i will help with that or can do it/will make sure you get credited as `co-author` in the commits. (feedback on below? from [a link] ![a link] ____ **was also thinking of having variations of tracker icons.** ![a link] ____ ok, you didn't substitute it for the `checking` icon/just deleted it......so code needs to be changed to reflect the change in filter list otherwise checking has no icon displayed."
1083545893,15769,Mazino-Urek,2022-03-30T19:34:00Z,"as i have said, after this gets merged. you should do the icon and transfer list coloring. i will provide you feedback. i think current colors are ok. version 4.5 will be released soon, and as i see you have already done lots of work. if i didn't make this a single commit, there would have been more than 500 commits now. that would make things more complex. looking at file change in github provides visual changelog. that should work. no problem. i can do that. thinking about: 1. tracker-good 2. tracker-less 3. tracker-error 4. tracker-warning help me with the code. fixed."
1086637031,15769,ghost,2022-04-02T13:07:39Z,you’ve done a great job but is it that the main devs don’t want to integrate such a big change which isn’t easily revert-able or switchable? why can’t we have this as a 2nd set of theme? maybe i’m old school and want to stick to the old icons or switch back and forth.
1086645177,15769,xavier2k6,2022-04-02T13:48:06Z,"i've done an awful lot of work too helping with code etc. edit: also you may have missed this [a link] & speed icons have been updated......have a look. we've added icons where there wasn't any before. (this would actually close 1 open issue) removed unused icons. replaced similar icons. used appropriate icons in places that better reflect the actions etc. ____ currently, icons from filter list don't match text colors from transfer list....... this could be done here but -im seems to be against it. we've had no further feedback from other team-members on separating commits (i think they should be) need to add before/after screenshots. i would be willing to create a new pr with separated commits/screenshots etc. but not until there's some more feedback general consensus to drive forward with this. maintainer has final say anyway even after all this work!."
1086648876,15769,ghost,2022-04-02T14:09:59Z,"checked it and it's better than before however, speedometer is too small/odd looking. icons for rss and search engine are missing in view menu. taskbar icon is too small."
1086650060,15769,xavier2k6,2022-04-02T14:16:34Z,"speedometer is too small/odd looking. unsure of what can be used instead from the provided source `ionicons / la-capitain`. these are actually checkboxes.....if you click one of them & then go back to view menu again, you will see a `tick` next to it. ![a link] if you run qbittorrent under `fusion style` - you will actually see the check boxes. ![a link] can you elaborate?"
1086653110,15769,ghost,2022-04-02T14:33:35Z,i mean icon in notificaiton area is too small.
1086654290,15769,xavier2k6,2022-04-02T14:41:00Z,i mean icon in notificaiton area is too small. ah yes i now know what you mean......that change was previously requested to be reverted.
1086655101,15769,Mazino-Urek,2022-04-02T14:46:04Z,"you might not know this is a five-year-old effort. i provided a demo, main devs liked it, and then i continued my work. first reviewers were and . i closed the pr for several times because of frustration. finally, came along last year and really became an integral part of this project. helped with icon choices too. for two reasons: 1. in that way, you get the proper credit for these changes, 2. i still don't know if these will merge or not. maintains a style sheet theme. he has mentioned before, he will update the pack to include the old theme."
1086658023,15769,xavier2k6,2022-04-02T15:03:05Z,as i said previously you/me could be assigned as `co-author` so github history etc will show who contributed to this project....it's just a click of a button. see an example of `co-author` commit. ![a link] ____ i think creating more than one commit would have a better chance or even separate pr's. (would really require more team-members participation/direction) i am a team-member of this project so it would be really unethical of me to try & steal someone's work & not credit them!! if i was to undertake that work.
1086658679,15769,xavier2k6,2022-04-02T15:06:43Z,official qbittorrent 4.4.2 on left / this pr on right. ![a link]
1086661062,15769,Mazino-Urek,2022-04-02T15:21:25Z,"ok, this works perfectly. let me see, what went wrong."
1086688182,15769,Mazino-Urek,2022-04-02T17:44:13Z,i need your email to add as co-author. i have pushed a fix for notification area icon. check it out.
1086695042,15769,xavier2k6,2022-04-02T18:16:21Z,i use github desktop so only an `@` mention was required for `co-author`........ please try `42386382+xavier2k6.noreply.github.com` will check it...... are you ok so with changing icon colors `hex value` & adding text color changes here too?
1086696205,15769,Mazino-Urek,2022-04-02T18:22:20Z,ok.
1092891496,15769,Mazino-Urek,2022-04-08T14:00:57Z,ping. can you review this pr now? it is mostly ready. further improvement can be done in future prs.
1093412920,15769,xavier2k6,2022-04-08T22:20:43Z,"i suggest just keeping `trackers.svg` for trackers (all) ![a link] just use `trackerless` :thumbs_up: :thumbs_up: `/src/gui/transferlistfilterswidget.cpp` change `trackers` -> `trackerless` 'notracker->setdata(qt::decorationrole, uithememanager::instance()->geticon(u""trackers""_qs));' change `error` -> `tracker-error` `errortracker->setdata(qt::decorationrole, uithememanager::instance()->geticon(u""error""_qs));` change `dialog-warning` -> `tracker-warning` `warningtracker->setdata(qt::decorationrole, uithememanager::instance()->geticon(u""dialog-warning""_qs));` ____ will follow up with icon color & transfer list text changes after that then."
1093749853,15769,Mazino-Urek,2022-04-09T06:44:30Z,help me here. tracker changes have been made.
1094056783,15769,xavier2k6,2022-04-09T14:44:17Z,`/src/webui/www/private/views/filters.html` change `checking.svg` to `force-recheck.svg` ` tracker changes have been made. ok. notification issue seems to be corrected too. (quick glance)
1094073009,15769,thalieht,2022-04-09T15:52:51Z,"completed too and gui checking icon is missing: [code block] also gui and webui ""set location..."" icons are different."
1094084196,15769,Mazino-Urek,2022-04-09T16:52:50Z,done. help me here.
1094088182,15769,xavier2k6,2022-04-09T17:15:35Z,"`/src/webui/www/private/index.html` change `inode-directory.svg` to `set-location.svg` ` <img src=""icons/inode-directory.svg"" alt=""qbt_tr(set location...)qbt_tr[context=transferlistwidget]""`"
1094088852,15769,Mazino-Urek,2022-04-09T17:19:38Z,done.
1094103151,15769,xavier2k6,2022-04-09T18:33:19Z,"you forgot a part of what thalieht pointed out. `/src/webui/www/private/scripts/dynamictable.js` `state = ""paused"";` -> `state = ""media-playback-pause"";` & `state = ""completed"";` -> `state = ""checked-completed"";`"
1094103607,15769,thalieht,2022-04-09T18:36:17Z,"and `state = ""checking""; -> state = ""force-recheck"";`"
1094104046,15769,Mazino-Urek,2022-04-09T18:39:04Z,done.
1094104329,15769,xavier2k6,2022-04-09T18:40:53Z,seems to be an issue with `rss downloader` too (download rules) `list-add` & `list-remove` icons are used here but are really zoomed-in if you know what i mean. ![a link]
1094104947,15769,Mazino-Urek,2022-04-09T18:44:51Z,shouldn't we use `edit-clear` in lieu of `list-remove`?
1094106992,15769,xavier2k6,2022-04-09T18:58:10Z,"ya, i think we should. `gui` & `webui`"
1094112420,15769,Mazino-Urek,2022-04-09T19:33:37Z,i might have fixed `webui`. not sure about `gui`.
1094132712,15769,xavier2k6,2022-04-09T22:13:58Z,"other way around `gui` is fine, just for `webui` `/src/webui/www/private/views/rssdownloader.html` 2x instances of `list-remove` -> `edit-clear`"
1094229379,15769,Mazino-Urek,2022-04-10T09:34:05Z,done.
1096756282,15769,xavier2k6,2022-04-12T13:50:13Z,need to address this [a link] & can remove `view-calendar-journal.svg` then. there seems to be one more `webui` anomaly but need to see if that's in official version/master builds too or just from this pr.
1096887462,15769,Mazino-Urek,2022-04-12T15:37:43Z,"i have done my best, although i am not sure if i have done it entirely right. kindly test. these are the places, icon was found. ![a link]"
1097082598,15769,xavier2k6,2022-04-12T18:44:56Z,`src/gui/properties/proptabbar.cpp` should have `help-about` instead of `help-contents` & it'll be fine then. ![a link]
1097103658,15769,Mazino-Urek,2022-04-12T18:59:17Z,fixed.
1097108750,15769,xavier2k6,2022-04-12T19:04:56Z,-im can you make `office-chart-line` have two colors? `blue/green/blue/green` - this would better represent `download/upload` imo.
1097923692,15769,Mazino-Urek,2022-04-13T11:11:39Z,done.
1098823513,15769,Mazino-Urek,2022-04-14T08:04:10Z,any more changes? the pr has been rebased to the master.
1098970321,15769,xavier2k6,2022-04-14T10:01:40Z,"todo: - [ ] `webui` needs fixing around the collapse/expand area where `collapse` icon is used. (this may be code related - haven't looked in to it fully, just quick observation) ![a link] ![a link] - [x] all icon `hex` values to be changed slightly - [x] text transfer list match-up to `torrent state` icons - [x] possible `speed icon` changes to address others comments (variation of `time` icon perhaps?) ![a link] after this, we are all good to go i'd say."
1099094576,15769,Mazino-Urek,2022-04-14T11:34:09Z,i have made changes in speed icon. made the stroke a bit thick as it might cause visibility issue. i will need help on others.
1100647862,15769,xavier2k6,2022-04-16T11:54:49Z,"-im replace your current `transferlistmodel.cpp` file with the contents of `transferlistmodel.cpp` file below & change the `hex values` of listed icons to the values next to them. (this is to match the colors of the 9 `torrent state` icons with their equivalent `text color`, we can change remaining colors later) [a link] `downloading.svg` - `#008000` `checked-completed.svg` - `#483d8b` `force-recheck.svg` - `#008080` `kt-set-max-upload-speed.svg` - `#4169e1` `media-playback-pause.svg` - `#808080` `queued.svg` - `#cd853f` `stalleddl.svg` - `#3cb371` `stalledup.svg` - `#6495ed` `error.svg` - `#ff0000`"
1100665450,15769,Mazino-Urek,2022-04-16T13:38:26Z,done.
1100954066,15769,xavier2k6,2022-04-17T21:45:47Z,"regarding `webui` - few small code changes left, will show you where later when i have more time."
1102861451,15769,xavier2k6,2022-04-19T16:38:02Z,`/src/webui/www/private/index.html` replace 1x instance of `-3px` with `-4px` replace 1x instance of `1em` with `1.5em` replace 2x instances of `1.4em` with `1.5em` ____ `/src/webui/www/private/views/preferences.html` replace 2x instances of `1em` with `1.5em`
1102954498,15769,Mazino-Urek,2022-04-19T18:24:56Z,"there are more than 2 `1em`, which one to change?"
1103130319,15769,xavier2k6,2022-04-19T20:39:42Z,"-im apologies, i left out related to `slow.svg/slow_off.svg` in my prev. comment. (`lines 371 & 389`)"
1103202881,15769,Mazino-Urek,2022-04-19T21:45:48Z,done.
1105627233,15769,Mazino-Urek,2022-04-21T18:43:39Z,anything left to do?
1105673858,15769,xavier2k6,2022-04-21T19:32:27Z,"yes, i'll be back to you....."
1107825399,15769,xavier2k6,2022-04-24T11:53:22Z,"-im as a heads up, there's been a new `export .torrent action` added in another pr....so we may need to change icon for this."
1107826607,15769,Mazino-Urek,2022-04-24T12:00:46Z,`edit-copy` icon has been used for this action. does it need a new icon? i have rebased this pr to the master.
1110933847,15769,xavier2k6,2022-04-27T12:21:27Z,"i'm ok with it, unless others oblect at a later stage...we can deal with it then if it comes to that. will move on to changing the rest of the color icons. will give input tonight. still haven't looked in to the webui icon issue but that's only a small thing."
1113168052,15769,xavier2k6,2022-04-29T10:50:08Z,#### step 1 of 6: change below icon colors to `#1e90ff` ____ `application-rss+xml` `application-x-mswinurl` `collapse` `configure` `edit-copy` `edit-find` `edit-find-user` `edit-rename` `folder-documents` `folder-new` `folder-remote` `go-bottom` `go-down` `go-top` `go-up` `hash` `help-about` `help-contents` `inode-directory` `insert-link` `kt-set-max-download-speed` `list-add` `loading` `name` `network-connect` `network-server` `plugins` `preferences-desktop` `preferences-other` `preferences-system-network` `preferences-web-browser-cookies` `set-location` `speedometer` `tags` `torrent-creator` `trackers` `view-categories` `view-preview` `view-refresh` `webui`
1113169465,15769,xavier2k6,2022-04-29T10:52:13Z,#### step 2 of 6: change below icon colors to `#008000` ____ `connected` `security-high` `task-complete`
1113170038,15769,xavier2k6,2022-04-29T10:53:00Z,#### step 3 of 6: change below icon colors to `#32cd32` ____ `media-playback-start` `media-seek-forward` `reannounce`
1113171918,15769,xavier2k6,2022-04-29T10:55:55Z,#### step 4 of 6: change below icon colors to `#ff8c00` ____ `dialog-warning` `firewalled` `object-locked` `ratio` `security-low` `tracker-warning`
1113174340,15769,xavier2k6,2022-04-29T10:59:24Z,#### step 5 of 6: change below icon colors to `#ff0000` ____ `application-exit` `disconnected` `edit-clear` `filterinactive` `list-remove` `system-log-out` `task-reject` `tracker-error` `wallet-open`
1113176727,15769,xavier2k6,2022-04-29T11:02:56Z,#### step 6 of 6: change the `hex values` of listed icons to the values next to them. ____ `filteractive.svg` - `#bc8f8f` `filterall.svg` - `#e9967a` `filterstalled.svg` - `#40e0d0` `trackerless.svg` - `#808080`
1114211724,15769,xavier2k6,2022-05-01T11:39:56Z,#### mixed color icons: change the `hex values` of listed icons to the values next to them. ____ `kt-magnet.svg` - `#ff0000` & `#808080` `mail-folder-inbox.svg` - `#1e90ff` & `#32cd32` `office-chart-line.svg` - `#1e90ff` & `#32cd32` `slow.svg` - `#1e90ff` & `#ff0000` `slow_off.svg` - `#1e90ff` & `#008000` `user-group-delete.svg` - `#1e90ff` & `#ff0000` `user-group-new.svg` - `#1e90ff` & `#008000` `view-statistics.svg` - `#1e90ff` & `#008000`
1120431136,15769,Mazino-Urek,2022-05-08T14:42:37Z,done.
1122543675,15769,Mazino-Urek,2022-05-10T15:26:54Z,"i just recovered from an extremely messy `git rebase` that i forced pushed to the branch. kindly, finalize this. other minor changes can be added later. this is getting really hard for me."
1122552310,15769,xavier2k6,2022-05-10T15:34:10Z,looks like you're able to recover from going back to previous commit...well done.
1122555427,15769,Mazino-Urek,2022-05-10T15:36:52Z,i was literally having a panic attack. an online guide to recover from force push helped me.
1122564916,15769,xavier2k6,2022-05-10T15:45:10Z,"no problem. when you have time, could you help/suggest a fix for webui issue from [a link] -im after the webui issue above gets resolved....only 2x file changes required/screenshots to be added & job done."
1123134000,15769,Chocobo1,2022-05-11T03:12:57Z,"i took a quick look into it, it seems to be related to svg image resizing at html/css which i don't have much experience of..."
1125949207,15769,ArcticGems,2022-05-13T11:21:09Z,could you help here??
1126008986,15769,xavier2k6,2022-05-13T12:34:15Z,"ya, it seems to be tailored for `16x16` size....will look into layout margins...may need to be reconfigured to `0` ie `auto`"
1126302909,15769,Mazino-Urek,2022-05-13T17:58:23Z,can you give me the color you have used? i will add them to the `readme`.
1126973316,15769,xavier2k6,2022-05-15T16:22:32Z,source for all colors i used is [a link]
1133628035,15769,xavier2k6,2022-05-21T12:43:13Z,-im haven't had time to look in to this fully still but wouldn't consider it a blocker either......this can be sorted by someone who is more familiar with `webui` or whoever has the time at a later stage. * revert `qbittorrent-tray.svg` to same size (1024x1024) as `master`. * change `dialog-warning.svg` to use below image: ![a link] this is all that's basically left to do as far as i'm concerned outside of others instructions/review comments etc.
1133892372,15769,Mazino-Urek,2022-05-22T13:05:57Z,done. my linux compilation is hitting errors. provide me some screenshots. i will add them in the description.
1133914630,15769,xavier2k6,2022-05-22T15:01:12Z,"-im i meant to ask as well why some icons like `dialog-warning`, `error` & a few others have their `viewbox values` omitted? ie `viewbox=""0 0 32 32""`"
1133931929,15769,Mazino-Urek,2022-05-22T16:39:04Z,don't know. added it manually in 14 icons now.
1134001959,15769,xavier2k6,2022-05-22T22:27:59Z,-im `filterstalled` is slightly different thickness to other filters & imo this thickness looks better in gui.... would suggest to change the thickness on all for consistency. ![a link] i noticed this when viewing them in explorer as extra large icons....there's also a few icons that still don't fully have round edges.
1134631925,15769,Mazino-Urek,2022-05-23T12:46:14Z,"fixed. isn't this extreme nitpicking that no one will ever notice, as the icons are very small?"
1134777410,15769,xavier2k6,2022-05-23T14:51:55Z,"i only mentioned it for clarity as others had mentioned/had issues previously......personally, i don't insist on any changes as i'd agree.......it is trivial but others may insist. thanks for the fixup.....will try & provide screenshots asap."
1140180346,15769,Chocobo1,2022-05-28T05:48:31Z,all icons looks acceptable except one: can this icon (especially the sphere part) be updated to be more round? ![a link] currently it looks like it is squished from left and right.
1140189844,15769,Mazino-Urek,2022-05-28T06:59:44Z,all done. checkout.
1140266162,15769,Mazino-Urek,2022-05-28T13:32:39Z,done.
1140292888,15769,xavier2k6,2022-05-28T16:27:14Z,this is what the `transferlist` text looks like (it matches the torrent states/icons) ____ [a link] ____ [a link]
1140296650,15769,Mazino-Urek,2022-05-28T16:54:54Z,screenshot added.
1140299786,15769,xavier2k6,2022-05-28T17:14:32Z,op updated.
1140300537,15769,Mazino-Urek,2022-05-28T17:19:51Z,ok.
1140324556,15769,thalieht,2022-05-28T20:20:32Z,"- ~~color for ""completed"" is unreadable in dark theme. downloading is not very comfortable either but it's readable, i guess that's to be expected when you use the same colors for dark and light.~~ ignore, bad monitor. i shouldn't comment on colors. - the ""speedometer"" icon doesn't look like a speedometer to me, at least not at this size. not to mention the thin green line which doesn't contrast well in dark theme. ![a link] - the webui ""collapse"" icon still shows the top left part of the image if anyone cares."
1140328943,15769,xavier2k6,2022-05-28T20:59:57Z,will take a look at other alternatives but to me in dark mode it looks bright enough & is readable.....maybe monitor brightness settings?! colour can be changed & icon can be thickened if we don't agree on an alternative source. the speedometer was changed as another member didn't like the previous offering...(1st image set) ![a link] the sources for icons have limited options for speedometer....... how about below?: ![a link] ![a link] ![a link] i didn't get around to try fixing that.....was hoping for someone with more experience in the meantime to have chimed in.
1140331176,15769,ArcticGems,2022-05-28T21:21:59Z,"maybe go back to these, they do look better as small icons. i don't like these :thumbs_down: also, aren't they almost the same for office-chart-line.svg (speed graph?). . it looks good to me too."
1140335298,15769,xavier2k6,2022-05-28T22:02:45Z,"i thought they looked fine too, just needed a bit of thickening on the arc......we changed but didn't get any real feedback until now. this was the reason for the change: [a link] similar yes - they represent the 2 speeds (uploading/downloading) :thumbs_up: , will wait for others opinions too before any changes."
1140368287,15769,thalieht,2022-05-29T03:12:16Z,tn monitor :) or maybe some misconfiguration... looks ok in another one. me neither. i wasn't a fan of the previous speedometer but it was better than the current one imo.
1140379674,15769,ArcticGems,2022-05-29T05:19:12Z,"could also have a icon with a solid blue circle with a large red and green pointer. or maybe something similar to these like these? (maybe bigger/thicker pointers and remove the dot in the first one) = ![a link] ![a link] hmm, but these two might look odd when used for slow (pointer points to the left), maybe the speedometer on the top of my post really is the best."
1140443399,15769,Mazino-Urek,2022-05-29T12:53:05Z,"whatever looks large doesn't always look good in small, and there will not always be the perfect icon for everything. ![a link] imo, these works. rest is up to you. i will look into everyone's discussion and change one final time."
1140443716,15769,xavier2k6,2022-05-29T12:55:09Z,another option to signify `rate limits`: ![a link] (the arrow colors could be changed to same as downloading/seeding & stalledup/down respectively......hope i explained that clear enough) edit: example pic added. ![a link]
1140445512,15769,ArcticGems,2022-05-29T13:06:28Z,"not bad, but is better suited for download/upload direction then speed. if we follow your idea a bit, how does these look completely red(point left) or green(point right)? = ![a link]"
1140446555,15769,xavier2k6,2022-05-29T13:12:10Z,"as i said it's more of an indicator of `rate limits` (green - for go full throttle lol........red - for hey!, slow down) on download/upload actions..... i'm not sure i understand what you mean?"
1140449262,15769,ArcticGems,2022-05-29T13:26:18Z,"very quick edit (so a bit ugly), but you get the idea = ![a link]"
1140465982,15769,xavier2k6,2022-05-29T14:56:09Z,possible options....waiting on others comments/feedback. example image added to [a link]
1140662228,15769,ArcticGems,2022-05-30T03:50:18Z,"the red/green ones are better. in your second example you can't see as clearly the differences when they are small icons. still... i prefer speedometer over these, let us see what others say."
1140841111,15769,Mazino-Urek,2022-05-30T08:11:08Z,what do you think about these icons
1141659466,15769,Chocobo1,2022-05-31T04:37:15Z,"i don't have strong preferences here. imo the only thing that matters is that, the pointer direction of the speed icon should stand out and be easily observable. i would pick any one that satisfy this criteria."
1141675604,15769,ArcticGems,2022-05-31T05:15:34Z,"so these achieve those criterias. the pointer direction stands out and is easily observable as a small icon= ![a link] -im what do you guys think, you still want to look for others??"
1141756139,15769,Mazino-Urek,2022-05-31T07:18:22Z,my vote is on this one. i think two color contrasts and pointy icon works better.
1141796594,15769,xavier2k6,2022-05-31T08:02:20Z,":thumbs_up: i had no real issue 1st day either, we changed them to appease 1 person but they haven't given any feedback since...... only suggestion would be like i said before is to make the blue arcs width a little thicker - leave pointers alone. keep blue/red colors same as they are now `#1e90ff` / `#ff0000` maybe use `#32cd32` for green?!"
1141801675,15769,xavier2k6,2022-05-31T08:07:31Z,this can be rectified in a follow up pr as i'm not going to get time to fiddle around with this currently & i don't want to hold this pr up any longer than it should.
1141833139,15769,Mazino-Urek,2022-05-31T08:28:34Z,will make necessary changes tonight. have a look at the merge conflicts. seems a bit extreme.
1142126079,15769,Mazino-Urek,2022-05-31T13:18:42Z,done. ![a link]
1142133153,15769,thalieht,2022-05-31T13:24:47Z,"keep all changes from master but: torrentcontentmodel: just re-replace `text-plain` with `help-about` in its new location in the file. transferlistmodel: - replace the contents of `getdefaultcolorbystate` in it's new location with your changes, for your convenience (careful about the indendation, it may be copied wrong): [code block] - re-delete `isdarktheme()` - and finally [code block]"
1142133896,15769,xavier2k6,2022-05-31T13:25:22Z,-im `slow` needs to be flipped horizontally so pointer goes in opposite direction of `slow_off` like below:
1142172753,15769,Mazino-Urek,2022-05-31T13:58:09Z,"done. check my changes on merge conflict. also, thaliet has raised one issue above, have a look."
1142183558,15769,xavier2k6,2022-05-31T14:06:24Z,"quick glance...will need fix up - will advise later, ok."
1142202502,15769,xavier2k6,2022-05-31T14:21:35Z,does the 3x iterations of `m_textplainicon` in `torrentcontentmodel.cpp` need changing too or are they to remain as-is? [a link]
1142206803,15769,thalieht,2022-05-31T14:25:03Z,no need.
1142221774,15769,xavier2k6,2022-05-31T14:36:58Z,-im use my `transferlistmodel.cpp` from [a link] this should address everything :crossed_fingers:
1142308465,15769,xavier2k6,2022-05-31T15:47:58Z,i knew i'd jinx myself. :face_with_rolling_eyes: small typo `media-playbackpause` -> `media-playback-pause`
1142339328,15769,xavier2k6,2022-05-31T16:16:03Z,preview screenshot in op updated with included `updated original speed icon set`
1142345369,15769,Mazino-Urek,2022-05-31T16:21:44Z,thanks. kindly have a look at the review has left above about one icon causing a crash.
1142390825,15769,xavier2k6,2022-05-31T17:02:17Z,see [a link]
1142533057,15769,Mazino-Urek,2022-05-31T18:57:28Z,maybe it is finally done now?
1143500694,15769,xavier2k6,2022-06-01T11:45:36Z,"please address comments of 'qt' & 'empty line' & yes, i would consider this done, barring: * any additional review comments/suggestions/screenshot requests etc. * webui 'expand/collapse' icon issue (can be resolved at later stage)"
1143594031,15769,Mazino-Urek,2022-06-01T13:11:21Z,done.
1145363085,15769,xavier2k6,2022-06-02T21:32:42Z,thanks for the new screenshot/op updated with it now.
1145417444,15769,Pentaphon,2022-06-02T22:52:35Z,-im i made this issue [a link] that should be addressed so that linux users get to see your new custom icons by default instead of seeing whatever old icons came with their distro. it would be sad if all this hard work didn't show up on new installs just because of this checkbox when you are offering these custom icons to work with light and dark modes.
1145555096,15769,Mazino-Urek,2022-06-03T03:44:52Z,"thanks! after this pr gets merged, i was hoping to create a pr just to do that."
1145800690,15769,Mazino-Urek,2022-06-03T09:57:28Z,pr is done with all the changes made. kindly consider merge.
1145861311,15769,ghost,2022-06-03T11:17:19Z,`stalled` and `all`filter icons are not good. edit: sorry i mean `active filter` icon.
1145867583,15769,ArcticGems,2022-06-03T11:26:05Z,can you explain more? why aren't these good?
1145886180,15769,xavier2k6,2022-06-03T11:53:15Z,"do you mean the colors, what do you think of below? (if that is the issue) ![a link]"
1145894578,15769,ghost,2022-06-03T12:04:46Z,sorry for mixing things up in last comment. please disregard it. what i actually wanted to mean : the `all` filter color does not look good when it's selected. it becomes kinda brownish ash and looks dead! and the `stalled` filter is hurting the eye on white theme when it's not selected.
1145900207,15769,Mazino-Urek,2022-06-03T12:12:16Z,further improvements can be made upon in future prs. this one has been cooking for 5 years. let's not nitpick for now.
1145916447,15769,ghost,2022-06-03T12:32:32Z,what if you're ded and nobody updates them lateron ;)
1145919045,15769,glassez,2022-06-03T12:35:54Z,"the problem with this is much broader (if i'm not mistaken, of course), and i mentioned this a long time ago, but my alertness was apparently not taken seriously. initially, the names of (most) icons were chosen in such a way as to match the (commonly used) names from the linux system themes. so you probably killed ""use system icon theme"" feature by renaming all these icons. you have undoubtedly improved the built-in theme and enriched it with new icons where the same ones were used before. but nevertheless, i interpret this problem as blocking for this pr until it is solved in one of the following ways: 1. completely remove ""use system icon theme"" feature, 2. modify this pr so that ""use system icon theme"" feature continues to work properly (i.e. it would use as many system icons as possible). , what do you think?"
1145922042,15769,Mazino-Urek,2022-06-03T12:39:40Z,i am sure will carry this torch on my behalf.
1146006229,15769,Mazino-Urek,2022-06-03T14:12:36Z,"again, these are the [a link] for icon naming on linux. a couple of points, 1. not all linux de follow this guideline strictly. as per my understanding, kde and its derivatives are a bit different. besides, this guideline is from 2005, 2. old qbittorrent icons are not well names according to this guide. the action didn't reflect the icons in some cases, and this guideline simply doesn't have icon names for `tracker, hash, donation` etc. i agree that most common actions were covered, but we tried to maintain compatibility as well, 3. qbittorrent is not a system application, it is not a simple application also. it can be compared with the like of vs code, rstudio, dbeaver, and none of them cares about system icon compatibility. this can't do that too. my proposal is, go ahead with this. linux world top icon theme maintainers, will adopt qbittorrent icon naming in their theme pack. almost, none of us linux users use our default icon themes. it won't impact us that much. rest is up to you guys."
1146143098,15769,glassez,2022-06-03T16:14:00Z,"sorry, i'm not familiar with how it works in the linux world... are you saying that applications just use the icon names that they like (e.g., correspond to their purpose), and the icon theme maintainers provide (or do not provide) their own icons for all possible applications that they want to take care of? to be honest, i thought that everything was different - there is some standard set of icons, and applications just use the appropriate ones. i'm just looking forward to a bunch of issues like ""i turn on `use system icon theme`, but it doesn't affect"". but if everything really is as you said above, and icon theme maintainers should take care of it, then of course this should not become a problem and we can go further. anyway, i'd like to know 's opinion."
1146180090,15769,Mazino-Urek,2022-06-03T16:59:40Z,they actually use system link to just use one icon to be used multiple of times. here is a reference [a link].
1146187512,15769,glassez,2022-06-03T17:09:13Z,"the main thing is not how they care about providing icons for various applications, but that they are responsible for doing it or not. if they are really responsible for maintaining compatibility with various applications, then ok."
1146188385,15769,glassez,2022-06-03T17:10:25Z,-im personally i would really like to see your icons in v4.5.
1146237873,15769,Pentaphon,2022-06-03T18:16:41Z,"i think the dev team should just do this because: a) the system icon themes that come with a distro are usually really old, not very good looking, not customized for qbittorrent and are usually not replacing all of qbittorrent's icons. b) the custom icon themes people install are better looking and newer, but obviously not customized for qbittorrent, and are usually not replacing all of qbittorrent's icons. c) you're putting in a lot of work to have icons that are handcrafted for qbittorrent by a community and to just have this option to hide them by default in favor of a distro's icons seems like a huge waste of effort. d) we should drop the ""use system icon theme"" checkbox in favor of only supporting the ""use theme file"" option so that if people don't like these new icons 4.5 ships with, they can work together as a community to create .qbtheme files that they prefer and just use that from now on the same way utorrent used to do and that's that. so yeah, i'm all for removing the ""use system icon"" feature. it's just holding back the look of qbittorrent, imho."
1146527109,15769,ghost,2022-06-04T04:21:39Z,i think someone can remove that system icons feature for linux on another pr as this supersedes linux system icons. however it should not be considered a blocker.
1146540390,15769,Chocobo1,2022-06-04T05:27:23Z,"after trying this pr on linux, i consider the ""use system icon theme"" is not so effective now. it is still usable but the result is not so great. it should be removed in the long run. for now, ""use system icon theme"" should be defaulted to off (either in this pr or a separate pr) and later remove it entirely (since this job seems non-trivial)."
1146540907,15769,glassez,2022-06-04T05:31:09Z,so let's merge it if there are no blocking nitpicking.
1146571772,15769,xavier2k6,2022-06-04T08:59:07Z,"exactly or others are free to offer changes in their own pr...if people aren't really happy with certain colors or icons, they can be easily changed now/any time or when these icons are included in a official public release & more extensive feedback is received. for e.g. the `filter icons` could be changed to something like below: ![a link] ____ ![a link]"
1146579756,15769,Pentaphon,2022-06-04T09:48:52Z,"if we're going to remove it in the long run, which is a good idea, why not just remove it in 4.5 to coincide with the new icons in that release? i'm sure -im would be able to create such a pr and get it done."
1146580220,15769,glassez,2022-06-04T09:53:00Z,"it should be noted that if it is not deleted before v4.5 release, it will remain throughout the entire life cycle of v4.5.x branch."
1146581355,15769,glassez,2022-06-04T10:02:03Z,"imo, it's too vague/confusing a name for this commit. it should be something more concrete, e.g. ""implement new icon/color theme""."
1146583445,15769,xavier2k6,2022-06-04T10:18:16Z,does it have to be done in another pr or could it be done here (in another commit)? i'm not sure myself where all these changes/deletions would be required so would depend on others expertise in this area.
1146586794,15769,glassez,2022-06-04T10:47:22Z,i would prefer separate pr.
1146598710,15769,xavier2k6,2022-06-04T12:18:52Z,-im are you up-to/capable of doing this asap?
1146617547,15769,Mazino-Urek,2022-06-04T13:57:56Z,"look at the colors, i have pushed new icons. what to do?"
1146629585,15769,xavier2k6,2022-06-04T15:02:32Z,"`filter-active` `#1e90ff` -> `#4169e1` `filter-stalled` (flip it) & use `#6495ed`/`#3cb371` just noticed!!, since the execution log used the same icon as `filter-inactive` - we've now changed that from a `funnel` image to `up/down arrows` so we need to create an icon for it. would suggest changing icon to below: ![a link] using `#ff0000` `/src/gui/executionlogwidget.cpp` change `filter-inactive` to perhaps `ip-blocked` (i have no real preference on what it's to be called, add name to `icons.qrc` too) `m_ui->tabconsole->settabicon(1, uithememanager::instance()->geticon(u""filter-inactive""_qs));`"
1146645120,15769,Mazino-Urek,2022-06-04T16:27:54Z,all done.
1146674411,15769,xavier2k6,2022-06-04T19:35:59Z,:thumbs_up: could you provide crisp screenshot of icons to update original post with please?
1146751400,15769,Mazino-Urek,2022-06-05T06:38:50Z,"we have two same icons with same color. `application-exit` and `task-reject`, one can be easily removed. which one?"
1146767041,15769,glassez,2022-06-05T08:50:23Z,"if they are used for different actions/controls, it is better to leave both so that the creators of custom themes can use different icons. to make it more scalable, it is better to associate icon names with the actions/controls for which they are intended, and not with a specific icons we are using at the moment."
1146777438,15769,Mazino-Urek,2022-06-05T10:08:57Z,"they are actually doing the same thing, and thus have exactly the same icon with the same bold red color. you will find many new icons added that have only one use cases, but added as no other existing icons could represent them, i.e., `hash`, `tracker`. `application-exit` just has two use cases, and can easily be replaced with `task-reject`."
1146780916,15769,xavier2k6,2022-06-05T10:35:30Z,"~i'd leave `task-reject` as-is, the only 2 icons that have similar actions but are represented by 2 different icons are `application-exit` & `system-log-out`.~ ~so perhaps we can get rid of `system-log-out` if necessary & use below icon image?~ ![a link] ~if we got rid of `system-log-out` & replace it with `application-exit` we'd only have to modify 1 place in `src/webui/www/private/index.html` & delete it from `icons.qrc` too.~ ~ thoughts?~ ignore!!"
1146895586,15769,xavier2k6,2022-06-05T22:35:25Z,`application-exit` could be changed to this: the `application-exit` being used here would look similar to `master` ![a link]![a link]![a link] ____ `system-log-out` could be changed to: ![a link]
1147511795,15769,Mazino-Urek,2022-06-06T14:28:27Z,"i think, this is a bit more stylish. ![a link] i think the existing icon is quite good. i need not be changed."
1147534068,15769,ArcticGems,2022-06-06T14:49:24Z,i agree :thumbs_up:
1147619545,15769,xavier2k6,2022-06-06T16:06:35Z,"maybe, but again it's bringing back the case of pointed corners/edges etc that previously other members had issues with."
1147642669,15769,ArcticGems,2022-06-06T16:29:01Z,maybe you're right. i have forgotten if we talked about using something like this (but red instead) for `application-exit` = ![a link]
1147810393,15769,xavier2k6,2022-06-06T19:20:19Z,"i don't think we mentioned using that or similar like below? ![a link] anyway, i don't want to dwell too long on this......just pick one & let others decide afterwards........so we can all move on to other things."
1147826738,15769,xavier2k6,2022-06-06T19:33:32Z,"i intended to keep both as previously the `filter-inactive` icon was just a filter which represented the 2 actions purposes, then we changed the `filter-inactive` icon to red up/down arrows which to me (& maybe it was just me who had an issue with it) didn't represent that something was being blocked hence why we created a ne icon for that action in the `execution log`. thanks for the `powertoys` suggestion, i do have it on my machine but the reason i asked you for the screenshot was time constraints & wasn't at pc. 1. quickest way would be to open a `command prompt` (it doesn't have to be elevated ie admin) 2. navigate to where you have qbittorrent installed or where you are testing unpacked (this pr perhaps) 3. type `qbittorrent -platform windows:darkmode=2` & hit enter e.g. ![a link] **note:** the dark mode version is to be considered **experimental** as it has issues/limitations."
1147924339,15769,ArcticGems,2022-06-06T20:59:25Z,"i prefer this one or the one i suggested (whichever looks better as small icon). -im which one do you prefer, a 'x' or a 'shutdown' symbol??"
1148202081,15769,Mazino-Urek,2022-06-07T05:07:31Z,"i will go with the shutdown icon. it adds an original new icon to the pack, and can be used in the future. will push changes later today."
1148827542,15769,Mazino-Urek,2022-06-07T15:29:07Z,![a link] done.
1148963231,15769,Mazino-Urek,2022-06-07T17:26:58Z,"updated screenshots. sorry to say, that is a yikes dark mode."
1148969926,15769,ArcticGems,2022-06-07T17:32:33Z,"/offtopic indeed, win 10/11's contrast themes aren't pretty."
1149052431,15769,ghost,2022-06-07T19:00:46Z,congratulations! this pr now has 500+ comments
1149084545,15769,xavier2k6,2022-06-07T19:35:51Z,"ya, the largest commented pr this project has had!! :rolling_on_the_floor_laughing: op updated with a lot more in-depth icon screenshots (light mode mainly) -> [a link]"
1149089430,15769,xavier2k6,2022-06-07T19:41:15Z,"-im done as much as i can now with the free time i've had, can't do no more."
1149443563,15769,Mazino-Urek,2022-06-08T04:22:53Z,"if you consider 4 prs i have made before on this(#8406, #12169, #12926, #12965), it has collectively 738 comments. first pr is from 2018. can't thank you enough for this. you have done a great job here. your effort has done this redesign, a couple of times better."
1150688163,15769,Mazino-Urek,2022-06-09T05:32:38Z,can you provide a screenshot from the app? maybe i can do something about it.
1150914861,15769,xavier2k6,2022-06-09T09:51:28Z,"look at `file menu` screenshot in op. the whiteness in the power symbol is too thin, is what i think they mean. personally, i did too....... (there are other fixup's/changes needed to be done in separate pr's so this could be done there.....) ____ as has mentioned a few times, do we still need sledge's approval?"
1150916917,15769,Mazino-Urek,2022-06-09T09:53:15Z,"i get it. will change it to cross later today. yes, please."
1150973378,15769,glassez,2022-06-09T10:54:03Z,"i hope you don't mean that as soon as we merge this pr, it will be followed by an (endless) series of pra like ""slightly change nth pixel of mth icon"", etc."
1150975789,15769,xavier2k6,2022-06-09T10:56:53Z,"no, i mean the `linux system icon theme` removal & the `webui - expand/collapse` icon issue that were discussed here."
1151019155,15769,Mazino-Urek,2022-06-09T11:44:40Z,changes made. ![a link] i can assure you that won't happen. and i have painstakingly made sure of that.
1151300614,15769,glassez,2022-06-09T15:44:35Z,"but i mean, that you guys have been saying for many times now - everything is ready, let's review and merge it. and immediately it is followed by a bunch of new comments and changes."
1151304706,15769,Mazino-Urek,2022-06-09T15:47:13Z,"it is done now. the problem was we took everyone's feedback seriously, we shouldn't have done that. everyone can't be pleased. tough lesson. i will not make another commit, unless there is a merge conflict. how about that?"
1151327467,15769,xavier2k6,2022-06-09T16:06:07Z,"don't touch this pr anymore! :rolling_on_the_floor_laughing: i've approved it, so those with merging rights can go ahead & merge unless we still need go ahead from sledge. apologies to all who may feel frustrated with the @ mentions & approval dismissals."
1151344726,15769,xavier2k6,2022-06-09T16:24:24Z,"done!, thank you."
1151347488,15769,glassez,2022-06-09T16:27:14Z,"another problem with all these icon renaming is the breaking the existing custom themes. (i don't remember if this was mentioned earlier, but in any case, it's worth making a final decision on this issue now.) are there any real reasons to force breaking compatibility with existing custom themes? after all, saving it does not seem to be something difficult, since we still have a fallback mechanism that allows us to specify an alternative icon identifier in `uithememanager::geticon()`, and we could simply specify the old identifier there."
1151367630,15769,Mazino-Urek,2022-06-09T16:50:17Z,"it was discussed before. said, he would modify his custom theme pack."
1151370008,15769,xavier2k6,2022-06-09T16:53:13Z,breaking theme compatibility was discussed previously in one of the many many many iterations of this pr. reference: [a link]
1151995638,15769,jagannatharjun,2022-06-10T06:17:33Z,it's not only me who has a theme. there are other authors too. and there is no way to automatically update the themes so everyone has to manually update them. i would really like this to preserve backward compatibility unless it's really necessary to break is it really necessary to break it?
1151999924,15769,jagannatharjun,2022-06-10T06:22:13Z,![a link] this looks odd ![a link] this shade of gray doesn't really go well with your other colors
1152003601,15769,Mazino-Urek,2022-06-10T06:25:47Z,"yes, it is necessary. we have added new icons. if you see that checklist of work done here, you will get the idea how messed up previous icons were. 1. there were loads of unused icons, 2. icons were named badly for linux compatibility purposes. it is a complete redesign by today's standard. this will be usable for a long time. theming is necessary because of current ui. it took us 2-3 years to create this, and we tried backward compatibility for a long time. if we didn't consider that from the beginning, it wouldn't have taken this long. i am hoping theme maintainers would humble us by taking a bit of trouble."
1152004181,15769,glassez,2022-06-10T06:26:21Z,"personally i see no valid reason since we can provide it via existing fallback mechanism. of course, it can be done in separate pr."
1152031473,15769,jagannatharjun,2022-06-10T06:51:49Z,the themes are being used by a lot of people. so it's not only theme maintainers who would get troubled. do see if you can preserve backward compatibility.
1152061034,15769,ArcticGems,2022-06-10T07:31:00Z,"imo it's ok to break things for custom themes, because major overhaul is very rarly done to qbit, so it's not like it happens often. also, a program should not adapt according to custom themes, custom themes should adapt to the program. jagannatharjun could update his themes, then other theme maintainers can follow his example or read updated wiki."
1152078532,15769,Pentaphon,2022-06-10T07:52:04Z,"i can't think of a single program that has had to support older themes. it is always theme developers that have to keep up with the program, not the other way around. we can't go backwards just to support themes that most people don't use or even know about. we have to keep qbittorrent moving forward as a project and that includes new theming and new software to keep running on new os's. theme developers should keep up with the bigger project if they want their themes to work because the software can't stay the same forever."
1152194970,15769,xavier2k6,2022-06-10T10:03:06Z,"it was discussed, the go-ahead was given as far as i'm concerned & has been delivered upon. to me it seems now people are trying to move the goal posts so to speak. in what way??.......a bit more context please. it can be lightened if really necessary (-im please! don't take me literally here & make changes/push any commits - there's **5** team members approval now)"
1152223868,15769,glassez,2022-06-10T10:36:58Z,"iirc, at that time, the question was whether to change identifiers or maintain backward compatibility. but all of you who are talking about some kind of ""step back"", apparently, do not understand (or do not want to understand) that there is a way to do it at the same time, which i mentioned several times above. you just need to replace the old calls `geticon(""old-icon-id"")` not with `geticon(""new-icon-id"")`, but with `geticon(""new-icon-id"", ""old-icon-id"")`."
1152255155,15769,xavier2k6,2022-06-10T11:19:42Z,i do understand what you are saying/where you are coming from but this should have been made more clearer at the time or before more & more extensive work was put in after that. there's been some push-back because of changes that have been made over & over & again when we've perceived it as finished because of received feedback. what do you suggest we do for icons that have been created where there was no icon in place before?! if theming support is really going to be an issue then should we postpone/block this pr from official builds until `5.x` & we can announce that pre-existing themes are not compatible?
1152276338,15769,glassez,2022-06-10T11:48:45Z,"just does nothing! i.e. don't provide any fallback. if some theme doesn't provide some icons then built-in icons are shown. this is less of a problem if the update just adds a couple of new icons to the interface than if most of the theme icons stop working. there is no such problem for me. we can simply announce that the old themes are no longer supported with the release of version 4.5, although the old themes may remain partially compatible, or even finally add metadata support to the theme files (in particular the format version) and completely discard incompatible themes. or make the transition soft, and let users continue to use their themes further, if they are satisfied with how they look in version 4.5. p.s. if you remain convinced that we should not care about maintaining compatibility with old themes, then please do not forget to put your heads under all the shit that can flow from the mouths of grateful users with the release of v4.5."
1152287760,15769,xavier2k6,2022-06-10T12:04:36Z,"i didn't say that we shouldn't care, i'm just saying those concerns should have been more adamantly imposed so we could've adhered to them as we progressed. am i being thrown under the bus here?! - this pr could very easily have been disapproved/changes requested. there was more than just me who approved it, so collectively we can all deal with any shit storm if it arises..."
1152348762,15769,Pentaphon,2022-06-10T13:14:49Z,"it's not an issue. nothing should be postponed. you should just announce that theme developers have to re-do their themes if they want them to work with 4.5 onwards. they simply have to adapt, as they would for the countless other software that theme developers have had to keep up with. qbittorrent isn't a special case where theme developers never have to keep their themes up to date."
1152423445,15769,Mazino-Urek,2022-06-10T14:29:42Z,"i have a proposal, hear me out. i get your point, now, didn't understand it before. 1. leave this pr like this. 2. after this gets merge, i will make another pr that adds some backward compatibility, 3. when 4.5 is released, it is announced that theme developers must adopt new the new theme, as old one is deprecated, 4. in version 5, the second pr gets reverted, and backward compatibility will be easily removed without much effort. i also think you are being unfair to . with every release, there will be some feature that some people won't like. something like, gui which people directly interacts with will definitely have some responses. the problem is when people like it, they will just say “cool”, and that is it. but, when someone doesn't like it, they will most likely complain it here. i don't know about , but this project has had a mental toll on me. you guys are developer, when you code in a project you get better at it. i am not a graphics or ui designer, this is probably the last time i will attempt this with any other foss project. we have tried our best. i can confidently say, more than 99%+ people will like the new ui, but a bit of 1% will complain here. it is not right to put the blame on one person. this is open source, it is meant be about everyone."
1152463661,15769,glassez,2022-06-10T15:09:00Z,"i'm not accusing of anything in any way (if it was like that, then let him excuse me). i didn't address anyone personally at all. i was just talking about two points of view. you just can't imagine how many vile trolls come out at such a moment, who believe that you took their own thing and ruined it for no good reason, and pour vile shit on you, without hesitating in expressions, completely forgetting that they use the product of your work for free, in which you put your soul, and never even tried to say ""cool"". you guys have done a really great job and i have given my general approval for a very long time. i just don't want anything to upset your sense of satisfaction when it is released. if there is such a simple solution to smooth out the sharp corners, then why not apply it? the choice is yours. ... :thumbs_up:"
1152498626,15769,egorik4,2022-06-10T15:46:04Z,"dear developers, as well as those who help the project, i express my gratitude to you for your hard work. :orange_heart: these changes are great! what you do is great! :)"
1152527156,15769,xavier2k6,2022-06-10T16:17:43Z,"-im thanks, but it's all ok. there's nothing to excuse you for, i don't have any issue with you personally & never have. i agree with you that your points were valid & my only gripe was/is that the backwards compatibility could've been included from scratch in this pr as i said if it was adamantly imposed, this would've possibly saved us all this back & forth, plus we now wouldn't have to make another pr to add it back in."
1159840265,15769,sledgehammer999,2022-06-20T00:14:31Z,"-im thank you for the hard effort. and to be clear: are the icons your designs or are they based off of other work? i am asking for licensing reasons. if these are your designs, then do you want to license them under some more icon-specific license? the default qbt license (aka gpl) might not be so suitable for icons."
1159915116,15769,Mazino-Urek,2022-06-20T03:05:03Z,"based on user feedback, further user improvement can be done in future. some are my own creation, most of them are modification and amalgamation from two project, [a link] and [a link]. both project license is compatible with qbittorrent. the owner of first project has given his permission in [a link] and second project is under mit license. i have also mentioned both of this project in the `read me`. give it a bit of time to set in. you might find it lovely,"
1160055688,15769,sledgehammer999,2022-06-20T07:06:17Z,from the la capitaine readme: so i don't think the la capitaine author can relicense those icons (to us) to less than gplv3. any thoughts on this?
1160124802,15769,Mazino-Urek,2022-06-20T08:19:06Z,"as a workaround, we might license this icon pack as, gplv3. as mit is compatible with gpl, not the other way around."
1160154703,15769,xavier2k6,2022-06-20T08:44:59Z,well my own personal preference previously (iirc) was to have used the original source `fontawesome` & where necessary use an alternative source using `mit` license as -im has previously suggested or where we had the author's permission to do so. (this author's permission is now called in to question) would it be best if we start fresh & can also take in to account concerns about (naming/themes backwards compatibility)??
1160157992,15769,Mazino-Urek,2022-06-20T08:48:03Z,"if we are talking about starting from scratch again, kindly count me out. i have had enough."
1160164330,15769,xavier2k6,2022-06-20T08:53:46Z,"if it is neccessary then yes, i am willing to create a new pr but i'm not 100% that i will have the time to get this in to a `4.5.0` as not sure what sort of cut-off deadline i'd be dealing with for an official release."
1160612305,15769,sledgehammer999,2022-06-20T15:55:06Z,are the one's from `la capitaine` separate from the ones from `ionicons`? are they many?
1160795794,15769,glassez,2022-06-20T19:51:15Z,"then qbittorrent builds that include this icon pack should be restricted to gplv3, no? or we are able to declare that qbittorrent is still distributed under gplv2+ except the icons, that are under gplv3? , , what do you think?"
1160881653,15769,sledgehammer999,2022-06-20T22:02:27Z,i am not sure we can. see: [a link] i assume we could circumvent license problems if we packaged the svgs separately and loaded them on runtime from disk.
1160957141,15769,xavier2k6,2022-06-20T23:39:27Z,"`speed icons` are from `la capitaine` & possibly `ratio`, `security-high/security-low` too. `application-x-mswinurl`, `application-rss+xml` seem to be originally from `fontawesome` `connected/disconnected` - were these created by you?"
1160990562,15769,xavier2k6,2022-06-21T00:34:32Z,![a link] here's a quickly thrown together look of `fontawesome/ionicons` hybrid. icons weren't resized etc......just grabbed mostly from `fontawesome` & threw in a few from `ionicons`
1161099455,15769,ArcticGems,2022-06-21T02:06:46Z,"nice, but reannounce, speedometer & 'force recheck' would not look good as small icons. connected & disconnected could just be a simple 'plug' that is either green or red (would look better as small icons). for speedometer, ""maybe"" we could use location-arrow in green (fontawesome) and also flip it to the left and make it red. btw, are you allowed to modify fontawesome icons? fontawesome 'arrows-rotate' might be better for 'force recheck'. maybe fontawesome 'bullhorn' could work for 'reannounce'."
1161202049,15769,Mazino-Urek,2022-06-21T03:31:12Z,"as per my understanding, qbittorrent is licensed under gplv2 or later. according to [a link] website, gplv2 or later is compatible with gplv3 or later, as long are not copying code which is strictly gplv2. i think it can be done. kindly have a look."
1161242514,15769,glassez,2022-06-21T04:13:21Z,"yes, they are compatible. but if we mix gplv2+ and gplv3+ things, then the final product should be distributed under gplv3+. and i suppose they should also be located in a separate repository, right?"
1161299596,15769,Chocobo1,2022-06-21T05:59:23Z,"i agree. an additional note, even if the final product is gplv3+ we don't really want to change the current license text of qbt (see: [a link] not necessary, for example see: [a link] it specifies which file has which license. --- currently it seems qbt is compatible with the icon projects aforementioned so i think it is all ok here."
1161637955,15769,sledgehammer999,2022-06-21T11:46:21Z,"sure. but as i understand it, if we make releases as-is then we're forced to gplv3, because the icons will be embedded into the final executable. if we want to keep the source code gplv2+, then we would need to stop embedding the icons into the executable. at least, that's my understanding. did you mean something else above?"
1161840646,15769,glassez,2022-06-21T14:41:22Z,"i understand it the same way. but, iirc, some projects (like firefox) manage to include some proprietary components (i'm not sure that it is about icons), so even linux distros that strive to be completely free include the forks that do not contain such components. although maybe their licenses are less restrictive than the gpl..."
1161875260,15769,glassez,2022-06-21T15:02:49Z,"the distributed program must have a license that is simultaneously compatible with the licenses of all its components. using the components separately under their own licenses is possible only if you obtained them separately from the program mentioned above. theoretically, if we develop the codebase separately from icons (even having them in the same repo), they will be able to remain under their own licenses, and binaries will be distributed under a compatible license."
1162174097,15769,sledgehammer999,2022-06-21T18:39:47Z,"using the components separately under their own licenses is possible only if you obtained them separately from the program mentioned above. can you elaborate on this? for the bold part: do you by any chance mean ""to have notices in the gui that document the 2 different licenses and the components they apply to""?"
1162195494,15769,glassez,2022-06-21T18:55:37Z,"it means the same thing as you said above: i.e. we will need to distribute such executable under gplv3 that is simultaneously compatible with both gplv2+ of source code and gplv3 of icons. but formally, this should not prevent us from continuing to use gplv2+ for source code, since icons do not mix directly with it, so we can assume that the source code is (can be) distributed separately from the icons. imo, i don't see any contradictions in this point of view. you can try to refute it."
1162203459,15769,sledgehammer999,2022-06-21T19:02:55Z,"so you're talking about the case where icons are embedded, right? what about if icons are distributed as extra files alongside the binary? then the binary can stay as gplv2+? (in your pov)."
1162223554,15769,glassez,2022-06-21T19:19:16Z,"yes. to be honest, i didn't think in that direction. but if we draw an analogy with libraries, then dynamically linked libraries are also usually considered part of the program. i don't know why the icon authors chose gpl as a license. as far as i know, gpl is considered unsuitable for such things (i have met mentions of it somewhere)."
1162231088,15769,glassez,2022-06-21T19:25:43Z,"is it so important? imo, the main thing is to continue qbittorrent development without changing license. in this case the license of distributed binary is just a formality."
1162259223,15769,glassez,2022-06-21T19:47:21Z,the another situation is when qbittorrent doesn't require these icons and distributed without them. then it can be distributed under its original license. and the user is free to obtain any icon pack he wants and use it with qbittorrent.
1162644783,15769,Chocobo1,2022-06-22T05:04:01Z,"and if we use the current mechanism of qbt themes, we'll face another problem (iirc): the compiled theme pack is not universally compatible with all qt versions. this is a big problem in the linux world where every distro stays on different versions of qt. and when distro updates it, that theme pack is also required to be recompiled with newer qt versions in order to be compatible. bundling/embedding icons in the binary has the least problem in this regard."
1162650995,15769,glassez,2022-06-22T05:13:53Z,"now you can use ""theme as a folder"". well, if my conclusions above are correct, then we can do it. but we still have to change the license information distributed with binaries to explicitly indicate that the entire package is distributed under gplv3, but the source codes are (separately) available under gplv2+."
1162793011,15769,Chocobo1,2022-06-22T08:14:29Z,"in short, the final result would be like this: * binary package: gplv3+. although i have no idea how to announce this. maybe just mention the icons are gplv3+ in the root `copying` file? * source code, tarball, zip, git repo: the icons are gplv3+. other source code are gplv2+."
1162810688,15769,glassez,2022-06-22T08:31:47Z,"aren't icons under gplv3 (w/o ""and later"")?"
1163527590,15769,sledgehammer999,2022-06-22T19:38:09Z,is it a viable alternative to consider stopping embedding the icons and start distributing them as separate files?
1163528175,15769,sledgehammer999,2022-06-22T19:38:53Z,in the same installer/dmg/appimage/etc package ofc.
1163905726,15769,Chocobo1,2022-06-23T04:11:21Z,read this: [a link]
1163909997,15769,Chocobo1,2022-06-23T04:19:02Z,"not sure about others, in linux installing the icons to ""/usr/share/qbittorrent/icons"" seems viable to me."
1163928365,15769,glassez,2022-06-23T04:56:53Z,isn't appimage considered as a single executable?
1164373172,15769,glassez,2022-06-23T12:54:27Z,"that's what i realized by reading licenses, faqs and discussions. it is not prohibited to distribute (convey) several products/works under different licenses via the same medium, archive, repository, etc. if there is a clear separation between them, for example (they may be located in different folders). since the qbittorrent source codes do not depend on specific icons, we can safely have icons under a different license in a separate repository folder as a separate work/product (i think we should put a separate license statement there, plus a top-level statement should indicate which products are contained in the repository and their licenses). when someone combines the source code with these particular icons into a single product (e.g. by building executable), then such a product can be distributed taking into account the license requirements of all its parts (source codes and icons), i.e. it will have a gplv3+ license (this will not affect the sources in repo). i don't think it will help you distribute qbittorrent executable under gplv2+ as long as the icons are an integral part of the application. i think the only way to avoid the impact of their license on the executable being distributed (if this is a prerequisite for you) is to distribute icons separately as an ui theme."
1164462693,15769,Mazino-Urek,2022-06-23T14:14:52Z,"i need to make a list of them, i am waiting for core devs to decide on the final direction. i can assure you there is no icon other than, `la-capitane` and `ionicons`. i have created some icon myself, none has been taken from any other source."
1164516933,15769,xavier2k6,2022-06-23T14:57:57Z,was `force-recheck` not `font-awesome`? or maybe it was a suggestion to use that style......
1164560538,15769,ghost,2022-06-23T15:31:24Z,why not make all icons from scratch and get rid of licensing issues? it seems to have become way complicated with these different licenses.
1164569422,15769,xavier2k6,2022-06-23T15:38:42Z,"i suggested that previously, we could use just one source `fontawesome` like we did previously or a `fotntawesome/ionicons hybrid` or alternatively as well look for alternative sources. we'd already be creating another pr anyway to address the theming backwards compatibility & webui icons issues......could kill 2 birds with the one stone if new pr tackled all these."
1164604681,15769,Mazino-Urek,2022-06-23T16:08:25Z,"as far as i know i really didn't try to take icons from other project, if it is just one it can be replaced. i respect whatever decision core developers and community make. however, if the decision is to totally start from the scratch, i can't be part of that process. i neither have that time nor energy. i have tried my best here, and tried to meet everyone's need. i can't continue this again and again. this project can use the icons i have created on the process or modified."
1164614022,15769,sledgehammer999,2022-06-23T16:17:04Z,(and other people) ok. i understand that licensing the **binary** distributions of qbt as gplv3 is the more viable solution. (if this pr is merged) -im would it be hard for you to enumerate the icons which are based on `la-capitane`? can you at least estimate their number? if they are low enough we could elect to partially merge this pr and replace the `la-capitaine` icons at a later date.
1164629633,15769,xavier2k6,2022-06-23T16:32:43Z,see [a link] we had used a variant of time previously from `ionicons` which has `mit license` reference: [a link] these could be tweaked again?!
1164632775,15769,sledgehammer999,2022-06-23T16:36:01Z,only those? those are quite few and could be replaced with non-gplv3 versions.
1164651931,15769,Mazino-Urek,2022-06-23T16:56:38Z,"give me a bit of time, i will provide the complete icon source list."
1164684622,15769,Mazino-Urek,2022-06-23T17:31:37Z,"complete list: **la-capitaine:** `application-rss+xml, application-x-mswinurl, connected, disconnected, checked-completed, configure, edit-copy, edit-rename, folder-documents, folder-new, folder-remote, go-bottom, go-down, go-top, go-up, hash, inode-directory, insert-link, kt-magnet, media-playback-pause, media-playback-start, media-seek-forward, network-connect, object-locked, queued, ratio, reannounce, slow_off, slow, speedometer, system-log-out, tags, task-complete, task-reject, tracker-error, tracker-warning, trackerless, trackers, view-categories` **ionicons:** `application-exit, collapse, dialog-warning, edit-find-user, edit-find, filter-all, firewalled, help-about, help-contents, ip-blocked, list-remove, loading, mail-folder-inbox, name, network-server, office-chart-line, plugins, preferences-desktop, preferences-other, preferences-system-network, security-high, security-low, set-location, torrent-creator, user-group-delete, user-group-new, view-preview, view-refresh, view-statistics, wallet-open, webui` **font-awesome:** `force-recheck` (i have no idea, how it got in) **my own:** `downloading, edit-clear, error, filter-active, filter-inactive, filter-stalled, kt-set-max-download-speed, kt-set-max-upload-speed, list-add, preferences-web-browser-cookies, stalleddl, stalledup` i have also chosen to include some of my icons in their original origin, although i have modified them so much, they can be considered original."
1164747752,15769,xavier2k6,2022-06-23T18:42:02Z,`la-capitaine` **x39** `ionicons` **x31** `font-awesome` **x1** `my own` **x12** it's alot for `la-capitaine` in terms of licensing woes perhaps......
1165760694,15769,xavier2k6,2022-06-24T16:58:29Z,we are allowed to use `cc0 licensed` images in our project if i understand that correctly yes?!
1166197083,15769,Chocobo1,2022-06-25T05:27:32Z,"seems so, it is listed on this table: [a link]"
1166553812,15769,sledgehammer999,2022-06-26T14:45:24Z,"let's summarise a bit: it is my understanding that there is no objection to the following solution: 1. merge this pr 2. do necessary work to mention that binary releases are gplv3 and that source code is gplv2+ 3. explore possibility for future replacement of gplv3 icons if i am correct in my summary, then i'll go ahead in merging this in the next ~24hours. ps: step 3 is not mandatory for making a release."
1166567014,15769,xavier2k6,2022-06-26T15:37:49Z,this can be done by using icons with `cc0 license` via a source like [a link] example: [a link] [a link]
1169195858,15769,sledgehammer999,2022-06-28T20:23:17Z,so i am going ahead and merge this according to the afforementioned plan. thank you goes to -im and everybody else who participated in the pr (and its previous incarnations).
1169545776,15769,Mazino-Urek,2022-06-29T05:22:02Z,"this is a tear-jerking moment for me. it has taken too long, and i had no idea it would have been this hard when i made the first pr in 2018. special thanks to, , without his contribution and feedback, this project would have been severely lacking. i was adamant about changes at first, and thought my version was the best version. with hindsight, i can safely say, i was mostly wrong. but, i can safely say, i have laid down a foundation, which will make future work easier. thanks a lot, everyone, it has been a wild ride."
1169954635,15769,xavier2k6,2022-06-29T13:04:19Z,-im you're most welcome.
1170073966,15769,Pentaphon,2022-06-29T14:44:12Z,-im are you guys going to remove the linux system icons checkbox altogether or leave it unchecked by default? [a link] probably should be addressed now that your pr is going to 4.5 for sure.
1170233163,15769,Mazino-Urek,2022-06-29T16:50:46Z,"it should be removed. but, i don't have the necessary skills to do that. i will make an attempt though."
1331271493,15769,notevenaperson,2022-11-29T20:39:56Z,it's over
1331357042,15769,sheeit,2022-11-29T21:42:52Z,"no hate, but i really prefer the old theme, to be honest."
1331734439,15769,sheeit,2022-11-30T07:16:56Z,"i would just like to emphasize that i was in no way blaming anyone or belittling their effort. i was simply expressing my personal opinion (which, granted, is not really needed at this point). maybe i'm just too resistant to change, but it would've been nice to leave the option to use the old look. i only noticed the change after upgrading to 4.5.0, which i assume is the case for most users. anyway, you're right, this is definitely not the place or time for this discussion, now that it's merged."
1374586190,15769,BEEFY-JOE,2023-01-07T19:35:44Z,"hello, correct me if i am wrong, but the svg image format can be leveraged as an attack vector. svg images are capable of executing arbitrary code embedded within the image [a link] [a link] [a link] i understand the benefit from a graphics designer standpoint of using svg for its superior scaling capabilities, but as we see in these examples svg image files are a known and used attack vector for malicious attackers. would it not make more sense to convert svg images to more secure image formats that cannot execute arbitrary code from the browser?"
337502679,7610,glassez,2017-10-18T08:29:53Z,"as this is a major update, proposals to change any other api method names are welcome."
337526142,7610,zeule,2017-10-18T09:37:11Z,why did you change 'command' to 'api' prefix?
337533359,7610,glassez,2017-10-18T09:58:18Z,"not only 'command'. now all api methods are under `api` prefix. all other paths are considered as regular files. having subprefixes is meaningless, imo. besides, the web developers mixed/confused it in the current code."
337655996,7610,WolfganP,2017-10-18T16:53:34Z,"thx a lot ... again. as per [a link] i assume it can be enabled at run time via the preferences file, right? what i couldn't detect from the commit is if the alt webui is cached somehow at start, or it can be interactively changed while running and be reloaded on page refresh... could you please confirm? thx again! do you mind to open a repository for your current alt webui so we adapt it and avoid starting from scratch?"
337657039,7610,naikel,2017-10-18T16:56:57Z,"my webui has almost nothing implemented only the transfer list!! not even stop/start buttons! sadly i haven't got the time to implement more features, but it uses reactjs and bootstrap for look n' feel and menus and stuff (and jquery as well)."
337660940,7610,glassez,2017-10-18T17:10:17Z,", you can enable alternative ui either during runtime via preferences (e.g. via options dialog) or via configuration file editing (when application is not running)."
337663613,7610,glassez,2017-10-18T17:19:53Z,"afaik, the application use file translation that caches already translated files. so if you switch to another ui source folder you can refresh, but if you update files in currently used source folder you need to restart the application. unless i missed something... need to be tested."
337933580,7610,glassez,2017-10-19T14:53:36Z,pr updated: improve web ui translation code (retranslate changed ui files).
337933910,7610,glassez,2017-10-19T14:54:34Z,", fixed."
337934862,7610,zeule,2017-10-19T14:57:32Z,"i did not read the pr completely, but already want to know what could you, , comment on the following. i can't see how we separate a web ui from qbt http api."
337937630,7610,glassez,2017-10-19T15:06:13Z,"what exactly do you want to know? how is it separated in the code? or in the request path? the paths starting with `/api` is handled as qbt http api requests. all other paths handled as some kind of http source files. default path (`/`) has special meaning; if session isn't active yet we send `login.html`, otherwise `index.html`."
337945506,7610,zeule,2017-10-19T15:31:15Z,"consider yet another qbt api, which differs from the http one mainly by marshaling scheme. for example, dbus. should there be an object `qbtremoveservice`, one would just add another marshaling and export scheme. but right now the http service and ui are quite bound to each other."
337951188,7610,glassez,2017-10-19T15:49:06Z,"ok. i think i undestand you. this is a long-existing behavior. this pr is not to change it. honestly, i don't imagine how to unify it. currently web api methods mainly doing a little service work: analyze the received parameters and (based on it) execute some command or sending some data. when someone starts to implement a different api, it will be clear what code can be reused."
338165005,7610,zeule,2017-10-20T10:08:41Z,": when opening via localhost and authentication for localhost is disabled in options, the ui is broken until actual authentication is performed."
338262595,7610,glassez,2017-10-20T16:53:57Z,fixed.
338290378,7610,glassez,2017-10-20T18:42:20Z,", , the two remaining questions: 1. should we provide alternative ui as a replacement for the built-in one (as it is implemented now) or both built-in and alternative (if enabled) simultaneously? 2. should we allow to configure alternative ui source location or just have the predefined one (e.g. `$qbittorrentdatadir/www`)?"
338300846,7610,WolfganP,2017-10-20T19:26:34Z,"just a quick question to start testing. if i want just to initially replicate the core webui copying the files at the src/webui/www folder in github, what preferences/webui/rootfolder should point to? /www or /www/private or point to the start html file (ie /www/private/index.html ? thx."
338365456,7610,glassez,2017-10-21T05:27:44Z,", please wait until i get to finally determine the structure of the file locations. now please give your answers to the questions from my last comment above. i'll provide instructions how to start with copy of built-in ui later."
338376532,7610,Chocobo1,2017-10-21T08:55:01Z,"i think they should not be enabled simultaneously, in case the user forget to turn off the alternative and leaving it as a security hole (assuming the alternative one had a hole in it). i think it's preferable to let user to point wherever they want. also, it should be much secure if the public, private folder model is adopted, one can just point to a folder which contains the public & private folders. and it is easy to see what is shared to the open web and what is not."
338379726,7610,zeule,2017-10-21T09:56:13Z,"+1, that would mostly remove the hole."
338387487,7610,WolfganP,2017-10-21T12:05:28Z,"as i commented my experience with utorrent miniui in my op ([a link] i prefer both to be present simultaneously just in case anything goes wrong with the alt webui (assuming core webui will be always present and rock solid), with altui being an extension of the current one (ie http:// :8080/altui/ ). maybe considering it an extension of the core one will also solve security concerns with off limits navigation and the like. my take is the easier, the better. if limiting the files location improves other areas (ie code simplicity, security, etc) then i'll go for documenting the decision in the code, implement a fix location and let the user accommodate to the restrictions."
338392089,7610,glassez,2017-10-21T12:48:25Z,i didn't understand what you mean...
338392666,7610,WolfganP,2017-10-21T12:57:14Z,i assume refers to block any attempts to be able to navigate to [a link] or similar...
338392873,7610,glassez,2017-10-21T13:01:06Z,1. copy `$(qbittorrent-repo)/src/webui/www` to any location 2. copy `$(qbittorrent-repo)/src/icons` into `public` subfolder of the folder copied above and rename it to `images` 3. point `preferences/webui/rootfolder` to the folder copied above
338392950,7610,glassez,2017-10-21T13:02:33Z,it's already done (even in legacy code). we forbid any path containing `..` in it.
338393005,7610,glassez,2017-10-21T13:03:33Z,pr updated.
338456971,7610,glassez,2017-10-22T07:08:27Z,pr updated. filesystempathedit is used in optionsdialog.
338467568,7610,zeule,2017-10-22T10:37:22Z,"no, i mean that when alt ui directory is set, qbt returns contents of any file from that directory, whether it is part of the ui or not."
338471725,7610,glassez,2017-10-22T11:54:50Z,"qbt can't know exactly whether some file is part of the alternative web ui or not :) this statement isn't understandable, as i said before. ""setting alternative ui path to any of its parent directories"" is nonsense. current behavior is: 1. when request is from unauthorized user we return files from ""public"" subfolder only (i.e. ""$altui/public""), 2. when request is from authorized user we return files from both ""private"" and ""public"" subfolders (i.e.""$altui/private"" and ""$altui/public""). what should i change?"
338502149,7610,zeule,2017-10-22T19:21:58Z,"and that is exactly the problem. sorry, i try to reword into a positive form: qbt may return only files of its web ui in response to any http request. if alt ui directory is set to '/', it is possible to get contents of any file readable by a local user. even a misconfigured web application must not allow to use itself as a free gateway to the file system. i see no sense to repeat these obvious things over an over here. , if you don't agree to the aforesaid, i suggest you to read an introduction to network security of your choice. sorry, i'm not able to give you even a brief overview of the topic in a github pr thread."
338545291,7610,glassez,2017-10-23T04:32:06Z,"agree. but it isn't application wide problem. it can't be resolved at our code level. web server can't know exactly whether some file is part of the web application or not unless the user (web server/application admin) declare it in some way. so we take this assumption as a basis (as is done everywhere). we just assume all the files from directory pointed as qbt altui root folder are part of altui (even more, only from private/public subdirectories of it). if you think that's not enough, what can we do else? for example, we may rely on some config file in altui root (e.g. `.qbtwww`) containing more exact declarations. unfortunately, i can't imagine a way to differentiate whether app is misconfigured or that's exactly what user want. there are many problems in the world that have no solutions (at least, no acceptable solutions). what i suggest, is used everywhere. i did not invent and do not want to do it. if you know any other acceptable method, just show it."
338615447,7610,zeule,2017-10-23T10:23:50Z,"qbt is not a web server, such functionality is not expected from it. at a glance the very first version looks like a trojan software. now, with public & private sub-directories it is much better, of course. however, i did not find checks for symbolic links that point out from these directories (for files and for the public/private dirs themselves). user wants an alternative web ui, which is located in a set of files. we just need to isolate this set explicitly (using directories, for example) and that is. fortunately, the problem of creating a safe theming for a web application one is not one of those. sorry, i'm not aware of this ""everywhere"". of course an acceptable method is widely known and i suggested it from the very beginning: the application should look for ui files in a pre-defined set of directories and put an attention on symlinks (and other special file types)."
338760869,7610,glassez,2017-10-23T18:54:35Z,not just theming but the web application itself.
338980250,7610,Chocobo1,2017-10-24T12:55:53Z,this is looking real nice! i'll find to test it.
338981344,7610,glassez,2017-10-24T12:59:48Z,the one more question. i have stripped subpaths in api calls (since they was misused/confused). should i fix/rearrange it instead?
338984885,7610,Chocobo1,2017-10-24T13:12:00Z,"you mean something like `command/setglobaldllimit` -> `api/setglobaldllimit`? i don't think it matters. also i keep forgetting, you should also update the api document in the wiki too, i mean update the current content and paste it to a new page, then obsolete the current page."
339043111,7610,glassez,2017-10-24T16:06:23Z,"i think, it should be done after merge into master."
339062270,7610,glassez,2017-10-24T17:06:53Z,"symlinks can be a problem in case of distributed webui packages. afaik, symlinks can be extracted from archives."
339066246,7610,glassez,2017-10-24T17:19:53Z,"pr updated. added checking for ""bad"" symlinks."
339067133,7610,glassez,2017-10-24T17:22:56Z,", please review this pr."
339085623,7610,lgallard,2017-10-24T18:24:35Z,"while apps can use the old api commands it's okay. i would set the legacy behavior as the default, this way developer can get used to the new api and current 3rd-party apps won't break/crash . then if needed future releases can set the new ui/api as the default. thanks for your notice. if the api will changes i would like to know to adapt the android app."
339099077,7610,glassez,2017-10-24T19:10:01Z,"i had not intended to add new api beside the old one. when this pr is merged, only the new api will be accessible. however, this should not require major changes of client applications, only the names of the api methods. you can check api version and select api method names format to use, if you want to support both new and old api. of course, outdated applications will be broken."
339247795,7610,glassez,2017-10-25T08:00:23Z,"i can, of course, support both new and old names (having some performance loss, relatively small), but i'm afraid this temporary solution will become permanent."
339249682,7610,glassez,2017-10-25T08:08:18Z,pr updated. all symlinks inside www root folder are rejected now.
339278995,7610,Chocobo1,2017-10-25T09:58:34Z,"we should compensate this by providing a test build/binary for webapi devs, at the time when pr merged."
339302111,7610,zeule,2017-10-25T11:40:30Z,it can be announced in advance when (with what version) the old api will be gone.
339317786,7610,glassez,2017-10-25T12:45:08Z,"it can be done without both api supporting. once the main contradiction of this pr will be solved, we can assign the version of the new api release, and announce it."
339318338,7610,lgallard,2017-10-25T12:47:26Z,is there any pre-release available? this way 3rd-party programmers will be able to check their integrations!
339329449,7610,glassez,2017-10-25T13:27:55Z,", what do you say about this pr?"
339631881,7610,Chocobo1,2017-10-26T11:09:20Z,"now it seems easy to add a new private webapi: `getavailableapi`, which will return all available api names: [code block] this isn't required to this pr, so i'm just asking. --- also i've finished testing this pr, only minor issues left as i listed above."
339686005,7610,glassez,2017-10-26T14:33:25Z,"""public"": [""api1"", ""api2""], ""private"": [""api3"", ""api4""] } one of my goals of this pr is to make the webapplication code more declarative (using as much qt builtin features as possible). now all you need to add a new api method, is to declare the corresponding webapplication method (annotated with public_api to make it public). if api enumeration is really needed for some reason i would implement it using qt meta object system as well."
339868696,7610,Chocobo1,2017-10-27T04:22:27Z,"i was exactly thinking about that too. also i think api enumeration is convenience for webapi devs, this should be on todo list."
340276627,7610,glassez,2017-10-29T16:53:58Z,ok. i will implement compatibility layer.
341361173,7610,glassez,2017-11-02T09:16:37Z,pr updated. built-in webui html switched to html5.
341886836,7610,glassez,2017-11-04T10:33:41Z,"pr updated. added old api compatibility. note: i send version info in new format as a response for both old ""version/api"" and ""version/api_min"". should i send some backward compatible responses (e.g. 16 as current api version)? i don't like this idea since we have to maintain two version numbering while we have compatibility layer."
341890226,7610,Chocobo1,2017-11-04T11:38:22Z,"how long this compatibility layer is going to stay? not sure either, but the point of compat layer is being compat..."
341890549,7610,glassez,2017-11-04T11:45:04Z,i don't know. personally i wouldn't have it at all. maybe until next minor release (v4.1)? ?
341921227,7610,glassez,2017-11-04T18:54:32Z,pr updated. added api for rss subsystem.
342133756,7610,glassez,2017-11-06T12:25:52Z,"send old-style version for legacy requests (""/version/api"" and ""/version/api_min"")."
342182931,7610,JackDandy,2017-11-06T15:27:38Z,"hi people, this thread is a little long for me to get a good grasp of, so apologies if what i say is already taken care of. the golden rule for an api is never change the i/o interface (unless adding something that wasn't there). imagine the api shell copy command, what if someone decided to rename `copy` to `dupeit` thus breaking all scripts and os functions that rely on `copy`. to prevent sudden overnight breakage and a nightmare for qb users, whereever api endpoints are being changed from `fred` to anything that is not `fred`, then method `fred` should be kept to instead pass its input params to `apinewfred(...)`, and output in exactly the same way as always. then, `apinewfred` can output differently, as long as `fred` realigns that output into what `fred` output originally (even dropping new detail if required) -- this way, developers or script writers can read your api changelog news and have time to implement `apinewfred` changing 3rd party code to facilitate new output, time even to give feedback on new and improved functions. but `fred` must continue to return expected data structures for a stable eco system. this is a smooth gentle way to deprecate a function over time. ""_but i don't like those old function names_"" - fine, move those interfaces to a file you never touch, import it, and then you can forget about it - perfect for stability. this applies to every external facing endpoint url and parameter, whether that be rss, rest, rpc, whatever technique is used, stability comes first for the users and for the developers supporting the tool ;) that's my 2 cents, thanks for reading."
350556605,7610,glassez,2017-12-10T15:37:02Z,", i've found some inconsistencies in webapi. currently actions handle parameters and return result in a different way. some of them use json, the others use different format. the lists are encoded also differently, values are either separated by '\n' or '|', etc. should we care about it and normalize it here or leave it as is (at least in apiv2)?"
350606933,7610,Chocobo1,2017-12-11T02:25:38Z,i would chose to leave it for now.
352264140,7610,glassez,2017-12-17T15:36:37Z,", , , i think that the main work is completed, it remains only to identify and eliminate defects. you can start to review now. finally i merged abstractwebapplication with webapplication classes since it seems this was an unreasonable splitting what has not been done: i'm still not extracted scopes into separate classes (this can be done later if you must). i am experiencing a _critical lack of time_ for the project, so i fear it will not be completed if i continue to add something here (so i ask you not to get to less important things when you review this)."
354020319,7610,sledgehammer999,2017-12-26T22:32:19Z,"since i don't care much about webui, you can proceed based on the others' comments. ps: i also ""approvefeature"" of allowing alternative webuis to be loaded."
354062597,7610,glassez,2017-12-27T06:47:03Z,", waiting for your review. it seems like is not available now."
354646762,7610,glassez,2018-01-01T10:32:51Z,", i hope i addressed all your current comments."
355043366,7610,Chocobo1,2018-01-03T15:40:49Z,"i've skim through the rest, seems ok. if you have code pieces you wish me to review, let me know."
355048998,7610,glassez,2018-01-03T16:01:06Z,"i have no specific code pieces for review. i still want to implement separate ""webapi scope controllers"" (but in the one of following prs) so some of the current code is in ""semi-final"" state now. i would be very thankful if you helped me with testing. overall, it works, but you need to do a final check and to see ""fresh"" look."
355904622,7610,Chocobo1,2018-01-08T08:17:16Z,there are merge conflicts.
356611826,7610,glassez,2018-01-10T14:07:00Z,", i'm here again! i had some free time so i decided to implement some more changes. please look at this again (hopefully for the last time in this pr). i finally implemented the api scope controllers and move appropriate logic from webapplication class to these controllers. i also changed (simplified) the action declaration logic (now without any tags, just any controller slot ended with ""action"" is action, public actions declared in webapplication explicitly). i also made some more structural changes. in fact, i need to make more of them, but i already ran out of time (i don't know when i'll be able to come back to this)."
357967881,7610,glassez,2018-01-16T13:57:05Z,", ping!"
361040512,7610,Chocobo1,2018-01-28T05:55:41Z,urgh... this change set has become so large that github couldn't open diff for some files...
361041340,7610,Chocobo1,2018-01-28T06:19:29Z,"although cmake builds can fail, you should try fixing errors in it: [a link] this also appears as warning in my local machine."
361054996,7610,glassez,2018-01-28T11:14:17Z,"should be fixed now. moreover, i have some new changes on top of it, so we need review+merge this pr as soon as possible otherwise it will be ""unreviewable""."
361069069,7610,Chocobo1,2018-01-28T14:57:37Z,"i'll just comment here instead: please replace to the dumb `if (!findapicall()) findlegacyapicall();`, took me a few seconds to see what is beneath the surface."
361074551,7610,glassez,2018-01-28T16:16:58Z,replaced
362386683,7610,WolfganP,2018-02-01T20:08:52Z,i'm eagerly waiting for this pr to be merged to master to start experimenting with alternate webuis and while trying to asses how stable will be to merge it in my local dev env; i looked back at the blocker issues ( requesting changes) and it seems the original request goes back to oct 22nd 2017. i understand those root browsing concerns were superseeded with the subsequent commits?
362472605,7610,glassez,2018-02-02T03:06:55Z,", this pr is ready and it will be merged once v4.0.4 is released."
366160236,7610,glassez,2018-02-16T07:10:34Z,thanks to all the reviewers!
366267285,7610,WolfganP,2018-02-16T15:29:57Z,"excellent work, thx a lot to all devs and reviewers. do you mind to briefly document how to run an alternate webui? (ie files names and locations, program switches / config entries, etc etc) my first test will be copy the existing core webui files to a new location and run them as alt, and then start modifying them, but just want to make sure i run them as intended by this feature. thx again!"
366848642,7610,Piccirello,2018-02-20T02:19:24Z,"can you document the updated api urls on the wiki? this will be really useful for other applications that make use of the qbittorrent api. also, is it a good idea to introduce such a major api overhaul with a minor version bump? 4.1.0 seems far more appropriate."
367431756,7610,WolfganP,2018-02-21T18:54:44Z,"i fiddled a bit with the current api documentation in the wiki and made sure each article explicitly states which version it applies to, updating also the home page in preparation for whatever documentation comes up for this new release. i also created [a link] to start documenting the feature and its usage (ie files names and locations, program switches / config entries, etc etc), which i'll initially work out from the current code but it will need a review from for sure. i agree with that this api overhaul should be tied to a major version rather than a v.4.0.5 minor one."
367558857,7610,Chocobo1,2018-02-22T03:48:10Z,"please revert the document title (the current api one), as it is tied to the page url and someone might already bookmark it. you can still keep the displayed link in home page. great! you might want to pick a title that needn't be changed for some time, e.g. ""how to use alternate webui"" or just ""alternate webui"". and nitpick, it's webui instead of webui."
367662869,7610,WolfganP,2018-02-22T12:15:47Z,changes done!
367674762,7610,glassez,2018-02-22T13:06:36Z,"guys, what exactly is your concern? legacy api is still available (via compatibility layer) and it will available, at least, until v4.1. of course, i'll do it when i have some time for this job."
368637110,7610,Piccirello,2018-02-26T20:22:12Z,"a majority of the legacy apis are no longer working. with some quick testing, i was able to identify these as broken (non-inclusive): * /command/* (`m_apilegacypathpattern` doesn't contain the path ""command"") * /version/api * /version/api_min * /version/qbittorrent (log contains `file :/www/public/version/qbittorrent was not found! `) * /sync/torrent_peers * /query/torrents * /query/propertiesgeneral * /query/propertiestrackers * /query/propertiesfiles * /query/getpiecehashes * /query/getpiecestates please test all of the legacy apis to catch any additional ones that are broken."
368727865,7610,glassez,2018-02-27T02:44:16Z,ok. i'll fix it. thank you for testing.
368956674,7610,glassez,2018-02-27T17:22:14Z,"/version/api_min fixed via `qstring::number()` fixed via fixing regexp (for some reason i put ""control"" instead of ""command"" there) /query/propertiesgeneral /query/propertiestrackers /query/propertiesfiles /query/getpiecehashes /query/getpiecestates work for me. fixed."
368960374,7610,glassez,2018-02-27T17:33:09Z,", see #8515."
371060057,7610,Piccirello,2018-03-07T08:21:52Z,"it looks like [a link] is no longer used, and its logic migrated to `synccontroller::maindataaction()`. this would mean we can get rid of `transfercontroller::infoaction()`. can you confirm?"
371064612,7610,glassez,2018-03-07T08:40:23Z,"if some api isn't used in official web ui, it's not a reason to drop it out. some other apps may want to use it, or may want to use it in the future."
371329974,7610,Piccirello,2018-03-08T00:03:24Z,"good point, it makes sense to leave it in."
372115812,7610,glassez,2018-03-11T13:31:23Z,", , , the documentation for new api is [a link]. i followed the style of legacy api documentation, even though i don't like it (i have no time to mess with it). please correct any errors or inaccuracies you have noticed."
372116430,7610,WolfganP,2018-03-11T13:40:43Z,do you mind to get a quick review & editing to this article [a link] so there's a base in the docs for those who want to start fiddling with alt webuis?
572816586,7610,ngodber,2020-01-10T00:18:39Z,"is there a recommended/durable/invariant method to check appropriate webapi to use? i'm a tad confused as it seems you need to know/guess the correct api to use to check the webapi version, eg ![a link] vs ![a link] or am i misunderstanding something?"
623166493,12746,FranciscoPombal,2020-05-03T19:24:07Z,"~note: until i rebase, please don't submit full fat reviews~ done"
623168940,12746,jagannatharjun,2020-05-03T19:39:56Z,"hi, i left some comments, since recent cmake changes affected me too much and i think i'm the only one who actually uses cmake regularly with qbittorrent, so i chipped in, hope you guys don't mind. sorry i missed this"
623169219,12746,jagannatharjun,2020-05-03T19:41:48Z,cmake automatically adds this based on generator.
623171952,12746,FranciscoPombal,2020-05-03T20:00:49Z,"no problem at all! if i had known that, i'd have tagged you as well in the op. i've also been building qbittorrent with cmake exclusively for a while (on linux). this was not my experience, but i will test again. perhaps vcpkg is also fiddling with the flags? we'll see... no sweat. :+1:"
623275457,12746,NotTsunami,2020-05-04T06:08:15Z,"initially i was using qmake, but i started using cmake as well right before i submitted my cmake prs. this is a very big change, and at a glance there might be a few things to extract into separate prs or commits. tomorrow i'll disect this and review."
623537587,12746,FranciscoPombal,2020-05-04T15:36:27Z,"i guess it would be convenient to split this up into different commits (and i'll try to that), but this is such a big change that i'd encourage you to look at the overall result rather than each individual change. the goal right now is to get feature-parity with the current cmake scripts, while using the most modern features possible that enable us to simplify the implementation. the hope is to facilitate work in follow-up prs that, in this order: - move to a more target-centric build approach - reach feature-parity with the qmake build system - add additional features, mainly the ability to build installers for the windows and macos platforms using cpack a good, simple build script system enables one to quickly visualize and reason about the high-level architecture of the project and its dependencies. this is what the dependency graph looks lke currently on ubuntu 18.04 (ouput of `cmake -s . -b build --graphviz=build/graph/graph.dot` visualized with `xdot`; the red color has no special meaning, it merely indicates the currently selected node at the time the screenshot was taken): edit:obsolete. see new graph: [a link] ![a link]"
623580610,12746,glassez,2020-05-04T16:53:41Z,cpack related stuff is definitely an alien here.
623588211,12746,FranciscoPombal,2020-05-04T17:08:27Z,"any sort of proper discussion about it is pretty far into the future at this point anyway. i'm just floating the idea, haven't looked into it in depth either."
623599461,12746,zeule,2020-05-04T17:30:43Z,"out of curiosity, what will replace it for macos in the meantime, since you remove the deployqt utility?"
623605128,12746,FranciscoPombal,2020-05-04T17:41:37Z,"that's definitely a hole in the plan, good point. i guess at least for macos the cpack stuff will have to be done before, as i don't think saying ""just use the qmake build in the meantime, bro"" is a good solution."
623690228,12746,zeule,2020-05-04T20:33:20Z,"would be super fun to read, as i used to hear and read similar opinions some 20 years ago from people fighting encapsulation principle, as well as from those from the pro c (and anti-c++) camp, but not in 2020. nowadays things like that sound just scary. you'd better harry up until turn the cmake build program into a doppelganger of the qmake one, with the only a single target for the executable. :d `verbose_configure` turned off by default is, frankly speaking, a stupid idea, because the verbose output is what you need from users when build fails. it would make sense if there will be a way to show the full log in case of a compilation/installation error. what's the point of printing out default values for options? do you think people can't recall did they just run cmake with additional flags or not? and if you really want to produce that noise on output, why it's done manually? you pass the default value to the `feature_option`, it can print it out for you."
623707962,12746,FranciscoPombal,2020-05-04T21:11:11Z,"i hope you're not saying you did not read the files at all. i may not have expressed myself clearly enough in those bullet points, and you might be getting a distorted picture of what i actually did. but even so, personally i prefer the current technique vs the previous ""feature activation/build by side-effect based on found packages"" that was happening before. my goal was to maximize discoverability and declarativeness: - the configure output always tells you all available options and how they depend on one another + the defaults - the user of the build system just specifies the features they want, the build script figures out the details by itself to achieve the desired feature set. if you have suggestions about how the current patches can be improved without compromising these goals, feel free to share them. i am also open to totally changing my mind about the general direction of the changes, should you present convincing arguments as to why i should eschew these goals completely in favor of some other, possibly completely different ones. thankfully, thanks to the built-in discoverability, the user will automatically know it exists and hopefully use it. it can also be mentioned in the build documentation in the wiki ""if you have problems, turn on this flag"". in case they miss all of that, it's just a matter of having a ""build system"" issue template with a requirement of ""post output of cmake configure with `-dverbose_configure`"". but i don't mind too much if this is on by default. if the majority agrees it should be so, i'll accept it. discoverability. one should be able to know all they need to know without having to look at the build script (unless they explicitly want to hack on it). about the manual part, you're right, i can improve the macro to print the default for me. about the ""noise"" argument, it's minimal noise for the qol it provides, especially compared to what you're advocating about having the ""found package xxx"" spam turned on by default. i'm ok with not having a fully target-based cmake script just now. the goal is to have a ""clean slate"" to start from that can be easily understood, hopefully with feature-parity with the qmake system. the current scripts have too much clutter to efficiently manipulate imo. the idea is: first, simplification; then targets; after that, refinement of targets."
623749679,12746,eli-schwartz,2020-05-04T22:53:16Z,"i checked out this pr and tried configuring, imo it makes it a lot easier to understand what has happened. fwiw, it initially failed to configure until i restored findlibtorrentrasterbar.cmake -- my system libtorrent-rasterbar package is apparently built with autotools instead of cmake, both of which produce pkg-config files... but only the cmake build produces *.cmake files. it should be possible to always find it with findpkgconfig's [code block] and surely you could also add some fallback mode to try both."
623755233,12746,FranciscoPombal,2020-05-04T23:10:32Z,"-schwartz thanks for the feedback. the failure to find libtorrent if it was not built with cmake is expected in the current state of the patch. if i add this as fallback mode, is there any advantage in additionally including `findlibtorrentrasterbar.cmake` locally (and also adding that as a fallback)? so far i was convinced that i _had_ to include it, but if all cases are covered by the regular `find_package` + this `pkgconfig` method, i'd rather not include another big ""blob"" that has to be maintained or at least kept synced with the upstream. however, i suspect that including `findlibtorrentrasterbar.cmake` might still be needed for windows users that are not using `vcpkg`, right? i guess we can always inform the user that they can manually specify libtorrent library/include files locations with appropriate variables, but that's a last resort."
624249980,12746,zeule,2020-05-05T19:10:00Z,"i did read the changeset, but my understanding is that those points draw the final goal. no matter which technique you prefer, those bullets outline a certain view on the build configuration and building this peace of software. and that did not connect with the changes in the pr. then you might consider investing time in `mark_as_advanced()` and `cmake -lh` this is the fundamental task for all build systems and they all solve it in one way or another. a ""noise"" is a signal without information, like those default values, because when i read them i always know already what options i provided to cmake a few second ago. the messages about found packages, on the other hand, can tell about changed dependencies. yes, most of the time there are no dependency changes and the messages are boring."
624307237,12746,zywo,2020-05-05T21:08:34Z,`libtorrentrasterbar_dir` option is not configurable via `ccmake .` command. ps: this pr solves the `cmake_minimum_required()` >= 3.15 slow compilation issue for me.
624326811,12746,FranciscoPombal,2020-05-05T21:53:48Z,"the docs for the `mark_as_advanced()` command say: i don't use cmake guis, so this is not really relevant to my points. it could be useful to prune some low-level details for gui users by default though. if there turns out to be demand for this, i'll experiment with it and try to improve the gui experience. as for `cmake -lh`, it does show the option descriptions for application features (although it does not show the default for the setting, unless you embed it as part of the description like i did anyway). but it also shows many lines with stuff like this: qt5linguisttools_dir:path=/usr/lib/x86_64-linux-gnu/cmake/qt5linguisttools who cares about this? some people under some circumstances do, but most under most circumstances don't. those that do want to see this will know that they have to run `cmake -lh` (or possibly even `cmake -lah`) to see this anyway. i think listing the defaults for the important application features in the main output fills the gap of showing details about important stuff, but not _too much detail by default_. my point here was that you want your build system to some housekeeping on its own, but not to make very important decisions about the application itself automatically. for example, i don't think it is desirable for your build system to do decide defaults for application features based on installed packages. however, there are other things that it is most welcome to decide the defaults for. for instance, it is obviously desirable that cmake do certain things related to toolchain setup based on whether it's running on windows or linux without bothering you too much. imo it is not desirable to build gui by default on systems that have certain packages, and not do the same on others that don't. this hurts reproducibility (although i must state that having fully reproducible builds is not a goal at this point anyway) and most importantly, it makes it confusing to use imo. ""one man's noise is another man's freedom fighter"". or something like that. for most people it is very convenient that the script tells them the defaults. if you were compiling qbittorrent for the first time (or after some time where new options may have been added), wouldn't you like to see the defaults listed so that you know what you may want to override? there's information in this signal for the user of the build script. of course if you already know all options and their defaults by heart, you might not care about this information. yes, the options and their defaults can (and should, regardless) be listed in the documentation. but it's much more convenient this way, and even has the advantage that makes updating documentation easier. if we require that contributors keep the ""default: ..."" text updated in the build script itself, it serves as an authoritative source for the documentation. consider the current wiki article about cmake compilation in the wiki. a lot of the documentation about options and their defaults are very outdated. if this patch goes through, they will be even more so. someone will have to update the page eventually (i don't mind doing it myself). if the configure output lists the defaults, this will be trivial. otherwise, you'd have to go mucking through the script to figure it out (this is especially unpleasant if the defaults change based on packages found). i know what i'd much rather have to do. care to elaborate on the changes you find to be counter-productive to achieving the stated goals? yes, stuff related to `libtorrent` configuration and discovery is lacking right now, i want to address this but have had a few setbacks with my usual environment, apologies for the delay."
624452163,12746,glassez,2020-05-06T05:40:21Z,":+1: this was especially annoying if you need to build ""no-gui"" version in an environment where qtwidgets package is installed."
624771335,12746,zeule,2020-05-06T17:04:05Z,"let me repeat once again: the defaults are obvious from the cmake command that was used to run the configuration. those who have several qt versions installed? that is a significant part of what the configure systems are needed for and what they do, actually. for example, if i have systemd installed, obviously most of the time i want systemd service units from all packages that support systemd. when i have icu installed, obviously it is for software to use it. when i build qbittorrent in a linux environment i want it to detect that and show desktop notifications in the way my de can understand them. maybe the gui/headless switch is not the one that suits this paradigm in the best way, but nevertheless, the find package -> enable feature paradigm it is widely used. let's take a look at the main gentoo package tree. packages supporting cmake usually do that inheriting `cmake-utils` eclass. that gibberish means one can find those packages grep-ing for ""cmake-utils"" in the ebuild (gentoo package format) files. let's do that: [code block] among those 710, 57 contains no user choices (`grep -l 'cmake-utils' | .. | grep -l 'iuse'`, the ""iuse"" variable contains user choices). now, there are 62 packages that use `cmake_disable_find_package` directly (`grep -lr 'cmake_disable_find_package' | cut -d/ -f 1-2 | uniq | wc -l`) and 177 that use it via a wrapper in `cmake-utils` eclass (`grep -lr 'use_find_package' | cut -d/ -f 1-2 | uniq | wc -l`) thus, 239 packages (did not check that no packages use `use_find_package` + `cmake_disable_find_package` but i doubt there are any) out of 653 configurable cmake-based packages use `cmake_disable_find_package`, and this switch is relatively new. and (surprise!) cmake itself relies on `find_package(qt5widgets)` to decide whether to build its gui part. that is what i am talkig about: when i run cmake (e.g. without options), the enabled features are obviously enabled by default, because i did not enable them. the biggest change in cmake 3.0 is the encapsulation. targets became kind of objects which you can set up at one place, and they invoke ""spooky action at a distance"" when used. but you declared a move in the opposite direction as the goal, yet you also declared desire to use the modern cmake."
624936324,12746,FranciscoPombal,2020-05-06T23:06:46Z,"well, i guess that's true, but only as long as _all_ features are listed, both the enabled _and_ the disabled ones. otherwise how can one easily learn about all the available flags? ironically, however, seeing as it is such a widespread practice to surprise the user with feature activation based on installed packages, i think there's still value in informing the user that in qbittorrent's script, these are the defaults and that's it. no surprises. besides defaults, would you expect the user to ""guess"" relationships such as `systemd, (...) depends on condition: not gui`? i think this should also be printed out to the user. in that case you'd have to pass a few flags to select the correct one already, no (i really don't know, i never had more than one qt version at a time in my linux system)? if you're doing that anyway, it's not much more work to pass `-dverbose_configure` also. i doubt the majority of people building qbittorrent have multiple qt versions installed (although i'm aware i'm 100% speculating here). that flag is there precisely to support advanced use-cases. you're not always building for your own system, and even if you are, this way just provides sane defaults. it still tells you all about them so that you may further tailor the build to your needs no offense, but not an argument. what if most of those packages are not following best practices? what if their cmake scripts were written long ago? or what if someone started doing like that _just because_ and everyone else followed suit because it was the done thing? i've stated my logical reasons: don't do surprising things depending on the user's environment, and make it obvious what you need to do to disable each feature. in your way of doing things, suppose you see ""found packages x11, zlib, qtdbus and qtwidgets"" and ""enabled gui, power_management, and notifications"" in the output. even if you know ""oh, i must disable a corresponding package"", can you immediately guess which of those will be disabled by passing `-dcmake_disable_find_package_qtdbus=off` (it could disable more than one!)? i don't think it's very user-friendly. if you want to convince me that your way is better, you'll have to argue with something stronger than ""everybody does it"". if you can link to a book, blog post, video, etc arguing convincingly in favor, i'll be thankful and gladly educate myself on the subject. what move, specifically? i already stated that it won't be in _this_ pr that qbittorrent's cmake build script will fully migrate to just using `target_*` commands. this is just an attempt at simplifying the script, so that the move to a more target-based approach becomes easier, in a follow-up pr. i think so far, the changes will help the migration. for example, previously, the feature options macro called `add_definitions`. now it doesn't, and it will be simpler to convert the resulting `add_compile_definitions` into `target_compile_definitions`. also, the script that added compile options directly manipulated the `cxx_flags` and had a lot of unneeded stuff. now it doesn't, and this will make future changes easier."
624954878,12746,FranciscoPombal,2020-05-07T00:07:53Z,"i can't find (an easy) way to enforce c++ standard based on what libtorrent was compiled with. libtorrent's `interface_compile_features` simply enforces a _minimum_, so even if it says `cxx_std_14`, the user will override that if they set `cmake_cxx_standard=17`. the same would happen if the libtorrent target defined the `cxx_standard` property, it just gets overriden. so what i can think of right now is to: - check libtorrent's `interface_compile_features` early - convert that to the corresponding standard integer - enforce it, regardless of what is set as the default `cxx_standard` or the user passes. it's a bit messy, not to mention that it only covers the case where libtorrent itself was also built with cmake. so i think the current `notice: building in c++xy mode. make sure libtorrent was built with the same c++ mode for abi compatibility.` is what i'm going to go with for now."
624964332,12746,zeule,2020-05-07T00:42:59Z,"two wild ideas. 1. collect libtorrent versions and c++ standard versions that they accept and care about. for example, the current master requires c++14 and this is the latest it knows about. if the found libtorrent version was build with the highest version libtorrent is aware about, qbt can safely use anything newer. 2. a very wild idea: grep libtorrent include files for `__cplusplus ([<>=]+) ([0-9]+)`, find the highest one and then safely use any newer c++ version."
624974771,12746,FranciscoPombal,2020-05-07T01:21:43Z,"i though it was not enough to ensure that c++14 was used as the minimum. i thought it had to be the exact same version (i.e. if libtorrent was build with c++14, qbittorrent shouldn't use c++17). but this belief is based on this comment, [a link] which i may be misinterpreting or misunderstanding."
624978824,12746,zeule,2020-05-07T01:37:40Z,", c++ standard versions are backward compatible ""if it compiles"". the sizes of std types should be the same. if libtorrent uses condition `__cplusplus < 201402`, than there will be no difference between c++14 and c++17, 20, etc., right? if it compiles, of course."
624985491,12746,FranciscoPombal,2020-05-07T02:03:06Z,"i mean i sure hope you're right. comments, please? context: this comment ([a link] and the comment linked within it."
625031380,12746,glassez,2020-05-07T05:05:46Z,"imo, it's generally bad idea to override explicit user choice."
625043558,12746,glassez,2020-05-07T05:51:45Z,"what os/compiler do you use? it really annoys me why it's so much slower than qmake+jom for me (windows 10 x64, qt 5.14, msvc2017)."
625183811,12746,FranciscoPombal,2020-05-07T11:00:00Z,"in general i would agree, but in this case it's done to prevent further problems, and the user would be informed that their choice was not being taken into account. of course, i would rather respect user choice. if it is confirmed that there is no problem with compiling qbittorrent with a later c++ standard than libtorrent/boost, we can do that. not them, but for reference, my environment is: windows 10 1909 latest updates, msvc2019 latest updates, qt 5.14.2/qt 5.12.8, cmake 3.17.2. basically a windows 10 dev vm ([a link] but i also downloaded the latest cmake version (iirc the one that comes with the vm is 3.16.x)."
625231765,12746,zywo,2020-05-07T12:42:53Z,arch linux: qt 5.14.2 gcc 9.3.0 cmake 3.17.2 debian unstable: qt 5.12.5 gcc 9.3.0 cmake 3.16.3
625239324,12746,glassez,2020-05-07T12:58:12Z,can you compare compilation speed between cmake (with and without these changes) and qmake?
625390252,12746,FranciscoPombal,2020-05-07T17:23:24Z,"just tested, qmake clocked about 3:15 (this result is only meaningful in comparison to [a link] which i'd say is about on par with the others. the changes to cmake don't make much difference (or they are within margin of error of my benchmark). i tried to keep the environment as clean as possible for every benchmark run. no weird windows background stuff going on, clean command prompts each time, nothing else running at the same time. i think that's acceptable."
625814423,12746,FranciscoPombal,2020-05-08T13:25:14Z,"well, guess i'll have to rebase on top of [a link] once that's merged."
625951633,12746,Kolcha,2020-05-08T18:23:44Z,"tried to build this on macos, faced next issues: first of all, it **requires qtdbus**, previously that was optional (what i think is more correct) [code block] found because i build qt without qtdbus module for macos (yes, it is available even in official installation, but it completely useless, because there is no server side). d-bus is linux-only system, there is no such thing on macos, maybe this can be installed through homebrew or other similar ways trying to get linux environment on macos. next issue is even more strange - it **asks for x11**... previous implementation didn't ask such things. [code block] many years ago there was possibility to install x11 on macos, but that gone long time ago... again, looks like some remnants of homebrew... successfully overcame these issues adding `-ddbus=off -dpower_management=off` to cmake arguments. there were no such issues with previous implementation. good news that **libtorrent was detected** as expected, no any [a link] are required. what about app bundle content, it is the same as it was in previous implementation - it contains app/file icons, qt translations, and executable itself (+ info.plist, but this required component). qt runtime deployment is required (expected, i don't think that such task is a part of build stage). cmake command line is the same as in [a link]. ready to test any new changes."
626009612,12746,Kolcha,2020-05-08T20:37:21Z,"i noticed concerns about performance, so i decided to test this on macos. everything was tested on the same hardware, with the same libraries and same features set (e.g. webui, stacktrace, etc.). commit used for previous implementation testing is the start point of this branch, at the moment of writing it was ccb9cc632ec530e6824b60d4c7dd4a2c84a867db, so results must be fair. there are some results: build system | build time 1 | build time 2 -------------|--------------|------------- cmake (this pr) | 3:46.71 | 3:40.87 qmake | 4:49.64 | 4:43.68 cmake (previous) | 8:04.80 | 7:59.72 i tested each option twice, each time waited some time until cpu temperature become normal. as you can see, this cmake implementation ~1.5x faster than qmake and ~2x faster than previous one. i noticed slightly strange thing: executable file size varies depending on build system, qmake produces lightest, and this cmake implementation produces heaviest (but very close to previous implementation). i thought that qmake just strips executable, but it is not: build system | not stripped | stripped -------------|--------------|--------- cmake (this pr) | 18.1 mib (19 003 840) | 15.2 mib (15 929 832) cmake (previous) | 17.9 mib (18 811 336) | 15.0 mib (15 737 312) qmake | 14.4 mib (15 149 528) | 11.5 mib (12 076 512) as you can see, difference between executables produced by cmake and qmake is significant - about 4 mib. i didn't analyze compiler flags in both cases yet, i'll do it later, this is just a statistic."
626092396,12746,FranciscoPombal,2020-05-09T02:38:06Z,"thanks for the feedback. i will attempt to address the macos concerns you mentioned later. currently this only happens if libtorrent was also built with cmake because the needed cmake scripts will get picked up by the `cmake_prefix_path` (or alternatively but slightly different, `libtorrentrasterbar_root`) passed to qbittorrent. i think it is reasonable to expect libtorrent to be built with cmake, but if i have time and if it is not too messy, i'll add a fallback to cover the case where libtorrent was not built with cmake on windows. for linux i expect to be able to use the `pkg-config` method mentioned above, which i have yet to test. so far it looks like the current changes work well on windows with or without vcpkg, but i still have some things to test out. about the compilation speed and binary sizes difference: - not sure why you're getting such a huge discrepancy on compile times. could it be probably some macos oddity? either way, not a problem since this version is the fastest - the differences in binary sizes could be due to a multitude of things. if someone has a suggestion of how to remove the extra weight, that would be great, but if not i don't think an extra 4 mib is a big concern. right now i also have to fix an issue that i can currently reproduce on windows and linux: in the about dialog, the ""special thanks"", ""translators"" and ""license"" tabs are blank."
626190582,12746,FranciscoPombal,2020-05-09T15:13:15Z,the macos issue you reported should be fixed.
626194051,12746,FranciscoPombal,2020-05-09T15:38:32Z,rebased accumulated fixes + [a link]
626203047,12746,FranciscoPombal,2020-05-09T16:39:55Z,~i'm also getting warnings in the execution log about failure to load translations. looks like i'll have to address translations and resources in this pr after all.~ [a link]
626230507,12746,Kolcha,2020-05-09T20:21:49Z,"checked, now everything is fine, no mentioned workarounds are required. cmake command line exactly the same as in wiki page, no any additional options. :thumbs_up:"
627008548,12746,FranciscoPombal,2020-05-11T22:55:41Z,"this is the translation error i was getting: however, i'm also getting this error both in the release builds as well as latest master. it only happens when language is set to `english` and does not seem to be of any consequence. just a heads up. so, i've addressed the remaining resource bugs and left the translation stuff as-is in the end. two questions about building in macos: - what is the final directory structure of the build directory on macos? do you get the qbittorrent executable and `.pdb` at top level, in a separate folder, or what? i just want to know if it's ""sane"". - does `sudo cmake --install $your_build_directory` work (you might need `sudo`)? if so, what does it do?"
627232816,12746,Kolcha,2020-05-12T09:44:19Z,"at top level build directory has next content: [code block] as you can see, app bundle is here. there is no .pdb file, such files are win-only. on *nix platforms debug symbols usually built-in in the binary, but they can be extracted. this is possible on linux, know nothing about macos, never saw macos app with separate debug symbols, but some time ago qt was shipped with frameworks which had dbgsym suffix, but now it has debug version of libraries, so maybe it was unusual. tried this without `sudo` (i never run suspicious things with `sudo`, especially something containing ""install""), got next output (i expected something similar, but not so strange): [code block] also tried to change install directory passing `-dcmake_install_prefix` to cmake before build, and set it to user-writable directory. as expected, app was ""installed"", it just copied app bundle to destination directory, nothing more. qt frameworks were not integrated into it (`macdeployqt` was not called). i think, install step is completely useless in case of macos, macos apps are ""portable"" by its nature. only one thing i want to note, that this ""install step"" produces very strange paths (note dot in them): [code block] i passed this ""dot"" as argument for this ""install"" (according to `$your_build_directory` placeholder), `/users/nick/tmp/q` was passed to `-dcmake_install_prefix`. so, i think this argument is not a path to build directory, this a path where to install relative to install `cmake_install_prefix` (e.g. `usr/lib` in case of libs), but this is offtopic."
627236948,12746,FranciscoPombal,2020-05-12T09:52:30Z,"thanks for the detailed reply nice, looks good. sorry, i don't know what `macdeployqt` is or does. do we need it? are you saying that the `.app` is already fully runnable from any directory anyway? so, i think this argument is not a path to build directory, this a path where to install relative to install `cmake_install_prefix` (e.g. `usr/lib` in case of libs), but this is offtopic. you are correct. apparently on macos it defaults to `/usr/local/`. the dot just means `current directory`, right? so it should not matter. or are you saying that passing the `.` to `cmake --install` resulted in a path with a directory literally named `.`?"
627258479,12746,Kolcha,2020-05-12T10:33:46Z,"if qt is build dynamically (usually), `macdeployqt` embeds required qt frameworks (aka libs, but actually they are directories like app bundle) into app bundle. without running it, app bundle can't be launched just due to the lack of qt runtime in it. moreover, `macdeployqt` slightly modifies executable to change links to dependencies (i.e. qt) to frameworks directory inside app bundle. in case of qbittorrent even openssl libraries are copied alongside with qt (maybe because qt depend on it). also it copies essential qt plugins (e.g. platform-specific, 'cocoa' in case of macos). note the app bundle content difference. app bundle content befor running `macdeployqt`: [code block] and after running it (frameworks directory appears): [code block] it also generates `qt.conf`. on windows, similar tool called `windeployqt` generates even qt translations (includes only required by modules used in your app), but `macdeployqt` doesn't do this for some reason... this is required only in case of dynamic qt, in case of static build this not required. building dynamic qt is my preference, i had a lot of issues with qt 5 since its beginning, at least on windows, and they a gone with dynamic qt. maybe now everything is fine, but i don't like static linking in general (but there are few cases when i prefer static linking). in any case, i don't think that running `macdeployqt` (or own implementation of similar things) must be a part of some build step. end user (aka ""builder"") should decide what and how to use. you are right. everything is fine, dot just was ignored as in any other *nix shells, and i got app bundle where was expected."
627295867,12746,FranciscoPombal,2020-05-12T11:53:21Z,"so, just to be clear: right now, the `.app` bundle gets generated correctly, and if the user so chooses, they can run `macdeployqt` manually afterwards and will work? if so, i'd say macos support is good enough for now then."
627300664,12746,Kolcha,2020-05-12T12:04:56Z,you are completely right. i'm using app build from this branch. i successfully downloaded few torrents using it.
627630548,12746,FranciscoPombal,2020-05-12T22:23:05Z,"-schwartz it should now be possible to find libtorrent via pkg-config. mind giving this a spin? on my system, it seems to use the exact same build flags as with the native cmake config file (but in slightly different order in the command line)."
627660461,12746,FranciscoPombal,2020-05-12T23:51:44Z,"i don't think this is small or generic enough to be factored out to a module. besides a `find` module here is just another script that has to be maintained. this code's intention is: ""try to find libtorrent's _generated_ target configuration, either via cmake or pkg-config, if available, and rely on that completely. nothing else is acceptable, including ""guessing"" a default set of definitions"". if `b2` were capable of generating similar information, i guess i'd add a fallback for that too, but afaik that's not the case. i think if a user is at a point where they need more than this to find libtorrent, they are better off grabbing the `findlibtorrent.cmake` module directly from libtorrent's examples dir, or manually specifying all libtorrent target variables or something. perhaps i should introduce a feature called `custom_libtorrent` that facilitates this? if you think there's anything getting in the way of that right now."
629564830,12746,FranciscoPombal,2020-05-16T00:58:55Z,"alright, at this point i have tested everything on windows that needed to be tested imo. in particular, i tried the following, successfully: - followed the steps at [a link] (which is basically the same as the official msvc2017 method but with some version bumps for convenience when using the latest toolchain) to compile every dependency **except** `libtorrent`. - instead of compiling `libtorrent` like in the tutorial, i did the equivalent cmake build: [code block] this is so that the `libtorrent` build produces the needed cmake config files to use in the actual qbittorrent compilation. - compiled qbittorrent itself using the manually-built dependencies: [code block] and... it worked! note that other configure flag combinations would have achieved the same result; for instance, you could use the necessary openssl, libtorrent and possibly zlib hints instead of `cmake_prefix_path`. this is just to prove that the new scripts are not dependent on the usage of `vcpkg` or anything like that. the user can manually specify the paths to the dependency artifacts in the command-line and it will build just fine. the only requirement is that libtorrent is built with the cmake method, so that it produces the necessary cmake configuration files. the best thing is that one can even ""fly blind"", because cmake holds your hand and gives useful suggestions. for example, suppose that after building the required dependencies, you were trying to build qbittorrent (but did not know how to) and started with this: [code block] cmake would then complain ""could not find package xyz, please specify `xyz_dir` blah blah"". you add what it asks for and run it again (let's say it was `qt5`): [code block] then the process repeats for each required package, until the configure is successful. then the build can actually be executed: [code block] note that in all of these examples i did not specify a generator. since this was tested on an x64 windows installation with msvc2019, this is equivalent to `-g ""visual studio 16 2019"" -a x64`. i also tested with `-g ""ninja multi-config""`, `-g ""ninja""` and `-g ""nmake makefiles jom""`. note that in the latter 2 cases, the `--config` flag at build/install time is ignored due to them being single config generators, so one must specify the build config with `-dcmake_build_type` at configure time. one cool thing that the cmake scripts now easily enable, it the possibility of using dependencies from different sources very in summary, these are the advantages that cmake scripts at this point over qmake: - feedback-rich configure step - no need to manually edit files - all useful configuration options can be specified via the command line. - integrates well with modern ""dependency package managers"" like `vcpkg` - at least as fast and vs. the current cmake setup: - simpler and cleaned up (and thus more readable and easily understandable for further development) - usability improvements - less surprising behavior - easier to further evolve to a more target-based architecture right now there are still two outstanding todos: - the libtorrent c++ standard abi compatibility question (could allow dropping another file) - the version bumps. though, to be fair, at this point i'll probably just leave them in, and wait out for things like `rc_1_1` support removal, qt 5.15 (because it makes openssl 1.1.1 mandatory), and for people to realize that boost <1.60 is irrelevant because it hasn't been used for official windows/macos builds in a very long time, and we don't even support debian/ubuntu releases that support such old boost versions. after that, this pr will exit draft and will be ready to be properly reviewed and merged. i'll probably need to split this up into multiple commits as well."
643769023,12746,jagannatharjun,2020-06-14T13:47:55Z,man this pr made cmake compilation more then 2 times faster and i double checked it # [a link] kernal time: 1.468750 user time: 1.515625 total time: 239.215759 # this pr based on [a link] kernal time: 2.312500 user time: 1.515625 total time: 98.949888 though i did make following changes to make it compile based on upstream but i don't see it affecting compile time though [code block]
643774997,12746,jagannatharjun,2020-06-14T14:34:37Z,"i think speed improvements should be enough to reconsider this pr if possible,"
643776513,12746,FranciscoPombal,2020-06-14T14:45:49Z,"this pr has never stopped being considered (at least for me), it's just that it has been stuck in `find_package()` flamewar purgatory (besides the 2 outstanding items in the op checklist that also need to be addressed). now i'm just waiting for an authoritative decision from the members with merging rights ([a link] [a link] the speed improvements are just the cherry on top - as far as speed goes, i was only concerned with making it ""at least as fast as previously"". the great benefit of this pr (and its original purpose), in my opinion, is the architectural improvements, simplification, and more usage of more modern cmake features, that will enable further enhancements still in the future. the end goal is of course to further flesh it out to truly replace autotools and the current manually-done release procedure, including generation of the nsis installer for windows, for example."
643779347,12746,zywo,2020-06-14T15:07:30Z,"for me, this pr solved 3 issues encountered in current master."
643779810,12746,jagannatharjun,2020-06-14T15:10:57Z,"you needed to add this too [code block] it may not be the correct place to add the library i just wanted to make it compile also, i am getting this linker warning"
643780349,12746,FranciscoPombal,2020-06-14T15:15:40Z,"can you please elaborate on what these specific issues are, or link to relevant comments, issues?"
643787666,12746,zywo,2020-06-14T16:11:22Z,"all these issues are about the compilation slow. 1- cmake_minimum_required >= 3.15; 2- on arch linux, with current master, i have to force cmake to look in /usr/include instead of /usr/lib64/cmake to find boost; i don't remember the third one."
644322615,12746,FranciscoPombal,2020-06-15T19:07:07Z,rebased and fixed.
644592640,12746,glassez,2020-06-16T07:42:14Z,", you still need to fix the issues that are mentioned in [a link] build failing on link step."
645503725,12746,FranciscoPombal,2020-06-17T17:10:43Z,"took me a while to reproduce it, but i managed to do it - the problem was non-static builds. the fix i applied was similar to the proposed patch, except limited to windows-only and `private` instead of `public` (because there is no need to be `public`). i can't reproduce this one, either with the traditional wiki procedure or using `vcpkg` (any `x64-*` triplet). you are most likely mixing debug and non-debug versions of a library inadvertently."
645636277,12746,zywo,2020-06-17T21:32:07Z,just a reminder: `libtorrentrasterbar_dir` option is not reconfigurable via `ccmake .` when it was first configured with `cmake` command line.
645667005,12746,FranciscoPombal,2020-06-17T22:52:14Z,"1. was it possible before? 2. should this be possible now? if so, how?"
645697330,12746,zywo,2020-06-18T00:29:00Z,your questions are about master branch or this pr?
645699218,12746,FranciscoPombal,2020-06-18T00:35:43Z,"""before"" means ""master"", ""now"" means ""this pr""."
645977895,12746,zywo,2020-06-18T12:12:27Z,"we have two options with master: `libtorrentrasterbar_include_dir` and `libtorrentrasterbar_library` both are reconfigurable with `ccmake .` now, we have only one option: `libtorrentrasterbar_dir` which is reconfigurable with `ccmake .` only if this option was not passed to `cmake` command line the first time."
649142411,12746,FranciscoPombal,2020-06-25T00:23:25Z,"just tried to reproduce on my machine (even before this latest commit), and either i can't reproduce or i'm not fully understanding the problem. if cmake finds libtorrent (i.e., if find_package is successful), `libtorrentrasterbar_dir` is always set to the directory where cmake found it, regardless of of whether or not you specified it in the command line (if there is more than one valid choice, you can edit the variable to choose between them; by default, cmake will choose the most specific alternative according to the search procedure outlined in [a link] if it doesn't find it, you can edit `libtorrentrasterbar_dir` with `ccmake` just fine, again, regardless of of whether or not you specified it in the command line initially."
649508273,12746,zywo,2020-06-25T12:23:46Z,"the problem is when you pass `-dlibtorrentrasterbar_dir` to cmake command line, for example: `cmake -dlibtorrentrasterbar_dir=~/build/libt/libtorrentrasterbar/ ~/qbittorrent_cmake/` then this option is not reconfigurable via `ccmake .`"
649523506,12746,FranciscoPombal,2020-06-25T12:56:41Z,"let me try to explain more clearly: i could reconfigure `libtorrentrasterbar_dir` just fine in any case, as long as it's a _valid_ directory. suppose i have two valid cmake config files directories for libtorrent at the locations `/usr/local/lib/cmake/libtorrentrasterbar` and `~/documents/libtorrent/cmake-build-dir/relwithdebinfo/libtorrentrasterbar`. when i first run configure and then `ccmake` to examine the generated config, i observe that `libtorrentrasterbar_dir` is set to `/usr/local/lib/cmake/libtorrentrasterbar`, because that is the most specific that cmake found on my system according to the documented search procedure. so far, so good. i can then change it within `ccmake` to `~/documents/libtorrent/cmake-build-dir/relwithdebinfo/libtorrentrasterbar`, press `c` to (re)configure, and `ccmake` will show that `libtorrentrasterbar_dir` has changed to the new value. however, if i set `libtorrentrasterbar_dir` to an _invalid_ value, say `/opt/does-not-exist` and press `c`, it will automatically reset the value of `libtorrentrasterbar_dir` back to `/usr/local/lib/cmake/libtorrentrasterbar` - maybe you were not expecting this? either way, this is the same regardless of whether or not i passed `libtorrentrasterbar_dir` in the initial `cmake` command line."
649821459,12746,zywo,2020-06-25T21:15:44Z,but if you first run `cmake ~/documents/libtorrent/cmake-build-dir/relwithdebinfo/libtorrentrasterbar ~/qbittorrent_cmake` you cannot change it with `ccmake .` because the option is not present in the dialog.
651426132,12746,FranciscoPombal,2020-06-29T23:45:01Z,"i'm sorry, i don't quite understand what you mean by this command-line. you are specifying 2 directories as positional arguments, this is almost certainly not doing what you want or what you think it is doing. usually the way you would invoke cmake for building qbittorrent (or anything) would be `cmake -s path/to/source/dir -b path/to/build/dir`, or `cd path/to/build/dir && cmake path/to/source/dir`(*). in both these circumstances it will be possible to configure `libtorrentrasterbar_dir` as described in [a link] (*)there is also a third way, `cmake path/to/build/dir`, but this requires a `cmakecache.txt` generated by a previous run of cmake from which to read the path to the source dir to be present in that directory."
651760248,12746,zywo,2020-06-30T12:29:47Z,"sorry, it should be: `cmake -dlibtorrentrasterbar_dir=~/build/libtorrent/libtorrentrasterbar ~/qbittorrent_sources`"
652331113,12746,FranciscoPombal,2020-07-01T10:17:18Z,"ok, i can indeed reproduce that. but it looks like simply adding the type makes it work: `cmake -dlibtorrentrasterbar_dir:path=~/build/libtorrent/libtorrentrasterbar ~/qbittorrent_sources`. i investigated the generated cmake cache in both cases, and it seems the problem is the cmake guis don't expose `uninitialized` variables for the user to change. i pushed a new commit to make it so that cmake always knows `libtorrentrasterbar_dir` is a `path`, by setting it as a `cache` variable. now, even if you don't specify the type in the command line, the variable will always show up and be configurable in a gui such as `ccmake`."
652453467,12746,zywo,2020-07-01T14:30:19Z,"fixed, thank you."
652537235,12746,FranciscoPombal,2020-07-01T17:00:03Z,"if libtorrent and boost are both compiled with c++ standard x, can qbittorrent always be compiled with c++ standard y > x (and linked with the aforementioned libtorrent and boost compiled and linked with c++ x) without problems? or should we always guaranteed that the c++ standard is always the same throughout? this is a question due to a concern in relation to this old comment: [a link]"
652545649,12746,glassez,2020-07-01T17:16:27Z,"iirc, the problem is not in c++ standard itself but in the way libtorrent uses it in some particular case. e.g. there were problems in libtorrent-1.1 since it uses c++ built-in types when it is compiled in c++11 and boost types when it is compiled in older c++ and these types are exported and used in libtorrent headers so when qbittorrent uses different c++ standard there are conflicts and unresolved externals."
652551274,12746,FranciscoPombal,2020-07-01T17:28:17Z,"thanks for the explanation. i don't suppose this is going to stop being a problem even when using only libtorrent > 1.2, because there is always the possibility that some boost type is used in place of a built-in (`std`) one (or vice-versa) between versions, as libtorrent evolves and picks up features from ever-newer c++ standards. so i guess the best way around this would be to obtain the standard from the usage requirements (if it's possible). i'll investigate that possibility and take a stab at it. if it's not possible, the current solution is good enough for now. after that, i'll just squash/rearrange the commits and mark this as ready for review."
653153184,12746,FranciscoPombal,2020-07-02T18:15:21Z,"looks like cmake takes care of the minimum c++ standard for libtorrent behind the scenes with its `interface_compile_features`/`interface_compile_options`, depending on whether it was found with cmake or pkg-config, respectively. the value of the `-std` flag passed to the compiler will always be big enough to pass those requirements. it would be best to use `target_compile_features` on targets to force minimum language standards and compiler features, rather than relying on always forcing `cmake_cxx_standard` to at least the minimum supported version (i think this is somewhat unexpected), or relying on `cmake_cxx${_min_std}_standard__has_full_support`, which is can be too limiting. however, i think this can be addressed in another pr, and then we can also look more closely at potential problems arising from compiling libtorrent with too old/new c++ versions, and what we can do to inform the user of how to proceed in that case. i'll squash the commits."
653176866,12746,glassez,2020-07-02T19:11:17Z,:+1:
653964262,12746,FranciscoPombal,2020-07-06T00:52:05Z,"alright, just a couple comments left to address. here is how the linkage dependency graph looks now (`autogen` custom targets suppressed as per the supplied `cmakegraphvizoptions.cmake` options) on ubuntu 18.04: ![a link]"
654147530,12746,glassez,2020-07-06T10:19:44Z,i really don't understand what happens. this is long time existing option. doesn't it works all that time? or maybe its support was removed from the sources and there is just some leftover in configuration files? ?
654158340,12746,FranciscoPombal,2020-07-06T10:45:43Z,"you can try building with the commit before the `fix compilation without countries_resolution` commit to look at the errors that popped up. to me it simply looks like that some preprocessor directives were missing, so i fixed that. i then tried building with/without the option, and everything worked correctly (e.g, when off, the setting doesn't show up in the preferences nor does the ""country/region"" column in the peers tab). that commit can be extracted to a separate pr, if needed."
654163631,12746,glassez,2020-07-06T10:58:31Z,"yes, please. i remember it was once discussed that such options that disables all these features (except gui and maybe stacktrace) at compile time do not make much sense for us (besides, they make confusion in the source code and in the webapi). i guess we'd better get rid of them after all."
654181327,12746,FranciscoPombal,2020-07-06T11:39:07Z,"yeah i noticed there isn't really a nice way of removing the relevant ui elements from the webui when the option is disabled. so we end up with an empty column and checkboxes in the preferences that are clickable but do nothing. to be fair, the latter was already the case with features dependent on libtorrent version. anyway i'll extract the commit to another pr so we can continue the discussion there."
654197260,12746,Chocobo1,2020-07-06T12:14:25Z,`countries_resolution` exists in cmake and source code but not in autotools. i would prefer we remove this define/configure option from our codebase.
654206163,12746,FranciscoPombal,2020-07-06T12:32:43Z,"~not really a blocker, but relevant: [a link] ~see [a link] until the aforementioned issue is fixed, `qt.conf` will not be copied to the correct location in the build tree when using multi-config generators. the copy at install time will still work fine, as before.~ edit: fixed."
654237374,12746,glassez,2020-07-06T13:27:21Z,"it becomes really impossible to review this pr. i ask once again: 1. address all remaining comments, 2. extract all unclear/questionable changes into separate prs, 3. don't produce any new changes especially unrelated (not strictly related)."
657070063,12746,FranciscoPombal,2020-07-11T14:17:37Z,"while attempting to solve compilation with mingw i also made everything more target-based with the help of generator expressions (that commit is not squashed, for now). as a side-effect, the platform-specific requirements for each target are much clearer now; where possible, all the information is conveyed in single `target_*` calls, instead of having to navigate through multiple, scattered, possibly nested `if ()` chains that affect targets everywhere. note: the only exception is one `include_directories()` statement. i think that's the only directory-scope command left, but i'm ok with that for now. in the latest force-push i also fixed the `systemd` feature, which was actually broken before, but that's unrelated. however, the mingw compilation is still not fixed. the good news is i think the problem is no longer due to the new changes to the cmake scripts; i'm getting the same error as [a link] which i believe the user was having with the previous cmake scripts or even autotools as well. what is the correct way to fix it? please see the `todo` at the bottom of the `cmake/modules/macroqbtcommonconfig.cmake`. edit: for reference, i'm using the latest x86_64 mingw via msys2"
657215046,12746,glassez,2020-07-12T12:24:52Z,"i'm sorry, it's hard for you to give me a specific version, and you're suggesting that i do the investigation myself? i am using version 8.1 32-bit shipped by qt installer and i have no such problem. i think your problem is in some compile definition the process_information_class is declared under (like memory_priority_information is currently). you can inspect ""winbase.h"" to understand it."
657215318,12746,glassez,2020-07-12T12:27:35Z,scripts from last commit look much less readable for me...
657365992,12746,jagannatharjun,2020-07-13T05:26:06Z,"`setprocessinformation` ( `process_information_class`) is only available on windows 8 and above [a link] but your defines are something like this [code block] which is windows 7 but we dynamically load this function anyway, so may your best bet is to define your own enum"
657459434,12746,FranciscoPombal,2020-07-13T09:59:10Z,"is it hard for you to help test something for which you seem to be the only interested party here? this pr could just as well be merged without proper mingw support for all i care (it was surely a happy accident that it worked until now, if that was the case). i said i used the ""latest versions"" which means: [a link] [a link] the versions used were `10.1.0-3` and `8.0.0.5941.736c7a24-1`, respectively, which are still the same at the time of writing. you didn't give me a version before either, you just said: so i assumed you were using something somewhat recent, and that you didn't necessarily mean ""i don't care if it's broken on a more recent version that the special one i currently use"". like i said, the problem is the same as [a link] which was using also the latest version of mingw through msys2, afaik, and has nothing to do with this pr. don't you think it's a problem if the code builds with a certain version but doesn't build with the latest? we've got to fix that, otherwise we accrue technical debt and get stuck in the past forever. we already include the appropriate headers (see [a link] only `windows.h` is needed) and there should be no additional compile definitions necessary from what i've seen both in the docs and by inspecting the relevant include files. sigh, this is exactly the kind of headache and waste of time i would be expecting for supporting an eol os... thanks for the heads up, . i guess the solution mentioned in [a link] might be the most appropriate after all. i'm away from the computer i can use to test this right now, though, but i'll look into this further as soon as i can. if someone wants to do so in the meantime, that would be appreciated. _and please reconsider dropping support for windows 7 (before or after this pr). supporting windows 7 in 2020 is like supporting windows 98 in 2010 (which, by the way, qbittorrent never actually supported). the 90's were 30 years ago!_"
657476593,12746,FranciscoPombal,2020-07-13T10:28:55Z,"i assume this complaint refers to the increased use of generator expressions. i agree that generator expressions can be rather... unsightly, but there are some nice benefits of doing it this way. now, each target has at most one `target_link_libraries()` call, one `target_compile_definitions()` call, etc (basically, only one call of each of the `target_*` commands per target). no need to hunt down multiple calls of `target_xyz()` inside multiple conditional branches, possibly across multiple cmake files, to figure out the final set of compile defintions, options, etc for a given target in a given configuration/feature selection. thus, the scripts become more readable and maintainable (despite the fact that generator expressions themselves are not very readable). for example, to know _all_ the compile definitions of `base`, you just read the _single_ `target_compile_definitions()` call for it and the `interface`/`public` compile definitions of the targets it links to (the latter is easy if the targets `base` links to also have a _single_ `target_compile_definitions()` call, and so forth, recursively). then, depending on the features selected, compiler used, and os, you add or subtract the corresponding definitions by looking at the generator expressions inside the call (e.g. if you're on linux, you can ignore anything resembling `$ , ...`). very little imperative logic to reason about. additionally, imo it provides a sort of nice heuristic to reason about complexity, akin to the classic ""if you've got greater than 3 levels of nested loops, it's probably doing to much"": ""if your generator expressions are becoming too long, you probably need to rethink some aspect of your build script"". (this is also an attempt at a preemptive counter-argument against ""this approach does not scale because generator expressions become exponentially unreadable with their length""). if you look at the build scripts now, the vast majority of the complexity comes from the translation handling and macos bundle stuff in `src/app`, which has to be done in a complex, imperative way that's hard to follow, but that's mostly qt's fault. as qt's cmake support improves with qt6, i would expect that particular situation to improve, so that that bit can be re-written in a clearer way in the future. everything else is easier to follow and reason about, imo."
657496848,12746,glassez,2020-07-13T11:13:21Z,"yes, it's hard for me. as i mentioned, i am forced to use mingw environment not from a good life, but because of a critical lack of computing resources at certain times, so it is impossible for me to rebuild it many times in different ways. however, i'm not asking you to do any fancy tests or anything like that. i just want you not to break something that worked before. i pointed out the affected places to you. if you want to personally test it, you are free to install mingw environment to your liking, i just pointed out to you the method that i use myself as the easiest. if ""install everything possible using the qt installer"" is too difficult for you, then you can go another way. or do not go there at all, but just fix the shortcomings i noticed, which is quite trivial."
657506420,12746,glassez,2020-07-13T11:33:40Z,"as i said before: but instead of simplifying it and dividing it into several parts, you add more and more changes that need to be discussed on their own. it can die without being born..."
657541226,12746,FranciscoPombal,2020-07-13T12:50:07Z,"force pushed to fix the `qt.conf` problem and building on bsds. the point is that ultimately, we're just putting a band-aid on the problem. anyway like i said, once i have access to the machine where i can fix it, i will if no one does in the meantime. i was also hesitant to make this change now... but among other things, it made it easier to figure out what's wrong with compiling in mingw and not resorting to blanket `link_libraries` statements. perhaps i should have kept this as draft for a bit longer, but things like the mingw problem popped out of the blue. at least now that all the comments in the review were addressed, i _really_ don't expect anything else to change. i left the generator expressions commit separate (and will keep it so for a while) to make it easier for you and others to see the changes."
664053809,12746,FranciscoPombal,2020-07-26T23:23:42Z,"rebased + adjusted some indentation here and there. also fixed up the latest target_*/generator expression commit by getting rid of the dubiously maintainable and kind of dumb `functionqbtcxxcompilerandmodecheck.cmake` in favor of this much better snippet: [code block] this change should have already been there but i forgot about it, sorry about that. doesn't change anything else though. the list of compile features was obtained by starting with `cxx_std_14` and then adding all the features listed in [a link] that correspond to the ones listed in [a link] and [a link] tested, works as expected, and will be easy to work with once we move to require c++17, 20, ... at a minimum. tomorrow i should be able to tackle the remaining mingw issue and wrap this up."
665025357,12746,FranciscoPombal,2020-07-28T13:01:33Z,"alright, finally got around to properly test with qt's mingw64 distribution. after deleting a single line (i'll force push in a bit), looks like everything builds and runs alright. here's how i built it (all commands executed in the qt5 minggw64 shell): boost: [code block] libtorrent: [code block] zlib: [code block] qbittorrent: [code block] i also had to manually copy in the openssl library files, but presumably, if the static libraries were available, one would only need to pass `-dopenssl_use_static_libs=on` for everything to work automatically."
665079220,12746,FranciscoPombal,2020-07-28T14:37:42Z,"rebased, cleaned up commit message, and undid the dependency version bumps. everything is ready now."
669115337,12746,glassez,2020-08-05T10:28:57Z,"it is not a good way to defend your point of view by insulting/humiliating your opponents. my life experience tells me that this is usually done by someone who really has no valuable cards to play. you may not believe me, but i can still understand things more complex than that, although i'm not a ""cool hacker"". no one told you ""don't use it,"" but ""don't use it unnecessarily"". but you are probably one of those who immediately rush to use some ""new nice feature"" instead of everything that existed before, believing that it is intended to displace everything else. this is one of the extremes that i don't support. but i also do not support those who believe that all existing things are outdated and should not be used for the sake of modern features (for example, write some wrapper over an integer type, only to use a modern range based `for` loop instead of the ""old shit"" `for` loop, because ""now there is range based `for` loop since c++11, and we should use only it""). i'm sorry, but this is still a public project. so when i write some correct code, but the guys tell me ""it's confusing my eyes, could you reformat it?"", i have to change it so that someone else can more easily understand it and fix it if necessary. when there are several ways to do something without a noticeable difference in effectiveness, we should take into account the aspects of maintainability (even subjective aspects, if this is the concern of other collaborators)."
669129098,12746,FranciscoPombal,2020-08-05T11:02:53Z,"i think you are misunderstanding my intentions while not playing valuable cards yourself. i have posted _multiple_ times explaining the benefits of this approach, including the most recent post with a nice, easily digestible video reference, _with timestamps_ and all i have gotten in return is pretty much ""i don't like the syntax"", without actual counter-arguments against the main points. i think this kind of stubbornness is starting to border on disrespectful against my willingness to provide detailed explanations and arguments for the way i do the things that i do. i feel like i'm not getting much in return even after going as far as spoon-feeding a lot of relevant information. ""don't use this nice feature of modern cmake because i don't understand it"". is not an attempt at humiliating anyone (sorry if you feel that way) - it's just a wake-up call after multiple unproductive exchanges. everybody can be a little stubborn or resistant to change sometimes, and that's ok. it's just the duty of others to point it out to them when it happens. of course i know you could easily understand this. you are just coming off as stubborn. feel free to point out where it is ""used unnecessarily"". by their very nature, genexps are only even available where it makes sense for them to be available. in fact, if anything, they are still not available in every place they would come in handy (see the lines below the `# there is no generator expression for cmake_generator yet` comment). i should remind you once again that the example you initially referred to, `$<$ ,$ >,$ >>:_default_source>` is an uncommon worst case scenario; plus, its complexity mostly arises from the fact that it is not so easy to say ""just regular *nix systems"" in cmake, not genexps in general. it's also not that comfortable/ideal to read/write `if (unix and not apple and not cygwin)` just to convey this simple idea. this is not just me ""using something just because it's new"" just like a new js framework, the way i used genexps is meaningful and has real benefits, as i have explained multiple times above. i already pointed out multiple reasons why there is a _noticeable_ difference in effectiveness and maintainability doing it this way vs. `if ()`s. it's not like this is simply ""a different syntax for doing the same thing"". in situations where a range-based `for` loop is actually much better than a traditional one, would you accept ""i don't like its syntax/don't understand it"" as a valid reason against it being in the code? maintainability also suffers if someone keeps rejecting new better ways of doing things, because it increases technical debt. it's not just a matter of writing everything in the lowest common denominator style that everyone understands. sometimes the onus is on people to learn new tricks for a greater good. as an additional, perhaps better example than `for` loops, consider large plain js-based projects switching over to typescript. sure, such a change forces everyone to learn typescript, but the maintainability of the project goes up significantly despite that initial hurdle, because of the benefits of the new technology itself. edit: i should also point out that _overall readability_ of the buildscripts does not depend exclusively on the syntax used to write them, but also on form. despite the disadvantage in syntax readability at times, using genexps this way enables a structure that is massively advantaged in terms of form. that's another way of explaining why overall, the buildscripts are much more readable and maintainable now, despite the odd ""pathological"" genexp like `$<$ ,$ >,$ >>:_default_source>`."
669318755,12746,glassez,2020-08-05T17:13:56Z,"isn't it possible to create a new variable that stores the desired value (the resault of `unix and not apple and not cygwin`) and then use it? if so, cmake is even more flawed than i had previously assumed..."
669347511,12746,glassez,2020-08-05T18:05:41Z,"well, here are your benefits...: why is using `target_*` command multiple times evil? it seems to be created for the purpose of being applied many times, otherwise it is meaningless, and it can all be put in one command, such as `add_target(name compile_definitions link_libraries )`. whether or not to split the project into multiple files is a separate issue. you can have everything in a single file, but still use `if`s. as for multiple conditional branches, this is also not a problem if they are structured optimally. really? the following looks clearer for me: [code block] another one-sided view... you didn't mention that you usually don't need to know **all **the definitions, but only platform-specific ones. so you still have to poke around inside single `target_compile_definitions()` call, instead of looking at couple `target_compile_definitions()` calls located in interesting platform-specific branches. so it doesn't look ""obviously the best"" to me. it has only one undeniable advantage, which is access to generation time values that cannot be accessed in other ways. in all other cases, its advantages are not obvious. but since i always assume that i may be wrong, that i am blind and do not see all the unprecedented usefulness of the changes discussed, and i do not want to prevent the incredible progress that it can give to our project, i will prefer to remain neutral on this issue and leave it to others to decide its fate."
669348599,12746,FranciscoPombal,2020-08-05T18:07:54Z,"it is not wise to rely excessively on loose variables, but your suggestion gave me an idea... i think it is possible to simplify `$<$ ,$ >,$ >>:_default_source>` to something like `$<$ :_default_source>` (not sure if syntax is exactly correct), and likewise for other similar cases. alternatively, setting a variable equal to `unix and not apple and not cygwin` and using it in the genexp will probably also work, but it must not be possible for the user to edit/change it. i will try it out and report back."
669359391,12746,glassez,2020-08-05T18:21:11Z,"it's even possible to change the predefined one, e.g. `set(apple true)`, so your requirement doesn't matter to care about, imo."
669393779,12746,FranciscoPombal,2020-08-05T18:46:00Z,"it's not ""evil"", but it's better if you can avoid it/not overdo it. otherwise, you have to carefully examine each file, hunting for `target_*` calls inside conditionals that might apply to your case. for example, it doesn't make much sense to me if there are `target_*` calls for the `qbt_app` target all over other files for other components/targets. come on, that is a ""hello world"" example, we both know that does not scale (this is my main point) and is certainly not the case for qbittorrent. in qbittorrent it would be more like (assume all these calls are with respect to some target foo): file a: [code block] file b: [code block] file c: .... not fun to hunt them all down and keep all this state in your head. the more everything related to a `target_*` call is in one place, the better. of course in both cases you have to ignore those that don't apply to your case... you only look at the ones that interest you. in neither case do you have to _know all_ the definitions, don't know how you got the idea that the genexps force you to do this. you can think of the advantage of the genexp approach as a ""locality"" advantage. to me this seems much better: - ""ah, here in this _one_ place are all the compile definitions for target foo, i just need to look at those that apply to my platform/case."" than this: - ""ok, here are some compile definitions for target foo, now i just have to look at the rest of all the other files to see if there are some more inside conditionals that apply to my case. i must make sure i don't miss any!"" and this is only from the perspective of the user. now think from the perspective of a developer/maintainer of these scripts (e.g. me), who has to take into account all combinations of platforms and features. bonus: in the first case, it is much easier to debug/comment out/add/remove definitions... you can always echo the value at build time, but i assume you are coming from a perspective of ""i want to _debug_ the scripts at configure-time"" (which is more than reasonable, everyone wants this; actually triggering the build just to debug some build script value is kind of silly). debugging cmake scripts has always sucked, whether or not you use generator expressions. you are pretty much forced to edit the file to strategically place `message(status ""xxx foo: ${foo}"")` statements and look at the output. taking that into account, placing `file(generate output foo.txt content )` is not that much worse. in fact, it has a small advantage: in many cases, it does not matter where you put it. for example, `file(generate output foo.txt content ""$<$ ,$ >,$ >>:_default_source>"")` can be put pretty much anywhere and the result will always be the same. yeah this sarcasm isn't helping. it's not like i haven't been listening. i have been listening and providing my reasoning. i am more than willing to further explain my points, change my mind, and accept actual suggestions. but first, actual suggestions and arguments need to be provided. [a link] and this post with the exception of this final statement were a good start. edit: don't know where you got this idea, but you cannot do this. here is the relevant documentation: [a link] [a link] at most you can add sources in that command as a ""shortcut"", but even that is discouraged (adding the sources only in (a) `target_sources()` call(s) is preferable for better/easier ide integration). that is something that i would like to change eventually as well, but certainly not in this pr at this point - and for us, for now, it is an inconsequential change, anyway."
669395252,12746,FranciscoPombal,2020-08-05T18:47:58Z,"`set(apple true)` is not something either we or the user should ever do, though."
669433763,12746,glassez,2020-08-05T19:26:13Z,"yes, i know. i meant that if `target_*()` instruction is not intended for multiple use, then there is no point in having it, and a single instruction that could look like what i described is enough. a good start was a long time ago, when i strongly suggested not to mix too many disputable changes in a single pr. but you rejected it... didn't you understand my previous comment? `whether or not to split the project into multiple files is a separate issue`. it is only correct to compare the use of ""generator expressions"" and ""if-else"" if all other things being equal."
669519362,12746,FranciscoPombal,2020-08-05T21:24:25Z,"they _can_ be used multiple times, which is good for flexibility. but the more you use them in different places for a certain target, the more you throw away its (potential) advantages. as i have said before, it was a natural evolution. it was becoming tiresome of going through the process of ""pr is ready -> something about platform foo isn't quite right -> attempt to fix it -> repeat"". and i've already admitted that arguably, i should have seen this, and not take it out of draft state so soon. the result of the change was a net positive though - there were no regressions with regards to the platforms that were previously ok, and the mingw problem was solved super easily. ""all [other] things"" _are equal_ - we are comparing ""multiple file setup with `if ()`s"" (the way this pr was, initially) vs. ""multiple file setup with genexps"" (the way it is now), right? only one variable is changing here - genexps vs. `if ()`s - in both cases, we are talking about a ""multiple file"" setup. unless what you meant was that it would have been preferable to change the whole build system to be a single cml file with `if()`s, as opposed to using genexps in any capacity? that would have been a much more contentious and jarring change for sure though, and i honestly believe you are underestimating the complexity of the conditionals you'd end up with regardless. even in that scenario (single file), using genexps would have been preferable. take a look at this excerpt we currently have (in `master`) in the cml in `src/app`: [code block] there's 5 (!) levels of nesting. granted, in this particular example you could easily get rid of one of them by doing `if (stacktrace and unix)` at the top, but what if, in the future, you want to add something that needs ""stacktrace, but not unix""? you are either forced to add that nesting level back, or add another `if ()` below/above just for that. this is much harder to read and maintain vs. the alternative, which just requires you to locate the appropriate `target_*()` call (depending on whether you want to add a compile definition, link option, ...) for the target in question, and plop a new generator expression right in there, possibly without even looking at what's already there, no need to reason about complex conditional branch structures. now imagine a huge, single file filled with stuff like this..."
669939782,12746,glassez,2020-08-06T13:52:09Z,"maybe i did not understand correctly... in your previous comment, you indicate that the advantage of using genexps is that everything is in one place, and disadvantage of using ""if-else"" is that settings is located in several files. seems such a comparison isn't correct if you insist on the fact that genexp way is better in itself."
669943552,12746,glassez,2020-08-06T13:58:03Z,"didn't you just collapse those levels, making the code less readable? this can be done without generator expressions... even using ""if-else"" we can have a more compact code with fewer levels, and also less readable. well, can we see it as an improvement?"
669947472,12746,glassez,2020-08-06T14:04:02Z,"is it going to be much harder to change it than corresponding "" genexp"" code? but if we have all these five levels that reflect the real logical structure of dependencies, it will not be difficult to add something that needs ""stacktrace, but not unix""."
669949894,12746,glassez,2020-08-06T14:08:05Z,"this was not sarcasm (except, perhaps, a couple of flattering epithets about the possible benefits of these changes). if the community decides that it is really useful, then i will not prevent it from merging."
670009173,12746,FranciscoPombal,2020-08-06T15:43:55Z,"by ""one place"" i did not mean necessarily ""in the same file"" - it's independent of that. i was referring to the fact that for any given important aspect of a target (definitions, link options, compile options, ...), you only have to refer to, ideally, 1 place. take the `qbt_gui` target and its compile definitions as an example. it is a better user, developer and maintainer experience if all the information you need about its compile definitions is in one place (or at least, as few as possible), that you then examine according the specific platform you want to know details about, vs hunting down multiple `target_compile_definitions()` calls across conditional branches. i think it's clear that genexps help in this matter of ""increasing locality"" both in the single file and multiple file case, though honestly i would also guess that the advantage is probably more pronounced in the single file case. thanks to ""better locality"", i would argue the code is more readable now. in that snippet above, in total there were: - 3 calls to `target_sources` - 3 calls to `add_compile_options` (this changed to `target_compile_options`, so we treat it as such for this example) - 2 calls to ` target_link_libraries`, which in the modern approach also conceal 2 more calls to `target_link_options` (but one of these was dropped, so we'll count only 1). all of them interspersed throughout a somewhat complex branching structure you had to carefully analyze to understand what was going on. if you cared about only one thing, such as `compile options` (imagine you wanted to change it or something), and did not care about linked libraries or options, you'd still have to look at it all. plus, depending on other features, you might also have to repeat the process for more `if ()` chains somewhere else in the file. in total, there are now, in that file: - 2 calls to `target_sources` (this could, and should have easily been reduced to 1 by putting a single `target_sources` call after the whole `# translations, resources and bundle stuff` section, but it's not that much of a problem and i'm not going to change it now) - 1 call to `target_compile_options` - 1 call to `target_link_libraries` - 1 call to `target_link_options` all of them nicely separated from one another. want to know about the linked libraries? just look at the single `target_link_libraries()` command, you are not forced to look at anything else by a branching structure. now, if you only care about compile options, you just look at the single `target_compile_options(qbittorrent ...)` call; no other conditions/link options/etc distracting you. then, you look at the genexps, which are not even that hard to parse, and figure out the ones that apply to your case. in this particular case, suppose you are on linux; you don't even need to read them all; just notice they all start with `$<$ ,...` and come to the conclusion that no additional compile options are added to the target. i believe so; this has been my experience. with `if()`s, depending on the scope of the refactoring, you might have to carefully rearrange the branching structure. with genexps you will most often add new ones or remove existing ones, or occasionally tweak existing ones, but their order inside the `target_*()` call does not matter, for example, which is a big plus. you basically don't need to think about control flow. what exactly do you mean by ""real logical structure of dependencies""? if you mean ""modeling of target requirements"", i think a genexp-based approach does a better job at this, because first and foremost, every target in any project is made up of compile options, definitions, link options, etc. then, adjustments to each of these may be made based on the platform or chosen feature set (this is what genexps do). the `if ()` approach leads to ""thinking backwards"", i.e., you first think in terms of platform and feature set, and then add compile options/definitions/etc piece-meal. based on my previous explanations, i hope i have convinced you that this is more brittle, because requirements become more entangled by the imperative logic. plus, in terms of structure, what has ""precedence""? the feature, the platform, something else, or does it depend on whichever approach yields the simplest structure? in the snippet above, `if(stacktrace)` is on the outside and `if(msvc)` is on the inside (so, the feature has precedence), but would have this remained consistent? with genexps there is no decision to be made. imagine you wanted to remove the `webui` and/or the `stacktrace` feature; i think it's easy to see this would be easier and faster to do correctly with the genexp approach vs the `if()` approach in general. edit: i realize now that this last sentence, excluding the ""in general"" part, is a poor example, since i believe before it also happened to be possible to remove these features easily."
670040938,12746,FranciscoPombal,2020-08-06T16:38:01Z,"i recently made a pr that includes similar changes for another project: [a link] (direct link to the cml file: [a link] you can see the same ""style"" in action; unlike qbittorrent, in this project a ""single file"" setup is used, a decision that is mostly due to the simplicity of the project itself."
671087394,12746,FranciscoPombal,2020-08-09T18:45:42Z,"i tried out the ideas from [a link] and [a link] here is the resulting example patch of what i came up with (on top of the current pr): [code block] do you think it's an improvement? personally, i don't think it is... although the new variables can make the script be more descriptive about the intent (e.g. `regular_unix` better conveys the purpose of the boolean expression), the genexp is simply being moved somewhere else - the variable is just used for simple text substitution. plus, modifying the genexp implies modifying the variable name, because the variable name ends up being coupled to the logic of the genexp it abbreviates. i think we would achieve the same result (of better communicating intent) more effectively simply by placing a descriptive comment next to the complex genexps that ""need it"". in the case of the `_default_source` genexp, something like `# only for ""regular"" unix-like systems, such as linux,*bsd, ...`. alternatively, in my testing i found it is indeed also possible to do this: [code block] which, is more readable, at the price of eroding the ""locality"" of conditionals that i mention above - if we start doing it this way, why not go `if ()`s all the way? also, again, i don't think it is justified vs. simply adding a descriptive comment next to the generator expression, when needed."
672564634,12746,glassez,2020-08-12T04:25:06Z,"my idea was about logically atomic concepts only (e.g. ""regular unix""). [code block] to be honest, i was mistaken about the fact that it could have been done in a different way..."
672822792,12746,FranciscoPombal,2020-08-12T11:46:39Z,"it is possible as shown in the latter part of [a link] but as i mentioned there as well, i don't think it's a significant improvement over just adding an explanatory comment when needed. do you agree or disagree with this? should i add a comment in this case? if you don't feel strongly about this either way, we can move on. maybe later if someone feels the need to add explanatory comments they can do so in a follow-up pr. well, we have to work with what we got..."
680132819,12746,FranciscoPombal,2020-08-25T16:29:01Z,"the force push was just some minor fixes and rebase on current master, to better support basing [a link] fresh on top of this."
683182530,12746,FranciscoPombal,2020-08-28T23:04:37Z,"this force-push is basically a ""no change"" rebase. - removed the old mechanism of determining the version via the `.pri` file, which was kept by mistake (so now the cmake scripts are fully independent of the qmake stuff). - renamed the `app` target to `qbt_app` so that it does not clash with the project name. it was not causing any problems afaik, but better safe than sorry and it's less confusing this way. - final refactor to `src/app/cml`. it's finally in a state i'm happy with - handling of extra macos resources/windows stuff/translations is now much smoother, understandable and consistent. sadly, support for generator expressions among a few relevant properties is not there yet, particularly under `additional macos/windows specific configuration`) - one `if (cmake_system_name matches ""darwin"") ... elseif (cmake_system_name matches ""windows"")` construct was inevitable. the practical consequence is that the logic is not as encapsulated as it could be and it's more order-sensitive than it could be - but not by much, not a big deal; certainly better than previously. i have verified that behavior is exactly the same as previously both on macos and windows though."
683789150,12746,FranciscoPombal,2020-08-31T13:46:46Z,"ping, can we please get this over with? let me know if you still think it's a good idea to try to split this up into individual commits."
684837158,12746,glassez,2020-09-01T13:04:30Z,i have already expressed my final opinion. and i do not yet see any strong opinions from other members for accepting these changes in their current form.
685056762,12746,FranciscoPombal,2020-09-01T18:31:56Z,"well i guess this is dead then, and so are other nice prs that depend on this, for now. sad. i'll keep it open for when you change your mind."
685308949,12746,glassez,2020-09-02T05:29:06Z,"just please don't make me feel guilty. my current opinion doesn't determine anything, because i don't intend to block this pr. even if i approved it explicitly, it wouldn't be enough to merge it. besides, i originally suggested that you don't put everything together. if you had followed my advice, perhaps most of your changes would have already been merged (and perhaps it would have been easier for you to show the possible benefits of your other changes)."
685947159,12746,FranciscoPombal,2020-09-02T19:23:33Z,"if you feel guilty that's on you, i'm just pointing out the current state of affairs. you can try to wash your hands of your responsibility in this not getting merged, but you know full well what's going on... namely, has been snubbing me (really mature btw), so without your approval _and_ your push for getting this merged, it won't go anywhere anytime soon. by not actively supporting it, you are blocking it, in a way. these bullshit office politics are holding the project back. this is a good pr that is an objective improvement, in which i invested a lot of time. i don't think my work is getting the respect it deserves. there are many nice qol changes that can be harmoniously implemented on top of this, such as: - optional git versioning, - ""developer options"" switch (to enable hidden-by-default options that do things like inject arbitrary global compile definitions/options specified in the command line) - use of `target_include_directories()` + project file hierarchy change to put the header files in a separate `include/` directory (to conform to a more reasonable source directory layout standard, [a link] and hopefully to better reason about and improve the project's overall component architecture as a result) - optional automatic download+build of specified libtorrent versions by using `fetchcontent` - etc... i notice i'm putting much more effort, detail, and analysis into my posts and replies than what i'm getting back. especially in the later exchanges, your messages have been often unhelpful and/or un-actionable (i.e., lack of constructive criticism). most recent example example: [a link] then radio silence for days (what is it that you _want_, specifically? what is your concrete suggestion?). this is not good collaboration. yes, others suggested it before, even, [a link] and that was my intention early on as well ([a link] but things change and now looking at the diff, it doesn't make so much sense to me, so i asked if your opinion had changed [a link] this is a simple yes/no question: to which again you've failed to give a proper actionable yes/no answer (ideally, it would also include a small justification for the yes/no). the pr was always in a state of flux until all features (including proper mingw functionality, which you requested) were implemented. it makes much more sense to merge this whole set of changes at once (even if split up in different commits). i explained multiple times that the genexps change did not affect the flow of the logic that was previously reviewed. it was still the same logic, just implemented in a more robust way that enabled changing/adding/fixing things like mingw support much easier. i have shown multiple times the benefits of _all_ my changes. in the comment chain up to [a link] i believe i have convincingly demonstrated how they are better than what you proposed, syntax ugliness notwithstanding. i even linked talks, and other learning resources that back up my claims and approach."
686213901,12746,Chocobo1,2020-09-03T02:43:38Z,"i've presented my viewpoints fairly in your prs and most of the time you don't really want to make an effort to meet them. and i lost count of the times you resorted to do personal attacks / snarky comments. it is really not something i would expect to see someone on the team to behave, you better tone it down, that attitude won't get you anywhere. just because we do the reviews and held account for it, we are the bad guys holding the pr author back. i never realize i would stuck myself in such situation, funny... i'm tired of this shit. also i think you should be confident in approving prs: either its quality is acceptable or it is not. you shouldn't feel pressured when making that decision. a rushed decision is rarely good."
686646396,12746,FranciscoPombal,2020-09-03T17:40:42Z,"complete and utter bs, basically any exchange between me and others publicly available on this repo proves the contrary. in fact, in this very pr, there are many such examples of others doing what you describe _to me_, and _initiating_ responses/conversations with snarky remarks/jerky italics/insultingly condescending tone/etc in seemingly bad faith, when there was absolutely no need to. i fucking wish all discussions here could be plain discussions centered purely on technical points. you call this ([a link] not making an effort to meet others halfway? every time something reasonable was asked for/suggested, i complied: - separating the `countries_resolution` removal - separating the graphviz option file - undoing some dependency version bumps (this was less reasonable, for reasons i've pointed out many times before, but i still complied, for the sake of easing review and expediting the merge of this pr) - suggestions for properly justified changes (examples: [a link] [a link] - probably others like i said above, i only resort to this tone in response to snarky remarks/jerky italics/insultingly condescending tone/etc. i respond proportionately. yes, it's a waste of time - but time is already wasted once those toxic comments are made - i prefer punching back. i'm not the one who's responsible for starting it. can you blame people for defending themselves against toxic behavior? great, you're welcome to address the technical merits of this pr. as requested in [a link] i have explained in great detail the reasons for, and advantages of the use of generator expressions. as of yet, i have yet to hear feedback from you on the matter. i'm waiting for technical arguments and suggestions based on the objective points made in [a link] and previous comments leading up to that. arguments that point out some great disadvantage with the current approach (and it can't be stuff like ""muh syntax""), and hopefully suggestions for an alternative solution (something actionable). so far the logical conclusion is that this pr provides an objective benefit to the project, and it does so in an objectively good way (i.e., it's not a ""quick hack""). you're welcome to try to argue convincingly why this is not the case. if you can, i'll gladly implement your alternative. if you can't, but still stall this, you're just holding back the project for egotistical reasons (like a stupid grudge or something). if you don't do a good job with the review and collaborating in the pr, expect to be called out for holding the project back. this isn't even the only case. for example, you're welcome to explain to others why stuff like this [a link] hasn't even received a single comment from you, despite your activity in the repo. yet that pr has been demonstrated to have great value and to work, and has been approved by others. meanwhile, enthusiastic users who want to test with recent windows builds are doomed to either compile themselves or wait for me or xavier2k6 to diligently provide a test build, when it could've all been done automatically by github. plus i shouldn't have to explain why it's a bad for security to foster a culture of users sharing diy binaries with each other. edit: another example: [a link] - a pretty easy one to review, implementing a very nice feature, that's basically just missing a simple executive decision on your part."
686871224,12746,Chocobo1,2020-09-04T02:58:36Z,"contrary of what? you only proved your harsh attitude to the ones who held opposite opinions and non-stop whining for not merging your prs early enough. finally a point that i can agree mostly. however, even for technical discussions, there is always subjective preferences involved. you're targeting the wrong person, i'm not the one throwing aggressive words here, at least not before you start on me. generally speaking, using salty attitude to response to others only demonstrates your personality, it doesn't make you better or get even with others. and i must add, that trait of yours is already having negative effects with at least one of the team members. hey, you must be very opinionated, well i'm not. also let me remind you for the last time: i'm only interested in what interest me and i would say something when i feel the need so stop bossing me and the others on how we do our part, otherwise it makes you look like a tyrant. in your words: ""complete and utter bs"". you live in a binary world, but others are not. i think i did the best i could. and who gives you the rights to judge others? you're merely given the permission to help with the issue list, isn't? i believe it is time, let me ask this upmost important question: what would i need to do to get you off my back?"
686882415,12746,eli-schwartz,2020-09-04T03:35:14Z,"since the current blocker seems to be ""i don't like genexp"" and the arguments on both sides seem to be ""i think my preference looks prettier"", i think it's becoming increasingly obvious that the pr would benefit by being split out into logically distinctive changes. maybe i'm just a boring mailing list lover and patch file review fan (yes, i do consider commit messages something to review as well). and it's not like i am important here. but i actually don't ever see a reason to *avoid* splitting out logically distinct changes; it's a sign of development hygiene and helps to let changes be reviewed simultaneously, backported easily, and merged in arbitrary order. more importantly, it would let useful changes everyone can agree on, be accepted *now*, which i actually do have strong feelings about w.r.t. feature/summary improvements, because i don't develop qbittorrent and don't spend much time reading its build system, but i *do* maintain it for a linux distro and if qmake is dropped due to qt 6 and cmake is chosen to be the sole build system, i want to be able to build it using cmake without gouging out my eyes every time i want to pass options to it. :) (i would also be willing to help port this to meson, and i've already added at least one new feature to meson specifically because while glancing at the qbittorrent compilation process, i discovered something that could not be done easily and i wanted to make it easier. [a link] imho meson now has *the* nicest way to handle qrc-based translations out of any build system.)"
686929010,12746,glassez,2020-09-04T05:59:57Z,"personally, i am not against genexps, i am against their overuse. i expressed this opinion as soon as it was added as a separate commit. there were also other similar opinions (at least one), but merged it with other changes despite that attentions. you're wrong. my argument is that there is some community here (a team, however small). and if two out of three say that something is ""shit"", then it is (at least within this community, even if there are many supporters of the opposite opinion outside). what is more important is not the abstract ""improvements"" themselves, but only the benefits they can bring to the project. but what might be the benefit if something causes inconvenience to the majority of the members of the team? even if this is due to the lack of coolness of the team, but in any case, it will be more useful if we use the tools that are convenient for us, than to try to achieve some ideals, making it an end in itself. if an idea is good in its essence, it will still find its application when people grow up to it. but then it will be really useful."
687066018,12746,FranciscoPombal,2020-09-04T10:33:47Z,"this point isn't specifically about _my_ prs. previously i gave [a link] and [a link] as an example. i'm rightfully complaining about useful prs not getting the attention they deserve in a timely fashion. in that specific comment and in the context of this pr, you were not really the target of that comment, that's true. i'm just saying that i deal with bs comments a certain way. it's fine by me if you disagree with my methods of dealing with such things, and decide to employ other methods for yourself. but i don't think it's fair for you to tell me that i ""better tone it down"", as if there wasn't a good reason for me to act this way. additionally, saying stuff like ""most of the time you don't really want to make an effort to meet them [my viewpoints]."" is just unfair and a misrepresentation of facts. also let me remind you for the last time: i'm only interested in what interest me and i would say something when i feel the need so stop bossing me and the others on how we do our part, otherwise it makes you look like a tyrant. i'm not bossing anyone around. certain people have certain responsibilities in a project. if you feel you are being ""bossed around"", couldn't that be a symptom of something? is it too much to expect that one of the only two contributors with merge access be a little more proactive in certain prs? especially now that the maintainer has been missing for so long. honestly, even a little comment like ""hey, i can't really address this right now, but i'll check it out""/""thanks for the links and explanations, i'll think about the genexp changes and post some feedback later"" would have been nice. i think expecting at least a little feedback is reasonable. i don't need permission to judge others. it's not like i'm saying you're doing a terrible job all around. you do review many prs and submit nice improvements to the project. i think i'm judging you fairly. on my part, i have helped solve, close, and lock _hundreds_ of issues, including very important ones about performance, and issues that ended up exposing bugs in libtorrent. all this despite the deck being stacked against me - my prs about new issue templates and contributing guidelines have been stalled for a long time, which means low-quality/information issues keep getting posted, which makes my task more difficult. there's a reason why we're still below 2900 issues without resorting to extreme tactics, and it's not magic. i think i'm doing a good job overall - not a perfect one, as i do recognize i could do a better job labeling issues, for instance (i think i need to add a few labels... i should get around to that). but if you don't think so, or have other criticisms that i'm not thinking of, you're more than welcome to share them. the team page would be a good place for this, to not derail this further. a team member has done so in the past, and things went very well. provide timely feedback to help expedite merging important prs for the project. if during a certain time period, the reason you don't do so is because you go on vacation or have other irl stuff to attend to, that's fine. but considering your position in the project, i don't think it's reasonable to keep ignoring prs like [a link] and [a link] or providing feedback in this one, when you're otherwise active in the repo. -schwartz it's not like the genexp change came out of the blue. it came naturally, and out of necessity, as i've stated before. the overall logic that had already been reviewed remained the same. you can think of genexps as just a refactoring. also, as i recall, you were the only one that at least attempted to provide some arguments against the change other than ""genexp syntax bad"" (feel free to point if there is indeed such a comment from someone else, i don't feel like digging through everything else right now). that does seem nice, especially because they fully embrace this: but personally, at least for now, i see a great future in cmake in this project. have you tried out this pr, recently? is there anything in particular you think should be done in a significantly different way? what are the itches that remain to be scratched, in your opinion? as a reminder, a list of future improvements i plan to build on top of this are listed in the middle of this comment: [a link] --- i have decided what i am going to do. i'm going to submit an alternative pr called ""cmake scripts overhaul, alternative implementation"" (sorry for the unoriginal name). in this pr, i will attempt to do a bug-for-bug implementation of this one, but with no (or at least, as little as possible) genexps, so that we can all clearly see the difference and better reason about the differences in implementation and pros and cons of each. i don't think everyone will be happy, but at least it's a positive result for the project if one of the prs gets merged (and, of course, whichever one gets approved, i'll separate the commits into discrete changes as best as i can)."
687077527,12746,glassez,2020-09-04T11:03:15Z,"i would even ask you to publish all trivial changes as a separate pr. i hope you don't intend to make the alternative version deliberately worse... to show real differences in approaches, you have to make it as high-quality as the existing one (just imagine that you really want it, but genexps don't exist, at least where it's not strictly required)."
687085914,12746,Chocobo1,2020-09-04T11:24:54Z,"yes i can, as i said before, (some of) your behavior is already affecting the team morale. yes, in a way, i do feel being harassed. i expect you to respect my (and all others) way of participating in this project, how i participate is my freedom and you shouldn't step on it. there used to be 3 of us (without counting the maintainer), but at that time things wasn't prettier than now. i would expect the new member to be able to work with other members **harmoniously**. you're missing the point: you don't judge others. if you do, you can drop expectation of having mutual respect (and you can go straight full rampage mode if you like). are you going to compensate me for putting more time in this project? i guess not. then i'm sorry you don't get to tell me how i allocate my free time or the way i go. btw, this is the last warning i will give you, if you keep acting like a dictator, don't be surprised i get you on my block list again, this is the only way i could do to keep your distance from me. no comments until others express active supporting (and or approval) of them."
687135686,12746,eli-schwartz,2020-09-04T13:11:41Z,"i'm not disputing that. from what i can tell, the objection is not ""this makes the build system less efficient"" but rather ""i don't like the syntax"". the obvious application of ""i don't like the syntax"" is that it makes it less pleasant to have to personally deal with. that means it inconveniences you without bringing benefits. but is not an accurate summary, because it gives the (false?) impression that you'd recommend to the world that no one use them, when all that matters is whether it helps the qbittorrent maintainers keep track of their own build system. personal taste in syntax *does* matter and can have very real effects on maintainability. all i'm saying is that it's helpful to keep in mind that that is, in the end, what it is. i think we more or less agree with each other on that, though. :) opening a new pr with an alternative implementation is slightly missing the point of what i said, which is that given there is currently a conflict of opinions in how to approach this case, it would be best to separately pr individual changes that can be agreed on, and get them cleared out of the way. yes, it's more work than one mega-commit, but in the end it is more readable and bisectable, and brings some improvements to everyone, faster, even if it isn't *everything* you wanted to do. it will then be easier to reason about the effect that genexps have on the codebase, and which precise benefits it might have."
687137672,12746,glassez,2020-09-04T13:15:11Z,"yes, and i'll sum it up here. i do not mind using genexps, at least to solve the tasks for which they are intended (let me remind you, they are not intended to replace other tools). i don't even mind if genexps are used in some other places, as long as the use is justified. but you overuse them, which leads to the fact that the cmake project becomes an end in itself (or vice versa, you treat the cmake project as the basis of the basics, so you overuse its concepts, in particular genexps). but the build system is just a ""slave"" within the entire project, so it should modestly do its job, not dictate its own rules. all its elements are just tools, and they should not define the logical structure of the project, but be used according to the existing one. so i think it's much more convenient to see the following cmake project structure (generally): 1. common declarations 2. platform dependent declarations (per platform) 3. feature dependent declarations (per feature) 3.1. common declarations 3.2. platform dependent declarations (per platform) by overusing genexps all this structure is lost in cmake entities."
687204823,12746,FranciscoPombal,2020-09-04T15:03:04Z,"out of all these changes, which ones exactly/what type of changes do you consider good ""trivial"" candidates to extract from the main pr? you don't need to list every case, just a few examples so i can get the picture. of course i won't make it deliberately worse, i intend to give it the best possible choice (in fact, i will be basically doing the exact same thing i did before the genexp change, with some improvements that i've learned along the way...). otherwise it would just be a pointless exercise in pettiness. i want to get a real improvement merged as much as anyone else. -schwartz i guess we disagree then. the way i see it: regardless of how i split up these changes, there is fundamental disagreement about the overall approach. others are not convinced that current way is the best one to do things, syntax notwithstanding. so i think splitting the commits now would be extra work that would not really get us anywhere, as there is no disagreement about that. the plan then becomes to make an equivalent pr but without genexps (as one mega-commit as well), to compare both overall approaches. after a decision is made between both prs, i'll work on splitting commits until a good degree of separation is achieved. actually, we might end up reaching a consensus about the final change being a mix of the two. --- i agree. but the changes i made require absolutely no changes to the current organization of the project. i believe that a well thought-out buildsystem gets out of your way, and ideally, even helps you reason about the overall structure and architecture of your project. much the same way a well-thought out directory structure for the project helps you in this regard a little bit as well. the current architecture reads like this: - there is a project - the project is made up of components (gui, base, webui, app) - each component is a build target that has requirements (source files, compile options, definitions, link options, ...) and a relationship to other targets - each requirement is specified in place, and its logic depends on platform and features, but is specified independently of other targets' requirements - it's easy to add new components, change the requirements for existing ones, or otherwise switch things around to a great extent without fear of breaking anything else (i.e., it is not brittle). the problem with is that does not allow for the same kind of separation of logic. every requirement for every target is potentially all over the place. wait for the other pr to see the difference. i hope i can show it more clealy."
687232307,12746,FranciscoPombal,2020-09-04T15:48:01Z,"i would expect the new member to be able to work with other members **harmoniously.** some of _others_ behavior at times is affecting _my_ morale as well. i expect my posts to be interpreted in that context. again, in the context of this specific pr, some of this kind of behavior i speak of is not referencing you. i guess we agree to disagree here, but i don't want to continue this discussion. at times, the ball is in your court, and your the only one that make a play. sometimes, there are a things that may stall because they depend on such a play. certain ways of not participating in the project can limit other's freedom to participate as well. the thing is, there are times where your input has been required and you simply did not do anything despite being otherwise active in the repo. i'm sorry, but due to the project's organizational structure, such responsibilities fall on you. if your action is radio silence, that is going to be interpreted as carelessness, disrespect or some kind of discrimination against the other project members/contributors (no, not necessarily of the ""sjw"" kind, could be just ""i don't like them""). for example, i felt like ignoring [a link] was starting to become disrespectful to the ones who take their time to prepare test builds. to me, not devoting enough attention to such prs, even after judicious tagging (and bear in mind this is a span of months), makes me feel like that kind of work is being taken for granted. this is far from me being a dictator. there are some responsibilities that i feel like you haven't lived up to lately. right; i appreciate that you have already engaged in [a link] but in [a link] it's precisely your input (and later, approval) that's needed now, to start converging on a concrete decision. it's obvious that people are waiting on _your_ decision and will maybe even consider changing/adjusting their own positions based on it. you are one of the two main active contributors _and_ you have commit access, so your opinion/decision bears a lot of weight and swaying power. this is the kind of responsibility i refer to."
687245210,12746,Chocobo1,2020-09-04T16:12:47Z,"those are the exact words that would come out from a dictator (or in another word, micromanagement): pointing fingers to others and micromanage their job. i really do hope you get the warning and keep your distance."
150964356,3989,Pireo,2015-10-25T20:06:18Z,"demonoid can eventually make use of this function, since it does search in description too."
151027736,3989,DoumanAsh,2015-10-26T05:23:44Z,can you please also add screenshot of how it looks with current code at the head's message?
151040707,3989,DoumanAsh,2015-10-26T06:26:05Z,i made small review for you. this is mostly style though
151091244,3989,glassez,2015-10-26T10:19:16Z,note: this pr may interfere and conflicts with #3832.
151115095,3989,zeule,2015-10-26T12:14:21Z,thanks to all of you for the edits and suggestions. it seems to me that rebasing commits from pr #3832 on top of this one is easier than vice-versa.
151118099,3989,zeule,2015-10-26T12:29:50Z,"yes, please. (screenshot moved into the top post)"
151137522,3989,glassez,2015-10-26T13:43:39Z,"i don't think so. usually, when there is simultaneous change and move, have to manually add some things. okay, let maintainer decides which one of us will have to suffer."
151151251,3989,zeule,2015-10-26T14:19:08Z,"yes, i meant that resolving a conflict before the files got renamed and split should be easier."
151197558,3989,DoumanAsh,2015-10-26T16:29:47Z,i looked over picture and in my opinion it looks good without extending vertically space for filter bar. compact and nice! i will leave review to someone more capable :) **upd:** but maybe you should change a bit flag `names only` it looks strange a bit comparing to other fields i.e. you should follow the same style for all fields i think
151228526,3989,zeule,2015-10-26T18:01:49Z,"can you suggest something, please? because i can't understand what style do you mean."
151296779,3989,DoumanAsh,2015-10-26T22:01:01Z,sorry. i'll try to illustrate it with my _awful_ paint skills: [a link] green is name and red is value. `names only` flag looks off comparing to seeds/size filters at least for me.
151302309,3989,zeule,2015-10-26T22:25:51Z,"thank toy for the illustration. do you mean that the label in ""names only"" is at the right side from the value widget, while all other labels are at the left side? if so, i do not know what can i do about this. qcheckbox looks like it looks, i do not want to change it. neither i want to move all other label to the right side. what to you want to change?"
151371223,3989,glassez,2015-10-27T04:21:12Z,is right here. you need to put the label before the checkbox (you never seen one?).
151371997,3989,zeule,2015-10-27T04:30:36Z,dou you want a checkbox without a label and a separate label at the left side of the checkbox?
151379678,3989,DoumanAsh,2015-10-27T05:35:15Z,"oh... sorry. i actually didn't put much though about how checkbox works. yes, if it doesn't allow to specify how checkbox label is placed, then it would be better to place separate label. it is just difficult not to notice how it is off comparing to other boxes,"
151385572,3989,glassez,2015-10-27T06:15:51Z,you can change qcheckbox layoutdirection property to qt::righttoleft.
151465828,3989,zeule,2015-10-27T11:47:10Z,"since such hig rules violation is new to me, i did not know hot to properly do that. so, , thanks for the help! but before committing this sin, could you evaluate the following variant, please? ![a link]"
151469569,3989,Pireo,2015-10-27T12:03:49Z,"i would call it ""search in torrent names only"" because ""names"" can also refer to files."
151480141,3989,glassez,2015-10-27T12:45:58Z,"horizontally arranged checkboxes it's the same hig violation! if you want to avoid this, why don't you try to use a different control? for example, qcombobox with following values: ""everywhere"", ""torrent names only"", and with ""search in:"" label?"
151482608,3989,zeule,2015-10-27T12:54:22Z,"agree, combobox would not cause such problem. checkbox is used because it is much easier to click it than to select a value from a combobox. i've rejected combobox but maybe it is better to return to this option?"
151538861,3989,DoumanAsh,2015-10-27T15:22:34Z,"not sure, but i think there is no need to add ""enable"" after checkbox anyway i have no idea about hig :d so dunno what to say... combobox might as well work. mostly it will be the same checkbox"
151539855,3989,glassez,2015-10-27T15:25:59Z,"imo, it should be either checkbox without ""enabled"" after it or combobox."
151552486,3989,zeule,2015-10-27T16:06:18Z,i thank all of you for the suggestions. let it be a combobox.
152278873,3989,ngosang,2015-10-29T18:35:07Z,"why you don't replace the ""no limit"" string with ""min"" and ""max"" so we can remove the labels and save space. example: ![a link]"
152286475,3989,zeule,2015-10-29T18:55:40Z,"if both spin boxes show numbers but not ""min"" or ""max"", this part of the panel would reads ""seeds xx xx"" which is understandable (additionally, we can put a dash between the spin boxes ), but if on of them contains a number and the other one a special string, the phrase becomes too incorrect. we can change labels text a bit to shorten them. for instance, ""seeds from xx to xx"" reads almost correctly and is already shorter. maybe even ""seeds: xx to xx"" is it still clear? special cases are also not a problem then: ""seeds: 100500 to no limit"". what do you think?"
152726821,3989,Pireo,2015-10-31T11:55:18Z,do you think demonoid can be restored to its original behavior (searches among description too) and let these filters do their work on it?
152726867,3989,DoumanAsh,2015-10-31T11:56:53Z,"this is intention of this commit. once it will be delivered, all filtering will be done via new interface in search tab. nothing will be done in search engines"
152740226,3989,Pireo,2015-10-31T14:39:10Z,i'm just saying this in case someone didn't notice the current behavior of demonoid.
152822120,3989,sledgehammer999,2015-11-01T12:11:59Z,"sorry for the very late input in this pr and to #3812. yes, i agree with the scope of this. i didn't review the code. i looked at both discussions and the screenshots posted. first of all i agree with this: and the same be done to ""size"" filter. in this cases (seeds/size) no size should be indicated by `-`. something else that occurred to me to save space( i am not expecting you to do it if you don't want to): to get rid of the search status line. like most browsers we should indicate the status in the tab via an icon. eg completed->a check icon, ongoing->throbber icon, canceled->""x""/stop icon. note: we already have `src/icons/skin/spinner.gif` ps: i'm going to review/merge this for v3.3.1."
152864140,3989,DoumanAsh,2015-11-01T21:08:36Z,"for next update, please, add `closes #972` into commit title. this is some old wish to have such filters, found it while looking for search engine issues."
153096672,3989,zeule,2015-11-02T17:43:44Z,"thank you, i've changed the title. filtering by date is not implemented, thus only ""partially closes""."
153097100,3989,sledgehammer999,2015-11-02T17:45:28Z,he change the commit message. you can do it for the last commit `git commit --amend` and then `git push --force `
153103756,3989,zeule,2015-11-02T18:04:53Z,", the labels were changed. now they read: ""seeds: xx (or ""no limit"") to yy (or ""no limit"")"". i don't like the idea to replace ""no limit"" with ""-"". is it really that much better in your opinion to have a bit shorter widget but to loose correctness of the sentence? do all languages use dash as a replacement for absence of data? otherwise in those which do not the filter panel will be significantly longer than in english."
153117333,3989,DoumanAsh,2015-11-02T18:30:13Z,"oh... i wasn't very attentive when looking over search issues. well at least there will be reference to this rp so that the one who raised issue will be able to see that something is changed. about no limit. i think we can use the same symbol as for other limits in qbt: # ∞ what do you think guys? i think infinity should work out, besides we already have it in use."
153123459,3989,zeule,2015-11-02T18:53:54Z,and what then should be used for the smallest possible value? ε?
153124904,3989,DoumanAsh,2015-11-02T18:59:38Z,umm... shouldn't infinity works both ways? p.s. well that's the only thing i remember from math :d
153126996,3989,zeule,2015-11-02T19:08:26Z,"i guess the discussion yields that special symbol for minimal values is not needed, because neither seeds number nor size can not be smaller than zero. so we can use zero."
153127532,3989,DoumanAsh,2015-11-02T19:10:24Z,oh yes... that's the most obvious approach...
153151479,3989,sledgehammer999,2015-11-02T20:46:25Z,"yeah, use 0 for min and [a link] for max"
153176890,3989,zeule,2015-11-02T22:23:48Z,done.
153340614,3989,Pireo,2015-11-03T12:41:46Z,"guys, just a question: do you believe torrentreactor is better now making use of this option, or with the in-py file filters? because it doesn't search in description or files, just fakes, and i guess nobody would like to have them."
153413508,3989,DoumanAsh,2015-11-03T16:48:47Z,it is difficult to implement search in description by ourself. and it would be more right to make it on torrentreactor side. these filters will work only with currently available data and nothing more.
153484462,3989,Pireo,2015-11-03T20:51:11Z,"no, i was just saying to let it already filtered of the fakes, without any option filter to work on it."
153498757,3989,ngosang,2015-11-03T21:43:29Z,i'm living aboard and i don't have a machine with linux to test the code. i will be back next month but you can keep working on this and merge without my review. :smile:
153682530,3989,Pireo,2015-11-04T10:52:49Z,"i was thinking about a filter that only displays torrents with the exact word and not as part one another one ex. if i search ""night"" and i don't wish to find ""nightmare"" this could help. worth it? so the menu can be similar to the ones for seeds and size. ""find: everything; torrent names; exact word""."
153761840,3989,zeule,2015-11-04T15:25:07Z,", do you mean that the in this mode an item is not rejected only if the search term is followed by a delimiter character or end of string?"
153855367,3989,Pireo,2015-11-04T20:38:17Z,"only if it is followed and preceded by space i guess, it's just an idea."
154753570,3989,ngosang,2015-11-07T21:36:45Z,"crash in linux with qt5. steps to reproduce: 1) type ""test"" without quotes 2) press enter or click the search button [code block]"
154754060,3989,ngosang,2015-11-07T21:45:18Z,"i want this changes: 1) search in options should be: ""torrent name"" and ""torrent name and files"" 2) by default search in option should be ""torrent name"" 3) remove b, pib and eib from combos 4) max torrent size should be 1000 tib by default instead of 1000 b"
154885421,3989,zeule,2015-11-08T23:09:39Z,"mea culpa! committing without testing is... well, you know that. btw, , i've put code which sets special value text for search control into a wrong file (searchtab.cpp instead of searchengine.cpp), hence the crash. but compilation passed because searchtab class also inherited ui::search_engine. i guess it is a leftover from a refactoring, because when i removed the inheritance compilation passed. is it correct guess?"
154886118,3989,zeule,2015-11-08T23:22:39Z,", could you clarify the reasoning behind your suggestions, please? why? are we sure that all search engines do not (and will not) search anywhere else except file names and torrent names? why? i could understand that you do not believe in usefulness of pib and eip, but why remove bytes? it is actually equal to infinity by default. i will fix the ui. the panel even should be disabled before the search gets activated. do you want the limit be 1000 tib instead?"
154890519,3989,sledgehammer999,2015-11-09T00:16:24Z,"are you talking about `#include ""ui_search.h""` in searchtab.h? well, git blame shows that line was introduce back in 2008. i wasn't part of the project then. if it compiles, then i guess you can remove it. i don't think it is wise to drop b, unless we want to equate the lack of unit as ""bytes"". about the where to search(names/files): current behavior should be preserved. max size should be unlimited by default."
154915235,3989,glassez,2015-11-09T04:15:14Z,this was fixed in #3832 about 2 months ago.
155030916,3989,sledgehammer999,2015-11-09T11:13:23Z,i'll give priority to #3832 since it touches the core/base of the are you are touching. and maybe it will result in cleaner implementation by you. i target both prs for v3.3.1.
155075104,3989,ngosang,2015-11-09T14:15:42Z,"we have 9 official search engines. 7 search only in the torrent name, btdigg search in the torrent name and in the names of the files, torrentreactor returns some unrelated results.the thing is that we can't tell btdigg to search only in torrent name. 1) torrent name (default option) we search in all engines. most will return torrents with the search words in the torrent name. btdigg will return some results with the search words in the torrent name and other without it (the search words are in the torrent files name). torrentreactor will return some unrelated... **we filter the results to show only those which contains the search words in the torrent name.** 2) torrent name and files (you can let ""everything"" if you prefer) the same as in 1) but **we don't filter the results**, we show everything. this mode will include btdigg search in files and torrentreactor unrelated results. ok, remove pib and eip and let b. i prefer to see **∞**. what will be the default unit? in think **∞ tib** is ok. since ""search status"" and ""search filters"" are independent for each tab should be inside the tab. we should also save some space, for example, moving the number of results to the tab name. ![a link]"
155083333,3989,sledgehammer999,2015-11-09T14:46:18Z,number in tab name is maybe out the scope of this. and might not want (or be able) to do it.
155093362,3989,zeule,2015-11-09T15:19:10Z,i agree that the number is another story. can do that in a separate commit.
155097266,3989,zeule,2015-11-09T15:33:14Z,", agree with you regarding the widgets placement and will move the filter bar inside the results tab once #3832 got merged. do not agree about pib and eip: they don't make ui any worse, as to me, but the code is a bit cleaner with them (since we handle all the prefixes which can be inside of int64). and still i insist that default option in the mode list has to have meaning ""unfiltered"", because we do not know what search plugins might do (in future and custom ones). actually, i would put ""unfiltered"" there, but that creates interference with the other filtering parameters."
155099598,3989,ngosang,2015-11-09T15:41:42Z,"you can let those but change the default max size unit to gib. if you set by default `∞ eib` i have to change the number and the unit always. i am strongly against. btdigg and torrentreactor will fill the list with not related results, this is the behavior we were trying to avoid when we added the filters within the plugins. the default search should be only in the torrent names."
155101708,3989,ngosang,2015-11-09T15:49:37Z,you have to change src/searchengine/nova/engines/versions.txt and src/searchengine/nova3/engines/versions.txt because you updated 2 search engines.
155127188,3989,Pireo,2015-11-09T17:07:28Z,demonoid also does search in description.
155131057,3989,sledgehammer999,2015-11-09T17:21:56Z,i think i already resolved how symbolize lower/upper limits here: [a link]
155131750,3989,glassez,2015-11-09T17:24:56Z,offtopic: ∞ eib = ∞ b :)
155132408,3989,sledgehammer999,2015-11-09T17:27:37Z,exactly.
160708648,3989,Pireo,2015-11-30T18:05:23Z,any news?
160709393,3989,zeule,2015-11-30T18:08:24Z,nope. waiting for #3832.
162330039,3989,sledgehammer999,2015-12-06T17:17:29Z,either rebase now or wait for #3832 to do only one rebase(if needed).
162330956,3989,zeule,2015-12-06T17:35:29Z,i want to move ui elements from the search bar into the search results tab. wiil do this after #3832
166363004,3989,sledgehammer999,2015-12-21T17:14:20Z,#3832 is merged. rebase when you can.
170989998,3989,zeule,2016-01-12T17:48:07Z,"sorry, i'm busy these days. hope to do this during the next weekend."
178599071,3989,zeule,2016-02-02T14:31:13Z,feel the same as you do :)
189263470,3989,zywo,2016-02-26T12:55:43Z,can you rebase?
189698644,3989,zeule,2016-02-27T18:19:54Z,"i'm very sorry for the long delay and that i was not able to do this earlier. so, it is rebased and filter widgets were moved inside of the search tab. the search status label was transformed into an tab icon and tooltip, and as such 3 new icons were added to resources. the code in searchtab and searchwidget classes needs a new review."
189721064,3989,zeule,2016-02-27T20:43:19Z,new ui: ![a link]
189734336,3989,DoumanAsh,2016-02-27T21:42:42Z,looks nice. though `inf` is kinda out of place :d
189899564,3989,glassez,2016-02-28T16:31:53Z,`inf`?
189906432,3989,zeule,2016-02-28T17:03:18Z,"do you think this abbreviation is ambiguous or unclear? what then? infty? full, unabbreviated word?"
189915325,3989,DoumanAsh,2016-02-28T17:57:30Z,"it might only me, but i believe symbol `∞` are better suited here rather than named it as `inf.` mostly i think it is inconsistent because you use it with numeric lists. `0 to 999` - is ok `0 to ∞` - is ok `0 to inf.` - is kinda strange looking it is just how i see it, i do not suggest you to change it. but i believe it is as inconsistent when you present numeric ranges mixed with words. p.s. but i'm not sure if this abbreviation `inf.` is commonly known or used and neither i'm capable of confirming it."
189917211,3989,glassez,2016-02-28T18:21:25Z,+1
189921389,3989,zeule,2016-02-28T18:46:32Z,"ok, it is `∞` now."
190492527,3989,zeule,2016-03-01T01:56:42Z,"speed limit widgets already use ∞, thus the same symbol has to be used here, for the sake of consistency."
190802585,3989,glassez,2016-03-01T16:40:50Z,do your pr fixes #4790?
190911240,3989,zeule,2016-03-01T21:23:02Z,"no, it does not. , i believe that all your comments except the one on came cased parameter names have been addressed now."
201500593,3989,ngosang,2016-03-25T21:02:29Z,"several thoughts: 1) when you change the search engine plugins you have to update the version and the version.txt files. i think you should update the search engine plugins in other pr because we already made several changes in that plugins => #4997 this way will be easy to merge. 2) if while qbittorrent is searching i click the stop button i see an error message. you should display the message ""the search was aborted by user"" and the task-complete.png icon. ![a link] 3) default value for search in combo should be ![a link] thank you very much. with this little changes this pr is ready for merge."
201520739,3989,zywo,2016-03-25T21:33:05Z,this is what i get when i click the stop button while qbittorrent is searching: ![a link]
201566760,3989,ngosang,2016-03-25T22:56:22Z,i'm using linux + kde 5 + qt5 + python3 and that is the result.
201606882,3989,Pireo,2016-03-26T00:14:17Z,"demonoid plugin by default does search in torrent names only, but the site does in description too."
201647763,3989,zeule,2016-03-26T01:26:54Z,", thank you for the suggestions! shouldn't git handle the merge? if it says that version change can not be merged, i change that. i'lll look into it. this is my mistake, probably. disagree with you. we do filtering here, why should i have most of the results filtered out by default? if you believe that that mode is better, let's make it user selectable. i'm sure there is enough space in the filter bar to add a small button which will save current filter as default one."
201679674,3989,ngosang,2016-03-26T02:31:30Z,"because btdigg and torrentreactor are included with qbittorrent and they reruns a lot of unrelated results. when a new qbittorrent user tries the search engine for the first time he will see a ton of unrelated results and he will open an issue here in github. that was the reason because we implemented the filter inside the python code for those two search engines. the user complaints stopped after filtering the results. i know you want to search inside description and that's the reason for this pr but you are just one user, we should think in the majority."
201680601,3989,ngosang,2016-03-26T02:33:02Z,we can change that after this pr is merged.
201681662,3989,zeule,2016-03-26T02:35:38Z,"so, what about saving defaults then? and ""default default"" is ""torrent names only""."
201688280,3989,ngosang,2016-03-26T02:48:21Z,"ok, maybe the ""save"" button is not necessary. just save the combo value when changed. also put ""torrent names only"" first in the combo list."
201702846,3989,glassez,2016-03-26T04:18:59Z,+1
202608826,3989,zeule,2016-03-28T22:39:05Z,", : regarding the icon and status after activating the ""stop"" button. the answer why we see different icons is that there is different behaviour on linux and windows (see commit 7c00e80f). in particular, different status are set in case of linux and windows (see [a link]. this pr simply does not change that behaviour. could the search team clarify this for me, please?"
202641814,3989,zeule,2016-03-29T00:25:29Z,search in torrent names only (old behaviour) is the default one now. selected search mode is saved in preferences.
203589621,3989,zeule,2016-03-30T19:11:37Z,"from the other hand, pr #4800 deals with the status problem already. let' us merge this as it is, since there are no new mistakes with respect to search termination in it (well, i hope), and then rebase #4800 which will fix the status icons."
203591074,3989,zeule,2016-03-30T19:16:18Z,maybe one more addition i would consider is to extend the results count text and show filtered results number too. like `results (showing 15 out of 299792458)`
204011325,3989,zeule,2016-03-31T16:33:06Z,"the ""results"" label not shows both filtered and unfiltered counts."
204011875,3989,zeule,2016-03-31T16:35:00Z,"shouldn't the ""search in"" label be rephrased as ""match in""?"
204789438,3989,ngosang,2016-04-02T19:53:41Z,undo the changes in the *.py files. i did more changes in #5058.
204795192,3989,zeule,2016-04-02T20:15:17Z,"yep, thank you for the note!"
205051685,3989,zeule,2016-04-03T20:46:49Z,", thank you for the suggestions!"
205052717,3989,sledgehammer999,2016-04-03T20:53:01Z,"i am done with the review. i have left some comments that are easy to fix. @ everyone i know there has been a shitload of discussion from my last comment in this thread. i haven't read anything. if something needs my attention for decisions(or opinion) please comment below here. otherwise, once fixes my comments i am going to merge this."
205053470,3989,sledgehammer999,2016-04-03T20:56:56Z,i forgot to mention that i didn't compile/run this. it will be my final step before merging. i hope i don't find any ui weirdness.
205076514,3989,zeule,2016-04-03T23:28:38Z,"i've implemented your edits and suggestions. seems to be working and is ready to be merged. let me remind you to merge #5058, as the changes in the plugins code moved there."
205076811,3989,zeule,2016-04-03T23:31:36Z,ups... checks failed
205082299,3989,zeule,2016-04-04T00:23:44Z,"i've replaced model file include in the `searchtab.h` header with forward declaration. i don't know why qt4 travis build was failing with [code block] in `searchtab.h`. my local clean build was compiling fine. so, i've added an illogical include into that file, ` `. the build passed ok then, but i can't understand what was wrong because the error was in moc_ file, and my local moc_ file is obviously different from the one in travis."
205084621,3989,zeule,2016-04-04T00:32:55Z,"if somebody wants to help to sort it out, to reproduce just replace [code block] with [code block] in `searchtab.h` and compile via qmake and qt4. cmake build compiles fine, obviously due to the fact that cmake generates a ""super-moc"" file, which includes all the project moc-files and compile that file instead. a required include comes from one of the other headers in this case."
205086155,3989,zeule,2016-04-04T00:38:41Z,", i think this can be merged as it is, with the crazy include."
205446164,3989,ngosang,2016-04-04T18:54:26Z,works fine for me.
206007383,3989,sledgehammer999,2016-04-05T22:17:19Z,"i think everything works fine. thank you for the work. ps: qt4+qmake+qmetatype works for me on windows and debian unstable. but isn't very important to find out why travis(ubuntu trusty) fails. ps1: the ""ongoing"" icon looks ridiculous but what can you do? it is the oxygen theme."
206009527,3989,zeule,2016-04-05T22:23:03Z,i agree with you that the icons are ugly. afaik they were made without designer. we can take an icon from another theme.
206012513,3989,sledgehammer999,2016-04-05T22:27:58Z,no need. on linux it should use the ones from the system's theme. on windows/osx see #4253
206016555,3989,zeule,2016-04-05T22:35:36Z,"unfortunately, those names (""task-"") are specific to the oxygen style."
206017422,3989,zeule,2016-04-05T22:37:26Z,#5058?
206020630,3989,zeule,2016-04-05T22:43:01Z,"oh, i see now your question there. ok. thank you!"
375884804,8584,glassez,2018-03-24T12:33:35Z,", as i expected, websearchhandler is quite useless class. it just senselessly duplicates the data and it fragments logic (pulling it out of the context of the controller). all you need is to store searchhandler and use it to obtain data. btw, why do you need mutexes?"
375889153,8584,Piccirello,2018-03-24T13:24:49Z,"actually, what it does is build a queue of results. it then returns a subset of that data on each results call. you’d like all of this logic to live in searchcontroller? that would seem to go against the goal of keeping the controller as stateless as possible. i’d prefer to encapsulate this logic in a separate class and keep the controller dead simple. if others are in agreement i can modify my implementation."
375889285,8584,Piccirello,2018-03-24T13:26:52Z,"this is very possibly over engineering on my part. the goal was to make search results retrieval thread safe, but if we know there’ll only ever be one thread accessing results then this is obviously unnecessary."
375889815,8584,glassez,2018-03-24T13:34:48Z,"qbittorrent web server is single-threated. i see no goal in your implementation. like i said, you were just fragmenting the logic. in fact, it is doing the same thing now, only indirectly. instead of storing searchhandler you store websearchhandler (which wraps searchhandler in it). what stateless you are talking about? please describe in detail (with workflow example). actually, it just duplicates data. searchhandler already stores all data. why not return its subset?"
375941110,8584,Piccirello,2018-03-25T02:46:14Z,i didn't realize the recent search changes added `qlist m_results`. previously new results were only emitted. i now agree with your previous statement; the need for a separate `websearchhandler` has been obviated. will update once the changes have been pushed.
375949977,8584,glassez,2018-03-25T07:00:56Z,", another thing that confuses me is you share searches between sessions (i.e. you can obtain results from search started in another session). i don't think that's right. ?"
375953222,8584,Piccirello,2018-03-25T08:13:11Z,"the sessions all belong to the same user, just in different instances of the webui. i don't think there's any reason to restrict access within the api."
375962059,8584,glassez,2018-03-25T11:05:29Z,there is one step only from single-user mode to multi-user mode... but it's not so important now. another task of sessions is the timely release of resources when a user ends the session (or when the session becomes outdated).
376022534,8584,Piccirello,2018-03-26T01:36:34Z,`websearchhandler` has now been removed and `searchhandler` is used directly.
395308887,8584,Piccirello,2018-06-07T06:33:30Z,"after a short hiatus, the api now more closely models the interface you described. it still needs extensive testing and more robust search job cleanup."
395836029,8584,Piccirello,2018-06-08T17:45:10Z,"if the `searchhandler` instance were to live inside the user's session, and thus get deleted when the session ends, who should own it? the `websession` class? i'll of course have a timer to delete results after some period. but also deleting searches upon that session's demise seems like the right approach."
395840407,8584,glassez,2018-06-08T18:00:20Z,"apparantly, yes. i haven't seen your current implementation yet. i'll take care of that later."
396562833,8584,glassez,2018-06-12T11:53:43Z,e.g. see how torrents subset can be obtained in torrentscontroller: [a link]
397509633,8584,Piccirello,2018-06-15T04:24:38Z,"i believe i've addressed all comments and concerns. the `searchhandler` instances are stored in a hash table- keyed by session id and then search id- and are owned by `searchcontroller`. they get deleted when the user calls the delete api endpoint, or a 30 minute timer expires."
399819137,8584,Piccirello,2018-06-25T03:16:49Z,addressed comments and squashed commits.
404349717,8584,Piccirello,2018-07-12T00:16:55Z,rebased onto master. please review and approve.
406831973,8584,Piccirello,2018-07-22T00:21:53Z,i've implemented the limit of 10 concurrent active searches.
406881663,8584,glassez,2018-07-22T17:02:30Z,"personally, i would prefer to allow only one search per session. this would greatly simplify the server-side implementation and eliminate many security problems. even in gui we do not allow to have several active searches! we only allow you to have a lot of completed searches (or interrupted), but in the case of a webui it can be implemented on the client side. let's summarize! **implementation 1** (one search is allowed): 1. user can start search and get its results. 2. when user starts new search the current one is destroyed. 3. if user want to store results of any previous search it make it on the client-side. 4. (possible optimization) search controller tracks last access time and destroys the inactive search (in case user still use the current session but it doesn't use search controller anymore). **implementation 2** (one active search is allowed, like in gui): 1. user can start search and get results of any previous search by its id. 2. when user starts new search the current one is interrupted. 3. user can manually delete any existing search. 4. search controller tracks last access time and destroys the inactive searches (in case user still use the search controller but it doesn't use some particular searches and didn't delete them itself). 5. max searches count is limited. when user starts new search and it exceeds the limit, the least active search is deleted. 6. (possible optimization) search controller destroys the inactive searches (in case user still use the current session but it doesn't use search controller anymore). **implementation 3** (several active searches are allowed): *same as above except par. 2* but why should we allow such implementation? each search job can starts several threads/processes. even if we allow 10 concurrent searches this can create unnecessary load on the server side. but the main question, why this need? why do you need to run multiple concurrent searches? i don't want to delay this pr, it's already taking too long. but we cannot move forward without addressing these fundamental issues. , please comment the overall feature implementation without code details."
406882339,8584,Piccirello,2018-07-22T17:13:03Z,"this is not a limit i plan to impose. the search classes were recently rearchitected to allow multiple concurrent searches; we should use this. we can reduce this number to 5 if you wish, but i don't see a reason to drop it any lower. the default webui may not even end up supporting concurrent searches, but the api still should. besides, how is the load ""unnecessary""? the user is taking explicit action to perform these searches."
406882537,8584,glassez,2018-07-22T17:16:02Z,but why? what is the practical need? why do you need to run multiple concurrent searches?
406882766,8584,glassez,2018-07-22T17:19:27Z,"anyway waiting for more reviewers. , please review the feature (without going into code details)! please comment on [a link]"
406882822,8584,Piccirello,2018-07-22T17:20:09Z,"to search for multiple torrents at once... have you never run simultaneous google searches? torrent searches can take upwards of a minute, especially with the jackett plugin. if there are several items i want to search, why should i have to wait over a minute before i can run my next search? there is no technical limitation, just your ""belief"" that no one would ever want to do it."
406883464,8584,Chocobo1,2018-07-22T17:30:55Z,"agree with this. offtopic, i somehow wish gui can also allow parallel search too. +1"
406883619,8584,glassez,2018-07-22T17:33:30Z,"my ""belief"" has nothing to do. i just want you to give me a little reason for your assumptions, not just a little talk. what, for example, sense to launch 10 searches simultaneously, if they will really hinder each other (i not tested this, this your work here to test it). if ten parallel searches can be completed in the same time as one, then i agree that it makes sense. but if they take ten times longer, i will get the results of my first query ten times later..."
406884836,8584,zeule,2018-07-22T17:54:04Z,"+1. even if one searches for a single item, it is worth to try various queries. +1 +2 it's only natural to instantiate a conception multiple times, and it is the duty of the opposite party to provide a reason why there can't be many of ""them""."
406886827,8584,glassez,2018-07-22T18:26:52Z,"it's not a problem for me personally. because i understand how this can end, and i can measure my desires with the capabilities of my computer. so i won't mind anymore. in addition, support for search feature outside my area of interest (at least in its current form), i only use it from time to time (very rarely). so please comment on other implementation details suggested above."
406887836,8584,sledgehammer999,2018-07-22T18:44:37Z,just my 2 cents since i don't particularly care about search or webui modules: iirc ~2 years ago multiple searches were implemented. but for some (technical) reason they were dropped after 1-3 releases. i might remember wrongly though.
406903371,8584,Piccirello,2018-07-22T22:51:54Z,"i would like this as well. it likely wouldn't be too difficult to support, just some ui changes and how the search/stop button is handled. i can create a github issue for it and try to get around to it, but the gui isn't my specialization or my top priority. this is intriguing. i searched all closed closed prs with the word ""search"" but couldn't find anything that seemed to address this. does anyone else remember more info on this issue?"
407040055,8584,thalieht,2018-07-23T12:25:03Z,"who doesn't _want_ parallel searches. i searched too in changelog, commit messages pr's and i can't find anything and yet some guys in this issue: [a link] claim it was possible. personally i don't remember qbt ever having parallel searches but i wasn't using this functionality back then. if this doesn't work out may i suggest a queue? where subsequent searches wait for the one before them to finish before they start. maybe you remember #2550 and its corresponding changelog entry?"
407629736,8584,Piccirello,2018-07-25T04:29:19Z,"for (const qstring &source : copyasconst(params()[""sources""].split('|'))) i'll just reverse that part of the commit. the code was simpler before."
407632897,8584,Piccirello,2018-07-25T04:54:00Z,i've changed this to also accept negative values.
407723504,8584,zeule,2018-07-25T11:32:43Z,: does `detach()` make a deep copy if refcount ==1?
407735436,8584,glassez,2018-07-25T12:20:17Z,are you sure `refcount ==1` is here?
407737895,8584,Chocobo1,2018-07-25T12:30:16Z,am i suppose to answer what you can find out within seconds with a ide?
407754764,8584,zeule,2018-07-25T13:31:11Z,"looks like you did it already and can answer, please, why did you write:"
407757824,8584,Chocobo1,2018-07-25T13:41:01Z,why don't you ask so in the first place?? to avoid detachment.
407761288,8584,zeule,2018-07-25T13:51:45Z,asking was the first action i did ([a link] i repeat: why do you think detachment is possible in those cases?
407762898,8584,Chocobo1,2018-07-25T13:56:33Z,"no, there you did not asked me about my motivation. i incline to think `refcount > 1` is true, is it not?"
407765754,8584,zeule,2018-07-25T14:05:11Z,are we talking about the same code snippet? [code block]
407773060,8584,Chocobo1,2018-07-25T14:25:25Z,"of course! i've given you 3 answers already, please no more heckling if you already possess the answer and please do share with us ( and me)."
407778279,8584,zeule,2018-07-25T14:40:09Z,"the whole thing seems to be so obvious to me, that i can't believe both of you missing it. i wonder, how freshly created rvalue could have been copied anywhere to increase its reference count? i even did a test. but firstly asked am i sure that the counter is equal to 1, now you wrote you think it's value > 1, so i doubt my view now."
407781700,8584,Chocobo1,2018-07-25T14:49:44Z,"i think it is coming from [a link] : if what i thought is wrong then truly sorry, i'm not as smart."
407814390,8584,zeule,2018-07-25T16:25:14Z,", excuse me, i did not understand the explanation, but seems like you do revoke the suggestion to add `copyasconst()`, right?"
407819790,8584,Chocobo1,2018-07-25T16:43:07Z,":\ no... from your example: [code block] if that is not true, you might as well go ask on [a link] , as their example is not much that different."
407820672,8584,zeule,2018-07-25T16:46:07Z,uhm... my example is [a link] and it reads: [code block]
407820955,8584,Chocobo1,2018-07-25T16:47:10Z,i don't see the difference??
407823556,8584,Chocobo1,2018-07-25T16:55:54Z,then how do range-based `for` work exactly in your example? do you mind might break it down step by step for me to understand?
407824557,8584,zeule,2018-07-25T16:59:12Z,from what you wrote follows that `begin()` and `end()` inside the loop points to various containers and that is obviously not true.
407825019,8584,Chocobo1,2018-07-25T17:00:38Z,"i've made an update to it, is it better?"
407825059,8584,zeule,2018-07-25T17:00:46Z,`detach()` tests if container is shared and does nothing if it's not. thus both calls (`begin()` and `end()`) do not result in detaching.
407825555,8584,zeule,2018-07-25T17:02:26Z,"sorry, but no."
407842448,8584,Chocobo1,2018-07-25T17:58:35Z,"ok, i see your point now, good lesson btw. however i still don't think removing `copyasconst` in my previous suggestion. without it doesn't detach is because `isshared()` is guarding it, my point is it still calls the `detach()` function, *trying* to detach()... whereas using `copyasconst` it doesn't ever gets into `detach()`. i should change my wording to: ""now you **should** add copyasconst():"", if this is what you are after. i think that is all, i've nothing more to say."
407853085,8584,zeule,2018-07-25T18:34:26Z,"thanks, i wanted to learn why did you say casting to `const` is necessary there, thank for explaining!"
411953857,8584,Piccirello,2018-08-10T02:09:43Z,all comments addressed and commits squashed.
416015098,8584,Piccirello,2018-08-26T05:27:41Z,please approve if there are no further comments
418286892,8584,glassez,2018-09-04T08:36:19Z,"when i look at ""everything turns out crooked here"", one thought haunts me. why we're ""pulling out of one's ass""? wouldn't it be easier to implement ""search engine"" at web-client side? just thinking out loud... can we recreate the search plugins on the javascript? then we won't need that leaky api at all."
418362226,8584,Piccirello,2018-09-04T13:13:46Z,"with a massive amount of effort i’m sure it’s technically possible. practically, i don’t think it makes sense to ditch the entire current process, including the python engine and all existing search engines."
420053014,8584,Piccirello,2018-09-10T20:39:59Z,"if no more comments, please approve"
421207214,8584,Piccirello,2018-09-14T02:03:51Z,"are you referring to reimplementing the entire search feature in js? all other commenters, please reapprove :grinning_face_with_big_eyes:"
421229645,8584,glassez,2018-09-14T04:45:34Z,"no, of course."
421231309,8584,Piccirello,2018-09-14T04:58:44Z,what comments were you referring to?
422307268,8584,glassez,2018-09-18T08:38:53Z,"it's about other reviewers. e.g. [a link]. i asked the reviewers to speak about the design of the feature as a whole, and then check the details of its implementation. but i did not see any clear comments about the proposed model or your own proposals. it's not a trivial bugfix. it's feature implementation pr, but you just checked some code details and approved it! why? it looks like you don't even have a clue about its overall design... the second detail, which i did not see any reasonable reviews, is the life time of the ""search job"". why it's controlled by some timer with ""pulled from one's ass"" timeout? it's just a rough, based on nothing solution."
423778885,8584,Piccirello,2018-09-22T22:50:29Z,"i think this pr clearly satisfies the design you proposed in your linked comment. searches time out after 3 minutes. was this number not ""pulled from one's ass?"" i believe one hour is a reasonable balance between maintaining state and not unnecessarily holding on to resources. this can probably even be increased by several times. if you have a suggestion for a new timeout, please propose one. i do not want to delay this pr any longer. let's get this merged already."
425489146,8584,glassez,2018-09-28T16:20:15Z,"i do not mean the duration of the ""search job"" i believe one hour is a reasonable balance between maintaining state and not unnecessarily holding on to resources. ""holding on to resources"" is not really a problem. what's the point of freeing up a resource if you let it take over right after? that is, if you allow to have n ""search jobs"" at the same time, in general, the user can have them for the entire lifetime of the application (in this particular case, during the entire web session). so the timeout here is meaningless. especially one as clumsy as yours! it absolutely does not take into account the intensity of use of the protected object. why are you counting down from creating a ""search job""? do you think that a constantly used resource is as worthy of death as an unused one? i suggest not to limit the lifetime of ""search jobs"" within a session at all. or use the ""displacement mechanism"", i.e. consider outdated jobs as a candidate for replacement with a new one if the user tries to start a new search with 5 existing ones. but it should be ""outdated"" job, not ""old"", i.e. you should track its ""last access time"". >i do not want to delay this pr any longer. let's get this merged already. i do not want to delay it too. but i can't approve of what i think is wrong. if the above does not make sense to you, then either make a reasonable objection (not ""i believe""), or continue without me. as i said before, if the rest of /demigods thinks it's ready to be released in its current state, let them merge it."
425762528,8584,Piccirello,2018-10-01T00:06:23Z,i'm removing the web search job timeout. if we face issues we can add it back later.
431265296,8584,Piccirello,2018-10-19T07:02:36Z,any further comments on this? ready for merge?
432279888,8584,Piccirello,2018-10-23T14:51:49Z,the sooner this is merged the sooner i can start looking into webui rss support :winking_face_with_tongue:
432494100,8584,Piccirello,2018-10-24T02:54:50Z,preliminary webapi documentation. this isn't finished yet and is missing fields # search # ### start search ### [code block] ### stop search ### [code block] ### get search status ### [code block] ### get search results ### [code block] ### delete search ### [code block] ### get search categories ### [code block] ### get search plugins ### [code block] ### install search plugin ### [code block] ### uninstall search plugin ### [code block] ### enable search plugin ### [code block] ### update search plugins ### [code block]
432546553,8584,glassez,2018-10-24T07:36:56Z,"i never liked the (legacy) format of the web api documentation. why do you keep repeating all these http headers etc.? it's so obvious, and therefore it is absolutely unnecessary here. please consider rss web api documentation format."
432598248,8584,glassez,2018-10-24T10:12:43Z,"well, blackmail is a powerful weapon! i actually wanted to postpone it until the next release. but i assumed v4.0.4 would come out soon. unfortunately, the release cycle is ""frozen"" again. i see no reason to delay it any longer."
432598552,8584,glassez,2018-10-24T10:13:49Z,thank you all!
432921846,8584,Piccirello,2018-10-25T05:43:05Z,"i've [a link] the wiki with search info using a slightly modified version of your rss documentation format. namely, i've added http status codes. this format is definitely more concise than the old style with all the extra headers."
433515601,8584,FranciscoPombal,2018-10-26T19:18:00Z,"i quite like the new web api documentation format, but wouldn't it be good to also specify the type of method in the description (get, post, ...)? i agree that the other headers are unnecessary."
433516595,8584,glassez,2018-10-26T19:21:45Z,currently both methods are allowed.
433517114,8584,FranciscoPombal,2018-10-26T19:23:50Z,"so to be clear, the request type can be either get or post for _all_ methods of the webapi?"
433519880,8584,glassez,2018-10-26T19:34:48Z,yes.
433521315,8584,FranciscoPombal,2018-10-26T19:40:12Z,thanks for the clarification. perhaps that should be mentioned in the wiki page for the web api? i could edit that now and perhaps star converting the documentation of older methods into the new format.
433522464,8584,glassez,2018-10-26T19:44:39Z,it would be nice!
433523429,8584,Piccirello,2018-10-26T19:48:43Z,"i’ve avoided documenting this because i actually think it’s something we should be more strict about, and something i’d like to enforce. any non-idempotent methods should be a post, and all others get."
433540194,8584,FranciscoPombal,2018-10-26T20:53:05Z,"i have started the conversion to the new documentation format. however, there are some things i don't know. for example, in the old documentation format, a lot of methods had examples of successful execution. in the new documentation format, there is an ""http status code/scenario"" table instead of such examples. the problem is that i often did not know what to put in the ""http status code/scenario"" table, since i do not know what all methods do in all scenarios (and the old documentation format did not specify what happened in all scenarios), so i marked such entries as todo. i preferred this approach rather than add a single entry to all with ""200 | success"" since this way it is more obvious that it needs to be better documented. can you take a look and fill those entries in, since you know the webapi much better? just ctrl+f todo. thanks."
434886914,8584,Piccirello,2018-10-31T23:57:21Z,"i've [a link] all http status codes marked todo. there's only one remaining todo, which is json response info for `/sync/torrentpeers`. also discovered that i hadn't documented `/torrents/editcategory` from a previous pr, so that's in there now. i noticed there were several apis erroneously documented as always returning `200`, despite them also returning other status codes. please be careful with how liberally you're assigning the 200-only info. i've updated these codes as well. i'm not sure if there's value in keeping the `requires authentication` field in our documentation. we only have two web apis that don't require auth, while all others do (i actually think it's three and our documentation is just outdated- i'll look into this further). since these are the special case, we should probably just mark these specifically and omit the info elsewhere. thanks again for transitioning this info to the new format. i really think the updated format and status codes will be useful to people leveraging the qbittorrent web api."
434902221,8584,Piccirello,2018-11-01T01:36:42Z,"it appears `/api/v2/app/version` and `/api/v2/app/webapiversion` do in fact require authentication. it's the legacy apis `/version/api`,` /version/api_min`, and` /version/qbittorrent` (which we still support) that do not require auth. what are your thoughts on the best way forward? should we just document this as-is? ideally the three `/app/` api calls wouldn't require auth, but this is a slightly bigger change involving `webapplication.cpp`. i'm fine making these changes, but want to get your thoughts before doing so."
434925974,8584,Chocobo1,2018-11-01T04:19:54Z,"iirc it has discussed before, personally i don't think it is wise to give out version number to everyone for free. so ideally getting version number would require auth when the legacy apis are deprecated."
434931044,8584,FranciscoPombal,2018-11-01T05:00:08Z,i only copied the content that was there before. i would advise you to actually revise the document thoroughly after it is fully converted to the new format; other things may be wrong/missing.
435049282,8584,Piccirello,2018-11-01T14:00:00Z,"oh yeah, i do see that now. this documentation is seriously outdated. a mass cleanup is probably required to fix everything."
435052650,8584,Piccirello,2018-11-01T14:12:01Z,"could there be benefit to exposing the api version/min without auth? if we ever change the login api, other apps won’t be able to determine which login flow to use without trying + catching failure."
435070947,8584,Chocobo1,2018-11-01T15:07:57Z,"other than letting strangers fingerprint you easily, none i am aware of. i doubt we will easily do backward-incompatible changes to this part..."
440362863,8584,sledgehammer999,2018-11-20T17:35:14Z,this pr instatiates the searchpluginmanager at program start. this is a bad idea. the searchpluginmanager does initialization stuff which depend on python being present. this might not be the case on windows. it results in warning messages in the log. remember that search+python is optional in qbt. user might not choose to enable it--> the search tab might be disabled/hidden. user might not have python installed. searching for the interpreter on startup might introduce delays. please revise this approach and make it optional upon user's explicit enablement.
440381731,8584,glassez,2018-11-20T18:28:29Z,"depending core search feature from its ui it was legacy qbittorrent behavior. now it doesn't fit since searchpluginmanager should be accessible from different places. we should make it optional at all. i.e. we should allow to disable entire search subsystem, not only its ui (search tab)."
440383577,8584,glassez,2018-11-20T18:34:30Z,there is some legacy (bad) code related to search subsystem in qbittorrent. e.g. searchpluginmanager doesn't handle all the management and some other code parts do python related stuff directly. it should be really improved.
440383985,8584,sledgehammer999,2018-11-20T18:35:49Z,"iirc, before this pr the subsystem was entirely disabled if the tab wasn't enabled. i am not against disengaging the connection between the subsystem and the ui tab. we could have it as a config option. but still an option."
440521670,8584,Piccirello,2018-11-21T04:00:25Z,opened #9889 to rectify this. let's discuss the implementation over there.
306345992,6911,tgregerson,2017-06-06T00:16:56Z,you were suggested for review due to familiarity with the category system.
306632738,6911,sledgehammer999,2017-06-06T22:13:35Z,"fyi, i approve this feature on principle. personally i don't care about the categories/filtering because i don't have many torrents sitting in the list. however this author has put a good amount of work into this, and it seems that a lot of people have requested it already. and someone put the work and delivered. these 2 points are sweet(if i needed filtering): 1. >tags are a set of user defined text strings that serve as arbitrary metadata for the purpose of organizing and filtering torrents. 2. >tags are not linked into other torrent management systems, like save path assignment. hence they can be added & removed without any complex side effects. also judging from the provided screenshots the gui implementation seems pretty spot on and i doubt it needs any major revising."
306984104,6911,tgregerson,2017-06-08T02:55:04Z,"i think multi-tag filtering is a promising idea, but requires some thought on how to do it properly in the ui. what is the interface for selecting multiple tags? is filtering an and operation or or? and so on. on the other hand, filtering by a single tag is very straightforward to integrate seamlessly with the ui, since that is what we already do with statuses, categories, and trackers. given that people have been asking for a multi-label feature for almost 5 years, i thought it was best to do the straightforward thing first. i'm happy to look at adding more advanced features in the future if there is demand for them."
306988597,6911,glassez,2017-06-08T03:30:42Z,agree with above.
307084816,6911,zeule,2017-06-08T12:11:26Z,"filtering by a single tag does not add much comfort as comparing to categories. from the other hand, very little needs to be done to support filtering by multiple tags joined by logical ""and"", both in the tags model and in the gui. in the model you just need to pass list of tags instead of a single string, which will give you explicit ""no tags"" value (empty list). in the gui you just create a second sorted list view in the tags panel and append selected tags there. i believe this will be a great addition for little costs. what would be exciting, imo, is to integrate filtering by tags with the filtering by name and show tag filtering widget as drop down widget near the name filter."
307095005,6911,glassez,2017-06-08T12:57:25Z,i don't understand what you mean in these two suggestions.
307114611,6911,zeule,2017-06-08T14:08:09Z,"illustration to the first proposal: ![a link] first list shows selected tags, the second shows all but selected ones. double clicking on items moves them between the lists. also, this pr displays tags in a tree view. why? tags may not be nested. the second suggestion is just an idea. tagging is a way to filter items, so why then we show name filter in the upper right corner of the main window, while tags in the lower left? i would like to find both of them close to each other. for example, there can be a button near the name search toolbox, that activates a drop down tags cloud widget."
307115567,6911,tgregerson,2017-06-08T14:11:16Z,"being able to assign multiple tags on a given torrent is a valuable property that is not supplied by categories. single-tag filtering with multiple tags per torrent at least brings parity with other clients in that regard. i would love to support more powerful filtering in the future, but i think this should be the first priority. implementation cost aside, i think there will be some disagreement over the best way to present such a ui to the user, so some time will be required to consider alternatives and achieve consensus. although such an advanced system appeals to me as a power user with thousands of torrents, i feel like i am probably in the minority on that, and there will be some push back on presenting an unfamiliar ui to users if the majority of them do not want to use the advanced features. bottom line, ""basic tagging system"" and ""advanced multi-tag filtering ui"" seem like separable features, imo. i don't think we should block progress on the former due to the latter. there have already been 5 years spent since the original request for multiple labels spent debating such things. let's get the straightforward thing done that serves the needs of most users, then start thinking about whether the power user features make sense. at least that's my 2c."
307116421,6911,tgregerson,2017-06-08T14:14:06Z,"primarily for code and look consistency with the pre-existing widgets. i experimented with using a list view as well, but it didn't seem to provide any advantage, and required some extra code to handle things like autoscaling the widget area."
307124584,6911,zeule,2017-06-08T14:41:18Z,"is that good? excuse me, i repeat myself: categories show a tree of nested objects, while tags widget shows just a list."
307140779,6911,glassez,2017-06-08T15:34:31Z,just selecting multiple list items isn't enough?
307142277,6911,zeule,2017-06-08T15:39:49Z,"list of all tags can be long and as such selecting multiple items would be inconvenient, and inspecting what is selected would be even more tricky."
307142580,6911,glassez,2017-06-08T15:40:57Z,the main question is what filtering behavior is expected with multiple tags selected? 1. show torrents having exactly the same tag set as selected. 2. show torrents having tag set containing all selected tags as subset. 3. show torrents having any tag/tags from selected set.
307144062,6911,glassez,2017-06-08T15:45:55Z,two tag lists look ugly. maybe it would be better to have only one list with selected tags and append items from some other list not shown permanently (like github labels/reviewers lists)?
307149243,6911,zeule,2017-06-08T16:03:07Z,"agree, but this requires a special widget, which needs to be implemented. does the author want to do that? the variant with two list, from the other hand, sets a more or less correct restrictions for the implementation. whenever i use tag search, provided by websites, i always can find what i need using either simple ""and"" or ""or"" tags combination. ![a link] the lower list could be collapsed, of course, and hid under a ""+"" button, for example."
307159858,6911,tgregerson,2017-06-08T16:40:44Z,"yes, using common code patterns across classes is good if there is no other drawback. it makes it easier to do bulk modification and maintenance. say you want to add some feature to all of the widgets in the future. it is better to only have to figure out how to do it once for a single type than for multiple different types. treeview is currently working as intended. switching to listview requires more effort be spent on fixing scaling issues, which treeview does automatically. i would prefer not to spend this effort unless there is some material benefit to doing so. as stated, i do not want to implement any multi-tag filtering in this pr, regardless of whether it requires a custom widget. i think a separate feature request should be filed, and then we can discuss the pros and cons of various advanced filtering systems to our hearts' content without further delaying or expanding the scope of this pr, which is already pretty large."
307161997,6911,zeule,2017-06-08T16:49:02Z,"nonsense! this has to be implemented on the code level via, e.g., class inheritance or other code sharing technique."
307371334,6911,tgregerson,2017-06-09T12:05:49Z,"let's table the philosophical discussion. as a practical matter, do you consider it a dealbreaker that we have to switch to listview? as i mentioned, i experimented briefly with listview, and it looked pretty similar to treeview, but had some unresolved issues i would need to fix like autoscaling based on the contents, among others. my suggestion is this: treeview currently works as desired for single-tag selection, which is my objective for this pr. you've also expressed some interest in supporting multi-tag selection in the ui, which i plan to do, but as a follow-on pr. given that multi-selection might require a different widget anyway, i propose that we move forward with the existing treeview code in this pr. then we change the widget type (if necessary) when adding multi-selection. this avoids the potential of throw away work if we decide a widget type is better for multi-selection. let me know if there are any objections to this plan."
307375259,6911,zeule,2017-06-09T12:27:34Z,"could you use `qabstractlistmodel` for the `tagfiltermodel` class implementation, please? if you plan to work on a custom widget for the tag filter, then, of course, it makes a little sense to change widget type in this pr."
307963574,6911,tgregerson,2017-06-12T23:29:25Z,done. acknowledged.
308876226,6911,tgregerson,2017-06-15T21:53:19Z,misunderstood which line you were pointing to. believe i got the right one this time.
309216181,6911,glassez,2017-06-17T13:47:41Z,"ok. i have no more comments. if no one has too you can squash your fixup commits into main. , ?"
309634593,6911,glassez,2017-06-20T03:27:16Z,waiting for ...
309793428,6911,zeule,2017-06-20T15:21:06Z,"excuse me, guys, have tight schedule these days..."
310849857,6911,tgregerson,2017-06-24T16:46:29Z,strange...some weirdness from the text editor i guess. cut and pasted the line back and it went away.
310918435,6911,glassez,2017-06-25T18:11:07Z,", , i think we should merge it to hit v3.4 beta. some minor polish can be done later. , please, squash your commits."
310921010,6911,tgregerson,2017-06-25T18:56:37Z,squashed.
311054149,6911,zeule,2017-06-26T13:08:04Z,"thanks, , and thanks to each reviewer!"
308289621,6779,Piccirello,2017-06-14T00:59:34Z,", , , : would someone be able to review this pr, or at least comment on it? this is a highly requested feature and i know a lot of people would benefit from having it."
308316870,6779,Chocobo1,2017-06-14T04:31:27Z,"don't think so, care to point it out? how so? having a simple/mindless password is better than none. ~~or do you mind to talk about your specific usage that will need this pr?~~"
308318605,6779,Chocobo1,2017-06-14T04:46:58Z,"i agree we could have an option for bypassing auth for users on lan, for wan, it's best to keep auth on."
308322327,6779,Piccirello,2017-06-14T05:19:37Z,"#924 #4581 #6518 [a link] [a link] a method of disabling webgui auth is even provided in the [a link] guide. however, that method requires users to modify their login.html file."
308330313,6779,Chocobo1,2017-06-14T06:16:38Z,"i don't get what you're trying to say. it seems you're talking about different layers of security measures (e.g. public wifi, wifi with wpa2 or not, qbt session auth, http or https). while a security measure prevents possible exploits (as side effect or not), you shouldn't mix it (multiple security measures) up when thinking about disabling a specific measure. thank you. however, after skimming through those issues, i read that bypassing lan is the common request, not bypassing all. if i wasn't clear enough, i **only** support the idea of adding a checkbox stated: ""bypass authentication for users on lan""."
308361100,6779,glassez,2017-06-14T08:30:47Z,"but this checkbox exists, isn't it?"
308363890,6779,Chocobo1,2017-06-14T08:40:21Z,"no, the one exists is `bypass authentication for localhost`."
308498401,6779,Piccirello,2017-06-14T17:14:35Z,"i agree that the ""disable for lan"" option makes more sense from a security standpoint. i'll modify my changes and update when finished."
310217510,6779,Piccirello,2017-06-21T22:00:23Z,"i see that `env_.clientaddress` is storing my ipv4 address `10.0.0.3` in the ipv6 format `::ffff:10.0.0.3`. will this behavior be exhibited by all clients, or will `env_.clientaddress` ever be in ipv4 format for some users?"
310274421,6779,Chocobo1,2017-06-22T04:48:09Z,"you'll need to handle 3 formats: 1. ipv6 2. ipv4 mapped ipv6, see: [a link] 3. ipv4"
310883977,6779,Piccirello,2017-06-25T05:40:11Z,"ok, all three scenarios are now handled by the lan check. commits are also squashed. what're your thoughts?"
310891135,6779,Chocobo1,2017-06-25T08:59:28Z,my review is finished. :thumbs_up: for this pr.
310894495,6779,glassez,2017-06-25T10:20:42Z,and one more question. is bypass auth for lan but require it for localhost the expected behavior?
310896106,6779,Piccirello,2017-06-25T10:59:30Z,"sure, i don't see any reason not to offer the ability. including it does not introduce any complexity, and actually reduces it."
310904886,6779,Chocobo1,2017-06-25T14:11:34Z,"you accidentally included an unrelated commit: [a link] and i think you can squash all commits to 1 now, also try get rid of the ""merge branch..."" commit. if no further comments coming in in a week period, we can merge this in."
310927575,6779,Piccirello,2017-06-25T20:53:35Z,"whoops, removed that."
310927897,6779,Piccirello,2017-06-25T20:58:34Z,"hmm, i don't seem to be able to get around the merge conflict in `optionsdlg.cpp`. i can create a new branch if desired."
310937369,6779,Chocobo1,2017-06-26T00:03:46Z,"you should resort to `git rebase` instead of `git merge`. basically 1. roll back to your first commit in this pr 2. make sure your local master branch is synced with this repo, then `git rebase master` 3. fix conflicts then `git add` the fixed files 4. `git rebase --continue`"
311252018,6779,Piccirello,2017-06-27T04:48:09Z,thanks for the help. the changes are all in one commit now.
311419786,6779,glassez,2017-06-27T16:56:44Z,", can you also see #6862? it seems the auth process has a bug but the author of fixing pr is not accessible."
311569516,6779,Piccirello,2017-06-28T06:33:37Z,"sure thing, i'll have a look at that pr tomorrow."
316266713,6779,Piccirello,2017-07-19T04:04:47Z,note to self: update the [a link]. * `bypass_auth_subnet_whitelist_enabled` | bool | true if webui authentication should be bypassed for clients whose ip resides within (at least) one of the subnets on the whitelist * `bypass_auth_subnet_whitelist` | string | (white)list of ipv4/ipv6 subnets for which webui authentication should be bypassed; list entries are separated by commas
326967625,6779,Piccirello,2017-09-04T13:47:29Z,"i attempted to rebase onto master, but it seems not to have worked out very well."
327038959,6779,Piccirello,2017-09-04T23:30:40Z,just `git rebase upstream/master`
327073111,6779,glassez,2017-09-05T05:13:59Z,", it looks like you did a few merges... besides, there are unrelated commits from other people's prs."
329396554,6779,Piccirello,2017-09-14T07:22:44Z,i went through the commits and pulled out the relevant ones. they've all been rolled up into one now.
337080577,6779,Piccirello,2017-10-17T00:19:13Z,all requested changes have been addressed. is this pr ready to move forward?
341883237,6779,Chocobo1,2017-11-04T09:21:51Z,there are conflicts.
341917806,6779,glassez,2017-11-04T18:06:52Z,", you forgot one more time that you shouldn't merge master into your pr branch. you should rebase your branch on top of master."
341918756,6779,Piccirello,2017-11-04T18:18:30Z,"github's ""resolve conflicts"" editor is just too tempting! the conflict has been resolved and locally nothing is complaining, but github insists there's still a conflict."
341949765,6779,glassez,2017-11-05T05:13:58Z,", i've done it for you (rebased and squashed). you need to force update your local branch."
341949924,6779,glassez,2017-11-05T05:18:19Z,"you shouldn't use github editor. when you need to resolve conflicts in your pr, you need to rebase your local branch on top of current qbittorrent master (manually resolving some conflicts if required) and then force push it on github."
342023518,6779,Piccirello,2017-11-06T01:26:29Z,thanks .
342505310,6779,glassez,2017-11-07T14:49:37Z,", what the hell are you doing? are you kidding me? i squashed your fixup commits for you, i even fixed the remaining coding style issues for you... you don't have to do anything anymore. the only thing you had to do is ""to force update your local branch"" (as i suggested you), to make it identical with pr branch on github. but what did you do? you did the opposite! you just returned everything as it was (with the exception of fixed conflict). i don't even know what to say... maybe ""please squash your commits and fix the coding style"". (i'm sorry if i was overly emotional)."
342527168,6779,glassez,2017-11-07T15:53:56Z,ok. you can forget about commits squashing since they are unrelated. but coding style issues are still be fixed.
342530020,6779,Piccirello,2017-11-07T16:01:47Z,the rest is ok. care to point out the style issues? i re-pushed the repo because you squashed unrelated commits.
345549313,6779,Piccirello,2017-11-19T21:02:14Z,any further changes required?
345782917,6779,WolfganP,2017-11-20T18:20:22Z,great work i hope this great addition is promptly merged into master.
345792089,6779,glassez,2017-11-20T18:54:07Z,", thank you! thanks for all reviewers as well!"
345860686,6779,Piccirello,2017-11-20T23:01:47Z,woohoo! glad we were able to get this merged. thanks for the back and forth over many months
406951325,6779,nomandera,2018-07-23T06:18:53Z,"posting for posterity. if you wish to turn of authentication completely, say in the scenario where the web interface is protected by a separate tls nginx/apache/trafik/haproxy reverse proxy you can add `0.0.0.0\0` to allow the entire ipv4 space which includes the internet. insert obvious warning: dont do this if dont know what you are doing, authentication is there for a reason."
297590444,6698,Chocobo1,2017-04-27T02:01:53Z,"i don't think webui matters much in this case, there are 3rd party interfaces to use. +1, something like a basic mockup of qbt. doesn't this boost up the complexity? for devs, dependency cycles? for users also, imagine a creator shares one of his theme but the theme depends on another one he didn't share.... i don't think this is a good idea, most users can live without it. i imagine there will be import button and maybe export button, then this shouldn't be an issue."
297631930,6698,zeule,2017-04-27T07:15:58Z,"this would greatly simplify things. yes, but advantages outweigh, i think. we can deal with the problem you mentioned in the following way: when a theme inherits a non-existent one, or inherits nothing, we can modify it on loading to inherit one of the base qbt themes. in this way the theme will continue to work somehow. but what we get in return is flexibility to add new elements to our base themes without breaking all the user ones. i meant not a theme file, but implementation of a new color scheme, like `qpalette` but for plasma."
298567792,6698,zeule,2017-05-02T09:07:01Z,"pr updated: all files are now in `src/gui/theme`, initialisation is done by the `mainwindow` class. added base font theme support. open question: how to denote ""application default font"" in the theme file? just write and empty string as value or use a special keyword?"
298705159,6698,zeule,2017-05-02T17:32:20Z,before making the final push and polishing i would very much appreciate your opinions.
299189825,6698,zeule,2017-05-04T13:46:50Z,"here is another question. consider font themes. quite likely the default font theme should use default application font. in terms of `qfont::fromstring()` this is an empty string. ok, then out default theme looks as follows: [code block] which is not very good, because of the empty descriptions. believes that a descriptive placeholder is better: [code block] but here is another decision: when exporting a font theme, should we compare fonts to the default one and write empty string or the placeholder? or should we write full font string? i tend towards the latter, because if user wants the default font, they can simply erase the description string from the theme. or, we may check whether theme contains default fonts and ask user first how they need to be serialized: as full descriptions of as empty strings."
299250775,6698,glassez,2017-05-04T17:15:54Z,"why should default theme define something? it has only default values, isn't it?"
299251042,6698,zeule,2017-05-04T17:16:58Z,"well, default colour theme define colours. why default font theme can't?"
299260851,6698,glassez,2017-05-04T17:53:09Z,i just mean we can omit default values...
299268516,6698,zeule,2017-05-04T18:22:14Z,"if you suggest to omit entries with default values in the default theme files, then i disagree. it would perplex theme loading code and theme interface. naturally, inherited values are omitted in a theme. but they are simply loaded from the inherited theme. otherwise, the theme loading code (resides in the theme class now) needs to know what value is the default one, and while it is more or less obvious for fonts, there is no a single default value for colours. that is why i decided that it will be simpler for us to control default values via default theme files, but not from source code. those theme files are bundled as resources and always present. the only thing code needs to know is the name of the default theme."
299270155,6698,glassez,2017-05-04T18:28:37Z,"then i don't know how the previous questions? if you need explicit values, then use them. what empty strings and placeholders?"
299274007,6698,zeule,2017-05-04T18:43:11Z,"because i also need ""default application font"" value. ok, thank you for the discussion. i think to implement empty strings and optionally replace them with font descriptions when exporting a font theme."
299399151,6698,glassez,2017-05-05T07:21:33Z,what do you mean by that?
299662248,6698,zeule,2017-05-06T19:52:29Z,pr updated: font themes are used in the app now. implementation borrowed from #6196 and i thank for that.
299662330,6698,zeule,2017-05-06T19:53:45Z,"please see the current built-in font theme. it contains empty values which mean ""application default font""."
299662700,6698,Zalewa,2017-05-06T20:00:49Z,thanks for notification. i'm glad to know that this is being worked on.
299668921,6698,zeule,2017-05-06T22:10:12Z,": thanks, addressed!"
299692821,6698,glassez,2017-05-07T09:24:44Z,i still don't understand why you can't omit these entries instead of having empty values.
299698120,6698,zeule,2017-05-07T11:03:26Z,"suppose you are modifying a theme element or extending theme type. for example, you are renaming theme element. you have to rename it in base theme file and in the source code. and suppose you forgot to change its name in one of the places or mistyped it. with current approach you get error during theme loading, while in the opposite case you would silently get default font. it is even more important, i think, that themes of both types behave uniformly, because there is no ""default colour"" and one may not omit colour elements."
301295957,6698,glassez,2017-05-14T07:27:18Z,", by the way, why not implement theme support using qt style sheets?"
301318266,6698,zeule,2017-05-14T14:53:32Z,"stylesheets change widget rendering engine, and the widgets do not look native anymore. while with this pr i try yo get more native look for qbt. however, this pr offers a way to add more theme types."
301863518,6698,Chocobo1,2017-05-16T17:58:03Z,"it's impossible to review it all in one run, i'll find time later... in the meantime, can we see some screenshots for .ui files changes? also what the theme files look like? (a link to gist would be nice)"
301889322,6698,zeule,2017-05-16T19:26:06Z,"thanks, ! also what the theme files look like? (a link to gist would be nice) included in the top post."
302186292,6698,glassez,2017-05-17T18:29:11Z,", sorry, i have too little free time now to consider such a large pr. i dedicated it for smaller and more urgent prs in the last time. now, when most of them completed, i'm going to pay attention here. most likely i will be able to do this only parts. i want to start with the interface (points of contact between your new code and the existing application)."
302314323,6698,zeule,2017-05-18T06:35:44Z,": if people want, why not?"
302700573,6698,zeule,2017-05-19T13:19:22Z,"pr updated. with these many commits fixup commits create a mess (at least i can't handle them without mistakes), so updated everything."
303285835,6698,Brylord,2017-05-23T04:14:36Z,"i'm a semi-professional graphic designer, and i'd enjoy making new icons/graphics for qbittorent. as i don't expect to return here often, please contact me via email if interested: bry.d.reed.com"
303356166,6698,zeule,2017-05-23T10:21:36Z,", i like the idea and will add these themes. thank you for the links."
303448935,6698,zeule,2017-05-23T16:06:36Z,", i think the icons colouring is independent from the exact colour set in use. but if is active no more, i can re-submit that pr."
303891554,6698,LordNyriox,2017-05-25T00:44:57Z,": ugh. i replied when i was half-asleep, and have a far too literal mind. the reason i support [ ] is because the status icons originally correlated to the colors of the text they were associated with. the colors i referenced from [ ] confirm this. (orange for seeding, grey for checking, undefined for paused, etc.) the intent behind my request was to bring the status icons closer to their origins, while retaining the adaptivity of this new theme system. i hope that makes more sense..."
303972625,6698,zeule,2017-05-25T09:59:34Z,", i see. may i use your svg icons from [a link] please? we can change their colors pretty easily on the fly."
304477843,6698,zeule,2017-05-27T21:34:55Z,", excuse me, i missed your question somehow. yes, you are right, default theme is inherited when `inherits` keyword is missing. there is one more refinement: the default them is either 'default (light)' or 'default (dark)' depending on the current palette: if background colour is dark, the dark default theme is selected."
305569985,6698,glassez,2017-06-01T17:53:01Z,i'm follower of native appearance so i can not to understand some things about this issue. but i'll still ask some questions. first. it is really needed per-element assigning colors/fonts? why don't you define some font/color classes and assigning it to gui elements. i mean something like qpalette. e.g. some gui element uses colortheme::windowtext color and we assign its real value in theme file. do users really need more fine-tunings?
305571660,6698,glassez,2017-06-01T17:59:18Z,"and again. i understand that someone wants to have it in the next release. i believe that this feature is still too young. there is still something to think about. the main thing is that it relates to user scope, and it will be difficult to change this after release."
305590594,6698,sledgehammer999,2017-06-01T19:07:45Z,i skimmed the thread and i am also torn about it and the direction is seems to have gotten to. i can't say something **specific** atm. i have it open in a browser tab. i want to prioritize #5766 and #6156. then i can come back here and see what the fuss is about.
305591660,6698,zeule,2017-06-01T19:11:56Z,"me too. i started all this to get native plasma colours in the app. you might remember that i was trying two times before this pr. i don't, it is not only untested, but contains many questionable design decisions."
305592311,6698,sledgehammer999,2017-06-01T19:14:30Z,then is it prudent to tag this with a v3.4.1 milestone and focus for v3.4.0?
305607177,6698,zeule,2017-06-01T20:13:28Z,", could you explain this in more details, please?"
305684969,6698,glassez,2017-06-02T04:15:06Z,"i am presuming all elements of the same type have to look alike. e.g. all list widgets have same appearance (colors and fonts), all buttons have same appearance etc. moreover, many elements of different types can have the same parts (eg. text), as well as it works in the native look'n'feel. so we can not to assign font/color to each gui component (e.g. transfer list widget, properties widget etc.) but do it for gui element types (e.g. list view, button, checkbox etc.) or even create classes of fonts (e.g. windowtext, windowcaption, and so on, like qt has) and colors (like in qpalette) and use it (e.g. all list/tree/table use same text, same background, as it is now)."
305734059,6698,zeule,2017-06-02T09:13:03Z,"thank you for the explanation. this pr does not touch look of the standard widgets in any way. here i try to solve the following problem (it is a problem for me, at least): qbt uses colours in its gui for various ui elements, and those colours clash with the rest of desktop. for example, red colour is used for alert messages and negative statuses, but the pure red colour produces much of eye strain with dark backgrounds and thus is not used by the rest of the applications, that follow plasma color scheme. unfortunately, `qpalette` is designed to be the least common denominator for all platforms and it contains only the very basic set of colours (probably because qt developers see it only as a way to communicate with `qstyle`). however, there are applications that need colours for communicating with users and a handful or colour roles offered by `qpalette` is not enough. for example, kde apps use another approach to application colour palette. there palette defines (in addition to `qpalette`) colours for active, positive, neutral, and negative elements, and 2 colour effects to produce inactive and disabled sets of colours as well as a standard way to make complementary colours. so, this pr adds a way to define colours for those ui elements that need colours not from the basic `qpalette` set. i can understand that windows users might be interested in a custom colours for all ui elements (to make a dark ui). for this case we may override default app palette and switch style to e.g. fusion. i would like to note that this pr makes it possible to implement such things later on, i.e. the proposed theme design allows to extend base themes and then provide more colour roles for users."
305765425,6698,glassez,2017-06-02T11:52:51Z,"are you saying that using this feature, i can't really change the theme? i can only change the appearance of those elements that originally have an altered (non native) appearance?"
305771213,6698,zeule,2017-06-02T12:24:14Z,"you are on windows, and as such the only way for you to ""change the theme"" is to change style via uxtheme api, afaik. or use one of the qt custom widget styles, that look as aliens everywhere (example: [a link] such theming we can add easily with this pr. this pr offers: 1. a framework for adding themes: theme files lookups, theme inheriting, framework to add various sources for theme elements (like plasma colours were added). in the very same way one can add gtk colours, for example, or colour theme from any other desktop environment. themes can be extended with additional elements and this will not destroy existing ones (including user themes). 2. the framework from item 1 is used to setup colours for transfers list, download progress bar and log window. and plasma colours theme gives theme native appearance."
305792981,6698,zeule,2017-06-02T13:50:59Z,"i've tried to find all explicit blue colours and replace theme with `qpalette::link` colours. this has to be in master already. do you say that with your custom colour theme the link colour is still bright blue? or do you mean there are still places in qbt where explicit blue color is used? parsing of windows theme files is not a big deal, but i don't see any colour there that can be used for our purposes. could you suggest, for example, which ones to use for the download progress bar?"
312643039,6698,zeule,2017-07-03T13:17:02Z,"pr changed significantly. there were too many commits for me to handle, and i squashed most of them. added many changes to icons. see the update in the top post."
313061178,6698,zeule,2017-07-05T10:10:15Z,": thanks, the typo was corrected."
313425389,6698,zeule,2017-07-06T15:10:23Z,"added screenshots with de-colorized icons. , does it look ok for macos?"
313447979,6698,vit9696,2017-07-06T16:27:33Z,", ok, i got to compile your themes branch. i haven't merged anything from my changes, so it is purely as is. the result is a bit aesthetic: [a link]. same for both default and monochrome themes. i see nothing obvious in the [a link] or [a link]. do you have any ideas what could it be? also, by the way, i noticed that appearance is borked on the screens above. is that a known issue?"
313449125,6698,zeule,2017-07-06T16:31:37Z,", thank for the test! the monochrome icons have to be created in a temporary dir. could you, check, please, return value of `guiiconprovider::colorizediconsdir()` and look into that directory?"
313449827,6698,zeule,2017-07-06T16:34:06Z,it is absent. qbt icons set does not contain an icon for this new page an i have no idea how to get it. maybe we can ask to make one? when qbt was using kde icons it was easy to borrow one. i don't know how it was supposed to work with the custom set.
313450207,6698,zeule,2017-07-06T16:35:27Z,"hmm, if it shows no icons for the default theme, does it mean qt fails to render svg icons in general?"
313451729,6698,vit9696,2017-07-06T16:41:17Z,"it gives me `~/library/application support/qbittorrent_icons_` and that directory does not exist at all (creating it changes nothing either). i think that no svg icons are rendered indeed. at least because we could see some png ones. on this vm i have qt 5.9.0 from homebrew, are you aware of any issues affecting this version? could compile from the source, but i personally have strong doubts it will be any different."
313456678,6698,zeule,2017-07-06T16:59:29Z,: i have no idea how to get an icon from there.
313457067,6698,zeule,2017-07-06T17:00:54Z,"there has to be a random affix in that name. for example, in linux i get /run/user/1000/qbittorrent_icons_3hkuso."
313457573,6698,vit9696,2017-07-06T17:02:50Z,"oh, i added a print inside the function and did not notice it at first. yes, now i do see the folder created, and it actually has the svg files."
313458392,6698,vit9696,2017-07-06T17:06:08Z,tracked it down. plugins/iconengines/libqsvgicon.dylib was not added to the app bundle for some unknown reason. after i copied the dylib manually i got the icons. should there be some flag in cmakelists?
313459665,6698,zeule,2017-07-06T17:10:59Z,i was pretty sure that `fixup_bundle()` collect all required dependencies. but i see on the net that folks install plugins manually (first link from google: [a link]
313464091,6698,vit9696,2017-07-06T17:27:42Z,"well, here are some screens: ![a link] ![a link] ![a link] ![a link] ![a link] ![a link] i would say the result is discussible: * that first icon with a plus sign (add url?) looks pretty terrible, the rest look more or less ok; * appearance icon in prefs is gone no idea where; * sidebar font differs between monochrome and default; * sidebar/status icons are unchanged and look very far from nice. as for the last one, compare to e.g. [a link]. i think the beginning of the issue is that something is done with the colour of the highlighted line. this is not what happens in native mac apps. do you have an idea how to turn it off? once this is done it should be more or less visible whether it is necessary to make the icons brighter. edited by evsh to enable image previews."
313473782,6698,zeule,2017-07-06T18:03:45Z,"thanks for the details! original one contains two colours, that make it readable. when we replace both with black, i don't know what else to expect. it is absent. see discussion with just above. font? i don't touch font with icons changes. and do not see that in your screenshot. could you point out where does it differ? they are unchanged because some of them differ by colour only. you can control their colours with colour theme."
313477996,6698,vit9696,2017-07-06T18:19:50Z,"could be just the size actually: [a link]. the outer + border should be removed i guess, so that it visually looks somewhat like [a link]?"
313533010,6698,zeule,2017-07-06T22:09:32Z,: thanks! managed to add an icon.
313615003,6698,vit9696,2017-07-07T08:00:20Z,", got my hands onto that tachometer icon. could you replace this misunderstanding once and forever? [a link]"
313642193,6698,vit9696,2017-07-07T10:07:30Z,"ok, checked status icon colouring. to disable colour modification on selection it seems to be necessary to add something like: [code block] this produces the correct behaviour on macos for all list-like icons (so sidebar, torrent statuses, countries in peer list). i was thinking of adding such stuff in my pull-request, but given the amount of changes you made to icon loading (it is a real mess in trunk at the moment), i think it will be better to do such stuff either right in this pull request or later. is this going to be merged any soon? at the moment i see error and warning icons being incomplete plus that speed limiter thing i posted above, but i guess there is other stuff to be done?"
313683563,6698,zeule,2017-07-07T13:40:41Z,"we can easily do this for status icons (with the correction for svg, using `qicon::addfile()` instead of `qicon::addpixmap()`). thanks! i doubt it will be merged for 3.4.0, that would require a lot of review work given the size of the pr. maybe 3.4.1 will catch this. don't understand what do you mean. could you explain, please? see the end of the first post. basically, i want to use an icon from linux theme for the limiter. but i can't get a file path from qt to flip the svg. most likely i will flip the pixmap in the icon. apart from the listed above, i plan to add a widget to select color for the monochrome icons, and maybe i can find a few more icons for torrent status in order to give all of them different shape."
313692811,6698,vit9696,2017-07-07T14:09:19Z,"i meant that for a complete svg transition there still are no svg icons for the error/warning icons in the sidebar. alright. ideally none of them have holes inside, since they make things look much worse when selected on macos, try to keep it in mind."
313697434,6698,zeule,2017-07-07T14:26:46Z,what is sidebar? do you mean torrent states or something else?
313698358,6698,vit9696,2017-07-07T14:30:05Z,"oh, sorry. was talking about [a link]."
313699714,6698,zeule,2017-07-07T14:35:13Z,"thanks. i guess, `qstyle::standardicon()` has to be used there."
315327267,6698,zeule,2017-07-14T10:27:51Z,#7103 should fix the problem with svg plugin. i would appreciate a test from you with that one when merged.
315523603,6698,vit9696,2017-07-15T09:53:17Z,"wanted to check it, but rebasing finds way too many commits with master. could you please update your pull request so that the work is not done twice for no reason?"
315527081,6698,zeule,2017-07-15T11:05:18Z,"oops, pardon. forgot to push rebased changes. done now."
315527681,6698,vit9696,2017-07-15T11:16:57Z,"alright, works just fine now."
315527919,6698,zeule,2017-07-15T11:22:30Z,thank you!
315629836,6698,sledgehammer999,2017-07-16T19:04:04Z,"i see a lot of posts in this thread. i assume that you might have re-architectured things since you first started this. so i am asking if the info in your opening comment are still valid. second question: is there any soft/hard conflict with other devs in the direction taken here? if so, please point me to the relevant comment or just summarize it. otherwise, i can start reviewing the direction + commits. thanks."
315664996,6698,glassez,2017-07-17T04:09:50Z,"i think we should release v3.4.0 without this feature. iirc, all features we scheduled for v3.4.0 are completed and merged. what bothers to release its public beta now?"
315730473,6698,zeule,2017-07-17T11:30:57Z,", the opening text is valid (made a little change to mark one more task as completed). the colour part of this pr is ready for a review. it consists of commits until the one entitled ""refactor icons handling"". the icons part is still under development. i support opinion about 3.4.0. this pr is probably too large for that milestone and it will significantly delay release, especially as i can not invest much time into qbt right now. i stole commits from #6196, so there is no conflict there. there is a conflict with #6186, as this one implements icons colorization in a different way (transforming svg source but not bitmaps)."
316560980,6698,sledgehammer999,2017-07-20T00:26:22Z,"i finally released 3.3.14 today. new plan for tomorrow/day-after-tomorrow: 1. branch off master to make `v3_4_x`. 2. take necessary actions for pushing strings to transifex. 3. release a beta the weekend or the coming week. 4. wait to see what gets reported back. 5. in the meantime investigate any possible items under the v3.4.0 milestone(eg #6484). 6. depending on step 4 we might do the stable release at the end of july or at the start of august. regardless of the above, i will continue reviewing this."
316609614,6698,glassez,2017-07-20T06:29:00Z,take necessary actions for pushing strings to transifex. release a beta the weekend or the coming week. wait to see what gets reported back. in the meantime investigate any possible items under the v3.4.0 milestone(eg #6484). depending on step 4 we might do the stable release at the end of july or at the start of august. :thumbs_up:
316641383,6698,zeule,2017-07-20T08:57:05Z,fine. let me know if you want to split this pr onto two (themes + icon changes). p.s. updated the opening post removing outdated parts.
332175563,6698,silverqx,2017-09-26T11:57:31Z,should the dark theme work? i tried on win10 and ubuntu gnome and without success.
332176943,6698,zeule,2017-09-26T12:04:31Z,"please explain what does not work, i don't understand what do you mean by ""dark theme"". this pr controls only colours of the custom-drawn ui elements (i.e. the widget colours are controlled by a system style). the whole aim of this pr is to fit qbt internal colours into the existing colour/style environments."
332181744,6698,silverqx,2017-09-26T12:25:51Z,"i meant `options - themes - color theme - default (dark)`, i expected that when i select dark theme, it will look like screenshot in first post."
332182281,6698,zeule,2017-09-26T12:28:12Z,"no, it will not, sorry. that is controlled by qt style."
332183023,6698,zero77,2017-09-26T12:31:24Z,will this be implemented in the web-ui.
332188838,6698,zeule,2017-09-26T12:54:57Z,": no, there are no such plans at the moment, and see the discussion above, please."
332191001,6698,silverqx,2017-09-26T13:02:43Z,"so it for now change colors for `torrentstate` and `log messages`, if i understand. missing icons for `toolbuttonexportcolortheme` and `toolbuttonexportfonttheme` and get this wanrings during compile: [code block] progress bar in general panel should reflect this color scheme too."
332191951,6698,zeule,2017-09-26T13:06:23Z,"also for the download progress bar, i.e. all the custom qbt colours. yes, it is covered too. thanks!"
334117980,6698,glassez,2017-10-04T10:46:12Z,", this pr became unmaintainable. 13 commits (not so bad) and 315 changed files (!). github is terribly slow here, and navigation is not working. maybe you should separate independent changes in another pr (i mean coding style fixes and so on)? we could merge them first."
334990458,6698,zeule,2017-10-08T08:07:54Z,: thanks!
336432175,6698,zeule,2017-10-13T11:58:49Z,": could you redo the status icons inversion with the updated icons, please?"
336548264,6698,zeule,2017-10-13T19:38:16Z,: thanks a lot! i don't need pngs for this pr (which in fact drops png icons in favor of svg files).
366261171,6698,Symbai,2018-02-16T15:09:18Z,is this still being worked on?
377020178,6698,Adowrath,2018-03-28T20:12:04Z,"guys, it's been quite some time of silence on this. can we expect theming in any version, at all, considering it's been almost a year since the pr came up? i'd love the feature to be in qbit. i wish i could help even, but i don't have much knowledge of c++ and qt. :/"
378902085,6698,5ay3h,2018-04-05T11:16:45Z,will fix #6434
485147182,6698,danilaml,2019-04-20T17:56:33Z,sad it's been closed. the simplistic yet informative utorrent look is the only thing keeping me from switching to qbittorrent completely.
596218536,12144,jagannatharjun,2020-03-08T15:37:51Z,"this is the original work of [a link] it seems to be not continued but it fixes a style bug and was implemented in a way that will be a bit difficult for me to achieve the quality of, so i took the initiative and opened a pr, hope is okay with this :crossed_fingers::smiling_face_with_smiling_eyes:"
596440440,12144,glassez,2020-03-09T10:12:56Z,"well, what is the current status of this pr? you just copied the original one and that's it?"
599563823,12144,jagannatharjun,2020-03-16T14:22:46Z,"well i didn't, i thought sledgehammer remodel the pr, and do you have anything specific in mind"
599572333,12144,glassez,2020-03-16T14:38:02Z,", if you really want to finish #10384 first of all you should to consider all unaddressed comments there."
599603509,12144,jagannatharjun,2020-03-16T15:35:37Z,i did try to address your comments can you take a look?
599696410,12144,jagannatharjun,2020-03-16T18:33:19Z,"doesn't seem to understand why used qtreeview instead of qlistview, imho qlistview make more sense so i reverted to use qlistview instead"
599991903,12144,glassez,2020-03-17T10:22:52Z,"here s my general review. first of all i strongly object the development way when you adjust base classes to fit upper level needs. ideally any base class should implement some subject domain model and it should has corresponding interface (that has a meaning in terms of implement subject domain). as of logger class the complete interface could be the following, imo: 1. add message of some type 2. get messages (either all or the rest since some timepoint, assuming we have precision of ""timepoint"" type that is enough to keep timepoints unique) 3. notify when new message is added there is no point to obtain some specific message of from log since user wants to see either all log or its part starting from some timepoint it didn't see before. of course it requires the messages to be cached in ""presentation"" model. but as far as i can tell, it shouldn't cause any significant problems. on the contrary, i see some additional improvements: 1. don't touch logger several times per ""presentation"" model item access (currently you call it for each data role) 2. store view-friendly data to avoid multiple conversions. 3. have differed item count than the log itself (imo, it's a really good idea to show less messages than logger itself can contain). current model/view classes have the following disadvantages: 1. many of duplicated code due to the fact we have log and peerlog that provide the similar functionality except the item type. 2. unjustifiably creating specific to ""logging"" view types that don't actually have any specific logic, so we can use generic types instead."
600042289,12144,jagannatharjun,2020-03-17T12:25:08Z,"i can't think of something with such precision, we currently store timepoints in milliseconds which is imo is not enough to maintain the uniqueness, i don't think even nanosecond will be able to give what we needl, also since the logmsg can be called from different threads we can't assume the messages are inserted in order of the timestamps that will make searching the message after the timepoint a linear operation. the current method is constant time. we can use std::set(qset is unordered) isn't what current logger class does. i infer the following -> you don't want to store the messages in `logger` anymore, it should just forward them and the consumers should catch it do whatever they need to do. but logger is initialized way before the executionlogwidget, so gui will miss plenty of important logs. fun fact - all that `getmessagesrange` does is this. it was only called once with lastknownid = -1 so i think the logic can be greatly simplified. it actually provides the range of the message before the ""**timepoint**"" (-1) it was called."
600052036,12144,glassez,2020-03-17T12:48:48Z,"you're wrong. otherwise it can't provide the following: it's still needed since some component needs to obtain messages that are posted before its creation. also some ""clients"" can't track message addition synchronously. well, we can still use current ""message number"" way."
600054313,12144,jagannatharjun,2020-03-17T12:53:56Z,"what do you propose, message number simplifies things and just does everything we need in an acceptable manner(my understanding can be limited though?)"
600059537,12144,glassez,2020-03-17T13:04:55Z,it's still [a link] (simply using sequential numbering as timepoints).
600074484,12144,jagannatharjun,2020-03-17T13:34:51Z,i am very sorry i read it - but it was sorry :eyes::crying_face::winking_face_with_tongue:
600147510,12144,glassez,2020-03-17T15:52:46Z,seems like a good compromise between maintaining own message queue in logmodel and always retrieve messages from logger is to have a tiny cache in logmodel that will contain recently obtained (and converted to display friendly form) messages.
600777360,12144,jagannatharjun,2020-03-18T17:56:42Z,the cache really does its job the time spent in baselogmodel::data [code block] script.py [code block]
601615940,12144,glassez,2020-03-20T09:54:29Z,why do you want to reset model via loglistview? why not call its method directly? or even connect action signal to model slot?
601617064,12144,jagannatharjun,2020-03-20T09:57:27Z,"loglistview's contextmenu action sends the request to clear the model, will connect directly through slot."
601618308,12144,jagannatharjun,2020-03-20T10:00:48Z,"action is controlled by loglistview, and loglistview doesn't know about baselogmodel, so have to forward the signal to model vie executionlogwidget"
601635531,12144,glassez,2020-03-20T10:44:01Z,yes. it's your mistake. as i suggested before you should connect menu to view from outside of it (in executionlogwidget where all models are accessible). please don't spread the logic across many classes.
607643160,12144,jagannatharjun,2020-04-02T06:14:49Z,"done some fresh benchmarking i added an extra click after every scroll in above script, that's why differ bit from previous data [code block] imho max size for the cache should be the maximum number of visible rows for the view,"
607945213,12144,glassez,2020-04-02T16:16:51Z,i think it should be even a little greater. but how can you obtain it? although the model should know nothing about any particular view.
607946718,12144,jagannatharjun,2020-04-02T16:19:23Z,i was thinking about some static value like 64 or 100
607948739,12144,glassez,2020-04-02T16:23:02Z,i think it should be enough. although the main purpose of this cache is to prevent subsequent calls to logger when the same item is queried for different data roles.
609956615,12144,Chocobo1,2020-04-06T18:17:49Z,how about `128`? having more than sufficient won't hurt in this case and who knows users will have what kind of crazy setup that can show a lot of lines....
610269754,12144,jagannatharjun,2020-04-07T09:06:15Z,now i preserve the existing behavior of different font colors of time and message using `qstyleditemdelegate` ![a link] custom style ![a link]
610287030,12144,glassez,2020-04-07T09:42:45Z,can you test it with some language that uses non-latin characters (and provide screenshots)?
610296891,12144,jagannatharjun,2020-04-07T10:04:10Z,does these qualify? ![a link] ![a link] ![a link]
610877004,12144,jagannatharjun,2020-04-08T10:21:42Z,"this pr has a problem, once the max log message will be reached, the cache will become useless with every new message, the one fix i can see is to revert it how sledgehammer was doing in this pr but huh, another thing is i still didn't get the word from glassez if he is satisfied from work in `logger` class which i assume he is not (xd). if you don't see the max log message as error and is good with core classes, then don't further read and haha react on this post (xd) so i will propose to revert all changes related to core classes, explicitly store messages and paint using `logitemdelegate`, which will be better when compared to the current method, where we store messages in form of `qlabel` and use rich text formatting, ""new"" way would be better in space, speed, and styling. then may if any maintainer can go and make changes in core classes to remove the use of qvector, it would be easier to review partially because a lot of code will be used from this pr and no changes in core classes. opinions?"
610885972,12144,glassez,2020-04-08T10:43:50Z,"what exactly is wrong with cache? i'm sorry, i didn't understand... you always use hints instead of something specific. and your verbosity makes it even more incomprehensible. i would prefer to see formalized and structured explanation instead."
610890890,12144,Chocobo1,2020-04-08T10:56:36Z,"you really need to look into the history a bit... please really read/search in the issues! there is a huge deal of performance penalty of using ""qlabel and rich text formatting"" when the number of log msg is over 10000. basically you need to test at 50000 (or even more at 200000) log messages with no noticeable (or acceptable) ui slowdown when scrolling, adding new messages and clearing all messages."
610902665,12144,jagannatharjun,2020-04-08T11:25:43Z,"as `logger` use a circular buffer and we directly query the message from the buffer using indices, once the limit is reached the first messages in the original queue will become the last and this invalidates the cache which hashes by indices sorry, it seems i failed to explain myself. i would like to convert the existing machinery of the current master brach to use `qstyleditemdelegate(logitemdelegate of this pr)` instead of rich-text formatting. my thinking is that i'm not the correct guy to do core classes related changes that's why this pr is taking too much time that's why basically i would like to remove all the changes of core classes (logger) and caching from this pr, for caching to work properly we require more changes to core classes which i don't want to do anymore. now caching out of the way, i can store messages as i get them from signals, and then do painting using`qstyleditemdelegate`, this would remove usage of qlabel and rich text formatting, somewhat decreasing memory usage, improving speed and also support styling. with that implemented, one can add caching in follow up prs"
610974230,12144,Chocobo1,2020-04-08T13:54:43Z,"i may not have understand your new plan fully, however i think this pr has made good structural changes and is not far from finished. i hope you don't imply you're going to drop it. imo even if this pr doesn't solve the logger widget performance issues, as long as it doesn't perform worse than before, it is still acceptable."
610978656,12144,jagannatharjun,2020-04-08T14:02:41Z,"the problem is how to fix the caching problem, the best way i can think of is to revert back to sledgehammer's original implementation of `logger` i.e using id rather than indexes what do you say? the easiest way i can think is to store messages instead of querying from logger classes and i am leaning towards the easiest way."
611027971,12144,glassez,2020-04-08T15:32:09Z,", i don't remember recommending you to use internal indexes on the outside of class implementation (i.e. in logger interface)... or did i do it? maybe there is some misunderstanding? can you point me to the place where i did it?"
611041735,12144,glassez,2020-04-08T15:56:31Z,", my general opinion is still [a link]. although i still think the model described there is the most correct, it requires storing all messages in the presentation model layer. so the compromise option is to allow you to get a specific message by its timepoint for which we agreed to use sequential numbering (suggested [a link], i.e. id (although this does not make sense from the logger subject area perspective)."
611045517,12144,jagannatharjun,2020-04-08T16:03:30Z,"[a link] you specifically mentioned ""real index"""
611049953,12144,jagannatharjun,2020-04-08T16:11:41Z,"now at this point, i only want myself to be concerned with the styling side of this pr and don't touch the core classes. isn't the current way store all the messages in the presentation layer (in form of qlabel), i would like to follow it but rather provide a model to store the messages in ready to be displayed form something like [code block] and display them `logitemdelegate` of this pr. that should fix styling and improve performance as well."
611052569,12144,glassez,2020-04-08T16:16:44Z,"yes, it must have been me... apparently i was at a crossroads between my real vision and finding some kind of compromise... although i am sure that it is possible to fix the caching logic in this situation, but i am more inclined to think that ""double mapping"" (meantioned in [a link] is a much smaller evil than having an ""too much out of subject domain"" interface."
611056014,12144,glassez,2020-04-08T16:22:58Z,this satisfies my [a link]. it can be improved later if necessary.
611121452,12144,jagannatharjun,2020-04-08T18:34:26Z,"i removed all the changes related to `logger` class and reimplemented model classes, please take some time to review"
611350369,12144,Chocobo1,2020-04-09T06:17:28Z,"would it be a nice idea to move your new proposal to a new pr? because this thread is long and slow to open in browser, at least for me."
611380388,12144,jagannatharjun,2020-04-09T07:38:32Z,please see #12458
495933064,10702,jagannatharjun,2019-05-25T16:58:39Z,"ok i took the ""stylemanager"" approach, i thought this may help in future"
495986794,10702,Chocobo1,2019-05-26T10:22:53Z,"why not just let user select the qss file? having to place qss file under a special directory is unintuitive imo. it can be a combo box with a fixed first entry ""system default"" and a second entry ""select..."" which will pop up a file selector. and this way you probably could scrap the stylemanager class... btw, qss works better than i thought!"
495988842,10702,glassez,2019-05-26T10:52:32Z,"i have always been surprised by the attempts of some contributors to implement theme support in some custom way, although i initially pointed them to the built-in support..."
495988922,10702,jagannatharjun,2019-05-26T10:53:40Z,"i am planning a follow up for icons, idea is to search icons in stylefolder()/{style-name}/*, that's why i choose `stylemanager` i think it will be more systematic and people can then distribute these files without letting end-user worry about the details i can try that if you insist but i don't like that way"
495989848,10702,jagannatharjun,2019-05-26T11:04:11Z,"how about changing the style folder to the install directory, this way it will be easier to find or add `open style folder` button along side the `stylecombobox`"
495990749,10702,glassez,2019-05-26T11:14:36Z,"idea is to search icons in stylefolder()/{style-name}/*, i think it will be more systematic and people can then distribute these files without letting end-user the details we can implement some kind of theme bundles (i.e. set of ""stylename.qss"" and appropriate ""stylename"" folder with resource files, probably zipped in single file)."
495991034,10702,jagannatharjun,2019-05-26T11:17:49Z,"this can be done in follow up pr for icons, bundles can be extracted in stylefolder()"
495992605,10702,Chocobo1,2019-05-26T11:39:52Z,"i really think showing style name/bundle name is redundant, user don't care about what name it is and it is just a file name. maybe stylemanager could still be useful, we'll see then. i imagine we could let user select a .zip bundle (only .zip as we have zlib already, otherwise too many dependencies...) and qbt will extract it to ` /guibundle` folder. qbt will clear the `guibundle` folder before extracting. and the ui could show as ""gui theme:"" and a combo box with options: [""default"", ""custom"", "" "", ""select...""]. ""custom"" will be auto selected after user imports a bundle via ""select..."". added: the ""custom"" entry could also be named after the .zip bundle name, but there should be only one custom bundle at most as to cut down maintenance for novice users. if you're up to, some of the ideas here is eligible for this pr, no pressure."
495993287,10702,jagannatharjun,2019-05-26T11:51:16Z,"i want a dark theme in the official repository because let's face it many users are lazy to google search and download files that's why bing is still out there. i don't know how this can be done using ""custom"". identifying styles by names will allow user to quickly change styles and test what better matches his style."
495993786,10702,Chocobo1,2019-05-26T11:58:45Z,"do you pledge to maintain the dark theme for some time? i won't. and are you sure a single (dark) theme will satisfy all users ranging from windows to linux and also macos? i'm not sure what you mean by don't know. when ""custom"" is selected, qbt will search in `guibundle` folder and will apply the first found qss file and icons (when we are there). also the ""custom"" could be named after the .zip bundle name, as mentioned before."
495994474,10702,jagannatharjun,2019-05-26T12:07:57Z,"may be have it in the official repo but mark it as unofficial just like cmake support, having it in official repo will attract more audiences and support i like the style-name way and having multiple qss to choose from. do you assert your method? -users opinions?"
495995240,10702,Chocobo1,2019-05-26T12:19:55Z,"big difference! cmake will work or is suitable on many platforms while a single theme will not. multiple qss entry leads to the needs of removing it, you'll then have to introduce an ui element to delete the entries. users will request it sooner or later. :) so far, i can only speak for myself (i do not represent this project). and from my limited experiences shared my own opinion about a (feasible) way to realize it, if anyone have better ideas, they are welcome!"
495995472,10702,jagannatharjun,2019-05-26T12:23:48Z,i will do the delete and install button. how about that?
495995699,10702,Chocobo1,2019-05-26T12:26:47Z,no problem for me. also what you are going to do when name collision occurs when importing?
495995747,10702,jagannatharjun,2019-05-26T12:27:29Z,ok then it doesn't make much sense if you will not have the dark theme in official repo. i can't maintain the theme myself. i am not a designer. any designer up for it?
495996262,10702,jagannatharjun,2019-05-26T12:35:24Z,well i am sure some one someday will request to have multiple themes. and about the collision we can check in `availablestyles()` then abort it or concatenate some suffix and try again
495997519,10702,glassez,2019-05-26T12:53:25Z,"hey, guys, stop, otherwise we'll be stuck with it, as has happened with other theme support implementations. as i mentioned, i am a supporter of the minimum cost implementation of minor features. so i approve of the way ""select some theme file or reset to the default"" (no need for any installation and other management). and when i mentioned ""theme bundles"", i meant nothing more than the ability to ""select some theme file or reset to the default"" (again no management, just take the specified file and apply the resources bundled in it). just have multiple theme (bundle) files somewhere in filesystem."
495998587,10702,glassez,2019-05-26T13:06:50Z,"afaik, zlib isn't about zip, it's just about .gz. of course, it can be used to compress files inside the zip archive... but then you have to implement the zip parser manually. in addition, it can only extract a subset of .zip files. anyway we can just start with .qss only support until it died before it was born."
496004639,10702,jagannatharjun,2019-05-26T14:24:11Z,`stylecombo` has additional text `select...` which let user select new qss file
496235786,10702,jagannatharjun,2019-05-27T14:45:23Z,review?
496399490,10702,jagannatharjun,2019-05-28T07:31:58Z,now?
496418769,10702,glassez,2019-05-28T08:31:57Z,", sorry, but as i stated in [a link] i'm against any kind of management of stylesheet files (i.e. install/uninstall etc.) unless it's strongly required."
496420338,10702,jagannatharjun,2019-05-28T08:36:23Z,"no, as per chocobo1 suggested, now i am only copying the ""user selected style.qss"" to style folder, nothing else, i see may be you get it by `searchandinstallstyle`, but that only finds qss and copy it to the stylefolder, so that can be accessed easily in startup"
496421039,10702,jagannatharjun,2019-05-28T08:38:16Z,do you want me directly access the style from user provided path? also i can't understand what happened to travis.
496422539,10702,jagannatharjun,2019-05-28T08:42:30Z,"only one style[""custom""] or [""system default""] at a time is allowed, no style is cached"
496425095,10702,glassez,2019-05-28T08:49:28Z,"...and then use it unconditionally. so it doesn't reflects any changes in specified file, isn't it? yes, exactly."
496439036,10702,jagannatharjun,2019-05-28T09:28:15Z,now?
496463025,10702,glassez,2019-05-28T10:40:08Z,"i would be opting into to consider and define the common design of this feature, and then to consider/review its implementation. i expressed my vision. let's wait for another opinion (at least let's wait for comment). , have you to comment on it too?"
496463740,10702,glassez,2019-05-28T10:42:42Z,"also i thing combobox isn't appropriate control for it. imo, checkbox (""use custom style sheet"") + pathedit could fit it better."
496478068,10702,jagannatharjun,2019-05-28T11:32:11Z,"i am thinking of follow up for icons in other pr. so here is what i would like to do in this pr - i like [a link], so i would like to implement that, cache the user chosen qss, identify the new style as ""custom"". i would like to retain the current combobox gui arrangement as that can be easily extendable for bundle based theming. bundles(zip) has to be extracted somewhere because there will be some components expecting solid files. pathedit will be not be much usefull then."
496483747,10702,glassez,2019-05-28T11:50:05Z,"neither the bundles nor the caching contradicts the (lightweight) feature design proposed by me. both ""bundles"" and ""caching"" can work behind the scenes (moreover caching is required to work behind the scenes). user just specifies the needed file and it works appropriately from user's pov. of course you can cache/unpack it (transparently for the user) if this is really needed for some reason (it isn't in case of single .qss file)."
496487213,10702,jagannatharjun,2019-05-28T12:01:41Z,"so is it ok with the latest commit? no caching just using the user specified qss and can be extended for bundles in the future(maybe?). i can implement checkbox ""use custom stylesheet"" but that will be changed in the future so i don't see the point there."
496493239,10702,glassez,2019-05-28T12:21:43Z,"what for? if we later replace the stylesheet file with a theme bundle file, the user will continue to deal only with a single file, so it will not make sense to change it, isn't it? well, except that the text (""use custom theme""). do not rush to produce a new code after each of my or someone else's proposals, at least until some other reviewer agrees with it. otherwise, you risk unnecessarily creating a bunch of code that will eventually be rejected. instead, you could use my advice to learn the qbittorrent coding style (and common patterns we use) to speed up further review of your code (when we agree on the feature design and start reviewing its implementation)."
496495261,10702,jagannatharjun,2019-05-28T12:28:10Z,"the path in pathedit doesn't have any meaning, styling will continue to work even after the user has removed the bundle file. that's why i like the three key based combobox [""system default"", ""custom"", ""select""]"
496506144,10702,glassez,2019-05-28T13:00:19Z,"i think you're thinking backwards... what are you coming from? if it is meant to work in a certain way, it will only work differently if you implement it incorrectly. don't try to base on your current code. let's just come to a decision on how it should work, and then we'll discuss how to implement it correctly."
496508843,10702,jagannatharjun,2019-05-28T13:08:11Z,my proposal is simply the original one [a link] by what do you want in pathedit?
496570342,10702,glassez,2019-05-28T15:36:53Z,i just suggest using something like the following as an alternative to proposal: ![a link] that's all i wrote. i'm waiting for other people's comments...
496748777,10702,thalieht,2019-05-29T01:27:20Z,"i like the concept of choosing from a combobox for the ease-of-use factor but if there are no multiple entries etc. then in that case 's idea makes most sense to me. p.s. what am i reading guys? ""select..."" in a combobox? surely you meant a button near it."
496763982,10702,Chocobo1,2019-05-29T02:56:03Z,"also i think there is the problem of caching the bundle zip/qss. when using a path widget, qbt must unzip the bundle every time on startup to ensure the file is up-to-date. of course there are tricks to work around it but it is more like a hack. i meant if we are *importing* something, a path widget won't make sense; a path widget is useful when we only *read* something. also the combo box might be useful in displaying the bundle name, assuming the bundle is named/versioned properly. here is a mockup: * this is the initial state: ![a link] * this is after user has selected ""qdark v1.0.qss"": ![a link] note the separator should be replaced by `qcombobox::insertseparator` in real code. personally i like the ""select..."" in combobox better, better coherency than a separate button that modifies the nearby combobox. a similar one is the search plugin selection combobox which has ""select..."" entry that popup a dialog."
496828215,10702,jagannatharjun,2019-05-29T07:57:30Z,"ok here is what i want to do in this pr. lets' have a combobox in appearance tab with three entries [default, custom, select], select will get a qss file, copy it somewhere inside our config folder for easy access, deleting the qss from the previous `select` and loads the qss as a stylesheet. we will only handle one qss at a time. custom will be only available if any qss is already present in our cache folder, for easy toggle between default and last used style. this means reverting my last commit `don't cache style` i too find it weirdly intuitive."
497357808,10702,glassez,2019-05-30T14:51:30Z,"i don't know what ""terrible"" problem you saw. there is nothing extraordinary here. keeping cached data up-to-date in one way or another, depending on the specific task, is an integral part of the caching technology itself. oh well. let's not go on about it, since you all prefer to deal with ""installed"" themes. let's work on its implementation. i will formulate some questions about feature design and general remarks later (hopefully everyone understands in what sense i use the word ""design"" here)."
497717498,10702,glassez,2019-05-31T13:55:13Z,"since qbittorrent will not use the selected file, but only install/import data from it, it should be obvious for the user from the ui. ""select"" can be misleading. it is better to call this action according to what it does (e.g. install)."
497725730,10702,jagannatharjun,2019-05-31T14:19:47Z,are you okay with rest of [a link]?
497748538,10702,glassez,2019-05-31T15:20:27Z,", i'm sorry, i don't have enough free time to comment on it all at once, so i'll continue in portions. please be patient."
497939864,10702,glassez,2019-06-01T12:12:51Z,so you intend to immediately apply the selected theme without waiting for the other settings to be applied (when user presses ok or apply button)? is it desired behavior? ?
497940388,10702,jagannatharjun,2019-06-01T12:17:39Z,ok now i think about it we should wait for apply button. but i will like to hear from .
497941546,10702,glassez,2019-06-01T12:32:59Z,"coding style and so on (unmeantioned in coding guidelines) the use of the term style in all local names is too vague (because it has too broad a concept). you should use stylesheet (or even, e.g., uitheme, if you really plan to extend this feature). your manager class is misdesigned. it shouldn't manages ""all the world"" (i.e. all the things related to this feature more or less). particularly we prefer to separate ui and internal logic. so you need to redesign manager class to remove any user interaction from it (i.e. showing dialogs etc.). please bring the singleton implementation (in manager class) in line with the form we use (see for e.g. bittorrent::session class). next, i'll look directly at the code, after you fix these basic flaws (mentioned above)."
497950183,10702,Chocobo1,2019-06-01T14:38:54Z,yes you should.
497951181,10702,jagannatharjun,2019-06-01T14:53:11Z,it does with the latest commit.
498029749,10702,glassez,2019-06-02T13:09:16Z,"with the latest commit only ""theme changing"" waits for apply button. but you still rewrite custom theme without it so user can't undo this action. is it acceptable behavior? ?"
498034416,10702,jagannatharjun,2019-06-02T14:06:43Z,i agree with you. it should wait for accept button.
498034604,10702,Chocobo1,2019-06-02T14:09:03Z,personally i think it is fine.
498049390,10702,glassez,2019-06-02T17:19:39Z,"then why wait for pressing the apply button if you still won't able to cancel this action? imo, it should either apply selected theme immediately (although it is inconsistent with the other options applying) or does nothing (just keep selected file path) until apply (or ok) button is pressed. otherwise it has undefined behavior."
498729080,10702,jagannatharjun,2019-06-04T15:46:26Z,"i tried to redesign things a bit. rather than using `availablestyles`, i am using enum based solution now. i thought this might be more ""clean"" and better separate things. also now qss is only moved on `accept` button. , , ?"
499922522,10702,jagannatharjun,2019-06-07T15:09:23Z,i did try to follow the coding guidelines as much as possible.
500186443,10702,jagannatharjun,2019-06-09T05:35:01Z,![a link] ![a link] sorry if i am disturbing or something. ? also may be `user interface language` -> `language`
502172348,10702,jagannatharjun,2019-06-14T16:21:13Z,"easiest and cleanest way to implement for icons, is to require restart. i am thinking to separate ui styling and icons i.e to provide seaperate combo box based style option for ui and icons. qss can be applied on `accept` and icons change on restart. , ?"
502362133,10702,glassez,2019-06-15T12:17:53Z,"i wouldn't be in a hurry to do that. at least until this feature is complete (icon support, etc., that is beyond the scope of this pr). in addition, i do not feel that the implementation of some feature can be in the form of a set of free functions... although all can be, but this will be clear only when it will complete, as i already said."
502362837,10702,jagannatharjun,2019-06-15T12:28:04Z,"i did start working on icon support and think i will only require changes inside `guiiconprovider` and replacing direct access to icons folder to `guiiconprovider` function calls, so i think it's safe to replace this class with namespace. also there is no need to store anything inside `guitheme`. do you agree with name changes suggested by chocobo1?"
502380222,10702,glassez,2019-06-15T16:25:43Z,"i would, on the contrary, merge all functionality related with appearance/theming into guithememanager class instead of spreading it across the different code places."
502382675,10702,jagannatharjun,2019-06-15T16:59:11Z,"no, i have added `geticondir` in `uithememanager` and `guiiconprovider` call this function instead of directly quoting `:icons/` folder"
502382741,10702,glassez,2019-06-15T17:00:00Z,"by the way, i have an idea about the theme bundle file format. no external dependencies, only qt. we can use **the qt resource system** for this in the form of **external binary resources**."
502382789,10702,jagannatharjun,2019-06-15T17:00:44Z,"also, do you agree on `namespace` idea of ? i have done the changes, should i push?"
502382976,10702,jagannatharjun,2019-06-15T17:03:02Z,"how about like here we ask for qss, we can ask for a folder of icons, with the same structure as of qbittorent's icon dir, and for `custom` icon theme load icons from this folder. it's easy xd, user can extract there own zip file(""bundles"") in folder"
502383982,10702,jagannatharjun,2019-06-15T17:17:25Z,"do you mean by [a link]. i am very much open to the new ideas and free this summer, will try to implement. can you elaborate?"
502388240,10702,Chocobo1,2019-06-15T18:15:36Z,"if i understand correctly, the external resource will need to be in compiled form which will be cumbersome for users/modders. but on the other hand, it would greatly simplify the requried code in qbt. decisions, decisions..."
502447105,10702,glassez,2019-06-16T12:18:08Z,"stylesheet file and all other theme resources can be compiled into rcc file and then loaded with [a link] so we can access them as regular files. we don't even need to install anything, so we can use the simplified management suggested by me above (the user just sets some theme file from anywhere in the file system). the downside is that compiling of such theme file is a little more difficult than to pack the zip archive."
502448007,10702,glassez,2019-06-16T12:31:01Z,"i gathered my thoughts. i am categorically against having anything that is part of the application workflow (in any of its aspects) in the form of free functions. this is a clear lack of design. only some utilities can be ""free"". everything else should have its place and be manageable."
502448028,10702,jagannatharjun,2019-06-16T12:31:23Z,"then creators will require qt package for creating themes, for example qt package on windows is well above a gb or two but then also if he knows about qss then qt will be already installed on his pc. we can also use [a link]"
502750308,10702,jagannatharjun,2019-06-17T16:13:35Z,uses rcc files for resources [code block] ![a link] ![a link]
506724749,10702,jagannatharjun,2019-06-28T12:59:20Z,? ? ? anyone xd.
508442921,10702,glassez,2019-07-04T11:06:59Z,are you sure we still need to install something in case of using the qresource driven approach? ?
508447240,10702,Chocobo1,2019-07-04T11:22:30Z,in this case no.
508448896,10702,jagannatharjun,2019-07-04T11:29:01Z,"[code block] and store the resource file path instead of selection index, empty indicated `default` theme hmm?"
508449597,10702,jagannatharjun,2019-07-04T11:31:49Z,or maybe store custom file path with the selection index (separate values) as to show previously selected resource file in the combo box.
508455157,10702,glassez,2019-07-04T11:53:15Z,"if you mean to be able to switch between the default theme and the previously selected custom theme, then yes."
508536269,10702,jagannatharjun,2019-07-04T16:41:12Z,now?
508930795,10702,glassez,2019-07-06T14:33:14Z,i think it's ready for merging in master. waiting for opinion...
509616304,10702,jagannatharjun,2019-07-09T12:09:39Z,asked me to put the errors in quotes for other message and the previous message also. will remove it if you ask.
509646950,10702,Chocobo1,2019-07-09T13:41:01Z,please fix those warnings: [a link]
509649336,10702,glassez,2019-07-09T13:47:23Z,", i think we shouldn't wait after this is done and commits are squashed. all sorts of unnoticed little things can be fixed later. in addition, it is assumed that this feature will be expanded further."
509651465,10702,Chocobo1,2019-07-09T13:52:47Z,what do you mean? this pr is still evolving or do you suggest merging it as-is?
509655058,10702,glassez,2019-07-09T14:01:31Z,i think this pr is done within its scope and the feature can be expanded further without breaking its main interface. so it should be merged now (unless you find some critical flaws at the last moment).
509664881,10702,Chocobo1,2019-07-09T14:26:21Z,"imo the current state is very close to being finished judging by our standards, one last thing is squash the commits into the first one and i can approve."
509667165,10702,glassez,2019-07-09T14:31:56Z,", can you create appropriate wiki page with some info about theme format and creation instructions? you can attach your theme as an example there."
509727085,10702,jagannatharjun,2019-07-09T17:09:01Z,"for icons, i would replace all direct references of `:icons` with helper function from `iconprovider` classes, for example, there are lots of direct references of icons in `skin` directory, would like to replace this with `guiiconprovider::getskiniconpath`. this with `geticonpath` will internally call `uithememanager::geticondir` for icons dir. `uithememanager::geticondir` will return `:icons\` or `:uitheme\icons` based upon settings."
509731945,10702,glassez,2019-07-09T17:23:46Z,"imo, current icons layout not so good to support theming in a convenient way. so i would make changes on both sides - how the icons are handled by the app and how the theme will provide them. i have some suggestions (maybe not much thought). i want you to open up the relevant issue where we can discuss the main aspects of the required changes before you start coding it. i really do not want this feature to be implemented in a lazy manner as some kind of patch to the existing code. it should have a well defined design."
509735468,10702,jagannatharjun,2019-07-09T17:33:55Z,#10903
510023970,10702,Chocobo1,2019-07-10T11:33:10Z,thanks for fulfilling many people's wish.
510125345,10702,jagannatharjun,2019-07-10T16:05:02Z,"it was my first big pr to any repo, so thanks to you guys for bearing with me for 2 months xd"
510127558,10702,glassez,2019-07-10T16:10:42Z,", thank you for bringing this matter to an end, despite all the difficulties :+1: many people throw their ideas unfinished when they realize that there are rules and requirements and we do not allow the wrong/unsuitable code, even if the idea is good in itself."
513694115,10702,Piccirello,2019-07-22T08:28:38Z,"this feature will be used by so many more people if we bundle a dark mode theme in qbittorrent. #6434 has 293 :thumbs_up: , [a link] of any issue (and 4x the number of the next highest issue). if you're willing to maintain the dark theme, i think we should bundle it with qbittorrent."
513700144,10702,glassez,2019-07-22T08:45:36Z,"personally, i would not consider this possibility until the entire ""theme support"" feature is fully implemented and tested. ""dark mode"" theme can't be complete (to release it officially) without having the appropriate icons to match it in color. but until then, we can provide the appropriate resources in another way (e.g. wiki page, pinned github issue etc.)."
513705218,10702,Piccirello,2019-07-22T09:00:04Z,"completely agree regarding waiting for matching icons. we can use the wiki in the mean time. once #10903 is resolved, we should bundle the dark theme with the app (assuming someone can support it)."
513707372,10702,Chocobo1,2019-07-22T09:05:55Z,"i would say ""support"" as in long-term support otherwise i think it would be wise to have contributors maintaining their own repo/forks."
514502043,10702,Piccirello,2019-07-24T06:41:51Z,i think their stance is the only correct one- bundle a dark mode only if we’re able to support it long term. it would be a disservice to our users to provide a tool that breaks in future versions.
536380024,10702,Stanzilla,2019-09-30T02:52:53Z,where would i put style.qss files so the client sees them? i tried `%appdata%\qbittorrent` and `%appdata%\qbittorrent\styles\` and `%appdata%\qbittorrent\styles\test\`
538626029,10702,jagannatharjun,2019-10-05T07:33:52Z,"the method is changed in the course of pr (first post updated accordingly), i will try to write documents after #10948 or if 4.2 is released before that. meanwhile, you can use any style file(*.qbtheme) from [a link] with 4.2 alphas."
194786910,4936,sledgehammer999,2016-03-10T10:45:52Z,no! don't do that. you'll just rebase this after merge the other pr.
194802124,4936,zeule,2016-03-10T11:35:49Z,", thank you! i always forget to replace those q_decl_override inserted by qt creator..."
195753409,4936,Danny3,2016-03-12T14:59:18Z,"since you're working on this... could you maybe add the the actual progress bar that exists in μtorrent but it's missing here? it's 4 pixels tall surrounded by a 1 pixel pixel grey border as far as i can tell. ![a link] this exist in the older version of μtorrent (1.8.5) that i'm using. this matches the percentage and can be seen how it's moving when downloading a torrent fast or when the torrent is rechecked. it's a little unexpected for me that the progress bar doesn't really show the progress of downloading torrent, but the downloaded parts of it and the real progress bar is just the small one shown int the done column."
195761744,4936,zeule,2016-03-12T15:33:26Z,"to me this ""progress line"" looks like a separate widget. why does the progress percentage not satisfy you? do you want just a graphical representation or there is something more in this progress bar?"
196337357,4936,Danny3,2016-03-14T14:35:17Z,"i found the ""progress line"" to be useful in 2 cases: **1**. a little trick that i found myself: when i'm taking a break, like going o eat or something, i just leave the pointer of my mouse at the end of it. when i get back, i look how much the end of line has moved from where my mouse pointer is. if it didn't move, it's clear to me that it didn't download anything more. i don't think i'll remember the percentange, especially if it's a floating point number and this method seems faster than writing the number in a text file for later comparison. **2**. good to detect slowdowns on hard drives. if i remember right, i think that once i detected that the antivirus was running an automated scan because i was looking at the progress line after doing a force rechek on a torrent and it seemed to me that the line was moving too slow compared to other times. i think that i wouldn't have noticed anything looking at the percentage number. maybe it's my brain that likes graphs more than numbers... and it's easier for it to see a grahical overview than the exact number. i thought that qbittorrent tried to offer a simmilar ui to μtorrent keeping as much as possible of the good features in μtorrent. this seems to me like a good feature which takes little vertical space. if you can't add it, don't wory, it's ok. thanks for asking why do i need it for. btw, about this pr, showing the files in the tooltip looks like a nice feature."
196347093,4936,zeule,2016-03-14T14:49:36Z,", thank you for the explanations! thinking about this progress bar, may i ask just one more question? why don't you use the eta column in the torrent list? is it because the column relies on instantaneous speed? what do you think about a small addition to this progress line: to show completed in blue and active (donwloading) in green if the width of this addition is big enough (> 1px?)?"
196406956,4936,Chocobo1,2016-03-14T16:49:49Z,"just tried it out, it's cool! here's some bugs i observed: - i start qbt with empty jobs, the bars looks like it's floating, but it should be flat as before, see pics below: before: ![a link] after i hover mouse over progress bar, it becomes normal: ![a link] this floating bug is also observed when i have only 1 jobs and then i remove it, then the bar starts floating. - about the tooltips text, maybe it's better to switch the legends and pieces info and use the string ""this piece contains:"" as title. [code block] - in tooltips, use only filename, leave out it's path. what do you think?"
196412147,4936,zeule,2016-03-14T17:01:30Z,",thank you for the comments! i will definitely investigate the first problem, because the strange thing is i changed the bar drawing code to avoid the same ""hovered"" impression on my system. perhaps this is just because of the difference between light and dark backgrounds. i think that the path in the tooltip is useful. think about a torrent with series of something. than each subdirectory may contain files with names like 001, 002, 003, .. without path information they all will be indistinguishable."
196417251,4936,zeule,2016-03-14T17:13:28Z,"i implemented this feature for the following situation. suppose i want to download a book. i launch a search and (see pr #3989) obtain a number of book collections where this particular book is present. then i start to download a torrent and find that it is incomplete with current peers. but do they have the book i need? now i can overview the torrent and check. if no, i can try another one. and here is the question: perhaps i should instead add an ""availability"" column to the ""contents"" tab? this column might show instantaneous availability for the torrent files."
196418345,4936,Chocobo1,2016-03-14T17:15:37Z,"yeah, then it's better to have path included. but i just felt too much text crammed together (not sure how to describe it precisely). another idea, is it better to move file size to the start of a line? that way i can quickly know what file (the piece contains) by simply looking from the end (of a string)."
196418357,4936,Danny3,2016-03-14T17:15:38Z,"most of the times the eta column shows ∞ (infinity symbol) the tracker could be down or the only one seeder could be offline at that moment. imo, not showing anything it would be the same, either way, it doesn't help me at all. when it works it's just a smart guess based on the current speed. unfortunately it has a major problem that's impossible to fix. it assumes that the speed will remain constant, (tracker will stay online and peers will remain online and upload at the same speed). anyway, it gives you an idea by predicting the **future**, it's good enough, it's nice. i will rephrase my example with taking a break from the computer: let's say i add a tutorial torrent in the evening. eta or no eta, this will take a while and i put my mouse pointer to the end of the progress line and go to bed. when i wake up and come to computer i take a look how much progress the torrent made over the night from where i left the mouse. i don't care about the time, because i know it, it's from when i went to bed until now when i'm looking. so i don't care that much about the future that eta shows, but the progress in the **past**, that has already happened and it's accurate. i think the progress it's useful for multiple days eta torrents too, if you want to quickly see how much progress the torrent made each night. leaving the mouse there, for curiosity. normally i like simple straight progress bar (one color), but your idea seems interesting and good for showing more detailed information without requiring extra space and i will like to give it a try. i assume making both versions with a settings toggle would be too much work. btw, are you sure that having the second color ""green"" wouldn't be a problem for color blind people like the ones that have deuteranopia (problem seeing green)? [a link] maybe they will see only the first part (blue) and not the the second (green), so they will see half a line..."
196423450,4936,Chocobo1,2016-03-14T17:27:47Z,"one last thing for this round :p were you using tabs for indentation? imo it took too much (precious) spaces, maybe just 2~3 spaces is enough?"
196425621,4936,zeule,2016-03-14T17:33:16Z,"no, this is the default indentation from html ` ` tag."
199084955,4936,zeule,2016-03-21T01:59:25Z,"can i mark somehow the pr as not yet ready for merge? there is a bug in it: if i select a torrent with downloaded metadata and after that a torrent without it, the progress bar shows the progress of the former one after mouse moved out of it."
199126666,4936,Chocobo1,2016-03-21T05:04:30Z,just add something like `[don't merge]` in the title or in the first post
199325911,4936,zeule,2016-03-21T14:57:42Z,thank you all for the suggestion! i've worked around the bug by cleaning piece information in `clear()`. perhaps it is better to do that anyway.
199337510,4936,zeule,2016-03-21T15:24:02Z,"fixed drawing error, now with light theme it should be correct. tried to remove indentation from the list, but without success (can someone help me, please? how to change indentation in ` ` element rendered in tooltip?). tried to typeset the files information in a table. the code is there, under typeset_filelist_as_table define. however, i got strange alignment with hieroglyphs in file names: file names were shifted downwards for approx 0.1-0.2 ex. maybe somebody can tell what's wrong there? moved file size information to the beginning of the list items."
199756811,4936,ngosang,2016-03-22T11:02:47Z,i'd prefer the legend at the top of the tooltip. also remove some spaces. example: [code block]
199774705,4936,zeule,2016-03-22T11:40:51Z,"i decided to put the legend at the bottom because otherwise the tooltip text looks like a filled with water balloon, pinned by mouse pointer, which is not aesthetic. could you, maybe, suggest how to avoid that look? which spaces do you want to remove?"
199890475,4936,ngosang,2016-03-22T16:27:32Z,"no, but most relevant/important info should be first. for users it is more important to understand the graphic. before: [code block] after: [code block]"
200021978,4936,zeule,2016-03-22T20:57:02Z,", what do you think about the following: we can show the ""simple"" tooltip (only legend), but if one of the modifier keys is pressed, we show another tooltip which contains _only_ the file list. additionally, we can hide file size with another modifier (or this is too much?) so, the simple tooltip contains the following: white: ... green: ... blue: ... hold shift for detailed information and the detailed tooltip does not contain the legend at all. this saves us from ugly text pyramid and from annoying spaces, but leaves the tooltips clear and readable."
200233904,4936,Chocobo1,2016-03-23T07:52:30Z,good idea! agree. too cumbersome. better add parentheses: `(hold shift for detailed information)`
200397944,4936,zeule,2016-03-23T15:35:38Z,"implemented the tooltips split. activated table rendering by default for the detailed tooltip, because i think that vertically aligned cells look good. i did not add the suggested parentheses because, as to me, now the simple tooltip is clean and nice."
202614150,4936,zeule,2016-03-28T22:48:16Z,detailed tooltip caption is left-aligned now
216654688,4936,zeule,2016-05-03T20:28:08Z,i think this is ready for merging.
217631149,4936,ngosang,2016-05-07T11:49:59Z,sometimes i see the size in two lines but i think it should be always in one line. maybe using a non-breaking space... ![a link]
219194128,4936,zeule,2016-05-14T01:50:33Z,": i've added 'white-space:nowrap' to the style of the size table cell. seems to be working here. could you test, please? but i agree with you that there has to be the thin unbreakable space between the number and the unit."
219579212,4936,sledgehammer999,2016-05-16T23:33:44Z,i think i am done with the code review. i didn't check it architecturally-wise much. i don't see something obvious. i see that hasn't commented. can you take a look too? ps: the use of `{}` instead of `()` for initializing stuff becomes annoying to read and imo breaks the style the rest of the repo uses.
219579791,4936,zeule,2016-05-16T23:37:31Z,did that already.
219580713,4936,sledgehammer999,2016-05-16T23:43:17Z,"are you sure? i don't see him in the ""participants"" list at the right-panel of this page."
219581477,4936,zeule,2016-05-16T23:48:01Z,"he did that in #4994, which includes these changes."
219582626,4936,sledgehammer999,2016-05-16T23:55:23Z,some design decision which i think is intentional but i am asking generally in case others agree. (i am not pushing this change unless other people agree): the file size in the tooltip is printed in the middle of each filename. wouldn't it be better to print it at the top?
219584203,4936,zeule,2016-05-17T00:05:12Z,on my system and with my files the file names usually occupy two lines. aligned to the middle size labels allow me to match them easily.
219584806,4936,sledgehammer999,2016-05-17T00:09:12Z,"can you run uncrustify on your first commit? i noticed if/elses that don't need braces and some that have their braces in the wrong line. ps: if it gives too much trouble with the 2nd commit, then i guess you should do it for the downloadedpiecesbar.h/cpp files and merge the changes into the 2nd commit."
219619794,4936,glassez,2016-05-17T05:01:18Z,i'm not sure i did it in detail. so i'll see it here .
219702831,4936,zeule,2016-05-17T12:29:21Z,", i believe all your comments have been addressed. give me a note, please, when to remove `#define typeset_filelist_as_table`."
219853483,4936,sledgehammer999,2016-05-17T21:04:26Z,those were my final comments i think. i tested the code it looks good. so now i am waiting for
220045337,4936,glassez,2016-05-18T14:33:45Z,"`follow project coding style. issue #2192.` means ""fix indentation"" only again?"
220045702,4936,zeule,2016-05-18T14:34:52Z,"means ""run uncrustify"""
220063147,4936,glassez,2016-05-18T15:27:04Z,"then rename commit accordingly, please."
220066961,4936,glassez,2016-05-18T15:39:01Z,i've finished commenting. please don't force push here some time after you answered to my comments to not complicate our dialogue (so i don't have to look outdated diffs every time).
220067687,4936,glassez,2016-05-18T15:41:17Z,"it would be better if you will first add a separate commit with fixes, and then (after i review it) meld it into previous."
220076964,4936,zeule,2016-05-18T16:09:53Z,"ok, take a look, please."
220090131,4936,glassez,2016-05-18T16:54:32Z,", i've finished reviewing. i have not delved into the rendering code, i hope it works correctly."
220563785,4936,zeule,2016-05-20T09:50:23Z,"/qbittorrent-frequent-contributors this pr adds `qpair torrentinfo::piecesforfile(int fileindex) const` which returns indices of first and last pieces that contain a given file. at the same time, there is `qpair torrenthandle::fileextremitypieces(int index) const` function with the same purpose. my bad i had not found the latter. however, implementations are different. i believe that `torrentinfo::piecesforfile` is better, of course. for instance, `torrenthandle::fileextremitypieces` incorrectly behaves in corner cases (take files_offset = n \* piece_size - 1 and file_size = n \* piece_size). so, what should we do? could someone, please confirm or reject my conclusion (the function in `torrentinfo` does not have corner cases, the one in `torrenthandle` does). and we shall remove one of them. i believe this function belongs to `torrentinfo` class since it needs only the torrent metadata to work."
220574195,4936,glassez,2016-05-20T10:42:17Z,ok. at least it has incorrect name.
220574462,4936,zeule,2016-05-20T10:43:46Z,"then suggest the correct one, please."
220575973,4936,glassez,2016-05-20T10:52:21Z,why not to use the old one? i mean fileextremitypieces.
220577209,4936,glassez,2016-05-20T10:59:25Z,your method is better (if it's correct of course) since it doesn't use floating point arithmetic.
220577560,4936,zeule,2016-05-20T11:01:35Z,simple and nice :) that's the question :) i feel like i want to add unit tests to qbt.
220578789,4936,glassez,2016-05-20T11:08:59Z,i think it would be easy to prove it in this case. enough to do it for the boundary cases.
220580130,4936,zeule,2016-05-20T11:16:52Z,i would like to get a confirmation from at least one more person.
220581065,4936,glassez,2016-05-20T11:22:40Z,ok. `firstoffset / piecelength` is correct for each correct firstoffset. but... `(firstoffset + filesize) / piecelength` isn't correct since `(firstoffset + filesize)` is the next file offset and we should check the last file byte offset instead: `(firstoffset + filesize - 1)`.
220582441,4936,zeule,2016-05-20T11:30:52Z,"bingo! thank you! another question: wouldn't client code become simpler if we return not [first,last] pair, but [first,one after the last) range? additionally, that will be consistent with stl interfaces and the second number will be equal to the number of pieces, into which the file extends."
220589450,4936,glassez,2016-05-20T12:11:38Z,"what good to us getting ""one after the last"" piece number? ""number of pieces, into which the file extends"" is not the same as ""one after the last file piece"""
220594844,4936,zeule,2016-05-20T12:39:57Z,"because this is what we are used to get from arrays and sequences: index of the first element and size (index of the element after the last one). plus the start index, of course."
220616227,4936,glassez,2016-05-20T14:11:17Z,"so what value are you going to return? if ""number of pieces, into which the file extends"" then it requires some more complex algorithm. if ""one after the last"" then why don't you just cut this method to `filefirstpieceindex()` and to call it twice: filefirstpieceindex(i) and filefirstpieceindex(i + 1)? besides, i am confused by what term can be called a pair of different entities (firstpieceindex, numberofpieces) or even pair of first and last+1 indexes? imo, we should not aspire to be like stl for no additional reason. i don't think client code become simpler."
220623576,4936,zeule,2016-05-20T14:37:54Z,this entity usually called a range. why is it good? because having [code block] one can write enumerations as he is used to: [code block] or use stl algorithms with a range.
220638787,4936,glassez,2016-05-20T15:32:26Z,"the other can write differently (assuming filepiecesrange returns first and last index): [code block] why not? besides, we don't have to alter existing code."
220671731,4936,glassez,2016-05-20T17:42:10Z,i am confused by the fact that your range includes out-of-range value too. you probably want to show the analogy with the iterators. but it is somewhat different.
220676227,4936,zeule,2016-05-20T17:59:58Z,"btw, with this agreement the code in the function which determines a range is simpler too: there is no need to subtract 1 from the file size."
220681314,4936,glassez,2016-05-20T18:20:38Z,this will work incorrectly in some cases for last file. upd: not only for last file but for each file which last byte isn't last byte of piece.
220700487,4936,zeule,2016-05-20T19:42:17Z,~~we do integer division thus i think everything would be ok for all mentioned cases.~~ understood what did you say.
220760858,4936,glassez,2016-05-21T06:01:28Z,now you have a simple and reliable algorithm of search the first and last piece. no need to complicate it. everything else can be done on its basis.
221041415,4936,zeule,2016-05-23T17:39:39Z,"pr updated: 1. instead of `qpair ` use class `indexrange ` (added) which allows removing ambiguity of the `qpair` `first` and `second` meanings. also, explicit return type allowed to simplify the function name which is just `torrentinfo::filepieces()` now. 2. added commit which replaces `torrenthandle::fileextremitypieces()` with `torrentinfo::filepieces()` because we do not need the handle for acessing torrent layout."
221831707,4936,zeule,2016-05-26T10:11:03Z,"i don't want to change anything more with this pr, unless there will be any suggestions (or errors). , consider this for merging, please."
221872862,4936,zeule,2016-05-26T13:37:50Z,broke the promise and uncrustified `src/gui/properties/propertieswidget.cpp` in the first commit too. this is just to simplify merging in my fork.
222334220,4936,sledgehammer999,2016-05-28T23:22:33Z,i am going to review this tomorrow.
222566351,4936,sledgehammer999,2016-05-30T23:42:59Z,would it be easy for you to undo almost all your curly braces usage? eg on initializer lists and when declaring a variable? it breaks the style the rest of the project uses (and it annoys me reading it). as for the pr: my only gripe so far is the calculation i commented on. i could be wrong. i am waiting your input.
222648773,4936,zeule,2016-05-31T10:18:10Z,"pr updated: approximation is mentioned in a source comment, integer overflow error was corrected."
223154205,4936,sledgehammer999,2016-06-01T23:24:19Z,i think the code is ok for merging. i did a test run and i noticed something different from a previous version i had tested. i don't know if this is intentional or not. when hovering over the progress/availability bars i don't see the relevant piece being highlighted! or was it the file you were highlighting? in any case nothing gets highlighted now.
223159366,4936,zeule,2016-06-01T23:55:36Z,"this is a bug, which i can't reproduce. could you look what happens inside of `piecesbar::highlightfile(int imagepos)`? in particular, what are the values of `pieceindex`, `filepieces`, and `imagerange`?"
223161004,4936,zeule,2016-06-02T00:05:19Z,there was a bug on one of the previous iterations: integer overflow which broke highlighting if position was far than 2gb from the beginning of a torrent. do you observe something similar?
223163008,4936,zeule,2016-06-02T00:18:43Z,and in that case `imagerange` contains negative values.
223170918,4936,sledgehammer999,2016-06-02T01:17:52Z,"the issue is that inside `pieceindextoimagepos::imagepos()` the torrentinfo is invalid so piecelength is -1. i cannot understand why it is invalid. you are initializing it in the constructor. on another note: **2 negative side-effects of curly brace initializations** 1. when using them in the initialization list of a constructor qtcreator gets confused about the rest of the class. for example take class `pieceindextoimagepos` and go inside imagepos(). hit enter after `const qlonglong piecelength = m_torrentinfo.piecelength();`. the newline gets indented too far to the right. 2. in `qrect newhighlitedregion {imagerange.first(), 0, imagerange.size(), m_image.height()};` hover over newhighlitedregion. the tooltip doesn't show the constructor signature."
223171932,4936,sledgehammer999,2016-06-02T01:25:30Z,there's something very wrong here. if i put in `piecesbar::highlightfile()` this: [code block] it works! vanilla code(without qcritical()) doesn't work.
223227626,4936,zeule,2016-06-02T08:26:44Z,"omg, i thought that `torrenthandle::info()` returns `const torrentinfo&`..."
223228920,4936,zeule,2016-06-02T08:32:44Z,fixed.
223231593,4936,zeule,2016-06-02T08:45:08Z,"btw, gcc with -wextra should warn about this error. unfortunately, we do not pass neither -wextra nor other warning options to it."
223240325,4936,glassez,2016-06-02T09:24:08Z,so what was the problem? i was lost in recent code changes...
223241299,4936,zeule,2016-06-02T09:28:23Z,"`pieceindextoimagepos` was keeping const reference to a temporary `torrentinfo` object, obtained via `torrenthandle::info()`"
223256941,4936,sledgehammer999,2016-06-02T10:42:34Z,"i'll be able to check in a couple of hours. in the meantime, please take a look at my inline comment in `constexpr indextype last() const`. ps: aren't you able to define extra cxxflags before compiling?"
223288574,4936,zeule,2016-06-02T13:18:42Z,"if i modify cmake files, each git command will ask me to commit or stash those changes."
223316927,4936,sledgehammer999,2016-06-02T14:54:08Z,"thanks for this. not true. it asks about that edited file only when you are rebasing or pulling a branch that modifies that same file. but this is solved easily. you do your necessary changes and stash them. each time you clean your working dir you just need ""git stash apply"" to reapply them. the ""apply"" verb keeps the stash and doesn't delete it. this may not work so well if you want to keep multiple stashes. you'll need to remember the index too then."
223371897,4936,zeule,2016-06-02T18:00:28Z,"thank you for merging, and i very much thankful to all those who took part in the discussion! , i hope that you ran it one more time and that highlighting work. does it? and rebasing appears to be the most frequent operation :( especially to amend a head^n commit."
223378717,4936,Chocobo1,2016-06-02T18:23:55Z,"was just playing this, found a minor issue: ![a link] this happens when i point to the very start (and end) of the progress bar."
223379286,4936,zeule,2016-06-02T18:25:45Z,: i can't understand what is in your image. what is the dark rectangle? what is supposed to be there?
223379835,4936,Chocobo1,2016-06-02T18:27:44Z,"forgot to say, the box is supposed to show detailed information (holding down shift). i was holding down shift and moving mouse around."
223380281,4936,zeule,2016-06-02T18:29:13Z,so the detailed tooltips for the very first piece and the very last ones are empty. is it correct?
223381042,4936,Chocobo1,2016-06-02T18:32:04Z,"not sure, it only happens on/near the border of the box."
223387908,4936,zeule,2016-06-02T18:55:53Z,fixed in #5339
1003724138,15915,glassez,2022-01-02T14:26:43Z,"it is still not fully completed. i posted it in advance to discuss some things before i can continue: 1. initially, the first thing that came to my mind as a class name was `utils::fs::path`. but now it looks like a very bad idea. path handling is a pretty big (fundamental) part of the qbittorrent logic, so i would put `path` class in the global namespace. 2. since the `path` normalizes the string representation of the path, i made its constructor explicit. i think it's better to leave it like that. 3. `path` has two methods for getting a string representation (`tostring()` and `tonative()`). but they are different. using `tostring()` is cheaper, because it does not perform any transformations, but simply returns an internal string. maybe we should indicate this in the interface? for example, call it just `string()` or `str()`? and maybe add an `operator qstring() const`? 4. currently `path` has only component based concatenation `operator/()` so if you want to add extension you should do `path(path.tostring() + "".ext"")`. i think i should add `operator+()` that will add something to the path without inserting separator. 5. despite the par.2 it can be useful to provide operator/(string) to simplify code: `path = path(pathstr) / ""subpath"";` vs `path = path(pathstr) / path(""subpath"");` 6. it can be useful to provide constructor/operators for `const char []` to avoid use `qlatin1string` with hardcoded paths."
1005385874,15915,Chocobo1,2022-01-05T05:06:33Z,"i don't have time to look into closely. as for the discussion points, i agree with all except 2, 3 which i cannot comment since i haven't looked into the code. i'll come back later when i have more time.."
1007126143,15915,Chocobo1,2022-01-07T04:10:38Z,i agree with point 2. as for point 3: i'll leave it as is (`tostring()`). :thumbs_up:
1010751159,15915,Chocobo1,2022-01-12T08:06:22Z,also one new warning: [a link]
1011671729,15915,thalieht,2022-01-13T02:05:32Z,"i didn't test all this stuff in master, i will tomorrow. i hope i didn't write all this for nothing... i tested with both qt5 and qt6 qt5 only: adding torrent before metadata are retrieved: it starts downloading but status is stuck at ""downloading metadata"". pause has no effect i.e. status changes but it keeps downloading. content tab is never populated not even after qbt restart, after testing qt6 (and purging torrent and files) i came back to qt5 to test again and now i get crashes mid-download. `fileindex` is -1 [code block] qt5 only: adding a torrent _with_ metadata (or from .torrent) is not added to the list, and re-trying to add it before restart results in ""magnet link is already queued for processing"". after restart it is lost. both: renaming a folder in a torrent results in: creating a parent folder for that folder and that parent has the new name (repeatable). i first tested with qt5 and then i compiled with qt6. on startup, a torrent which i thought wasn't added, appeared and shortly after i get a crash every time: [a link] deleting that torrent stops the crashes. [code block] qt6 only: add torrent before metadata are retrieved: torrent goes in ""downloading metadata"" status and shortly after ""checking resume data"" and then it crashes. happens with and without using incomplete folder. similar to [a link] . this happens only once because on restart the torrent has downloaded the metadata. [code block]"
1011857044,15915,glassez,2022-01-13T07:10:25Z,"not for nothing! although, apparently, the crash problem does not apply to this particular pr (because there are similar reports about v4.4), but i am glad that you can achieve it. please try to work with it using the builds from the master branch. if you find a reliable way to reproduce it, then you'll be great to help me fix it (even if i can't reproduce it myself, i'll be able to provide you with test prs)."
1012263052,15915,glassez,2022-01-13T15:50:16Z,"well, i still managed to reproduce it. and it seems that we are faced with a problem not caused by recent changes, but surfaced thanks to them (a kind of mine with a delayed action). probably, it has not manifested itself so destructively before. exploring it..."
1012267503,15915,thalieht,2022-01-13T15:55:04Z,i just finished testing master for all the things i mention in [a link] and i can't reproduce any of them. neither with qt5 nor qt6.
1012358512,15915,glassez,2022-01-13T17:37:00Z,"well, there is still a problem with the current pr. and it contributes to the manifestation of another problem (although it exists in any case, because we have similar crash reports about v4.4). this is about this pr. this (and crash as well) is existing bug. exploring it..."
1016657189,15915,thalieht,2022-01-19T16:45:19Z,"renaming a folder in a torrent results in: creating a parent folder for that folder and that parent has the new name (repeatable). you didn't comment on it and it is still happening so i must assume you missed it. after the renaming, another torrent has to be selected and then back to the renamed one in order to be able to see what really happened in the contents tab."
1017582277,15915,glassez,2022-01-20T14:45:32Z,i'll look at it when i finish the core changes.
1024857248,15915,glassez,2022-01-29T07:35:31Z,should be fixed now. i checked it again and adjusted something. if you have no fundamental objections let's finish it. we'll have enough time ti test it detailed before v4.5 release.
1024946499,15915,thalieht,2022-01-29T16:53:10Z,"all paths in options are reset to default i.e. default save path is reset to /downloads temp path is reset to /temp, logs location is reset to whatever is the default, copy .torrent options are empty and i didn't have a theme to test that option but we can assume it's affected like everything else. going back to master they are all restored to their modified path. can't find any other problems."
1025072848,15915,Chocobo1,2022-01-30T05:18:40Z,"ok, i'll try to review it in the following days."
1025101502,15915,glassez,2022-01-30T09:12:00Z,"should be fixed now. i believe that storing paths in settings as strings is the best idea (and it lets to avoid implementing any upgrade logic) . there are two ways to do this: 1. use `settingvalue ` for them and perform conversion `path` -> `qstring` ""manually"" 2. add direct support of `path` to `settingsstorage`. i preferred the second option, given that the `path` is a fundamental class for qbittorrent."
1025165494,15915,Chocobo1,2022-01-30T15:19:52Z,ok. off topic. i often thought of this conversion action should have an official trait/interface that every class that supports it can implement it so that `settingsstorage` won't need to know the specific conversions of each classes...
1025166326,15915,glassez,2022-01-30T15:24:17Z,looks good at first glance...
1025367283,15915,Chocobo1,2022-01-31T04:24:29Z,"except i still haven't got a clear idea how to do it, still just an idea so far... can you pause pushing to this pr while i'm reviewing? for about 3 days."
1025380816,15915,glassez,2022-01-31T04:57:30Z,ok.
1029972134,15915,Chocobo1,2022-02-04T13:10:08Z,i think this pr is almost done and i would like to give priority to it: that means pause merging other prs until this one is finished to avoid conflicts.
1029975560,15915,glassez,2022-02-04T13:14:45Z,how should i provide next changes? as a separate fixup commit?
1029979943,15915,Chocobo1,2022-02-04T13:20:36Z,you can squash the current fixup commit and provide another one.
1030762024,15915,Chocobo1,2022-02-06T06:35:30Z,"ok, looks good. one last step, please squash the fixup commit and resolve the merge conflicts."
1030824469,15915,glassez,2022-02-06T12:38:12Z,done!
1030884340,15915,glassez,2022-02-06T18:08:40Z,"not to delay this pr... ever since i saw your great attachment to native paths, i've been wondering if we could make path completely native (at the application level, of course). i think the performance loss that this will entail can be regarded as acceptable, or not?"
1031073166,15915,Chocobo1,2022-02-07T04:53:50Z,"it is hard to say, maybe this can be improved later when we have more experience with it. however there are a few places that require uniform path, so not all of them can be native path."
1032164330,15915,glassez,2022-02-08T03:04:38Z,thanks to all the reviewers!
1033174853,15915,xavier2k6,2022-02-08T23:45:36Z,"there's an issue with this pr! just checked the ci windows build of this pr in portable mode/default profile & if i add a torrent, it doesn't show up in transfer list....after a few mins if i try to add the same torrent it says `torrent is already queued for processing` but still isn't visible. exit the program & no fastresume or torrent files are created either. re-open & try to add same torrent file again & it's like as if it was never added before/doesn't show again etc. i've gone through all windows ci builds in master branch from`#948` up to the build associated with this pr `#991` & that's when the issue arose. [a link]"
1033282686,15915,glassez,2022-02-09T02:35:15Z,confirmed with ci build but it works fine with my own build (qt6 based). most likely something wrong with qt5 compatibility. i'll check it out as soon as i get to qt5-based environment.
1033679212,15915,thalieht,2022-02-09T11:52:35Z,"yep qt5 only bug confirmed. i reported it in [a link] but it looks like i forgot to re-test with qt5. or it was fixed and then broken again, don't remember."
1033754123,15915,mzso,2022-02-09T13:20:28Z,does this touch on relative paths?
1033934667,15915,glassez,2022-02-09T16:14:39Z,#16411
257096319,5877,sledgehammer999,2016-10-29T15:01:00Z,i wonder if this is better suited as a dialog/window under the 'tools' menu item. /qbittorrent-frequent-contributors any input on the design?
257136570,5877,dzmat,2016-10-30T07:29:08Z,"i think separated dialog window may add more confusion, because connection related things suddenly become scattered at different places."
257186340,5877,sledgehammer999,2016-10-30T22:57:17Z,"fyi, i am in the middle of fixing up and merging #5342. i actually almost finished fixing the first commit of that pr. in any case, we might need to redo this pr. the other pr takes precedence because of its sheer size. it is very difficult to resolve merge conflicts on that pr."
257199085,5877,dzmat,2016-10-31T02:04:25Z,ok. i'll wait and rewrite my pr when you have done it. just notify all of us sitting and waiting here with our prs.
257357071,5877,Chocobo1,2016-10-31T17:15:59Z,"i would prefer this: add a button in settings and put the new controls in another dialog: [a link], [a link]. we could refactor to this later if the maintainer approves."
257926444,5877,dzmat,2016-11-02T16:53:05Z,rebase & rewrite
260222983,5877,sledgehammer999,2016-11-13T23:55:04Z,could you implement what shows in his mockups?
260320634,5877,dzmat,2016-11-14T12:15:55Z,"ok, i will try to do that. not sure that at webui i will be able do such refactoring. if not, i will call for a help. give me 3-5 days for refactoring."
260339719,5877,sledgehammer999,2016-11-14T13:54:20Z,"just so you know, for me it is acceptable to do only the gui. and for the web parts, you only need to expose the api (if any) and let someone else code the webui if you can't."
260703305,5877,dzmat,2016-11-15T17:10:33Z,"gui refactored as it is shown on mockups. i did'n touch webui, left there old interface justto give to an user any opportunity to deal with ban list."
266407999,5877,zeule,2016-12-12T11:43:02Z,"what if a user uses a rule file (which might contain thousands of ips)? all of them will appear in the `session::m_bannedips` and as such in the ""user banned ip list"" listbox?"
266420265,5877,dzmat,2016-12-12T12:31:41Z,"as i understood this, qbittorrent saves in settings file 2 things: 1. list of manually banned ip addresses (yes, it is placed directly in settings file); 2. the name of file containing third party ban list (which can be quite large). at every startup qbittorrent loads both lists separated. entries from the third party list are not stored in the list of manually banned ip addresses. btw we should use some acronym for that list, lombip possibly? ;)"
266461912,5877,dzmat,2016-12-12T15:35:02Z,now it look like that: ![a link]
266480451,5877,thalieht,2016-12-12T16:39:16Z,there are 2 lists as you said and the manually banned ips are in the same section as the 3rd party ips. this can be confusing and make people think it'll show the ips of the 3rd party list. maybe change the name of the button to `list of manually banned ip addresses`?
266482580,5877,zeule,2016-12-12T16:46:24Z,": thanks you, it is clear now."
266486269,5877,zeule,2016-12-12T16:59:06Z,"as to me, the button caption has to describe an action but not an object (obviously because activating it triggers an action), e.g. ""show/list manually banned addresses"" or ""manage/edit ..."", since a user may change those addresses. ""ip"" might be superfluous here, since the group name clarifies this already for all its child elements."
267059898,5877,dzmat,2016-12-14T15:15:30Z,"so, for button caption we have these variations supposed: [open|edit|manage] [list of] [manually] banned [ip] addresses. total is 32 variations. how we would made **the final decision**? would we roll a dice or draw lots? or summon more developers here? for example, sledgehummer has not said his opinion. or would you give me dictatorship rights to make final definitive definition? :grinning_face_with_smiling_eyes:"
267067294,5877,dzmat,2016-12-14T15:42:01Z,"renamed the button to the ""open the list of manually banned ip addresses"". i know than the word ""manually"" is not encountered later in the dialog. it is not bad, i think. because user already knows that this list is a ""manual"" list."
267109673,5877,zeule,2016-12-14T18:12:15Z,"you have freedom to choose any variant you like, as well as to argue with an author of a hypothetical future pr who would like to change it. i'm for a short caption and long hint. for instance, the caption ""edit manual list"" and the hint ""manage manually banned ip addresses""."
267822449,5877,zeule,2016-12-18T13:55:00Z,i believe nothing stops you now from correcting the file names (`options_banlist` → `optionsbanlist`) and squashing the commits. aside from that i have no more suggestions or comments.
267948863,5877,dzmat,2016-12-19T12:05:43Z,rebased & squashed in 1 commit.
273640002,5877,sledgehammer999,2017-01-18T23:54:46Z,"fyi, this stays in an open tab in my browser from now. hopefully tomorrow, i'll be able to review+merge it."
274269259,5877,sledgehammer999,2017-01-21T15:45:54Z,i have read until the commit named `leftover backtick fix` and i approve all those. so if you want you can `fixup` them.
275900203,5877,dzmat,2017-01-29T08:09:16Z,of course i'll squash and rebase as soon as all problems will be resolved and maintainer will be satisfied. earlier it is pointless.
277802686,5877,sledgehammer999,2017-02-06T20:25:53Z,i was wrong. there are 2 places where `m_bannedips` is getting modified. here is how to ensure that `m_bannedips` stays sorted. 1. during initialization in the constructor. so instead of [code block] do [code block] 2. it is modified in `session::banip(const qstring &ip)`. just do `bannedips.sort();` before assigning it to `m_bannedips`
277804042,5877,sledgehammer999,2017-02-06T20:31:04Z,"i believe all those are the required steps for merging. i don't think i'll find something else. so feel free to fixup. there is slight race-condition in current implementation. but i am willing to fix it myself after merge. but if you want to do it, i won't stop you. currently both `processbannedips();` and the ipfilter parser operate directly on the set libtorrent filter. so when clearing the filter and reparsing, there is a small time frame where all ips are allowed. i want to refactor those 2 functions so they operate on a `libtorrent::ip_filter` variable and populate. and after we have it populated we set it directly, without first clearing the old one."
278031089,5877,dzmat,2017-02-07T15:19:28Z,"rebased & squished. there are still some open questions: 1. it is unclear why manually banned ips are applied into ipfilter even when checkbox ""ipfiltering"" is cleared. such behavior is already present in code and i didn't touch it. but it definitely needs clarification. 2. race condition. i did not touch them also. 3. suddenly i discovered that qlistwidget and qstringlist sort items in different order. exactly it looks like that they treat symbol ':' in different ways. don't even know what to do here, i'm not so familiar with qt. so in the my widget and in the webgui display order is different."
278463592,5877,sledgehammer999,2017-02-08T21:14:21Z,ok. i'll handle the remaining issues myself after merge. i just hope i'll find time this weekend.
284270580,5877,sledgehammer999,2017-03-05T22:57:43Z,can you do a final rebase? we dropped qt4 support and it finds a conflict in base.pri. thank you.
284389975,5877,dzmat,2017-03-06T13:02:26Z,rebased.
284535838,5877,sledgehammer999,2017-03-06T21:19:11Z,can you give me an example of this so i can try it?
284547760,5877,sledgehammer999,2017-03-06T22:01:37Z,nevermind. i found out that qlistwidget sorts: [code block] while qstringlist::sort() [code block] i think those 2 components use different sorting criteria. and i don't see any way of controlling it via the api.
284592369,5877,sledgehammer999,2017-03-07T01:33:10Z,i have solved the 3 remaining issues with 3 commits in this branch: [a link] can you guys take a look and confirm? ps: apparently qlistview is hard to work with. i couldn't figure out how to tell it to use the sort proxy...
284861192,5877,sledgehammer999,2017-03-07T21:14:15Z,i any case i am merging this and applying my commits on top. if something is wrong we can fix it with new commits. thanks for this pr.
216655230,5214,sledgehammer999,2016-05-03T20:30:13Z,"unless i am mistaken you actually implement #465 in some way. however, under this light an environment variable isn't very desirable :p"
216657923,5214,zeule,2016-05-03T20:41:04Z,"hm... kind of... i just tired of qbt rechecking my files over and over again. as to me, the environment variable approach gives flexibility for developers. one can have separate configurations for different tests, check how qbt behaves with an empty configuration (by the way, it crashes with lc_collate=c when opening the options dialogue) in no time. do you suggest to add a command line switch to set this variable for the portable version?"
216658510,5214,zeule,2016-05-03T20:43:22Z,"and, of course, a code that will check that variable contents for an absolute path, which will be used as is but not appended."
216660724,5214,sledgehammer999,2016-05-03T20:51:38Z,"this shouldn't happen. clean installs should just work. if it isn't trouble for you. am i wrong or did the last merges greatly simplified the code for ""portable version"" implementation? in portable versions the config could reside in the same folder as the binary. so relative paths should work too."
216663396,5214,zeule,2016-05-03T21:01:28Z,configuration name is appended to the paths like `qdir::homepath()`.
216666351,5214,zeule,2016-05-03T21:13:14Z,"i'm going to pack utils::fs::qdesktopservices implementations into a class, add an override version with manually specified root path and instantiate one or another basing on the command line switch. what do you think?"
216681984,5214,zeule,2016-05-03T22:19:41Z,"/qbittorrent-frequent-contributors can someone do me a favor, please, and make extensive tests on windows and os x for the portable version?"
218277061,5214,zeule,2016-05-10T20:13:53Z,"pr updated. now it implements portable mode. needs testing. : support for command line switches has been added, but environment variables are supported too. i believe they are better for debugging and may be of use for users too. two settings are proposed: `--profile= ` allows to set configuration prefix. inside of it directories `cache`, `config`, `data`, `downloads` are created. if the switch is not supplied, default system dirs are used. option `--portable` is a shortcut for `--profile= /profile`. `--configuration= ` option allows to have different configuration inside of a configuration prefix. if `--profile` option is not empty, `settingstorage` serialises settings in `qsettings::iniformat` to make them portable between platforms."
218281524,5214,zeule,2016-05-10T20:30:27Z,there is a destructive change: usage help text does not contain the web ui port number from settings anymore because options parsing needs to be done before preferences initialisation.
218440139,5214,zeule,2016-05-11T12:07:06Z,this closes #4887 too
218445751,5214,zeule,2016-05-11T12:33:46Z,"/qbittorrent-frequent-contributors: this is more or less ready. with two exceptions (see below) `strace qbittorrent --profile /tmp/qbt_profile` does not show any app-specific file activity in ${home}. the first exception is `${home}/.config/qbittorrentrc`, but i guess it is used by kf5, and we can do nothing about it. the file keeps `kfiledialog` settings. the second exception is the `qinisettings` class. it is used in statistics and rss. and my question is: may i remove the `qinisettings` class? why is it needed? may i replace it with `utils::environment::specialfolders::applicationsettings()` calls? we can add an overloaded `applicationsettings()` for that cases to pass `qsettings::format`."
218517863,5214,glassez,2016-05-11T16:43:18Z,"less than you think. your biggest error here is that you changed the order of things in `main()`, without knowing how it actually works. application instance must be created before we parse command line since qapplication should parse and filter the parameters destined for it. otherwise you will get an exception if the user wants to specify such command line parameters. the second (minor) mistake is you cannot use any translations before application is initialized. i'm not going to dwell on other (less important) issues. first you need to fix this."
218518907,5214,zeule,2016-05-11T16:47:02Z,"can't understand you, sorry. could you explain it, please?"
218520250,5214,glassez,2016-05-11T16:51:50Z,"if you look carefully the code, it becomes clear that it is completely useless. that's why i refused to use it in `settingsstorage` class. iirc, yes. btw, the last time we use the `qsettings` class not for its intended purpose, and only for serialization of settings into the file. it's all the same to shoot with a bazooka on the wheel. isn't it time for us to think about using something more suitable? , what do you say?"
218523252,5214,glassez,2016-05-11T17:01:59Z,"for example, qapplication recognizes `-style="
218523774,5214,zeule,2016-05-11T17:03:52Z,"oh, i get it now. thanks! indeed, i forgot about tanslations and qt options completetly."
218524121,5214,zeule,2016-05-11T17:05:09Z,"i did look, did make the same conclusion and that is why i'm asking."
218527904,5214,glassez,2016-05-11T17:18:41Z,you should keep current order and try other solution. e.g. you may parse command line in application constructor and then use parsed params outside it via some application method (something like `application::commandlineargs()`).
218529017,5214,zeule,2016-05-11T17:22:36Z,"yes, thanks. it is obvious that parameters parsing has to be done in `application::application()`, because this is the onle place between `qapplication::qapplication()` and `preferences` initialisation."
218537732,5214,glassez,2016-05-11T17:53:14Z,what happens if the user set `--portable` and `--profile=some_path` together?
218538384,5214,zeule,2016-05-11T17:55:33Z,`application::application()` [a link] an exception which is shown to the user and the program aborts.
218541134,5214,glassez,2016-05-11T18:05:04Z,ok.
218541552,5214,glassez,2016-05-11T18:06:49Z,for some reason we need to know the original number of parameters. this can only be done before calling the qapplication constructor.
218563519,5214,zeule,2016-05-11T19:26:05Z,"actually, i don't understand this. if a user wants to display the dialogue with the usage text using specific style or stylesheet, why not?"
218622533,5214,zeule,2016-05-11T23:46:23Z,"pr updated: options parsing was moved into the `application` constructor, `qinisettings` class was removed."
218623739,5214,zeule,2016-05-11T23:53:56Z,and i would like to add that all the playing with characters in `qstring`s after working with `boost::filesystem::path` is like using c after c++.
218661278,5214,glassez,2016-05-12T05:06:13Z,ok.
218673406,5214,glassez,2016-05-12T06:43:48Z,", the user downloads the torrent to removable disk beside portable qbittorrent, and he continues to do this on another computer - it's real use case of portable app? if yes your implementation is incomplete since we store absolute save paths in resume data."
218676265,5214,glassez,2016-05-12T07:02:14Z,unfortunately it's incompatible with qstring and we would often convert strings to use it. we also can implement qstring/qdir based path class.
218684666,5214,zeule,2016-05-12T07:49:49Z,"the change would make sense only together with replacing the whole qt i/o, of course."
218684802,5214,zeule,2016-05-12T07:50:38Z,"do you mean libtorrent and its ""save_path"" attribute?"
218688111,5214,glassez,2016-05-12T08:07:20Z,both libtorrent save_path and qbittorrent qbt-savepath.
218690667,5214,zeule,2016-05-12T08:19:43Z,"would it be ok if i hook up into the save/load sequences and replace both attributes with a path, relative to the $home or profile dir?"
218691885,5214,zeule,2016-05-12T08:25:34Z,"oh, no! windows might have several filesystem roots! what to do then?"
218695405,5214,glassez,2016-05-12T08:41:55Z,"well, in that case, i prefer not to continue further on this topic. we need to carefully consider it. i have no solution yet..."
218697185,5214,glassez,2016-05-12T08:50:03Z,", you can abandon claims for portable mode here, complete everything else, and then you can start to think about it."
218698346,5214,zeule,2016-05-12T08:55:12Z,"i see it in the following way. on saving: ` ` if `profile_dir` drive letter is the same as save_path drive letter` ` make save_path relative to the `profile_dir`. on loading: if save_path is relative, make it absolute using `profile_dir`. `profile_dir` is `${home}` or the one specified via `--profile`/`${qbt_profile}`"
218698715,5214,zeule,2016-05-12T08:56:50Z,the alternative is to make path relative only if it is inside of `profile_dir`
218699153,5214,zeule,2016-05-12T08:58:38Z,"if we are one step from it, why dont't we make it work?"
218716346,5214,Chocobo1,2016-05-12T10:15:13Z,"yes. this usage is interesting but i think its optional not mandatory. imo, if an app can be moved to anywhere without losing its settings, it can be called a portable app. this doesn't imply/require the artifacts that the app produces is also portable. here's another scenario i can think of: qbt portable was in dir `c:\qbt` and seed torrents in `c:\seed` & `e:\`, now the user move portable dir to `d:\qbt` and relaunch, the user might expect the seeding continue to work. in this scenario, it might be best to use absolute path."
218724539,5214,glassez,2016-05-12T10:55:13Z,"it is a good idea. then we can just set `profile_dir` as working directory when the application is run, if `--portable` is set."
218729676,5214,zeule,2016-05-12T11:22:31Z,"but that rules out interesting cases with qbt on an external drive, where it is not convenient to download inside of the qbt directory. i incline towards the first option (relative path if on the same drive)."
218731344,5214,glassez,2016-05-12T11:31:54Z,but only if `--portable` parameter is set. but we could offer the user to make a choice when adding a torrent (in portable mode).
218739510,5214,glassez,2016-05-12T12:15:53Z,"when you're done most of the work here, check and fix coding style. the main mistakes that i noticed a cursory glance, is naming (namespace names must start with capital letter) and statement breaks (operators must placed not at the end of the line and at the beginning of the next one)."
218741490,5214,zeule,2016-05-12T12:25:43Z,why? what shortcomings do you see?
218742763,5214,glassez,2016-05-12T12:31:39Z,i just don't want qbittorrent was doing some extra work in the normal (non-portable) mode.
218749024,5214,zeule,2016-05-12T12:58:11Z,we can add two methods [code block] to the `profile` class (see the updated diffs). those in the `impl::defaultprofile` will do nothing.
218753424,5214,glassez,2016-05-12T13:16:20Z,they should do nothing even if we set `--profile` but not `--portable`.
218755066,5214,zeule,2016-05-12T13:22:15Z,disagree with you: current meanings of `--portable` and `--profile` are identical.
218760903,5214,glassez,2016-05-12T13:43:01Z,"really? they are identical in only one case. and the rest? when i want to use a different profile (e.g. for testing), it does not mean that i want to enable portable mode."
218767745,5214,zeule,2016-05-12T14:06:38Z,"yes, they both set profile directory. for testing you may use different configurations. i'd better add an option `--no-portable-fastresume`, because otherwise most of the users of portable mode would need to pass two options. while a developer could use the second command line argument/environment variable."
218768469,5214,zeule,2016-05-12T14:09:02Z,"or, we add `--portable-fastresume` and `--portable` implies `--profile=x` _and_ `--portable-fastresume`."
218772049,5214,glassez,2016-05-12T14:20:57Z,but only one set portable mode! what is all this? why you need to have a separate `--portable-fastresume`? why? they should pass only `--portable`. other (normal mode users) may pass `--profile= `. and that's all!
218773728,5214,zeule,2016-05-12T14:26:09Z,because portable mode user may want to keep the qbt profile not in the default location but somewhere else.
218775408,5214,glassez,2016-05-12T14:31:16Z,"ok. then you just should allow to set `--profile' together with`--portable`. but, imo, if you go on about all the desires of the user, nothing good happens."
218785841,5214,zeule,2016-05-12T15:04:10Z,"a few moments ago you've pointed out that profile directory and relative paths in the fastresume files are independent options. why don't we associate each with a command line parameter then? that's all. no more variations, no more desires. that would be logical, imo. and then we introduce the `--portable` switch to give reasonable defaults for portable configurations."
218797453,5214,glassez,2016-05-12T15:41:33Z,"and then we introduce lot of possible undefined behaviors! yes. but ""relative paths in the fastresume files"" is not separate option, it's just attribute of ""portable mode"" option."
218799090,5214,zeule,2016-05-12T15:46:34Z,"namely? i begin to suspect that the name `--portable` for the command line switch is wrong :) ""relative paths in the profile directory"" is the attribute of the portable mode as well."
219265144,5214,Chocobo1,2016-05-15T04:04:42Z,"compiled & tested, the command line switches works fine! some minor document issues: 1. in command line help, the options list should have sorted alphabetically. 2. `for example, to disable the splash screen: qbt_no_splash=1 qbittorrent`, the last `qbittorrent` should be replaced by `argv[0]`. 3. `bad command line: portable mode and explicit profile directory options are mutually exclusive`, the incompatibility of 2 options should have been mentioned under `--portable` or `--profile` point. 4. `bad command line: portable mode and explicit profile directory options are mutually exclusive`, here the `portable mode` & `explicit profile` are mentioned and so command line help should also mention it."
219299212,5214,glassez,2016-05-15T17:33:42Z,"i don't like this idea of portable mode. there are too many contradictions. or it is necessary to apply some restrictions to make it consistent (for example, allow to store portable torrents only in a single directory, specified explicitly or by default in the subdirectory of the profile, etc.)."
219299494,5214,glassez,2016-05-15T17:38:27Z,"frankly, the use applications of this type in portable mode is generally suspicious for me."
219301636,5214,Chocobo1,2016-05-15T18:19:43Z,"+1, thought about this. for example a folder called ""download"" located at the same folder as qbt.exe or in the profile folder is good and easy for users to follow."
219314423,5214,zeule,2016-05-15T22:22:03Z,"can not understand your concerns, but want to note that, imo, users with portable drivers most likely would prefer to keep the qbt in a subfolder, because they use their drives for, well... portable data and qbt may be just a tool, but not a _ding an sich_."
219315912,5214,sledgehammer999,2016-05-15T22:46:56Z,"i tried to follow the out-of-code comments and i hope i didn't miss something. 1. there shouldn't be 2 switches for setting the profile dir. only one. if the user chooses to override the profile path then he should specify the exact path(absolute or relative to current path). 2. an interesting question was ""what happens if user downloads something in computer a and moves to continue downloading in computer b""? and something about relative paths. maybe we should investigate what other clients do(if they have portable mode). saving as relative path should be done if the files are saved on the same media as the qbt binary. but this is difficult to detect on linux, right? i haven't looked at the code, so what is the current situation on the above items? have you come on a solution? or is this too hard to implement correctly? i wouldn't mind having the option to only set the profile dir without any other assurances."
219346251,5214,glassez,2016-05-16T04:26:53Z,"""to store portable torrents only in a single directory"" is main idea of my comment. the second thing is ""specified explicitly or by default in the subdirectory of the profile"" so i think it covers your case. also we should disable incomplete folder for portable torrents and probably apply some other restrictions."
219346729,5214,glassez,2016-05-16T04:32:09Z,+1 since portable mode is more complex task and it requires very serious consideration to do it correctly.
219417603,5214,zeule,2016-05-16T12:53:05Z,there is only one. on windows relative paths are written into the .fastresume files if the profile dir and the save path is on the same drive and always on the other platforms. why not require it to be inside of the profile dir?
219742574,5214,zeule,2016-05-17T14:51:30Z,pr update addressing the raised questions and comments. perhaps we should split it and merge the first five commits and think about the portable mode and fastresume later? i very much want to get configurations support for debugging purposes.
221287614,5214,zeule,2016-05-24T14:24:46Z,"pr updated: moved the `profile` class into the global namespace, implementation classes into namespace `private`. moved files to `base/` and `base/private/` respectively."
227243615,5214,zeule,2016-06-20T19:27:03Z,/qbittorrent-frequent-contributors: i really-really want this to be merged (at least partially). this would make debugging so much simpler! what can i do to make it happen?
227398758,5214,glassez,2016-06-21T10:16:27Z,"for me, there is no portable mode should be here. i'm really not sure it's implemented correctly now. it requires more thinking about so it's another task."
227459968,5214,zeule,2016-06-21T14:37:05Z,", thank you for the opinion, but this is not an answer to my question. let me remind the initial motivation: to make development easier it makes sense to load different list of torrents in the debugging mode than that of a regular run. attempts to implement a full-fledged portable mode did not only improved the initial implementation, but also raised requirements quite high. and the latter complicates any efforts to merge this code into the master branch. that is why my questions is: what can be done to merge at least the configurations support?"
227477246,5214,glassez,2016-06-21T15:29:14Z,"i don't understand what does not suit you in my answer... you say that ""portable mode"" prevents merging this request: so you just need to remove it from here and leave only ""configuration"" part."
260200902,5214,Owyn,2016-11-13T17:51:27Z,"so no support for file association? i mean when you associate .torrent file with qbittorrent - it won't use any command lines switches, would it?"
267768236,5214,zeule,2016-12-17T15:21:43Z,": would you accept this pr without the very last commit? or, better, with it, please :)"
269723495,5214,zeule,2016-12-30T02:23:12Z,ping?
273750717,5214,zeule,2017-01-19T11:23:01Z,: ping? don't you agree that profiles would make debugging so much simpler?
276239559,5214,zeule,2017-01-31T00:46:39Z,ping?
277808815,5214,zeule,2017-02-06T20:49:52Z,ping again?
278009784,5214,sledgehammer999,2017-02-07T14:08:41Z,can you rebase? there are merge conflicts.
278022392,5214,zeule,2017-02-07T14:52:51Z,rebased
281208553,5214,sledgehammer999,2017-02-20T23:55:50Z,"i am actively reviewing this. if you have time, rebase. i think the new rand() pr was the cause."
281209563,5214,zeule,2017-02-21T00:04:03Z,rebased.
284270676,5214,sledgehammer999,2017-03-05T22:59:00Z,please do a final rebase. the qt4 drop messed up 2 files.
285003113,5214,sledgehammer999,2017-03-08T10:20:43Z,any news?
285004469,5214,zeule,2017-03-08T10:26:40Z,"oh, missed the previous message, sorry. will rebase right away."
285009260,5214,zeule,2017-03-08T10:48:26Z,rebased
285029000,5214,zeule,2017-03-08T12:32:49Z,"corrected commit 11b93d6 (a few changes from commit fb79260, the next one) were mistakenly put into it (during a rebase, probably)."
285030166,5214,zeule,2017-03-08T12:38:57Z,and did it one more time.
288978192,5214,zeule,2017-03-24T09:49:36Z,: are there any news or problems?
289051552,5214,glassez,2017-03-24T15:15:23Z,"apparently, the main problem is the lack of free time. imo, this is the ""bottleneck"" of the project."
293126309,5214,sledgehammer999,2017-04-11T01:47:58Z,only the last commit remains. will be done tomorrow when i have a non-sleepy and clear mind. i expect to find minimal problems. so if in the meantime you want to address things from the 1st commit feel free to push changes to it.
293253612,5214,zeule,2017-04-11T13:02:32Z,shall i then add the same ifdef here?
293260538,5214,sledgehammer999,2017-04-11T13:22:13Z,if you do then it won't be cross-platform as you want. (linux files won't load on windows+macos and vice versa)
293264744,5214,zeule,2017-04-11T13:35:51Z,"i, frankly, do not remember my intentions regarding cross-platform profiles... but if it seems possible, why not? then we need to leave .conf extension, right?"
293278679,5214,sledgehammer999,2017-04-11T14:20:59Z,"i don't understand why you are so against having `.ini` extension in profile case. as for the use case, imo it makes sense for someone to be able to transfer profiles between pcs/operating systems. especially in the case of `--portable`."
293306948,5214,zeule,2017-04-11T15:49:01Z,"no, i'm for the same extension for settings files whether they are portable profile or in the $home/.config. imo, copying profiles between different oses is less frequent operation than copying them into each other (making a portable profile default or vise versa) within the same os."
293333240,5214,sledgehammer999,2017-04-11T17:14:26Z,"iirc, the default profile will continue to use the old ifdefs anyway. question is what we do about the new cases? i agree. but why not do portability across oses possible too? is it because the user can't copy those files into the default path in case of linux? (assuming he wants to make some profile his main profile). if that's the reason, then switch to idefs for this case too instead of hardcoding the extension."
293351739,5214,zeule,2017-04-11T18:12:28Z,"do you mean copying `qbittorrent.ini` into `qbittorrent.conf`, which is of course possible, because both are in the same format. but is this convenient? for a user in this situation it would be convenient, perhaps, if app takes whichever file it finds, .ini or .conf. but what to do if there are two? maybe indeed take this way and signal error if there are two configuration files in a profile?"
293375726,5214,sledgehammer999,2017-04-11T19:32:02Z,"let me rephrase: if we want seamless portability between oses we need to use the same file extension for all oses. i prefer `.ini` since this is what iniformat uses. the caveat of this is that the linux users cannot interchange between their default and custom profiles manually(making a custom profile default) by just dropping the files to the correct path. so we are left with 2 options: 1. go ahead and use `.ini` for non-default profiles and let the linux users rename their extensions manually when they wish to interchange manually profiles. 2. don't actually implement seamless oses portability and use ifdefs to ensure portability only between the same type of os. users can still rename the necessary files manually. i don't have any preference between those 2 options. so i leave the choice upon you. make the choice, do any other needed changes, push and comment so i can merge this."
293377325,5214,glassez,2017-04-11T19:38:24Z,"you guys are stalled in one place. if you want to make it portable, it must have the same extension regardless of platform. it remains only to choose an .ini or .conf (it does not matter, purely subjective question). why can't linux users use the same extension for default and custom profiles? let's use .ini everywhere! or let's use .conf. what's the real problem here?"
293380893,5214,sledgehammer999,2017-04-11T19:52:32Z,the problem comes from the current way(before this pr) of saving. linux uses `nativeformat` which uses the .conf extension while the windows+macos use `iniformat` which uses the .ini extension.
293381510,5214,zeule,2017-04-11T19:54:31Z,would suggest .conf everywhere and migration to json later.
293387581,5214,sledgehammer999,2017-04-11T20:17:39Z,i predict this will start going in circles and result in more delays and possibly new code to write. so it is better(for the time being) to write `private::customprofile::applicationsettings()` as: [code block] and we can see in the future if we migrate to something universal for all configs.
293406435,5214,zeule,2017-04-11T21:32:05Z,ok
293423413,5214,zeule,2017-04-11T22:53:40Z,"all the comments were addressed, i believe."
293427972,5214,sledgehammer999,2017-04-11T23:20:01Z,"i believe this is ready. thank you all for the code, reviews, suggestions etc."
293428815,5214,zeule,2017-04-11T23:24:57Z,"oh, yes! thanks to all of you! was never happier with a single merged pr before, despite i'm pretty sure that this one will require a lot of post-merge care :)"
233228922,5532,briankendall,2016-07-18T05:01:18Z,"i've replaced it with a single argument, --status=[started|paused] since this pull request adds some new arguments that specify a value in addition to the existing one (--webui-port), i factored out the logic for parsing them and made it a bit more flexible. these arguments can now be followed by an equal sign (=) or a space. this fixes an inconsistency in my earlier commit where --webui-port required an equal sign but the ones i added required a space. damn! i was really trying to follow all of the code styling rules, but i slipped up in that one place. hopefully i got it right this time."
233563224,5532,glassez,2016-07-19T08:21:22Z,you should squash all these commits into one (there are not so many changes to have multiple commits in the qbittorrent history). you can leave it as is now but the maintainer will ask you doing it before merging.
233772357,5532,briankendall,2016-07-19T21:30:21Z,done.
242787219,5532,briankendall,2016-08-26T16:43:43Z,i just cleaned up the code style a bit more (was using curly braces for one-line if statements) and added one more command line argument for downloading first and last pieces first.
250798955,5532,wiiaboo,2016-09-30T17:06:52Z,i've been using qbittorrent master with this patch for a few weeks with no issues. i can confirm it also works with 3.3.7. both on windows 10 64-bit. this is a very useful feature for use with scripts and other programs.
269677920,5532,briankendall,2016-12-29T19:10:29Z,"any chance of this being merged in soon? i've been maintaining my own builds of qbittorrent for myself and a few friends that has this feature compiled in, and would love it if i didn't have to do that anymore. it's been working great for me, my aforementioned friends, and ."
281978908,5532,MatrixView,2017-02-23T12:27:08Z,"please, please, please... merge this. it's been over 6 months and this solves many related requests. the patch is pretty much essential for automation/scripting users..."
282195432,5532,uncleungie,2017-02-24T03:38:39Z,please merge this! it's an extremely useful feature for scripting and automation. i can't use qbittorrent without it.
284884360,5532,sledgehammer999,2017-03-07T22:41:29Z,"i think this will conflict (source-wise) with #5214 which i currently am reviewing. i am waiting for the author to rebase. can you kindly watch it, and when i merge it, rebase this if needed and remind me to review it too?"
284942008,5532,briankendall,2017-03-08T04:14:03Z,"quite right, that will surely cause conflicts. will do."
293479428,5532,briankendall,2017-04-12T05:42:21Z,"now that #5214 is merged, i've rebased using latest master. (in doing so i cleaned up the formatting for the command line usage text again -- i just can't abide poorly formatted text! :winking_face_with_tongue:) let me know if things look good or if there's further changes to be made. i'm hoping we can finally get this merged soon!"
295795767,5532,briankendall,2017-04-20T16:11:17Z,resolved latest merge conflicts.
296170352,5532,glassez,2017-04-21T11:49:09Z,", you recently had to deal with handling command line parameters. i think you have something to say here."
296281210,5532,briankendall,2017-04-21T19:09:39Z,just updated my branch. changes include: - `status= ` is now `add-paused= ` - `path` is now `save-path` - combined `wrapoptiontext` and `wraptext` into one function - fixed inconsistent use of translatable strings - added directions for translators when using english words is necessary in the translation - added `tristatebooloption` class for implementing `add-paused` - added `skip-dialog` option as per 's suggestion
296346854,5532,glassez,2017-04-22T04:33:42Z,"i have one more (apparently, late) idea. to not pollute command line with many parameters we can have some serialized form of addtorrentparams (e.g. json) and pass only one parameter (e.g. `--add-torrent-params="" ""`)."
296350667,5532,briankendall,2017-04-22T06:03:09Z,"no, i think that's a bad idea. it makes specifying options for adding torrents much more difficult and obtuse, and completely breaks away from the conventions of the command line. it would frustrate and confuse users for seemingly no benefit. besides, there's nothing wrong with having lots of command line options. the whole point of them being there in the first place is that it gives you a convenient way to specify behavior from the command line, and you can use as many or as few as you want. with this pr, qbittorrent doesn't even have a lot of options in comparison to lots of other command line tools that are used constantly."
296350833,5532,Chocobo1,2017-04-22T06:06:29Z,"and i started to wonder, is qbittorrent a cmdline tool/daemon? gui program? web interface? or a chimera?"
296350995,5532,briankendall,2017-04-22T06:09:25Z,just updated again. changes: - updated `addnewtorrentdialog` so that it works with these command line options - changed the behavior of all the options other than `--skip-dialog` so that they have no effect on whether the new torrent dialog opens. - `--skip-dialog` is now a tri-state bool option
296354256,5532,MatrixView,2017-04-22T07:18:10Z,"hi guys, thanx for all the hard work! and even though i can't follow all your input, it seems you're really thinking this thing through. now, i don't want to be a party pooper, but..., can any of you tell me if these commandline options will also work if i don't specify a .torrent file, but a **.magnet file** (or a magnet-link)...? as a scripting/automation person i would mostly like to use it in something similar like this: **qbittorrent.exe ""d:\file.magnet"" --category=""documentary"" --save-path=""d:\docu"" --add-paused=false --skip-dialog** ...where the d:\file.magnet (a text file) contains the magnet link(s)."
296487951,5532,briankendall,2017-04-23T20:54:34Z,"updated again. fixed merge conflicts with master, and fixed the issue where specifying --first-and-last with a magnet link wouldn't work."
296488176,5532,briankendall,2017-04-23T20:58:21Z,"i don't think qbittorrent supports opening .magnet files like that. however, you can pass in the magnet link itself as part of the command line argument with those options, e.g.: qbittorrent.exe ""magnet:..."" --category=""documentary"" --save-path=""d:\docu"" --add-paused=false --skip-dialog"
296491673,5532,MatrixView,2017-04-23T21:56:47Z,"ok, thx brian! qbittorrent needs .magnet files (containing the magnet link) if you've setup watchfolder(s). but a direct magnet-link will be fine in most cases too... except for magnet-links that contain special-chars like quotes and redirects chars such as: >, <, |, & this would break the complete input to qbt due to the os interpreting it differently. so in that case a .magnet file would be better."
296495282,5532,briankendall,2017-04-23T23:01:00Z,i believe i've addressed everything from your review but it's still blocking merging. can you clear that up?
296721957,5532,briankendall,2017-04-24T16:07:27Z,just updated again to address the latest review. how're we doing now?
296746550,5532,briankendall,2017-04-24T17:03:58Z,it is done.
296751860,5532,briankendall,2017-04-24T17:14:31Z,"whoops. good catch, now fixed."
296806130,5532,briankendall,2017-04-24T20:02:16Z,"updated again because i forgot to uncomment some code in `addnewtorrentdialog`'s initializer that properly set up the ""create subfolder"" checkbox."
297104274,5532,briankendall,2017-04-25T17:24:58Z,"okay, just updated again. *hopefully* we're in a good state. changes: - changed `m_firstlastpiecepriority` back to `m_needstosetfirstlastpiecepriority` - restored `hasfirstlastpiecepriority()` back to how it was before but with one change: if there is no metadata, the value of `m_needstosetfirstlastpiecepriority` is returned - moved logic for calling `setsequentialdownload` and `setfirstlastpiecepriority` out of `session::createtorrenthandle` and into the constructor of `torrenthandle`, with a comment explaining why it's written the way it is - add comment explaining need to store `sequential` and `firstlastpiecepriority` in resume data when there is no metadata as near as i can tell, torrent resuming is working correctly again. sequential and first/last piece priority can be properly set from the command line, and is saved and restored for magnet links without metadata, magnet links with metadata, and regular torrents. the one slightly complicated bit i just added is the logic for calling `setsequentialdownload` and `setfirstlastpiecepriority` in the constructor of `torrenthandle`. i put a comment explaining why i wrote it that way that i tried to make as clear and as accurate as possible. but the way it's written now is equivalent logic to how it was before, and i believe it is correct."
297129750,5532,briankendall,2017-04-25T18:52:40Z,updated. changes: - reorganized code in `addnewtorrentdialog` slightly so that replacements are easier to follow - removed default value to `parent` argument in constructor of `addnewtorrentdialog` - removed defunct `haspreviewablefile` variable in `torrenthandle::setfirstlastpiecepriority()`
297236531,5532,briankendall,2017-04-26T04:44:34Z,updated to remove `m_needstosetfirstlastpiecepriority = false;` line in `torrenthandle::setfirstlastpiecepriority()`.
297263714,5532,zeule,2017-04-26T07:22:13Z,why?
297275793,5532,glassez,2017-04-26T07:51:40Z,", you apparently missed my comment about this. if we reach this line then torrent has its metadata and `m_needstosetfirstlastpiecepriority` is already false."
297277225,5532,zeule,2017-04-26T07:55:25Z,", can't understand how that can be true when we came from `handlemetadatareceivedalert()`."
297281533,5532,glassez,2017-04-26T08:07:17Z,"oops... my mistake. i was confused by the fact that we have it at every function call, and must do it only once, when metadata is loaded. that is, it is more logical to do it in handlemetadatareceivedalert."
297412621,5532,briankendall,2017-04-26T13:43:06Z,do you want me to make any other changes regarding `m_needstosetfirstlastpiecepriority = false;`? i think it's okay if we keep that line removed because as soon as a `torrenthandle` has metadata we never use the flag again.
297417731,5532,zeule,2017-04-26T14:00:41Z,", i want that change, in order to make `m_needstosetfirstlastpiecepriority` value correspond to the variable name and to make code intention clean at that place."
297418746,5532,briankendall,2017-04-26T14:04:17Z,"ok, done. i also rebased to fix another merge conflict."
297447124,5532,glassez,2017-04-26T15:27:02Z,", imo, there are no large changes in the core and we can not wait for approval, isn't it?"
297448407,5532,zeule,2017-04-26T15:30:15Z,he was around these days. let's wait until tomorrow?
297448952,5532,glassez,2017-04-26T15:31:38Z,ok.
297874290,5532,zeule,2017-04-28T00:21:56Z,"apparently, he is not around anymore. then we need an approval from ."
297943659,5532,zeule,2017-04-28T08:46:56Z,", could you review this pr, please?"
298175689,5532,briankendall,2017-04-29T15:27:50Z,rebased and made the changes you requested
298237125,5532,briankendall,2017-04-30T14:59:23Z,made the changes
298248199,5532,briankendall,2017-04-30T18:23:07Z,made the requested changes
298251479,5532,sledgehammer999,2017-04-30T19:25:17Z,thx for pr.
298251657,5532,briankendall,2017-04-30T19:29:17Z,hooray! :party_popper::thumbs_up: thanks everyone!
298252360,5532,MatrixView,2017-04-30T19:42:22Z,yeah! thanx to all coders! can't wait for the release/version!
298253013,5532,zeule,2017-04-30T19:54:11Z,"thank you, , thanks to all the reviewers!"
293658912,6627,glassez,2017-04-12T17:58:50Z,", , you are welcome. i gave a general description above. the changes are very large, so i propose to begin not with the view diffs, but with testing. i hope for your help since i do not use these features for personal reasons so i can miss something. i tried not to change the user-visible logic, with the exception of some places (where i thought it was wrong). so i want to get from you a report what is not working as it should (differs from the existing behavior). approvefeature even though you already approved it in #6505, but it affects the gui a bit, so i want you to look at that part. , , , although, as i understand it, you are not interested in rss, but look here too. at least you can notice any visible problems with the code."
293748994,6627,mgziminsky,2017-04-13T01:08:23Z,i'll try to test this out and review it this weekend
294007935,6627,sledgehammer999,2017-04-13T20:06:02Z,"even though you already approved it in #6505, but it affects the gui a bit, so i want you to look at that part. i already approved as you said. plus as we talked recently i don't really care about the rss subsystem. so you review and merge this without me being much involved. i see that you touch parts of session and the main gui. i'll look into them sometime tomorrow and confirm that i am ok with them."
294223396,6627,glassez,2017-04-14T19:49:44Z,", , , i responded to your comments and corrected code."
294336404,6627,zywo,2017-04-16T06:31:36Z,qbt crashes when removing a download rule (just after pressing ok) [a link]
294494662,6627,glassez,2017-04-17T14:22:32Z,", fixed now! thanks."
294511200,6627,glassez,2017-04-17T15:38:04Z,", , , all your comments are addressed (i hope i didn't forget something). rebased ot top of current master. waiting for your new comments... , you promised to check some part of this too."
294672873,6627,glassez,2017-04-18T04:25:06Z,"i don't understand what similarity you found in these classes... they do different things. the first loads the data from the network, the second saves the data to disk. the main asyncfilestorage goals: 1. storing the data asynchronously (e.g. in separate thread) 2. do not save outdated file data if updated is available (when updated file data is ready but the outdated one is still in queue we don't append new job, we replace the old one) and yes, i plan to use it globally later."
294725136,6627,glassez,2017-04-18T08:18:21Z,", i don't know whether it is your changes on the portable settings result or not, but i noticed that `specialfolderlocation(specialfolder::config)` is not the same folder where application settings are stored. what do you say?"
294725822,6627,glassez,2017-04-18T08:20:37Z,", are you able to test this pr too (since you are interested in rss, iirc)?"
294797821,6627,zeule,2017-04-18T11:36:41Z,"explain, please. don't understand what do you mean. specifically, what do you expect and what do you get from it?"
294820319,6627,glassez,2017-04-18T12:30:59Z,"i expect it is the folder where qbittorrent.ini are stored (i can't provide you exact path since i'm far from my computer) but it really is `config` subfolder under qbittorrent data folder (where we have bt_backup etc.). if you need exact path, i can provide it later."
294845382,6627,zeule,2017-04-18T13:32:57Z,"with 3.3.12 installation, `qbittorrent.ini` is located in `%userprofile%/appdata/roaming/qbittorrent`. `private::defaultprofile::configlocation()` on windows returns `private::defaultprofile::datalocation()` plus `/config/`, which must be wrong. additionally, windows sub-path ignores configuration name. see #6651, please."
294854374,6627,sledgehammer999,2017-04-18T14:02:58Z,"the main asyncfilestorage goals: first of all i didn't look at the usage of the class. just it's implementation. so it wasn't clear to me from where the data came from. i assumed you save something that you download. under this light i don't understand why you don't tell the downloadhandler to save to file. now i see that you use the new class to store json(?) objects. since i don't want to look at the whole rss subsystem, can you describe very shortly what is the workflow? (so i can get an idea)"
294880770,6627,glassez,2017-04-18T15:25:32Z,"when the rss feeds are updated, the autdownoloader starts to process the articles, applying to them the rules. because this is done in the main thread, we don't process them all at once, and use deferred processing while the application is idle. each time the rule matched some article we download its torrent, mark article as read and update rule matchdate. then we store file with rules data and file with affected feed data. (this is current behavior). since disk io is slow it's better to do it in non gui thread. the steps described above can be repeated frequently within a short period of time, so we can get updated data for some file not yet written. this is my first approach to optimize it."
294891697,6627,sledgehammer999,2017-04-18T16:00:32Z,this is my first approach to optimize it. ok. so you make asyncfilestorage run on its own thread to do the saving... just a thought for the **future**(i haven't seen the whole interaction so i might be talking rubbish here): it would be interesting to use asyncfilestorage to savefiles to disk in the `downloadhandler` class.(which takes an argument when to savetofile or keep in memory)
294904173,6627,glassez,2017-04-18T16:38:43Z,"it makes sense to use it everywhere we need non interactive file saving. i want to do this in the future, because there are some issues associated with non-interactive save data (like what to do in case of failure, etc.). we discussed this with here, but while this is only theoretical arguments and suggestions. this topic deserves special attention."
294906916,6627,glassez,2017-04-18T16:48:01Z,i want to simplify asyncdatastorage by removing jobs rewriting. i want optimize the rss classes to perform delayed data saving (like in settingsstorage). but i want to do it in separate pr to not delay this pr merging. there are some other jobs need to be done on top of it. ?
294908839,6627,sledgehammer999,2017-04-18T16:53:36Z,"the only think you didn't answer is if you need to put `q_disable_copy(session)` too. ps: your request is blocking merge. if you're done, approve so can merge. edit: +1"
294912692,6627,zeule,2017-04-18T17:06:43Z,"i don't understand yet what is planned to do with the `asyncfilestorage` class. right now it looks self-inconsistent: its interface gives some error-handling hint, but implementation does not provide this opportunity. and there are two little suggestions (i'll write them right away)."
294913325,6627,glassez,2017-04-18T17:08:52Z,i'll do it.
294954858,6627,sledgehammer999,2017-04-18T19:31:15Z,"one stupid question/reminder, because i don't intend to read the whole rss code. did you remember to cleanup the files written by `asyncfilestorage` when they're not needed anymore?"
294959241,6627,glassez,2017-04-18T19:49:14Z,"when user remove some feed it removes associated file. all other rss files are used permanently. if you mean lock file, it is deleted in destructor."
295132388,6627,glassez,2017-04-19T07:05:43Z,"it's not bug, it's a feature (at least it should be). the reason is when we select some article it immediately become read and it should be removed from unread list so we don't have time to read it actually. although now i see that i chose the wrong approach. why don't we mark articles as read after the user has selected a different article?"
295152606,6627,glassez,2017-04-19T08:06:17Z,", can you provide me some non-private feed urls for testing?"
295312240,6627,mgziminsky,2017-04-19T15:32:59Z,here are a couple feeds. [a link] [a link]
295367930,6627,glassez,2017-04-19T17:58:21Z,i don't understand what do you mean...
295369121,6627,glassez,2017-04-19T18:01:29Z,", i've updated the code. the issue with application crash when downloading torrent from rss should be fixed now. also i've changed ""read article"" behavior, as i suggested above."
295372391,6627,mgziminsky,2017-04-19T18:09:46Z,"if you disable download rules in the settings, then open the download rules dialog, there is a message at the top informing you that rules are disabled globally. if you resise the dialog, the section at the top with the message scales up as well, filling the dialog with empty space. i'll test again when i get off work tonight."
295380833,6627,glassez,2017-04-19T18:31:42Z,"ok. i realized what it was. but i'm not so familiar with gui design, so i can't fix it. i can't understand why it works differently here and in the main window."
295528460,6627,mgziminsky,2017-04-20T01:19:14Z,"to fix the ui issue, you just need to set the vertical size policy of hsplitter to expanding. one more question about the rules dialog though. did you disable the import/export buttons because you are planning to re-implement that feature? if not, i think it would be better to just remove them entirely. other than that, i'm not seeing any more crashes and things seem to be working."
295590502,6627,glassez,2017-04-20T05:55:19Z,ok. fixed now. i'll remove it before next release unless we have some other ideas about it.
295594947,6627,glassez,2017-04-20T06:17:34Z,i've pushed one more commit. please review it. the reason is we should add new articles in chronological order (i mean the adding process only - the article list is in reverse order as expected) to prevent wrong ignore behavior (when rule ignores more recent article).
295595719,6627,Matth7878,2017-04-20T06:21:17Z,not that i use import/export feature but i think a lot of people would want it back. besides isn't it bad to loose feature which are perceived as basic? once again i really don't care about this feature and i'm really glad (and grateful) to see rss being overhauled but it should be important to know why people are using it. imho it's to automatically download from rules or to start downloading​ from a webui.
295612306,6627,glassez,2017-04-20T07:39:58Z,"one more thing i want to fix here (or in the following pr) is ""paranoid"" data saving policy of rss classes (it was be in old code and i still leave it as is). as for imports/exports... previously, these functions were used to transfer the rules between instances of the qbittorrent (e.g. on different computer), because it is stored inside the other settings, and it was impossible to transfer them directly. now rules are stored in a separate file and we can just copy it. so import/export in the old sense is no longer needed. maybe this need for exchange of rules with the third-party apps..."
295783009,6627,glassez,2017-04-20T15:35:19Z,", shouldn't we mark all articles as read after autodownloader has it processed (regardless of whether matched any rule or not)? i think it's logical, it read them all!"
295793934,6627,mgziminsky,2017-04-20T16:06:22Z,"good catch on the article load order. as for marking them all read from the autodownloader, i think we should definitely not do that. when i set up rules, it's because there are specific entries i expect to show up in a feed. in those cases, it's desired for the rule to ""read"" the article on my behalf because i will know when they were there because they will show up in my torrent downloads. for the others, i still want to manually inspect what new entries are showing up in my feeds so that i can decide if i want to create new rules or not. along those lines, one feature i've been considering adding is ""ignore rules"" which would filter articles i know that i don't care about out of the feed. then you would have the ability to only ever see ""new types"" of articles."
295804514,6627,glassez,2017-04-20T16:35:01Z,"i think it's separate job (out of this pr), isn't it?"
295826068,6627,mgziminsky,2017-04-20T17:31:28Z,"yes, definitely a separate pr, i'm not asking you to add it to this one. once this is merged, i plan to continue where i left off with my currently open prs, so i'll probably add it myself."
296217796,6627,glassez,2017-04-21T15:10:21Z,", i've pushed one more commit (probably the last in this pr). please test it. if it's ok, i'll merge this pr."
296422541,6627,glassez,2017-04-23T06:19:29Z,", cmake build is broken now (after this pr was meged). please fix it."
296422637,6627,glassez,2017-04-23T06:22:02Z,", , , , , thank you for your cooperation."
296422936,6627,glassez,2017-04-23T06:30:41Z,", , apparently, i will oversee rss subsystem for a while until we get a handle on ""hot"" prs. please make revision of all rss prs in terms of their relevance, and give your comments about them."
215602789,5196,Chocobo1,2016-04-29T00:43:05Z,add a new commit: add settingsstoragehelper template
215613890,5196,zeule,2016-04-29T02:35:17Z,"~~could you change the last commit title, please, in accordance with the new class name?~~ thanks"
215614151,5196,zeule,2016-04-29T02:38:34Z,"can i vote for merging the last commit asap, please? :d"
215699841,5196,Chocobo1,2016-04-29T12:37:34Z,"pr updated. the template usage now is flexible, the default value can be set at instantiation or when calling `operator()`."
215717712,5196,Chocobo1,2016-04-29T13:47:44Z,pr updated. thanks everyone for the suggestions. :) hopefully we could settle on this template version.
215719551,5196,zeule,2016-04-29T13:51:14Z,"i'm sorry, but could you update it one more time and add the constructor with `std::string&&` argument, please?"
215722911,5196,Chocobo1,2016-04-29T13:57:11Z,you don't trust the compiler optimization for this case?
215727503,5196,glassez,2016-04-29T14:07:51Z,"stop, stop, stop! i have already brains boil from your pseudo-optimizations. as odd as it may seem, but the best option was using a qstring: minus: qstring stores data as utf-16 plus: qstring don't copy its data on read-only access so we don't need any additional transformation when working with the settingsstorage, no additional constructors, etc. are you still going to argue that minus is more significant than plus here?"
215728352,5196,zeule,2016-04-29T14:09:59Z,`std::string` bears the same advantages.
215729562,5196,glassez,2016-04-29T14:13:05Z,these are empty words in this context. not you propose to add additional constructors for `std::string&&`? how do you propose to handle `qvariantmap` with `std::string`?
215729954,5196,zeule,2016-04-29T14:14:11Z,"and, actually, the question is why do we index config keys using a utf-16 string? i.e. wouldn't it be better to replace `qvarianthash` inside of the `settingstorage` class with, say, `std::unordered_map ` or `qhash `?"
215730754,5196,zeule,2016-04-29T14:16:04Z,"yes, it was me. what's wrong with that proposition? as to the indexing, the `qstring::fromlatin1()` is super fast, see no problem here."
215733177,5196,zeule,2016-04-29T14:22:04Z,": well, i do for strings. but the same can be applied to the `defaultvalue` argument. a complex type might be used for it and in this case i don't trust the compiler."
215734455,5196,Chocobo1,2016-04-29T14:26:21Z,"now that said in [a link] i remembered this: [a link] then it should be [code block] to minimize copies and transforms, no?"
215736683,5196,zeule,2016-04-29T14:30:58Z,do you plan to copy the `storagevalue` objects?
215738372,5196,Chocobo1,2016-04-29T14:35:51Z,"why you lead to this way? minimize copies and transforms to `settingsstorage::loadvalue` & `settingsstorage::storevalue`, no?"
215738719,5196,glassez,2016-04-29T14:37:09Z,and what are you going to replace `qsettings`?
215739491,5196,glassez,2016-04-29T14:39:51Z,isn't it creates a new object and does not copy the data into it? isn't it converts the data to utf-16?
215739902,5196,zeule,2016-04-29T14:41:23Z,": do you think it is the question of speed? i think no, parameter names are short, and there is a mutex lock inside of the `storagesettings`, which kills any performance optimisations. but the memory footprint is always with you because most likely those `storagevalue` objects are long living ones (and even globals). : why should i? yes, but those objects are temporary ones."
215750121,5196,Chocobo1,2016-04-29T15:15:22Z,"but changes like that is out of the scope of this pr. imo, `storablevalue` should just follow the types used by `settingsstorage`, it's just a wrapper (whatever you call it) around it. you can open another pr to change `qstring` to `std::string` everywhere. ## i'm inclined to revert back to this, what do you think? [code block]"
215750910,5196,zeule,2016-04-29T15:17:11Z,"i've lost the battle, i'll go and drink a poison..."
215757507,5196,glassez,2016-04-29T15:28:52Z,"so, you're trying to save a few bytes at the cost of constant data conversion/copying and temporary objects creating/deleting. exactly! agree. i do not think that the widespread use of `std::string` in qt-based poroject will be useful. you once again wanted to go through the back door... if you don't like how something is implemented, report it, open issue or pr. but don't try to change it by proxy. it doesn't lead to anything good in most cases."
215793130,5196,Chocobo1,2016-04-29T16:25:21Z,pr updated.
215955025,5196,Chocobo1,2016-04-30T10:58:30Z,"pr updated: - switch to modeless dialog - don't close dialog after creating torrent, lessens the pain of creating a large number of torrents. - show progress bar all the time"
215968357,5196,zeule,2016-04-30T14:15:53Z,"a reviewing process is such an ""editing by a proxy"" (as you called it) to a great extent. i don't want to raise the discussion again, but isn't it natural that design flaws get uncovered by a future usage? the same is probably right in this case: miswording in the `sessionstorage` class was uncovered by the class, created by . the miswording is that the setting key is not a text string but a string literal, with the single operation only (comparison)."
215987985,5196,glassez,2016-04-30T19:11:12Z,"i just wanted to say that you should not try to solve such uncovered problems along the way. after all, neither you, nor current pr author, has a holistic view about how to do it."
217626258,5196,ngosang,2016-05-07T10:08:18Z,![a link]
217641042,5196,Chocobo1,2016-05-07T14:28:50Z,"thanks for testing! i have pushed a commit trying to fix it, can you test again?"
217642611,5196,ngosang,2016-05-07T14:57:33Z,not fixed.
217646216,5196,Chocobo1,2016-05-07T15:48:04Z,"can you drop the ""enlarge combobox to fix its contents"" commit and then try the increasing the vaule of `minimumcontentslength` property of qcombobox. try find out what is the lowest value that will work."
217711336,5196,Chocobo1,2016-05-08T11:51:14Z,thanks! i've changed the value as your suggestion.
217747511,5196,sledgehammer999,2016-05-08T21:33:42Z,"i made a random and quick look. the changes are substantial in terms of quantity. maybe tomorrow i'll review. out of curiosity what is the purpose of `storablevalue`? i'll understand when iread the source carefully, but i now i am very curious on its purpose."
217772759,5196,Chocobo1,2016-05-09T04:16:16Z,"in short, `storablevalue` is a small helper class wrapped around `settingsstorage`, it save us from typing the same boilerplate code again and again. in most cases, when we want to save/load a setting, we shouldn't need to access `settingsstorage` directly (it's too powerful for most cases and also too cumbersome to use), so there is a weaker `storablevalue` which simplifies the operations."
221784461,5196,glassez,2016-05-26T05:57:19Z,"my most recent efforts to optimize access to the settings led me to the idea that we need a class like your storablevalue, but in a somewhat different form: [code block] this allows to avoid real access to settingsstorage when reading. upd: template is fixed to have correct `operator=`."
221794871,5196,Chocobo1,2016-05-26T07:12:34Z,"looking from your code, that is a write-through cache. and seems your code is not compatible with `storablevalue`, but i'm sure you can add another template (maybe called `storablecache`?) for your need."
221806962,5196,glassez,2016-05-26T08:17:43Z,"well, why not? it can be used for the same purposes but it is more effective. it hasn't only one method (which is still logically incorrect, as i said earlier). i offer it not as addition but as a replacement. why are you opposed to it?"
221833797,5196,Chocobo1,2016-05-26T10:21:13Z,"i because i need a way to specify (bind) default value at runtime: [a link] if this obstacle is cleared, i no more oppose to the replacement."
221837555,5196,glassez,2016-05-26T10:41:35Z,"describe, why don't you do it in constructor?"
221850535,5196,Chocobo1,2016-05-26T11:53:46Z,i will if it's possible. iirc `qwidget::size()` returns an unrealistic value ~~when the widget is not showing on screen.~~ before `ui->setupui(this);` statement.
221851465,5196,glassez,2016-05-26T11:58:52Z,but you call size() before show() now.
221858484,5196,Chocobo1,2016-05-26T12:35:40Z,"oops, i mean `qwidget::size()` returns an unrealistic value before `ui->setupui(this);` statement. i got `qsize(100, 30)` before the statement and `qsize(592, 658)` after it."
221867140,5196,glassez,2016-05-26T13:15:30Z,then we really cannot assign default size in constructor. but this case can be called an exception. we can do this with checking (assuming we use my template form): [code block]
221915502,5196,Chocobo1,2016-05-26T16:01:28Z,"that defeats all the convenient it originally had. i've push a new commit, it utilizes template specialization. imo the code looks great and it handles your need, although it's a bit overkill !?"
221917870,5196,zeule,2016-05-26T16:09:46Z,"my 2 cents: why did you implement that as template specialisation? as to me, here we have a regular class hierarchy: base storable value, storable value with the default, storable value with function."
221920337,5196,Chocobo1,2016-05-26T16:18:32Z,i dunno. but isn't doing that will end up having 2 classes? 2 class (names/types) just because parameter types are different is.. maybe a bit too much? or it's just i don't know how to properly construct it :p
221921034,5196,zeule,2016-05-26T16:20:59Z,"a bonus: we might add another `storablevalue` which calls `settingsstorage::storevalue()` in its destructor, something like `shared_ptr` provides a clean function."
221923591,5196,glassez,2016-05-26T16:29:39Z,why we need it? we need store settings regularly.
221925008,5196,glassez,2016-05-26T16:35:10Z,"? so you've created this monster (i mean your template specializations), not to write occasionally two lines of code instead of one? a bit? we have different ideas about convenience."
221927658,5196,Chocobo1,2016-05-26T16:45:22Z,"that code in [a link] will appear everywhere if we want to store a widget size. its 2 lines of code now, but not when `storablevalue` is deployed in ui widget classes. i can't think it's wrong to bind a function at instantiation and only call it when you really need it. the only difference of the 2 specializations is that one binds to a value, the other one a function (but eval it later), simple!"
221929047,5196,glassez,2016-05-26T16:50:47Z,really? one is used to avoid repeated read via mutex locking. the second is used to avoid typing some characters.
221931486,5196,zeule,2016-05-26T17:00:20Z,i just want to remind that the original ~~problem~~ task was to avoid some typing.
221932562,5196,glassez,2016-05-26T17:04:23Z,ok. let's compare the following: old way: [code block] new way: [code block] my new way: [code block] the difference is small. want to count the characters?
221934036,5196,Chocobo1,2016-05-26T17:10:16Z,i really don't know why you think it's not appropriate... the current version we both get what we wanted. could you please list out the downsides?
221935725,5196,zeule,2016-05-26T17:16:59Z,"number 2 is the most readable, number 3 is the ugliest. number 1 is ok. the only problem of the number 2 is the repetition of the type in the template parameters list."
221937326,5196,glassez,2016-05-26T17:22:52Z,number 3 in common case (if it is not about the size of the widget): [code block] we may use it instead of 2 in such extra cases.
221938257,5196,glassez,2016-05-26T17:26:32Z,"it's really redundant. we can use: [code block] i apparently wrote it incorrectly. but the point, i think, is clear."
221939768,5196,zeule,2016-05-26T17:32:35Z,it does not look any better because the type of the second parameter can be easily deduced and thus it is a repetition still.
221940450,5196,glassez,2016-05-26T17:35:15Z,what's the second parameter in my example? [code block]
221943677,5196,zeule,2016-05-26T17:47:17Z,can't understand how do you want to get different class layouts for the cases with default value and default func. i would use true different second parameter and `is_callable` type trait.
221944860,5196,glassez,2016-05-26T17:51:41Z,"honestly, i never thought about it. as you can understand, i don't like it at all."
221951409,5196,Chocobo1,2016-05-26T18:16:13Z,"just curious, can you provide some example?"
222003501,5196,zeule,2016-05-26T21:42:42Z,"here is what i meant: [code block] but i forgot that you need to declare not only local variables, which can be auto typed, but class members too. sorry for the noise. to make that work you need a member with virtual function; the virtual call will be optimised out by the compiler, of course, but the class would become not light-weigh anyway."
222053726,5196,glassez,2016-05-27T03:47:31Z,anyway it's better to have two templates instead of your specializations to show its different behavior in client code: storablevalue and cachedstorablevalue.
222056583,5196,glassez,2016-05-27T04:17:33Z,and based on my comment above you can leave your previous template definition (with `operator()`). you need only to fix `operator=`.
222070721,5196,Chocobo1,2016-05-27T06:32:10Z,"i'll drop the specialization commit and i'll leave the `cachedstorablevalue` for you to add. if you mean the extra space should be removed, fixed now. pr updated."
222074055,5196,glassez,2016-05-27T06:56:38Z,ok.
222074067,5196,Chocobo1,2016-05-27T06:56:43Z,thanks for the full example! it's interesting.
222078149,5196,zeule,2016-05-27T07:22:36Z,you are always welcome.
222081278,5196,glassez,2016-05-27T07:41:07Z,"using this (and my) template around qbittorrent classes we get many of the identical instances in different compilation units, isn't it? so, can we optimize it having common preinstantiated classes for some usual types (int, qstring, etc.) using `extern template`?"
222085014,5196,zeule,2016-05-27T08:01:25Z,"of course one can put common instantiations somewhere, for example in `settingstorage.cpp`. what's the question? however, the template is so small, that the impact on compilation time should not be significant, right?"
222087768,5196,glassez,2016-05-27T08:16:35Z,"i'm not worried about compilation time. i thought about their size. but really, it's too small."
222088754,5196,Chocobo1,2016-05-27T08:21:26Z,i guess small enough for compiler to consider inline it.
222089093,5196,zeule,2016-05-27T08:23:17Z,duplicates are removed by linker.
222089663,5196,glassez,2016-05-27T08:25:58Z,then what's the point of `extern template`? why it was added in c++11? (it's always confused me)
222131425,5196,zeule,2016-05-27T12:15:08Z,"this is all about compilation time. a compiler can generate function names for a template in the same way as it does for any declaration, and expect them to be found by a linker. that's the idea. you may read some details [a link] and google for inlining functions across compile units and other link time optimisations (including code generation)."
287140641,5196,Chocobo1,2017-03-16T17:56:41Z,"do you mind review this pr, i think it's settled down after a longgg discussion."
301295237,5196,Chocobo1,2017-05-14T07:07:09Z,all comments are addressed.
303611391,5196,Chocobo1,2017-05-24T03:59:49Z,"conflict resolved, please re-approve this, i'm ready to merge it."
303672415,5196,Chocobo1,2017-05-24T09:40:25Z,thanks everyone!
222359122,5287,masca90020,2016-05-29T12:54:21Z,"it can also have ( if it has already, then disregard this message ) the function to check the name for proper/repack and only re-download the same episode number in that situation ? if proper or repack aren't present, then ignore any releases with the same episode number. thx very much for this hard work."
223003304,5287,ngosang,2016-06-01T14:07:30Z,this pr will be reviewed but it can take time. please be patient.
223237323,5287,elFarto,2016-06-02T09:10:33Z,"i've added in support for repack/proper. the implementation isn't ideal as the rule only gets to see one article at a time, so if both the original and a repack/proper article both exist, both will be downloaded. this isn't too bad, as there will be cases where this happens anyway."
223350047,5287,masca90020,2016-06-02T16:42:49Z,"thanks very much for this, your work is highly appreciated."
225073028,5287,mgziminsky,2016-06-10T01:33:57Z,"when this gets merged, i will also need to update pr #5195 to import this setting from utorrent"
226734819,5287,DrKittens,2016-06-17T10:22:29Z,"couldnt you actually store the matched episodes to a physical file for persistancy, this would allow the user to just remove/modify matched entries there as needed."
226736113,5287,elFarto,2016-06-17T10:29:31Z,"the matched episodes are stored with the filter, so they're persisted in the settings file, where ever that is. there does need to be a ui for removing episodes, i'm not just sure where that should live or should look like at the moment."
255299124,5287,briankendall,2016-10-21T05:47:38Z,"i'm going to give this feature a try. can you explain what the ""episode filter"" field is for? quickly glancing through your commits it doesn't seem to do anything when ""use smart episode filter"" is checked, but i just wanted to double check. also, when i turn on ""use smart episode filter"" for an rss downloader rule, any items listed in the ""matching rss articles"" list disappear. is this expected? it makes me thing that my rule is no longer going to match anything."
255307647,5287,elFarto,2016-10-21T06:51:38Z,"the episode filter is existing functionality within qbittorrent not something i added, but it is used to filter which seasons and/or episode you wish to download. it should work with the smart filter, but it's been a while since i looked at the code. if there is nothing in the matching articles list, then it won't download anything. the smart filter uses the _filter_ name as the show name to match, so ensure that's correct. if it still doesn't show up, try removing everything from the must contain field (that should really only contain the format/resolution you want to download)."
255411855,5287,briankendall,2016-10-21T15:41:48Z,"okay, i see why this isn't working for me. the regex you're using to match the show name and episode number is too specific, and doesn't allow any customization to better match whichever rss feed it's being applied to. for example, my rss feed contains listings like this: [code block] since the regex is looking for a something like ""show.title.s01e01"" complete with the periods, in that specific order, the first capture group ends up matching ""show title (2016) - s01e01 [ 2016 ] [ mkv | h.264 | hdtv | 720p | scene ] [ uploader: some person ] [ show.title.2016."" so that string is essentially what it thinks the show title should be. obviously that doesn't work for me! i think for this to work properly, i suggest: 1. this shouldn't use the filter / rule name as the search parameter. in keeping with general ui conventions, the filter name is supposed to be used for the user's own organization of different shows and should not have any effect on the filter itself. 2. it should make use the ""must contain"", ""must not contain"", and ""episode filter"" fields in the same way that a regular filter would. i don't really see any reason not to, and i foresee it being confusing to users if it doesn't. it was already confusing for me! 3. for the ""smart episode filter"" feature, it should just try to extract the episode number from where it can in the article's title. no need to try and discover the show name. just leave that up to the user as they define it in the ""must contain"" field, just like they do for regular filters. each filter keeps track of its own downloaded episodes so that should work fine. 4. expand the regex to include shows that don't use the s##e## format. for example, some shows use the airdate as the episode identifier, commonly in the form yyyy.mm.dd. 5. you've already mentioned the need for this, but add in a button to clear the list of downloaded episodes. not as essential, but would certainly be convenient. i recommend it becoming enabled only when the ""smart episode filter"" checkbox is checked, and when clicked it presents an ""are you sure? yes / no"" dialog box to make sure the user doesn't clear their downloaded episodes by accident. given this is a feature i'd really like to have in qbittorrent (as my rss downloader rules constantly download duplicate episodes) i'd be happy to contribute and make these changes. however i'm not sure if there's a good way to contribute to someone else's pull request, assuming you'd even be open to that."
268508363,5287,elFarto,2016-12-21T12:11:35Z,"thanks for your comment, and i apologise for taking so long to reply. you're absolutely correct, i built the smart filter based on my own requirements, and didn't consider what other people would need. i've done some work to the patch, and i think this version is much more flexible. it also has the ability to clear the downloaded episode list (right click on the rule). the only thing left really, is to upgrade the old episode filter to support other episode number formats (1x01 and yyyy.mm.dd), but that's separate from the the smart filter. i think i need to implement this in the web ui aswell, but i haven't looked into that yet."
275662118,5287,Bert02,2017-01-27T13:12:21Z,is this in the stable release or do i require a different release? if its in the stable how do i go about using it? i couldn't find much information about it
275681522,5287,thalieht,2017-01-27T14:46:35Z,"it's suggested code, not merged yet, you can't find it anywhere for now."
277433315,5287,elFarto,2017-02-04T10:10:26Z,i've updated the patch so that it applies cleaning again.
277711063,5287,sledgehammer999,2017-02-06T15:10:31Z,"do you know what `git rebase -i` does and what `fixup` means in that context? if yes, then please fixup any commits that fix previous commits of yours. (and rename commit message if required). it will make it cleaner for me to review. i want to start reviewing this too, since i do a lot of rss reviewing of 's commits already. do you have any comments for this pr?"
277798784,5287,magao,2017-02-06T20:11:12Z,"i've never really understood what is desired from a ""smart"" rss filter. i personally manage all my torrents manually - i use the filters to add them paused, then i go through, select the ones i want and manually change my episode filter. i figure it's most likely used by people who want torrents to auto-download without any user intervention. has never been an option for me since i've always had limited data caps ... i'd offer to review from a coding pov, but as you've seen in my prs i'm still a bit rusty with c++ (and still working out this whole qt thing ;)"
277805605,5287,sledgehammer999,2017-02-06T20:37:18Z,"i understand. don't worry. do what you can. it isn't necessary to review this ""again"". a lot of core devs have already done it. so i'll go through it just to make sure it is mergable/working/etc."
277812146,5287,elFarto,2017-02-06T21:02:02Z,"i've tidied up the commits (i've been avoiding it as i'm not that familiar with git). the last commit is a bit unrelated, but i ended up needing it while testing, so seems silly to just throw it away."
277812960,5287,XhmikosR,2017-02-06T21:04:59Z,"i've been following this pr for a long time since this is the only feature i'm missing to switch to qbitorrent. will this pr work properly with proper repack and so on releases? also i'd like to thank you for this patch. this is what open source is about :) on feb 6, 2017 23:02, ""stephen dawkins"" wrote:"
277816731,5287,elFarto,2017-02-06T21:19:23Z,"currently, repack and proper releases are always downloaded, regardless if the episode has been downloaded before. i'm not sure if we want that, or if we want to limit it some how, but it's something that can be tweaked later on."
277817434,5287,XhmikosR,2017-02-06T21:21:57Z,"i believe that's the right solution so it covers my needs at least. thanks ! on feb 6, 2017 23:19, ""stephen dawkins"" wrote:"
277902961,5287,briankendall,2017-02-07T05:06:59Z,"this is correct. the specific problem this tries to solve is for rss feeds that may list multiple versions of the same episode of a show. qbittorrent already has some options to try and work around that (for example, the option for waiting a certain number of days before downloading the next match) but it's quite prone to error, as sometimes feeds don't list episodes at predictable times, and occasionally a listing will be for a bad torrent that will later be replaced by a good one labeled as ""repack"" or ""proper""."
277904000,5287,briankendall,2017-02-07T05:15:54Z,"this update to the feature looks good. i'm going to test it out again and report back! just from looking at the code, there's two very minor things i think would be good chances to make: 1. change the `qregexp` instance that's used to find the episode number to be case insensitive. i.e. change line 157 of `rssdownloadrule.cpp` to: `qregexp f(episoderegex, qt::caseinsensitive);` edit: making it case insensitive would also require changing `computeepisodename()` to be case insensitive as well. i recommend adding something like `matchedepisode = matchedepisode.tolower();` to the top of the function and then changing all of the conditionals to use lowercase letters, so the first if statement becomes `if (matchedepisode.startswith('s'))` and `qregexp r(""s(\\d+)e(\\d+)"");` becomes `qregexp r(""s(\\d+)e(\\d+)"");`. 2. consider changing the regex itself to allow the episode number group to be at either the beginning or end of the string. right now it has to be bordered by a non-alphanumeric character and there's always that small chance that someone will have an rss feed that begins or ends with the episode number. so specifically i'm recommending replacing line 43 of `rssdownloadrule.cpp` to: const qstring episoderegex = ""(?:^|[^a-za-z0-9])((?:s\\d{1,}(?:e\\d{1,})+)|(?:\\d{1,}x\\d{1,})|(?:\\d{4}\\.\\d{2}\\.\\d{2}))(?:[^a-za-z0-9]|$)""; ...which i think accomplishes what i'm suggesting. like i said, these are quite minor, and i think the feature will work fine without them. i just always am trying to look out for those few edge cases that'll snag a small minority of users. :winking_face:"
278013773,5287,sledgehammer999,2017-02-07T14:22:55Z,i haven't concluded my review. you can go ahead and implement other people's suggestions in the meantime.
278459174,5287,sledgehammer999,2017-02-08T20:57:11Z,"a bit offtopic: when other reviews stop coming in, feel free to squash/fixup commits into their respective ones. and when i find time i'll do the final review+merge. (i keep this open in a tab)"
284041933,5287,elFarto,2017-03-03T19:05:55Z,"rebased to master, and it appears to have passed all the checks this time, not sure why it failed last time."
292577298,5287,masca90020,2017-04-07T16:00:58Z,"hi guys, being the one that started this request, i feel i should ask if this is ever gonna see the light of day. almost a year now. :) ty again for all your hard work."
292583962,5287,briankendall,2017-04-07T16:26:51Z,"there's a big backlog of pull requests now. i've got one from last summer that's still unmerged, and it's waiting on another pull request so i can rebase it before it's ready to be merged."
297812327,5287,elFarto,2017-04-27T19:16:21Z,"rebased to master, hopefully nothing broke due to the large rss refactoring that's gone on."
302857730,5287,elFarto,2017-05-20T07:48:01Z,new version of the patch. i've removed the mark all unread feature as i'm not sure i fully understand how that should work.
303942134,5287,elFarto,2017-05-25T07:19:54Z,"new version of the patch. not sure about that suggested change to remove the duplicate call to computeepisodename, i've left a comment on it, but for some reason it's not showing up on this page, only the view changes page."
305967355,5287,elFarto,2017-06-03T10:47:44Z,new version with the reworked last match code. also rebased to master.
316559281,5287,YEGrolo,2017-07-20T00:15:58Z,"did this make the new 3.3.14 build, i don't see any differences"
318839044,5287,glassez,2017-07-29T15:41:19Z,", , what do we do with this?"
318843758,5287,Chocobo1,2017-07-29T16:56:18Z,"i have no tendency for it. but seems many users are expecting it. if you guys approve it, i've no problem with it."
318844623,5287,glassez,2017-07-29T17:09:00Z,"+1 i still don't like how this is implemented in some places, but i don't have time now to deal with it (and i do not want do it since i too spent a lot of time on this not interesting to me personally feature - i mean the rss as a whole). so we lack only review..."
318909286,5287,zeule,2017-07-30T15:29:17Z,"my concerns are explained somewhere above: the hard-coded set of regular expressions is suitable for a local patch, but,imo, is not a good choice for all when this set of rules is non-extensible and opaque."
318948990,5287,LordNyriox,2017-07-31T01:59:32Z,", : that design bothers me as well. the way i see it, those regex codes could be the ""default"" for the smart filter feature, but there should be a `smart filter options` menu to allow users to change the regex used. i do not know how this feature currently looks in the gui (no one has posted any screenshots)—but the way i imagine it, would be a checkbox in rss reading ""use smart episode filters"", and beside that an `edit filters` button. clicking the button would open a window showing a list of the filters, with the columns: ""enabled"" (clickable checkbox), ""name"" (display name for the filter), ""regex"" (the regex used for the filter), and ""finds"" (what the given regex will output). every column (except ""finds"") would be user-editable for each entry. ideally, there should also be dialog buttons for ""adding"" an entry and ""reverting"" to default filters somewhere in this window. well, that is my two pennies on the subject. ;/"
319025523,5287,elFarto,2017-07-31T10:08:05Z,"i can understand some hesitance about the hard coded rules, however it does seem like you're letting perfection stand in the way of progress. yes hard coded rules are bad, but they should cover the common cases. if they don't cover the user's case, then they're no worse off that they are now. the formats that it does accept are documented in the tooltip, so i wouldn't call them opaque. also the demand for configurable regex's for episode matching is unknown, and cannot be known until this feature is available to users. making the regex's configurable is no easy task, given that the actual numbers much be extracted an logic performed on them. i always considered this a first version and to improve it would require feedback from regular users given the sheer variety of rss feeds."
319088077,5287,briankendall,2017-07-31T14:42:49Z,"as someone who is using this feature, i can say that i don't need an option for specifying custom regex filters. this feature serves a very specific purpose -- making sure you don't download tv episodes that have been downloaded already -- so there's only a couple of patterns that i and most other people would ever need matched. we had a discussion about what they are earlier in this pr's comments. having the ability to specify custom ones would be nice in some regards, but it's also very much a power user feature and easily prone to error. personally i'd rather have the right set of episode filters built in and not have to worry about writing my own, because without having some complicated ui that lets me test my new regex filter based off of many existing episode titles in order to make sure it worked exactly as intended, i'd be very concerned that i somehow messed up the regex and that the smart episode filter isn't going to work. i've had issues like that specifying regexs in other software. basically, i like the feature the way it is now. it's simple and works as intended."
319845746,5287,YEGrolo,2017-08-03T01:52:16Z,"i've been using this feature in utorrent for like 10 years, and never once have i though ""hmm, it would be great if i could edit the regex"" ... one note that i don't know if it has already been dealt with, but utorrent allows a single ""repack"" or ""proper"" keyword to bypass the filter, this way it can still auto-download fixed episodes as needed. for example, show.s03e04.720p.hdtv.x264-tvgrp downloads, a few hours later show.s03e04.720p.hdtv.x264.proper-grp2 is released, even though s03e04 has been downloaded, this bypasses the filter and allows the ""proper"" to be auto downloaded as well."
319871244,5287,briankendall,2017-08-03T05:25:32Z,i believe this pr already has the feature where it downloads any torrent that has repack or proper in the title.
337039577,5287,cosalich,2017-10-16T20:55:29Z,a little confused as to why this is still merge blocked when it seems to be functioning just as intended?
340284401,5287,elFarto,2017-10-29T18:43:20Z,"the one issue with adding a ui, is that the regex for the match also contain the matching for the season/episode number/date, which is used to mark that the episode has been downloaded. this complexity would need to be reflected in the interface. also, would you want this to be a per-filter setting or a global setting?"
346688352,5287,uncleungie,2017-11-23T19:41:38Z,i've been using this feature for months and it has worked flawlessly. customizing regex filters is not of interest to me. i hope this pull request gets merged soon!
352966692,5287,YEGrolo,2017-12-20T05:12:52Z,any hope of this ever happening? i really dont want to keep using ut just for this ...
360987801,5287,elFarto,2018-01-27T14:20:17Z,finally got around to adding configurable filters.
361009242,5287,elFarto,2018-01-27T19:34:12Z,"1. it was implemented globally for a few reasons, the first being it was the easiest, the second being that it is likely that if a person needs a special format for one rule, they'll probably want it for multiple rules so this allows it to be reused. i did ask a few comments ago whether or not this should be global or per-rule (since i don't have a use case for this feature), but i didn't receive an answer. 2. are we talking about a description on *this* page, or a description in the commit, or a description on the new regex editing feature?"
361055220,5287,glassez,2018-01-28T11:18:34Z,"yes. what is ""smart filter"" feature, what is it for, example use cases etc."
361088644,5287,elFarto,2018-01-28T19:27:53Z,"the smart episode filter keeps track of which episodes a rule matches, and prevents matching the same episode twice. this allows the user to reduce their bandwidth use by preventing duplicate downloads. this feature does allow for duplicates if a repack or proper version of the episode is matched, which prevents the user from missing fixed versions of episodes. the user would want to use such a feature as many times an rss feed will contain multiple releases of an episode (at broadcast time, dvd/bluray release, etc...), and managing those is a hassle."
361180471,5287,glassez,2018-01-29T09:01:59Z,", i'm more interested not in what it does but how it does it. i'll try ask a few probing questions (see comments in code)."
361501782,5287,glassez,2018-01-30T07:36:28Z,can't the same episode use different naming scheme? in this case it can be downloaded multiple times.
361512663,5287,elFarto,2018-01-30T08:29:41Z,"yes, but in practice it rarely happens. there's really only two major formats used for season/episode information s01e01 and 1x1. i've never seen them in the reverse order. in addition, rss feeds tend to be constant in formats they use."
361697233,5287,glassez,2018-01-30T18:57:04Z,", don't forget consider [a link] and fix your coding style accordingly."
362921642,5287,glassez,2018-02-04T16:56:13Z,"okay, i approve this pr as it is now, then i will correct myself its remaining deficiencies of the coding style etc. (so it will be easier for everyone). , please do a brief review of this pr. if you have no blocking comments, i intend to merge it soon."
366201944,5287,glassez,2018-02-16T10:43:58Z,thanks to the author and all reviewers.
736183697,13885,ghost,2020-12-01T02:54:37Z,"""add options to disable dht, pex, lsd per torrent"" in private torrents, these are not allowed. so shouldn't these options be conditionally displayed?"
736337498,13885,thalieht,2020-12-01T09:21:07Z,"right, i totally forgot about them. i'll do it as soon as i hear if a million loops in initdialog() is an acceptable way to do things. should i hide or just disable the checkboxes?"
736776646,13885,thalieht,2020-12-01T19:44:56Z,"not everything from the reviews is in the fixup commit, mostly the trivial things are already merged in previous commits. done, i chose to disable them for now."
736796969,13885,FranciscoPombal,2020-12-01T20:23:04Z,"apart from the other points raised in the review, it's looking good. tested for a bit with a few torrents and seems to work as expected. two minor nitpicks: - button spacing/frame problem found on windows (with both qt 5.15.1 and 5.15.2, only occurs in this particular dialog): ![a link] - the file health issues, which made git unhappy when applying the patch set with `git am` :) --- thinking out loud, not in the scope of this pr: i wonder if it would be beneficial to put more controls behind such a dialog. `download in sequential order` and `download first and last pieces first` seem like good candidates for this, but why stop there? doing the same for tag/category selection would enable possibly fleshing out a proper tag/category editor in the future. the main advantage i see with this is a more clear separation of concerns and a better torrent context menu ux: the top level buttons can be dedicated to _actions_ (force recheck, resume, preview, ...), while options that change torrent attributes can be be hidden away behind this richer ""torrent options"" dialog. the context menu would also look less cluttered and functional. the potential downside is ""too much nesting"", and hiding too many frequently used options behind too many clicks. all in moderation :)"
736818244,13885,ArcticGems,2020-12-01T21:02:30Z,"maybe my suggestion is to much, but could you display a text similar this above/below (or on hoover): private torrent: these options are disabled."
736827275,13885,thalieht,2020-12-01T21:19:45Z,"strange, this happens only when opened from the status bar (not from tray). so is this because i'm passing `statusbar` to the dialog as parent? i have no idea how to fix this... i am neutral to all these i added tooltip to the checkboxes when they are disabled ""selected torrents are private""."
736847072,13885,thalieht,2020-12-01T21:59:55Z,never mind... previously `parentwidget()` was passed but i blindly passed `this`. fixed now.
737099035,13885,glassez,2020-12-02T09:14:37Z,":thumbs_up: this is why we need to distribute actions between the menu and the dialog based on the frequency of use. as for all those people who complain about ""too many clicks"" for rarely used actions, i don't really respect them."
737925608,13885,glassez,2020-12-03T12:35:20Z,"in fact, you can do only one loop. and i think the code will become even more readable."
738210515,13885,thalieht,2020-12-03T18:41:00Z,i hope so.
738214645,13885,glassez,2020-12-03T18:48:56Z,", would it be difficult for you to extract (global) speed limit dialog in a separate pr? i think there shouldn't be any problems, so we can merge it quickly."
738283687,13885,thalieht,2020-12-03T20:18:48Z,i would rather not.
739126893,13885,glassez,2020-12-05T05:01:49Z,"okay, let's skip the details and discuss it in general. there's something i don't like about it. this applies to processing multiple torrents at once. when torrents have different values for the same property, only those properties represented by checkboxes explicitly reflect this fact. but the worst part is that other properties are bound to be overwritten, even if the user had no intention of touching any of them. in my opinion, this is unacceptable behavior that can cause a lot of issues here. so my proposals are: 1. each control should represent that torrents have different values of appropriate property 2. untouched property should leave unchanged maybe my position is too strict? let's discuss this."
739150616,13885,thalieht,2020-12-05T09:13:49Z,"damn. i completely agree. how should that be? another radio button for share limits and... i can't think of anything for the speed limits. another things that's been bugging me is that, if i'm not mistaken, resume data will be saved x times the settings on accept? i was thinking about emitting a signal on `accept()`, then save resume data in session and remove `saveresumedata()` from the corresponding setters in session? would that last part be acceptable? in master, changing `super seeding mode` on paused torrents isn't saved, so would it be weird some setters save resumes and some don't?"
739153138,13885,glassez,2020-12-05T09:41:18Z,"i didn't think about it in detail. moreover, ui is not my strong point. maybe just some sort of label or icon? as for this, it is not too difficult to track whether a property (actually appropriate control) has been affected or not. good catch :thumbs_up: no. lower layer should know nothing about higher one. i think we should implement deferred saving of resume data like `session::configuredeferred()`."
739250297,13885,glassez,2020-12-05T13:20:20Z,maybe all radio buttons unchecked?
739250507,13885,glassez,2020-12-05T13:22:19Z,it would be nice if you could create the corresponding controls empty. but this is hardly possible.
739252517,13885,glassez,2020-12-05T13:40:24Z,seems we can play with `specialvaluetext` for qspinbox to show some placeholder (or even space character to emulate emptyness). and maybe set position of appropriate slider to middle of bounds.
739326279,13885,FranciscoPombal,2020-12-05T17:44:27Z,"1. i don't think there is an easy way to accomplish this for anything other than checkboxes (where there are 3 states, ""yes"", ""no"", and ""mixed"", the latter one easily seen in the content tab when selecting only a few files under a folder). i think it would be more sensible to simply display a warning to the tune of ""warning: selected options will apply to all selected torrents"". i don't think a user expects anything else if they select a bunch torrents at the same time in the first place though. 2. i don't think this would be expected behavior. i think the user expects the selected values to apply after they click ""ok"", even if they haven't changed them, because they might think ""oh, this option is already the value that i want"". again, this is under the same assumption as above, that users select a bunch of torrents to edit with this dialog with the expectation that all of the options will be uniformly applied to all. plus it sounds like a nightmare to keep track of such state, and it would be very confusing to the user - from their perspective there would be ""inconsistent/magical behavior"": a radio button that is already selected only takes effect if you first change it to something else and then change it back. so, imo the best approach is to have the options apply to all of the selected torrents, except perhaps in the case of checkboxes, which, if left in the ""mixed"" state, will carry over the option for each torrent as-is. obviously, if the checkbox is changed to another state, it is impossible to get back to the ""mixed"" selection (the user would need to close and re-open the dialog with the same selection). because of this, the usefulness of the ""mixed"" selection for checkboxes is limited, so we could simply assume that user also wants always wants to have the checkboxes' options apply to all selected torrents, and prevent them from clicking ""ok"" until no checkbox selections are ""mixed"". thoughts?"
739330639,13885,glassez,2020-12-05T18:21:23Z,"disagree. when i select a lot of torrents to change a particular property, i don't want all the others to be affected. otherwise, it turns into a real pain in the ass, taking care to select only the subset whose properties all match, making multiple editing almost completely unusable."
739330729,13885,glassez,2020-12-05T18:22:12Z,we need to get other opinions...
739332961,13885,xavier2k6,2020-12-05T18:41:46Z,"may be off-topic.........if i set values currently (official 4.3.1) in the `global rate limits`, shouldn't each torrent reflect that change in the transfer list under `down limit` & `up limit` or at least if i add a `new torrent` shouldn't the `down limit` & `up limit` show the respective new values instead of the `∞`?? if i `right click` the torrents - i can change the limits via the `respective rate slider` is this an issue? or me just misunderstanding how the global rate limits work? edit: same happens with this pr."
739333322,13885,FranciscoPombal,2020-12-05T18:44:46Z,"i agree that in my version, the flexibility of the dialog is significantly diminished. here is an important addition: what if each of the options that can be changed was guarded by a ""change this option for all torrents"" checkbox? it would look a little clunky, but it would be something like this: [code block]"
739333807,13885,glassez,2020-12-05T18:49:02Z,i was also thinking of something like this as an option. i would just put each setting in checkable groupbox.
739333921,13885,ArcticGems,2020-12-05T18:49:57Z,"a silly idea (which i personally don't mind, but others might) = what if when you select a **mix** of public **and** private torrents and open the ""torrent options"", you get **2** dialogs side by side, one with the title ""torrent options **(public)**"" and the other with the title ""torrent options **(private)**"". when you only select torrents of one type (for example public), only **1** dialog opens."
739363852,13885,FranciscoPombal,2020-12-05T19:42:50Z,"thanks for the suggestion, but i don't think this is a good idea. this isn't simply about public vs private torrents, we need more granularity regardless of that."
739387024,13885,thalieht,2020-12-05T20:05:46Z,"what do you have in mind? i'm asking because what i have in mind involves a lot of connects and member booleans... sadly i don't think i'll be able to do that. it uses `qmetaobject::invokemethod` which mentions threads that i understand nothing about. perfect. didn't think that's possible because as a user, well, it's not. i like the empty spinbox idea. the slider in the middle sounds a little random but sure, why not. what if users want to e.g. only limit download speed? currently if all selected torrents don't have the same, say, ratio limit, it defaults and applies ""use global share limits"" to all of them which the user never touched. i don't like it, sounds like redundant effort (for the user). you get 2 dialogs side by side, if you are worried about the ""disable xxx"" options, don't. they are never applied to private torrents. if this is a convenience thing to apply different stuff to public/private torrents, then imo this should be a problem for the transfer list (to be able to filter and select only private/public torrents)"
739462713,13885,glassez,2020-12-06T06:29:56Z,"well, then just use `saveresumedata()` in setters. i will improve it to be deferred in separate pr."
739463869,13885,glassez,2020-12-06T06:46:22Z,"apparently, you can't do without connections and booleans (or something other that can indicate the fact of property is changed, e.g. special value of spin box)..."
739528295,13885,thalieht,2020-12-06T16:40:19Z,"using the special value for both infinite and ""empty"" is problematic... neither `qspinbox::valuechanged` nor `qspinbox::textchanged` detect inputing 0 the the spinbox as change."
739544922,13885,glassez,2020-12-06T18:43:31Z,"well, since ""special value"" is already being used for other purposes, it seems to be unavailable for indicating ""mixed values""."
740101717,13885,FranciscoPombal,2020-12-07T18:36:47Z,"hence my proposition of having each option guarded by a checkbox. how else do you intend to have sane behavior in the dialog, and prevent the situation above?"
740230838,13885,thalieht,2020-12-07T22:55:48Z,"yes but that came later... never mind. i managed to implement [a link] not sure about the ""sane"" part though :) empty space in the spinbox doesn't seem like an obvious indication that selected torrents have a different speed limit. i managed to overcome this by setting the spinbox's min value to a negative number and then restoring it to 0 when valuechanged."
740356163,13885,glassez,2020-12-08T03:47:16Z,"does it allow you to have both ""infinite"" and ""mixed"" values? this should not be a problem if it requires additional action only in the case of initially mixed values."
740585344,13885,thalieht,2020-12-08T12:16:46Z,yep.
742442215,13885,thalieht,2020-12-10T10:48:06Z,"~~currently, if a setting is touched (changed) it will be saved no matter what even if the original value is restored (wherever that's possible). should i cache the original value and compare it to the current one in `accept()` or the current way is enough?~~ i'm also hoping on some feedback on how the torrent speed limits work: [a link] personally i like it but if you think it's weird i can implement the checkboxes for them."
742452555,13885,glassez,2020-12-10T11:08:13Z,have you implemented it yet? then please attach a screenshot of what it looks like for mixed values.
742454166,13885,thalieht,2020-12-10T11:11:34Z,![a link]
742457182,13885,thalieht,2020-12-10T11:17:46Z,"now that i think about it, if i'm not mistaken, all the stuff that are saved in .fastresume are saved anyway on `saveresumedata()`. at least the speed limits are and i know this for a fact because even in 4.3.1, when adding a torrent these values are -1 in the fastresume and when i change only one of the limits, the other becomes 0. not to mention that setters in torrenthandle check for this thing."
742465620,13885,xavier2k6,2020-12-10T11:34:41Z,not to mention that setters in torrenthandle check for this thing. (shouldn't adding new torrents respect the new limits?) also: (in-case it was overlooked) [a link]
742495398,13885,thalieht,2020-12-10T12:37:56Z,"those columns are for when the torrent has limits applied to it explicitly from ""limit upload/download rate"" dialogs (capped by currently active global limits). otherwise the global limits are applied."
742504652,13885,xavier2k6,2020-12-10T12:57:13Z,"ok, have reviewed the info here again & have completely grasped the scope of it now. good job!"
743311540,13885,thalieht,2020-12-11T17:01:53Z,i'm waiting judgement on how i detect if a setting changed in the options dialog so that i can implement it in the global limits dialog as well.
743711776,13885,Chocobo1,2020-12-12T06:22:50Z,"maybe i misunderstood your question, but you cannot open these two dialogs at the same time."
743738564,13885,thalieht,2020-12-12T10:54:30Z,"sorry i meant how i implemented it i.e. connects() tracking if an option changed, flipping a bool and check it in `accept()` or if it would be better to maybe cache the initial values and compare to the final ones in `accept()`."
743770216,13885,glassez,2020-12-12T15:15:07Z,seems easier to me.
743910298,13885,thalieht,2020-12-12T21:50:51Z,"done. now i await the review(s) for it, then i will do the same for global limits dialog and the pr will be ready."
748985959,13885,zywo,2020-12-21T13:55:58Z,"just my point of view, i think the sizes of dialogs should be fixed, at least vertically."
749084331,13885,thalieht,2020-12-21T17:02:06Z,"i suppose you mean ""fixed"" in stone. i too don't see a point in resizing it vertically but i also don't see any reason to disallow it. i was thinking of saving the dialog geometry considering the nature of sliders (someone may want to make and keep the dialog wider) but i don't know under what section to save it because ""torrent options"" doesn't seem to be unanimously accepted. maybe in the future in another pr."
751562607,13885,Chocobo1,2020-12-28T03:34:46Z,thank you!
751675442,13885,thalieht,2020-12-28T11:05:26Z,thanks everyone!
751676678,13885,glassez,2020-12-28T11:10:14Z,"iirc, there are some superceded prs, aren't they?"
751681353,13885,thalieht,2020-12-28T11:28:34Z,"just one iirc, i'll look for others as well."
751697407,13885,glassez,2020-12-28T12:31:29Z,can you also check #12611?
751720417,13885,thalieht,2020-12-28T13:56:02Z,it's still valid. i didn't touch the default (10000 kib/s) here.
1092144088,16840,glassez,2022-04-07T19:55:15Z,"it has not been completed yet, but the foundation is already there. /bug-handlers, could you test it with a large number of torrents (several hundred or thousands) and share your impressions, so that i can understand more clearly where to go next."
1092187141,16840,thalieht,2022-04-07T20:48:14Z,"tested with 10k bogus torrents i kept from a previous improve startup pr. the only difference i see is that the gui appears very fast, as opposed to master's blank gui until everything is loaded, but after that it ""freezes"" until everything is loaded."
1092414023,16840,glassez,2022-04-08T03:49:56Z,please share them with me (i lost them).
1092623394,16840,xavier2k6,2022-04-08T09:00:32Z,"here you go: [a link] i haven't tested this pr yet but would also remind anyone testing to test after a long period of time of inactivity (cold starts etc) or even reboot machine in-between tests & also we should test `sqlite` option. i don't know if you want to bring in users who have actual real-world torrents of 10,000 -> 150,000 for testing purposes at this stage or at all but there are users who would fit such scenarios..."
1092681904,16840,glassez,2022-04-08T09:48:37Z,thank you! maybe later.
1092686832,16840,xavier2k6,2022-04-08T09:54:37Z,does duplication of items in the `filter list` have any effect on performance?
1092689180,16840,glassez,2022-04-08T09:57:28Z,"i'm sorry, could you not speak in riddles? unfortunately, i didn't understand what you were talking about."
1092699077,16840,xavier2k6,2022-04-08T10:09:03Z,"ok. (for example) in the filters list....go to `completed` & select a torrent, now force-recheck it. that `checking state` will now show in `seeding/completed/checking & inactive` filters. does this have an impact on performance due to drawing `progress bar` etc. because that torrent state is being duplicated in multiple filters?"
1092727614,16840,glassez,2022-04-08T10:42:54Z,any torrent is either shown in transfer list or not (filtered out). it makes no difference to it how many filters it is accounted for.
1093709690,16840,oorzkws,2022-04-09T05:42:34Z,"feel free to poke me when you need a test case, i'm nearing 200k torrents with around an 7 hour load time currently. i've noticed especially that the restoring process slows down over time. it may start out doing a few thousand torrents a second, but it'll finish doing maybe one every 3 seconds as it nears completion. files are approx the same size on both ends, so it's not that. may be worth keeping in mind as you poke through the code, anyway."
1093732641,16840,jagannatharjun,2022-04-09T06:17:50Z,"that's because the tracker announces handling, (readalerts), it grows with the number of torrents, it's one of the biggest bottlenecks during startup, can we just disable the tracker announce handling during startup? make tracker handling demand-based?"
1093809388,16840,jagannatharjun,2022-04-09T08:33:16Z,"compounding torrentloaded function won't add much performance, things will take same time like this - ![a link] i suspect the same thing happened with your effort in the accumulation of tracker status handling also, why not use the concurrency module like one used in another pr doing the same thing? imo code is much simpler in other pr."
1093961659,16840,glassez,2022-04-09T12:02:57Z,"why these unsubstantiated statements? such ""compound"" functions allow you to perform some operations once per bunch."
1093963261,16840,glassez,2022-04-09T12:05:13Z,"are you talking about one of the qbittorrent releases, or about the build from this commit?"
1093974676,16840,oorzkws,2022-04-09T12:22:15Z,"4.4.2, released."
1093998339,16840,jagannatharjun,2022-04-09T12:55:32Z,"well if you have looked at the screenshot of the profiler i attached you can't say it was ""unsubstantiated"" but my bad actually i opened the profiler after many days and didn't realize i was testing a branch with changes from [a link] which does the same thing."
1094032087,16840,glassez,2022-04-09T13:41:59Z,"and what can i say, seeing that you are trying to prove the ""drawback"" of these changes by presenting a screenshot of how it works without them. no offense, but you could help more by posting up-to-date performance measurements."
1094036223,16840,jagannatharjun,2022-04-09T13:52:00Z,"i was not trying to prove the ""drawback"" but just saying it doesn't help much (i admit i was mistaken) the branch i was testing had the changes from my own asynchronous implementation. i thought they both should be comparable but didn't release i merge the changes from the other branch at some point."
1094077209,16840,jagannatharjun,2022-04-09T16:15:01Z,"i tried this pr as is, the window appears instantly but remains unusable for 10min (after that i terminated the process), on the master window becomes usable after 2:20 min. i used dummy 5000 torrents created from the following script, trackers_all.txt contains some valid trackers (ngosang's trackerlist). [code block]"
1094077789,16840,glassez,2022-04-09T16:18:38Z,could you attach it as well?
1094146013,16840,oorzkws,2022-04-10T00:13:00Z,"please tell me if i'm derailing this and should discuss elsewhere. with that being said, i did a quick trace on 4.4.2 with windows performance recorder, and most of the time is actually in `statusfilterwidget::updatetorrentnumbers` and `libtorrent::aux::session_impl::recalculate_auto_managed_torrents` in my case. it seems if it's recalculating the numbers every time a torrent is restored, this explains the seemingly linear increase in time between torrents. ![a link] ![a link] edit: here is a graph of ""number of entries per log timestamp"". it's sorted chronologically. ![a link] edit 2: thank you, - i've switched to the nightly. unfortunately now the performance limitations are within libtorrent-rasterbar.dll which i don't have the symbols to profile."
1094194470,16840,jagannatharjun,2022-04-10T06:33:38Z,"yes, that function was quadratic, which should be fixed via [a link] you can try that from nightly builds if you wish to. it must be running on a different thread then gui, so should not be a problem (i can't confirm at the moment)"
1094253691,16840,jagannatharjun,2022-04-10T11:48:03Z,"did you get any noticeable performance improvement? all the libtorrent work is done in a separate thread, it shouldn't affect qbittorrent working."
1094261711,16840,oorzkws,2022-04-10T12:24:51Z,"it loads much faster until around 200k torrents, and that's where i'm sitting now. it processed ~195k torrents in the first hour and now at t+6h i'm at ~215k so it seems it's hit something of a wall, i don't remember my total torrent count but the ui hasn't become responsive yet. edit: profiling says the majority of time spent is in bittorrent::dbresumedatastorage::worker::store but i'm again unsure if that's on the main thread. also, my tracker rejects ""-qb450-"" so i can't check actual announce performance or if they're happening once this lockup happens."
1094273298,16840,jagannatharjun,2022-04-10T13:16:07Z,"yes, that's on the main thread, this pr deals with it. there will still be a fail message from a tracker, so the story would be the same. ps: you can try to compile qbittorrent yourself and change the version [a link]"
1094274037,16840,glassez,2022-04-10T13:20:28Z,false. storing resume data is done in separate thread.
1094305184,16840,glassez,2022-04-10T16:12:53Z,main window becomes usable in less than 1min for me (using this pr). but i'm still not satisfied with having a non-usable window.
1094339711,16840,ghost,2022-04-10T18:13:02Z,i think after running for 1 hour qbt tried to save resume data and that’s what caused it to hit the wall.
1094541290,16840,oorzkws,2022-04-11T04:38:33Z,"thanks, i changed the interval to see if that improves the behavior. i've built the branch this pr is on, it's very strange to have the ui immediately available and updating during the initial load. it's alternating between loading ~30k torrents and a 5 minute hang. current at around 70k loaded, i'll update if it finishes or crashes. update: after hitting ~213,000 torrents the ui is frozen and it hasn't loaded any more for the last 45 minutes. i don't recall what my total count is :downcast_face_with_sweat: update 2.1: 213k was in fact the total count, the rest of the time was recheck. initial load is around an hour followed by a two hour recheck, this is a massive improvement. ![a link] :red_heart: **tl;dr; huge improvements! it's not only faster to load but the ui updates as it goes. if #16581 gets implemented it'll be even faster.**"
1094901498,16840,glassez,2022-04-11T10:51:27Z,"#16581 is about checking of file existence and not about hash checking (aka ""recheck"" you mentioned above). but in any case, it should slightly improve startup performance, especially in the case of an extremely large number of torrents, like yours. but there is a problem with it, because it provides opportunities for creating fake seeding, etc. i'm afraid that it will not be approved if i don't add some protective mechanisms there. but it's offtopic here, so if you have something to say about it, then let's continue in #16581."
1094907507,16840,glassez,2022-04-11T10:59:17Z,"yes, but the ui is still not usable due to large delays (i don't think you're seeing a better picture). i'm working on further optimization."
1094997216,16840,oorzkws,2022-04-11T12:36:40Z,sort-of. having the numbers visible and updating is an improvement for me as-is - i'm not stuck estimating progress by log lines and hoping the file didn't roll over.
1095052478,16840,glassez,2022-04-11T13:27:50Z,i wonder how qbittorrent behaves with so many torrents (after they are all restored/loaded)?
1095083278,16840,oorzkws,2022-04-11T13:54:29Z,"quite well, actually. there's crashes sometimes per #16837 but otherwise it's fairly stable, keeps the watch folder empty, and keeps announcing fine. there's sometimes issues if i do something like say.. change the tracker on 20k torrents at once - the ui will freeze and it will stop announcing, but it keeps emptying the watch folder. it's easily the best experience i've had using a single client for a large amount of torrents."
1095338531,16840,ghost,2022-04-11T17:35:10Z,i think 200k+ torrents is extremely rare case and that isn’t the main aim of this pr. it aims at maybe 5-10k torrents which can be loaded without causing gui lockups. so not checking if the files exists on startup would be a bad choice even though you could delete the files lateron but in order to do that you have to have the files in the first place which kinda works well against fake seeders.
1100061017,16840,ghost,2022-04-15T11:52:12Z,i think you could improve startup and overall performance by not saving peers to resume data. that way you save space & reduce disk i/o.
1100067001,16840,glassez,2022-04-15T12:07:39Z,"i don't think it will help much. in any case, it's not a good idea to unconditionally stop saving them, imo. although we could add this as an option."
1100997054,16840,oorzkws,2022-04-18T01:09:09Z,"i built 9ea113e, something seems to have regressed - the client doesn't seem to finish loading and the ui doesn't become responsive. the torrent count in the ui is wrong (roughly half what it should be), and the client has been open several hours now with no new log entries within the last two hours. disk activity is minimal consisting of only my page file and torrents.db/torrents.db-journal, cpu load is around half a core. according to the tracker it is still announcing the full 200k torrents, despite the ui showing all(96696). new torrents are being removed from the watch folder, but they aren't announcing or downloading. windbg shot of the main thread: [a link] i think my previous build was 7b011e5"
1101118717,16840,glassez,2022-04-18T05:55:03Z,could you also test a4ac356?
1101196083,16840,oorzkws,2022-04-18T08:04:22Z,"so far so good, loading up - ui is now updating more regularly (every few minutes) during the initial load."
1101261309,16840,glassez,2022-04-18T09:33:05Z,"the main difference is in what state the bittorrent session is in before the end of loading (restoring) existing torrents. initially, in this pr, session was ""paused"" all this time so as not to create additional load while loading torrents. in 9ea113e i tried to keep session active."
1101333381,16840,oorzkws,2022-04-18T11:35:53Z,"a4ac356: looks like it's not quite loading. it'll get all of the torrents loaded and start verifying and then the client seems to freeze whenever that finishes (no ui updates during). it's still announcing but not adding new torrents, and has 0 disk activity. i'll let it run overnight and update here after."
1101931056,16840,oorzkws,2022-04-19T02:29:39Z,"a4ac356: yeah it looks like it's still locked up. it's announcing existing torrents but anything added to the watch folder in the last 12 hours isn't active. ui doesn't open either. edit: log started mentioning finished torrents when i tried to open it from tray, but stopped fairly quickly and the program remained unresponsive."
1102082638,16840,glassez,2022-04-19T05:27:06Z,"i update something here from time to time, so it would be very helpful if you explicitly indicated which commit your report belongs to."
1102139812,16840,oorzkws,2022-04-19T06:25:43Z,"done, my apologies. i'm putting together a test case of the smallest 100,000 torrents from archive.org - each file (not .torrent) is around .5kb. once it's done fetching, it's currently around 50% done, i'll upload here. i'm happy to keep testing but it also seems i'm missing some of the skills necessary to provide useful information."
1102348352,16840,oorzkws,2022-04-19T09:06:19Z,"[a link] 100k torrents from archive.org. i included the metadata and fetch script so you can verify the sourcing if you so desire. to be clear, i'm not saying i expect you to do this - my case is such a tiny tiny niche i can keep using the 7b011e5 without issue as it already solves some of the more major issues i experience."
1138816615,16840,glassez,2022-05-26T17:16:32Z,"could you test the latest push? /bug-handlers i have completed all the major changes and am now proceeding to the final stage. could anyone test it at this stage? it is not necessary to have too many torrents. it would be useful for me to see feedback regarding the number of different orders (a couple of tens, a couple of hundreds, a couple of thousands of torrents)."
1139443102,16840,oorzkws,2022-05-27T09:25:14Z,"sure, i've built and installed over one of my instances (i've moved to 10 instances of approx 20k torrents). the recheck on load only took around ten minutes and kept a consistent pace, the ui stayed responsive, and i could minimize to tray and restore to check progress without issue. i'll be moving the rest of the instances to this build shortly :) edit: for the rest of my instances something seems to have lost the torrents in migration. i'm re-loading them in to see how they handle it now. for the original test instance, it stopped announcing a bit after it loaded - the tracker says i'm only seeding 6k torrents when that instance alone has ~19k. edit 2: original instance seems to have randomly paused 13k torrents, that was what was preventing the announce. resuming now, hope they stay resumed, will update with time. edit 3: left it overnight, rest of the clients seem to have found their torrents. not sure why they showed 0 for so long but it worked out. edit 4: speed tracking appears broken somehow ![a link] peer counts as well ![a link] edit 5: all above notes apply only to 26ec3aea87b02d39c59c0deccdec036e857be9b3"
1140303885,16840,thalieht,2022-05-28T17:44:34Z,qmake only: [code block] can't find any problems but i may have missed something.
1140436039,16840,glassez,2022-05-29T12:09:45Z,can you try the latest push? so i want v4.5 beta is released including this pr merged and at least one month to pass since then until v4.5 final is released.
1140439910,16840,thalieht,2022-05-29T12:32:14Z,~~still happening.~~ same error but now for tagfiltermodel edit: compiles after doing the same for tagfiltermodel.
1140457652,16840,glassez,2022-05-29T14:11:57Z,done!
1140658270,16840,ghost,2022-05-30T03:41:21Z,dht nodes stay at zero with this build (2.0.6 win).
1140722889,16840,oorzkws,2022-05-30T05:43:25Z,not an issue for me on aa27ef5 2.0.6 win64
1140737221,16840,glassez,2022-05-30T06:09:06Z,since [a link] nothing has been changed that could affect dht.
1140763898,16840,ghost,2022-05-30T06:45:49Z,have you tested with a portable instance with zero torrents?
1140765713,16840,ghost,2022-05-30T06:48:46Z,dht works fine on master. your pr must've broken something!
1140771345,16840,ghost,2022-05-30T06:56:46Z,other things that broke: trackers do not work at all. all stay as not contacted torrent states do not change in transfer list as if all network activity and gui updates are paused!
1140795213,16840,oorzkws,2022-05-30T07:23:03Z,"rebuilding on fc2f3a7, i will test with those parameters and edit the results in here. please also make sure your new qbittorrent location isn't blocked by your firewall. edit 1: autobuild is broken for the time being, no new builds for me."
1140804436,16840,ghost,2022-05-30T07:32:46Z,"it’s not the firewall because i don’t use one. 2ndly, master works fine. the latest release also works fine."
1140805145,16840,ghost,2022-05-30T07:33:33Z,also i’ve tested the build from github actions which may be using different library versions.
1141189324,16840,glassez,2022-05-30T13:55:55Z,:thumbs_up: some corner cases were unhandled. should be fixed now.
1143236390,16840,glassez,2022-06-01T07:49:36Z,op is updated. i'll include it in final commit message while merging pr.
1143564772,16840,glassez,2022-06-01T12:46:05Z,"note that the rss subsystem can still have a negative impact on the startup speed, so it is better to disable it in order to test this pr."
1144628021,16840,oorzkws,2022-06-02T09:05:59Z,![a link] my speed tracking is still wildly incorrect on 50ed0fc
1144642083,16840,glassez,2022-06-02T09:21:24Z,does this screenshot represent the period while startup is in progress? how about master? does it behave differently?
1145150191,16840,ghost,2022-06-02T17:54:40Z,the total download/upload amount is showing unknown in status bar. couldn't reproduce it. maybe it requires the session still being restored?
1145188690,16840,glassez,2022-06-02T18:35:54Z,"i can reproduce it. with 5000 dummy torrents that i use to test this pr i saw a similar picture. it seems that this is still a bug in the code of the ""speed graph"", since the picture is the same, even if all torrents are stopped. it seems to depend on the number of torrents, since having only a few torrents in a session, i didn't notice anything like this (although i didn't have time to do a lot of tests)."
1145346600,16840,oorzkws,2022-06-02T21:13:10Z,"i haven't seen this on master, but i haven't had much time to give the master build testing (if this answer is still relevant). screenshot taken while startup is in progress, however even after recheck is complete it persists. ![a link] __edit__: on [a link] no torrents are announcing and all trackers show as ""not contacted yet"" ![a link] even for cases of recently active torrents, where this must be incorrect (however, the tracker is showing that i'm not seeding anything). ![a link] router's traffic graph of announce data, you can see where i upgraded to the current build around the 2 mark. ![a link] also, every restart some torrents lose their trackers. this happens even with a clean shutdown (file->exit). ![a link] __edit 2__: after a restart, trackers are showing properly as ""working"". time will tell if it will keep reannouncing or not."
1145421861,16840,xavier2k6,2022-06-02T23:01:33Z,testing under portable mode with defaults & switching from `fastreume` -> `sql` & back again etc. between tests. i haven't tested `master` to see if crashes happen there too. seem to experience a straight ctd & `eventvwr` displays `0xc000409` [a link] [code block] ____ #### also crashing with: qbittorrent has crashed please file a bug report at [a link] and provide the following information: qbittorrent version: v4.5.0alpha1 (64-bit) libtorrent version: 2.0.6.0 qt version: 6.3.0 boost version: 1.79.0 openssl version: 3.0.3 zlib version: 1.2.12 os version: windows 10 version 2009 10.0.19044 x86_64 caught signal: sigsegv [code block] **debugger was attached at time too** [code block]
1145929455,16840,glassez,2022-06-03T12:47:55Z,i confirm that this is definitely not a problem of this pr. fix is on the way.
1145932083,16840,glassez,2022-06-03T12:51:04Z,confirmed a bug. working on it...
1146081797,16840,glassez,2022-06-03T15:33:06Z,should be fixed now.
1146101387,16840,glassez,2022-06-03T15:57:08Z,this can be related with [a link]
1146612389,16840,xavier2k6,2022-06-04T13:31:40Z,"confirm, no crashes anymore."
1146613410,16840,xavier2k6,2022-06-04T13:36:11Z,"i don't know if that `libtorrent` ticket (haven't tested with it) has any relevance with this observation but........... when switching from `fastresume` -> `sql` & back again repeatedly between tests, it sometimes doesn't count all `10,000` torrents it shows as `all` -> `5,300` or `6,700` or `7,100`. from screenshot below, you can see that i have the torrents sorted by name & there are torrents missing/not loaded. eg. `file0001.bin`, `file0005.bin` -> `file0008.bin`, `file00014.bin` -> `file00016.bin` etc. missing. ![a link]"
1146639626,16840,glassez,2022-06-04T15:55:15Z,is there anything suspicious in the log? does qbittorrent behave normally after it is fully started? what happens if you restart qbittorrent after that corrupted start without changing the storage type?
1146641492,16840,xavier2k6,2022-06-04T16:05:12Z,"majority of torrents starting with filename `file00xx.bin` not showing as restored. no errors/warnings. seems to from what i've observed. it will stay showing the `7,100` etc. just changed the storage type again & received a crash, however - the copy/paste didn't seem to have taken effect. will try to get it to happen again.......qbytearray was part of it....."
1146643044,16840,xavier2k6,2022-06-04T16:13:44Z,qbittorrent has crashed please file a bug report at [a link] and provide the following information: qbittorrent version: v4.5.0alpha1 (64-bit) libtorrent version: 2.0.6.0 qt version: 6.3.0 boost version: 1.79.0 openssl version: 3.0.3 zlib version: 1.2.12 os version: windows 10 version 2009 10.0.19044 x86_64 caught signal: sigsegv ``` 0# boost::stacktrace::basic_stacktrace >::init at d:\a\qbittorrent\boost\boost\stacktrace\stacktrace.hpp:77 1# getstacktrace at d:\a\qbittorrent\qbittorrent\src\app\stacktrace.cpp:35 2# `anonymous namespace'::abnormalexithandler at d:\a\qbittorrent\qbittorrent\src\app\signalhandler.cpp:103 3# _seh_filter_exe at minkernel\crts\ucrt\src\appcrt\misc\exception_filter.cpp:219 4# `__scrt_common_main_seh'::`1'::filt$0 at d:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:304 5# __c_specific_handler at d:\a\_work\1\s\src\vctools\crt\vcruntime\src\eh\riscchandler.cpp:389 6# _chkstk in ntdll 7# rtlraiseexception in ntdll 8# kiuserexceptiondispatcher in ntdll 9# qtprivate::qpropertybindingdata::~qpropertybindingdata in qt6core 10# qbindingstorage::clear in qt6core 11# qobject::~qobject in qt6core 12# operator
1146645248,16840,glassez,2022-06-04T16:28:40Z,"are the missing torrents the same? (although it's hard to test with so many, but at least on some small subset) could you also check the current amount of data in the storage itself? does this problem happen with any type of storage, or just one of them?"
1146658761,16840,xavier2k6,2022-06-04T17:50:54Z,please file a bug report at [a link] and provide the following information: qbittorrent version: v4.5.0alpha1 (64-bit) libtorrent version: 2.0.6.0 qt version: 6.3.0 boost version: 1.79.0 openssl version: 3.0.3 zlib version: 1.2.12 os version: windows 10 version 2009 10.0.19044 x86_64 caught signal: sigsegv [code block]
1146660427,16840,xavier2k6,2022-06-04T18:02:41Z,"will check.... do you mean the `torrents` database file contents or file size as the size seems to vary alright on the amount of test torrents being loaded/displayed. (when they don't display correctly/fully) it seems to be just going from one storage to the other & then back again. eg. start off with default of `fastresume` & after test torrents are loaded/displaying `10,000`, change storage type to `sql` & exit qbittorrent, now re-open it."
1146661943,16840,glassez,2022-06-04T18:11:07Z,i wanted to find out if it happens in both directions? i.e. when switching `sql -> fastresume` too.
1146662968,16840,xavier2k6,2022-06-04T18:17:22Z,seems to be `sql -> fastresume ->sql` & `fastresume ->sql -> fastresume` for both recent crashes.... the wrongly displayed torrents seemed to have disappeared when i changed backup log size to `1024` from default of `66` but i can get it to reproduce quickly by changing the `save fastresume interval` to `1min`
1146890175,16840,oorzkws,2022-06-05T21:57:36Z,"i'm still getting all trackers stuck at ""not contacted yet"" after some uptime. not sure what's going on here. ![a link] last activity was some 19h ago despite the watch folder having around 30 files added in that time."
1148441959,16840,glassez,2022-06-07T09:43:31Z,"do you mean at some point in time before all torrents are restored, or after that? note that current implementation delays starting any bittorrent communication until all the torrents are restored to decrease startup time. is this behavior undesirable?"
1149255515,16840,oorzkws,2022-06-07T23:05:10Z,"some time after. qbittorrent functions normally for at least several hours of uptime, but it seems to sometimes then get stuck and put all trackers into ""not contacted yet"""
1149517837,16840,ghost,2022-06-08T06:31:59Z,does the network go offline during these several hours? qbit may not be accouting for new endpoints created after network is back up! you could check the logs to see if there's anything relevant.
1149534551,16840,glassez,2022-06-08T06:54:53Z,if qbittorrent starts to function normally after all torrents are restored then everything else is more likely not a problem of this pr.
1149632971,16840,oorzkws,2022-06-08T08:42:43Z,"not that i can see, neither network wise or in the log. i'll check specifically for this next time it happens. no problems then, startup is much faster and without issues. it seems any remaining issues are outside of this pr and just cropped up moving from 4.4.2 to the git versions this is based on."
1156216180,16840,glassez,2022-06-15T09:16:00Z,"pr updated: 1. prevent regular resume data generation until session is restored 2. prevent adding new torrents until session is restored (i can't imagine an easy enough way to allow it; anyway it wasn't possible before as well) please test it again. i currently don't have access to a powerful enough machine to test a large number of torrents. with a small amount, it seems to be working normally."
1157551404,16840,oorzkws,2022-06-16T11:29:02Z,"quick question on this one, this also applies to watch folders - it won't remove the files until it can add them properly?"
1157567769,16840,glassez,2022-06-16T11:48:25Z,yes. at least that's what it's meant to be.
1158716232,16840,oorzkws,2022-06-17T10:04:05Z,"![a link] does this build change logging at all or is it possibly a different master commit that has my log without newlines? sorry for bothering you with these end-user questions, i have difficulty tracking the individual changes with the forced pushes."
1158922096,16840,glassez,2022-06-17T14:22:15Z,"probably [a link]. , ping!"
1158924073,16840,glassez,2022-06-17T14:24:19Z,pr is updated. fixed a bug.
1159364545,16840,Chocobo1,2022-06-18T05:13:03Z,fixed in pr #17233.
1159459175,16840,glassez,2022-06-18T12:49:28Z,"i ran it several times with 10,000 test torrents, changing the storage type each time. no problems noticed."
1159459764,16840,oorzkws,2022-06-18T12:53:57Z,"so far, so good on my end. running your latest revision as of this comment."
1159489704,16840,kasper93,2022-06-18T16:07:46Z,"one test case to keep in mind is to test data consistency when qbittorrent is closed before everything is loaded. currently (on master) when it is closed before fastresume data is loaded, next run will require full recheck on torrents. adding more async loading requires proper synchronization between loading/saving."
1159490822,16840,xavier2k6,2022-06-18T16:14:08Z,"will test later. if you rebase on current master again, i would then be able to provide windows build with latest libtorrent rc_2_0 commit if necessary?!"
1159513761,16840,glassez,2022-06-18T16:47:40Z,"i didn't notice anything like that. i added some real torrents to the 10,000 test torrents, and i tried closing qbittorrent before all torrents were restored. i also tested the case of deleting a torrent during startup - it works correctly even if i closed the application before startup is done. btw, in case you missed it:"
1159519884,16840,xavier2k6,2022-06-18T17:27:58Z,"& anyone else, you can try below windows build based on this pr with latest `libtorrent rc_2_0 commit` note: `qt 6.3.1` was used for this build & seems do display all columns in `transferlist` at initial startup. [a link]"
1159577656,16840,xavier2k6,2022-06-18T22:49:01Z,"i know what the sql displaying inconsistent torrents issue is. (unrelated to this pr as i can reproduce in `master` too) change `resume data storage type` to sqlite & a `torrents` database file is created in `data folder` (as expected) this ~`13.5mb` database file takes ~`3mins` for the amount of test torrents `10,000` to be completely created because it's updating between ~`40kb-64kb p/s` exit qbittorrent before the database is completely created, so for example after 1 minute. the database file will not be ~`13.5mb` & it's size will vary depending on when you close qbittorrent, hence various torrents being displayed. you can delete the inconsistent database file & a new one will be created but because it's updating so slowly - you will have to wait the full 3 mins or so for it to be completely created before you can close qbittorrent again to avoid the inconsistency."
1159583368,16840,oorzkws,2022-06-18T23:47:01Z,i've been testing builds on the rc alongside for a few weeks :slightly_smiling_face: since i was losing tracker info every restart otherwise
1159613298,16840,glassez,2022-06-19T04:14:34Z,"well, it looks like you've exposed the problem of unfinished/incomplete conversion of data from one type of storage to another. currently, it happens ""on the fly"" during session startup. after merging this pr, i should think about changing it so that the conversion becomes a separate task with some integrity control."
1159681688,16840,xavier2k6,2022-06-19T10:23:52Z,"haven't observed any operational issues, but what i have observed is that if you click on the `general` tab & maximize it - the counting of torrents under `all` & `checking` in `filters list` speeds up quite quickly.....(all `10,000` test torrents are in `paused` state) & the same observations can be seen if say i select `error` (which will be `0` as expected) under the `filters list` ![a link]"
1159698198,16840,glassez,2022-06-19T11:36:01Z,"this is quite expected. the population of gui elements is still quite expensive. i've been talking about this since the dawn of my research in the field of startup improvement. if we want to reduce the launch time as much as possible, then we must completely abandon the gui population until bittorrent session is restored. so i'm thinking of implementing this method as an option later. or do you think that the (current) method with continuous updating of gui is completely useless to abandon it from the very beginning? (, it echoes your suggestion above.) i think there is not much difference in the case of a small number of torrents. this will mainly affect those who have thousands of torrents in a session. , what do you say?"
1159708957,16840,xavier2k6,2022-06-19T12:16:05Z,"i know, was only providing feedback so let's say if a general/less informed user wondered of a way they could speed things up.....they may come across the comment & be happy enough with that suggestion. it wasn't a critique not at all & i think (i'm open to correction on this) in a previous pr we toyed with that kind of scenario. it's most preferable that the gui is at least usable even if it takes time to fully display the amount of torrents loaded & at least the user can see what's going on. i'd be more than happy to have this approved/merged as to me this is an improvement & any issues regarding phrasing/wording is very trivial imo."
1159718596,16840,oorzkws,2022-06-19T12:53:20Z,"my thoughts boil down to two points: 1. i use the total count to gauge how far startup has progressed, so having the numbers updated sometimes is useful 2. why not obey ""transfer list refresh interval""? it doesn't seem to now, and that would give a pretty easy gain with the user able to tweak the timing. i currently have my list refresh every 30s, so i would likely see some gain from it."
1159722483,16840,ghost,2022-06-19T13:09:35Z,"while hundreds of torrents are loading in the transfer list, i don't think it's possible to select a torrent and perform some activity sanely. it would be better to hide the transfer list till session gets restored."
1159783718,16840,glassez,2022-06-19T17:50:53Z,"if it was just a text like ""torrents are resuming. done 255 out of 10000. please wait..."", would that suit you? do you really have many torrents in regular use?"
1159784111,16840,glassez,2022-06-19T17:54:04Z,"in fact, a ui that is unavailable during startup, displaying only the progress of execution, could get rid of most possible conflicts, and would speed up the startup itself."
1160021145,16840,ghost,2022-06-20T06:19:36Z,"if you have many torrents, that means you're a long term seeder. and when you're a long term seeder, you don't start the client just to do some minor task on one torrent out of thousands. so if they have to wait some time for the gui to be functional, i think that shouldn't hurt."
1161773084,16840,glassez,2022-06-21T13:47:14Z,"as for the webui/webapi, the best/reliable/easily implemented way is to make it available only after the session is restored, imo (even in the current version of this pr)."
1162656903,16840,Chocobo1,2022-06-22T05:24:49Z,"as for the webui/webapi, the best/reliable/easily implemented way is to make it available only after the session is restored, imo (even in the current version of this pr). i suppose that make sense."
1168983648,16840,ghost,2022-06-28T16:54:32Z,i would say we should merge this commit with current improvements and make the other gui related changes later in separate pr since this has been lingering for a long time.
1169003830,16840,glassez,2022-06-28T17:13:28Z,done.
1171110440,16840,glassez,2022-06-30T11:37:09Z,"i would prefer it to be done this way. this pr has achieved its original goal, so it would be convenient to add further improvements if it is merged, rather than wasting time on permanent conflict resolution or suspending conflicting prs indefinitely. trying to make the seemingly simple changes mentioned above, i once again stumbled upon the confusing legacy code of gui classes, so it will take more time than i expected. i would like to make some preliminary changes in a separate pr. , what do you say?"
1171198608,16840,Chocobo1,2022-06-30T13:08:37Z,"then imo unnecessary gui changes in this pr should be dropped (such as the torrent creator changes and other isrestored checks in gui). those are, as mentioned before, doesn't scale well. sure, i don't mind. but someone still has to skim through the code to prevent some trivial mistakes. currently that burden relies on only me and it is getting hard for me to allocate time for reviewing complex changes. it would be easier if others can join/help on this task."
1171271532,16840,glassez,2022-06-30T14:11:15Z,do you mean to remove it from this pr before merging it?
1171951213,16840,Chocobo1,2022-07-01T05:28:41Z,yes.
1173010599,16840,glassez,2022-07-03T04:41:35Z,done.
1173607869,16840,glassez,2022-07-04T09:53:26Z,many thanks to everyone who participated in this venture!
1174612141,16840,oorzkws,2022-07-05T04:57:11Z,"cheers, thanks for the hard work"
1187695123,16840,a-raccoon,2022-07-18T16:14:32Z,"wrote: incorrect. i am a long time leecher who downloads tens of thousands of torrents, completes them, seeds only the unhealthy/at-risk ones, but then tags the completed torrents as ""(archived)"" and assigns them to the ""(archived)"" category. move the files off to platter and then force-recheck so they revert back to ""0% complete"". i keep them loaded in qbt, instead of deleting them, so that i don't download the same torrent twice. i will add 100 or 1000 magnet links at a time, and qbt will automatically skip adding torrents that i already have loaded (as archived). i just look at my untagged/uncategorized torrents to find those that have been newly added, and organize them accordingly. no duplicates. by keeping these old archived torrents loaded in qbt, i can always look back at their history to recall if/when i downloaded them and to quickly copy-paste their magnet links to another client or seedbox. this would be impossible had i deleted them. i only have 600 to 2000 active incomplete torrents, and >25,000 completed archived ones."
1187722018,16840,ghost,2022-07-18T16:39:31Z,"i thought my comment was about long term seeders who do not archieve torrents once they reach certain goal. anyways, the implementation where torrents are actively populated on gui as they're being loaded, does not guarantee that the torrent you're looking to perform an action on is loaded immediately. it may be loaded as the last torrent as well. it was also determined that it delays the startup to some extent as well due to having to draw the changes actively in the ui. so making the gui available only after all torrents have restored was decided to be the best course of action."
1187812241,16840,glassez,2022-07-18T17:16:01Z,:+1:
174351560,4681,sledgehammer999,2016-01-24T23:18:43Z,/qbittorrent-frequent-contributors
175006441,4681,Chocobo1,2016-01-26T13:14:50Z,"![a link] i wonder if the items in the red box can be put on the same line, i.e. don't use groupbox here"
175582399,4681,glassez,2016-01-27T11:56:51Z,i think yes. like on the line above.
175894101,4681,sledgehammer999,2016-01-27T22:30:17Z,"how to signify enable/disable? my thought is to convert the ""after"" qlabel to a qcheckbox."
177413494,4681,Chocobo1,2016-01-31T06:43:31Z,i just think putting them on the same line is enough. ![a link]
178271231,4681,sledgehammer999,2016-02-02T00:24:13Z,rebased and applied your observations. start reviewing from the 6th commit onwards. i did separate commits to ease your review. those commits will be squashed into their respective first 5 commits.
178271785,4681,sledgehammer999,2016-02-02T00:26:55Z,"**rant:** i wish github ordered the commits by commit date and not author date. i first randomly commited stuff and then rearranged the commits, but it doesn't show in this history. luckily git's history sorts by commit date"
178725323,4681,sledgehammer999,2016-02-02T18:04:46Z,(fixed travis)
178740770,4681,sledgehammer999,2016-02-02T18:28:20Z,tell me if it is ok to merge when you're ready.
178775657,4681,glassez,2016-02-02T19:29:31Z,i finished the review.
192535236,4681,sledgehammer999,2016-03-05T00:27:19Z,i know you're trying to help but this comment was unnecessary. i am both the pr author and the one that will merge. so i'll know i need rebasing.
195124149,4681,zeule,2016-03-11T01:05:22Z,": i just wonder why file log here is custom implemented instead of, say, boost::logging (since libtorrent anyway gives us boost as a dependency). is is a project policy or there is another reason behind this decision?"
196036438,4681,sledgehammer999,2016-03-13T19:51:13Z,i pushed an updated version. i implemented most of the stuff you talked about. start reviewing from commit `remove redundant variable.` onwards. pretty much all commits will be squashed before final merge. here is how the new options look: ![a link]
196037154,4681,sledgehammer999,2016-03-13T19:54:34Z,"actually i didn't investigate on other logging libraries. i wanted something custom and ""lightweight"". i assume other libs implement a ton of stuff that we don't need. there isn't a project policy that discourages using other libs. but not for trivial stuff. eg we use qjson for qt4 builds."
196132519,4681,glassez,2016-03-14T04:22:59Z,"sure. there is my comment on it here. as i said, i don't insist anyone to fix existing code, but we should not use this in new code (i mean, we don't have to add anything to preferences)."
196296058,4681,sledgehammer999,2016-03-14T12:48:27Z,"i pushed a new commit using settings storage. i am not sure i have done it correctly. also i need your help. i am lost. i don't know how to migrate the `filelogger::configure()` and `application::configure()` which reacted to changed preferences to the new system. i have migrated some of it, but currently it **will not react**: 1. if user disables file logging 2. if user changes log path 3. if user enables/disables ""delete old backup"" files or changes the age to delete them."
196310903,4681,sledgehammer999,2016-03-14T13:32:21Z,please stop doing that. he is already notified by my earlier comment. also don't delete your comments when someone quotes them or responds to you. you make him like a crazy person talking at the wind.
196387713,4681,glassez,2016-03-14T16:09:56Z,"you're right. you done it incorrectly. apparently, i need to describe the principles of the new code: 1. components owns its properties and stores/loads needed data from settingsstorage itself. the main thing is to understand which property relates to a component (this is not always evident at first sight). 2. no `configure()` slot in new classes. all things we need to do when properties changed we should do in appropriate property setters. 3. properties should be implemented as setter/getter pair (or only as getter if property is read only). setter/getter are usually non-static methods (addnewtorrentdialog is bad example so it's exception from this rules). 4. if some component needs to store some private data in settingsstorage (e.g. its state) there are no getter/setter for this data (or some private helper methods if needed). 5. all non-toplevel components should be accessible as properties of toplevel components (e.g. application::filelogger()) so we can get/set its properties. if some component is non full time existed (as filelogger) we need check its existence before access its properties. i've implemented addnewtorrentdialog::isenabled() (and other property) as static method because we really do nothing when we change these properties. but this way is incorrect for filelogger. really we haven't filelogger::isenabled property but we have application::isfileloggerenabled. example: [code block] i hope i have covered it fully. but you are free to ask more questions."
196392835,4681,sledgehammer999,2016-03-14T16:20:18Z,"yes, i think i am ok with your explanation. as you guessed it i took addnewtorrentdialog as an example. i apparently need to implement this one level up. filelogger goes to application and executionlog to mainwindow. i'll give it another try in a few moments."
196564483,4681,sledgehammer999,2016-03-14T23:27:46Z,"hmm, i was going to start but i already hit a wall. `filelogger` properties need to be loaded/stored from options_imp.cpp too. how do i do that? do i need to pass an `application` pointer to options_imp ?"
196630950,4681,glassez,2016-03-15T03:11:03Z,application is singleton. you can access it via `static_cast (qcoreapplication::instance())`.
198138278,4681,sledgehammer999,2016-03-18T00:01:14Z,"ok. and that means that options_imp will also have to have access to the mainwindow pointer(for the other unported settings) , right?"
198206411,4681,glassez,2016-03-18T04:50:03Z,right. it is accessible via application.
198975960,4681,sledgehammer999,2016-03-20T18:08:52Z,"i squashed commits. i implemented the suggestions and rebased. the convertion to settingsstorage will remain in a separate commit, because i want all the previous ones to include them in v3.3.4. settingsstorage along with asm will be released in v3.3.5. can you review my new attempt at settingsstorage? i have realized a possible ""bug zone"" for bigger components. as you can see in options_imp i reordered how the settings are saved for filelogger, otherwise the setters wouldn't work properly. eg if i first set the enable property and then the backup property filelogger will use the old backup value for a brief moment. i assume that converting the session class will need extra care for these subtle bugs. i also decided to have each component live under its own namespace(?) in the text file without mentioning the parent that they belong in. for example filelogger saves settings under `filelogger/` path and not `application/filelogger/`. is that ok?"
199137198,4681,glassez,2016-03-21T05:52:52Z,"everything is logical and it always has been, just in a different place. just it looked not so clearly. i don't think it will give us problems. in this case, we do not have the filelogger settings, only the application settings. so consider using names like ""application/fileloggerenabled"" and so on. it turns out that we do not have a standalone filelogger component."
199169655,4681,glassez,2016-03-21T08:25:59Z,i finished with this pr.
199389476,4681,sledgehammer999,2016-03-21T17:28:48Z,"but won't this become cumbersome? i mean, eg mainwindow might turn up with very long options names. or depending on the option it may look too big(?) eg ""application/fileloggeragetype"" or ""application/fileloggerdeleteold"""
199397999,4681,glassez,2016-03-21T17:44:40Z,ok. let it be as you suggested. but why are you against nested names?
199401591,4681,sledgehammer999,2016-03-21T17:54:10Z,"i don't have a solid reason. i just feel that it is more manageable without it. however, i like much more `application/filelogger/enabled` instead of `application/fileloggerenabled`. i'll reconsider nested names, because i realized once the settingsstorage convertion is complete we might end up with a shitload of small modules in the ini files. not manageable at all."
199442172,4681,glassez,2016-03-21T19:35:17Z,+1
199564008,4681,sledgehammer999,2016-03-22T00:47:52Z,i think i'll switch to nested names. would the following be considered ok or does it constitute preprocessor abuse? [code block]
199629570,4681,glassez,2016-03-22T04:07:06Z,i don't think it will tire the preprocessor
201596649,4681,sledgehammer999,2016-03-25T23:53:49Z,thanks for reviewing. final suggestions implemented. pushed to master.
222038289,5310,sledgehammer999,2016-05-27T01:26:00Z,/qbittorrent-frequent-contributors
222039700,5310,sledgehammer999,2016-05-27T01:38:02Z,can someone can tell me why travis fails at the linking stage? i don't understand the error message.
222057767,5310,Chocobo1,2016-05-27T04:30:03Z,"i didn't review fully: 1. i would vote to use 3rd attempt code, it's much clearer. 2. maybe it would be better to return an array of ints instead of qstring, converting back and forth is a waste of cpu."
222088738,5310,glassez,2016-05-27T08:21:21Z,"try to include ""libtorrent/address.hpp"" instead of your forward declaration."
222099752,5310,glassez,2016-05-27T09:16:47Z,it is compiled for me with libtorrent-1.1 (i mean this pr unchanged).
222171726,5310,sledgehammer999,2016-05-27T15:08:29Z,"pr updated. however, the linking error remains. i am able to reproduce locally with mingw too. msvc doesn't have this problem. it is a problem with headers because the error happens at the linking stage. look at the signature. isn't that something about move semantics in c++11? i don't know why gcc/clang fails on this."
222174423,5310,tekko,2016-05-27T15:18:24Z,is it possible to add a fail counter and show in the log how many failed? or count the non-empty lines read and compare it with the total number of rules parsed? just in case something got updated and it stops working again...
222188109,5310,glassez,2016-05-27T16:11:14Z,i forgot to mention that i built it with mingw g++.
222189830,5310,glassez,2016-05-27T16:18:32Z,the fact we used `boost::asio::ip::address::operator=()` in old code too. you just add the following: [code block] so i think that is the problem. the second thing we don't need this. since `parseipaddress()` don't depend on `filterparserthread` class you don't need declare it as class member. just move it into anonymous namespace in `filterparserthread.cpp` and remove the forward declaration of `libtorrent::address`.
222191648,5310,sledgehammer999,2016-05-27T16:26:35Z,"i am performing a libtorrent 1.1 compilation now. just so you know, i have tried ommiting the forward declaration and including the appropriate libtorrent header directly but i get the same error with libtorrent 1.0. i am waiting libtorrent 1.1 to finish now."
222193089,5310,glassez,2016-05-27T16:32:52Z,do the following: anyway it's code improvement.
222199826,5310,sledgehammer999,2016-05-27T17:01:57Z,i couldn't get 1.1 to link with mingw 5.3.0(a whole lot of weird errors). i pushed a new commit to see if it passes travis. and now i am going to convert some qdebug messages into logger messages in the parse functions.
222213885,5310,sledgehammer999,2016-05-27T18:01:25Z,g++ still fails with the same error. i am thinking of changing the function to take a pointer instead of a reference.
222213925,5310,zeule,2016-05-27T18:01:34Z,don't understand how can we talk about speed and do string to string conversions (instead of string to `libt::address`).
222215338,5310,sledgehammer999,2016-05-27T18:07:36Z,have you looked at my 2nd commit? that's what i do there. and from there i get the linking error with g++. since you're developing on linux please take a look and see if you discover why this is happening.
222221830,5310,zeule,2016-05-27T18:35:30Z,"it is better, of course, but, ideally, it should not contain `split()` calls. can i see `/usr/lib/pkgconfig/libtorrent-rasterbar.pc` from that machine? or can you change the build to output all the defines in the build log? it has to have something to do with boost_asio_header_only, i guess. my local builds can not reproduce this link error."
222223137,5310,sledgehammer999,2016-05-27T18:41:08Z,`libtorrent-rasterbar.pc` comes from our [a link] and here are its contents: [code block]
222224518,5310,zeule,2016-05-27T18:46:53Z,"so, it contains `-dboost_asio_dyn_link`. could it be that boost was built without c++11 then? where does it come from?"
222225026,5310,zeule,2016-05-27T18:48:59Z,"and if that is the case, you should add `#undef boost_asio_has_move` after the asio includes."
222226401,5310,sledgehammer999,2016-05-27T18:54:34Z,"why not? hmm, maybe the linker fails then because the asio shared lib isn't passed to it?"
222227189,5310,zeule,2016-05-27T18:58:15Z,"indeed, libtorrent-rasterbar.pc does not contain that dependence. if libtorrent does not use that operator by itself, there will be no link to it in its .so."
222227197,5310,sledgehammer999,2016-05-27T18:58:17Z,also in `winconf.pri` we have `defines += boost_asio_separate_compilation` and mingw still fails for me...
222227564,5310,glassez,2016-05-27T18:59:56Z,"boost.asio built in libtorrent-1.0, but if it built without c++11 support it hasn't moving `operator=()`."
222228144,5310,sledgehammer999,2016-05-27T19:02:21Z,i am using this b2 cmd: [code block] is there a b2 switch to enable c++11 or should i do it myself in the cxxflags?
222228744,5310,glassez,2016-05-27T19:04:56Z,"i do it via cxxflags: `cxxflags=""-std=c++11""`"
222228975,5310,zeule,2016-05-27T19:06:00Z,"afaik, libtorrent 1.1.0 switched to header-only boost.asio, and my .pc file contains the following: [code block] i would add [code block] just to be on the safe side. we can't know how boost was built."
222229166,5310,sledgehammer999,2016-05-27T19:06:47Z,"hmm, then it is entirely possible that on linux libtorrent is being compiled as non-c++11 and qbittorrent as c++11 since we are explicit about that. and we see different things from the headers. i am going to try rebuilding libtorrent with mingw and c++11."
222229326,5310,glassez,2016-05-27T19:07:32Z,i'm more worried about travis. we used `operator=()` in the old code! why isn't it working now?
222230165,5310,sledgehammer999,2016-05-27T19:11:28Z,i see that we use it only in `torrenthandle::connectpeer()`: [code block] maybe the compiler does its magic and optimizes out the assignment?
222230237,5310,zeule,2016-05-27T19:11:48Z,"this is the case on gentoo currently. users of qbt master branch have to specify c++11 mode for libtorrent explicitly if they compile it using autottols (see #5265, for instance)."
222231229,5310,glassez,2016-05-27T19:16:21Z,filterparserthread has some number of it too.
222233138,5310,glassez,2016-05-27T19:25:15Z,"tricky question. why in this code: [code block] the compiler uses `boost::asio::ip::address::operator=(const boost::asio::ip::address& other)`, and in this code: [code block] the compiler uses `boost::asio::ip::address::operator=(boost::asio::ip::address&& other)`?"
222234176,5310,zeule,2016-05-27T19:30:15Z,", your first example line uses the copy constructor."
222234817,5310,zeule,2016-05-27T19:33:18Z,"and in a release build it uses the return value optimization, of course."
222235164,5310,zeule,2016-05-27T19:35:15Z,"btw, [code block] would do the trick for us."
222235464,5310,glassez,2016-05-27T19:36:52Z,"oh shit, right! therefore, we have not had problems with this before. it's worth a try!"
222236207,5310,sledgehammer999,2016-05-27T19:40:28Z,why not my first proposal? aka: [code block]
222236573,5310,sledgehammer999,2016-05-27T19:42:23Z,yeah because it is stupid. scratch that.
222237328,5310,sledgehammer999,2016-05-27T19:46:05Z,assuming that we're right about non-c++11 libtorrent and c++11 qbittorrent: will it create problems if we force either arvidn or the packagers to compile libtorrent-1.0 with c++11 when the compiler supports it? what will happen to programs that will use the c++11 libtorrent but themselves aren't compiled using c++11?
222237802,5310,sledgehammer999,2016-05-27T19:48:24Z,and yes now mingw works when i compile libtorrent-1.0 with c++11 too.
222237806,5310,tekko,2016-05-27T19:48:27Z,"this works? [code block] if it's too confusing, just forget about it... edit: code modified with added comments, qchar casts and corrected typos"
222243008,5310,zeule,2016-05-27T20:14:50Z,"i can speak about gcc only. this is not a good idea. may work or may not. take a look [a link] and [a link], please. as to me, libtorrent-1.1 with its header-only asio is a good decision. speaking of linux distributions, the situation is not that bad, because many projects force c++11 mode already, and maintainers know what to do with reverse dependencies."
222244122,5310,sledgehammer999,2016-05-27T20:20:37Z,so what do you suggest? leave my pr as-is and let the maintainers rebuild libtorrent with c++11 (and probably dependent programs too) or rewrite the function signature as you proposed?
222245801,5310,zeule,2016-05-27T20:29:06Z,"we need libtorrent[c++11] regardless of your decision with this particular problem. i suppose your question is more about boost. and i think we have no choice here: we use c++11 already, and it would be stupid to port the code back to c++03. perhaps we can leave a note to maintainers in the changelog or readme that with libtorrent < 1.1.0 we need boost[c++11] and that will be enough. update: i accidentally used gentoo syntax for package flags. just to clarify: [c++11] means ""with c++11 mode enabled"""
222247004,5310,zeule,2016-05-27T20:35:26Z,"i can write a cmake check for that, if you like."
222247584,5310,sledgehammer999,2016-05-27T20:38:11Z,are you sure that libtorrent-1.1 autobuilds into c++11 with gcc? how are you going to detect that? does libtorrent have a define to indicate if it was build in c++11? so i should leave this pr as-is and try to provide a better package for the ppa... (and i hope it doesn't break other packages in the system. great!)
222248951,5310,zeule,2016-05-27T20:44:44Z,"no, it does not, but it does not use `boost_asio_dyn_link` and that is important for us, and we may check for `boost_asio_has_std_chrono=1` that is clear indication that libtorrent was built with c++11. i will try to compile and link a program which uses `boost::asio::address::operator=(boost::asio::address::operato&&)`, for example, if `boost_asio_dyn_link` define was found in libtorrent pkg-config. and if that program fails, i may print clear explanation what the problem is."
222256475,5310,zeule,2016-05-27T21:24:43Z,", let's move the discussion into its own issue, and ask ardvin is there any feature in libtorrent api which is specific to c++11 (so we can use it for test)?"
222257140,5310,sledgehammer999,2016-05-27T21:28:25Z,"ok. if no one has something to say about my code here i'll merge it tomorrow night. atm, i am trying to make a buildable deb package on 1.0.9 with c++11 enabled."
222258116,5310,tekko,2016-05-27T21:33:55Z,i guess u don't have time to try my code.
222258809,5310,zeule,2016-05-27T21:37:24Z,"i have :) why don't you replace the `split()` calls with scanning the byte array and a buffer for the results string, which is allocated only once?"
222259993,5310,sledgehammer999,2016-05-27T21:44:08Z,"i'll benchmark your example later. although those conditions hurt my head and cannot verify that they are doing the right thing. if you have code ready, please share :)"
222261107,5310,zeule,2016-05-27T21:50:44Z,"not at hands, but can write. may those files contain ipv6 addresses?"
222262698,5310,sledgehammer999,2016-05-27T22:00:31Z,i think when the specs were written ipv6 was still a distant fantasy. but in my parsing i specifically test if the string splits into 4. if it doesn't i assume it is parsable ipv6 address.
222286938,5310,zeule,2016-05-28T03:09:42Z,"perhaps we should just write an regexp which extracts (but not use it o replace leading zeroes!) the correct ipv4 address, but i've tried to write a mini-parser which does not perform memory allocations and wrote the following ugly code (i expected it to be cleaner): [code block] with the following test code [code block] i got the following output: [code block] and now, i'm afraid, nobody would suggest to use such an unreadable little monster. sorry for taking your time."
222315419,5310,sledgehammer999,2016-05-28T15:56:00Z,so here are the new benchmark results. as always i timed the parsing of the whole filter. i timed how long it took `filterparserthread::parsep2bfilterfile()` to finish. all algos are applied on top of my latest commits: baseline results: [code block] [code block] results: [code block] horribly slow and it doesn't parse all the ips. i also get some weird output in the console. the first result is parsing when launching qbt and the 2nd one is from pressing the reload button in the settings. [code block] output: [code block] [code block] results: [code block]
222316590,5310,zeule,2016-05-28T16:20:47Z,"just for fun, could you share your benchmark code, please?"
222317079,5310,sledgehammer999,2016-05-28T16:30:38Z,very simple. [code block]
222317650,5310,zeule,2016-05-28T16:41:52Z,": i've made a mistake putting `std::isspace()` inside of the main loop, so my test is with that corrected. downloaded guarding.p2p (14.2 mb, 215968 lines). rules count = 215968 duration(ms): 34"
222318644,5310,sledgehammer999,2016-05-28T17:02:19Z,"could you at least share your code? i removed the if checking for space altogether, but i get a deadlock. ps: look at my posted code above to see how i intergrate the rest the code."
222318981,5310,zeule,2016-05-28T17:08:15Z,"yes, sure. just give me some time to simplify it a bit."
222320325,5310,sledgehammer999,2016-05-28T17:38:04Z,"btw, i fixed the warning about `log::msg` and qregistermetatype()."
222321141,5310,zeule,2016-05-28T17:56:22Z,"the previous number was for parsing only, without creating `asio::ip::address` objects. now it with that. gcc 5.3, ""-o2 -march=native"", core i7-4810mq eugene's code rules count = 215968 duration(ms): 65 tekko's code rules count = 215968 duration(ms): 389 [a link]"
222322568,5310,sledgehammer999,2016-05-28T18:24:38Z,"to put things into perspective i performed the same benchmark as the other times. results: [code block] your code is by far the best till now. btw, why did you change the return value of tryparse()? i am thinking of converting it back to a bool. **another matter** i am going to keep this open until i am able to at least build a valid deb for the ppa which is also used for travis. this is the issue that stops me: [a link] i am going to file a bug to the brew(osx tool) people to rebuild libtorrent with c++11. but i don't think it they will do it any time soon. so i suppose in the meantime i should disable travis-osx builds, right?"
222323165,5310,zeule,2016-05-28T18:37:38Z,"to resemble signature of `strtok()`, which might provide a simpler way to do the parsing."
222323714,5310,tekko,2016-05-28T18:47:19Z,"if this pr doesn't make it into the next release of qbt, u should just temp. disable the .dat support."
222326259,5310,zeule,2016-05-28T19:43:20Z,a variant which calls `strtol()` and is a bit more readable: [code block] results: [code block]
222330520,5310,tekko,2016-05-28T21:28:50Z,"would this way of parsing benefit .p2p and .p2b also? there is a typo in the comment ""p2b"" not ""p2p"" `// parser for peerguardian ip filter in p2p format int filterparserthread::parsep2bfilterfile(qstring m_filepath, libt::ip_filter &filter)`"
222331754,5310,zeule,2016-05-28T22:04:36Z,"if this question is addressed to me, then i have never seen those files and thus don't know. where can i find examples, please?"
222331859,5310,sledgehammer999,2016-05-28T22:06:59Z,my commits here use the same parsing algo for dat and p2p since both are text files. p2b is binary file and uses different code path.
222331917,5310,sledgehammer999,2016-05-28T22:08:30Z,results with 's code [a link] [code block] you're on fire.
222332396,5310,zeule,2016-05-28T22:21:46Z,"i wonder why does your machine shows so much of difference between the first and second versions of datipv4parser? i believe you are right, `bool tryparse(const char*, const char**)` will be cleaner inside and from outside too,"
222332644,5310,sledgehammer999,2016-05-28T22:29:11Z,keep in mind that i plug it into the current qbt code and not use your example benchmark. now i call it like this: [code block] i would like to call it like this instead: [code block] i'll need to still convert to qbytearray to qstring to perform `qstring::trimmed()` in case it is an ipv6 address. so it is probably wasteful for you to test for whitespace.
222332707,5310,sledgehammer999,2016-05-28T22:31:49Z,"another thing. in your v1 instead of `address = libt::address_v4(parser.parsed());` i do `address = libt::address::from_string(parser.parsed(), ec);` and from_string might be slower."
222333093,5310,tekko,2016-05-28T22:45:02Z,"conversion btwn .dat, .p2p and .p2bv1-3 can be done with listdrop [a link] [a link] well... your machine, same list v1 [code block] v2 [code block]"
222338124,5310,zeule,2016-05-29T01:49:37Z,"here is the same thing which returns a `bool` and checks for ipv6 if ipv4 parsing fails. please, do not re-create the parser for each ip. [a link]"
222354633,5310,zeule,2016-05-29T10:57:56Z,forgot to mention: so that the following may be avoided.
222355151,5310,zeule,2016-05-29T11:11:52Z,had not found a listdrop executable there. i would appreciate if you do the conversion and share the p2p file.
222365529,5310,tekko,2016-05-29T15:08:37Z,"click ""1.0"" and there are zip files which includes source of listdrop and win exe's. [a link] [a link] [a link] [a link] but anyways... tried dragging blocklist.zip here. it says attachment is not supported, even though .zip is in the list... maybe too big. i'll send it to the email in your profile. update: sent by email"
222366446,5310,zeule,2016-05-29T15:28:29Z,thanks!
222377473,5310,zeule,2016-05-29T19:14:40Z,it seems like for p2p files we simply need to find index of the first semicolon in each string and start parsing from the next charachter. the same parser class will work. in this way you can avoid using `qbytearray` → `qstring` conversions.
222387259,5310,zeule,2016-05-29T22:44:11Z,"just realised that the loading is performed during start up. in this case i would use memory mapped file for loading them, thus removing string buffer completely. for example, `boost::iostreams` library provides memory mapped file for posix and windows."
222404604,5310,glassez,2016-05-30T03:23:20Z,qt provides it too.
222432426,5310,glassez,2016-05-30T07:44:55Z,wouldn't it be overkill the use memory mapped file in case of one-time file reading?
222459939,5310,zeule,2016-05-30T10:09:35Z,perhaps you are right. handling sigbus (and i forgot what is the exception for windows for that) is too complicated for the task.
222571165,5310,sledgehammer999,2016-05-31T00:56:04Z,"i didn't try your last version of the parser yet. on the file reading thing: both p2p and .dat filters are text files and usually ""small"" eg 12mb. why not read them all at once with `qiodevice::readall()` or `qtextstream::readall()`? would it help?"
222571556,5310,sledgehammer999,2016-05-31T01:00:56Z,"hmm, going back to one of my comments, we don't need qstring at all. qbytearray also has a trim function. so you don't need to handle ipv6 parsing at all. of course benchmarks are in order."
222574643,5310,zeule,2016-05-31T01:38:22Z,"i don't know what level of optimisation is enough for you. what is definitely true: without a special allocator or heap, string operations which need memory allocation (and trimming most likely does) are slow. to parse this kind of file one needs sequential scanning only. if we are sure that the filter size can not be large, then reading it all into memory (into a single continuous piece) is better than doing so line by line."
222575950,5310,sledgehammer999,2016-05-31T01:52:59Z,"good point. i didn't specify. truthfully, for me your parser is already fast enough. i am just wondering if there are cheap and easy ways to squeeze more performance without going overboard. i am going to use your parser anyway. now i am waiting for the libtorrent + c++11 part. i have found why the deb package doesn't build on linux. i can use manual patches for package. i am waiting for arvid to respond in case he has some other solution. but tomorrow i'll probably go ahead with patching the deb source. also tomorrow, i'll open an issue in the brew bug tracker for osx."
222654236,5310,zeule,2016-05-31T10:46:26Z,"`qbytearray::trimed()` performs memory allocation too, i guess. what is the problem here: we do these trimming many times and in their own thread while the app continues loading, if i understood that correctly (didn't look into the code, sorry). thus we do access the memory heap simultaneously from the filter parsing thread and from other threads. the parser thread does many allocations and frees. since they interfere with heap allocations from the other threads, this leads to the heap fragmentation and performance degradation not only here, but for those other objects too. should you you `std::string` i tell you ""use a pool allocator here and there will be no problems"", but qt does use the common heap, right?"
222663662,5310,sledgehammer999,2016-05-31T11:37:43Z,"no idea. but even if we readall() we still would need some extra allocation, since for ease-of-use we will need line-by-line data and each line split by their respective delimiter. unless we write a specific parser for this that it searches in the buffer to find the newline and then find the delimiters each time returning positions into the buffer."
222667462,5310,zeule,2016-05-31T11:57:38Z,"i do a lot of parsing of huge ascii tables for my daily work and thus i'm used to code which scans a buffer for newline symbols and other delimiters, so my vision is inclined to that side. thus i'm not the one who can decide whether a code without trimming an line splitting is maintainable (because yes, of course :) )."
222818526,5310,zeule,2016-05-31T20:58:45Z,"if there is a desire to get operations like trimming in a class-like way and work with a large continuous buffer, it might make sense to use a class like [code block] and `class buffer` with `string_range buffer::get_next_line()`. this way we may retain readability and avoid heap operations. don't know, does it worth to do that just just to load a filter file."
222827879,5310,sledgehammer999,2016-05-31T21:32:55Z,"i finished and pushed a quick hack for minimizing memory allocations during parsing. the results are very encouraging. results: [code block] of course it needs some cleaning up. don't be afraid to comment. there is at least one thing i want to do. instead of doing readall() i want to read in chunks of 20mib into a preallocated buffer. then parse the first chunk and proceed to load the next chunk into the buffer. i doubt we would need to do this more than 2 times. btw, is there a function that takes a string with start and pos and coverts to int? now i have to make small allocations out of the buffer for the access code and ips."
222830591,5310,sledgehammer999,2016-05-31T21:43:29Z,"imo, no it doesn't. neither my quick attempt is actually worth it. but you know what, i kinda get a good feeling when i code (or test other code) to make something faster and more optimized. it is a nice feeling even when it isn't for a time-critical part of the program."
222838254,5310,zeule,2016-05-31T22:17:23Z,"`strtol()` converts until it encounters a character which is not a valid digit. as far as i understood, you convert a part between commas. if you want to separate sub-strings, `strep()` inserts 0 instead of a delimiters."
222841193,5310,sledgehammer999,2016-05-31T22:31:21Z,"sorry i meant start and end positions. strep() doesn't comeup on google. i don't want to insert delimiters. i search for the delimiters. which is comma in the dat file. i just want to tell some function ""take this string starting from x and ending in y from this buffer and try to convert it to an int."
222843409,5310,zeule,2016-05-31T22:42:44Z,"sorry, `strsep()`"
224712112,5310,sledgehammer999,2016-06-08T20:09:18Z,minor update. strsep() looks promising. i also might use your `indexinterval`/`indexrange` classes to keep better track of things and be cleaner. i expect to finish this pr this weekend and also wrap-up things with the libtorrent package for ppa/travis. i really want this weekend to prepare v3.3.5 for release and then just wait for qt 5.6.1 which is rumored for release next week.
224713493,5310,sledgehammer999,2016-06-08T20:14:22Z,"lol. i didn't check today! anyway, then i should release this weekend."
225459268,5310,JonasNo,2016-06-12T20:44:54Z,"skimmed through this thread, love performance talk and didn't see any mention of it so i apologize if you have already tried it: reading a file line by line is usually slow. in my experience reading a bigger chunk eg 4k at a time will speed things up. how big the chunk needs to be varies but 4k is a good number to start with. too big or too small, it can hinder performance."
227027368,5310,sledgehammer999,2016-06-19T23:38:30Z,i pushed my first commit into master as a temporary fix. i just want to release v3.3.5 already. optimized fix can be merged later.
227913749,5310,zeule,2016-06-23T00:07:52Z,fyi: libtorrent master now requires c++11 too
230365472,5310,sledgehammer999,2016-07-05T00:10:31Z,"fyi: i have contacted the debian maintainer for libtorrent asking for hints and/or help packaging the new versions but he hasn't responded. the email was sent 24 days ago. he hasn't even updated the package on debian. from my limited knowledge i think debian has borked their python packages slightly and libtorrent exposes that. my last attempt is: figure out if libtorrent's autotools allow naming the lib a bit differently in a way that will allow side-by-side existence with the official package. then rename the package for the ppa and disable building the python bindings. the package should build correctly and it will not cause problems for other software in a user's machine (eg deluge). ps: sorry for the long and unannounced delay. i had to take unscheduled ""vacation"" time from online life."
232460923,5310,sledgehammer999,2016-07-13T19:27:39Z,"i opted using the qbittorrent unstable ppa to create a new libtorrent package without python. (python bindings is what breaks the package builds). and i put ""conflicts"" fields in the package for the python-bindings so a user cannot install it by accident while having eg deluge too. i'll wait to see if travis is ok and then i'll push final changes. i aim for a quick v3.3.6 release this weekend to fix the serious bugs of v3.3.5."
267832464,5310,zeule,2016-12-18T16:58:13Z,"in the meantime, libtorrent (1.2.0) started to use `string_view` class (either from c++ standard library (c++14 and up) or from boost). the class would make the parser to be much more readable."
296336161,5310,sledgehammer999,2017-04-22T01:03:21Z,"i finally pushed the new and hopefully final version. my non-scientific benchmark results for parsing a .dat file: [code block] /demigods please see the whole diff, not individual commits. also i am unsure how i should handle a malformed line. now, i log an error and skip it. but i wonder if it is better if i log the error but abort parsing the file. i worry, that if i encounter a bad line, the failures might cascade down to the other lines and create thousands of loglines and freeze of the app. furthermore, i intend to use the same method for parsing the .p2p filter format. it is very similar to the .dat filter format."
296340877,5310,tekko,2017-04-22T02:22:57Z,"imo breaking the parse is not a good idea since qbt would continue to upload and download without blocking many ip's. if you're worring about the freeze, may i suggest you to use a counter? at the end of the parse, log one error and say how many bad lines have been encountered?"
296348346,5310,Chocobo1,2017-04-22T05:10:25Z,"+1 parser should be robust to malformed input (no crash nor unexpected outputs), because if it's not, it's a security issue..."
296350001,5310,glassez,2017-04-22T05:46:44Z,i don't know the format of emule dat file. so if it line-based (e.g. one rule per line) the single malformed line shouldn't lead to malforming next lines and we can produce log messages for all bad lines.
296502169,5310,sledgehammer999,2017-04-24T00:58:09Z,pushed modifications. i think i have addressed all your comments.
296868322,5310,sledgehammer999,2017-04-25T01:47:09Z,pushed new commits based on your suggestions. interesting findings: 1. deleting memset() call shaves off ~100ms 2. not allocating memory to hold delimiter positions shaves off ~140ms 3. `std::vector ` is about 20-30ms faster than qvector . and both are faster than the raw pointer! now msvc64 parses the file in ~400ms. ps: after adding the other if-checks some ms time was lost.
296868461,5310,sledgehammer999,2017-04-25T01:48:16Z,i forgot to mention that the new mods are in separate commits to ease review.
297201513,5310,sledgehammer999,2017-04-26T00:15:47Z,made some minor additions. optimized p2p filter too. pushed to master. i wasn't really interested in squeezing more speed out of this(if any). it is already at subsecond parsing of a 12mb file.
297281166,5310,zeule,2017-04-26T08:06:08Z,a parser is fast enough when it is marginally faster than disk i/o :)
571238791,11833,sledgehammer999,2020-01-06T17:49:48Z,on another note: the tar header includes a `checksum` field. should i validate the checksum too?
571277516,11833,sledgehammer999,2020-01-06T19:28:07Z,i got the basic idea. i'll see if i can push something later today.
571859518,11833,sledgehammer999,2020-01-08T02:10:24Z,i have pushed a new version. i almost rewrote the whole `tar.cpp`.
571931231,11833,glassez,2020-01-08T07:50:03Z,"general review comment. i would implement it in form of ""stream reader"". this is a fairly effective pattern in terms of efficiency. in addition, it is better suited to our needs - we can easily apply the necessary restrictions without breaking the abstract unpacking mechanism itself. e.g. (pseudo code): [code block]"
572736051,11833,sledgehammer999,2020-01-09T20:15:40Z,"pushed new version. take a another look. it is supposed to work as a stream reader. not sure if i got the interface right. please focus reviews on `tar.cpp`. once the code is finalized, we can focus on the other files."
576055229,11833,sledgehammer999,2020-01-19T22:36:31Z,"i think i addressed the pending comments. **about returning a view:** is right. i was intending to introduce an additional function named `untarview()`, hoping that the naming will help future reviewers to catch improper use. while i was going to wire it up in `geoipmanager` class i realized that the db buffer is further passed down to other classes (eg the db parser/decoder). imo, it is incredibly easy in the future to change something in these ""downstream"" classes that will assume that we own the buffer or forget to copy it when assigning. a proper type(eg string_view/span) is imo obligatory for safe usage. so i opted to always return a copy of the data for the time being."
581170722,11833,sledgehammer999,2020-02-02T19:55:33Z,"i addressed your comments. the only thing i am not sure is about class `header`. i made its implementation private. but if you meant to take it out of the header file entirely, then i would have to implement `streamreader::m_entry` as a pointer and constantly new/delete it in the .cpp. is that what you meant? or any other way?"
581391679,11833,glassez,2020-02-03T12:29:11Z,i would have some pure struct here to store current entry fields (or even just appropriate fields in streamreader itself) and keep all the logic in streamreader class. otherwise you can have some private parser in .cpp (if you really need to separate parsing logic) that parses the entry header data and fills the appropriate fields of streamreader (e.g. returns the struct with parsed fields). you don't really need to store parser instance in streamreader class. it can be created just before parsing and destroyed after you store its result. otherwise you pollute the header with too many implementation details.
581639261,11833,sledgehammer999,2020-02-03T21:59:47Z,"you don't really need to store parser instance in streamreader class. it can be created just before parsing and destroyed after you store its result. otherwise you pollute the header with too many implementation details. yeah, after so many iterations it doesn't make to sense to keep the helper class for the current implementation. i removed the class and implemented it via anonymous namespace helper functions and streamreader member variables."
582358309,11833,ghost,2020-02-05T11:10:30Z,so what happens after this gets merged? will latest qbit installer ship with the latest geolite db as fallback? or are you going to make everyone register at maxmind for a license key (lol) i don't see how this will be useful for majority of the users who would probably never figure out how to do it. i think qbit should include the database in the installer. downloading using individual license will probably even flood maxmind with new registrations which are completely unnecessary.
583237824,11833,glassez,2020-02-07T05:14:11Z,"iirc, it's existing logic, although it seems weird to me currently..."
583724201,11833,ghost,2020-02-08T10:32:08Z,have you looked into alternatives like db-ip? [a link]
584424548,11833,sledgehammer999,2020-02-11T00:24:26Z,"yes, but i don't think i came across that one. it seems to serve the db in the same format as maxmind. it seems that all we have to do is change the url. should this pr be dropped? do we have any reason on not using that service instead?"
584454733,11833,Chocobo1,2020-02-11T02:29:39Z,"if it works, then why not? also this [a link]"
584524829,11833,glassez,2020-02-11T08:32:09Z,:+1:
585564171,11833,ghost,2020-02-13T05:54:17Z,"the url, db_type[], metadata_begin_mark[] and maybe some other things as well. apparently they don't use a static url like maxmind. it changes according to month. i got the db to load only by changing the db_type to dbip-country-lite. so it does work with qbit. now you just have to change the others stuffs to make it auto download."
585732629,11833,sledgehammer999,2020-02-13T12:30:07Z,"damn. actually i have implemented all necessary changes locally. i was waiting to polish the docs a bit. i did it in a hurry and didn't realize that the url has the date encoded in it. damn it. if i find time, i may send them an e-mail about this. alternatively, we could try our luck by ""guessing"" the next month's url."
585734857,11833,ghost,2020-02-13T12:36:26Z,guessing might work. dbip-country-lite-2020-month.mmdb.gz take value according to current month number.
585736722,11833,ghost,2020-02-13T12:41:48Z,you could also just use one subdomain from qbitorrent.org to redirect to latest version every month.
586455534,11833,sledgehammer999,2020-02-14T20:14:45Z,alternative pr implemented: #12014
586740636,11833,FranciscoPombal,2020-02-16T19:01:02Z,so is this superseded or are there any alternative plans for this?
586742747,11833,sledgehammer999,2020-02-16T19:23:21Z,superseded and will be closed once the other one is merged.
587505727,11833,sledgehammer999,2020-02-18T15:07:19Z,closing as superseded by #12014
491590453,10527,liuhe36,2019-05-12T12:14:56Z,"hi~,tag support for webui is very useful. so what's the release time of 4.2.0 version ? thanks."
495212588,10527,fusioneer-GitHub,2019-05-23T13:13:10Z,is there any other changes i should do to get pr approved?
497289464,10527,glassez,2019-05-30T10:49:20Z,"-github, are you kidding? why do you have these unrelated and incorrect changes here ([a link] do you want this pr to never be merged?"
500211121,10527,fusioneer-GitHub,2019-06-09T13:12:32Z,looks like we begin to go in circles here. is there any more constructive suggestions before we can resolve pr somehow?
500271861,10527,Chocobo1,2019-06-10T02:29:14Z,should we bump the web api version in this pr?
500289587,10527,glassez,2019-06-10T04:40:54Z,yes. unless such a bump has been since the previous release.
500301861,10527,Piccirello,2019-06-10T06:01:28Z,will try reviewing within the next couple hours.
500340900,10527,Chocobo1,2019-06-10T08:47:40Z,"ah, our wiki says it is still pending: [a link] . guess we'll bump it later. -github just a reminder. after this pr is accepted & merged, please document the new api in the wiki: [a link]"
500504555,10527,fusioneer-GitHub,2019-06-10T17:26:27Z,"fixed. hasn't been able to reproduce. maybe it was related to previous bug, that has been fixed at this point. i would rather wait for some kind of consensus before acting on api error handling."
500514838,10527,Piccirello,2019-06-10T17:53:09Z,i’ll retest later today with your new changes and see if i can reproduce. :thumbs_up_medium-light_skin_tone:
500694908,10527,Piccirello,2019-06-11T05:41:55Z,"-github i'm still able to reproduce the bug. i believe it's only the last tag in the sorted list that exhibits the behavior of returning to a count of 0. you can see below i had a tag of `one` with 1 torrent. i added the tag `new`, at which point `one` now displayed a count of 0."
501740207,10527,fusioneer-GitHub,2019-06-13T14:58:41Z,", sorry, i'm still unable to reproduce. tried different browsers, clearing caches, reloading client and/or server. can you give step-by-step instructions starting from blank setup or give more details about environment?"
502064704,10527,Piccirello,2019-06-14T10:54:32Z,"sure thing. from a clean state: example 1: 1. create new tag `b`. sidebar displays `b (0)` 1. assign a torrent to `b`. sidebar displays `b (1)` 1. create new tag `a`. sidebar displays `a (0)` and `b (0)` example 2: 1. create new tags `a`, `b`, and `c` 1. assign a torrent to `b`. sidebar displays `b (1)` 1. delete tags `a` and `c`. sidebar displays `b (0)`"
502271407,10527,fusioneer-GitHub,2019-06-14T21:29:36Z,"that one was tough. key detail was that torrent should have been updated via sync between setting it's tag and adding another one. , guys, what about error handling? should i do it or not?"
502300946,10527,Piccirello,2019-06-14T22:35:41Z,"let’s continue the api error handling discussion. i feel pretty strongly that the api should make every reasonable effort to bubble up errors and not swallow them. the client doesn’t have to act on them, but it should be made aware and have the opportunity to do so. it also affords third party clients more robust programmatic access. what do you think of this?"
502326793,10527,Piccirello,2019-06-15T02:18:30Z,tested and confirmed the bug is fixed :thumbs_up:
502333863,10527,glassez,2019-06-15T04:36:14Z,"sure. just a hell of a lot of free time... agreed. but we need to have a clear distinction between what causes the exception and stops further processing, and what just reports some ""problems"" during processing, but finishes the work to the end. unlike interacting with some interface within the same ""flat"" program, where some ""illogical inputs"" must be treated as a logical error, interacting in an asynchronous environment requires a different thinking. for example, the user selected some torrents in the webui to add some tags. but while its request reached the server, there could already be something to change, e.g. some of the torrents has been deleted. the server should not interrupt processing on such a torrent and return 404 error. it should finish the job and the error can be reported in the body of the server response (let the client decide what to do with it, depending on its implementation). second example. the client wants to create some tags. what does it really want? to make the act of creating each tag happen? no. it just wants these tags to exist after its request is executed. so if some tag already exists during the processing of the request, it is not an error. but if the sercer cannot create a tag (for example, an unsuitable name), then an error occurred. again, if we are talking about a batch request, the server must process the entire batch without interruption (errors can be reported in the body of the server response). actually (to be honest), our (existing) web api has incorrect error reporting/handling in many cases. we put it all together. but we should clearly distinguish between http errors and application errors. all application errors should be reported in application defined format in the response body (either with http conflict response code when some method cannot be finished at all or with http ok response when the method is finished with some non-fatal errors/warnings). e.g. if the client call nonexistent api method then it is ""not found"" http error, but if it pass nonexistent torrent as param to some method - it isn't. but i guess you don't want to change that..."
502427759,10527,Piccirello,2019-06-16T07:17:00Z,"respond at your leisure. we're all working on this project in our spare time. if a problem occurs while iterating, the problem should be noted and iteration should continue. agreed. i can think of two approaches: 1. page not found throws a 404, everything else gets reported in the body. 2. errors attributable to an api parameter will only throw if the parameter is static (i.e. same value applied to each iterator). an error with an iterated field should be reported in the body. for example, `deletetags(tags)` never throws, `addtags(hashes, tags)` never throws, `setcategory(hashes, category)` would throw if `category` doesn't exist, and `editcategory(category, savepath)` would throw for any error resulting from either parameter. i personally think http error codes are a great device until you need to represent multiple statuses. we can use them but will have to be very cognizant of what errors we should be throwing for. i think this approach could be more error prone, but could also have other benefits. curious to hear others' thoughts. i think we should have a standard response object. something like this (just a proposal): [code block]"
503449699,10527,glassez,2019-06-19T07:52:45Z,"i would formulate a more generalized requirement: 1. errors in the http layer are reported via http status codes, e.g., page not found (including non existing api method), bad request (from http perspective) etc. 2. all errors from api are reported in response body. only two http statuses are possible here: ok when no errors occurred (but there may be some warnings) and conflict when job is fully or partially fails (or even use ok status for all similar responses). i think its format will become more or less clear when (if) we start to standardize the existing api methods. one thing i don't like in principle is the 'split' status (`allsucceed: bool, all fail: bool`), which can have inconsistent values. so it is better to have one field of enumerable type (`status: int`), besides it can be expanded to indicate a large number of statuses. as for the current pr, you can leave comments with your suggestions for handling specific errors directly in the affected api methods code, and we will discuss them there."
503948317,10527,Piccirello,2019-06-20T09:16:36Z,"i agree with this approach. if we do return a 409, i think it should only be for full failure. to me, it seems more odd to return an error code on partial success than to return a success code on partial failure. can you clarify what you mean by inconsistent values? on my initial review i left a couple comments in specific places where we should be catching errors. we should be able to pick up from there."
503954014,10527,glassez,2019-06-20T09:32:45Z,both allsucceed and allfail are set to true.
503955741,10527,Piccirello,2019-06-20T09:37:44Z,any implementation of any specification can be incorrect. that's not a reason not to use it.
503978841,10527,glassez,2019-06-20T10:50:47Z,"there is no complete specification currently. we just start to define it. and this is the best time to get rid of the obvious shortcomings in it. using two variables to indicate mutually exclusive states is ""obvious shortcoming""."
503999353,10527,glassez,2019-06-20T12:05:08Z,"all the comments i was able to find contain suggestions of ""radical"" error handling methods that we rejected. i ask you to re-comment there taking into account the agreements reached."
505376973,10527,Chocobo1,2019-06-25T10:03:20Z,what is the current status? is there anything undone?
505505750,10527,Piccirello,2019-06-25T15:49:58Z,i've documented 4 cases where i think we should be handling errors.
508836046,10527,fusioneer-GitHub,2019-07-05T18:37:11Z,"i've added commit with minimalistic error reporting in json. what do you think of such error structure? for now there is no handling of missing hashes/torrents, but i'm not sure this should go in this pr."
508909909,10527,glassez,2019-07-06T09:03:28Z,"i would return this structure not as response but as a field of response. response should always be json object, so you can return error array as ""errors"" field of response object."
513744932,10527,fusioneer-GitHub,2019-07-22T11:00:18Z,error handling rolled back. rebased to latest master.
513853736,10527,Piccirello,2019-07-22T16:22:33Z,i will test this tonight.
514034954,10527,Chocobo1,2019-07-23T03:04:11Z,hope you didn't found anything broken... i'm waiting for this pr as merging others will cause conflicts to it.
514052312,10527,Piccirello,2019-07-23T04:47:12Z,"just got home, will be testing within the hour."
514154482,10527,fusioneer-GitHub,2019-07-23T10:35:16Z,fixed and conflicts resolved.
514647384,10527,Chocobo1,2019-07-24T14:07:46Z,-github thank you!
143653063,3810,glassez,2015-09-28T06:40:09Z,"1. we no longer use *.pri based structure in new code (and gradually get rid of it in existing code). now *.pri-driven folders are accepted for top level application parts only (app, core, gui, webui) and for 3rd-party components (like qtsingleapplication). so fix it in your pr (see core structure for example). also your multilevel folder structure is overkill. please use some structure as following: src/gui/notifications --- notifier.h --- notifier.cpp --- dbusnotifier.h --- dbusnotifier.cpp --- systemtraynotifier.h --- systemtraynotifier.cpp --- qtnotify ------- (qtnotify files with .pri since it's 3rd party) 2. fix coding style (see coding_guidelines.md). 3. to be continued..."
147703620,3810,zeule,2015-10-13T12:40:15Z,"i've changed the file structure as requested. was not able to find out the coding style violations. could you point out exact locations, please?"
147761998,3810,Chocobo1,2015-10-13T16:08:47Z,in case you haven't read our coding guidelines: [a link]
147780890,3810,zeule,2015-10-13T17:12:00Z,"thank you, , for your time! i've followed your remarks and tried to fix mistakes in the rest part of the diff."
148009029,3810,zeule,2015-10-14T10:39:47Z,"thank you again, ! i'm so inattentive... as for the newlines at the end of files, i do not understand you: the lfs at the end of files are present."
148017889,3810,glassez,2015-10-14T11:04:49Z,"it is what it is... :) at least, you still not fixed all comments on top of files (i mean copyright and qt instead of qt4/qt5). oops, sorry! i got used to the fact that the editors show it more intuitively (as a blank line at the end of the file). unfortunately, github does not."
150897883,3810,glassez,2015-10-25T07:02:59Z,"damn, your pr did not let me sleep tonight. i was wondering what's wrong. and i've finally figured it out. i used to get hung up on details, and i didn't like its implementation. but now i looked at it as a whole. you put some event handling in notifier code, and this, i think, quite wrong. it's like to create, for example, the button widget and to place ""button press"" handling in button code itself for all the possible uses of this button in the program. but the proper way is to emit ""press"" signal. this case is, of course, more difficult..."
150924723,3810,zeule,2015-10-25T13:50:35Z,"do you mean dbusnotifier::actioninvoked(uint id, const qstring &action_key)? afaik os x desktop notifications do not support custom actions, windows tooltips too. do you think somebody might implement a custom tooltip (with actions) for windows? otherwise actions handling code is specific for dbus notifications only. do i understand you correctly that you think that emitting signal here (dbusnotifier::actioninvoked()) would be more difficult? if so, why?"
150934631,3810,glassez,2015-10-25T15:24:54Z,"no. i only meant that the notifier is more complex than the button in my example. this is the main problem here. it turns out that these classes (systemtraynotifier and dbusnotifier) have not fully compatible interface, but you're trying to stretch it on both of them, with the result that it has a lot of excesses (not only in notifier interface but in its implementation too). but i have no answer to the question of how to do it nicely. i merely ask you to think about it. the first solution is not always correct. often, except for the ideas itself it doesn't contain anything correct. it's like a diamond: we found it, but the real value only after it gets cut. (i was drawn to the lyrics...)"
150937645,3810,zeule,2015-10-25T16:04:58Z,"well, i can think about a common sink for qbt, where all the messages are dumped (execution log?) and notifiers subscribe to it and select the messages which are needed to be shown on desktop."
150939037,3810,glassez,2015-10-25T16:27:33Z,cool! so we still something have ever. the next step of reasoning: notifier can connect to the desired signals of the desired objects directly (without any logs). this solves some problems.
150939226,3810,zeule,2015-10-25T16:31:30Z,"direct connection? this would create spaghetti-like code. plus, objects need to expose their internals instead of sending information to the common sink."
150949290,3810,glassez,2015-10-25T18:07:17Z,"you see everything in a bad light! there will be no spaghetti! there will be the usual implementation of the observer pattern in qt style. it already exists. we only remove redundant intermediary on behalf of the mainwindow. now we have: [code block] i suggest to change this to the following: [code block] mind you, we are not changing anything in the application core - it works as before."
150954448,3810,zeule,2015-10-25T18:48:08Z,"this is a good idea, indeed. then i start to work on implementation for gui and gui-less modes using this approach?"
150960150,3810,glassez,2015-10-25T19:18:45Z,i think this is a good starting point for your work. let's go!
153553810,3810,zeule,2015-11-04T02:43:18Z,"the next iteration. implemented as it was discussed here: - notificationsmanager is an observer of session - dbus notifications (and notificationmanager as well) work with `noguii`. as such all code except systray moved from gui into core the following things can be improved: 1. more events may be handled. 2. default action for notification (mouse click) might be used to select a torrent in the list (gui or webui). i believe this is useful if we start to show notifications when torrent metadata got loaded and the torrent contents become available. user may select files priorities, set files to skip. 3. a settings page for turning specific notifications on/off may be added."
159016245,3810,zeule,2015-11-23T18:13:27Z,"ok, let's move this mess into the application object."
193964830,3810,zeule,2016-03-08T21:00:04Z,"ups, sorry, forgot to push changes. give me a bit of time to update cmake files and then i'll push the changes."
194074285,3810,zeule,2016-03-09T02:21:25Z,: rebased
212108158,3810,zeule,2016-04-19T20:15:55Z,": could you look at this one more time and try to recall what did you want to change, please?"
212341388,3810,glassez,2016-04-20T09:13:08Z,"i'm not going to watch it entirely now. the main drawback here is you have mixed the gui and the underlying (base) code. at least it affects your **notificationsmanager** class, which adds gui dependency to base. it should be implemented something like this: 1. we have some basic (independent from gui) notificationsmanager implemented and used in base code. 2. we have notificationsmanager subclass in gui. 3. we instantiate either base or gui notificationsmanager in application. you can also implement this way other classes if they are subject to the same problem. p.s. now i don't pay attention to the details. i don't like the overall design. i'll see it more when you fix it."
212425021,3810,zeule,2016-04-20T13:32:01Z,"thank you for the detailed explanation! to go this way we have to: 1. create a hierarchy not only for the manager class but for the notification too. 2. as such, notification objects must reside in the heap and be crated via a factory. 3. gui code needs either use type cast with these notification objects or needs to know the exact type of the factory to use covariant return types. is that what you want?"
212440957,3810,glassez,2016-04-20T14:09:49Z,"in general, yes. but i do not understand what you exactly mean in paragraph 3. some example hierarchies and use cases would be very handy."
212499148,3810,zeule,2016-04-20T16:20:55Z,"now the code flow is the following: [code block] with the changes noted earlier, the code will look like: [code block] or in gui code: [code block]"
212529629,3810,glassez,2016-04-20T17:38:26Z,"well, something like that. but now i am confused more... shouldn't notificationmanager follow the observer pattern? i thought that it would observe events of other components..."
224118060,3810,zeule,2016-06-06T23:20:38Z,"pr updated. notifications manager follows the observer pattern. added possibility and gui to enable/disable individual notifications. the gui is weird now, because i plan to add some more widgets to that page (optional logging notifications to a file and probably to other destinations via an external command)."
321687133,3810,sledgehammer999,2017-08-10T22:10:05Z,"fyi, i approve this feature as long as it doesn't hard-depend on kde."
321688746,3810,zeule,2017-08-10T22:18:23Z,"my local copy of this contains half-finished work that allows user to configure notifications (disable, play sound, run a program, restore app window) for given event type. finishing that requires investing a time, which i don't have currently. not earlier than october. also code design requires significant improvements. thanks, it does not, afair."
592073070,3810,FranciscoPombal,2020-02-27T17:12:11Z,is this abandoned?
592080200,3810,zeule,2020-02-27T17:27:44Z,"i'm not interested in pursuing my prs anymore. there might be a useful bit here: fdo desktop notifications daemons can't access qbt resources and thus can't show icons in the tooltip. they have to be replaced with real file paths. icon themes for plasma provide ""cloud-download"" and ""cloud-upload"" icons."
611433007,12458,jagannatharjun,2020-04-09T09:36:42Z,"`qpainter::drawtext` seems to work but just to be sure i'm now using `qstyle::drawitemtext` in `logitemdelegate::paint` following font size is changed using stylesheet, before it wasn't possible. ![a link]"
612372652,12458,glassez,2020-04-11T09:06:21Z,what's the problem? what exactly is bothering you?
612387302,12458,jagannatharjun,2020-04-11T10:25:17Z,the newlogmessage is emitted from addmessage which can be called from different threads
612388042,12458,glassez,2020-04-11T10:29:20Z,yes. there should be no problem. according to the docs (i posted in my comment above):
612744165,12458,Chocobo1,2020-04-13T04:27:06Z,please fix all `extra ‘;’` warnings: [a link]
612744748,12458,Chocobo1,2020-04-13T04:30:14Z,and those: [code block] use `#if` conditional to differentiate qt versions. [code block] i would use a `static_cast ` on m_messages.size().
612745210,12458,Chocobo1,2020-04-13T04:32:26Z,"the ""g"" character bottom is cut off: ![a link] ps. all my tests do not use custom theme."
612747677,12458,Chocobo1,2020-04-13T04:44:28Z,"current master: ![a link] this pr: ![a link] notice in this pr, the selection bar has different height margins for top and bottom."
612749546,12458,jagannatharjun,2020-04-13T04:53:38Z,`qfontmetrics::horizontaladvance` is not available till 5.11 had to use ifdef.
612754948,12458,Chocobo1,2020-04-13T05:19:50Z,"i check out just before testing it, should be the latest. tested, now there is no cut off on character bottom. but both top/bottom margin still seems to be zero now. i don't understand. you'll need to be more specific."
612756872,12458,jagannatharjun,2020-04-13T05:27:53Z,"replicated on ubuntu, will try to fix it."
612760966,12458,jagannatharjun,2020-04-13T05:44:46Z,"![a link] have a look, it should be fixed now."
612763070,12458,Chocobo1,2020-04-13T05:54:01Z,"i confirm, it is alright now."
612777122,12458,jagannatharjun,2020-04-13T06:50:23Z,on windows. current master ![a link] this pr ![a link] there is extra space at the bottom. acceptable?
612800279,12458,jagannatharjun,2020-04-13T08:10:32Z,"~~seems like adjusted call on textrect was unnecessary~~ edit: it is, please ignore it"
612835006,12458,jagannatharjun,2020-04-13T09:55:16Z,![a link] stylesheets with margins ![a link] ![a link]
612905520,12458,jagannatharjun,2020-04-13T13:47:25Z,fonts are not scaling with windows scale setting ![a link] hmm
612913741,12458,glassez,2020-04-13T14:08:43Z,has qstyleditemdelegate the same problem?
612917995,12458,jagannatharjun,2020-04-13T14:19:20Z,"that's the weird part, following code will just work, even don't require setting text margin that i do in `logitemdelegate::paint`, everything will just work in all platforms even if i put the whole `logitemdelegate::paint` in the following code, it will just work, that's what giving me a headache. [code block]"
613214945,12458,Chocobo1,2020-04-14T04:08:16Z,which qt version were you using?
613326567,12458,jagannatharjun,2020-04-14T09:20:03Z,using 5.14.1 with 5.12.5 -> make text bigger -> 225% ![a link] scaling 175% ![a link] transferlistwidget scale well in both scenarios and both qt versions
613523552,12458,jagannatharjun,2020-04-14T15:51:29Z,"finally fixed it scalling 175% ![a link] ![a link] ""make text size bigger"" 225% ![a link] please have a look"
615017915,12458,Chocobo1,2020-04-17T03:28:53Z,"thank you! this pr is quite important in terms of perforamce, good work!"
200391651,4994,ngosang,2016-03-23T15:22:29Z,"i see the ""n/a"" string in the availability column in the main folder for a few seconds, after that it's working well."
200418095,4994,zeule,2016-03-23T16:14:15Z,"my target was to show what part of a file (dir) is available. therefore i compute the availability ratio as follows. - for a single file iterate through pieces, count those which are available from at least one peer and divide this count on the number of pieces for file. if there are no pieces available at all, return -1 which is show as ""n/a"" in ui. - for directory iterate over contents. if a content item availability is not equal to -1, accumulate the availability number and item size. return accumulated availability divided by accumulated size (see [a link], or -1 (""n/a"") if there were no available pieces found. of course, this method is not able to show how many seeders offer the file. perhaps, both values (which parts are available and how many seeders have them) can be shown together via colourful progress bar where hue is actively used. though this will look cryptic, i'm afraid."
200422022,4994,zeule,2016-03-23T16:25:04Z,"because the computation for a large torrent might be expensive, i decided not to recompute upon selection, but do it only in the usual progress update queue."
200428818,4994,ngosang,2016-03-23T16:37:58Z,align the text on the left: ![a link]
200468204,4994,zeule,2016-03-23T18:01:33Z,what text?
200564763,4994,zeule,2016-03-23T22:13:40Z,"yes, this is clear. but the text piece which he wants to be aligned is not marked in his screenshot."
200897134,4994,ngosang,2016-03-24T15:50:29Z,"i mean all strings are centered, i think will look better if all strings are aligned to the left."
203869920,4994,glassez,2016-03-31T10:25:37Z,", although i'm already tired doing this, but i will say it again - please fix the coding style. and please, try to do it before you publishr every your pr. ""follow project coding style"" does not mean ""correct indentation"" only."
203953797,4994,zeule,2016-03-31T14:02:14Z,", i'm sorry for that. fixed all violations which i was able to find and opened pr #5043. if there are any other rule breaks, then i can't find them. in that case, point me, please, on them."
203968721,4994,glassez,2016-03-31T14:39:26Z,ok. i'll check it out later. i hope you're not going to add something here.
204708521,4994,zeule,2016-04-02T12:48:27Z,"my general response: i want commits to be ""atomic"" i.e. contain only one change per commit. i will try to avoid mixing code style change with functional changes. if you like, we can tune together the uncrustify config, for example, to make it produce a code that will suit the project guidelines."
204714990,4994,glassez,2016-04-02T13:15:30Z,"i am finished with the coding style. i hope you will not forget to fix something. but if i missed anything, i will show it later when i will consider implementation."
209108200,4994,zeule,2016-04-12T21:22:13Z,"after using this feature for three weeks i can conclude that my expectations from it have been justified and i can now select a torrent for downloading a needed file(s). i do not download large ones frequently, but even that was enough to understand that for them this functionality does not help much. as it was pointed out by above, for those files it is better to see how many peers can give you a file. and, thinking of it, here is the idea. the ""availability"" column can provide a tooltip which shows a progress bar (that might look like the one in ""general"" tab) just for the hovered file or directory. the tooltip may also show a legend to read its colour coding. what do you think about it?"
209546539,4994,zeule,2016-04-13T17:01:38Z,": thank you for your input! do you want [a link] to be shown? i might be wrong but the challenge with it is that this parameter does not describe the state ""completely"" (sorry, forgot the mathematical term), i.e. one can not compute its value for a set of objects provided the values for the set members are given. the torrent content model has to perform lazy computation or cache some other additional values then. one the other side, a tooltip is shown after a dealy and only after user hovered the column, and hence computation will not be triggered on every model update. i will think about an optimal implementation of the original availability value, maybe something will come up. now, as the pr #5083 was merged, i can correct the style."
209546974,4994,zeule,2016-04-13T17:03:02Z,"moreover, can correct the style with pleasure :)"
209669046,4994,zeule,2016-04-13T22:09:17Z,": i was talking about the availability value for a directory and for the whole torrent. there is no problem, of course, to use the regular availability value for the individual files. but we have to recompute those values for each directory from the very beginning because the normal qbt availability values for the files on their own can not be used for that, they do not bear enough information."
261792274,4994,zeule,2016-11-20T17:34:45Z,"my new job does not leave me much time for such projects now. should there be an interest in merging one of my prs, i will work on it to make it happen. otherwise, i'm afraid, until the new year i can not devote enough time for qbt."
299933367,4994,zeule,2017-05-08T17:27:12Z,"/frequent-contributors: the problem with this pr is that numbers in the availability column are not the same as in torrent availability in the ""general"" tab: here it shows just fraction of available pieces, i.e. the number is always between 0 and 1 (0% and 100% in ui). i did not find a quick and memory-efficient way to compute proper availability values. if the current is ok with the project members, let's finish this pr, because i'm sure not only me will find this feature useful."
299964149,4994,zeule,2017-05-08T19:19:41Z,: corrected! i'm grateful to you for the observational reading!
300124708,4994,zeule,2017-05-09T10:29:22Z,": you see, they force me to do this. have no other choice :)"
300170473,4994,zeule,2017-05-09T13:50:32Z,pr was updated addressing comments.
300221491,4994,zeule,2017-05-09T16:27:38Z,"regarding the proper availability values: i renamed the function in `torrenthandle` into `availablefilefractions()`. when/if anybody comes up with a proper and fast implementation, it can be replaced. if implementation is not fast, it can be added alongside with this one. maybe this is a way to go and we can merge this pr?"
300311941,4994,zeule,2017-05-09T21:49:01Z,"on my laptop qbt with visible gui uses 8-9% of one cpu core. the implementation i was able to make raised that by 1-2%, and i consider that unacceptable. this is intentional except the last two. i made a fixup commit for each of the previous commits to clearly show changes for reviewers. when they ~approve~ review the changes, i'll squash everything down to original 3 commits."
300316611,4994,zeule,2017-05-09T22:11:09Z,", pardon, i must have mislead you: the method did not change. makes sense..."
300862170,4994,zeule,2017-05-11T17:35:18Z,waiting for review...
301103564,4994,zeule,2017-05-12T15:11:01Z,"thank you all of the reviewers! i squashed review commits and now this is ready for mergeging. since week in review has passed, once anybody formally approves this, i merge right away. , , please, approve it one more time."
301105091,4994,zeule,2017-05-12T15:16:31Z,": thank you and sorry. found a rebasement issue (formatting), had to push one more time."
301105908,4994,zeule,2017-05-12T15:19:36Z,"checked, everything seems to be in order."
301107188,4994,zeule,2017-05-12T15:24:16Z,: thanks!
917429834,15453,Mazino-Urek,2021-09-11T15:58:24Z,under dark theme: ![a link] ![a link] ![a link] under light theme: ![a link] ![a link] ![a link]
917430064,15453,Mazino-Urek,2021-09-11T15:59:47Z,reference #12965 #12169 #8406.
917438164,15453,xavier2k6,2021-09-11T16:55:09Z,"-imran can you address the file health issues please, (readme.md) #### trailing whitespace in lines: found 1 regression(s) extra space at the end of that line. #### too many trailing newlines: found 1 regression(s) too many extra empty lines after that line. #### typo: here is the following folowing color rgba used for icon uniformity."
917441869,15453,Mazino-Urek,2021-09-11T17:20:04Z,hope it is fixed.
917442127,15453,Mazino-Urek,2021-09-11T17:21:42Z,can i get a yes? i will tackle icon related user complain and maintain them until they are completely ready.
917443055,15453,xavier2k6,2021-09-11T17:27:12Z,"yep, thank you."
917443574,15453,xavier2k6,2021-09-11T17:30:38Z,"unsure of the use of `qbt-theme` in readme, maybe it should be just qbittorrent theme but i will let others decide. don't forget to address the text/icon matching colors (rgb) in transfer list as previously mentioned in previous pr's if you haven't done so already...haven't checked myself."
917449467,15453,Mazino-Urek,2021-09-11T18:12:40Z,"there used to be a folder in that name. it has been removed. yes, i have changed them based on the rgba scheme i have used."
918581841,15453,thalieht,2021-09-13T21:13:31Z,"all icons look good to me except for one and that is for a practical reason: the speedometer, it's not as easy to distinguish when it's off-on at a glance unlike the current one. not sure why that is."
918635795,15453,xavier2k6,2021-09-13T22:39:03Z,that bugged me too from original pr..... i'd use the 3 top left (free) speed icons from [a link] as they can be colored easily. **(you must attribute the author)** ![a link] [a link] [a link] [a link] example: ![a link] example of how `slow_off` could look in gui: ![a link] ![a link] example of how `slow` could look in gui: ![a link] (that bloody box around it (when clicked) is on the official/master builds too......i must open an issue for it) example of options: ![a link]
918737224,15453,ArcticGems,2021-09-14T02:15:26Z,"i really like xavier2k6 suggestion for the speedometer :thumbs_up: in most cases single color icons looks great, but the speedometer would benefit by having multiple colors like the ones in xavier2k6 comment."
918770413,15453,Mazino-Urek,2021-09-14T03:37:10Z,i want to use icon that are under gpl or mit license. let me try.
918843464,15453,ArcticGems,2021-09-14T06:19:27Z,is it necessary for `disconnected.svg` to have an exclamation mark? it's difficult to see as a small icon and isn't it enough that `disconnected.svg` is red??
918942615,15453,xavier2k6,2021-09-14T08:43:26Z,"if we are allowing this which i think is a great idea, then now is a good time to change the `categories` & `tags` icons from the folder icon `inode-directory.svg` in the left status window pane to their respective icons i.e. `view-categories.svg` & `tags.svg` (or similar) we could also give the ""check for updates"" an icon which would close #10110 ref.: [a link] it's difficult to see as a small icon and isn't it enough that `disconnected.svg` is red?? i agree with this or something similar to having the `dialog-cancel.svg` in-place or overlayed on top?! i still dislike the `edit-delete.svg`/`list-remove.svg` & `preferences-web-browser-cookies.svg` icons (prefer fontawesome ones) thoughts on using these: (sourced from flaticon author freepik) #### peers tab `edit-find-user.svg` [a link] ![a link] #### speed graph `office-chart-line.svg` [a link] ![a link] #### trackers ![a link] #### http sources ![a link] or ![a link] #### categories (left window pane) ![a link] it also indicates ""sub-categories"" this is what it would look like in the gui: ![a link]"
918946513,15453,xavier2k6,2021-09-14T08:48:37Z,"are `kt-set-max-download-speed.svg`, `kt-set-max-upload-speed.svg`, `ratio.svg` still relevant now? if not, then they should be removed & any other ones no longer in use. can the remaining `.png` icons be converted to `.svg` i wonder?"
918967072,15453,xavier2k6,2021-09-14T09:13:47Z,"also for ""documentation"", i think we should use something like: ![a link] or ![a link] and for ""about"" ![a link] (all of which are available from fontawesome)"
918988128,15453,ArcticGems,2021-09-14T09:40:40Z,"if we add the `dialog-cancel.svg` overlay, `disconnected.svg` would need to be a different color, otherwise it will have the same fault. another quick edit. you want something similar to this?? = ![a link]"
919038553,15453,xavier2k6,2021-09-14T10:52:11Z,"![a link] anything is better to me anyway than the ""drink with ice cubes"" icon (maybe red x) the icons should represent visually what the intended function is......."
919067509,15453,xavier2k6,2021-09-14T11:36:55Z,"the actual `webui.svg` should be used under ""options"" ![a link] not ![a link]"
919068842,15453,Mazino-Urek,2021-09-14T11:39:12Z,"lots of feedback. it will take some time. in the meantime, help me with the code part."
919069749,15453,xavier2k6,2021-09-14T11:40:41Z,"no problem, just let me or others know where you are stuck & we'll help when/where we can."
919077071,15453,Mazino-Urek,2021-09-14T11:51:47Z,which one of this works? ![a link] ![a link]
919077156,15453,xavier2k6,2021-09-14T11:51:56Z,"-imran the [a link] isn't your fault btw, it's been like that for a while......the original same icon was used in alot of places."
919078126,15453,xavier2k6,2021-09-14T11:53:26Z,"2nd one, exclamation mark. can you show one with just a `/` all the way through?!"
919080615,15453,Mazino-Urek,2021-09-14T11:57:20Z,i think this is a bit excessive. ![a link]
919082289,15453,xavier2k6,2021-09-14T12:00:04Z,"i meant a slash, not an x perhaps below icon could be used as connected: ![a link] for disconnected put a `red x` overlay on it or a slash `/`? or make the icon red itself. it gives a good indicator that the user is connected to the outside world or not?!"
919095476,15453,Mazino-Urek,2021-09-14T12:18:32Z,"for connected: ![a link] for disconnected: ![a link] this is subtle. but, it works."
919098514,15453,xavier2k6,2021-09-14T12:22:50Z,"works for me too, depending on how it looks in gui. :thumbs_up: ref.:[a link]"
919102698,15453,Mazino-Urek,2021-09-14T12:28:55Z,will this work? ![a link]
919106178,15453,xavier2k6,2021-09-14T12:33:25Z,"i don't think so, as speed graph shows up & down speeds etc. (again, only my opinion) the one i chose is similar to your original though & looks better/gives better representation."
919108441,15453,Mazino-Urek,2021-09-14T12:36:36Z,this one? ![a link]
919111653,15453,xavier2k6,2021-09-14T12:41:00Z,"nope, as i can forsee issues being opened by users thinking there's a bug in the icon. you original & this one don't meet at the corners.....slightly stick out. ![a link]"
919117760,15453,xavier2k6,2021-09-14T12:49:19Z,this is how my suggested icon for `speed graph` would look in the gui: ![a link]
919120558,15453,Mazino-Urek,2021-09-14T12:52:58Z,![a link]
919129575,15453,ArcticGems,2021-09-14T13:04:05Z,i think the green & red earth icons are great (checked by adding them to a qbit screenshot). :thumbs_up:
919141269,15453,Mazino-Urek,2021-09-14T13:16:37Z,think this is the best one yet. ![a link]
919145170,15453,Mazino-Urek,2021-09-14T13:20:40Z,"kindly mention the specific icon name. like, `connected.svg`"
919152605,15453,Mazino-Urek,2021-09-14T13:29:19Z,"for bug icon, this: ![a link] or this: ![a link] or this: ![a link]"
919161432,15453,xavier2k6,2021-09-14T13:40:02Z,"(speed graph) - that'll work as long as it's ok in gui regarding bug icon [a link] .......i'm not actually sure where that's actually used...if at all. to use `book-reader` or `book-open` etc. for ""documentation"" it's `help-contents.svg` to use `address-card` etc. for ""about"" it's `help-about.svg`"
919171228,15453,Mazino-Urek,2021-09-14T13:50:57Z,![a link] ![a link]
919172816,15453,Mazino-Urek,2021-09-14T13:52:36Z,can you check that? i can remove these icons then. let's tackle this after this pr. i will try my best.
919175886,15453,Mazino-Urek,2021-09-14T13:55:59Z,does this work? ![a link]
919178841,15453,xavier2k6,2021-09-14T13:59:13Z,"this was for others in the team as i know worked on a ""torrent options"" pr which subsequently removed these from the context menu....unsure if they are used in ""webui"" as i don't use that feature myself. there may be other icons that need to be removed. need more team feedback/input. they may even be removed........except of course for the `mascot.png`"
919182675,15453,Mazino-Urek,2021-09-14T14:03:07Z,"-team i am using and modifying some of your icons in this project. i was using la-capitaine-icon-theme for the project. however, for some shortcomings, i had to look for another source. as ionicons is under mit, i think it is ok to use the icons here. wanted to let you guys know that. thanks!"
919183857,15453,Mazino-Urek,2021-09-14T14:04:19Z,can you tell which icons are currently in use and which can be removed?
919187803,15453,xavier2k6,2021-09-14T14:08:24Z,here's a list of the final 5 remaining *.png icons. `loading.png` `mascot.png` `sphere.png` `sphere2.png` `splash.png`
919190812,15453,Mazino-Urek,2021-09-14T14:11:44Z,i thought they served some special purpose.
919193747,15453,glassez,2021-09-14T14:14:57Z,i'm unsubscribing for now... please ping me when it is close to completion.
919193964,15453,xavier2k6,2021-09-14T14:15:10Z,`mascot.png` is used in the about window i honestly don't know where the other 4 are used........it could be webui or macos/linux.
919200747,15453,xavier2k6,2021-09-14T14:22:31Z,"-imran i would suggest marking this pr as ""draft"" for now as it's still a wip"
919221496,15453,Mazino-Urek,2021-09-14T14:45:26Z,speedometer: ![a link] ![a link] ![a link]
919233638,15453,Mazino-Urek,2021-09-14T14:58:40Z,new cookie icon: ![a link]
919243785,15453,ArcticGems,2021-09-14T15:09:36Z,the new speedometer's indicator needs fixing = ![a link]
919263456,15453,xavier2k6,2021-09-14T15:30:39Z,"both seem ok, would need to see them in the gui"
919267591,15453,thalieht,2021-09-14T15:35:11Z,they are still used in webui. i don't know.
919283791,15453,ArcticGems,2021-09-14T15:53:37Z,-imran how about your previous speedometer icon in 2 colors (and the other will have a red indicator)?? = ![a link] ![a link]
919342201,15453,Mazino-Urek,2021-09-14T17:02:40Z,done. you guys have no idea how much trouble this speedometer icon has given me. i try to create clean and reusable icons. that is very hard. ![a link]
919345090,15453,Mazino-Urek,2021-09-14T17:06:15Z,not touching anything png related then. what else is left now?
919422673,15453,xavier2k6,2021-09-14T18:46:56Z,will have to look when i have more spare time.
919878668,15453,xavier2k6,2021-09-15T10:01:44Z,"-imran bug icon - leave as is (sad face) cookie icon - make more solid & chocolate chips see through or darker green/brown see, if you can come up with same/similar icons for `peers tab`, `trackers`, `http sources` & `categories` like in [a link] may have some other feedback but need to do some further testing/investigation on my end 1st."
919930834,15453,ArcticGems,2021-09-15T11:20:13Z,"after this is done, maybe update op so we can get a overview of whats been done?"
919944462,15453,Mazino-Urek,2021-09-15T11:42:47Z,do i have to create new icons for these or change existing icons?
920121973,15453,xavier2k6,2021-09-15T15:26:15Z,a mock-up for now will do fine....
920170037,15453,Mazino-Urek,2021-09-15T16:24:41Z,"updated cookie icon: ![a link] i think `edit-find-user` has already a good icon for small surface: ![a link] for track simply this will work: ![a link] for categories: ![a link] or ![a link] or ![a link] for `view-statistics` currently: ![a link] but, i am really liking this, and it might be more visible: ![a link] of course, change of color will be done."
920337556,15453,xavier2k6,2021-09-15T20:04:13Z,"-imran that seems way better. ____ ya, ok will go with that. ____ agree! create it & name it `trackers.svg` add `trackers.svg` to `icons.qrc` file replace `network-server` with `trackers` in these files: [a link] [a link] [a link] ____ we'll just stick with the one we have already sure. replace `inode-directory` with `view-categories` [a link] ____ will need to see it in gui. ____ tags: replace `inode-directory` with `tags` [a link] ____ regarding wrong webui icon in options replace `network-server` with `webui` [a link] ____ connection icon in options: `network-wired.svg` can be deleted & can be removed from `icons.qrc` file as it seems it's only used in `/src/gui/optionsdialog.cpp` replace `network-wired` with `configure` [a link] ____ that's as much feedback/help i can give for now."
920461030,15453,ArcticGems,2021-09-15T23:32:52Z,"i agree with xavier2k6 in [a link] when it comes to the `view-statistics` icon, the left one below here looks better as 16x16 and i also think that it will fit better with the other icons = ![a link]"
920727103,15453,xavier2k6,2021-09-16T09:10:20Z,"ya, would keep it as-is. there will be other ""webui related code"" changes required to reflect change in icons/new icon etc (this can be done later....)"
920784583,15453,Mazino-Urek,2021-09-16T10:35:22Z,should i change this to `trackers` as well? [a link]
920791060,15453,Mazino-Urek,2021-09-16T10:46:45Z,i have changed everything you have pointed out. thank you so much. i could not have done this without your help.
920791122,15453,xavier2k6,2021-09-16T10:46:52Z,"i don't see a reason not to, it can always be reverted."
920793117,15453,Mazino-Urek,2021-09-16T10:50:15Z,done!
920794121,15453,xavier2k6,2021-09-16T10:51:55Z,"you are more than welcome, i've been working on changing the `icons` myself previously & was going to create my own pr but..........alas time! if we get the `main gui` look & feel right - we can then concentrate on `webui` changes. i think there's something wrong with current transfer list coding.....need to investigate that more. (nothing to do with your changes) again, as usual i will wait for `appveyor` to finish successfully before approving/running `gha ci`"
920910814,15453,xavier2k6,2021-09-16T13:38:30Z,please change the `trackers.svg` color to blue to maintain consistency for some reason the `http sources` tab has the `trackers.svg` icon applied to it......haven't time to look further in to this. all other icon changes are looking good! ![a link] ![a link]
920915257,15453,Mazino-Urek,2021-09-16T13:43:54Z,done.
920918941,15453,Mazino-Urek,2021-09-16T13:48:10Z,i changed it to `trackers`. can it be the one causing problem?
920920939,15453,xavier2k6,2021-09-16T13:50:41Z,`http sources` uses the `inode-directory` icon
920963007,15453,Mazino-Urek,2021-09-16T14:39:46Z,kindly investigate the problem when you have time then. i am at a loss now.
920968332,15453,xavier2k6,2021-09-16T14:45:59Z,"don't worry, i will. can you update [a link]"
921003268,15453,Mazino-Urek,2021-09-16T15:26:38Z,done.
921075815,15453,xavier2k6,2021-09-16T17:03:14Z,change `inode-directory` to `view-categories` [a link]
921077633,15453,xavier2k6,2021-09-16T17:05:52Z,please revert
921080086,15453,Mazino-Urek,2021-09-16T17:09:27Z,done.
921084521,15453,Mazino-Urek,2021-09-16T17:15:56Z,do you want to address the webui with a different pr of this one?
921086931,15453,xavier2k6,2021-09-16T17:19:24Z,"this one should be fine, it'll only be changing icon names around etc."
921112064,15453,xavier2k6,2021-09-16T17:56:14Z,-imran you missed [a link] change `inode-directory` to `view-categories` in your repo it's this: [a link] also the `http sources` icon issue is because it was changed in your repo: [a link] change `trackers` back to `network-server` or `application-x-mswinurl` may actually be a better fit??
921139669,15453,xavier2k6,2021-09-16T18:22:56Z,"apologies can you change this back to `trackers`, was looking at something else! otherwise it causes: ![a link]"
921144653,15453,Mazino-Urek,2021-09-16T18:30:46Z,done.
921164647,15453,xavier2k6,2021-09-16T19:02:08Z,"[a link] [a link] you forgot to change this, for now just put it back to `network-server` please."
921178564,15453,Mazino-Urek,2021-09-16T19:17:15Z,"sorry, missed it. i got confused. now, it is done."
921200541,15453,xavier2k6,2021-09-16T19:54:10Z,-imran you've changed both instances of `trackers` in `/src/gui/properties/proptabbar.cpp` at lines 58 & 76? ____ change line 58 in `/src/gui/properties/proptabbar.cpp` back to `trackers` [a link] ____ leave line 76 in `/src/gui/properties/proptabbar.cpp` as-is as it's right. (i want it to display `network-server`) [a link] ____
921206738,15453,Mazino-Urek,2021-09-16T20:04:17Z,done. ![a link]
921207489,15453,xavier2k6,2021-09-16T20:05:31Z,"thank you!, this is the look i'm going for: ![a link]"
921216342,15453,Mazino-Urek,2021-09-16T20:19:15Z,looks brilliant.
921230982,15453,xavier2k6,2021-09-16T20:43:02Z,i think the overall gui now looks good (windows os anyway) ![a link] ____ color change requested - `preferences-web-browser-cookies.svg` to blue to maintain consistency.......
921238505,15453,ArcticGems,2021-09-16T20:55:46Z,:thumbs_up: i agree
921273825,15453,Mazino-Urek,2021-09-16T21:39:03Z,i use linux. all good here. will do the requested change tomorrow. i want to finish this as soon as i can. i have an important exam coming up.
921511142,15453,Mazino-Urek,2021-09-17T05:30:42Z,done.
921535094,15453,Mazino-Urek,2021-09-17T06:30:16Z,is this pr ok for review now?
921659597,15453,xavier2k6,2021-09-17T09:42:23Z,"we may need others to give feedback but it certainly isn't ready to be merged. (even if it is completed/merged, it more than likely won't be released officially until the next series or thereafter....4.4.x/4.5.x) #### todo: - webui icon name replacements, (we also added a new icon `trackers` etc.).......if we want it to look same/similar to main gui. (webui isn't really my thing/don't use it but have a sense of where changes may be needed,) - transferlist text color issues (this seems to be code related & may be affecting windows os only, unsure as haven't had time to fully check & don't have other os's to verify/discredit)"
921683616,15453,Mazino-Urek,2021-09-17T10:19:11Z,"i am not concerned with which version it gets released with. i just want it to be done properly. let's do this here. i think that should be tackled in a seperate pr. as with coding you could work fast, rather than me messing up constantly. i am using linux. i can provide feedback from that end."
921694699,15453,xavier2k6,2021-09-17T10:39:04Z,agree. more than likely right there. ____ ![a link] i seem to have found the issue & fix required for this!!
921735551,15453,xavier2k6,2021-09-17T11:51:32Z,i have opened #15478 for the `alternative speed` button issue.
921944118,15453,xavier2k6,2021-09-17T16:57:13Z,just checked the latest windows ci build & it seems you changed coloring of two icons. (didn't check anything else) the icons in question are: `stalleddl.svg` was changed to color `#c051db` `stalledup.svg` was changed to color `#af5cf9` ____ to coincide with the `filterstalled.svg` color `#686868` i would actually prefer for you to use these variants: `stalleddl.svg` color `#686868` `stalledup.svg` color `#909090` **fyi** any icons that are in the `filter list` have to be matched (text wise) in `transferlist` we have the icons the way we want them to look so we don't have to go messing with their colors anymore. (unless others request to do so)
921955096,15453,Mazino-Urek,2021-09-17T17:15:19Z,"i was experimenting with colors in a different folder. somehow, i made these two changes in the real repo. sorry about that. reverting it now."
922424135,15453,jagannatharjun,2021-09-19T06:44:44Z,"most icons have soft edges, maybe change these two also ![a link]"
922447567,15453,mzso,2021-09-19T10:04:29Z,"any theme files that a mere user, like i can try?"
922454373,15453,xavier2k6,2021-09-19T10:58:20Z,"this isn't a theme per-se, this pr replaces the current/default with these icons. ![a link] you can test what they look like with one of the latest iterations of -imran redesign icons with the relevant ghs ci [a link] / [a link] / [a link] builds ____ ![a link] you can test a revised/wip version with matching ""transfer list text"" of nowshed-imran's (redesign icons) with the relevant ghs ci [a link] / [a link] / [a link] builds"
922455323,15453,xavier2k6,2021-09-19T11:05:53Z,"do you think this is a bad thing?? ![a link] this has been subjective in the past! tbh, i like the look (color wise): ![a link] we also have to take in to consideration below: (this is where i would change it!) ![a link] i would leave the resume/pause icons in the edit ""menu"" as-is & change the resume all/pause all to be consistent with the overall theme look. i.e. (blue) it also helps to differentiate the separate actions."
922460964,15453,mzso,2021-09-19T11:49:54Z,"[a link] commented on [2021. szept. 19. 13:05 cest]([a link] ""2021-09-19t11:05:53z - replied by github reply comments""): i think that'd be horrible, already very different icons seem to have the same color. [a link] commented on [2021. szept. 19. 12:58 cest]([a link] ""2021-09-19t10:58:20z - replied by github reply comments""): sure, but a 2d grid of icons don't show me much. you kind of lost me. what's the difference between the two? and what's ghs ci? anyway, i see no way to set it to dark theme, which is my main interest. so far it's a bit worrying that stalled uploading/downloading category icons, which have rather opposing meanings have the exact same colors."
922462945,15453,xavier2k6,2021-09-19T12:04:52Z,"i had edited my post - you caught the old comment!, in your quote lol for reference: ![a link] this has been subjective in the past! tbh, i like the look (color wise): ![a link] _____ ok, well my post [a link] shows what they look like in the actual gui. the difference is: the 1st version, the colors of the icons will not match/be the same as the text that's displayed in the transfer list. the 2nd version - they do. slight typo on my end....it's actually `gha ci` this stands for `github actions ci` - these are usable test builds that are automatically created when a pr is created. i don't know what os (operating system) your are running but if you are running `windows` then i can help you with this. (please note though that the dark theme on windows doesn't work 100% with the application for now, but the overall look is a ""best effort"") also, note that this pr is just to replace the default icons - not to create an actual default dark theme! example: ![a link] reference: [a link] this is another example of how they would look in dark theme (linux, i believe): ![a link] they are not the same color, stalled downloading has a dark grey, while stalled uploading has a lighter grey. (see) ![a link] the 1st version of gha ci builds still has them at the same color, i agree but again this is all a wip (work in progress)"
922469065,15453,xavier2k6,2021-09-19T12:51:53Z,"can you test any of the builds below please? [a link] / [a link] / [a link] builds i changed filter list icon colors/matched with transfer list. (i removed the `bool` `if(!dark)` etc in `transferlistmodel` as for windows the `bool` seemed to have no effect or wasn't correct as the 1st color choice would be selected, for example the `stalleddl` & `stalledup` colors would remain black & same for others, hence why they are currently black on normal application with no theme applied.) [code block] i also removed: [code block] ____ i just want to see if it has a negative impact on other os's which may have a default `darktheme`"
922475070,15453,Mazino-Urek,2021-09-19T13:36:02Z,"should i change queue color from purple to orange? it would match the icon color then. stall icon is totally invisible in dark theme, shouldn't we do something about that? will this do? ![a link]"
922476203,15453,mzso,2021-09-19T13:43:12Z,"i am on windows, so ho do i enable dark theme? okay, but the op explicitly refrences dark theme, and i'm only interested in that."
922479852,15453,xavier2k6,2021-09-19T14:08:28Z,"-imran currently your version of queue icon is orange. that was from an old comment, we did do something about it already......we changed them to dark/light grey."
922480268,15453,Mazino-Urek,2021-09-19T14:11:47Z,not icon color. text color. like seed numbers `0(0)`.
922481759,15453,xavier2k6,2021-09-19T14:22:50Z,ah i know what you mean.....for now please leave them alone. i've changed/matched icons up in below: can you have a look/provide feedback please? [a link] / [a link] / [a link] builds
922499380,15453,xavier2k6,2021-09-19T16:20:37Z,"![a link] i like that!, also i think i get that the paused button should probably be changed to something like the `fontawesome` one or maybe we can use `stop`. ![a link]"
922505360,15453,Mazino-Urek,2021-09-19T17:04:19Z,"for pause. ![a link] for donation, i have found a unique icon. it can be used. ![a link] settings: ![a link]"
922507076,15453,xavier2k6,2021-09-19T17:16:42Z,"pause, donation, settings yep, from me."
922546304,15453,thalieht,2021-09-19T22:22:37Z,"did you test with those high contrast themes and it didn't work? that's strange because the transfer list's background with those themes is completely black. it does, (in windows too i believe) because `isdark()` works and removing it forces the same color for light and dark themes e.g. this is from your `translist_color` branch, ""completed"" and ""downloading"" are barely visible: ![a link]"
922558175,15453,xavier2k6,2021-09-19T23:51:57Z,"i just enable qt `darkmode` & change windows color to dark (choose your default windows mode/choose your default windows mode) currently in `master` / `v4_3_x` branch, both stalled icons are black & on normal/light the transfer list `text` matches this if you change/enable `darkmode` the text seems to change to white. relevant code: [code block] seems it doesn't & returns the very first color choice as i had pointed out previously which is `black` ____ check out screenshots of qbittorrent 4.3.8 light mode: ![a link] dark mode: ![a link] this is what i'm trying to achieve! these are not final colors for them........(experimenting)"
923061759,15453,thalieht,2021-09-20T16:01:35Z,"so this is a misunderstanding then. that code only changes color for fonts, not icons. that's the white :) well mostly, 255 x 0.80 (%) = 204 i don't think that's possible because there has to be some contrast with the background, especially for text where readability is vital. achieving that level of contrast on light/dark has the opposite effect on the other, see monochrome tray icons: both are almost invisible on the opposite lightness. imo the best you can hope for with one color is a mediocre compromise for both."
923124391,15453,xavier2k6,2021-09-20T17:19:42Z,on my end.....(in relation to the code part on how it chooses the text color) obvs. it's not going to pick black for `if!dark` :face_with_rolling_eyes: :rolling_on_the_floor_laughing: well out of the 8 icons from filter list that are associated with text from transfer list....they seem to look ok on your dark background......except for `completed` / `downloading` which are as i said are still being experimented with. these haven't been touched at all........yet. but could be matched with the overall theme color. example: ![a link]
925652712,15453,Mazino-Urek,2021-09-23T09:37:27Z,any update?
926159709,15453,xavier2k6,2021-09-23T21:06:44Z,"![a link] ____ according to the qt docs: [a link] [a link] looking at 3x `normal` system tray icon these are `1024x1024` :eyes: `qbittorrent-tray.svg` `qbittorrent-tray-with-font.svg` `qbittorrent_mac.svg` these could probably be resized to `32x32` like the rest of the icons.... monochrone tray icons: `qbittorrent-tray-dark.svg` `qbittorrent-tray-light.svg` these are already `32x32` from along time ago.....they could probably be re-tweaked from one of the normal tray icons above as a source?! -imran don't act on this quite yet, would require some more team feedback........"
926613203,15453,Mazino-Urek,2021-09-24T13:11:15Z,got it. i have an exam anyway. i won't be able work on these for a couple of weeks.
926715546,15453,xavier2k6,2021-09-24T15:25:12Z,:thumbs_up: best of luck!
943588819,15453,FranciscoPombal,2021-10-14T17:56:27Z,"apologies for not giving earlier feedback on this 3rd (4th?) iteration (though i'm surprised the maintainers haven't expedited this... i admire your perseverance). i am very satisfied with the results, no further comments other than what others have pointed out."
943664456,15453,xavier2k6,2021-10-14T19:34:25Z,"-imran when you are able, you can work your magic on the 5 icons in [a link] only a few more icon changes/additions (my preference) & we can focus then on matching `transfer list colors` & `webui` _____ `list-add.svg` ![a link] ____ `edit-clear.svg` (keep color red) ![a link] ____ `folder-remote.svg` (this is used for filters list & below icon better signifies that data moves around) ![a link] ____ `view-calendar-journal.svg` (this is used for show logs) ![a link] ____ `queued.svg` (make more solid, like below) ![a link] ____ ### new icons (don't forget to add to `icons.qrc`) `force-recheck.svg` replace `view-refresh` `auto *actionforcerecheck = new qaction(uithememanager::instance()->geticon(""view-refresh""), tr(""force recheck""), listmenu);` in `/src/gui/transferlistwidget.cpp` ![a link] ____ `torrent-creator.svg` (this may be a subjective / experimental change & may not look right in gui) replace `document-edit` `m_ui->actioncreatetorrent->seticon(uithememanager::instance()->geticon(""document-edit""));` in `/src/gui/mainwindow.cpp` ![a link] `"
944003784,15453,Mazino-Urek,2021-10-15T05:00:08Z,"i will address all this in mid-november. in the meantime compile tasks needed to be done. if version 4.4 gets out within that time, let's target this pr for version 5. as pointed out, these icons introduces breaking change, it will be more suitable, if it is done with qt6."
944113599,15453,xavier2k6,2021-10-15T08:42:17Z,"-imran i will assign this to the 5.0 milestone for now, this can always be brought forward if needed in the near future."
944565716,15453,FranciscoPombal,2021-10-15T19:05:45Z,-imran please see [a link] and the following comments.
944914299,15453,xavier2k6,2021-10-16T13:20:02Z,"i've read them & tbh i still hold the same opinion as my [a link] we're simply swapping out icons for others that are better suited for what they represent/describe & in some cases creating new icons to achieve this & an overall better look & feel / consistency. (we are not actually re-naming icons, although we could actually do this too........like dropping for e.g. `view` / `folder` prefix in-front of some icons.) personally, i think the gui is now in a better looking state than what it was previously. regarding the backwards compatibility for existing themes etc........i believe the last time the icons were majorly overhauled was back in 2018 & let's say we **all** agree to make these icons the default icons shipped with qbittorrent in say a `v5.x` series - it gives us time to announce these ""breaking changes"" in advance on the main website. if for e.g. the `filters list` / `bottom toolbar` & `transfer context menu` all had designated icons for what they represented 1st day, we wouldn't be having this discussion, so imo we are now righting a wrong."
944920020,15453,xavier2k6,2021-10-16T14:03:08Z,"edited: (taking note that it would ~break~ make previously existing themes incompatible) please ( :thumbs_up: / :thumbs_down: ) this post if you are for / against changes below: - making the icons from this pr as **default** - swapping out / creating new icons that suitably reflect what the intended function entails. - rewording of icons / respective prefixes. for e.g. `view-refresh` / `document-edit` to just `refresh` / `edit` or `refresh-update` / `edit-rename` etc. (where icons have a double purpose/meaning) if you :thumbs_down: the post, please reply / engage on what part you disagree with & why so that it can be discussed further before any other time / effort is spent on this pr by interested parties etc."
944921676,15453,FranciscoPombal,2021-10-16T14:14:40Z,"again i think we generally agree, but you might have missed or forgot to address my most important point - it's not a ""breaking change"" if there wasn't any **official promise of stability** concerning icon names in the first place. indeed, and because there never was any any **official promise of stability** of icon names, we have carte blanche to make changes as we see fit, whenever we want and without any sort of warning - no need to wait for 5.x or whatever. of course, we should still announce it on the website as a courtesy. additionally, like i've suggested, _after_ this pr is merged, we could also finally establish an official, stable ""interface"" for themes. among possibly other things, this would come with the promise that icon names won't suddenly change disappear. when changes are necessary, we would introuduce ""v2"" themes alongside ""v1"" themes, and issue a deprecation notice and timeline for ""v1"" themes to give time for theme authors to update before finally removing them. edit: i wrote this before you posted [a link] i have now voted."
944922970,15453,xavier2k6,2021-10-16T14:23:39Z,"i did get what you were saying / meant (although some might not see it as ""breaking changes"", some may) - i just want to give other team members a chance to have their say, hear their thoughts & to gauge if they're on-board with all / certain changes & either drop / address the appropriate changes. (see you voted/edited while typing this....) just want us all singing of the same hymn sheet! edited [a link]"
944923757,15453,Chocobo1,2021-10-16T14:29:13Z,"-imran for e.g. view-refresh / document-edit to just refresh / edit or refresh-update / edit-rename etc. (where icons have a double purpose/meaning) just making sure, are you aware that, in linux desktop, these names are for using the desktop environment theme icons? in other words, if you changed the name, the icon displayed won't be the native icon from the user's desktop theme but the qbt bundled ones. and that will be pretty bad for users who want to have native look n feel on qbt. as for other points, i'm neutral, not much interest for me to discuss."
944925069,15453,xavier2k6,2021-10-16T14:39:11Z,i wasn't aware of that no as i don't really use linux......surprised this didn't come up before as we've introduced newly created icons that weren't in qbittorrent before now.... e.g. `trackers.svg` / `tags.svg`
944926948,15453,Chocobo1,2021-10-16T14:52:33Z,surely i've mentioned it before: [a link] also another thing: afaik gnome & kde desktop have provided more icons than the official list so maybe it is worth to still find a matching icon from the native theme (even if it isn't in the official list) and only create new icon name if everything fail to match. official list: [a link] kde: [a link]
944927423,15453,Mazino-Urek,2021-10-16T14:55:38Z,"i use linux(kde) myself. there are not enough icons based on the standard set by freedesktop.org that would suffice the need of qbittorrent. kde and gnome both has exclusive icon names and icons. big projects like vscode, rstudio, dbeaver all uses own icons. i think qbt is big enough to provide that experience. besides, in linux, everyone uses personalized icon themes anyway. but, i agree to the part that we can try to find relevant icon name whenever possible."
944927820,15453,FranciscoPombal,2021-10-16T14:58:51Z,"of course, me too! the purpose of my comments was simply to remind everyone that we have more flexibility here than it might seem."
944928573,15453,xavier2k6,2021-10-16T15:03:37Z,"ok, it seems you did - but i wasn't really very active in that thread & over-looked it. however, now that you've brought it to the forefront here again - we can keep track of it. thank you"
944933107,15453,xavier2k6,2021-10-16T15:25:29Z,"-imran you removed 3 `flag` entries from the `icons.qrc` file but left the corresponding flags in the `/src/icons/flags` folder, what was the reasoning for this or was it an oversight? `flags/xk.svg` `flags/un.svg` `flags/eu.svg`"
944933465,15453,Mazino-Urek,2021-10-16T15:27:01Z,i have no idea how it happened. fixing it right now. done.
944934386,15453,xavier2k6,2021-10-16T15:31:31Z,"~ should the 3x flags be removed altogether, or perhaps just the `un` / `eu`?~ ~[a link] not really a concern see: pr [a link]"
973058813,15453,Mazino-Urek,2021-11-18T17:00:01Z,"i am back. i see some breaking changes again that will prevent merge. let's complete this, and then i will create a new pr."
973139318,15453,Mazino-Urek,2021-11-18T18:23:52Z,`list-add.svg` ![a link] `edit-clear.svg` ![a link] `folder-remote.svg` ![a link] `view-calendar-journal.svg` ![a link] `queued.svg` ![a link]
973178944,15453,xavier2k6,2021-11-18T19:17:23Z,"-imran those icons above look good to me, just the (torrent creator/force recheck ones) left.........you may also need to rebase your repo from master. also the windows gha ci is out-of-action currently, so i may be slow to give more feedback/help."
973769705,15453,Mazino-Urek,2021-11-19T05:38:07Z,"just review the icons for now. to me, git-rebase is really hard and confusing. i will create a new pr after finalizing the icons."
973782016,15453,Mazino-Urek,2021-11-19T06:08:51Z,force-recheck.svg ![a link] torrent-creator.svg ![a link] i really think this is not a good icon for this purpose. let me think a bit.
973788282,15453,Mazino-Urek,2021-11-19T06:23:23Z,torrent-creator.svg ![a link] this is my first choice. ![a link] this works too.
269850900,6156,okeatime,2016-12-31T05:40:52Z,sample screen shot please?
269869938,6156,zeule,2016-12-31T15:32:42Z,please: ![a link] ![a link]
270216671,6156,zeule,2017-01-03T20:32:36Z,pr updated: replace `qmimedatabase` with `qfileiconprovider` that results in qt 4 and all oses support.
270302233,6156,okeatime,2017-01-04T06:18:04Z,:thumbs_up: good job
273598008,6156,sledgehammer999,2017-01-18T20:51:47Z,i was so pumped but unfortunately this doesn't work on windows with qt 5.7.1(didn't test qt4). it seems to return an empty image.
273599755,6156,sledgehammer999,2017-01-18T20:58:40Z,possible explanation [a link]. it seems qfileiconprovider works if the file actually exists on disk.
273600527,6156,sledgehammer999,2017-01-18T21:01:31Z,and a stale qt bug report: [a link]
273634832,6156,zeule,2017-01-18T23:25:50Z,"this is pity, of course. the feature is really nice and useful.... except of patched qt for the windows builds or custom implementation of the same function i have no other ideas so far."
273636824,6156,sledgehammer999,2017-01-18T23:36:35Z,the only choice here it to do this only for the platforms that support it and fallback to our current code for windows. i'm in no mood to implement it in winapi. supposedly macos should work too.
273642066,6156,zeule,2017-01-19T00:06:37Z,", can you tell us, please, does it work in osx?"
295802022,6156,zeule,2017-04-20T16:28:22Z,pr updated: add a naïve win32 api based implementation for windows. ![a link]
295806840,6156,zeule,2017-04-20T16:40:54Z,", : could you help me to fix qmake build on windows, please?"
295821320,6156,zeule,2017-04-20T17:15:08Z,"yes, it does."
295822385,6156,zeule,2017-04-20T17:17:55Z,"apparently, qt build from cache in appveyor does not contain qwinextras module (why qmake is silent on this during its run?). if i use pre-installed qt (see the last commit) it compiles, but fails during linking because qtsingleapplication was linked with static runtime (btw, why?) while the pre-installled qt is linked with dynamic one. i give up."
295823934,6156,zeule,2017-04-20T17:23:51Z,i can do kind of a hack: declare [code block] (which is exported from qtgui library) and use it without qwinextras module. what do you think?
295869934,6156,zeule,2017-04-20T19:27:00Z,the hack is in its own commit now.
295873906,6156,zeule,2017-04-20T19:37:03Z,", i think we need your, as windows packages, opinion here regarding this hack: would you prefer to use the additional qt module winextras (albeit very small one) and update appveyor cached qt package to include it, or use this hack? actually, the hack is identical to the internals of winextras module."
295900436,6156,zywo,2017-04-20T20:37:13Z,just tested on ubuntu 17.04 and i don't know why it's not working. ![a link] ![a link]
295902676,6156,zeule,2017-04-20T20:42:10Z,"thanks, will check one more time a bit later."
296058568,6156,Chocobo1,2017-04-21T04:33:40Z,i prefer this option.
296119426,6156,zeule,2017-04-21T08:08:36Z,"because i forgot that for a long time i'm applying [a link] locally. obviously, current implementation will not work outside of plasma even if that patch get accepted. probably, i better return to `qmimedatabase`-based implementation for linux."
296166219,6156,zeule,2017-04-21T11:25:08Z,", tell, please, in what environment did you test?"
296208966,6156,zywo,2017-04-21T14:39:04Z,tested under unity7 and gnome des.
298235057,6156,sledgehammer999,2017-04-30T14:21:25Z,"of course i approve this. i have already said so in my previous comments. i can't remember why i didn't compile winextras. probably to minimize binary filesize (thats why the custom flags and static linking). i can't find a reason not to use winextras. imo, it is better than using a hack from their sources. (unless we code it ourselves). i know you didn't copy sources but: i want to remind everyone that if you copy sources you need to leave comment about where you got them. of course, copied code must be from compatible license. you said you're going to rework this so i am just waiting..."
298579925,6156,zeule,2017-05-02T09:41:05Z,"pr updated: add back implementation based on `qmimedatabase` and when `qfileiconprovider` does not seem to work properly, use it. , could you test, please?"
298618951,6156,zeule,2017-05-02T12:17:46Z,: all your comments except one were addressed.
298619700,6156,zeule,2017-05-02T12:21:10Z,: i've done with the changes. hope this works everywhere now. let me suggest to pack qtsingleapplication into a nuget package and switch over to the pre-installed qt in appveyor.
298625506,6156,zeule,2017-05-02T12:47:59Z,updated: fixed wrong condition in `mimefileiconprovider` implementation.
298748816,6156,zywo,2017-05-02T20:18:34Z,"it's not working, i get the same behavior as in master branch. ![a link]"
298757018,6156,zeule,2017-05-02T20:50:19Z,", thanks for the test! however, i'm puzzled, because this time i've tested in gnome myself and it is working. can you debug? i'm interested in `torrentcontentmodel::torrentcontentmodel()` code, where `static bool doesbuiltinproviderwork` is evaluated. so, if you can, please hard-set it to `false` and test. also, just to be sure, did you enable file icons in the advanced option page?"
298956773,6156,zywo,2017-05-03T16:03:26Z,"this is how it looks like under both unity7 and gnome shell, after enabling `use system file icons` ![a link]"
298958112,6156,zeule,2017-05-03T16:08:08Z,"so seems to be working, right?"
298960996,6156,zywo,2017-05-03T16:18:31Z,"yes, thank you."
298961672,6156,zeule,2017-05-03T16:21:07Z,"thank you for testing, ! /frequent-contributors: how shall we proceed now? what to do with windows builds?"
298996725,6156,ngosang,2017-05-03T18:31:10Z,more info for windows icons => [a link] i can test in windows 10 but i can't build... can test it
298999502,6156,zeule,2017-05-03T18:41:49Z,", thank you for the resource! i think we can live for a while with my simple implementation, because patch that fixes `qfileiconprovider` on windows is in review already. maybe it will make it into qt 5.9."
299713175,6156,zeule,2017-05-07T15:20:22Z,"fyi, plasma changes [a link]."
300023093,6156,zeule,2017-05-08T23:56:43Z,: shall i expect inclusion of winextras module in [a link] or should i produce my own set and upload it somewhere?
301263147,6156,zeule,2017-05-13T17:41:56Z,", i added already a similar code. and qwinextras module is needed exactly because of that."
302314562,6156,zeule,2017-05-18T06:37:28Z,": not only a review is needed, but what is more important, a decision on windows/appveyor packaging has to be done."
302491321,6156,zeule,2017-05-18T17:59:21Z,": i don't know how to do that with qmake. and we agreed here already that we use qwinextras, but not the workaround."
302813438,6156,zeule,2017-05-19T21:18:01Z,": ok, just for fun here is the version with configure-time selector which takes qwinextras function when module is available and uses direct import when not. the hack, however, is not that bad because in the worst case it fails to link and that's all."
304446964,6156,Symbai,2017-05-27T11:43:19Z,please add this to next release. this will be extremely useful!
304455105,6156,zeule,2017-05-27T14:27:22Z,: done.
304458290,6156,glassez,2017-05-27T15:16:13Z,"i'm confused, of course... but still qchar array to wchar_t array cast is not valid, isn't it?"
304458894,6156,zeule,2017-05-27T15:27:46Z,"i don't know, qchar array is array of ushort. what is wchar_t in windows? anyway, it is without any casts now. p.s. the code worked on windows 10 x86 ."
304652963,6156,zeule,2017-05-29T12:45:33Z,", is there anything you want to say? , what do you think about the very last commit (e53ad94)?"
304944514,6156,zeule,2017-05-30T17:06:26Z,"/frequent-contributors, with the last commit (4963c50) this pr can be merged right away and when finds a time to update cached libraries for appveyour, that last commit can be reverted to clean-up the code and switch over to qtwinextras. should we take this way?"
305102557,6156,Chocobo1,2017-05-31T06:59:56Z,"i think so too. it's a bit late to say this, maybe should prepend `qbt_` to `no_qwinextras`."
305122886,6156,zeule,2017-05-31T08:32:34Z,"you guys are right, that macro name is wrong. i was stupid: as any other qt module, qtwinextras module defines its own when used: `qt_winextras_lib`. there is no need to define a custom one."
305137480,6156,zeule,2017-05-31T09:31:43Z,pr updated: use `qt_winextras_lib` define instead of `no_qwinextras`.
305271215,6156,zeule,2017-05-31T18:11:21Z,: let's merge it right away and we can revert the last commit when updated appveyour libraries are ready?
305322119,6156,zeule,2017-05-31T21:24:49Z,: i've made an agreement with earlier. we agreed to avoid that hack. i can't just ignore that fact.
305341105,6156,thalieht,2017-05-31T22:53:31Z,/offtopic so it's not just me...
305545005,6156,sledgehammer999,2017-06-01T16:19:19Z,this is open in my browser tabs. this pr is amongst the 3 i have open. i am currently uploading v3.3.13. then work will start for finalizing v3.4.0 beta. and i'll start keeping up with prs threads again.
312511987,6156,sledgehammer999,2017-07-02T19:29:45Z,"i get the generic icons on windows, even though i build it using winextras. do you want me to debug some specific line?"
312516464,6156,zeule,2017-07-02T20:56:06Z,"yes, please. i'll add comment to the pr."
312517094,6156,zeule,2017-07-02T21:09:17Z,": most likely you did not enable an option in the advanced settings. if you say that the option is unneeded, i tend to agree."
312517147,6156,sledgehammer999,2017-07-02T21:10:17Z,i am sorry. i hadn't realized there is a setting that controls this. it works. however you need to restart qbt to make it work. is this an intentional limitation or a bug?
312517188,6156,sledgehammer999,2017-07-02T21:11:04Z,yup. i don't think it is necessary to have an option for this.
312517379,6156,zeule,2017-07-02T21:14:50Z,"it's a bug. however,... ...if we remove the option, the bug will be gone too."
312519686,6156,sledgehammer999,2017-07-02T22:01:08Z,"+1 just wait a bit, i'm in the process of building+uploading new package for appveyor with winextras. then you can also remove the winextras check too."
312519765,6156,zeule,2017-07-02T22:02:37Z,"super! could you ping me, please, when the new image is ready?"
312523683,6156,sledgehammer999,2017-07-02T23:33:37Z,"new files are uploaded. i also updated the appveyor config you use msvc2017, so be sure to rebase on top of master."
312603043,6156,zeule,2017-07-03T09:57:12Z,": thanks! pr updated: qwinextras module is used unconditionally, icons are shown unconditionally."
312645602,6156,zeule,2017-07-03T13:28:36Z,: done. sorry for the carelessness.
312670357,6156,sledgehammer999,2017-07-03T15:06:17Z,thx
312686960,6156,zeule,2017-07-03T16:20:31Z,thanks everyone!
314043275,6156,zeule,2017-07-10T08:43:18Z,fix for [a link] will be in qt 5.9.2. i'll submit a corresponding pr.
314081103,6156,sledgehammer999,2017-07-10T11:38:56Z,finally. although that qt shortcoming was mentioned/known a long while ago. at least the fixed it.
315556895,6156,vit9696,2017-07-15T19:34:54Z,i have just realised that this always returns blank icons on macos for anything but folders.
315621189,6156,zeule,2017-07-16T16:44:51Z,"thanks for pointing this out. unfortunately, i can't build qbt in macos so can not look into it right now. maybe next week..."
315622552,6156,vit9696,2017-07-16T17:04:31Z,"yes, it just gives iconforfile: empty path [a link]. and that's even when the files are definitely available on disk. cannot promise to look any soon on this either though."
316302615,6156,vit9696,2017-07-19T07:53:07Z,", ok, i tracked the issue down, and the merged code simply makes no sense to me from now on. [a link] building `qfileinfo` from the item does nothing but appends the current working directory to a relative name. to elaborate, imagine `name()` return `debian-9.0.0-amd64-netinst.iso`, in this case given working dir set to `/users/myuser/` the newly created `qfileinfo` will be built with `/users/myuser/debian-9.0.0-amd64-netinst.iso` path. and the actual file location could be `/users/myuser/downloads/debian-9.0.0-amd64-netinst.iso`. obviously icon lookup will always fail when the downloaded file resides in a folder different from the working directory. that's because `iconforfile:` needs an actual file, and you give it a completely invalid path. how does it even work on the other platforms? i do not understand why qfileinfo is even used here, especially since the detection could only happen by an extension, and since qfileinfo is believed to be slow. what needs to be done here (especially given that one should be able to see the icons before downloading anything) is just a plain extension-based lookup. so i enforced `mimefileiconprovider`, simplified it a little to avoid qfileinfo, and added some prints of the icon names and mimes: [code block] so far so good, but `qicon::fromtheme` from both of those returns a null icon. the docs say that this function appears to be a linux hack compatible with some kind of linux-only spec with an ability of gluing to a local icon database @. sounds mad and of course does not work, on macos you have [a link], which should be used in a similar way to [a link] :/. given the overall code craziness, could you please rework this? if you want to use file-based icon matching, please provide a valid file path. otherwise this should be eliminated for good, along with the ugly test attempting to achieve nothing. here is a [a link] required to get things work on macos. i could submit a pull-request with just this to make it in time for 3.4.0. or it could be used as a reference for the refactoring of this code by somebody else. cc , , , , ."
316305396,6156,zeule,2017-07-19T08:05:17Z,", thanks for the investigation! this makes no sense to me. are you saying that the `qfileinfo` objects contain actual full path (with the current directory for he moment of its creation)? lookup by file extension has to work with non-existing files. this means qtbug-25319 affects macos too. because it's a part of `qfileiconprovider` interface."
316307996,6156,vit9696,2017-07-19T08:15:54Z,"i am only talking about `absolutefilepath()` used by qt internally and by the windows icon lookup here. from what i can tell qfileinfo changes nothing itself and just does what you ask it. want absolute path → working dir gets appended unless the original path has already been absolute. in this case all the files are just filenames without even a torrent subdir prefix (see the prints above). yes, but what is the point of doing this when you already have mime-based search? this is not going to do any better unless you actually have the file at least partially downloaded, pass the valid path, have the data-based detection enabled. otherwise it is just unnecessary code duplication. qfileiconprovider is just a spike that helps nothing when you provide invalid paths that will never become valid to it."
316338699,6156,zeule,2017-07-19T10:11:06Z,"thanks, understood. mime database does not exist on windows, while `qfileiconprovider` give a uniform interface on all platforms. uniform interface. so, `qfileiconprovider::icon()` does not work on macos for non-existing files. you probably should submit a bug report to qt and submit a pr here basing on your investigation. also, i would recommend you to subclass `qfileiconprovider` instead of hooking up with `#ifdef` into the `mimefileiconprovider`. that would keep code cleaner and allow our descendants to easily remove the workaround when qt fixes the problem."
316344085,6156,vit9696,2017-07-19T10:34:28Z,"that does not work on anything but a couple of linux distros :d anyway, no reason for any further discussion. created #7118. as for bugreports there are way too many terrible and obvious qt bugs on macos for me to bother reporting them."
316382295,6156,zeule,2017-07-19T13:14:58Z,it works on windows too (qt 5.9.2 and later).
429928348,9704,zeule,2018-10-15T16:46:21Z,"i don't remember what change in the libtorrent api made me replace raw integers with `std::chrono` types, but it's probably for the good."
430011866,9704,zeule,2018-10-15T21:01:48Z,", i will address all your comments, but i want to make it compile first and set the ci up."
430092028,9704,glassez,2018-10-16T03:55:19Z,ok. just ping me when i should start reviewing.
430174114,9704,zeule,2018-10-16T09:47:52Z,/frequent-contributors: do i need to achieve compatibility with the libtorrent 1.0 branch or will we drop it with this pr?
430190415,9704,glassez,2018-10-16T10:44:27Z,"as i said before i would drop it. has the deciding vote on these issues, so we'll have to wait for him."
430275884,9704,glassez,2018-10-16T15:09:57Z,", , is using chrono types strongly required to support libtorrent-1.2?"
430276741,9704,zeule,2018-10-16T15:12:13Z,", libtorrent api uses chrono::duration, maybe other types too. i see no reason to convert them into raw integers for qbt internal use."
430286222,9704,glassez,2018-10-16T15:37:07Z,ok. i was just confused by your previous comment about the fact you don't remember why you became use chrono types.
430809837,9704,zeule,2018-10-17T22:20:29Z,restored c++11 compatibility. please review. i will work on qmake and travis problems.
430981660,9704,glassez,2018-10-18T12:00:49Z,i'm reviewing it now. please don't rebase until i finish.
431012942,9704,zeule,2018-10-18T13:41:44Z,take your time.
431338611,9704,zeule,2018-10-19T11:55:52Z,"as the next step i want to sort out all the typedefs and to do that i can either mirror libtorrent types in qbt and make those typedefs depend on libtorrent version, and do that with indicies, download priorities, maybe with some of the flag types. this way we consolidate most of the `#if libtorrent_version_num` commands. from the other hand, we duplicate quite many types. from the other hand, the typedefs can be bypassed via auto-typed variable and lambdas. for how long qbt plans to support libtorrent 1.1? when c++14 will be a hard requirement for qbt? your thoughts? thanks!"
431375259,9704,glassez,2018-10-19T14:07:29Z,"this question should sound like ""for how long plans to support libtorrent 1.1?"". unfortunately, the community has little influence on strategic decisions in this project. based on previous experience... for how long qbt plans to support libtorrent 1.1? long. perhaps until next after v1.2 libtorrent release. we're still not sure if we'll drop support of libtorrent-1.0. when c++14 will be a hard requirement for qbt? hard to say... what is its support by the most used compilers (their most used versons)?"
431379492,9704,zeule,2018-10-19T14:20:20Z,"gcc supports that from version 5, released in april 2015 ([a link], [a link] clang supports c++14 as of version 3.4, released in january 2014 ([a link], [a link] msvc? visual studio 2015 seems to be enough for our needs. released in july 2015. concluding, i don't understand why do we stuck on c++11. for old ubuntu and fedora versions? but there are toolchain backports for them. p.s. even qmake supports c++14 as of qt 5.4 (we require > 5.5)."
431390107,9704,glassez,2018-10-19T14:52:01Z,"i always think about linux distros when it comes to the brakes of supporting new features. afaik, qmake has nothing to do with c++ standards except having some predefined settings (which can be defined manually in previous qmake versions). as for me, i am always for a reasonable movement forward. if c++14 has sufficient support, why not adopt it?.. but, as i mentioned above, did not delegate to the community the right to address such issues. we can only express our opinion."
431394406,9704,zeule,2018-10-19T15:04:54Z,"c++14 is advertised as a little improvement to c++11, but with this pr and after porting over changes from 14 to 11 i realised that those little changes result in significantly different routes when writing code (auto typying in c++ 11 is defective). realising also that c++14 is imminent ether as 14 or 17 for the project, i don't want to waste time and efforts in rewriting code. , i want your decision on these matters, please."
431560441,9704,glassez,2018-10-20T08:25:56Z,"well, now i have a general overview of all the changes. i still didn't go into some of the details (intentionally). in addition, i tried not to comment on the coding style, because its time has not yet come. here is my main conclusion. a significant part of the changes is related to the propagation of using the chrono types throughout overall the qbittorrent code. at the same time, it is not required strictly for adding support of libtorrent-1.2. although libtorrent-1.2 uses chrono types, we can easily localize their use only in places of interaction with libtorrent, and leave the main code untouched at this stage. we can switch to using them in a separate pr. leaving it here, you condemn the pr to be unmerged within indefinite time. there are already a lot of changes that need to be discussed and improved. so i would strongly recommend that you get rid of all additional (not strongly required) changes."
437681343,9704,zeule,2018-11-11T15:51:17Z,i convert it back c++14 then.
447558568,9704,glassez,2018-12-15T10:40:06Z,", what is the status of this pr?"
447562655,9704,zeule,2018-12-15T11:48:39Z,"i hardly have any time for qbt until january, and the pr is stalled."
457717717,9704,hvonw,2019-01-25T20:33:35Z,"hi friends, thank you for excellent work you guys put in to this projekt. a lot of bugfixes, improvements on libtorrent 1.2+ changelog. it would be really good to synchronize with this master branch. we'd appreciate it if you'd let us know."
467870848,9704,WolfganP,2019-02-27T13:57:24Z,just a quick question. shouldn't qbittorrent be compiled against [a link] instead of [a link] as the former is more stable and curated by the author? (somewhere in the wiki -that i can't find now- it was suggested to link qbt master with libtorrent rc_1_1 when developing)
467913505,9704,arvidn,2019-02-27T15:45:22Z,"at the time this pr was opened, `rc_1_2` had not been cut yet. so ""master"" in this title, refers to something very close the the 1.2 release of libtorrent"
536649237,9704,glassez,2019-09-30T16:48:43Z,we don't support libtorrent master in general case. libtorrent-1.2 is supported now. shouldn't this pr be closed now? ?
536863188,9704,Chocobo1,2019-10-01T04:52:33Z,agree.
162272487,4266,naikel,2015-12-06T05:32:34Z,reverted the unnecessary alignment changes of options.ui.
162330109,4266,sledgehammer999,2015-12-06T17:18:29Z,rebase.
162337790,4266,naikel,2015-12-06T19:14:22Z,rebased and fixed camelcase.
162345874,4266,sledgehammer999,2015-12-06T20:41:25Z,i think we should relax the camelcase rule. it is a pain in the ass when you are moving old code around without actually touching it but you have to read it and fix it to be camelcased.
163122243,4266,glassez,2015-12-09T06:19:24Z,"otherwise it will be a pain in the ass for reviewers to distinguish new code from displaced. i have no trouble in correcting such names. qtcreator does it perfectly. just have to find the wrong names, but it is also not difficult: they just cut look. besides, if someone misses something, the other reviewers remind him."
163658649,4266,Nemo-qB,2015-12-10T15:28:11Z,looks great naikel! very useful when seeding.
163667096,4266,naikel,2015-12-10T15:51:40Z,"-qb thanks! i rebased and made a little cosmetic change since the word ""minutes"" was missing in the webui: ![a link]"
167680470,4266,naikel,2015-12-28T23:48:23Z,"fixed this line to have a default value: [code block] because without it, people who upgraded to this version and had seeding torrents would see them all stopped because they would have reached the max share time ratio of 0 minutes! but now upgrades work great as well."
168555552,4266,naikel,2016-01-03T23:44:49Z,rebased. no love for this pr? :cry:
170418389,4266,naikel,2016-01-11T02:27:03Z,i wonder if this can make it to 3.3.2 or 3.4.0?
171073301,4266,naikel,2016-01-12T22:00:21Z,"rebased. you can clone this branch in my repository and use the feature until merges it. i've been using it since october, can't live without it!"
175703154,4266,naikel,2016-01-27T15:55:26Z,rebased and retested. you should merge this when you have the time.
180099367,4266,naikel,2016-02-04T23:23:01Z,"sure, but will this ever be merged? it's ready since oct 27th..."
180136452,4266,naikel,2016-02-05T01:14:45Z,"i can't rebase because ""master"" right now crashes when i click ""options"", so it's totally unstable :cry:"
180823241,4266,naikel,2016-02-06T18:01:54Z,"what i meant is that the master branch here on github without any of my patches crashes when i click ""options"". [code block] so i guess should fix this first until the master branch is stable again."
180875617,4266,naikel,2016-02-06T22:36:49Z,"i actually see what the problem is. the new addrow() method in advancedsettings is assigning a boolean as a return vale of connect, but connect doesn't return a boolean, but a qmetaobject::connection instead. so the assert at the end will always hit: [code block] this only happens on debug builds. i will continue my rebase, but this has to be fixed..."
180921845,4266,Chocobo1,2016-02-07T02:36:27Z,"sorry about that, please do fix it."
181497254,4266,naikel,2016-02-08T17:54:34Z,cool!! :+1:
192540418,4266,naikel,2016-03-05T00:56:31Z,i'll work on it
210895759,4266,ngosang,2016-04-16T20:38:54Z,tested and i can't find anything wrong. could you tag for 3.3.5?
211406857,4266,naikel,2016-04-18T14:37:01Z,coding style fixed where noted.
211408250,4266,glassez,2016-04-18T14:41:09Z,still not fixed in `void updownratiodlg::accept()` method body.
211438222,4266,naikel,2016-04-18T15:42:20Z,i put the { in the next line like you told me. is there anything else left to fix there? edit: i think i got it: the if.
211451881,4266,glassez,2016-04-18T16:16:35Z,"yes. but it still not fixed. please check out coding_guidelines.md to begin with, otherwise you'd have a lot of time to ""fix"" it."
211455094,4266,naikel,2016-04-18T16:23:53Z,"i see it. maybe this is the only project you work on, but when you work in dozens of projects, each one with a coding style totally different than the next one, it's pretty hard to remember."
211460642,4266,glassez,2016-04-18T16:34:53Z,and what do you suggest? still unfixed. either drop braces in `if` clause or add them to `else`.
211465629,4266,naikel,2016-04-18T16:42:23Z,thanks. i chose to drop them then.
213935602,4266,ngosang,2016-04-24T10:50:53Z,after this is merged i will love to have a similar feature to stop sharing when one torrent have more than xx seeds. what do you think?
214713669,4266,DrKittens,2016-04-26T11:41:03Z,personally i'd think that would be a seperate pr as its unrelated to this time-based pr. i'd love to see this functional 5month old pr merged into master branch sometime soon please.
269691440,4266,elesto,2016-12-29T20:50:19Z,what happened to development on this?
269910323,4266,naikel,2017-01-01T16:55:25Z,"since this pr has more than a year and never was merged, i just thought the main developers weren't interested and gave up."
269920157,4266,naikel,2017-01-01T21:20:50Z,"i rebased this pr again. i have to admit i'm a little sad this pr has never been considered for a merge. it is an important feature. not everybody can seed forever. some of us have a high rotation of short-lived torrents and this feature works extremely great (with another pr i haven't published where a completed torrent means a torrent that has finished the download and the seeding). some others have limited storage space and have to get rid of their downloads quickly. others have an extremely expensive upload rate and can't bear to keep torrents seeding forever. there's always a request for this feature in the issues section, always, since the beginning of this project. i'm literally amazed this hasn't been merged. i have a setting of 15 days (in minutes) and works perfectly. looks like the main developing team is not interested in this pr. i try to keep it rebased from time to time for the people that is compiling qbittorrent by themselves and merging this pr individually, and i know several people that do this."
269924955,4266,elesto,2017-01-01T23:41:59Z,please :thumbs_up:
269934328,4266,naikel,2017-01-02T04:52:50Z,"the second pr i mentioned changes the definition of the completed status of a torrent and the main developers do not agree with this vision. i'll elaborate: what i think is natural is this: - downloading: a torrent that is currently downloading - seeding: a torrent that finished downloading and it is currently seeding - completed: a torrent that finished downloading and seeding, so it's paused because its job is done (blue paused icon) - resumed: a torrent that is either downloading or seeding, not necessarily active. - paused: a torrent that is paused because user paused it or because it's completed. - active: a torrent that is currently transferring something. - inactive: a torrent that is not transferring anything. but the qbittorrent team defines the completed status like this: - completed: a torrent that finished downloading (but might be seeding) and this is redundant with seeding torrents because a torrent has to have finished the download to be seeding. so that's a mistake in my humble opinion. a completed torrent must have finished all their jobs, downloading and seeding. so i have this nice pr where the completed torrents section include only torrents that are really finished (download and upload), mostly because they reached their share ratio or the seeding time limit."
269934873,4266,naikel,2017-01-02T05:06:34Z,not really. if you look at the code it says: [code block] but it should be: [code block] and that's exactly what my pr does (that and in the webui code as well)
269934963,4266,naikel,2017-01-02T05:10:04Z,"oh... good idea! i have to admit i never thought of that... i get it now. it can go in the advanced options section, like you suggested."
269953468,4266,thalieht,2017-01-02T10:14:18Z,only in minutes? we'd need a calculator to determine the days.
269971767,4266,naikel,2017-01-02T13:21:27Z,don't be lazy.
269982286,4266,zywo,2017-01-02T14:54:01Z,"unfortunately, the merging of many useful prs is very very slow for a project like qbittorrent."
270777968,4266,naikel,2017-01-05T22:35:59Z,fixed coding style.
272294893,4266,naikel,2017-01-12T21:50:36Z,removed the unnecessary this-> references.
274341715,4266,naikel,2017-01-22T16:37:47Z,it seems travis builds were fixed so this pr is ready to be merged (again).
275849608,4266,naikel,2017-01-28T13:57:59Z,still no love for this pr?
279131319,4266,WaterSibilantFalling,2017-02-11T09:04:42Z,just a user comment here: i'd really like to use this functionality too.
279259131,4266,sledgehammer999,2017-02-12T23:10:28Z,sorry for the delays. i am currently in the process of reviewing+merging a lot of **old** prs. eventually i'll get to this one too. i hope you can wait.
285083609,4266,naikel,2017-03-08T16:05:35Z,i hope this can make it for 3.3.12!
288279617,4266,Nivius,2017-03-22T02:27:33Z,i have been waiting for this function for ages now. and so have loads of friends and colleagues. this is the last feature that qbittorrent need to turn from a great client to the client imo. hope this makes it into 3.3.12! ༼ つ ◕_◕ ༽つ take my energy ༼ つ ◕_◕ ༽つ
288322886,4266,thalieht,2017-03-22T07:51:07Z,tagged issues to add in a future commit or pr name to close them. #1646 ~~#4519 #4897 #5815 #6153~~
288332049,4266,zeule,2017-03-22T08:38:27Z,"thank you, will close all those issues as duplictes."
295768362,4266,Nivius,2017-04-20T15:00:07Z,is t here anyway that we can use this feature before its officially included??
301350936,4266,naikel,2017-05-15T00:30:54Z,i made the suggested changes and rebased. retested everything with several torrents. everything look good.
301483353,4266,zeule,2017-05-15T13:59:09Z,", sorry, but it has a conflict again. could you rebase again, please?"
301497617,4266,naikel,2017-05-15T14:46:01Z,rebased again
301524108,4266,naikel,2017-05-15T16:12:30Z,"jesus christ i think i'm gonna give up. you guys are never happy. this request is from december 5th, 2015. you had a lot of time to review it. now it looks everything is bad again and i have done nothing, just apply your changes every time you guys request them. i think it's better for all if i just close this. this will never be merged. not even if i fix everything, you guys just don't want this feature."
301526373,4266,naikel,2017-05-15T16:20:40Z,"because it won't reenable the apply button if you modify the seeding limit, just the comboratiolimitact, and then you wouldn't be able to apply your changes."
301526732,4266,glassez,2017-05-15T16:22:03Z,", calm down, please! in fact, this pr is close to being merged like never (this is due to the recent changes in the organization of the project). i really had not considered this pr previously due to the fact that i do not could affect the possibility of its merging, and the feature itself is not interesting to me. now i'm one of those members who can merge prs collectively without the participation of the project maintainer (who is very busy and has little time for this)."
301528553,4266,naikel,2017-05-15T16:28:51Z,"i'll make the changes. but i will also fix the same functions that have the same problem just to be consistent. what i mean is, if you want me to fix this: [code block] the variable is totally useless, i know. but why i did it? because just a couple of lines before there's this code: [code block] then i have to fix that as well, and that's not my code, but it would look totally weird that both code sections look different. the same for the ""else"", i follow the code guidelines in new methods that i introduce, but when i'm modifying an existing one, i could be a little flexible just to follow the code guideline of that method specifically, because i think some other developer is working in fixing all the code in parallel. so i'll take the liberty to fix the original functions that i copied to be consistent"
301530051,4266,naikel,2017-05-15T16:34:08Z,"i understand, and they should be strict since i'm strict with the code at my job as well, but even so, something like 75% of the code doesn't follow the guidelines... i wonder what happened."
301536262,4266,Nivius,2017-05-15T16:57:03Z,"you can do it! this is a highly requested feature for a lot of people, it's just that most people don't go this deep to ask for it this addition whould make my my process 100% automate from 90% right now. i really hope that you cna find strength to work it thru! is it responsibility to fix code that is not relevant to his part and have that block the merging for his part?"
301541372,4266,glassez,2017-05-15T17:16:06Z,", thank you! , really the tightening of coding style has been done recently and there is still a lot of old code that doesn't follow it. this is not a reason to break it in new code. other errors in the code (previously undetected) is also not a reason to emulate them. and yes, we do try to correct the noticed deficiencies in the code affected in some pr, even if they are unrelated (although requests to do so are not popular with many, including ourselves)."
301542652,4266,glassez,2017-05-15T17:21:13Z,", please create fixup commit first time. you squash it after checking."
301630479,4266,naikel,2017-05-15T23:11:12Z,i pushed a new commit with the fixes
301752883,4266,zeule,2017-05-16T11:25:28Z,"i have no more critical comments. taking into account the long history of this pr and high user demand, imo all polishing can be done after merging."
301754511,4266,glassez,2017-05-16T11:33:38Z,"+1 , please fix last issue (curly brace position) and squash fixup commits."
302075835,4266,zeule,2017-05-17T12:33:49Z,"oops, i've made a conflict. , could you rebase it one more (the last one) time, please?"
302080422,4266,glassez,2017-05-17T12:52:21Z,", i think we should no longer delay it, and merge it immediately after the conflicts will be resolved."
302082280,4266,zeule,2017-05-17T12:59:29Z,sure. i thought we agreed on this already. came here to merge it and discovered the conflict.
302233626,4266,naikel,2017-05-17T21:14:43Z,i fixed the last conflict now i'm curious why one of those last commits in master removed all classic qt signal() and slot() and replaced them with that weird stuff...
302292539,4266,glassez,2017-05-18T03:44:09Z,that weird stuff is pure c++. this new qt5 connection syntax has some advantages (e.g. compile time checking).
302295736,4266,glassez,2017-05-18T04:13:13Z,", thank you."
302332983,4266,thalieht,2017-05-18T08:10:52Z,"finally! although i have no interest in this feature, thanks guys and for your patience and for not abandoning it. it was frustrating watching you doing rebase after rebase for so long and not being able to help."
302527899,4266,Nivius,2017-05-18T20:12:15Z,finnaly! when does it go live then? next update? :d
310491210,4266,jeff15110168,2017-06-22T20:19:33Z,omg been waiting for this feature forever. please please please hoping that this rolls out soon :)
317166469,4266,pret0rian,2017-07-22T08:23:47Z,why this is still not in 3.4.0 alpha version? how many years you need to add so simple feature?
317166788,4266,glassez,2017-07-22T08:28:33Z,this pr was merged onto master 2 months ago!
317167595,4266,pret0rian,2017-07-22T08:42:42Z,so what? im currently using 3.3.14 and still don't have that option...
317168717,4266,glassez,2017-07-22T09:01:26Z,please decide which version you are asking: 3.4.0 alpha or 3.3.14!
317168990,4266,pret0rian,2017-07-22T09:05:39Z,"doesn't matter what version i use, you said it's merged 2 months ago and i just say that newest version still doesn't have that, just check this out (no need to download 3.4.0 alpha): [a link]"
317169348,4266,jeff15110168,2017-07-22T09:11:39Z,would be great to have this in the 3.3.14 or 3.3.15 build :) -- cleaned up e-mail quotes.
317189919,4266,zywo,2017-07-22T15:11:37Z,"it was merged to master branch (currently 3.4.0alpha), it's not included in v3_3_x branch."
317203264,4266,maca134,2017-07-22T18:56:18Z,so how long until the general users can expect this feature?
327296868,4266,Nivius,2017-09-05T20:40:44Z,"so, any estimates when 3.4 might drop?"
338545500,4266,corydorning,2017-10-23T04:34:11Z,not soon enough :(
346151449,4266,jeff15110168,2017-11-21T20:30:16Z,is this coming to 4.0?
376715696,4266,corydorning,2018-03-28T00:08:48Z,checking in again... this is the only thing keeping me from switching over from deluge which i'm not a fan of. but it has this feature. is it live yet?
376719606,4266,corydorning,2018-03-28T00:31:08Z,so it looks like this is live but is it possible to do it based on category or tracker? different trackers have different rules.
688762856,13348,glassez,2020-09-08T10:02:02Z,"this pr is an attempt to improve performance when loading torrents into session (especially when restoring a session, so many torrents are loaded in a row). can someone test it with a large number of torrents (on the order of several hundred or thousands) and tell us how it behaves? it is unlikely to be able to accelerate the restoring of session, but it should make ui more responsive at this time. pr is in the draft stage (it is also based on other not merged changes), so do not pay attention to the ""dirty"" git history, etc. a side effect is that there is a certain time interval between the ui is displayed and the torrent list starts to fill up. if it turns out that it does its main job well, then i'm waiting for your suggestions for improving its interface (for example, displaying progress in some way, or just displaying the ""busy"" status). , , ping."
688813753,13348,ghost,2020-09-08T11:44:38Z,i can test on windows if someone can provide me with a test build. ping
688990600,13348,c0re100,2020-09-08T16:23:46Z,[code block] [a link]
688993648,13348,FranciscoPombal,2020-09-08T16:28:43Z,"thanks, beat me to it. is this before or after the force push from 37aa89d to db3bd7a?"
689022217,13348,c0re100,2020-09-08T17:19:46Z,after the force push(db3bd7a)
689203841,13348,ghost,2020-09-09T00:15:12Z,ok so i ran multiple types of tests with 5000 torrents on a ssd storage. first i tried with the last build that ned-martin used. [a link] it took 13 seconds for the ui to become responsive(white blank ui to transfer list) with only 1 non-working tracker. it took 2 mins and 29 seconds with 10 non-working trackers. then i tried with the build provided here [a link] it took around ~10 seconds for ui to load and display no torrents. but then it went back to not responding for another 2 mins and 40 seconds. so ultimately the ui remains unusable. i'm not seeing any improvement here. except now the ui loads earlier with no torrents at all and it remains non responsive for almost the same amount of time.
689354804,13348,glassez,2020-09-09T07:08:03Z,"well, i will continue further research."
689600658,13348,ghost,2020-09-09T14:29:33Z,"the load time is faster with less trackers. 5000 torrents 10 trackers each = 50000 announces per endpoint. i have a total of 5 endpoints out of which only 1 has internet. others are just 127.0.0.1, link local v6 and 2 vm adapters."
689880634,13348,xavier2k6,2020-09-09T23:40:15Z,windows test build of 4.3.0(alpha1) with listed libraries: [code block] [a link]
689904812,13348,ghost,2020-09-10T00:56:27Z,"with zero trackers, session restores completely within 8 seconds. that is 5k torrents get loaded within 8 seconds. no not responding issue. but the ui remains non responsive for that 5-6 seconds after loading till all torrents restore. memory usage is fairly low at 80 mib. with 10 non working trackers in each torrent, it takes around 2 min 40 seconds for the ui to go from not responding to a choppy one that lags like hell. the memory usages gradually climbs up to 800 mib + and 50% of all 4 cpu cores were being utilised constantly during the not responding period. the memory seem to get freed pretty slowly."
689918418,13348,ghost,2020-09-10T01:36:11Z,ok so i think i got something: the trackers that i was using were like this: [a link] [a link] [a link] and so on... i changed them to [a link] [a link] [a link] etc.. and now the locking issue is gone! qbt loads fine and then the trackers section is gradually being populated with errored torrents! no lag or choppiness as well. so i think something is breaking due to not having /announce in the tracker url? ping! edit: the issue could be at qbt end as well. like how the trackers section parses the announce urls.
689933175,13348,FranciscoPombal,2020-09-10T02:21:18Z,no lag or choppiness as well. did you double-check that the locking occurs without this patch even when using `[a link] urls? just to check if this patch actually improves things and this wasn't just the url issue all along.
689936882,13348,ghost,2020-09-10T02:32:32Z,checked 3 times. the patch actually doesn't improve anything. locking issue is gone when /announce is appended to urls.
689938436,13348,ghost,2020-09-10T02:37:21Z,there's the white loading ui for 10-15 seconds in this build with /announce appended. [a link] without /announce the lock extends to 2 mins 30 seconds. on this build [a link] the ui loads within 2-3 seconds and remains non responsive for another 5-10 seconds till session gets restored with /announce appended. without /announce the locking issue appears and the lock extends for 2 mins 40 seconds.
690040810,13348,xavier2k6,2020-09-10T07:15:57Z,"are you testing with ""qbittorrent defaults""? for testing purposes: have you tried changing async i/o from 4 -> 8 process memory priority below normal -> normal"
690091147,13348,arvidn,2020-09-10T08:50:56Z,"has anyone profiled the process during the time of lag/stall/choppiness? i would think the most important thing to understand is what the various threads are doing and/or waiting for. libtorrent itself doesn't treat tracker urls that end with `/announce` any differently than any other url (except that trackers whose url does *not* end with `/announce` cannot be scraped). perhaps the trackers send different responses that are quicker to handle when you change the urls. the best way to know is to profile the problematic case i'd say. perhaps a full alert log might help too, but it would still be trying to deduce the cause from bits and pieces, rather than actually looking at the cause of the lag in a profiler."
690188548,13348,FranciscoPombal,2020-09-10T11:28:53Z,"to get the full alert log, you probably want to attempt to reproduce this with `client_test`. it would be interesting to see how this problem manifests itself with `client_test` i suppose what we are looking for here is `scrape_reply_alert` and `scrape_failed_alert`. qbittorrent will end up trying to scrape those urls due to the auto scrape interval configuration, configured here: [a link] the results are processed here: [a link] would that be the problem? these urls (`[a link] cannot be scraped."
690199798,13348,arvidn,2020-09-10T11:36:49Z,"scrape attempts for http trackers whose url does not end with `/announce` will just fail immediately, here: [a link]"
690231511,13348,ghost,2020-09-10T12:08:50Z,"one difference that i forgot to mention between /announce and w/o /announce case. when the lock ends with the latter, the errored tracker torrent count shows 5000, meaning all had finished announcing and the lock was released. while with the former, there’s no ui lock and the errored tracker count gradually increases. i’ll try to reproduce this on ubuntu with a build having debug symbols then get a stack trace if i get time."
690284584,13348,glassez,2020-09-10T13:21:30Z,", are all 5000+ mentioned torrents that you use in tests really running (i.e. started in non-paused state)? iirc, all your torrents have the same 10 trackers. am i right?"
690286359,13348,ghost,2020-09-10T13:24:14Z,yes. running in downloading state(stalled).
690287836,13348,ghost,2020-09-10T13:26:42Z,yes same 10 http trackers without the /announce part in their url.
690291061,13348,glassez,2020-09-10T13:31:48Z,can you measure it under the following conditions: 1. all 5000 torrents are paused 2. one from 5000 is running (all others are paused) 3. 10 from 5000 are running
690296947,13348,xavier2k6,2020-09-10T13:41:36Z,do you want me to provide a build with latest commit `ecf8c37` for this or previous build with `2e6236e` is ok?
690321158,13348,ghost,2020-09-10T14:19:45Z,"1. 10 seconds white ui followed by empty transfer list followed by session restored on 17th second. no lag/choppiness afterwards. 2. same as number 1. 3. same as number 1. 4. i ran another test with 500 torrents running. this time 10 seconds white ui followed by empty transfer list followed by session restored on 22nd second. no lag/choppiness afterwards. ran the same test with torrents with /announce appended to tracker. 1. 10 seconds white ui followed by empty transfer list followed by session restored on 17th second. no lag/choppiness afterwards. 2. same as number 1. 3. same as number 1. 4. same as number 1. i have found more interesting thing: with /announce appended, libtorrent announces to each tracker in a loop, that is it moves to the next tracker once the upper one fails. capture with /announce appended url : [a link] but without /announce appended, it announces to all trackers at once...skipping the looping. i think this generates 5000*10 = 50000 alerts at once per endpoint. and this is causing the locking issue. capture without /announce : [a link]"
690324157,13348,ghost,2020-09-10T14:24:27Z,i don’t know why the looping is getting skipped for trackers without /announce. is qbt asking libtorrent to scrape those trackers and hence it’s failing immediately and generating a ton of alerts at once?
690325357,13348,glassez,2020-09-10T14:26:19Z,"previous build is ok for this job to compare with previously obtained results. but you can provide build with the latest changes too. it contains new improvements, but in a slightly different area. although my results do not significantly affect the original problem, i still decided not to lose them, but to continue improving the session initialization (i mean application level session) and interactions gui with it."
690327655,13348,FranciscoPombal,2020-09-10T14:29:41Z,"i wonder how/if the tracker tiers affect this. would you mind testing with different combinations of those settings (e.g. always announce to all tiers/always announce to all trackers in a tier)? if possible, with torrents that are generated with trackers in different tiers (so far, all your tests have been with torrents that all have every tracer in the same tier). meanwhile i'm trying to profile with callgrind, but it's taking a while."
690331322,13348,ghost,2020-09-10T14:35:19Z,i need a build which can log tracker announces and if it was a announce or scrape request. anyone?
690342556,13348,xavier2k6,2020-09-10T14:52:01Z,"ok, will provide a build with latest commit `ecf8c37` if i could be pointed in the right direction of what needs to be done/edited etc will give it a lash. i may also provide (time depending) a build with latest master/libtorrent commits for reference also....."
690344635,13348,ghost,2020-09-10T14:54:48Z,ok the build with announce logging might not be required. (logging can confirm this) i checked with wireshark. no announce requests are being made when trackers don't have /announce in their url. they just outright fail. which is either contradictory to this statement([a link] or qbt is actually asking for scrape request instead of announcing?
690360124,13348,ghost,2020-09-10T15:18:10Z,"i tested with client_test program. here's the log. i'm including only the endpoint which has internet. [sep 10 21:10:37] file3493.bin ([a link] sending announce (started) [sep 10 21:10:37] file3493.bin ([a link] 404 not found ""not found"" (2) [sep 10 21:13:28] file3493.bin ([a link] sending announce (started) [sep 10 21:13:28] file3493.bin ([a link] no such host is known """" (1)"
690535862,13348,FranciscoPombal,2020-09-10T17:25:31Z,"i just tested a bit (without this pr) on linux with 5000 torrents (10 trackers each, on tier 0, of the form `[a link] it takes about 30~40 seconds to add them all before the ui becomes responsive. after closing qbittorrent and starting it again without pausing the torrents, startup takes once again the same amount of time. i'll post the callgrind profiles later."
690663574,13348,arvidn,2020-09-10T19:28:58Z,"here's a theory: when a tracker fails to scrape for this reason, it fails immediately without delay and post the response back to the main network thread, which then will immediately (without delay) issue a scrape request for the next tracker in the list. if all trackers fail like this, all these messages back and forth will probably saturate the network thread for some time, not letting much else happen. until all 50000 trackers have failed. if qbittorrent has issued a blocking call into libtorrent, it may take a while for it to come back. i can think of to things i can do to mitigate this: 1. insert a delay after a scrape request fails for this reason, before reporting the error. 1 second should be enough. 2. move the check earlier, to avoid issuing the scrape request to begin with, when it cannot be made. this would be a bit of a layer violation, since this is specific to http trackers."
690676964,13348,xavier2k6,2020-09-10T19:43:40Z,would `max_concurrent_http_announces` play any part in this? that option was recently added/merged to master but is not a part of this ticket/commit so is not exposed in qbittorrent's advanced settings?! should you rebase etc to include [a link]
690794298,13348,FranciscoPombal,2020-09-11T00:03:07Z,"here are the results of the profiling runs with callgrind. the first one is actually a pure tar.zstd archive, despite its extension (github made me do it) - decompress it with `tar --zstd -xvf `, if you have a modern `tar` version, or decompress it first with `zstd` and then with `tar`. [a link] [a link] capture1 - profile when adding the 5000 torrents. i stopped it midway through, so the last captures are of the program exiting. capture2 - profile when starting qbittorrent with 5000 torrents previously added. i stopped it midway through because i realized it was becoming basically the same as capture1."
690795347,13348,ghost,2020-09-11T00:06:23Z,"why does the announce fail with ‘no such host is known """" (1)‘ when /announce is missing? was that a scrape request or announce? the log says announce though. also i think similar situation can happen with announce as well when a user has a lot of bad trackers in their list which do not resolve to any hostnames. i think all alerts should post with some sane delays in between. or the looping should have some delay before jumping to the next tracker."
690975105,13348,arvidn,2020-09-11T09:13:32Z,"good question. i take it the host *is* known, right? perhaps there's a bug in the parsing of the url, where the hostname becomes truncated or something. what are the urls that work and don't work?"
690976779,13348,ghost,2020-09-11T09:17:01Z,this works: [a link] this doesn’t: [a link] accessible through browser. nslookup returns valid host.
691013215,13348,glassez,2020-09-11T10:22:47Z,this pr is on top of current master.
691018076,13348,glassez,2020-09-11T10:35:08Z,"how libtorrent behaves in the case that a lot of torrents have the same tracker? it just executes requests for each torrent independently? it doesn't have any intelligent mechanism for detecting unavailable trackers so that you don't need to access them anymore? well, for example, do not execute requests to the same tracker if there are already several running ones (e.g. 3 or 5). if previous requests consistently return the same network error code, then do not make any more requests to this tracker (for some time), and immediately return an error to all other torrents (the same one returned by completed requests)."
691070956,13348,FranciscoPombal,2020-09-11T12:40:50Z,"interestingly, i found that almost all/all of the `example{0,9}.com` domains are actually valid as well, not just `example.com`."
691188375,13348,xavier2k6,2020-09-11T16:17:47Z,![a link] left side is `latest master commit: defdd51` which has both [a link] & [a link] exposed in advanced settings right side is `improve-startup commit: 8bfe4a5` am i doing something wrong?? i build from master by downloading zip from `[a link] i build from yours by downloading zip from `[a link]
691198703,13348,FranciscoPombal,2020-09-11T16:39:32Z,it seems this pr is not yet rebased on a recent enough master commit that includes #13319 and #13257. you can rebase it yourself locally... [code block] ... and compile that.
691203531,13348,glassez,2020-09-11T16:50:02Z,"sorry, maybe i forgot to push it... i'll recheck it tomorrow."
691476746,13348,ghost,2020-09-12T11:54:34Z,"and instead of posting thousands of alerts, the status could just be polled on a regular interval for a set amount of torrents. when i was testing with client test i saw alerts being posted from 6 endpoints and only one had internet. all the other alerts are just wastage of cpu resources."
691478797,13348,arvidn,2020-09-12T12:14:02Z,"they're only wasted if you're not interested in them. and alerts are really cheap too, so i'm not too worried about it. or do you experience an alert using significant cpu? it's been a while since i looked at it, but libtorrent handles them [a link]."
691479070,13348,arvidn,2020-09-12T12:16:06Z,"yes. right, there's no logic like that. what i would like to do, at some point, is to coalesce announces to the same tracker by pipelining the requests over the same connection."
691481886,13348,ghost,2020-09-12T12:40:11Z,alerts are cheap but client seems to use a lot of cpu when processing lot of them at once. maybe the client side has room for improvements. http/3 sounds promising.
691645685,13348,xavier2k6,2020-09-13T09:38:47Z,i'm going to provide a build later for using your latest commit `e3040a5` & libtorrent latest commit `bc38d29` if you don't have any other commits to push before hand?
691646500,13348,glassez,2020-09-13T09:43:30Z,there will be no changes here in the near future (at least until tomorrow).
691659316,13348,ghost,2020-09-13T11:28:37Z,please provide the build after this gets closed [a link]
691660600,13348,glassez,2020-09-13T11:41:42Z,"indeed, we don't have any optimizations there. if qbittorrent receives a lot of alerts at a time, their processing may permanently interrupt the processing of other events, including window system events, etc., which leads to gui freezes. i'll try to improve it."
691750235,13348,FranciscoPombal,2020-09-14T00:32:09Z,how did [a link] impact the startup time/difference in announce behavior with/without `/announce` for you?
691751611,13348,ghost,2020-09-14T00:40:02Z,"edit: if you asked how the patch impacted the startup behaviour, then i haven't tested that yet. i need a windows build. as for the announce behaviour they're same now in case of /announce or without."
691755501,13348,FranciscoPombal,2020-09-14T01:00:07Z,"ping, if you don't mind."
692066246,13348,ghost,2020-09-14T13:51:00Z,tested on ubuntu with 5000 torrents with qbt master and latest rc_1_2 libtorrent it took 13 seconds to load torrents. no extended ui locks or choppiness afterwards. i think that posting of too many alerts at once due to that libtorrent bug was indeed the issue.
692082988,13348,xavier2k6,2020-09-14T14:17:48Z,"will have a windows build in a few hours, not in front of my pc atm."
692140432,13348,FranciscoPombal,2020-09-14T15:39:05Z,with both trackers ending in `/announce` and ones that don't?
692307957,13348,xavier2k6,2020-09-14T20:53:01Z,windows test build of 4.3.0(alpha1) with listed libraries: [code block] [a link]
692384245,13348,ghost,2020-09-15T00:13:50Z,"gui becomes responsive within 8 seconds with or without /announce in url. so that locking issue is gone completely. however, the gui is still locked for 8 seconds which i believe is due to processing of add_torrent_alert and patches like these don't help much in such cases."
692385622,13348,FranciscoPombal,2020-09-15T00:18:24Z,"thanks for confirming, that's still a massive improvement just from that libtorrent fix."
692388662,13348,FranciscoPombal,2020-09-15T00:28:40Z,"ping -martin, you might be interested in trying this build: [a link]"
692685808,13348,ghost,2020-09-15T12:36:18Z,"the main issue is probably elsewhere. most likely a blocking call to the network thread. because, when there’s a lot of transfer going on, and you try to open qbt from tray, it produces that white ui. has anyone looked into the captures provided by ?"
692905765,13348,FranciscoPombal,2020-09-15T18:49:28Z,"those captures are probably not that useful now, because they were made with a version that did not include that fix from libtorrent and thus the effects from the variable that we care about now are not as isolated as they could be. i'll try to make some new ones soon."
696631988,13348,xavier2k6,2020-09-22T10:16:48Z,"did you touch any of the code related to **categories**? the reason i ask is that i'm seeing the ~**8**sec delay before all my (384) torrents show up in ""gui"" in **categories** under 4.2.5 portable version with **0** torrents added (everything is ok): ![a link] in **categories** under 4.3.0 portable version using commit `e3040a5` with **0** torrents added (all & uncategorized is missing): ![a link] also if i add a new category (**now you see me added here**)with 4.3.0 `e3040a5` under portable mode it will show being added under **categories** but upon closing qbittorrent & re-opening the newly created category is no longer visible. if i try to add the same named category - there's a popup dialog box saying the category name already exists.... ![a link] ![a link]"
696640385,13348,xavier2k6,2020-09-22T10:36:08Z,### can also confirm #13394 (when adding a torrent causes a crash) qbittorrent has crashed please file a bug report at [a link] and provide the following information: qbittorrent version: v4.3.0alpha1 (64-bit) libtorrent version: 1.2.10.0 qt version: 5.15.1 boost version: 1.74.0 openssl version: 1.1.1g zlib version: 1.2.11 os version: windows 10 version 2004 10.0.19041 x86_64 caught signal: sigsegv [code block] however when you re-open qbittorrent after this crash the torrent shows added & all the categories that weren't visible when testing are now visible again. ![a link]
696644719,13348,glassez,2020-09-22T10:47:24Z,"sorry, i just wanted to try out some ideas for speeding up the application launch. i didn't intend to worry about side effects until some idea was successful, so i could continue to implement it to the end. please do not use this pr for anything other than measuring startup time until it is no longer a draft."
696645437,13348,glassez,2020-09-22T10:49:06Z,i'm working on another idea now. i intend to update this pr soon to test it.
696647948,13348,xavier2k6,2020-09-22T10:55:20Z,"no worries, i'm not using it for everyday use - just for testing purposes, reporting my findings here (since i had a bit of time to fiddle around with it etc.)"
696742768,13348,c0re100,2020-09-22T14:03:00Z,[offtopic] can you test adding a torrent with current master branch? cause i don't have crash issue with boost 1.73
696801438,13348,xavier2k6,2020-09-22T15:37:13Z,"can you test adding a torrent with current master branch? cause i don't have crash issue with boost 1.73 are you using commit `e3040a5`? will do when i get a chance, have used `boost 1.74` for building though of a few builds & haven't encountered any crashes.. except for this pr/using it's latest commit... `qbittorrent 2e6236e pr #13348 libtorrent 6ed8872 qt5.15.1 boost 1.74` ""no crash!"" `qbittorrent 90b66ec pr #13348 libtorrent 6ed8872 qt5.15.1 boost 1.74` ""no crash!"" `qbittorrent e3040a5 pr #13348 libtorrent a9ae3c8 qt5.15.1 boost 1.74` ""crash!"" but i don't think it really matters much as it's still a `wip` as glassez said so not really meant for mainstream/daily usage.... there will be other side-effects etc.."
696815844,13348,c0re100,2020-09-22T16:01:24Z,"yes, i'm using `e3040a5` and libtorrent `a9ae3c8`. no crash with boost 1.73, but crash with boost 1.74."
696975849,13348,FranciscoPombal,2020-09-22T20:56:26Z,"alright, so i have tested qbittorrent 1a3091a980132627bedd6b2f88d427bae0947122 + libtorrent rc_1_2 `0fb476b0640e18ab24f8f64ffe9c1df424b7d355` (the latest commits at the time of writing, which include some important libtorrent patches that made it in to rc_1_2 since i last made the callgrind captures). the setup was the same as before: 5000 torrents with 10 example trackers each. clean qbittorrent profile profile (all default settings), ubuntu 18.04, boost 1.74, gcc 8.4.0, same machine. first, i started the client with no torrents, and added them all. within about 5 seconds, all torrents were added and started announcing. the announcing was pretty slow; we need either a bigger announce queue, more request batching, or both. however, the gui was 100% responsive immediately following the addition of all torrents, so it's not so bad. see this short video i recorded showing the slow announces; the video shows me scrolling through the transfer list and selecting a few different torrents a few minutes after having added them all. the announces seem to be made at a rate of about 10-15 per second (edit - at the beginning it's much faster), with a few pauses, presumably due to the queue getting saturated with ongoing responses from the slower sites (recall that some of the `example{0,9}.com` domains are actually real): [a link] then, after waiting for all announces to fail, i completely closed the client (which was pretty much instantaneous for the gui, the qbittorrent process itself terminated after probably 1 or 2 seconds). finally, i opened the client again. at first, only the window frame was showing, but within less than 10 seconds, the whole ui showed and was immediately responsive. the announces started occurring at about the same speed as before. this leads me to believe that the announces are not blocking anything important anymore; those < 10 seconds were simply due to the gui loading in the massive amount of torrents. i guess this is good news. i didn't bother making a new callgrind capture, because it no longer seems relevant given the good results, but let me know if you still think it would be useful, and i'll get on it. maybe this patch isn't that needed after all, at least in its current form. but at least it helped uncover an important underlying issue with libtorrent that got resolved. still, since there was a push recently, i'll try to benchmark it and see if it provides a measurable boost in performance. i haven't looked into the unresponsive ui after restoring from tray on windows. can you still reproduce? if so, can you describe in detail what you observe? for how long does the ui stay unresponsive?"
696979210,13348,xavier2k6,2020-09-22T21:02:29Z,`867cf863f21747f2df7290df81a8d6a57a4d0992` is libtorrent **rc_2_0**??
696988081,13348,FranciscoPombal,2020-09-22T21:19:25Z,"my bad, i meant `0fb476b0640e18ab24f8f64ffe9c1df424b7d355`, fixed."
697014301,13348,FranciscoPombal,2020-09-22T22:24:35Z,"ok, i just tried the patch (latest commit, `687104f1b2eae8af04a1e4c5c463d08cf228b01e`), and the results were pretty interesting. the gui starts almost instantly and is immediately responsive, but the overall startup time has regressed massively, because the torrents take a long time to get added. furthermore, they only start announcing once they've all finished being added. the announcing happens at approximately the same rate (very fast for a few seconds, then regresses to 10-15 per second on average). the display of the number of dht nodes also seems to be blocked during the time the torrents are being added. see this video illustrating all this (also note the difference in performance when selecting a filter that displays an empty list vs. one with a lot of torrents; the rate of torrent addition is massively slower in the latter case): [a link] furthermore, i made 2 callgrind captures; one with the latest `master`, as in my post above, and one with the patch. i ran both times for about 7 minutes which, even with instruction dumping, and cache simulation off on the callgrind side and dht (responsible for a lot of the cost!), pex, and lsd off on the qbittorrent side, is still only long enough for about 100 or so torrents to be added, after which i sent sigint to the process. callgrind does make execution very slow :). hopefully its analysis yields some nice insights; i haven't looked at it too closely yet. [a link] [a link] overall, i think the patch is still a regression, but perhaps it can become the way forward with more polish. ideally, torrents would be added faster, and announces would occur asynchronously with torrents being added. edit: also, i'm pleased to report that both with and without the patch, closing the client mid startup doesn't corrupt/delete the .fastresumes."
697134517,13348,glassez,2020-09-23T04:58:53Z,"well, i recently pushed through new changes to test other ways to speed up qbittorrent launch. they include asynchronous reading of resume data files in a separate thread, as well as processing alerts one at a time. you can test it in two ways: including and not including the last commit (, can you provide 2 corresponding builds?) in the latter case, you can evaluate what asynchronous data reading does by itself. although the last commit makes the ui more responsive during the session loading process (it does in my tests, but in yours?), this process itself stretches over time. this demonstrates that having a large number of alerts when restoring a session is the root of the problem. but it seems that this is not due to the fact (not only) that we have to process a lot of alerts at a time, which leads to interrupting the main thread, but because it causes a lot of work in the gui layer, which also leads to poor responsiveness. my other experiments show that populating the gui after the session is fully restored is significantly faster. i still have limited testing capabilities, so i'm waiting for your results. i am particularly interested in your opinion on asynchronous reading of resume data files. does it deserve to be merged on its own?"
697147357,13348,glassez,2020-09-23T05:46:18Z,"most likely, you just drew the wrong conclusions from your observations. since the queue processing time for all initial alerts has increased, it may simply be displayed in the ui with a long delay. there are no changes affecting the announcement. it works exactly the same as in master, just provides/displays results in a different way."
697297865,13348,FranciscoPombal,2020-09-23T11:15:56Z,"as noted in [a link] my observations in the latest comments are in reference to the very latest commit (so, including all changes from it and the previous ones). my observation was that the main improvement was gui startup time. as stated previously, before the patch, the gui takes more time to load on startup, but _after_ it actually loads, the responsiveness is comparable/the same as with the patch (at least i don't have the means of measuring a scientifically significant difference). the biggest downside of the patch is that it takes much longer to add all torrents (like you say, ""the process itself stretches over time""). thus, all things considered, the startup time has regressed with the patch. perhaps the alerts relating to torrent loading need to be batched instead of handled one at a time? yes, if you watch the video in [a link] it clearly shows the impact that more gui activity has on performance, when i switch between filters with no/all torrents. yes, this is what i observe without the patch as well (in current master). i explain my opinion about the behavior in current master and the latest version of this pr in my latest comments ([a link] and [a link] respectively), which include videos/callgrind captures that will probably be useful to you. i can specifically test just the part about asynchronous load of fastresumes with nothing else (i.e., excluding the latest commit about handling alerts one at a time), but regardless of the effects on gui startup time, if it amounts to (too much of) a regression in overall startup time, i won't be in favor or merging it. if certain parts of the gui are not updating when they should, while other parts are clearly able to do so, that can be a problem. but my original hypothesis was that the tracker-related alerts simply happened to be placed at the end of the queue, after all alerts related to adding/loading torrents, hence the delay. again, i encourage you to watch the videos i posted, to get a visual feel for what's happening."
697308829,13348,glassez,2020-09-23T11:41:33Z,"the master doesn't do what i mean. it still populates gui by one torrent. it just doesn't give gui time to draw all the changes. so it just hangs for a while, and then draws everything at once. however, i tested on a not very fast system. it may look different on modern machines."
697339137,13348,glassez,2020-09-23T12:43:13Z,"well, i did it. the picture of my latest patch behavior repeats what i see in my tests (except that i use about 100 torrents in total). can you provide corresponding videos for build without my latest commit and for the master build?"
697635722,13348,FranciscoPombal,2020-09-23T16:22:41Z,"here is a video of the patch without the latest commit (i.e., only the changes up to, and including `cf309d4b8fb485f675d3d0fb0b8f95de318b415b`, ""start up torrents on session constructed""): [a link] as you can see, it's halfway between `master` and the full patch: - like `master` it only takes about 10 seconds to load everything and become fully usable - like `master`, the gui is completely unresponsive for those 10 seconds - unlike `master`, the window contents show up pretty much immediately. as you can see from the video, it is quite clear that all the torrent loading is preventing the gui from being responsive. overall, i think this is the best of the 3 alternatives. there is no need to make a video about `master`. as described before, it is exactly the same as this one, except during the 10 seconds it is unresponsive, you can only see the window frame, not its contents."
697707102,13348,glassez,2020-09-23T17:04:53Z,"well, let's wait to see what others have to say about their results. if it is confirmed, i will delete the last commit and submit the pr to the final review to be merged."
698364131,13348,xavier2k6,2020-09-24T14:00:53Z,~will upload builds later....~ ~4~ 6x builds uploaded for testing... 1. [a link] 2. [a link] 3. [a link] 4. [a link] 5. [a link] 6. [a link] **builds: 2/4 & 6** have these trackers: [code block] latest libtorrent rc_1_2 commit used & openssl 1.1.1**h**
698640672,13348,xavier2k6,2020-09-24T23:36:09Z,### build 1 glassez:improve-startup windows test build of 4.3.0(alpha1) with listed libraries: [code block] [a link]
698640707,13348,xavier2k6,2020-09-24T23:36:16Z,"### build 2 glassez:improve-startup portable profile + 10,000 test torrents windows test build of 4.3.0(alpha1) with listed libraries: [code block] [a link]"
698640738,13348,xavier2k6,2020-09-24T23:36:23Z,### build 3 qbittorrent master windows test build of 4.3.0(alpha1) with listed libraries: [code block] [a link]
698640771,13348,xavier2k6,2020-09-24T23:36:30Z,"### build 4 qbittorrent master portable profile + 10,000 test torrents windows test build of 4.3.0(alpha1) with listed libraries: [code block] [a link]"
698642683,13348,FranciscoPombal,2020-09-24T23:44:23Z,"very nice, thanks, but can you also please include a build with this pr except the latest commit? that is also relevant for testing: [a link] [a link]"
698645212,13348,xavier2k6,2020-09-24T23:53:48Z,can't any of the two of my previous builds not be used for reference?? [a link] & [a link]
698646285,13348,FranciscoPombal,2020-09-24T23:57:42Z,"don't get me wrong, they are also useful, but we're doing a 3-way comparison here. the last commit in this pr is a massive change in and of itself. as my comment above shows, there are massive differences between `master`, this pr without the last commit, and this pr with the last commit. as a matter of fact, i think the best version is actually that of this pr without the last commit."
698648516,13348,xavier2k6,2020-09-25T00:05:43Z,"ok, so a build based on `start up torrents on session constructed` commit`4fbaa8a`??"
698834144,13348,xavier2k6,2020-09-25T09:44:23Z,### build 5 glassez:improve-startup windows test build of 4.3.0(alpha1) with listed libraries: [code block] [a link]
698834195,13348,xavier2k6,2020-09-25T09:44:31Z,"### build 6 glassez:improve-startup portable profile + 10,000 test torrents windows test build of 4.3.0(alpha1) with listed libraries: [code block] [a link]"
698834451,13348,xavier2k6,2020-09-25T09:45:02Z,"done, build 5/6 uploaded."
698875056,13348,FranciscoPombal,2020-09-25T11:22:34Z,"now that there are windows builds available of the 3 relevant variants, if you are on windows, please test and provide your feedback concerning [a link] and [a link]"
698890824,13348,xavier2k6,2020-09-25T12:04:32Z,for reference [a link]
699112938,13348,thalieht,2020-09-25T19:27:54Z,"i tested all 3 commits with the 10000 torrents (thx ) i only looked at gui loading: - master: white ui until everything is loaded, about 30 sec to load all 10000. - commit before the last: ui loaded but i can't interact with it, occasional gui update every few thousand torrents loaded (didn't measure time), about 30 sec to load all 10000. - last commit: immediately responsive but overall time to load all 10000 was vastly increased, 57 sec to load the first 1000 while gui is shown. if qbt is minimized to taskbar or tray the loading time is the same or comparable to the other 2 commits. while gui was shown it seemed like it would randomly ""choke"" on loading torrents for a few seconds. another thing to note is that the size of qbt window matters for torrent loading speed (smaller==faster). the last thing to make me think that the last commit is a bad idea is that if i move another unrelated window back and forth across the screen while qbt gui is shown, then the loading of torrents is retarded even more."
699154459,13348,xavier2k6,2020-09-25T21:04:14Z,"**qt** is used for the **gui** but should we compile/use it with **opengl**?? as far as i know that's not the current method, i believe it's **direct 2d** and/or **directwrite**/**directwrite 2** (at least on windows - open to correction) - it may be better to use that as most pc's/laptops would be using on-board/integrated graphics?? maybe it doesn't make a difference, thoughts??"
699167603,13348,FranciscoPombal,2020-09-25T21:36:52Z,"cool, pretty much the same results as me on linux. which one do you prefer? like i said in [a link] i prefer the ""intermediate"" patch. the regression in startup time depending on gui usage is not acceptable for me. the ""full"" patch is not completely out of the question though, we can revisit in the future if we can make the gui updates more efficient, but there is no guarantee right now that that will be possible - we might be running into qt limitations here."
699186425,13348,xavier2k6,2020-09-25T22:24:40Z,"for me, i actually like the **latest patch** (but it needs a bit of tweaking/work) & may be dependent on other pr's [a link] perhaps?? or setting change......have either of you changed from the defaults to settings that you would normally use & also try disabling speedgraph in advanced settings/change transfer refresh interval to 2000ms? reason i would vote for the most recent patch (as progress/not regression) - it loads instantly - it's interactive - user can see that the torrents are being loaded & are able to ctp. **the white screen/not interactive/unresponsive is basically what we have now (user interpretation.....sluggish, it's hanging, it's crashed etc)**"
699202205,13348,thalieht,2020-09-25T23:00:08Z,:thumbs_up:
699217446,13348,FranciscoPombal,2020-09-25T23:35:00Z,"never tested that. have you found any improvements by doing so? we can of course disagree about which one we like best, but i think this is a misrepresentation of the improvements the intermediate patch has over `master`. what we have _now_ (`master`) is no useful gui display _at all_ when first loading. the intermediate patch, while not perfect (due to the interactivity issue), is a straight improvement over this. additionally, if the user has enough torrents that the startup time becomes noticeable, the gui still updates every several hundred/couple hundred torrents, so there is _some_ feedback about what is happening. thus, the non-interactivity problem becomes less of an issue - the user will intuitively expect the client to become responsive after all torrents have loaded if there is some sort of progress indicator, no matter how infrequent. they will not think the program has crashed at least."
699432815,13348,ghost,2020-09-26T05:48:38Z,master loads fastest. intermediate one provides no improvement in terms of responsiveness. so it’s kinda useless imo. latest one is best in terms of responsiveness. it can be improved by processing more alerts at a time i guess.
699439378,13348,arvidn,2020-09-26T06:34:18Z,"it seems to me that the ""last commit"" is the best path forward. i would suggest trying to not update the gui *eagerly* but take some measures to batch it. i think a good way to think about batching is similar to nagle's algorithm. something like this: * whenever there's a new torrent (or whatever event triggers a redraw of the gui), post a message to the main message loop to trigger a redraw, and record in a `bool` that there is an outstanding redraw. if there is an outstanding redraw, skip posting a new message. * in the handler of the message that's posted, clear the `bool` and issue the redraw of the gui alternatively, the ""post"" could be timer to wait 100ms or so."
699439425,13348,glassez,2020-09-26T06:34:27Z,"i wonder if it can be made dependent on some timings? for example, process alerts until some time has elapsed (say 20 or 10 ms), and then postpone the remaining ones for the next time. anyway previous commits are prerequisites for the last one."
699440109,13348,glassez,2020-09-26T06:38:14Z,"whenever there's a new torrent (or whatever event triggers a redraw of the gui), post a message to the main message loop to trigger a redraw, and record in a bool that there is an outstanding redraw. if there is an outstanding redraw, skip posting a new message. in the handler of the message that's posted, clear the bool and issue the redraw of the gui we can't directly depend on gui here. alerts are handled on lower level."
699442750,13348,Chocobo1,2020-09-26T06:52:44Z,":thumbs_up: if we aim to have 60 fps, then each time slot for processing cannot take longer than 1/60 = 16.67 ms."
699442881,13348,jagannatharjun,2020-09-26T06:53:40Z,"i don't do ""big"" torrenting anymore, made my friend test it, he preferred one with the last commit, gui loads instantly, 1-2 minute to load all of the torrents isn't big of a deal. unresponsive or lagging gui is not a good experience for non-technical users. there may be more benefits in processing alerts lazily. performance can be further tuned in the number of alerts processed at a time. nice work though :)"
699445840,13348,glassez,2020-09-26T07:10:24Z,"well, thank you for testing and feedback! i will continue in the same direction."
699457526,13348,xavier2k6,2020-09-26T08:19:43Z,would my [a link] have any bearing on the redraw time?
699462573,13348,Chocobo1,2020-09-26T08:50:19Z,i think you need some specific code to utilize other graphic libs and i doubt it will make any difference.
699465547,13348,xavier2k6,2020-09-26T09:05:54Z,"ok, thanks for the clarification."
699466969,13348,glassez,2020-09-26T09:15:33Z,pr updated. please test the latest changes.
699508280,13348,xavier2k6,2020-09-26T15:13:39Z,i hope this is ok with you?! - i have uploaded a build with the latest `handle more alerts at once` `7701a0f` commit. (including numerous builds based on `handle more alerts at once` `7701a0f` where i edited the line below each time for different values from original of `10`) [a link] these are the values i used in the other builds: [code block] windows test builds of 4.3.0(alpha1) with listed libraries: [code block] [a link] [a link] [a link] [a link] [a link] [a link] [a link] [a link] [a link] [a link] [a link] [a link] [a link] my own view: `10` is a **no go** `100` -> `300` are **viable** (depending on user hardware/consensus on default value etc) `400` -> `1000` **not feasible currently**
699522063,13348,glassez,2020-09-26T17:09:34Z,"400 -> 1000 not feasible currently sorry, i can't clearly understand what did you mean. it's not about alerts count."
699522824,13348,jagannatharjun,2020-09-26T17:15:39Z,"i think he thought that in your latest commit, while (m_nextalert != m_alerts.end() && !timer.hasexpired( 10 )) 10 meant total alerts processed in one batch and made different builds with different values like 100, 200, 300 etc."
699525757,13348,xavier2k6,2020-09-26T17:40:04Z,that is correct!
699526000,13348,xavier2k6,2020-09-26T17:42:08Z,"apologies, ya i thought it was about alerts & how many were processed at a time or a time-out so changed values."
699526398,13348,FranciscoPombal,2020-09-26T17:45:25Z,"i assume you mean that `10` is too short, so not many alerts get processed at once, leading to slow startup time, while `400`-`1000` is too long, so many alerts get processed for too long causing the ui to freeze, right?"
699526499,13348,glassez,2020-09-26T17:46:14Z,"this is the timeout (in milliseconds), before the expiry of which we are continuously processed alerts."
699527680,13348,FranciscoPombal,2020-09-26T17:56:38Z,"yes, i know, that's why i ask in [a link] _why_ exactly are too short and too long intervals considered ""not feasible"" - whether because it ends up freezing or because the torrent loading is still too slow. furthermore, a more pertinent question arises - will it be possible to settle on a value that works for all/a vast majority of users (a ""one size fits all"" value)? the effects xavier2k6 is observing at 400-1000 milliseconds could be observed by a user at 250 in a less powerful machine, for example. it is very possible that the value we choose won't make anybody (or just a minority) happy. it will cause the loading to be too slow for some, but too unresponsive for others."
699533298,13348,xavier2k6,2020-09-26T18:45:30Z,"ok, i'll try to explain... all builds start instantly.......show gui, are interactable, no white screen etc. (so it's safe to say we've overcome that issue) since we clarified the values as ""time-outs"".... `10` is same/similar to the last commit - it takes about 4mins to completely load/restore the very 1st to the final torrent. `100` which i believe to be the sweet spot for me, at least takes 1min to load/restore the very 1st to the final torrent. now if i do what _thaliet_ pointed out before & which i've observed myself previously is minimize on start-up & time it with stopwatch, maximize qbittorrent after 30secs (all torrents, yes i do mean all 10,000 are fully restored.) as you go through the builds with the increased time-outs....there's not much difference in restoring torrents aka going from point a to point b in the time it takes 2mins/2mins 20/2mins 30 etc. but what you will find is that the gui becomes less interactive/sluggish & the loading of torrents seem as if there stuck but will process...........just seems like there's a delay.....lag. note: i will edit the download link builds from here [a link] to show `build with time-out set at x ms` instead of the current `10 alerts` etc."
699535399,13348,arvidn,2020-09-26T19:02:57Z,"if you're picking a number of milliseconds to delay before updating the gui, or a number of alerts to process before updating the gui; whichever number you pick, it will be too few for some and too high for others. i really think it would be much better to approach this in a way that *adapts* to the load, to get the best of both worlds. nagle's algorithm is an example of this. if there's just one alert, don't delay at all. while that first alert is ""outstanding"" (i.e. updating the gui) new alerts should not trigger a gui update until the first one is done. that way, if you get single alerts, there's no delay. if you get a large number of them, the batching is based on the time it takes to complete one gui update. now, i'm not very familiar with the details of qt, but perhaps this is tricky. perhaps updating the gui is synchronous and there's no way to receive more alerts while it's happening. there's one simple solution to this: instead of triggering the gui update in the message handler, post a message to the queue (at the end of the queue, *after* all the alerts that you have to handle that are currently queued up). in that message handler you posted, that's where you trigger the gui update. alternatively, if you call `pop_alerts()`, don't update the gui until you've run the handlers for *all* alerts you got back from that call. that would also give you an adaptable batching of gui updates. this is basically the same thing i suggested earlier, which was explained to not be as simple as i made it out to be. clearly i'm not familiar with the details of the internals, but i would encourage trying to come up with ways to have ""natural"" batching of updates."
699587591,13348,glassez,2020-09-27T05:21:39Z,"but this is how it works currently (in master). processing a large number of alerts at a time interrupts the main thread for a long time, so gui becomes freeze/unresponsive. we are trying to overcome it here."
699616592,13348,arvidn,2020-09-27T10:27:38Z,i see. i got the impression it was the re-render of the gui that took the most time
699618708,13348,xavier2k6,2020-09-27T10:48:07Z,what is the `alert_queue_size` set to?
699632144,13348,ghost,2020-09-27T12:56:18Z,by default libtorrent sets it to 2000.
699635464,13348,glassez,2020-09-27T13:26:05Z,"afaik, it is redefined in qbittorrent. but why do you ask about it?"
699638646,13348,xavier2k6,2020-09-27T13:54:28Z,just for myself to better understand the internals of the code & also if there was anything there that could've been tweaked.
699657237,13348,xavier2k6,2020-09-27T16:33:35Z,memory priority was changed previously...could the same be done for i/o priority?? i'm using a program called [a link] to change (increase) the `i/o priority` & it is making a positive difference in my testing... [a link]
699869900,13348,glassez,2020-09-28T08:45:09Z,"well, i don't see much excitement... but what do you expect to get in the end? best of all, it's gui that doesn't hang, but has some responsiveness. as you can see, the more responsive gui you want to get at the start, the longer it takes to restore the session. personally, i don't like any of these options. as i mentioned earlier, the best performance option is to populate gui elements (transfer list etc.) once the session is fully restored. up to this point, you can only show some ""lightweight"" progress indicator."
699956613,13348,ghost,2020-09-28T11:46:30Z,what about the cases where people have 100+ trackers per torrent in different tiers and all announce at once at startup? in such cases the gui will take couple of minutes to load. specially when many trackers fail immediately due to a bad response from hostname lookups.
699976000,13348,glassez,2020-09-28T12:30:05Z,"specially when many trackers fail immediately due to a bad response from hostname lookups. if i understand correctly, your comment refers to my last suggestion to restore the session behind the scenes, displaying only the progress indicator, am i right? but what essentially changes in this case? it just adds more work that you can't get away from. in any case, this work can be done much faster if it doesn't affect the gui every step of the way. the only alternative i can think of is to restore all torrents in a ""paused"" state, and then ""resume"" them when all are restored."
699980711,13348,ghost,2020-09-28T12:40:03Z,"i mean process the initial tracker alerts behind the scene as well, not just restoring the session."
699982048,13348,arvidn,2020-09-28T12:42:43Z,"here's a crazy thought: what if the session is paused on startup, all torrents are added, then the session is resumed. perhaps that will mitigate an ""alert storm"" to some extent. clearly the torrent_added alerts would still be posted."
699984799,13348,ghost,2020-09-28T12:48:19Z,"when the torrents are being resumed after restoring the session, they could be resumed in batches, to further reduce the rate of alerts. otherwise the user may experience another lock after the session is restored resumed."
699985942,13348,glassez,2020-09-28T12:50:41Z,"it's not such a crazy idea. at least we're crazy the same way, since it also crossed my mind. but i haven't had time to study it in detail yet. my initial attempts failed due to an ""assertion fauled"" error related to the tracker response, when trying to resume the session. i also noticed that there is no way to create a session in a paused state, i have to manually call ""paused"" after it is created."
699987093,13348,glassez,2020-09-28T12:53:03Z,don't forget that different alerts have different processing time. anyway we should investigate it to see how it works.
699989752,13348,glassez,2020-09-28T12:58:12Z,"in addition, i noticed that tracker event processing is too wasteful. it affects the gui with every related alert handling, although we could only do this with regular updates."
704940618,13348,xavier2k6,2020-10-07T13:36:09Z,"just as a follow up really....do you want me to provide another test build? i didn't get a ping from you, so was just wondering....."
705012763,13348,glassez,2020-10-07T15:26:29Z,i haven't added anything new here since.
706094028,13348,xavier2k6,2020-10-09T10:09:00Z,"i have identified 4x users through the issue tracker that have `~1800, ~7950, ~12,000 & ~36,000 torrents`, one user was already pinged here to try a build/get feedback but no response from them as of yet........should we ping the other 3? would be interested to see feedback from the user with `~36,000 torrents`........if willing/able to test. what do you guys think? (these users have experienced the white screen/delayed startup etc) i can provide a build with `glassez:improve-startup` commit: `dd1e7d0` with latest libtorrent rc_1_2 commit: `d622951`"
706765171,13348,glassez,2020-10-11T20:39:09Z,please take a look at another approach! #13498 (it is still draft too).
707055888,13348,jagannatharjun,2020-10-12T11:14:28Z,"how about transferring alert handling into a separate thread, my main objective is snappy gui with no performance lost on libtorrent side and i suspect most of the slow gui issues can be related to alert processing (i need to test it but i am too lazy)."
707142158,13348,arvidn,2020-10-12T14:06:27Z,"calling `pop_alerts()` *is* thread safe in the sense that you can call it from any thread. as long as all of the alerts from the last call have been processed and forgotten by the time `pop_alerts()` is called again, you're safe. having a thread dedicated to processing alerts would be safe from the libtorrent api point of view, since that would be the only thread calling it. some care would have to be taken to ensure that thread communicates safely with the gui though. i imagine that part could get hairy."
707173581,13348,glassez,2020-10-12T15:01:06Z,":thumbs_up: core processing of alerts is mostly fairly trivial and cannot cause too much load, so we are unlikely to benefit from transferring it to a separate thread, but on the contrary, we can only lose due to multithread interaction. thing that can really cause the gui to slow down is the processing of core events in the gui classes themselves. but your suggestion won't help either. in addition, as i understand it, the main problem is the launch of the application. but there, as i have repeatedly mentioned, the best solution is to create a gui after restoring the session and loading the rest of the core components (#13498). otherwise, we have completely meaningless behavior when it is updated so frequently that it does not have time to draw it. in addition, all these intermediate updates during session restoring do not make sense to the user. why, for example, do you need to see the current number of torrents in a particular filter, if it does not reflect any current state of the session?"
395818357,9072,sledgehammer999,2018-06-08T16:41:47Z,are there any links to ms docs?
396482640,9072,glassez,2018-06-12T06:43:04Z,"summary there are some ""default programs"" behavior incompatibilities between windows versions: 1. windows xp doesn't support ""default programs"" at all. 2. windows vista and windows 7 allow to check and set associations using ""default programs"" api. 3. windows 8 and 8.1 only allow to show ""default programs"" dialog. 4. windows 10 doesn't allow any programmatic interaction with ""default programs"". in addition, to access ""default programs"" api we require `ntddi_version >= ntddi_vista`. currently 32-bit binaries are built with `ntddi_version = ntddi_winxp`. theoretically, we can build it with `ntddi_version = ntddi_vista` and check for running under windows xp at runtime, but i'm not sure it will work, i don't have the ability to test it. so what can we do in the current circumstances? 1. bury this pr again and wait for the ""old way"" will not stop working completely (in new windows versions, of course), or until we recognise that windows xp finally died, or for something else... 2. use old way under windows xp and just allow user to use ""default programs"" manually on other windows versions. 3. use different way for each windows version: 3.1. windows xp - old way, 3.2. windows vista and 7 - allow to check and set associations via ""default programs"" api, 3.3. windows 8 and 8.1 - show ""default programs"" dialog on the first application run, 3.4. windows 10 - suggest user to use ""default programs"" dialog manually, 3.5. on 32-bit builds (if `ntddi_version = ntddi_winxp` is the only available case) we can either use old way for any windows versions or (as in par. 2) use old way under windows xp and just allow user to use ""default programs"" manually on other windows versions."
396698164,9072,Chocobo1,2018-06-12T19:00:18Z,"i would choose ""use different way for each windows version"" , windows version will be detected at runtime right? and also i think you don't need to show it on first run, just a button in options to open ""default programs"" dialog should suffice."
396954406,9072,glassez,2018-06-13T14:19:09Z,yes. ok. ok. the last question is what do you suppose for 32 bit builds?
397349163,9072,Chocobo1,2018-06-14T16:05:26Z,you mean whether or not `ntddi_version = ntddi_vista` for it? i guess only conducting test could have a answer for it.
397355384,9072,glassez,2018-06-14T16:23:36Z,"no, i mean what behavior do you suppose in case it's impossible to build it with `ntddi_version = ntddi_vista`? see par. 3.5 above."
397789390,9072,Chocobo1,2018-06-16T05:53:38Z,i think par. 2 is right choice if possible.
397876126,9072,glassez,2018-06-17T12:37:50Z,ok! pr updated.
397885867,9072,glassez,2018-06-17T15:19:47Z,"yes. i don't know why it was implemented long time ago. and i don't want to change that now, because it only affects windows xp (which is already dead, so sooner or later we're going to stop supporting it)it is not the subject of the current pr. my fault. i missed it. will be fixed."
406781679,9072,sledgehammer999,2018-07-21T08:50:07Z,please don't merge. i want to review it too. wait at least 1-2 weeks more.
421079777,9072,glassez,2018-09-13T17:04:24Z,i have been waiting for 2 months... i'm afraid i've forgotten how it works exactly.
429284617,9072,glassez,2018-10-12T10:44:48Z,"apparently, this problem will become relevant to you only when microsoft finally kills the ""old"" way, and it really stops working..."
417728235,9375,Piccirello,2018-08-31T16:59:13Z,"all comments addressed. these new changes need more testing, will update once complete."
417736802,9375,WolfganP,2018-08-31T17:31:43Z,"thx for these continuous improvements to the webui. is it possible to implement the ""remove tracker"" functionality in the webui?"
417748388,9375,Piccirello,2018-08-31T18:13:37Z,"it shouldn't be too difficult to implement the entire tracker context menu. possibly in this pr if i can get it done quickly enough. i also plan to target having trackers in the sidebar, but that may take a bit longer."
417763132,9375,zero77,2018-08-31T19:10:50Z,"i don’t want to cause problems as you clearly have put a lot of time and effort in to the current system. but, whilst you are working on trackers i think it would be nice to see whether the connection to the tracker is encrypted or not like the e flag next to pears."
417899382,9375,Piccirello,2018-09-02T01:57:46Z,"i'm not sure that libtorrent exposes this information directly. the [a link] doesn't contain any info related to encryption, though tracker traffic is [a link] anyway. you can try to infer this yourself by seeing if any of the tracker urls being with `https`."
417958822,9375,Piccirello,2018-09-02T20:49:10Z,context menu implemented. i've also finished my testing of these new features. please review the new commits.
417960053,9375,zero77,2018-09-02T21:08:43Z,thanks anyway.
420047485,9375,Piccirello,2018-09-10T20:22:35Z,"if no more comments, please approve"
420061815,9375,Piccirello,2018-09-10T21:09:01Z,added one commit to implement the changes from #9461
420231074,9375,glassez,2018-09-11T10:47:20Z,there is at least one old unresolved conversation (about translated strings). it won't go away on its own just because you're ignoring it.
421209169,9375,Piccirello,2018-09-14T02:16:02Z,"quoting my reply: and regarding your recommendation: how can this be accomplished? i don't know how to do this. please do not suggest returning an integer because that is an unacceptable compromise. for examples, see other qbittorrent web apis and many other external apis from large companies."
421228476,9375,Chocobo1,2018-09-14T04:36:30Z,"using the same expression as used in html files, example: `qbt_tr(url)qbt_tr[context=trackerlistwidget]`. however this won't work correctly since currently all js files are cached in client and i don't think js files should contain mutable data. all in all `const qstring working {qcoreapplication::translate(""trackerlistwidget"", ""working"")};` should revert back to `const qstring working {""working""};` and (ideally) the i18n translation replacement should occur in embedded js in html file."
421276412,9375,glassez,2018-09-14T08:43:51Z,my previous comnent: pseudo code: [code block]
421283016,9375,glassez,2018-09-14T09:02:38Z,"i have seen very bad web interfaces from very large and cool companies (any sophomore from some it department could do better without straining too much). i've repeated again my basic idea: how can some web client represent tracker status by coloring its name, for example, if you don't return the status in processable form but just its particular representation? it seems that you are constantly developing in reverse order, adjusting the api to your specific interface. this is the wrong workflow!"
421821480,9375,Piccirello,2018-09-16T19:50:22Z,squashed all fixups
431736657,9375,Piccirello,2018-10-22T04:09:24Z,updated to reflect new column names and rebased. before: after:
432085898,9375,glassez,2018-10-23T04:21:35Z,"can tracker manipulations be applied to set of torrents (not to individual one only)? many users have been asking for this feature recently, but there is no one to implement it correctly in gui. there shouldn't be a big problem to do this here (at least in the api). maybe not in this pr..."
432442527,9375,Piccirello,2018-10-23T22:19:15Z,would the goal be to allow adding a list of trackers to multiple torrents at once? i'm not sure what other methods could accept multiple torrents.
432635119,9375,WolfganP,2018-10-24T12:29:05Z,"as always, thx for improving the webui. btw, are the columns ""sortable""? (ie be able to click on the column header and make the list to sort by that column criteria)"
432644786,9375,Piccirello,2018-10-24T12:59:13Z,the columns are not currently sortable or resizable. i don’t think it would be that much effort to add that functionality. i will look into it.
432701977,9375,glassez,2018-10-24T15:16:54Z,"i think yes. as far as i remember, users asked for the ability to remove the tracker from multiple torrents. and then why not allow to replace tracker (aka ""edit"" here) for multiple torrents? the intention is the user selects multiple torrents in some ui and it manipulates a common set of their trackers."
433766143,9375,Piccirello,2018-10-29T01:59:11Z,i've created #9780 to track this feature
438342952,9375,Piccirello,2018-11-13T16:43:44Z,i haven't found the time to make the trackers table sortable/resizable. i'd rather get this pr into 4.1.4 and target a sortable/resizable trackers table and content table in a future pr (issue #8663). please review
441463883,9375,Piccirello,2018-11-25T19:03:44Z,really hope we can get this in before 4.1.5 is cut
444814780,9375,Chocobo1,2018-12-06T09:56:00Z,you have conflicts now.
445132784,9375,Piccirello,2018-12-07T06:06:05Z,fixed conflicts
445376138,9375,Piccirello,2018-12-07T21:48:32Z,my local builds seem to be failing on the same `asconst` error as some of the travis-ci builds. anyone know why?
445386184,9375,thalieht,2018-12-07T22:32:22Z,looks like g++ 4.8.x has a problem with it [a link] should i rename one of the asconst templates until whatever needs gcc 4.8 is not supported? if yes rename to moveasconst? travis was broken at the time so we didn't catch it...
445404657,9375,Piccirello,2018-12-07T23:55:37Z,updating to gcc 4.9 fixed it for me :thumbs_up:
445429231,9375,Chocobo1,2018-12-08T04:18:28Z,"lgtm, wait for other's review before you squash the commits."
445682908,9375,Chocobo1,2018-12-10T04:54:38Z,please squash commits.
446074428,9375,Piccirello,2018-12-11T05:09:09Z,fixup commits were squashed
446079922,9375,Piccirello,2018-12-11T05:44:13Z,fixed conflict
446454875,9375,Chocobo1,2018-12-12T04:06:36Z,thank you!
515252546,10948,LordNyriox,2019-07-25T23:33:51Z,": thanks for all your work on this feature. :} after this pr is finalized and merged, would you be willing to post a template theme (including icons) for qbittorrent?"
515475114,10948,jagannatharjun,2019-07-26T14:25:32Z,yes
518703887,10948,jagannatharjun,2019-08-06T14:50:57Z,"should i fall back to the default icon mapping if the icon path can't be resolved with custom `iconconfig.json` . may be provide an option i am thinking to replace the current selection method with something like [a link]. with the current setup, it seems more natural."
518765655,10948,glassez,2019-08-06T17:25:30Z,"my main suggestions for naming are the following: id should contain two main parts. first part (actually last part of id) is ""common semantic"" (e.g. ""addaction"" or ""logo""). the second part is ""scope"" of particular id, possible multilevel (e.g. ""addtorrentdialog.torrentcontentview""). ""scope"" can be omitted in icon mapping (partially or fully) by replacing with ""\*"" character. it allows the theme creator to achieve any desired detail. e.g. someone can set different icons for each particular id but someone else can create very reduced theme (by having only entries like ""*.addaction"", i.e. set the same icon for all similar places). we should avoid any ""internals"" in id parts. i.e. ""contenttree"" is not so good, imo (due to ""tree"" in it). it should just point to some widget (or view) that shows content of torrent (regardless of the particular type of this widget), so ""torrentcontentview"" is better name. we can avoid too much detail in id scopes, but only if it is not likely to be needed in the future (because we will not be able to change existing ids without breaking existing themes)."
519104239,10948,glassez,2019-08-07T13:46:52Z,what do you mean exactly? if there is no such id (or appropriate generic id that matches it) in theme then you should use built-in icon (and cache it for this id). this situation can occur when some new qbittorrent version introduces new id so there is no matches in existing themes. you also should indicate this event in some way (maybe show message box about missing icons or some less annoying way). or maybe don't fallback and just show some predefined icon placeholder? if the theme contains some id but mapped path is invalid then it's real bug in theme and you shouldn't fallback to correct icon.
525292274,10948,jagannatharjun,2019-08-27T13:06:42Z,![a link] here is a theme if anyone wants to try out. [a link] update?
525608455,10948,glassez,2019-08-28T06:50:13Z,"i'm sorry, i just can't get around to it for lack of free time. it's on my to-do list, so i'll be back here as soon as i can."
530889172,10948,jagannatharjun,2019-09-12T15:52:15Z,"well, finally the system theme finally works, tested on ubuntu is it how it supposed to look? :squinting_face_with_tongue: ![a link] also, i introduced a new json config key `search-dirs`, basically in addition to `icondir`, icons are now searched also in subdirectories provided in `search-dirs` i find it necessary to add system icon theme support without changing the current icon structure."
530902357,10948,Chocobo1,2019-09-12T16:25:28Z,"seems it is working mostly. and i noticed some icons are still from qbt (i.e. not from system), such as the options icon in the menu bar and icons for general tab and peers tab. not sure that is normal under ubuntu... maybe could help with this. or perhaps you missed that we used to have fallback names for some icons? (i didn't checked your code yet.)"
530928690,10948,glassez,2019-09-12T17:36:43Z,probably [a link] was missed too.
532122508,10948,jagannatharjun,2019-09-17T08:40:20Z,with sudo ![a link] without sudo ![a link] :thinking_face:
532728858,10948,jagannatharjun,2019-09-18T15:08:41Z,"i think with the addition of `search-dirs`, the qbittorrent's `iconconfig.json` and `systemiconconfig.json` can be merged into a single file. what do you think ?"
532745435,10948,glassez,2019-09-18T15:45:44Z,"what do you think ? sorry, i can't keep up with you... what's `search-dirs` for?"
532748950,10948,jagannatharjun,2019-09-18T15:54:03Z,"i introduced this in the previous commit to making system icon theme works because there may be some icons that are not present in the system theme. so i added an extra parameter in json `search-dirs` which specifies the directory inside the uitheme to look for the icon. this can be used to merge the systemiconconfig.json and iconconfig.json as most of the system icons have the same name but they are stored in directory `qbt-theme`. merging means providing an alias in qrc, this way user can still specify a custom `systemiconconfig.json`"
532750456,10948,jagannatharjun,2019-09-18T15:57:39Z,"actually with current pr state, we can actually use `systemiconconfig.json` on all systems as default icon config and system icon theme will only be used when allowed by preferences."
533501326,10948,glassez,2019-09-20T10:34:07Z,"it seems that you went beyond the designed model. besides, it required you to introduce new entities (i.e. ""search dirs""). when some icon isn't presented in current system theme you should just use default icon for this iconid (that are supposed to always be presented)."
533631801,10948,jagannatharjun,2019-09-20T16:55:07Z,"so in systemiconconfig.json, all values should be treated as system icons? don't allow paths? also, i don't think `m_allowedext` is actually needed, i will be removing it and replacing the icons with full qualified icon paths in iconconfig.jsons"
533765480,10948,glassez,2019-09-21T04:05:19Z,":+1: yes, of course. also i would still move system and default mapping into the code."
533785722,10948,jagannatharjun,2019-09-21T10:07:48Z,"well, will following be ok? - 1. load both systemiconconfig.json and iconconfig.json. there should be no check for systemiconconfig.json 2. in geticonpath, if the qicon::fromtheme returned an empty icon then get the icon from the `iconconfig.json` basically, have two vaiable `m_systemiconmap` and `m_iconmap` separately in `iconconfig.cpp` or inside the `uithememanager.cpp`"
533791929,10948,jagannatharjun,2019-09-21T11:50:49Z,"oh! :tired_face: i was implementing this and it doesn't make sense xd. my final take will be: 1. load custom systemiconconfig and merge with default systemiconconfig 2. load custom iconconfig and merge with default iconconfig 3. in geticon if qicon::fromtheme and fallback both fails, get the icon from iconconfig what do you say? **edit:** will it make more sense to not merge systemiconconfig, so that in case of error we get the icon from custom iconconfig"
533848417,10948,jagannatharjun,2019-09-22T04:11:09Z,![a link] ubuntu icon theme - [a link]
638187548,10948,glassez,2020-06-03T13:12:26Z,superseded by #12861.
423575037,9562,LordNyriox,2018-09-21T15:31:51Z,": it seems that you are reducing the accuracy of the graph, in an effort to improve its visual appearance. unless this also improves application performance (the graph has a history of being a cpu hog), i cannot condone form over function. perhaps an alternative solution can be presented?"
423587125,9562,dzmat,2018-09-21T16:05:11Z,in current version there is no so much accuracy to regret about loss of it. speed graphs are spiky for whatever reason for a long time already. the only accuracy you get is knowledge of exact value of one spike on graph. all other spikes has the same 'accuracy' as with new aligned scale.
423624712,9562,LordNyriox,2018-09-21T18:07:40Z,": i will admit that (judging from the screenshots) the accuracy loss is slight. even so, i would rather not add an additional calculation (which may add cpu overhead), for a marginal improvement in artistic appearance."
423723822,9562,dzmat,2018-09-22T07:26:57Z,"well, so if we concerns performance side, i decided to make some test. i measured with `__rdtsc()` builtin how many clock ticks is spend on generating labels text in old code and new code and did not notice much difference. both variants gives approximately 50000 clock ticks (with very high dispersion). here comes histogram of captured samples in new code (old code looks the same) ![a link] readings are constantly jumping (i think because of multitasking) and i can not say which code is faster for sure. btw i am surprised, how many ticks consumes this seemingly simple operation. [code block]"
423750926,9562,LordNyriox,2018-09-22T15:14:15Z,": believe it or not, that was even worse when [a link] the graph feature. the graph code went through a major refactor in [ ], in an effort to improve performance. note that there was also some demand for an option to disable the graph feature entirely, but despite 's promises, that option was never implemented. [a link]:"
423752108,9562,dzmat,2018-09-22T15:32:37Z,"if you select any other bottom tab (general,trackers,peers, etc) all this drawing code is not executed at all, and does not consume any cpu time. tested it right now."
423787609,9562,LordNyriox,2018-09-23T02:43:43Z,": correct. however, it does use up some memory (to store point history). [a link]: perhaps there could be an option to **not store** this data when the graph is not open? (effectively resetting the graph every time it is closed.)"
429296880,9562,glassez,2018-10-12T11:38:04Z,"i'm sorry, i'm not sure what you want to do here. could you explain it in more detail, preferably with examples and screenshots compared to the current behavior?"
429384907,9562,dzmat,2018-10-12T16:32:35Z,"this is nice looking labels (with 1-2 non-zero significant digits) targeted by this pr ![a link] these are labels in current version. very often they contain 3 non-zero significant digits and looks ""non-round"". ![a link] ![a link] ![a link]"
429914414,9562,dzmat,2018-10-15T16:05:14Z,"well, refactoring can not be finished, but only paused :) . so it is time for the next iteration of a review."
434948314,9562,glassez,2018-11-01T06:47:33Z,thank you!
548697095,11433,jagannatharjun,2019-11-01T07:43:39Z,"my ide breaks without terminator but it compiles fine xd. also, msvc doesn't actually give any warnings fixed"
549796558,11433,jagannatharjun,2019-11-05T12:09:38Z,well `transferlisttextcolors` can be moved `uithememanager.h` and colors can only be quired through `uithememnager` class
550390284,11433,glassez,2019-11-06T16:31:08Z,"but why all this perversion with so-called ""convenient"" classes, ugly names in qss file, etc.? we do still need custom configuration file for supporting theme icons. why not use it for ""dynamic"" colors too?"
550391605,11433,jagannatharjun,2019-11-06T16:33:52Z,i think i presented you the option of using json in the linked issue but you liked this approach more.
550399149,11433,glassez,2019-11-06T16:50:18Z,"sorry, but it didn't seem like a workaround way initially. i thought it will work almost behind the scenes like other qss stuff does."
551103432,11433,jagannatharjun,2019-11-07T14:30:38Z,what do you mean by `textcoloridbystate`? should it be something like `uithememanager::getcolorbytorrentstatus` or `uithememanager::gettorrentstatuscolor` and also what should be the format of json. i am thinking something like `config.json` with [code block]
552164929,11433,jagannatharjun,2019-11-10T05:30:53Z,opinion?
552183869,11433,glassez,2019-11-10T10:56:35Z,"should it be something like `uithememanager::getcolorbytorrentstatus` or `uithememanager::gettorrentstatuscolor` no and no. i mean some function in transferlistmodel.cpp that maps torrent statuses to color ids (e.g. `torrentstate::downloading` => ""transferlist.downloading""). i am thinking something like `config.json` with we don't really need several configuration files so it should contain all options, e.g.: [code block]"
552185202,11433,glassez,2019-11-10T11:15:58Z,", putting some code or data in one place or another makes little sense on its own. such a structure will not improve anything if things continue to be cross-dependent. i'm trying to get you to do a ""less-depending"" architecture. sorry, i'm pretty limited right now, otherwise i'd draw a little diagram. in words: 1. theme clients (i.e. widgets etc.) know nothing about theme implementation. we just declare some ""theme entity ids"" and know that ""theme manager"" can give ""theme entity"" (i.e. icon, color) by its id. 2. ""theme manager"" knows nothing about its clients and how/where ""theme entities"" are used. it just define ""theme file"" format and implement mechanism that allows to obtain ""theme entity"" from ""theme file"" using its id."
559245342,11433,sledgehammer999,2019-11-27T20:45:44Z,"i suppose my review isn't needed, since the architecture itself is in question now."
562914841,11433,jagannatharjun,2019-12-08T05:36:03Z,"should it be in `colors.config`, because people are asking for progress bar color as well? also, there are lots of icons so it will be better to separate them?"
562915270,11433,jagannatharjun,2019-12-08T05:45:59Z,okay progress bar color is because of `qproxystyle` used to print draw the progress bar.
562923224,11433,glassez,2019-12-08T08:16:12Z,"it's not a problem, imo. it's better than load multiple configuration files."
562925472,11433,jagannatharjun,2019-12-08T08:53:44Z,i was trying to get the progress bar first so i did something like following in `transferlistdelegate.cpp` [code block] but progress bar is not drawing with the style and i am pretty sure my stylesheet is correct. can someone give me any idea! it actually drawn correctly without the stylesheet(default option) ![a link]
562925538,11433,glassez,2019-12-08T08:54:59Z,"as for icon support, we are really stuck here. i've been thinking about it a lot lately. i think we're aiming for excessive perfection. unfortunately, too few people are involved. anyway now i have an idea how to make it a little easier (or even a lot easier)."
562925878,11433,jagannatharjun,2019-12-08T09:00:35Z,hope it doesn't involve rewriting the whole thing again :face_with_tongue::crossed_fingers:.
562931677,11433,glassez,2019-12-08T10:19:24Z,"unfortunately, it is a completely different way. but that's not a problem for you, is it? seems like you'd rather rewrite the code a few times than discuss the intended changes (no offense, okay?). it seems to be easier/faster to implement the idea i'm thinking about than to finish current one. by the way, maybe it's not my idea? maybe someone has expressed it before, but it was rejected the first time? in short, here it is: we just allow theme to contain icons within the same folder structure as default icons. then the icon search algorithm will be something like this: 1. if ""use system icons"" is enabled (linux only) try to load system icon. if it's failed fallback to the next step. 2. if custom theme is enabled try to load icon from theme. if it's failed fallback to the next step. 3. load default icon. that is all. no changes out of uithememanager. no configuration files. and i think that will be quite enough."
562937825,11433,jagannatharjun,2019-12-08T11:33:25Z,"that's my original proposal for the theme support but you insisted on json based approach. but nevertheless, it's been a good learning experience. edit: i have exams and other stuff going on so can you finalize the idea in the meantime and give me the final specification. i will get it done by 20."
562938761,11433,glassez,2019-12-08T11:43:46Z,please remind me why it was rejected last time. maybe it's really important...
562939105,11433,jagannatharjun,2019-12-08T11:47:37Z,here it is [a link] i agree it's a bit naive.
562951111,11433,glassez,2019-12-08T13:56:22Z,"well, maybe your explanation wasn't so obvious to me, or maybe i was just being perfectionist..."
562952107,11433,glassez,2019-12-08T14:06:50Z,"basic idea is in [a link] or is there something missing? everything else seems to be implementation details... so you can either clarify something in advance if you have something unclear, or just start writing code, and then we'll see all the flaws. please publish it as separate pr."
564649763,11433,glassez,2019-12-11T17:29:09Z,probably we should inherit delegate from qstyleditemdelegate as suggested in #6434.
564743888,11433,andrewpros,2019-12-11T21:36:48Z,"well i think the aim should be to integrate everything in a single place, the theme file and not multiple config files, do it once, but for good, with full custom theme support. i did manage to compile qb the easy way with msys2 on windows and do some quick digging with qstyleditemdelegate [a link] the point is, it works, even with padding, but then i dont know yet how we can set dynamic styles for different states in qss so that it would be accessible in code, but im sure there is a way, its a delegate painting so we can't give the item an id or add/change dynamic custom property reflected in qss right? well maybe we should just limit ways to do it in advance and just add parent container id that will allow to do this the simple way, just change the parent container state so that qss can style descendants by it, we don't really need per column different colors and states i guess, its a whole row text style already, so that would be fine."
564895664,11433,glassez,2019-12-12T08:05:43Z,"yes. hell, you're making me dive into this out-of-my-interest problem. i had to investigate something, so i have some idea (maybe it won't work - need to check). we can assign custom properties of widget classes from qss. but currently transfer list item colors are assigned by model which isn't widget class. making some workaround with dummy widgets (like previously suggested here) is bad idea. but we can declare appropriate properties of transferlistwidget class. then we can change current logic to not assign item colors from model but do it in delegate (i.e. delegate check torrent state and assign item color using appropriate property of widget class). , what do you say? anyway qbittorrent theme file isn't qss. it contains qss file as well as other resources (e.g. icons, still under development)."
564915883,11433,jagannatharjun,2019-12-12T09:07:30Z,"doesn't it will produce the same ugly names in qss and also isn't its model's job to provide foreground colors. anyway, it will be less work so i will be to happy implement this way. xd"
564954409,11433,glassez,2019-12-12T10:47:27Z,"yes. it will contain names like ""qproperty-pauseditemforeground"". so let affected people (theme creators) decide whether they accept it or not. yes. but it's nothing wrong if delegate redefine them for some reason. and since transferlistwidget isn't abstract view there is nothing wrong if it has ""subject domain"" related properties (i.e. item foreground colors for torrent states). so if you guys decide to go this way, i won't mind (unless some pitfalls come up here)."
564997874,11433,andrewpros,2019-12-12T13:02:48Z,"well i know, i compiled a theme myself, but the qss file is the main part of the style. if ppl will create themes then all in one file is nice for sharing instead of multiple configs or in app settings just for that, honestly it would be strange to do it like this, if there can't be a simple workaround with qstyleditemdelegate and qss then i guess the colors config could be as good as a file inside the theme file that qb reads. its just i don't have the knowledge, but for a qt veteran it should be easy to do i even with full custom style support for transfer list and not only colors. define ugly, i think it doesn't matter really, ease of use and full custom theme params for any element is the main goal, making it the way everything can be contained in a single qss is worth the effort even with ugly names, but still they are perfectly supported by the qss engine, i mean ugliness shouldn't stop functionality."
565681225,11433,glassez,2019-12-14T04:22:03Z,"well, here is better solution. model still assign foreground colors. and there is no cross dependencies. you need to define `transferlistmodel::statecolors` property (not qt property, just getter/setter) and assign it from `transferlistwidget` class. (otherwise you need to define an appropriate property of `tansferlistdelegate`)"
565936035,11433,jagannatharjun,2019-12-16T07:20:28Z,"can you take a fresh look and if possible can we try for 4.2.1 because i'm getting quite a number of requests. basically now ""convenience class"" is shifted in transferlistwidget and when modified the concerned property request to change the value in the model. individual values are stored in the model class."
566146455,11433,jagannatharjun,2019-12-16T16:53:52Z,i have updated the pr.
566153808,11433,jagannatharjun,2019-12-16T17:11:46Z,i think you can review now.
566168972,11433,glassez,2019-12-16T17:50:42Z,", should we wait for your review?"
566171576,11433,jagannatharjun,2019-12-16T17:57:39Z,"also, should i have to open a separate pr for 4_2_x branch?"
566173783,11433,glassez,2019-12-16T18:03:45Z,no. currently it follows master.
566699692,11433,sledgehammer999,2019-12-17T18:55:35Z,am i missing something? i see the interconnection between the model and the view. but where is the loading of the colors from the qss? is there going to be another pr for that?
566703724,11433,glassez,2019-12-17T19:06:00Z,it's done by qt itself. declared qt properties of qwidget-based classes are accessible from stylesheet.
566710819,11433,sledgehammer999,2019-12-17T19:24:10Z,i am inclined to do a release in a few hours. do you reckon that i should merge+include this pr too?
566737308,11433,glassez,2019-12-17T20:33:01Z,"unfortunately, i won't be able to run and test it anytime soon, so i would merge it but not include it in the next release. we need to make sure it doesn't break the existing functionality if gui (i.e. when custom theme isn't enabled). if someone can check it out and confirm it soon, then i don't mind including it in the upcoming release. this seems to be highly anticipated by many users."
566740113,11433,sledgehammer999,2019-12-17T20:41:04Z,"+1 i was thinking the same, that's why i asked. imo, it's better to provide a test build on top of the next release to those users."
566856989,11433,glassez,2019-12-18T03:59:03Z,", travis fails to build it due to `std::unordered_map`. seems you still need to provide hash function for torrentstate. so just switch back to qhash and provide qhash (you should declare it in bittorrent namespace, e.g. below type declaration)."
566857343,11433,glassez,2019-12-18T04:01:00Z,", well, v4.2.1 is here so we can merge it (after it was fixed), isn't it?"
567329553,11433,glassez,2019-12-19T04:40:42Z,here is how i implemented qhash for torrentstate in my another job (still unpublished): [code block]
567354379,11433,jagannatharjun,2019-12-19T06:29:10Z,i have updated the pr please take a look. i had an exam yesterday that's why i was missing. :beaming_face_with_smiling_eyes:
567558663,11433,sledgehammer999,2019-12-19T16:20:44Z,thanks
568892047,11433,ArcticGems,2019-12-25T12:05:57Z,why don't this pr has the 4.2.**2** milestone? (is it withheld for later release?)
2168376356,20951,ManiMatter,2024-06-14T16:32:58Z,", - i would appreciate your review. i tested it and it works. only one small item that is not yet working as expected, maybe you can point me in the right direction? on the gui, sorting by the ""private"" column does not work. on the webgui, it works as expected. my hunch is that i am making some mistake around here, but i have not been able to figure it out. [a link]"
2168751826,20951,thalieht,2024-06-14T20:55:46Z,"you have to add the column to `transferlistmodel::internalvalue` problem in general tab in gui only: - select a private torrent - select a torrent without metadata - private field in general tab is not updated to ""no"""
2168834142,20951,ManiMatter,2024-06-14T22:20:15Z,"thanks for the review and pointers, spot on. now it works. i am trying to reproduce this. what's the best way to generate a torrent without metadata?"
2168854059,20951,thalieht,2024-06-14T22:50:33Z,add a magnet link to session and pause it before its metadata are retrieved.
2169173571,20951,ManiMatter,2024-06-15T07:12:56Z,"thank you, i've been able to reproduce it. i'm a bit lost as to why this happens. i tried validating the ""m_torrent"" before the isprivate() like this, but it didn't do the trick: [a link] any ideas?"
2169248505,20951,stalkerok,2024-06-15T09:42:28Z,this can also be done by adding a non-existent magnet link or you can use an existing one by changing a few characters.
2170618833,20951,ManiMatter,2024-06-15T20:04:57Z,does anybody have an idea how to solve it?
2175661997,20951,ManiMatter,2024-06-18T09:39:46Z,"anyone? already a pointer where to look to find a solution would be appreciated. i‘m tapping in the dark as to why this happens.. in the webapi i see that the private status for torrents without metadata is false. however, switching in the gui (not the webgui) from a private torrent to a torrent without metadata keeps the flag on ‚true‘, which makes me believe it is not false but null or something similar in the torrent data model, which causes the update to fail. i‘m lost as to how & where to tackle this. thoughts anyone? thanks for any pointers."
2176744575,20951,thalieht,2024-06-18T18:47:25Z,this will take care of it: [a link]
2184071836,20951,ManiMatter,2024-06-22T15:20:13Z,"hi this change reverts to the state as i had it originally; the redundant torrent check i had added as an attempt to fix the problem you raised (without success). i reverted it (as suggested), but now of course we are back to step 1 where selecting a torrent without metadata will flag ""private: yes"" if selected after a private torrent in the gui any pointers still appreciated how to solve this; apologies you already have pointed me in the right direction and i have not picked it up"
2184085485,20951,thalieht,2024-06-22T16:09:54Z,"something like this, (not sure if multiple conditional operators in the same line are allowed), also you missed this [a link] (added below) [code block]"
2184100600,20951,glassez,2024-06-22T16:50:39Z,i would rewrite it in slightly different way: [code block]
2184155168,20951,glassez,2024-06-22T18:56:04Z,it would be nice to see screenshots.
2184155181,20951,ManiMatter,2024-06-22T18:56:08Z,"thanks for the inputs. will have a look how to add this in the gui/webui both for the table and the properties section. for the api responses of the /info and the /properties endpoint, the value returned for items that don't have metadata is still ""false"". i feel here we probably should not return the ""private"" flag at all, so that the absence of it is consistent with ""n/a"" behavior on frontend, and ""false"" means it's properly false. what do you think?"
2184175736,20951,ManiMatter,2024-06-22T20:11:37Z,### gui: ### webui:
2184178185,20951,ManiMatter,2024-06-22T20:21:35Z,"here's a summary of what i still see as open and where i'd appreciate pointers: 1) the `/properties` and the `/info` **api endpoints** return `private: false` for torrents without metadata. my view: ""private"" flag should not even be included. my hunch: that needs to be changed in the `serialize_torrent.cpp`. do you agree? [a link] 2) torrents without metadata return ""no"" in the **webui** in the table as well as the properties section. my hunch: once above (1) is changed, the logic that i have already added should work. let me know if you see it differently. 3) torrents without metadata return ""no"" in the **gui** in the table as well as the properties section. here, i followed your [a link] above, but for some reason, it's ignored. any pointers appreciated. 4) the bug that does not reset the private flag in the properties section of the **gui** for torrents without metadata is still there. my hunch is that once (3) is resolved, this will be solved, too. let me know if you see it differently."
2184938138,20951,glassez,2024-06-23T10:38:14Z,"no. this serialization is also used by synchronization api support routines, which expects it to produce structures of the same layout (in order to be compared field by field). fyi, webui torrents table uses ""sync"" api, not ""torrents/info"". the solution could be to return a ""null"" value if there is no metadata, e.g.: [code block] but i think it would be easier to go the same way that is used in the main application code, i.e. provide ""hasmetadata"" field via webapi and use it in webui."
2184949986,20951,ManiMatter,2024-06-23T11:22:54Z,"i think both make sense. i'd expect ""null"" to be returned for key_torrent_private if it's neither true nor false (since no metadata), and that we return the hasmetadata as well, and then use this info in the webui"
2185014471,20951,ManiMatter,2024-06-23T14:35:18Z,"i have implemented [a link] for the /info api, and am struggling to do the same on the /properties api. what works for now is that in case there is no metadata, i return ""-1"" for the ""private"" key, but in reality i think we should be returning ""null"" rather than ""-1"". replacing ""-1"" with ""qvariant()"" seems not to work. any ideas? [a link] otherwise: n/a is now showing for the private-flag (gui/webui both table as well as properties section) for torrents that don't have metadata"
2185036510,20951,glassez,2024-06-23T15:14:16Z,"sure. after all, `qjsonobject` is being constructed here, not `qvariantmap`. so you should use `qjsonvalue()` instead of `qvariant()`."
2185102953,20951,ManiMatter,2024-06-23T16:15:40Z,"that has worked beautifully. now everything seems to work as expected. to merge this, do you see other changes needed?"
2185761699,20951,stalkerok,2024-06-24T07:03:50Z,"ci - windows won't start, crashes."
2185783523,20951,ManiMatter,2024-06-24T07:16:54Z,thanks for spotting this. i unfortunately have no windows experience. any ideas why it happens?
2188846302,20951,ManiMatter,2024-06-25T12:47:14Z,"- is the windows version still crashing after the additional changes from ? if yes, are there any logs or anything that helps us understand why that might be the case?"
2189802627,20951,stalkerok,2024-06-25T19:22:19Z,"event log имя сбойного приложения: qbittorrent.exe, версия: 5.0.0.0, метка времени: 0x667abeea имя сбойного модуля: msvcp140.dll, версия: 14.36.32532.0, метка времени: 0x04a30cf0 код исключения: 0xc0000005 смещение ошибки: 0x0000000000012f58 идентификатор сбойного процесса: 0x179c время запуска сбойного приложения: 0x01dac732e39f5c7d путь сбойного приложения: ...\qbittorrent test\5948 add ability to display torrent privateness in ui\qbittorrent\qbittorrent.exe путь сбойного модуля: c:\windows\system32\msvcp140.dll идентификатор отчета: f2f90df4-6265-45c2-8b09-6b9c79f1d527 полное имя сбойного пакета: код приложения, связанного со сбойным пакетом: [a link]"
2189811836,20951,ManiMatter,2024-06-25T19:27:13Z,"thanks i just opened it on mac visual studio and it looks like something that can‘t be read, ie lots of gibberish characters. i think we need some help here from somebody who knows windows..."
2189822296,20951,stalkerok,2024-06-25T19:33:16Z,perhaps the language of my system plays a role in this.
2191591799,20951,ManiMatter,2024-06-26T12:39:32Z,based on the logs above i suppose that is russian/cyrillic? is the crash also happening with the windows ci of the latest merge to the main branch or only in this feature branch? trying to understand whether it‘s a general problem or specific to the changes here.
2191782490,20951,xavier2k6,2024-06-26T13:58:46Z,[code block] can you grab/install latest microsoft visual c++ redistributable & see if crash still happens. [a link]
2195165402,20951,stalkerok,2024-06-27T16:26:20Z,"great, there was no crash."
2195477962,20951,thalieht,2024-06-27T19:02:26Z,"turns out i didn't have the latest... all good now, thanks!"
2195494479,20951,stalkerok,2024-06-27T19:13:13Z,"if this will affect running the 5.0 release version, it is worth warning users to install the latest msvc libraries."
2195512175,20951,xavier2k6,2024-06-27T19:25:24Z,"~requiring latest runtime only happens to our ci builds every once in a while, iirc.~ nope, see below. ____ re-read [a link] so, you may be right it actually may be recommended to do this or bundle it/run with installer.?! we had a ticket before for ""runtime error"" #15544, unsure if #17254 & similar are related too in some way."
2198488619,20951,ManiMatter,2024-06-30T09:01:28Z,shall we tag this to milestone 5.0?
2198500348,20951,glassez,2024-06-30T09:44:57Z,i don't think this is a good idea for a pr that doesn't have a predictable completion date. it may not make it to v5.0 in time.
2198501694,20951,ManiMatter,2024-06-30T09:50:36Z,- i was under the impression that this one is pretty much done. do you see remaining items that need to be addressed?
2198502579,20951,glassez,2024-06-30T09:54:29Z,yes. at least [a link]
2209356963,20951,ManiMatter,2024-07-04T17:03:43Z,do you see any other items outstanding?
2212496821,20951,glassez,2024-07-07T16:10:15Z,thank you!
2212546180,20951,stalkerok,2024-07-07T19:29:16Z,", thanks!"
2214925480,20951,stalkerok,2024-07-08T18:44:19Z,no milestone can this be added to 5.0?
2214941453,20951,glassez,2024-07-08T18:53:04Z,"did you test it carefully? does it work as expected (display correct ""privateness"" value and ""n/a"" when torrent has no metadata received, sort correctly)?"
2214953737,20951,stalkerok,2024-07-08T19:00:12Z,i tested this before the final changes and it worked fine. i'll test again a little later to say for sure.
2215091110,20951,ManiMatter,2024-07-08T19:57:06Z,would it make sense that it goes together with [a link] [a link] and [a link] since they are somewhat related?
2215184303,20951,stalkerok,2024-07-08T20:15:57Z,there seems to be something wrong with the sorting gui ![a link] ![a link] web ui ![a link] ![a link]
2216800614,20951,glassez,2024-07-09T07:23:00Z,"as for gui: [a link] as for webui: the problem is most likely that it compares by string representation, and not by logical values, which i insisted on and which was eventually implemented (albeit with errors) in the gui."
2216845700,20951,glassez,2024-07-09T07:45:10Z,could you test #21039? forget it! seems the problem is more serious (provided `customcompare()` function is still unsuitable for `qvariant`).
2217747122,20951,glassez,2024-07-09T13:28:14Z,#21041 should take care about it.
219814228,5264,glassez,2016-05-17T18:43:05Z,fix coding style!
219836432,5264,zeule,2016-05-17T20:03:39Z,fix coding style! where?!
219941276,5264,glassez,2016-05-18T06:55:37Z,"[code block] either remove space or use `{}` instead of `()`. [code block] should be `thistype` according to our naming scheme. [code block] move `{` to the start of next line. and in other similar cases. [code block] function name (even if it is operator) shouldn't contain spaces except in parameter list (unless it's impossible, e.g. `operator bool()`). and in other similar cases. [code block] function name shouldn't contain spaces except in parameter list. and some inline commented violations... and you wonder where?"
224690454,5264,sledgehammer999,2016-06-08T18:48:46Z,i've finished my review.
224734751,5264,zeule,2016-06-08T21:30:16Z,pr updated
270352584,5264,zeule,2017-01-04T11:40:23Z,ping?
295777823,5264,glassez,2017-04-20T15:25:03Z,"iirc, isn't interested in search engine, so we can do it without his approval (unless it affects base or main gui code)."
295782521,5264,zeule,2017-04-20T15:34:23Z,great. i kind of interested in this one with respect to #6661.
295802407,5264,glassez,2017-04-20T16:29:19Z,", this pr has conflicts as said by github."
295808073,5264,zeule,2017-04-20T16:44:04Z,rebased.
295861244,5264,zeule,2017-04-20T19:05:01Z,"no, there are no such constructors or methods."
296158135,5264,zeule,2017-04-21T10:41:48Z,"all the comments have been addressed, i hope?"
296164208,5264,glassez,2017-04-21T11:13:31Z,"apparently, is not yet accustomed to his new duties ;) i mean to send the approval."
296164378,5264,zeule,2017-04-21T11:14:24Z,you did not approve too ;)
296168465,5264,glassez,2017-04-21T11:38:00Z,"oops... apparently, i did it in another pr."
296173474,5264,zeule,2017-04-21T12:06:28Z,thanks to all who took part in the discussion!
296174321,5264,Chocobo1,2017-04-21T12:11:20Z,i kinda hesitate because often i only read the code and sometimes not have enough time to fully understand it. or i can just approve when the author addressed my comments?
296186698,5264,zeule,2017-04-21T13:12:36Z,but a) there are at least three of us who should check a change and b) we merge it into the unstable branch where the code will be tested for a while.
296192164,5264,glassez,2017-04-21T13:35:24Z,"i don't think we should strive for a thorough understanding someone else's code, just need to understand its overall structure and logic. we must inspect it for any obvious errors, typos and coding style violations. we should also look at the interfaces of the new classes and their points of interaction with existing code. other checks as possible."
296236333,5264,Chocobo1,2017-04-21T16:19:52Z,thank you guys for the write-ups.
612454683,12480,glassez,2020-04-11T16:11:01Z,", since you're here, i'll ask you as the original author of cmake support. why is qbittorrent built in several static libraries, and only then they are linked to the final executable file? what's the point?"
612455114,12480,FranciscoPombal,2020-04-11T16:13:18Z,do you mean finding the `--std=` flag in `libtorrentrasterbar_definitions` that is exported by the find package script?
612457084,12480,zeule,2020-04-11T16:22:45Z,"once upon a time i had an idea to make a run-time loaded modules for uis (web, desktop). unrelated to that, cmake at that time did not have a built-in command to append sources from subdirectories to targets. static libraries were a compromise and workaround for these two. i refered to the `libtorrentrasterbartargets.cmake` file, which is installed if libtorrent is built with cmake, and it contains definition for the `libtorrentrasterbar::torrent-rasterbar` target, which you need to link against. it contains `interface_compile_features ""cxx_std_14""`. therefore the c++14 standard will be forced for qbt, and you may not overwrite it. but yes, if you export libtorrent via pkg-config or another way, you have to figure that value out."
612458453,12480,FranciscoPombal,2020-04-11T16:29:01Z,"i see, but i don't want to assume the way libtorrent was built/installed. maybe i could add a case distinction: either libtorrent was built with cmake and we get the value from `libtorrentrasterbartargets.cmake`, or it was not, in which case a warning/info is printed to the user to make sure the standards align (what it does now). what do you think?"
612472940,12480,glassez,2020-04-11T17:34:32Z,"well, there seems no reason to keep it that way. seems [a link] should help."
612473891,12480,zeule,2020-04-11T17:39:01Z,"cmake libtorrent exports that to the pkg-config file too; you get it in `interface_compile_options` as far as i can see. since pkg-config files can contain only gcc-style options, it is easy to check. yes, now it learned how to do that. update: seems like cmake 3.13 and newer can do that."
612512407,12480,jagannatharjun,2020-04-11T20:59:04Z,please test this on windows as well.
612514368,12480,FranciscoPombal,2020-04-11T21:11:14Z,"i know this will probably be an unpopular opinion here, but i think we should not be afraid of requiring (very) recent cmake versions, to be able to take advantage of the ""modern cmake"" features. at first, you would think i'm crazy, because not everyone has the very latest cmake version, and it is often quite inconvenient to get the latest one, especially if, for example, it's not in the official distro's repositories, right? well the situation is better than you think. consider the following: - for bleeding-edge distros such as arch, having the latest version was never a problem - ubuntu users can just use the official repo maintained by kitware: [a link] (it's just strictly better than using the official repositories) - users of other distros not covered by the 2 cases above can use the binary installer at [a link] this distribution can be unzipped to anywhere and run from there, it will not ""pollute"" the user's system directories - as a very last resort, users with very weird setups can compile from source, which is not that bad in the case of cmake. i would expect the number of users who would actually need to do this to be very low, and if they have a very exotic setup, they knew what they were getting into anyway - windows/macos users can just get the binary packages as they always do ([a link] in particular, ""portable builds"" (no installer, just a zip file), are officially provided for windows in light of this, the conclusion is that we could just move to `cmake_minimum_required(version 3.17 fatal_error)` tomorrow, and there would be no problem, there are no disadvantages. this would enable evolving the cmake buildscripts faster with the new features, thus keeping them more maintainable and preventing them from becoming obsolete as easily. and other knowledgeable cmake users could just use the latest features and iterate faster without problems. let me know what you think, if i'm missing some critical flaw in this thought process."
612514933,12480,FranciscoPombal,2020-04-11T21:14:45Z,"what if libtorrent is not build with cmake, but with `b2`? i still think it is important to not assume things about libtorrent was built, or to at least have an escape hatch for the ""not built with cmake"" case."
612516990,12480,zeule,2020-04-11T21:27:55Z,absolutely agree that no assuming for libtorrent distribution mode should be made. my point is simply that forcing a different value for qbt you can break the build.
612565717,12480,glassez,2020-04-12T05:14:51Z,"in such cases, i prefer to stick to the ""golden mean"", i.e. not to look back at outdated or too conservative distros/oses, but also not to chase the latest version unless absolutely necessary. although i, as a windows user, can easily use the latest version of cmake, i still prefer to use the one that is shipped with the official qt distro."
612610816,12480,FranciscoPombal,2020-04-12T13:02:28Z,"right now the patch prevents the user from using unsupported compilers, and from using a c++ standard lower than the minimum required one by qbittorrent itself. in addition, i'd like it if it were possible to prevent the user from using a different c++ standard than the one libtorrent was built with (in the event cmake can detect that). currently, that is not possible (the user may specify c++17 which will override a libtorrent definition of c++14). but fixing that is a little over my head right now, and the patch is already a straight improvement over the current situation, and i'd like to focus on other things. plus the original intent of this patch was only to error out when a compiler that's too old is used. so if the existing stuff is good, this could be merged, and the remaining wart can be ironed out in another pr."
612653663,12480,zeule,2020-04-12T18:00:11Z,"i would suggest 3.16, which added built-in precompiled headers support."
612665644,12480,FranciscoPombal,2020-04-12T19:38:06Z,"is this acceptable? i just took a look at the qt docs, looks like it's pretty easy to change between versions in qt creator, and they even support the new file-based api in cmake 3.14+ (which looks like some sort of lsp, if i understood it correctly)."
612936191,12480,glassez,2020-04-13T15:01:25Z,3.16 is acceptable for me (since it is shipped with the latest qt).
612946325,12480,zywo,2020-04-13T15:23:37Z,latest ubuntu 18.04 lts > cmake 3.10.2 latest debian stable > cmake 3.13.4
612951456,12480,glassez,2020-04-13T15:35:17Z,"it is too old to follow it. in addition, libtorrent requires 3.12. personally, i'm not pushing for a raise at all. i just said that any version up to 3.16 would be fine with me, but i don't think we should raise it for no good reason."
612967629,12480,zywo,2020-04-13T16:13:08Z,"for me, it's not a problem, i'm always using these linux distributions: arch linux, debian unstable and ubuntu development branch."
612994419,12480,FranciscoPombal,2020-04-13T17:12:29Z,that doesn't matter. se my reasoning in this comment: [a link]
613008260,12480,glassez,2020-04-13T17:42:52Z,"in any case, we will not increase minimal cmake version requirements alone. it can be considered only as part of some project changes that require such an increase. the only thing that comes to my mind is to get rid of these intermediate linkings (discussed above)."
616133592,12480,glassez,2020-04-19T13:22:38Z,"seems it is possible long time ago. , cmake 3.1.3 allows it (not 3.13). `target_sources` is even used in some place of qbittorrent cmake configuration as i'v noticed recently."
619403977,12480,Chocobo1,2020-04-25T16:19:47Z,"pardon me, i'm not so familiar with cmake system, if you guys approve it, then i'm ok with it too, no need to wait for my review/approval. edit: on a closer look, the changes looks nice, well done!"
619580365,12480,glassez,2020-04-26T16:29:08Z,"unfortunatelly now travisci cmake based configurations fail on linux due to unsupported compiler (gcc-5.4). , can we use newer compiler?"
619586248,12480,FranciscoPombal,2020-04-26T17:04:28Z,"i'm all for using newer compilers, but this should still work with gcc 5.x: [a link] (ctrl+f `cmake_cxx14_standard__has_full_support`)"
619594806,12480,glassez,2020-04-26T17:54:56Z,it doesn't! [a link]
619606985,12480,FranciscoPombal,2020-04-26T19:05:23Z,"yeah, i saw that. the error message reads: that is: [code block] where in this case, `${_min_std}` is `14`. which means `cmake_cxx14_standard__has_full_support` is `false`, so cmake thinks gcc 5.x does not have full c++14 support. but according to [a link] it believes the opposite. how can this be? anyway, if simply switching to a more recent gcc version fixes the problem, i don't really care about the root cause of this."
619608447,12480,FranciscoPombal,2020-04-26T19:13:03Z,i figured it out. turns out we need cmake >= 3.15.0 to have access to the `*__has_full_support` variables. you previously stated you and would be ok with bumping the minimum supported cmake version to 3.16. are you also on board with this?
619722950,12480,glassez,2020-04-27T05:09:29Z,can we just copy [a link] into qbittorrent own cmake/modules directory and use it with older cmake versions?
619946144,12480,FranciscoPombal,2020-04-27T12:12:33Z,"i strongly disagree with this. would you rather frankenstein our cmake setup with bits and pieces from different versions instead of just requiring a more recent version? who exactly are we trying to please and cater to here? lazy people who don't want to upgrade their cmake version, when there is no excuse not to do so, as i've pointed out before([a link] we should not compromise our development experience and introduce technical debt just because someone does not want to update a piece of infrastructure that according to all modern best practices, is _supposed_ to be kept up-to-date (very easily!). there is literally no excuse to be using anything other than the most recent cmake version (i consider the one bundled with qt to be an acceptable compromise for the sake of convenience though, as it's just one version less than the most recent one, and they seem quick to update it)."
619964045,12480,glassez,2020-04-27T12:48:02Z,"sorry, i don't suggest you to patch older cmake sources/binaries. it's just ""yet another module"", isn't it? at least we have to wait for some ""lazy people"" that update our travisci environment... i wonder why many linux distros provide so outdated cmake?"
619978126,12480,eli-schwartz,2020-04-27T13:14:28Z,"sometimes, projects using cmake have interesting requirements, like ""must compile on debian jessie (oldstable)"" without changes. debian jessie (oldstable) is, as the name indicates, ""old"", so i don't know why this matters to people as users of such distros will no doubt also want old versions of the project, e.g. qbittorrent... i once had to deal with this exact case and exact justification here: [a link] honestly, i see no reason not to bump the the minimum version. but *if* you absolutely must support people on very old versions of debian who want to use the system cmake and nothing else (while building the latest git master of qbittorrent!), then vendoring in parts of newer cmake will... ""work"". travis ci *only* provides outdated versions of distros, and only provides one distro (ubuntu). it's not an accurate yardstick. you can get a better overview from [a link] you can get modern ci on [a link] btw. (it is also a provider for github commits/prs, not just its own git repository hosting.)"
620013940,12480,FranciscoPombal,2020-04-27T14:13:25Z,"-schwartz exactly, i don't think we should cater to users ""who want to use the system cmake and nothing else"". that is irrational laziness at our expense. not to mention that even if they really want to keep the system cmake binary, a modern version of cmake can even be used alongside it without replacing it. so because a practice is widespread, does it mean it's good? would you consider ""i wonder how many distros ship outdated qbittorrent"" a good argument? because recently even complained (and rightfully so) about the newly-released ubuntu 20.04 only including qbittorrent v4.1.7, a 6-month old version, that will presumably not be updated for the whole duration of the lts. the answer to to ""why many linux distros provide so outdated cmake?"" is: because they are flawed. it's a mistake, plain and simple. if they cannot provide updated cmake on a regular basis, that's a limitation that has to be worked around, not catered to or something that should be ""supported"" by us. imagine if it were acceptable for ubuntu to never update firefox past the version present in the initial release of an lts. fortunately, they opened an exception for that a long time ago to fix that broken behavior, they now opened an exception for nvidia drivers, and if they had more resources (or allocated them properly, instead of bullshit like snaps) they would keep cmake and other software also up-to-date by default. for now, that burden falls on the user, but, like i said, it is trivial to stay on an updated version of cmake. it's needless technical debt. i don't think our benchmark for an acceptable addition to the project should be so low as to be ""well, at least i don't need a patched cmake binary!"". i don't assume the maintainer is _being_ irrationally lazy. until proven otherwise, they just haven't had time to do it."
620035677,12480,eli-schwartz,2020-04-27T14:50:30Z,"this will probably happen as soon as travis-ci.com updates to provide a ubuntu 20.04 image, which might take a while... unless they provide their own copy of cmake instead of the one ubuntu ships. ubuntu 20.04 is brand new, so this may take some time... even ubuntu 19.10 according to repology has cmake 3.13.4, but you're using 16.04 and travis only natively supports {12,14,16,18}.04. i suppose you could use docker containers for ubuntu 20.04, debian bullseye, fedora >= 30, opensuse 15.2 or tumbleweed, solus, or my personal favorite, arch linux. as mentioned above, some alternative ci providers provide native images for these modern distros."
620036900,12480,zeule,2020-04-27T14:52:33Z,", there is a big difference between an end-user software like firefox that has no reverse dependencies and a library or a build tool. because the next package your are going to complain about in an lts distribution is a compiler, then system libs and at that stage lts releases make no sense. there are plenty of rolling-release distributions, but those like fedora and ubuntu have a clear policy: only security updates after release. they have to treat any browser update as security one because of the mess created and beloved by web developers."
620041943,12480,glassez,2020-04-27T15:01:08Z,"it was a rhetorical question. seems linux way of distribution (aka ""distro at once"") is not so good after all... i mean, we can't go any further with it until it's able to build on travis."
620055564,12480,zeule,2020-04-27T15:24:26Z,you just need to decide on cmake version and add a repo with recent cmake packages to travis.
620061149,12480,FranciscoPombal,2020-04-27T15:33:33Z,"slippery-slope fallacy? i agree that on a stable distro, critical infrastruture like the compiler and system libs should be pinned at a certain version/maintained by backports. but ""leaf-node"" software should receive more updates, and i consider cmake to be such software. if there is stuff with a hard-dependency on a specific old cmake version, they're doing it wrong. it's _that_ package that needs to be patched, not everyone else forced to be stuck with an old version of cmake. but even if that is not the case, the target audience for cmake is not everyone and their granny. it's developers and some power users interested in building software. they are more than capable of installing the latest version from the official cmake ppa (in the case of ubuntu). kitware provided the ppa because they know there is a significant ubuntu user base, and they wanted to provide a way of _doing things properly_, i.e.using the latest cmake version, on ubuntu that's as friction-less and integrated as possible. --- bonus: here are the packages that depend on cmake in ubuntu 18.04 lts: [code block] all these packages either don't specify a dependency version at all, or they specify a minimum one. none of them specify a maximum or fixed version."
620061709,12480,glassez,2020-04-27T15:34:12Z,"as i said i'm ok with any version up to the one that is shipped with qt distro (aka 3.16). , can you update cmake on travis?"
620062898,12480,FranciscoPombal,2020-04-27T15:36:23Z,there's pros and cons to each distribution model. the official binary packages provided by kitware make updating cmake a complete non-issue on any distro.
620301702,12480,sledgehammer999,2020-04-28T00:13:09Z,the oldest os version supported by our ppa is 18.04 (bionic). our current `travis.yml` is locked onto the older version of `xenial`. luckily travis now supports bionic too. it should be relatively trivial to switch to bionic there. bionic comes with gcc 7.4.0 and cmake 3.10.2. i don't know if that is enough for what you're talking here (i haven't read the whole thread) i don't know if i have time to make the switch. usually did those in the past. i don't directly control this. we either use whatever version ubuntu provides or try to find a 3rd party ppa that has a newer cmake.
620302754,12480,sledgehammer999,2020-04-28T00:16:52Z,travis however has [a link] for bionic.
620303479,12480,zeule,2020-04-28T00:19:25Z,"here are the cmake ppa links: [a link] edit: pardon, not a ppa, of course, but a repository. anyway, it goes to the `- sourceline:` in the same way."
620306534,12480,eli-schwartz,2020-04-28T00:30:36Z,"arch linux has 3822 packages which depend on the gcc compiler libs *at runtime*, i.e. libgcc_s.so (1748) and libstdc++.so (2074), and the numbers are probably not hugely smaller on debian or fedora. runtime dependencies are obviously a problem for stability. conversely, cmake is only ever needed at build time, and if it fails to work, no packages break (but distro engineering may stutter until things are reverted or otherwise fixed, which affects precisely 0 users). developers will also care if cmake breaks, yes, but that's a very targeted userbase in comparison to ""every elderly grandparent whose grandchildren installed debian for them"". also, cmake is far less complicated than a compiler. both in the sense that there's less to regress, and in the sense that it's a lot easier to download a prebuilt distro-independent copy of any version from kitware and simply shove it into $home and use it without otherwise interfering with your entire system. it's easily standalone. there are very obvious reasons why one might expect users to install cmake on their own, but not ""the compiler and the whole base system"". then why do users use such a distro, and then try to upgrade qbittorrent for reasons other than a security update? :p"
620306717,12480,sledgehammer999,2020-04-28T00:31:03Z,pr for switching to bionic #12680
620307482,12480,sledgehammer999,2020-04-28T00:33:23Z,"does that mean that we will depend on latest cmake? personally i don't care, because cmake is not the primary build system for qbt (thus i don't care much about it)."
620310980,12480,zeule,2020-04-28T00:46:46Z,"-schwartz, cmake is a part of the build toolchain and deciding to always update it to the latest version once can ask why the other toolchain packages should not follow the same policy? as a gentoo user for my laptop and arch for every other machine/raspberry pi box in my house, i can't understand why people choose ubuntu or fedora and then want fresh software. even microsoft switched over to the rolling-release scheme. yes, their repo should contain the latest version. but it will probably become the primary one with qt 6?"
620314255,12480,sledgehammer999,2020-04-28T00:59:23Z,i don't know. but if we're forced to use cmake then we shouldn't depend on the bleeding edge of it.
620318880,12480,zeule,2020-04-28T01:13:48Z,"qt guys say qmake will be around for a time being after qt 6 release, and as of now they depend on cmake 3.15.0. it is not possible to force cmake version 3.x to work as 3.y (y < x, of course) or at least check what is incompatible with versions > 3.y. cmake policies do solve a part of this task, but when you access raw variables, like this pr does, nothing can be done automatically."
620483711,12480,FranciscoPombal,2020-04-28T09:14:51Z,"no, it means we'll _use_ the latest version of cmake, but not _depend_ on it. the only constraint is whatever we set as `cmake_minimum_required` in our `cmakelists.txt`. cmake provides extremely good backwards compatibility with the policy system, if that's needed. the real problem comes when you try to use stuff from more recent versions of cmake and then run the script with an older version, which is the problem this pr is running into right now."
620562338,12480,FranciscoPombal,2020-04-28T12:02:12Z,"to add to my previous response: a newer version of cmake will adapt its behavior depending on the policies set. this enables it to emulate behavior of previous versions, if that is needed. thus, using a version that's as recent as possible provides maximum flexibility for using new or old functionality. in this case, that could either be the very bleeding edge or the version bundled with qt, which is not that far behind (3.16 vs 3.17)."
620580080,12480,sledgehammer999,2020-04-28T12:39:21Z,"could you rebase on top of master? i want to add a commit for the cmake ppa. (it is needed for this pr, right?)"
620586862,12480,FranciscoPombal,2020-04-28T12:52:36Z,done
620591908,12480,glassez,2020-04-28T13:01:47Z,", since this ""feature"" won't work correctly with current minimum cmake version we can't consider it out of minimum version change."
620593296,12480,FranciscoPombal,2020-04-28T13:04:27Z,should i bump the minimum required cmake version in another commit or in another pr altogether?
620594070,12480,sledgehammer999,2020-04-28T13:05:50Z,i've pushed a commit in this pr that should make travis use cmake from the [a link] repo.
620597042,12480,glassez,2020-04-28T13:10:51Z,here. as i said (in other words) it breaks cmake project without correct minimum cmake version.
620598932,12480,sledgehammer999,2020-04-28T13:14:06Z,"and bionic fails with: [code block] so gcc 7.4.0 is not enough? maybe ""full support"" is a bit strict?"
620601018,12480,FranciscoPombal,2020-04-28T13:17:48Z,"looking at the travis log and config in [a link] it does not look like it's pulling in cmake from the kitware repo. build should work even with gcc 5.x, as i tested it."
620604568,12480,FranciscoPombal,2020-04-28T13:22:47Z,"yep, looks like you need to run ~`sudo apt update && sudo apt upgrade`~ (edit don't do this, travis ci docs say you should not do this) (or just `sudo apt install cmake`) after the kitware repo gets added, otherwise cmake will not be updated at all: [a link]"
620606621,12480,glassez,2020-04-28T13:26:03Z,", your commit s order is incorrect (the first commit depends on the second one) so please either change the order or just squash them."
620610005,12480,sledgehammer999,2020-04-28T13:31:48Z,i think i fixed the cmake install issue. apparently we depended on the preinstalled cmake from travis. now i added the package to the install list of the yaml. it should pull the new version from the repo.
620611379,12480,sledgehammer999,2020-04-28T13:34:15Z,"ok you clobbered my commit, but oh well... almost the same change"
620612442,12480,FranciscoPombal,2020-04-28T13:36:03Z,"oops, sorry about that, i did not see yours in time. is it ok?"
620614666,12480,sledgehammer999,2020-04-28T13:39:49Z,yeah. same effect. i just had put `cmake` after `colormake` instead. no big deal.
620616281,12480,FranciscoPombal,2020-04-28T13:42:41Z,"build still fails, but how is the older version of cmake still being used? see [a link] according to [a link] the most recent version is installed."
620619706,12480,sledgehammer999,2020-04-28T13:48:59Z,the new one is indeed installed if you look inside the `adding apt sources` section of the log. [code block] i don't see anything else related. but somehow the old cmake gets still used. i hope that the new cmake doesn't use a different binary name...
620621385,12480,sledgehammer999,2020-04-28T13:51:51Z,"it seems this is a known ""problem"" with installing newer cmake: [a link] i will try the suggestion mentioned there to see if it works."
620624210,12480,FranciscoPombal,2020-04-28T13:56:48Z,the kitware apt repo installs to the same binary location as the regular package (`/usr/bin/cmake`). the binary installer installs to `/usr/local/bin/cmake`. travis probably has some weird configuration going on.
620625176,12480,zeule,2020-04-28T13:58:27Z,i do the following for travis: [code block]
620632596,12480,FranciscoPombal,2020-04-28T14:11:34Z,build is working :tada:
620634622,12480,sledgehammer999,2020-04-28T14:14:56Z,"ok, i am off then. the fate of this pr is upon the other people that got involved here."
620657367,12480,FranciscoPombal,2020-04-28T14:53:25Z,simplified the function name to be more obvious (it is now called `qbt_minimum_cxx_mode_check`) and added documentaion/description at the top.
621614842,12480,Chocobo1,2020-04-30T05:05:51Z,"in case nobody noticed, cmake builds are still failing: [a link] [a link]"
621634478,12480,glassez,2020-04-30T06:13:38Z,oops... i shouldn't have believed you. travis still uses the old cmake version for some reason.
621718420,12480,FranciscoPombal,2020-04-30T09:22:46Z,"you don't have to believe me, look at the logs yourself: [a link] [a link] [a link] linux builds with cmake were working. looking into it right now."
601299102,12205,glassez,2020-03-19T17:00:17Z,what's the point of the first commit?
601302912,12205,FranciscoPombal,2020-03-19T17:07:44Z,"also i sneaked in a fix for a ""static member access through instance"" clang tidy warning. the reason this commit is here as well is because i expect this will not be the only code related change (see the todos). feel free to ignore it, i can remove it later."
601322798,12205,Chocobo1,2020-03-19T17:46:36Z,"you probably already seen these, so this will be just a note for myself (and anyone who hasn't): [a link] [a link]"
601323767,12205,FranciscoPombal,2020-03-19T17:48:35Z,"yeah, and i forgot to mention: i took inspiration from several man pages, but mostly from the gnu `grep(1)` man page."
601736508,12205,FranciscoPombal,2020-03-20T14:43:41Z,"ok, i'd like to start hearing your opinions about the todos. let's start with these: 1. is the option precedence well documented now, or is it wrong is some way? 2. why do some boolean flags take an explicit boolean argument while others don't? should that be changed? example: `sequential` and `--add-paused`. 3. did i miss any file for the `files` section?"
601863668,12205,thalieht,2020-03-20T19:00:54Z,"3. since you document everything, i have a `.config/qbittorrent/rss/download_rules.json` file. no idea about 1 and 2."
601901921,12205,FranciscoPombal,2020-03-20T20:42:06Z,"i fixed the majority of the todos. now i only need help with clarification about the behavior of option precedence, and the options that take boolean parameters. all the rest is pretty much ready. i am quite sure about everything i wrote so far (besides the option precedence), as i tested extensively and looked a bit a the source code while i was writing. still, i would appreciate proof reading and testing to ensure the man page faithfully describes the program's behavior."
601902446,12205,FranciscoPombal,2020-03-20T20:43:30Z,what is the origin and purpose of that file? if you can post here a nice description i can include that straight away.
602036368,12205,FranciscoPombal,2020-03-21T12:18:49Z,reminder to anyone who wants to see what the finished result looks like; you can just do `cd qbittorrent/doc ; man ./qbittorrent.1`
602043121,12205,thalieht,2020-03-21T13:23:54Z,i've never used rss so i don't even know how it works. i was just messing around with the settings trying to reproduce some reported bug. here's the contents if you can make sense: [code block]
602044430,12205,glassez,2020-03-21T13:36:51Z,rss related files have no stable format and aren't supposed to be edited manually so you shouldn't mention them in documentation.
602074517,12205,FranciscoPombal,2020-03-21T17:15:35Z,how about i just mention they exist but note their contents are not stable? or is their existence and naming also not stable?
602076077,12205,glassez,2020-03-21T17:28:28Z,"i think you can meantion them without detailed description of their formats. otherwise you will need to update documentation after each rss subsystem improvement that affects these files structure. although in fact, they do not change often due to the slow development of rss subsystem."
602077964,12205,FranciscoPombal,2020-03-21T17:43:37Z,"that makes sense. i was not planning to document the file format anyway (i haven't done for the others either). i just want to list what each file is and what they are for at a high level. for example, the description of `~/.config/qbittorrent.conf` is just `main configuration file.` what do you think would be a good short description for `~/.config/qbittorrent/rss/download_rules.json`, similar to that of the main configuration file?"
602080838,12205,glassez,2020-03-21T18:05:32Z,`rss auto downloading rules` or `rss auto downloading rules configuration file`.
602143288,12205,FranciscoPombal,2020-03-22T03:42:32Z,"i decided to leave the discussion about changing the `--add-paused` and `--skip-dialog` to be simple switches without parameters for another time. the whole gui man page is pretty much finalized. i just need confirmation from and that what i wrote in the `description` about option source precedence is correct. after that is solved, i'll remove the corresponding last remaining todo, copy paste most of the contents to the nox man page and adjust accordingly, and open up the pr for final review and proof-reading."
602148890,12205,glassez,2020-03-22T05:06:51Z,"sorry, why we should do it? as far as i remember they represent tri-state values so omitted parameter means ""use default""."
602191901,12205,FranciscoPombal,2020-03-22T12:25:39Z,"isn't it inconsistent with `--first-and-last`, `--sequential`, etc? these options are off by default, and turn on if the flag is specified. no need for `=true` or `=false`. is there is a good reason for this inconsistency?"
602193460,12205,glassez,2020-03-22T12:37:05Z,"if user is allowed to set default values for these changes the appropriate command-line switches should behave the same way as ""add paused"" etc. otherwise there is no inconsistency."
602228564,12205,FranciscoPombal,2020-03-22T15:43:55Z,"i see. in that case, everything is consistent except `--no-splash`, which does not take parameters, but is on by default and the user can change the default in the preferences ui. so it should take parameters. but that can be handled in a separate pr."
608012160,12205,Chocobo1,2020-04-02T17:56:33Z,do you plan to finish this in near future (before next release)? imo you can get a primitive version merged (just leave out the uncertainties) and revise the details later. you already done so much on this and i think it would really benefit the users.
608170727,12205,FranciscoPombal,2020-04-03T00:54:40Z,"there is no rush from my side, since 4.2.3 was just released, i expect i will have some time to iron out the remaining warts before the next release. i'm really close at this point anyway, and i think it would be a waste to ship such a detailed manpage that omits some options. by the way, can you address this comment please? [a link]"
608217054,12205,Chocobo1,2020-04-03T04:04:45Z,"nobody raised any concern except me, then leave it as is."
608641220,12205,FranciscoPombal,2020-04-03T20:23:27Z,"looks like the options precedence does indeed work as i had described. however, i just found out something interesting: 1. suppose you have `webui\port=1234` in your `qbittorrent.conf`. 2. launch qbittorrent in your shell like so: `qbittorrent --webui-port=5678` 3. close qbittorrent question: what is the value of `webui\port` in your `qbittorrent.conf` after step 3? one would expect it to be `1234`, since usually changes passed by command line flags _override_ configuration file options, but don't implicitly/silently _overwrite_ them. however, this is not the case in qbittorrent. the configuration file value will be overwritten and will read `5678` after step 3. the same happens with environment variables (e.g. `qbt_webui_port=5678`). at least one thing is consistent: if **both** an environment variable _and_ a command line flag for the same option are specified, the command line flag takes precedence and is the value that overwrites the one in the configuration file. we might want to change this in the future, but for now i will document it as-is."
630326957,12205,FranciscoPombal,2020-05-18T17:25:52Z,can you please address [a link]
1045987152,16485,glassez,2022-02-19T10:34:13Z,"names, messages, etc. are the objects of improvements. you can offer your options. the algorithm for ""automatic size"" is also not particularly thought out (it was just necessary to start somewhere)."
1045992550,16485,ghost,2022-02-19T11:07:04Z,nice patch! now qbit isn't using 100% of my ram when downloading big torrents at 1 gbps! i use the following settings: os cache disabled. working set - auto.
1045994068,16485,xavier2k6,2022-02-19T11:16:50Z,"have you also tested this patch with latest `libtorrent commit`?, i only ask because i know the ci builds are only testing with the `release` commits of `1.2.15/2.0.5`. will also test this myself later.... edit: should the configurable `max %` setting be capped lower than `100%`?? -> `75%/85%`?"
1045996395,16485,glassez,2022-02-19T11:31:59Z,i don't see the point.
1045997219,16485,glassez,2022-02-19T11:36:58Z,"i tested it using the current rc_2_0 branch of libtorrent. but i don't have any special results, because i just made sure that it works correctly, i.e. it really limits the amount of physical memory used."
1045998136,16485,ghost,2022-02-19T11:43:08Z,instead of linking users to that gibberish maybe link them to a github faq page?
1045999035,16485,glassez,2022-02-19T11:49:15Z,"is there anything useful about it? i don't mind if it is. otherwise, someone else can do it later."
1046160116,16485,ghost,2022-02-20T04:21:00Z,i think the auto settings is using too much ram compared to how libtorrent's auto settings did. almost 4 gb on a 16 gb system. i think most users will still complain about the usage.
1046177305,16485,Chocobo1,2022-02-20T07:11:28Z,"maybe this is just me, i think this is a sign that using percentage isn't very appealing. most users (or at least myself) would prefer setting it to some specific limit and not care about scaling it with total ram size. and (i suspect) people is already accustomed to the auto value from libtorrent so following it would be a good idea imo."
1046202337,16485,glassez,2022-02-20T09:59:55Z,"in fact, this is not a matter of principle for me. i can switch to using absolute values. here are the questions i have: 1. what should be the limits of the acceptable range? 2. in what units should the value be stored in the configuration file? 3. in what units should it be represented in the settings ui? 4. is there any sense in the auto value if we are talking about absolute values? it seems that we can just have some kind of default value. 5. what should be the default value? what ""auto value from libtorrent"" do you mean? and how we can follow it? is it some predefined one?"
1046214490,16485,ghost,2022-02-20T11:15:35Z,i suggest that you can just tweak your current auto settings a bit instead of following libtorrent's pattern. because i've seen many complaints from users with high ram usage after setting the disk_cache default to auto. so you can set the limit to 128 mib for <=4 gib system and 256 mib for >4 gib systems. i have tested with setting the limit to 2% (326 mib) and there was no impact on download performance. i think this way you won't get complaints about high ram usage and also won't have degraded performance.
1046422583,16485,ghost,2022-02-21T02:58:22Z,yes i do. however the amount of torrents and seed size you mentioned will be exceptional cases. and for exceptional cases user can bump his ram limits easily from settings. we can't aim for exception cases when deciding default values.
1046464119,16485,glassez,2022-02-21T04:28:59Z,"if 256mb is a good default value, then i don't see the point in making it dependent on the amount of installed memory. if someone really has problems with it, they can easily adjust it."
1046498945,16485,yeezylife,2022-02-21T05:54:50Z,"i thought it's best if ""auto"" can be based on download speed and free memory."
1046510214,16485,glassez,2022-02-21T06:14:57Z,so how about questions from [a link]
1046511746,16485,glassez,2022-02-21T06:17:39Z,do you have some kind of algorithm to suggest? how do you think it should depend on the download speed?
1046523656,16485,yeezylife,2022-02-21T06:42:57Z,"sorry i don't have any algorithm,it's just a thought. basically higher download speed leads to more frequent writing,therefore ""auto"" uses more memory to adapt to high speed download(but also consider free memory,don't use it all).and when download speed is low,don't need to cache that much,your disk is fine. and also for most disk writing is heavier work than reading."
1046787820,16485,xavier2k6,2022-02-21T11:41:22Z,i've had time to give this pr a whirl...... #### test system: [code block] #### settings: [code block] ![a link] ### qbittorrent 4.4.1 x64 (qt5) test: #### task manager - performance/memory: ![a link] task manager - qbittorrent process details: ![a link] #### results/observations: all memory practically used! mouse lag drive slow down downloading/uploading slowing down or dropped basically a bad user experience. ____ ### qbittorrent 4.5.0alpha1 commit: 'a446d9d9da9eac95e5d0e7a9a653debe0338c0e7' test: #### task manager - performance/memory: ![a link] #### task manager - qbittorrent process details: ![a link] #### results/observations: not all memory used! no mouse lag no drive slow down no significant downloading/uploading slowing down much better user experience.
1046789221,16485,xavier2k6,2022-02-21T11:43:15Z,did you try the `2.0.5` build from this pr? [a link]
1046824977,16485,ghost,2022-02-21T12:26:51Z,i think you should try the latest pushes as well to see if 256 mib default limit causes any performance degradation.
1046976541,16485,xavier2k6,2022-02-21T15:09:51Z,i will when i get the chance.......feel free in the mean time to test the ci build & report back any findings.
1047086093,16485,ghost,2022-02-21T17:11:13Z,the latest push isn't working for me. getting this error `failed to set memory working set limit. reason: the parameter is incorrect. error code: 87.`
1047087981,16485,glassez,2022-02-21T17:13:18Z,what is your current setting? note: it is changed due to changing units from percents to mbs
1047089174,16485,ghost,2022-02-21T17:14:48Z,"first it was 2mb because of changing to mb from percentage. then i changed it to default, it also didn't work. last i tried 64mb which doesn't work as well."
1047128675,16485,xavier2k6,2022-02-21T18:12:26Z,"thanks for that bit of info! `32gb system` log show this with default `portable` mode with original commit: `21/02/2022 18:09 - memory working set limit is successfully applied. used value: auto (5315 mb).` `21/02/2022 18:13 - memory working set limit is successfully applied. used value: 5% (1633 mb).` `21/02/2022 18:14 - memory working set limit is successfully applied. used value: 10% (3267 mb).` `21/02/2022 18:16 - memory working set limit is successfully applied. used value: 15% (4900 mb).` `21/02/2022 18:17 - memory working set limit is successfully applied. used value: 20% (6534 mb).` `21/02/2022 18:17 - memory working set limit is successfully applied. used value: 25% (8168 mb).` `21/02/2022 18:19 - memory working set limit is successfully applied. used value: 30% (9801 mb).` `21/02/2022 18:19 - memory working set limit is successfully applied. used value: 35% (11435 mb).` `21/02/2022 18:20 - memory working set limit is successfully applied. used value: 40% (13069 mb).` `21/02/2022 18:20 - memory working set limit is successfully applied. used value: 45% (14702 mb).` `21/02/2022 18:21 - memory working set limit is successfully applied. used value: 50% (16336 mb).` `21/02/2022 18:22 - memory working set limit is successfully applied. used value: 55% (17970 mb).` `21/02/2022 18:23 - memory working set limit is successfully applied. used value: 60% (19603 mb).` `21/02/2022 18:24 - memory working set limit is successfully applied. used value: 65% (21237 mb).` `21/02/2022 18:24 - memory working set limit is successfully applied. used value: 70% (22871 mb).` `21/02/2022 18:24 - memory working set limit is successfully applied. used value: 75% (24504 mb).` `21/02/2022 18:24 - memory working set limit is successfully applied. used value: 80% (26138 mb).` `21/02/2022 18:24 - memory working set limit is successfully applied. used value: 85% (27772 mb).` `21/02/2022 18:24 - memory working set limit is successfully applied. used value: 90% (29405 mb).` `21/02/2022 18:25 - memory working set limit is successfully applied. used value: 95% (31039 mb).` `21/02/2022 18:25 - memory working set limit is successfully applied. used value: 100% (32673 mb).` log show this with default `portable` mode with latest commit: `21/02/2022 18:11 - failed to set memory working set limit. reason: the parameter is incorrect. error code: 87.` it doesn't matter what setting `default/64mb/99mb` - these are the values given when you press the up arrow, if you press the down arrow once from `99mb` it goes to `35mb` & then press it again will bring it back to `default`"
1047137774,16485,glassez,2022-02-21T18:25:46Z,apparently i messed up something during the last rework. i'll fix it tomorrow.
1047141815,16485,xavier2k6,2022-02-21T18:32:20Z,"my [a link] has been edited/updated. imo, i think the original commit is the way to go but maybe add `1%/2%/3%/4%` & make `5%` the default?!"
1047387296,16485,ghost,2022-02-22T03:19:33Z,this maybe related to [a link] which should be fixed by [a link]
1047468255,16485,Chocobo1,2022-02-22T06:30:07Z,i would use `1~int_max (mib)`. i would use mib. i think now there is no need of `auto` value. we can use either 256 mib or even 1024 mib as the default value. i was referring to [a link] but it doesn't matter now.
1047473428,16485,ghost,2022-02-22T06:41:23Z,then the multiplier would be 1000 x 1000.
1047479582,16485,Chocobo1,2022-02-22T06:54:17Z,i meant mib (1024 x 1024).
1047712350,16485,ghost,2022-02-22T11:44:05Z,tested the latest build and it worked fine.
1048429514,16485,ghost,2022-02-23T04:01:47Z,there's still some bugs. if i set it to <= 64 mib i get this error `failed to set physical memory (ram) usage limit. reason: the parameter is incorrect. error code: 87.`
1048816306,16485,glassez,2022-02-23T14:06:31Z,something wrong with ms documentation... we'll have to test it experimentally.
1048868916,16485,ghost,2022-02-23T14:55:37Z,"the documentation says this regarding dwmaximumworkingsetsize `this parameter must be greater than or equal to 13 pages (for example, 53,248 on systems with a 4k page size)` so they have a minimum limit for it."
1049516231,16485,glassez,2022-02-24T05:47:27Z,"even 1mib is greater than that minimum limit of 53,248 bytes so the problem is in something other."
1049826022,16485,glassez,2022-02-24T12:48:50Z,"well, the problem is in dwminimumworkingsetsize. the documentation says that it should be less than or equal to dwmaximumworkingsetsize but really it fails when they are equal. it requires some ""gap"" between these two parameters."
1049832852,16485,glassez,2022-02-24T12:57:50Z,"wouldn't it be more reasonable to limit this range to some minimum value, e.g. 32mb? it doesn't look like qbittorrent could function correctly with a smaller available memory size. accidentally (or intentionally) setting too small a value can make the application completely inoperable, which may require manual editing of the configuration file to fix it."
1049846343,16485,ghost,2022-02-24T13:12:56Z,"latest build is working fine with 256 mib default. however, when i set it to 64 mib qbt ui becomes extremely unresponsive and laggy. i had only 7 torrents seeding with 120 gb seed size. even going to settings menu was difficult with these low settings. so i advise to set a minimum value which would not cause the application to hang. also maybe 256 mib could be low for some users. so i suggest and others to test this build to ensure everything works out."
1050544942,16485,Chocobo1,2022-02-25T05:45:31Z,"i agree this is bad and we should prevent it. but what should be the lower limit? maybe 128 mib? maybe we should raise the default to 1024 mib? it is not unreasonable to expect this amount of ram installed and used by qbt imo. update: on a second thought, this is *advanced* settings, users are responsible for their actions and it isn't qbt job to hold their hands and keep them away from danger. imo the current no limitation ui is fine for me."
1051564244,16485,ghost,2022-02-26T04:19:19Z,"i agree to this if the aim is to not accidentally make someone's ui freeze who have a lot of seeding torrents. i also wonder what would happen in case of a memory leak. if for example a thread is stuck in an infinite loop and starts to eat up memory infinitely, would the program itself crash due out of memory scenario?"
1052069304,16485,glassez,2022-02-26T11:50:55Z,"why are you filling your head with problems that we can't solve? if there is a memory leak (no real evidence of which has been provided so far, as far as i know), then in any case it will lead to a crash sooner or later (but this will certainly happen sooner if we limit the working set of the process)."
1053527336,16485,glassez,2022-02-27T11:39:04Z,"changed it to 512 mib as a compromise. it can be adjusted better before the release, if necessary (or even later, when it gets a larger user audience)."
1056128117,16485,hzdrro,2022-03-02T03:34:23Z,"when setting the limit to 2048 mib or greater, qbt would use up the memory on my win11 x64. is this expected behavior?"
1057325821,16485,glassez,2022-03-02T19:59:21Z,i intend to backport it to 4.4.x since i feel it like bugfix. do you object?
1057590381,16485,hzdrro,2022-03-03T02:12:53Z,"thanks for replying 1. 16gb installed 2. it works well after a restart, but qbt would use up my memory before a restart if i set the limit to 2048 mib or greater. 3. ![a link] 4. no."
1057633525,16485,ghost,2022-03-03T03:37:52Z,this high ram issue was introduced in 4.4.x so this can very well be considered a bugfix!
1057641631,16485,Chocobo1,2022-03-03T03:59:57Z,i'm ok with it.
1057644354,16485,Chocobo1,2022-03-03T04:06:13Z,"sure the next release will contain this patch with libtorrent 2.x. as for releasing with libtorrent 1.2.x, sorry i have no control over its decision. you should ping about it."
1058869972,16485,The5kull,2022-03-04T06:18:44Z,i am still experiencing lags with these fixes. not only qb ui lag but mouse lag aswell no matter how much mib i assigned. went back to the cl build with libtorrent v1 for the time being.
1062873109,16485,adrian5,2022-03-09T12:30:30Z,"i second :peach:'s request. i'm stuck at <2mib/s (i even throttle myself to 900kib/s to prevent constant cache exhaustion). how long should i live with that? 3 months? 6 months? 2 years? who knows when [a link] will be fixed, there seems to be no rush. and since you didn't release an appimage prior to 4.4.0 (libtorrent 2.x), there's no way for me to downgrade to a working release. just having a libtorrent 1.2 build we could stay on for another year while the issues are ironed out would really help."
1073353823,16485,whxuezhe,2022-03-20T21:38:12Z,how to get the 4.5.0 alpha 1 test? i'm 11 windows system; this problem has plagued two versions; i am also a test software enthusiast in china. do you have any channels to obtain the installation package? thank you!
1073355938,16485,whxuezhe,2022-03-20T21:53:21Z,"i am a chinese user and an entry-level enthusiast of software testing; i don't think it's difficult to set 512mib page cache for qbittorrent ui qt6 interface engine to call; the low-end computer in the office starts with 4gib ram. in addition, my personal use is core i5 9300h ddr4 2666 32 * 2; however, this problem has been plagued since 4.4.0rc. please ask qbittorrent project team to greatly improve it; provide 4.5.0 alpha 1 to alleviate the problem. i'm a foreign movie download enthusiast; especially when the seed is restored, and sometimes even when the mouse stops seeding, it does not respond and has stopped"
1079607444,16485,N0rdmann,2022-03-26T05:11:48Z,"any chance a similar ""feature"" will make it to linux build soon? _mem usage grows almost unlimited with libtorrent 2 while massive downloads running._ ![a link] until 4.x i was able to limit it's mem usage pretty fine with **disk cache** & **disk cache expiry interval** which are obsolete with libtorrent 2.x now ![a link] qbittorrent v4.4.2 debian 10.11 x64"
1081218065,16485,whxuezhe,2022-03-28T22:31:59Z,hope to consider 4.5.0 later and support ipv6 trackerlist only; or both ipv4 and ipv6 trackerlist are supported.
450967221,10099,sledgehammer999,2019-01-02T19:55:26Z,special shoutout to [a link]. it is a great lightweight that lets you inspect/modify/administer and sqlite db. very useful for debugging.
451055141,10099,glassez,2019-01-03T04:45:22Z,", that's fine! i'm glad my old idea finally sprung. this will undoubtedly be a step forward. although there is still work to be done, starting from what and how we should store in the tables, and ending with the details of the implementation. i'll start commenting on specific things later."
451218142,10099,glassez,2019-01-03T17:34:35Z,"too much. since we stored some additional data along with the ""fastresume"" data, we had to request the creation of ""fastresume"" data each time we had anything changed (e.g. save path, torrent name, etc.), then we injecte these additional fields in ""fastresume"" data, encode it and write to file. we don't have to do it that way anymore. we can store them in separate columns and update them independently. even more. if we look at the libtorrent ""fastresume"" data, we can see that most of its fields has the behavior described above. e.g. when torrent is paused or resumed we receive an appropriate alert so we can just update ""paused"" and ""auto_managed"" columns and so on. by and large, we need to request ""fastresume"" data generation just to store the current progress. this may seem somewhat inconvenient due to libtorrent drawback (it requires ""fastresume"" data to be bencoded when we pass it to add_torrent_params). but this is slightly improved in the libtorrent-1.2 (now we just have to fill in the appropriate add_torrent_params fields)."
451304836,10099,sledgehammer999,2019-01-03T22:58:21Z,i am all for decoupling our data from libtorrent's fastresume. but this will need investigation on when to save our data and what triggers it. aka reacting more closely to the triggering event. this is work for the weekend though.
451372408,10099,glassez,2019-01-04T07:46:01Z,"at least all current ""fastresume"" saving events that are not fired by timer."
451772821,10099,sledgehammer999,2019-01-06T20:39:12Z,pushed new version of commits with these changes: 1. db.h moved under base/bittorrent 2. namespace from `utils::db` to `db` 3. fixed issue where deleted torrents weren't removed from the db due to missing variable escape as for the other issues i'll comment inline.
451810735,10099,sledgehammer999,2019-01-07T03:21:56Z,"from a look at the code here is one way i thought to decouple things. (well, it isn't groundbreaking). our custom `qbt-` fields are all inserted in [a link] most of these values should be written in the database as soon as the **new** torrent is created+added to the db. this currently happens in 1st commit [a link]. in that `insert into` statement i intend to use the proper values from the `params` variable (of type `createtorrentparams`) which is used to initialize the torrenthandle and ultimately the `qbt-` fields. each `qbt-` field becomes a db column. then inside the torrenthandle class, each time a field is updated we also update the db record. for example, inside `torrenthandle::setseedingtimelimit()` we update the db record for `m_seedingtimelimit` (`qbt-seedingtimelimit`) finally, [a link] will be changed to load stuff from the db instead. do you think another way is more appropriate?"
452143823,10099,sledgehammer999,2019-01-08T01:36:57Z,"i pushed a few new commits. i didn't merge them back into the others in hope it is easier to review the changes. i need your opinion. the last commit is unfinished and still wip. i didn't have more time to tidy it up. can you take a look at it and consider the following: i assume you agree to save each old fastresume field as a table column, right? as you can see in the last commit, i save each setting as soon as it is changed. here's where i want your input. should the saving be done by the torrenthandle class (like its done in my commit), or done by the session class? for example, when the torrent changes name, should the saving be done inside `torrenthandle::setname()` or inside `session::handletorrentnamechanged()`? i assume your answer will be that the session should do that. it's more logical. however, there are some settings which aren't publicly exposed by the torrenthandle class. like the `m_name` variable(`torrenthandle::name()` doesn't return it verbatim). is it ok if i extend the various session::handletorrent* methods to receive that argument directly from the caller? in any case, as this last commit is very wip, i have nothing solid. i merely was exploring the possibilities. so if you want to propose a better approach let me hear it (with a pseudo-example if possible)."
452263782,10099,WolfganP,2019-01-08T11:18:43Z,"as i commented in [a link] i'm optimizing my raspi setup to avoid using the sdcard or other slow storage units. i tried to follow up this pr changes to check where the new database file will be stored, it's need for persistence across boots and the interaction with the portable settings; but i was unable to. do you mind to comment on it?"
452275823,10099,glassez,2019-01-08T12:06:34Z,"right. but i propose to store all fastresume data in separate columns. although some logic is currently delegated to torrenthandle class, i would prefer to have it centrally in the session class and leave torrenthandle only as a convenient interface. i don't mind doing it that way to begin with. there may be a better way later. ok."
452300658,10099,sledgehammer999,2019-01-08T13:37:14Z,you mean each field(even libtorrent native) of the fastresume in a separate column? but what do we want to accomplish with that? libtorrent will still generate them as a whole anyway. we will need to manually parse them into separate columns. then manually combine them into a fastresume to feed into libtorrent. also we would need to always keep our parsers/tables updated with each revision of the fastresume spec.
453119384,10099,WolfganP,2019-01-10T14:43:50Z,"just for the sake of documentation and other approaches to manage tmpfs needed folders (ie /var/log/*), interesting discussion at [a link]"
453133428,10099,glassez,2019-01-10T15:22:06Z,"yes. i do not insist on it yet, but just want to evaluate all the pros and cons. we need to do this now as accurately as possible to avoid multiple database schema changes in the future. the same things as for custom resume data members. yes. but in many cases we can avoid all data generation when we need to update only one field. i.e. when some even occurs we receive an appropriate alert so we can update just one (or several) field instead of asking full data from libtorrent. you're wrong. on the contrary, we avoid encoding the data in bencoded forms. we get ""fastresume"" data either as dictionary in libtorrent 1.1 or as add_torrent_params in libtorrent 1.2 so it can be easily stored as separate columns. yes. but it's not so big problem. besides, it only applies to libtorrent 1.1. libtorrent 1.2 accepts all resume data as separate fields of add_torrent_params struct. additionally storing data in separate columns should make it easier to manage database and debug the application."
455797501,10099,CyrusNajmabadi,2019-01-19T17:10:46Z,"i haven't looked through this entire pr, but as someone recommending this change i thought i would throw in a little bit of info that i learned from making the same change in [a link] specifically, if your app is write-heavy (which roslyn is), then you'll very likely benefit hugely from setting `journal_mode=wal` and `synchronous=normal`. you can see where we set that ourselves here: [a link] documentation on these values are here: [a link] [a link] importantly, moving to wal helps heavy-write performance a **ton**. 'normal' mode also helps quite a bit, while not introducing concerns about database corruption. i.e. your database will always be corruption-free, and will always only contain the results of some previously completed transaction. however, you risk an exceptionally tiny change that *some committed transaction* **might** be lost if you lose power at some precise moment. again, your data will not be corrupt. simply, you might lose a transaction that in 'full' mode would reapply if power is lost at a specific moment. for the roslyn use case, this was perfect. a lost transaction simply meant we'd recompute the data later on. for qb, it's unclear what it would mean. i get the sense that you ahve to validate data anyways on a non-clean shutdown. so i imagine things will be fine for you. just something to consider in order to ensure that your db is not a bottleneck if you are writing data to it non-stop. -- note: as someone who has a huge amount of torrents, i have a personal vested interest here. i dont' know what the write patterns are for qb. but, for example, if it routinely making thousands of transactions because there are all these torrents, then wal will go a long way to making that crawl, to making it something you'd never notice. thanks!"
455798513,10099,CyrusNajmabadi,2019-01-19T17:23:19Z,"another important consideration was that we pooled db connections. each connection is safe to use across different threads *as long as* you are not using it across threads simultaneously. so, we would only make a new connection if we had no existing ones available. then, once done, it would go back in the pool ready to be used by any other thread. you can see that code here: [a link] this is helpful for performance as each connection incurs a fixed creation cost, especially where it needs to grovel the db to hydrate the metadata for it and whanot. similarly, parameterized query statements were cached. this is useful so you can keep issuing the same statements (with different parameter values) without incurring the fixed overhead of parsing/analyzing the statement. sqlite can do that computation once and then benefit from it every other time. -- note: i have not used qt's api for sqlite. it's possible they take care of this for you. def something to look into if they do not. -- now, if you're only rarely reading/writing from your db. or you don't need to scale reads/writes with number-of-torrents, then this likely isn't going to be an issue. however, if you're reading/writing many times a second, and you need to *increase* reads/writes based on something related to user-data (i.e. how many torrents they have) then these sorts of approaches really streamline things and make sqlite operate in much of a bare-metal fashion. cheers!"
455915665,10099,sledgehammer999,2019-01-21T00:10:16Z,"rebased pr on top of current master, and addressed the namespace comment. i'll continue work tomorrow."
457967526,10099,sledgehammer999,2019-01-28T00:15:41Z,"i finished reworking the code in order to save our custom fields as separate columns in the db. i worked this code in fragments in the course of many days. so i might have missed something. look at the general picture. if the direction is ok then i can proceed to add error handling, squash commits, update the 2 other commits so you can do a proper review."
457989903,10099,CyrusNajmabadi,2019-01-28T03:38:27Z,has any testing been done to validate no performance issues when there are thousands of torrents? sqlite can def have perf issues depending on certain usage patterns.
457991948,10099,sledgehammer999,2019-01-28T03:55:05Z,not yet. we need to solidify the table/db format first. then i'll look into ways on how to wrap the bulk fastresume writes in sql transactions. this should minimize performance degradation.
457995643,10099,glassez,2019-01-28T04:27:56Z,"i'm sorry, but it's really hard to review such a ""feature"" request without having a full idea of how it should end up. that is why i started the discussion with general questions. but you never fully answered them. could you sum up some intermediate results and describe the target architecture of this feature? 1. what data and in what format are you going to store? 2. how are you going to ensure compatibility and control it? 3. how did you decide to migrate from the old saving system? 4. so on... i have already started to discuss many of these, but we have not come to any specific conclusion. it all affects the format of the database. it will be very painful for us to change it further. in addition, i must have an idea of what is temporary at the moment, and what is not."
458038563,10099,glassez,2019-01-28T08:34:19Z,", having an concept of the target design of the feature, i could even help with some code snippets. otherwise, i can only offer some more or less trivial helpers."
458039826,10099,glassez,2019-01-28T08:39:07Z,", at this stage, i found one fundamental error. the only reliable way to have a consistent torrent queue is to write it all at once. i fixed it recently, but here you degrade again, writing torrent positions separately."
458366204,10099,sledgehammer999,2019-01-29T01:07:28Z,"i have tidied up the commits. error handling is missing though. imo, you can have a better idea now. a table that stores the hash, metadata, fastresume(bendoced), queue and the rest of the custom `qbt-` fields per row. the table definition looks like this [code block] **i am open to ideas.** currently i use the `user_version` pragma to check that the db version can be handled by the program. you have seen my inline comment and responded about backwards compatibility. we can ensure that by refusing to remove columns in newer versions. if for some serious reason we need to change the format entirely in the db/table then we do what we have done so far. on 1st run inform the user that there will an incompatibility if he continues with the new version. in this case we update the `user_version` so older clients can have a very easy way to figure out the incompatibility and stop working. and we should go one step further: require that breaking changes also introduce a ""revert"" switch, that will rebuild the old format so the user can go back to earlier versions. like my `add option to export torrent data to old saving system` commit in this pr. your stored procedures idea sounds interesting. i have zero experience with that kind of thing. i don't know the capabilities those can have. and since we don't know what kind of changes we might introduce in the future i don't know if we should rely on that solution. at least in c++ (from new clients) we have the freedom to reconstruct the dbs any way we want and manipulate the data as we see fit. do you mean how the code behaves or how i came to the decision to introduce sqlite saving? code: asks the user, parses the fastresumes and populates the relevant table columns. then deletes the old files. decision: probably explained in opening post. are you against sqlite?"
458366787,10099,sledgehammer999,2019-01-29T01:10:24Z,"hmm, i see what you mean. i didn't realize the out-of-sync possibility. i'll look into it tomorrow to see how to rectify this."
458370761,10099,sledgehammer999,2019-01-29T01:28:33Z,"hmm, i looked again at the code. the only problem i see is with how i pass the queue number to resumedatasavingmanager. this doesn't seem necessary and i should remove it. then the other place where the queue is saved is [code block] notice that it is wrapped in an sql transaction, so everything is written out together. note: i'll add a call back into `session::saveresumedata()`. i can't remember why i removed it. it seems wrong now. did you have something else in mind?"
458409482,10099,glassez,2019-01-29T05:07:45Z,yes. all you need is replacing `session::savetorrentsqueue()` content with new code that updates all queue at once. update: [code block] this fragment is incorrect. we could not save the entire queue when it came to the file (because we assumed that all missing torrents had zero priority). but right now we have to update all torrents without exception (unless you want to break your brain trying to figure out which torrents changed their position): [code block]
458488129,10099,glassez,2019-01-29T10:26:52Z,", your [a link] is not what i wanted from you. i have made some serious comments regarding both the overall feature design and some parts of it. and then i argued my claims in detail. but you ignored my comments and didn't answer them. now i asked you to summarize our discussion, read my previous comments and give **reasoned answers**. [a link] [a link] that's an inappropriate question. you have something with your memory... i was one of those (or even the first) who first declared the need to use sqlite. and i've been promoting this idea for years. but i want it to be used wisely, not as a workaround on legacy logic and data formats."
458497405,10099,glassez,2019-01-29T10:56:49Z,"about backward compatibility. we must certainly avoid frequent changes in the format of the database. but this should not be an obstacle in the development of the project. there really isn't much of a problem with that. because the newer version knows exactly what format the database had in any previous version, it can easily convert the database to the latest format. as your following comment: do you want to export it to the directly previous format? e.g. if format was changed in v2, v3, and v4, then v4 allow export to v3, v3 to v2, v2 to v1? i meant the usual create/drop/alter table requests, not the stored procedures. i don't remember exactly, but i don't think sqlite has stored procedures. you don't understand the idea itself. we should not look to the future, but rather to the past. when some new version updates the database format, it knows exactly what has been changed and how to get it back. and it just stores this sequence of actions as a set of sql queries. e.g. if it creates new table in new format then it stores ""drop table"" query etc. although in fact, things can be much more complicated, and we can't do without more advanced logic (which unfortunately is not supported). therefore, the priority is to plan the structure as carefully as possible to avoid its frequent modification."
458691736,10099,sledgehammer999,2019-01-29T20:19:05Z,"i'll ignore your tone and i'll answer for your linked comments. if i sum up correctly the 1st comment: db should be initialized/created by session. also you allude that the importing should be done by session. i disagree with that. importing torrents is an upgrade step. did you forget that the previous upgrade code handled the import itself without involving the session? however, i suppose i could move into session the initialization/creation of the db (via a static class method). if i understood wrongly your comment, please correct me. about the 2nd comment: personally i don't see a pro in **us** saving the native libtorrent fastresume fields as separate columns. i don't see what we can gain from it. **if you have a pro i am happy to hear it.** for libtorrent 1.2: when we tell it to generate a fastresume it still populates/calculates all the fields. it also provides convenience functions to convert to/from add_torrent_params->bencoded fastresume. if we want to go with separate columns, we would still need to write a function to extract the add_torrent_params fields and then populate them (for startup). it sounds to me superfluous. it would make sense if we make direct use of any of the native fields. but we don't iirc. for clarity: i started this pr because i thought that the multitude of small files created (current way) hurts performance and possibly results in corruption with big queues. i didn't consider the format/architecture of what we saved. i didn't see it as a problem. yes. i think that makes more sense and possibly makes it easier on ourselves to not carry obsolete code for too long. ok. but this is probably moot if we have the option to downgrade ourselves in new versions. i only meant that sql might be limited on what it can do to manipulate the db and allow us to construct a list of downgrade commands. you're right. the `if` check must be removed. a previously non-seed torrent that became seed will keep its old queue number with that check and the queue will be out of sync. ps: if i forgot to answer to something, don't hesitate to directly quote it or link to it. this discussion is big and spans several days with breaks. i can't keep everything in my mind cache."
458825182,10099,glassez,2019-01-30T06:13:41Z,"i'm sorry, i'm only human. just ignore my emotions, focus on the information. try my way. don't remove an appropriate email notification until you answer the comment. another way is to store previous queue and compare with the current one and then update only changed torrents. maybe it will be faster in case of a large number (1000, 10000) of torrents. i suggest we not continue this part of the discussion. it's just a distraction for the brain. i think it is unreachable in general (for example, database format changes can be accompanied by other changes that cannot be undone in this way). yes, probably. the main idea is not where exactly this ""upgrade"" code will be located, but it is not to break the basic logic of the application. you can do it wherever you want (within reason), even using a separate program. your next example demonstrates this well (though you made it for opposite purposes): now remember how we got rid of that code. we just threw it away. and now try to throw away your current code - you will get an inoperable program. this is your mistake. maybe [a link] is too insistent to put all the basic logic in session class (this is the most logical place for me). again, this can be done differently, but in any case it should not depend on ""upgrade"" code in any way. ""upgrade"" code should just be injected into the main logic without breaking it. just implement it like there was never any old saving system. and then add the ""upgrade"" code without breaking anything."
458851661,10099,glassez,2019-01-30T08:15:21Z,"it looks a little redundant to me. as i understand it, you should still support exporting to the old saving system for quite some time (at least until v4.2 becomes stable enough and is used by default on all supported platforms/oses/distros). so why not just have it only? each version should be able to upgrade from any previous version of 4.2 and from old saving system but it can allow downgrade to old saving system only."
458862463,10099,glassez,2019-01-30T08:52:41Z,"as for the ""data format"" issue, i will no longer insist on my opinion if this comment does not convince you. i leave it to you to make your ""suzerain's right"" to make the final decision. but do not forget that all those mistakes that could have been avoided, will then have to be corrected. they're on your conscience. if you're only afraid of the need to create alternative helpers, then i can help you with that. it doesn't look so complicated to me. as for the convenience of ""fastresume data saving"" feature of libtorrent, i have never considered it convenient in terms of qbittorrent design. this can only be convenient for a less integrated app that treats libtorrent as some sort of ""black box"". we are constantly monitoring the status of each torrent, and this ""feature"" creates only inconvenience for us. i'm not sure yet we'll be able to avoid it completely. i'm examining it in detail now. they were in my previous comment. repeat them: 1. storing data in separate columns should make it easier to manage database and debug the application. *even now we require special editor to review bencoded files. if we'll want to see this data from db we need additionally to save it in some file before open in editor.* 2. in many cases we can avoid all data generation when we need to update only one field. i.e. when some even occurs we receive an appropriate alert so we can update just one (or several) field instead of asking full data from libtorrent. *this reduces the asynchrony and exposure to data loss in the event of a failure.* 3. some fields can be reused (e.g. we can get rid from qbt-paused, qbt-forced, qbt-sequential). 4. we can avoid redundant bdecoding (at least with libtorrent-1.2). the fact that it has a ""convenient"" helper for this does not mean that the decoding process isn't excessive itself. much simpler (from the performance perspective) to fill add_torrent_params from database table (field-to-field) than to parse the bencoded data. even in case of libtorrent-1.1, we only need to generate the bencoded data from database table fields when we start up torrents. the speed of data generation (as a rule) is much higher than the parsing speed, the speed difference is measured in orders of magnitude. no matter what decision you make when you consider this comment, be sure to notify me so we can proceed further based on it."
458863273,10099,glassez,2019-01-30T08:55:28Z,", i have some ideas for ""helper"" code. don't you mind if i add commits here from time to time? then you can squash them. or should i paste it in comments instead?"
460168758,10099,sledgehammer999,2019-02-04T08:43:07Z,sorry for the lack of comments. i'll be busy for a couple of days. about the fastresume: i see your point and i am thinking of agreeing with you. give me a few days to see things.
464497947,10099,sledgehammer999,2019-02-17T19:25:22Z,"i have rebased and addressed these: 1. now the session is responsible for initialize the db. the upgrade code doesn't manage it directly. 2. moved 2 alert handlers with the rest of the alert handlers 3. maybe some other minor modifications that i don't remember. i also decided to follow your suggestion and save the fastresume into separate columns. that's because i observed we unnecessarily request new fastresume data to be generated when the trackers/webseeds list modified. now we wiil be a ble to save it directly ourselves. this change isn't part of the current pr yet. minor question: should we save all fields of the fastresume into the db uncoditionally? for example the fastresume has these fields that don't seem important to save, and we could generate them in runtime. what do you say? list: [code block]"
464524089,10099,sledgehammer999,2019-02-17T23:10:56Z,"uhm well, i've done some preliminary research about differences between 1.1 and 1.2. i observed that there are fields which are deprecated/removed from 1.2. also i observed that during the 1.1 lifetime new fields were added. so i am bit worried that a possible future change in the fastresume spec might leave us in a difficult situation. we might end up using deprecated columns in our db or not being able to save new columns (important if new columns fix issues like not remembering the last_scrape). we would need to closely monitor libtorrent development and release new version which will create a different table schema. if we save/load the fastresume itself verbatim, we don't need to worry since libtorrent will handle everything correctly. am i worried too much about this? maybe some middleground, like directly editing the **stored** fastresume to edit the tracker list instead of requesting libtorrent to generate one?"
466385817,10099,glassez,2019-02-22T12:49:40Z,we don't need to store them.
466468902,10099,glassez,2019-02-22T17:01:55Z,"note: all my current and further comments about this pr assume that we use libtorrent-1.2 as the main (and libtorrent-1.1 as compatible). my suggestions are based on the fact that we keep track of most of the torrent data all the time the qbittorrent is running (except for a few not so important ""fastresume"" fields) so it is redundant to generate the same data again. if we save/load the fastresume itself verbatim, we don't need to worry since libtorrent will handle everything correctly. am i worried too much about this? i don't think that should make us uncomfortable. unlike previous versions libtorrent-1.2 handle fastresume data not as raw data but as add_torrent_params struct that is a part of libtorrent abi. knowing 's tendency to maintain a compatible abi throughout the libtorrent branch, we can be sure that it will not change during libtorrent-1.2 life cycle (at least, it will not change often/much). in that case, i would suggest another way. take a closer look. in fact, we have diverse data. some of them represent ""important"" properties of the torrent, such as its settings and the current download/upload status (eg., save_path, ""file mapping"", different kind of priorities, paused, auto_managed etc.; usually this is all that is affected by the user). they are likely to be ""stable"" for a long time (will not be deleted/changed) so these fields should be stored in separate columns. all remaining data (not so ""important""; usually this is all that is generated/obtained by libtorrent itself) can be serialized and stored in a single column (but in this case i would highly recommend using a more readable format than ""bencode"", e.g. json)."
466683194,10099,arvidn,2019-02-23T19:31:06Z,"+1 on this patch. my experience is that iterating a sqlite table is *a lot* faster than listing a directory and loading small files. in my mind, the performance gain alone is sufficient motivation for this."
493865407,10099,victorhooi,2019-05-20T07:13:45Z,"as a fan of qbittorrent =) - curious if this is still being worked on? is it still slated for qbittorrent 4.2.x? any idea of when a test version of qbittorrent with sqlite support might land, for us to kick the tyres with?"
574025412,10099,Ryrynz,2020-01-14T06:33:04Z,would recommend pushing this to a 4.5 or even a 5.0 milestone.
648445873,10099,Pentaphon,2020-06-23T21:48:20Z,"i agree, i'm not sure why this is in the 4.2.6 milestone."
679107824,10099,xavier2k6,2020-08-24T12:52:37Z,for ref (previous discussion/thoughts) that i came acrosss -> [a link] onwards..
755248227,10099,txtsd,2021-01-06T11:33:20Z,why is this continuously being pushed forward? what's the holdup?
755288340,10099,glassez,2021-01-06T13:05:49Z,"in fact, now there are even more prerequisites to use sqlite (for example, we now often save resume data when changing a particular field, but we still have to generate all the data and overwrite the file). i would like to implement it in the near future if does not intend to do it himself."
803213817,10099,Ryrynz,2021-03-20T01:08:56Z,any chance the current open issues in 4.3.4 can be moved to their respective 4.4 or 5.0 milestones? they really shouldn't be pushed out to every minor version milestone release after release.
803243565,10099,glassez,2021-03-20T04:16:15Z,i am currently working on optimizing the resume data storage subsystem. the implementation of sqlite database storage support is part of my plans. so i still close this pr for the sake of future implementation.
598892681,12169,thalieht,2020-03-13T20:10:25Z,"`edit-clear-history` and the other 4 like it, look unchanged in qbt, just like in the after image, although i can see the change on github... also the 2 `media-...` icons on the bottom right have very little contrast, white on gray. i hadn't realized until now that i was ignoring all these icons because the ones currently used in qbt are barely visible on a dark theme. what a treat! they also look better in light themes too (imo). there is one minor thing that i'm not sure it's your problem... this color is dangerously close to the one used in breeze theme for checked checkboxes, note automatic torrent management: ![a link]"
599032648,12169,Mazino-Urek,2020-03-14T09:27:31Z,i have fixed those icons. i can't design the checked boxes they are done by the system theme. i have used `la-capitaine-icon-theme` for the whole project. only cookies and bug icon has been taken from `papirus-icon-theme`. i have also added a guideline so that in the future it is easy to design and maintain the icons by others. i hope this gets merged.
599043812,12169,thalieht,2020-03-14T11:30:12Z,"i know, just mentioned it in case it was annoying for someone."
599047882,12169,thalieht,2020-03-14T11:59:38Z,the ratio icon is the old one because the new is in the other pr. ![a link] ![a link]
599057519,12169,FranciscoPombal,2020-03-14T13:06:35Z,"my thoughts: - shouldn't the force resume button be the same color as the normal resume button, but with 2 arrows? - i think the force recheck should be different from the force reannounce button. the force reannounce button should be something like a ""syncing"" button (something like this, 3rd row, 2nd column, but more round: [a link]"
599064815,12169,Mazino-Urek,2020-03-14T13:58:43Z,i will make the necessary changes but i will not be able to do anything before 26 march. in the meantime find any other problem you can find. the icon is same because in configuration file it is same. it will take some time to find the icon name and create a new one. if you can provide the list of repeated name it will make thw job easier for me. i can never thank you enough for building the application again and again so that i may have a look. i had no idea it would improve the look and feel of qbittorrent this much. thank you again.
603980177,12169,Mazino-Urek,2020-03-25T17:33:12Z,there may not be a separate icon for the force renounce. that is why it is adopting another icon. give me a name which i can make an svg of i will do it. i also want to make tag icon. it would be nice. i have made all folder icon square to make them homogenous.
604457401,12169,Mazino-Urek,2020-03-26T14:19:10Z,anymore improvement suggestions? i have worked hard on this project despite having a full-time job. it is really disappointing that i don't get any feedback from maintainer and developers. i still don't know if the changes are going to be merged or not. kindly give me some form of an update.
604558486,12169,thalieht,2020-03-26T17:16:55Z,resume icon seems to be transparent unlike pause and force resume (no opinion on which one is correct). also maybe it's just me but it's hard for me to distinguish what's inside the force resume icon. the following is my opinion and i don't have any suggestions so feel free to ignore it: i don't like how these 3 icons are in a circle because it makes them even smaller.
604658805,12169,Mazino-Urek,2020-03-26T20:09:22Z,you were right from design perspective and usability those did not make any sense. i removed the circles and changed colors. i have made some other changes and all my commits are here now. can you kindly compile one last time and give me a final look? i am closing two other pull requests (#8406 and #12276) as i have added all my changes here. i don't think i need to make any more improvements.
604734707,12169,thalieht,2020-03-26T23:16:26Z,![a link] ![a link] :thumbs_up:
604747250,12169,FranciscoPombal,2020-03-27T00:02:44Z,"-im this looks really good right now. i have no complaints. can you please post more screenshots, from settings, etc? edit: except 2 minor details: - why do ""categories"" and ""tags"" icons in the right click menu turn black in the dark theme, but ""rename"" and ""edit trackers"" don't - the firewalled icon is still a shield, which still conveys the meaning of protection. how about a flame with an exclamation mark instead?"
604761922,12169,thalieht,2020-03-27T01:02:44Z,they're in [a link] except the bittorrent gear is orange now. also
604772015,12169,FranciscoPombal,2020-03-27T01:43:58Z,"-im imo i'd either leave the connections icon in the settings as the ethernet port or i'd change to a wifi symbol as well. can't say i am a fan of the bittorrent icon in the settings, either. i am thinking something like drawing 2 or 3 from here ([a link] but less symmetric and with less nodes and less lines also in the case of 3 so that the point comes across without looking too small/cluttered. but it's up to you, since you've already done so much."
604829832,12169,Mazino-Urek,2020-03-27T05:59:28Z,"i got two icons. see which feels right. ![a link] ![a link] on the other note, i think changing the donate icon from wallet to love will be a good idea. ![a link] ![a link] i have also changed the magnet icon from orange to green. will this work? ![a link]"
604997750,12169,FranciscoPombal,2020-03-27T13:22:47Z,"-im i vote for the first one, but i'd wait for more opinions . yes, good idea. now that you mention it, i don't think any icons other than those associated with ""activity""/""downloading""/""resuming"" should be green. the only icons that need changing are the ""documentation"" and ""about"", from green to blue. also shouldn't the ""about"" icon be different? something like this: [a link] about the magnet icon specifically, i think it works as it was (orange), but blue like the other ones also would be good. i'll leave the final choice of the magnet icon color up to you."
605007262,12169,Mazino-Urek,2020-03-27T13:41:53Z,"here is the problem i am facing. right now there are four icons that have a question mark in them. `dialog-information.svg, help-about.svg and help-contents.svg`. i got no idea which is the one represents about. i have no problem changing it to an ""i"". then i am keeping it as orange. it just pops out among other icons. p.s. only 3 icon was using yellow color. i have replaced them with orange. less color clutter this way."
605035480,12169,FranciscoPombal,2020-03-27T14:37:28Z,"-im it's `help-about.svg`. `dialog-information.svg` should also be an `i` (can be a different one, up to you) if it isn't already. :+1: :+1:"
605039888,12169,Mazino-Urek,2020-03-27T14:46:10Z,"then i think my work here is done. i have pushed all changes. if qbittorent project ever needs a new app icon, knock me. i will do whatever i can."
605043670,12169,FranciscoPombal,2020-03-27T14:53:16Z,"-im don't forget to change the ""about""/""information"" icons to `i`'s ps - your comment shows up as edited because i accidentally clicked that instead of ""quote reply"", but i reverted the changes i made"
605046270,12169,Mazino-Urek,2020-03-27T14:57:52Z,"i have made the changes in `improving donation, magnet, help icons` commit. i had a hunch. you confirmed it in a later comment. so, it is already done. ![a link] this is `dialog-information.svg` now."
605067432,12169,FranciscoPombal,2020-03-27T15:38:28Z,"my bad, didn't notice. outstanding job. i have no further comments. review for merging please."
605116853,12169,glassez,2020-03-27T17:06:43Z,"personally, i don't mind updating the app's appearance from time to time. as for the icons themselves, this is subjective... i prefer not to engage in arguments about subjective topics. so if you approve some icon set by a majority vote and, most importantly, if the maintainer also approves it, i don't mind. the only objection is that we should not apply such changes between minor releases."
605456971,12169,glassez,2020-03-28T14:46:44Z,also you need to squash all your commits into one and fix commit message (and pr title) before we can merge it.
605464911,12169,Chocobo1,2020-03-28T15:46:40Z,"a few thoughts: * -im: * i noticed there are some files such as src/icons/skin/downloading.svg.orig, src/icons/skin/downloading_backup_7148.svg, are those really in use? i suppose you commit them accidentally? * there is a .svgo.yml in the icons folder, you should use it to slim down the svg files when everything is settled. ps. don't use other tools, iirc it will destroy the viewbox or some other important property in the svg file. * there are a few newly added icons, which i believe are not currently in use... * anyone interested in reviewing src/icons/skin/design guidelines.md? * what about webui? does it look nice too?"
605509221,12169,Mazino-Urek,2020-03-28T19:41:12Z,"done. they were in the main repository so i changed them too. i have no idea what .orig extension does. icons from both theme and skin folders have an accumulated size under 600kb. i think leaving the icon as is will help people who want to modify them in the future. however, i will do it if you insist. i just modified available icons. added nothing, deleted nothing. i would like to add ""tags"" icon if anyone can provide me the svg file name. i have removed it. i don't think future designers would like me to control their design choice."
605530893,12169,FranciscoPombal,2020-03-28T22:59:43Z,"-im something in your setup must have created them accidentally, they are not present in the current repo. the `.orig` extension typically means a ""backup""."
605546710,12169,thalieht,2020-03-29T02:08:12Z,the same ![a link] -im are these the correct icons for `documentation` and `about`? ![a link] whatever you see fit? or i didn't understand the question.
605561072,12169,Mazino-Urek,2020-03-29T05:22:12Z,"i have changed them into this now. ![a link] i want to change these two pairs of same icons into a different one. somehow they are linked as same. can you give me some directions? ![a link] okay, i have removed them. i had no idea how i created them,"
605622490,12169,FranciscoPombal,2020-03-29T11:35:37Z,"-im ok, i think the tag and category icons can be the same, but now i see a few issues with the webui screenshots i hadn't noticed before: - the ""force reannounce"" icon should be different than the force recheck icon; it should be something like a ""sync"" icon (example: [a link] - there are no icons for ""queue"", ""download first and last pieces first"", and ""download in sequential order"" in that context menu. is this intentional? sorry for insisting for more changes when i had already indicated that i had nothing more to say."
605625810,12169,ArcticGems,2020-03-29T12:04:40Z,or something like this? = [a link]
605626815,12169,FranciscoPombal,2020-03-29T12:13:08Z,"disagree, it has nothing to do with time or time intervals."
605628174,12169,ArcticGems,2020-03-29T12:25:08Z,"what about a simple bell with refresh arrows in/on it, it's a popular choice for announcement (icon below doesn't have refresh arrows)? = [a link]"
605631816,12169,xavier2k6,2020-03-29T12:57:26Z,"the ""delete icon"" looks like a glass with two ice cubes in it.........to me anyway. the ""edit delete"" icon may be more appropriate in ""red"" or something..."
605632200,12169,thalieht,2020-03-29T13:00:17Z,"it's easy you just need to change ""view-categories"" in 1 line in 2 files to the new file name, also to add an entry with the new file in `src/icons/icons.qrc`, note the alphabetical order. [a link] [a link] on another note i saw that ""edit-delete"" icon is the recycle one but in qbt all deletes are final."
605632323,12169,Mazino-Urek,2020-03-29T13:01:26Z,it looks like this now. previous icon was complicated for a small icon. ![a link]
605633056,12169,xavier2k6,2020-03-29T13:07:31Z,"maybe it needs to be changed to just a red ""x"" or a red ""bin"""
605635081,12169,Mazino-Urek,2020-03-29T13:23:48Z,i have made a commit dc9386c for the tags icon. kindly review it. i am working on the delete icon.
605635646,12169,Chocobo1,2020-03-29T13:28:19Z,"but there are more of them. you can find them under this link: [a link] and click on the ""jump to ..."" label. it will display a list of files, notice the first icon will be green if that file is newly added. please make sure there are no newly added files."
605635801,12169,thalieht,2020-03-29T13:29:34Z,looks good :thumbs_up: ![a link]
605637150,12169,Mazino-Urek,2020-03-29T13:39:23Z,i removed only the .orig icons previously. thanks for the direction. made necessary changes in 35af412. `tags.svg` is a new icon. i will add another for force recheck. it is now the same as the delete icon. ![a link]
605641174,12169,Mazino-Urek,2020-03-29T14:04:14Z,"i have split the reannounce and recheck icon. strangely, they used an icon named ""document-edit-verify"" which made no sense. i have changed them to ""recheck.svg"" and ""reannounce.svg"". if there is no more changes necessary, i would like to squash the commits."
605652247,12169,Mazino-Urek,2020-03-29T15:15:11Z,"i thank everyone who has provided their take on this work. i had no idea it would improve the initial design this much. i wholeheartedly thank , as without his [a link] i could never do this, as i am not a professional graphics designer. you guys are awesome!"
605654302,12169,thalieht,2020-03-29T15:28:56Z,![a link] :thumbs_up: but reannounce is inconsistent with the actions in the tracker tab ![a link] [a link] [a link]
605655654,12169,Mazino-Urek,2020-03-29T15:37:39Z,thanks a lot. pushed the changes.
605656467,12169,glassez,2020-03-29T15:43:30Z,sorry. i mean you need to fix commit message according to project coding guidelines.
605659939,12169,thalieht,2020-03-29T16:09:37Z,anyone knows why we use style standard icons for warning and error in trackers filter list? i hadn't noticed it until now because it doesn't look too bad in windows (imo) but in linux plasma it's completely out of place: ![a link] in case you want to do something about it: [a link] [a link]
605662417,12169,FranciscoPombal,2020-03-29T16:26:33Z,-im ~i believe there are still the following missing icons in the right-click context menu:~ - ~queue~ - ~automatic torrent management~ - ~super seeding mode~ - ~download in sequential order~ - ~download first and last pieces first~ plus on xfce (xubuntu 18.04) i still see a lot of the old icons. i would appreciate if someone could reproduce this.
605663140,12169,thalieht,2020-03-29T16:31:52Z,but these are checkboxes.
605663171,12169,FranciscoPombal,2020-03-29T16:32:02Z,"are designers actually expected to edit stuff in the svg files by hand (i really don't know)? if not, i think you should minify them like says. it's not about disk space used imo, but the extra size adds up and is undesirable in the context of the size of requests to the webui, especially the initial one. this won't be visible in fast and reliable connections, but i think the requests to the webui should be as lean as possible."
605663666,12169,FranciscoPombal,2020-03-29T16:35:44Z,"-im oh yeah. turns out on my system, unchecked checkboxes are just blank space, which makes it seem like there is something missing. disregard my previous remark about this then. still, is this expected behavior (that on some systems unchecked checkboxes are completely blank)?"
605664945,12169,FranciscoPombal,2020-03-29T16:44:53Z,"minor nitpick: i think the flame icon should be simpler, more like the shape of this one (but still with the exclamation mark of course): [a link]"
605665825,12169,Mazino-Urek,2020-03-29T16:51:45Z,"i have pushed some changes, see if that works. trust me on this one. with today's internet speed it won't be a problem. by saving let's say 400kb we are forgoing metadata that can't be recovered. shapes inside the icon become fixed and can't be improved upon. that is because of the theme you are using. changing it may help. let's see what i can do."
605670143,12169,Mazino-Urek,2020-03-29T17:23:15Z,will d508327 work?
605675188,12169,FranciscoPombal,2020-03-29T17:58:03Z,"maybe icons with metadata can be kept in a separate folder that's not used for building, and minified icons can be used like before. but don't make this change now, wait for the opinions of on this one. i see. are you sure it does not have to do with non-standard icon names or something? the theme i'm using is greybird, the default for xubuntu. don't take this personally, but it looks a bit like a poop. maybe it needs to be a little less ""fat around the base""? if that makes sense"
605679210,12169,Mazino-Urek,2020-03-29T18:28:43Z,i have only removed one icon. the others are left as is. i think the problem is either with the theme or the icon pack you are using. la-capitane-icon-theme or papirus-icon-theme is what i use. i am not good at making complicated icons. i just can modify them. i have taken one icon from [a link] to make this one. ![a link]
605682611,12169,ArcticGems,2020-03-29T18:53:59Z,much better! :smiley:
605688121,12169,FranciscoPombal,2020-03-29T19:36:42Z,this one is great!
605823952,12169,NotTsunami,2020-03-30T07:12:05Z,"i recommend running the svg files through a lossless optimizer as well, such as [a link] one."
605835043,12169,Mazino-Urek,2020-03-30T07:39:14Z,"ok, based on the popular opinion i have created a backup and made optimization based on the .svgo.yml config file available. the file size became 230kb from 486kb. this is the end result: ![a link] the interesting thing is when i open the icon it is ok. but the preview is totally busted. like this: preview: ![a link] in inkscape: ![a link] now, the decision is up to you. i have made my opinion clear on previous comment."
605841119,12169,NotTsunami,2020-03-30T07:53:04Z,does the same happen if you run them through [a link] site?
605842801,12169,NotTsunami,2020-03-30T07:56:48Z,i'm gonna play around with the included svgo config and see if it can be improved or if that thumbnail issue can be fixed.
605849646,12169,Mazino-Urek,2020-03-30T08:11:49Z,i have had previous experience with [a link]. using it yielded a better result. 180kb without icon breakage. ![a link] i have pushed c4808aa so that you can review the difference. what do you think? i am still against it but at least this program doesn't cause icon breakage.
605880044,12169,FranciscoPombal,2020-03-30T09:13:04Z,"-im like i said, if it were up to me we could do one of the following: 1. keep both sets of icons (optimized and non-optimized) in the repository. - the increase in size in the repository is irrevelevant - users benefits still benefit from using the optimized icons during program execution (all builds including release builds would use the optimized versions) - developers/designers benefit from the existence of the non-optimized versions for future improvements, like you said 2. keep only the non-optimized version and make the svg optimizer pass part of the build process, but this would mean: - another build step, possibly optional (e.g. controlled by a flag such as `--enable-svg-optmization`/`-dsvg-optimization`) and for this build step either: - an extra build dependency - requirement to be online and use an online service (i would really dislike this, even considering that for development purposes it would be ok to just use the non-optimized versions) if option 2 is chosen, this pr would be merged with only the non-optimized icons and the build system changes stuff handled in another one. it is overall the better option imo, since it is natural to think about non-optimized svg files as ""sources"" and optimized svg files as ""build products"". however, it is a little more complex, as it involves changes to the build system as a follow-up to this pr. either way this kind of decision is up to"
605898737,12169,Chocobo1,2020-03-30T09:48:36Z,"now i recall such moments... :thumbs_up: according to their website they should have better correctness (and written in rust should be a plus too imo). we probably should ditch svgo. -im i won't insist you do the svg optimization in this pr. if you don't, i would still optimize it later in another pr. and if you want to do it, then please make it another commit. at least that way we still have the original files in history. and how does using svgcleaner gets in the way of editing? (not a designer here) are you using layers or something else and it will be modified?"
605905643,12169,Mazino-Urek,2020-03-30T10:01:55Z,"previously, they would combine different shapes into one and thus making the icon hard for modification. now, after tinkering with the icon i can see that they have solved the problem. in my repository, i have [a link] the original commit untouched. i think this is ready for the merge."
605920892,12169,jagannatharjun,2020-03-30T10:34:29Z,"just sharing my opinion ..... imho the icons are too bright, can't we use the same shade of blue that is used in qbittorrent's icon? nice work though..."
605921742,12169,jagannatharjun,2020-03-30T10:36:24Z,"i think maintainers would prefer to keep the history in the official repository, since chocobo1 agrees you don't need to optimize anyway and 300 kb is nothing if you see the target audience of qbittorrent."
605929502,12169,jagannatharjun,2020-03-30T10:53:39Z,"how about making them the same size as original ones, also see the tab icons needs to be bit small ![a link] ![a link] i think this status bar icon needs some work, maybe decrease their heights a bit, also see the alternate icon button ![a link] also don't you guys think the gui looks too much colorful now (at least on windows), i personally don't like it that much, anyone window user here? please share your opinions. ![a link]"
605937025,12169,jagannatharjun,2020-03-30T11:11:07Z,"it does look better on the dark theme though, i think you need to find a balance ![a link]"
606011815,12169,Mazino-Urek,2020-03-30T13:51:01Z,"that was the main reason for the redesign. most of this icon is barely visible in the dark themes. besides, the most modern application is embracing the dark themes and bright colors. i will leave it up to the majority. this is my take."
606015865,12169,jagannatharjun,2020-03-30T13:58:04Z,"everything else is good and acceptable but just that the top bar items really look out of order if you can decrease their heights, maybe match with the original icons that it will be really good."
606016922,12169,Mazino-Urek,2020-03-30T13:59:54Z,"here is my proposal, i can use the color used by google. it should work in both light and dark situations. ![a link] or the one used by microsoft, ![a link] let's see what i can do."
606019625,12169,Mazino-Urek,2020-03-30T14:04:40Z,let's take some opinion before that. i have had to redesign this too many times. so you agree with ?
606022106,12169,FranciscoPombal,2020-03-30T14:09:00Z,"hmm, agreed. i don't think the number of different colors used needs to be decreased, but maybe the colors do need to be a less bright and/or saturated."
606026621,12169,jagannatharjun,2020-03-30T14:16:41Z,"windows native widgets are somewhat old, and too many colors on it look distracting, i personally like the original icons and icon choices and the only problem seems with them is too dim coloring. the icons of this pr are also very good and definitely an improvement but i don't like some choices especially sizes of icons, i would really like it if the sizes of original icons can be preserved. but this is only my personal opinion"
606027626,12169,jagannatharjun,2020-03-30T14:18:14Z,"i also think you should go with google, google design guidelines seem better, microsoft is always confused. edit: you should wait for a maintainer's opinion, their opinion is what matters."
606029943,12169,Chocobo1,2020-03-30T14:22:00Z,"i prefer not state my personal opinion. however, good looking or not is purely subjective to each one, and refacing an app always attracts positive and negative comments, for example i can already see dissatisfied users want the original icons back or having an option to change as they wish (there is a related pr in the work iirc) no matter how good the icons are. just keep this in mind when facing users filing this kind of issues (hopefully there won't be many)."
606038536,12169,Mazino-Urek,2020-03-30T14:36:26Z,i am changing the color based on google guideline. google doesn't have orange in so i can either use the yellow they use or change it to the orange used by microsoft. this is consuming a lot of my time. let's do this right once and for all. previous icons didn't have a fixed canvas or icon size. that is why my icons are very close to the size of others. i am resizing the icon but i will still try to keep them in same size. this is good practice. should i optimize or not? the existing npm based `svgo ` is not a good piece of software. it breaks icons. i have used `svgcleaner` instead and it is reliable. it also preserves some metadata. before optimization: 486 kb after optimization: 180kb
606039226,12169,FranciscoPombal,2020-03-30T14:37:33Z,"-im i agree with that the icons should retain their sizes, but other than that, i can leave the discussion about colors to others, as it doesn't bother me either way."
606041096,12169,FranciscoPombal,2020-03-30T14:40:33Z,"-im keep it simple, just leave this pr without optimization, then submit another with optimization. once both versions are in our git history, in the future a 3rd pr can be made to add the svg optimization as a (optional) build step."
606063398,12169,Mazino-Urek,2020-03-30T15:18:16Z,i have resized most of them. there are two settings icon. one is `gear.svg` another is `gear32.svg`. can you tell me which one is being used here? [a link]
606076943,12169,FranciscoPombal,2020-03-30T15:40:37Z,"no idea right now. if no one knows, just replace each one at a time with a placeholder, such as a black circle/star/whatever and see where it ends up in each case."
606096503,12169,Mazino-Urek,2020-03-30T16:15:03Z,i have changed icon size and color. this pr is unoptimized. i have created a new one where it is optimized(#12337).
606139440,12169,thalieht,2020-03-30T17:36:28Z,"neither, `configure.svg` is used. gear and gear32 don't seem to be used anywhere."
606144997,12169,jagannatharjun,2020-03-30T17:47:12Z,much better may bit smaller pixel square or two ![a link]
606146677,12169,Mazino-Urek,2020-03-30T17:50:24Z,"exactly, i have searched every .cpp file in the gui folder. there is not a single mention of these two icons. why are they in the folder then?"
606146886,12169,jagannatharjun,2020-03-30T17:50:50Z,"also if you can remove dots from search icons, they're not clearly visible due to small size thus don't look good."
606149444,12169,Mazino-Urek,2020-03-30T17:56:04Z,done.
606385414,12169,Chocobo1,2020-03-31T04:00:51Z,then they should be removed to slim down the qbt binary.
606423717,12169,Mazino-Urek,2020-03-31T06:17:56Z,done.
633527213,12169,glassez,2020-05-25T11:32:13Z,"since #12861 is merged now you can provide your icons as ""ui theme"" file (don't forget to update icons layout to follow the current one). even if you want your icons to become built-in icon set it can help to review."
633661816,12169,Mazino-Urek,2020-05-25T17:30:10Z,i am not a programmer. can you give me some pointers? i will do the rest. thanks.
634568342,12169,FranciscoPombal,2020-05-27T10:19:55Z,i think this is what means: [a link] though that page hasn't been updated to mention icons (at least ctrl+f yields no results). could you lend a hand here and also update the wiki page please?
634631701,12169,Mazino-Urek,2020-05-27T12:38:15Z,"sorry guys. i am not a programmer. i have never worked in ui or with any framework. i did this for fun. i had no idea you have combined the icons. as you can see i have messed the pull as i had to pull from upstream and push my changes. i am not adept at this. after trying hours, i created a new pull with changes. kindly merge my pull #12926, if possible. i will also make another with optimized icons. i just can't keep doing this. from next week lockdown of my country ends and i won't be able to spend any more time on this. it was a good learning experience for me. thank you."
899728752,15330,glassez,2021-08-16T18:32:32Z,please provide screenshots/examples of how forms and produced issues will look.
899794150,15330,thalieht,2021-08-16T20:21:36Z,"i would: - re-merge os and qbt version and now that we can have a description, i would also merge the ""qt & libtorrent-rasterbar versions."" section into it as part of the description. main motivator for these: less scrolling! - remove the ""browser name and version."" section. the issues where these are a factor are too few to deserve a whole section. - make the checkbox and section about log/settings optional unless you want to see it blindly ticked and the section filled with ""asdfasdfasdf"" to bypass the requirement. as i said in the previous pr, i would make it opt-out as ""include them unless you know they are irrelevant to the issue"" which is what happens anyway in practice. [a link] [a link] i can't see ""preview"" though. i guess someone will have to make a test issue for that."
899807216,15330,xavier2k6,2021-08-16T20:46:27Z,"example of both forms can be utilized/created from my repo: [a link] (test away creating issues/feature requests) there's no actual ""preview"" like we know/use to. the ""preview"" appears in the (text boxes) ->""what issue are you experiencing?"" etc. no bother, will address your comments."
899809291,15330,sakkamade,2021-08-16T20:50:23Z,"[a link] even so, the screenshots would not be redundant, i think."
899977912,15330,sakkamade,2021-08-17T04:08:27Z,perhaps the ` ` element can be added to `log & settings file(s).` section? [code block] log & settings file(s) (type here) as `value` [a link] too.
900171167,15330,xavier2k6,2021-08-17T10:15:24Z,i will address all issues & add screenshots etc. will convert to draft for now.
900416879,15330,glassez,2021-08-17T15:51:41Z,"my general opinion is as follows: the biggest and undoubted advantage of these changes is that it will no longer produce this extra annoying text in the preamble of the issues. so i suggest not to hung up on some little (subjective) things now, but simply eliminate obvious shortcomings (such as extra dots at the end of input field labels) and merge it. fine-tuning can be done later in one of the following prs."
900448106,15330,xavier2k6,2021-08-17T16:31:16Z,"op updated with screenshot & issue example ref [a link] ~""feature request"" changes are a wip..........time needed.~ done, added screens & example etc. to op. (set the text area to false)"
901835278,15330,xavier2k6,2021-08-19T11:26:21Z,"will address issues/comments etc in a few days, haven't time right now."
906298852,15330,xavier2k6,2021-08-26T10:51:00Z,working on - must update op/screenshots etc.
908274270,15330,ArcticGems,2021-08-30T11:46:43Z,"the new screenshots looks great, so hopefully it gets merged soon. :thumbs_up:"
908292956,15330,xavier2k6,2021-08-30T12:15:31Z,"thanks, i've re-arranged things/re-worded etc. - so hopefully this will suffice for now. op updated with new screenshots/example links etc."
916828780,15330,glassez,2021-09-10T11:19:58Z,"are there any problems with completing this pr? why is it still a draft? i would still merge it asap, and leave fine tuning for subsequent prs."
916842776,15330,xavier2k6,2021-09-10T11:47:53Z,"i've only a few final comments to address, which will be taken care of tonight/tomorrow."
917656143,15330,xavier2k6,2021-09-12T15:20:19Z,hopefully i've addressed all of your comments/concerns now. apologies but your approval got kicked when i pushed changes. [a link] with new screenshots & links to example issue/feature request edit: regarding screenshot & example link for feature_request! both have: this was fixed ie not bolded text. (just didn't update screenshot or example.)
919984354,15330,glassez,2021-09-15T12:42:42Z,"oops... only now i realized the fact that it is a little not what i expected from it :unamused_face: when i initially proposed using some forms to create issues, i mostly wanted that the data that makes sense only at the time of creating the issue does not fall into its contents (i mean all these prerequisites checkboxes). now i see (in the screenshots above) that all this ""garbage"" is still here. question - does ""github forms"" really not allow you to do as i would like? or did you just miss this aspect?"
919996162,15330,xavier2k6,2021-09-15T12:59:36Z,all prerequisites checkboxes can be removed (it's not a requirement in order to implement the github forms.) it wasn't clear to me that you didn't fully want them. (crossed wires lol) i'm not 100% sure they can be hidden like the advisory notes etc.... (i can test) how about these? what the user would see: ![a link] what we would see: ![a link] reference issue: [a link]
920008073,15330,glassez,2021-09-15T13:15:01Z,"i would want the following (if it's allowed): 1. the user sees all these prerequisites and is required to accept them in order to create an issue (otherwise it should be impossible). 2. when the issue is created, it should not contain prerequisites (the fact that the issue is created implies that prerequisites are accepted)."
920101141,15330,xavier2k6,2021-09-15T15:02:37Z,"that's basically what we have now. unfortunately for now, (github forms is still in beta) `markdown` is not rendered in created issue -> that's why we don't see the **advisory etc. we can: 1. remove them completely, user will still have to fill in ""required"" text area fields etc. before being able to submit an issue. 2. leave as-is (until `markdown` in issue body becomes available & we could use `collapsible markdown`??) 3. instead of having them as checkboxes.......just display e.g. please read: xyz under `markdown` which then wouldn't be displayed in created issue. **option 3:** (ignore typo's - quick draft) ![a link] what we would see: ![a link] reference issue: [a link]"
920199395,15330,glassez,2021-09-15T16:56:36Z,"**option 3** looks like an acceptable compromise (if the prerequisites are formatted as a list for better readability). , what do you think about this?"
920217297,15330,xavier2k6,2021-09-15T17:22:25Z,example listing: ![a link]
920320816,15330,thalieht,2021-09-15T19:37:05Z,i'm fine with all of those options.
920555551,15330,Chocobo1,2021-09-16T03:56:02Z,me too.
920832892,15330,xavier2k6,2021-09-16T11:49:39Z,"option 3, it is then - i'll remove the `checkboxes` from both `bug_report` / `feature_request` & reword/list(s) like [a link] (we can add back the `checkboxes` at a later stage in another pr, if we deem them necessary etc. etc.)"
920852570,15330,xavier2k6,2021-09-16T12:20:10Z,"is everyone ok with the wording?? ~regarding this part ->[a link].**] in the ""feature request"", is this appropriate here or should it be omitted?? (it's basically a remnance/copy&paste from the original `feature_request.md` file.~ removed it. **issue:** (user will see this beforehand - won't show in submitted body) ___ ![a link] **feature request:** (user will see this beforehand - won't show in submitted body) ___ ![a link]"
920972012,15330,xavier2k6,2021-09-16T14:50:19Z,"hopefully, this is ok for you now?"
921469671,15330,Chocobo1,2021-09-17T04:51:55Z,thank you very much for getting it done!
921670799,15330,xavier2k6,2021-09-17T10:00:17Z,"no problem, looks like it's doing the job - we have a good detailed/constructive ""first issue!"" ref. #15476"
922017451,15330,dark-swordsman,2021-09-17T19:05:05Z,glad to be the first one! lol. i wasn't sure if i provided enough info honestly. loved the format and it was easy to follow.
269936781,6186,Chocobo1,2017-01-02T06:04:38Z,could you post a screenshot?
270038366,6186,magao,2017-01-03T01:04:44Z,![a link] i'm not sure how to make it use the dark theme colours - changing my theme in mint mate to a dark one didn't appear to do it.
270227906,6186,magao,2017-01-03T21:20:28Z,"urgh! that requires getting qbittorrent compiling on windows ... definitely not the trivial task it is on linux and something i was hoping to avoid. on the plus side, my windows machine should be much faster at compiling than my qbittorrent linux vm. any chance someone who already has a windows compile setup or dark theme could fork and pull this changeset and post a screenshot? if not, i'll see if i can set it up on the weekend."
270650305,6186,thalieht,2017-01-05T14:01:17Z,breeze dark theme
270736705,6186,magao,2017-01-05T19:37:18Z,thanks! would you be able to change it to use maroon for the dark theme as well so we can compare? i suspect maroon will be too dark.
270753115,6186,thalieht,2017-01-05T20:48:00Z,indeed
270784950,6186,thalieht,2017-01-05T23:10:14Z,you could use something like [a link] to test colors if you want.
270805047,6186,magao,2017-01-06T01:13:12Z,"ok - so i think the colours in the pull request work as they are, so it's just a question of whether the change is desirable or not."
271126573,6186,magao,2017-01-08T03:16:33Z,rebased on top of #6212 and uncrustified.
272947295,6186,magao,2017-01-16T19:44:26Z,the new icon scheme #4253 is based on the existing colours - stalled and paused look a little weird in my build. if this pr gets merged then might want to adjust the icon colours to match.
274293977,6186,Balls0fSteel,2017-01-21T22:59:25Z,"i am pretty sure it's impossible to find a scheme that will fit every distribution's default colors. maybe allow color customization via the config file, so the distribution packagers can set it up correctly? then again, that's just another added load of bloat."
274313143,6186,magao,2017-01-22T06:53:09Z,"rebased on top of master. i'll see if i can work out how to change the colours of the icons to match to include in this pr, but i'm not a graphical person ..."
274318160,6186,Balls0fSteel,2017-01-22T08:54:58Z,"the easiest method is using hue/saturation in paint.net/gimp. (but yeah, see my previous comment, if you match one theme/platform, it will look weird on the other one. maybe just a new ini for the colors?)"
275237621,6186,magao,2017-01-25T21:25:37Z,"i've gone with a different approach - when loading the icons, set the icon colour to match the state colour. this will handle both light and dark themes. doesn't require any changes to the icon files - just creates a new solid-colour pixmap masked by the transparent pixels. ![a link] i've also got an alternative that i prefer that i've included in the pr for discussion (72399d3) - inverting the icons. this also doesn't require any changes to the icon files (just inverts the mask). ![a link] if you like 1ea2539 and aren't sure about the others yet (or don't want them) i can split 1ea2539 out into its own pr. whilst i think allowing customisation of the colours might be a nice feature, i think it's outside the scope of this pr (but 1ea2539 would be a step towards it as then the icons will follow the customised colours)."
275277678,6186,magao,2017-01-26T00:39:14Z,interesting - i just realised that my change doesn't invert the status icons in the sidebar (i don't normally display them). i'll work out how to fix that and re-push. although if this is desirable then the icon files themselves should be changed imo - this would only be a stopgap.
275296895,6186,magao,2017-01-26T02:56:00Z,"i've got a new series of commits (not pushed to github yet) which i could either leave as a single pr, or split them up. **this pr should not be merged in its current state.** in the options below, if the final one is where we want to end up then i think it would be best to just have everything in this single pr. for the transfer filter list, i've special-cased `all` to use the same colour as in the icon file (since there's no corresponding torrent state). all other filters use the colour from one of the torrent states. `resumed` and `active` use the same colour as `downloading`, `inactive` uses the same colour as `stalled downloading`. the following are all on a light theme - the screenshots in earlier comments show what would happen for a dark theme (in particular, `paused` will be gray 80 and `inactive` will be salmon). original state colours, current icons ![a link] modified state colours, current icons ![a link] original state colours, inverted icons ![a link] modified state colours, inverted icons (this is what i'll be using no matter the decision) ![a link]"
275336537,6186,Balls0fSteel,2017-01-26T08:51:53Z,very nice job. :thumbs_up:
275376702,6186,magao,2017-01-26T12:26:19Z,note that this doesn't change anything for the web ui - the icon files will need to be changed for that (or an equivalent to what i've done be implemented in javascript).
275396214,6186,zeule,2017-01-26T14:08:31Z,"while joining the others who like the icons look, i would like to raise a couple of concerns regarding the code in this pr. 1. you, in fact, use a singleton to manage all the icons, but you do it implicitly, and this is not good. one can benefit from a proper implementation. for example, it can be used in the web ui as well. a singleton [code block] might be a much cleaner solution. perhaps you wanted to change the current code as little as possible, but your changes make the code even uglier. plus, your code can not react to colour theme changes in principle. while now icons are readable when switching from light to dark colour theme (and vise-versa), with these changes reading them would become problematic. 2. replacing colours in pixmaps will lead to problems if an icon is rendered with anti-aliasing (you kill it). at least i do see the icons in this pr aliased on 128 dpi screen. it would be much better to replace colours in svg and render an icon afterwards. my suggestion, therefore, is to implement the aforementioned `skin` singleton, edit svg skin icons to make them monochrome with simple colours (e.g. black on transparent) and then do simple text replacement (without fiddling around with qt's svg modules)."
275510983,6186,magao,2017-01-26T20:56:21Z,"i've worked out how to change the original svg files (externally) to invert them (using masks - thank you text-based graphics format). so i'll do that (and modify the colours to match my new light theme) and then use the instructions to regenerate the png files. could you post a screenshot of both the icons on a dark theme, and with anti-aliasing artifacts? i may be able to find a method of doing the fill without the artifacts. i think making more drastic changes such as how the caching works (i.e. allowing swapping between light and dark themes dynamically) needs to be a separate issue. for example, the transfer filter list is only built once - we would need to detect the theme change and then rebuild the transfer filter list. if the code is to be refactored, it should probably be done by someone who has a better grasp of the whole picture. for example, i have no idea how the web ui fits in other than the image files being used. that's the main reason i want to have as light a touch as possible."
275533917,6186,magao,2017-01-26T22:27:20Z,"webui with modified icons - inverted and matching new state colours. ![a link] does the webui support dark themes? i did a text search for ""dark"" and the only thing i could find was in progressbar.js which seems unrelated."
275558949,6186,zeule,2017-01-27T00:41:17Z,"here is the screenshot, please: ![a link] i have to admit that i was wrong regarding the antialiasing: the original icons are 256 by 256 pixels and that is enough when downscaling. what i do see is the absence of the sub-pixel rendering (compare with the letters at the right). but that is a completely different story. p.s. most of my torrents are in stalled state. therefore, i would prefer a neutral colour for them, but now it is too reddish."
275563356,6186,magao,2017-01-27T01:09:46Z,"i do feel that the salmon is too light. it used to be used for paused as you can see in my earlier comments, and changing that was the whole point of this pr. i think we need some red in it, and i like the maroon for the light theme, but we'd need something better for the dark theme then (as can also be seen in earlier comments, maroon is too dark). you're probably best placed to come up with a colour you like on a dark theme. the good thing is that with the pr in its current state you can experiment just by modifying `torrentmodel::getcolorbystate()`. post a screenshot with your preference (+ the rgb values). i'm glad the antialiasing isn't a problem - i was afraid that `qpixmap` was doing something weird when i made the masked solid colour. i'm not surprised there's no sub-pixel antialiasing as that's usually only a feature of the font system (but maybe there's a flag for qt to do it for icons ... i'll have a look). this looks relevant (though still talking about text): [a link] i see that your stalled torrents are uploading. that's not really an undesirable condition (unlike stalled downloading) - just means no one is leeching. so maybe we should give stalled uploading the same colour as uploading?"
275563910,6186,magao,2017-01-27T01:13:34Z,"i'll compare your svg files with mine, and take the simplest (e.g. if yours aren't done with masking, that's probably simpler for someone else to modify in the future). just took a look ... inkscape added a **lot** of gunk to the files ... maybe i can combine the 2 sets by just taking the paths from yours ..."
275571723,6186,zeule,2017-01-27T02:04:07Z,"my point is: the most common status (stalled) should be mapped to a neutral colour (a shade of grey). i use my own modification (#3936) for the colour theme cause i don't think a single set of colours can satisfy everyone. that is why my only suggestion is to be conservative: as little different colours as possible and prefer low saturated ones, especially for elements that fill a significant part of a window. update: and please bear in mind that on a dark background colours look more saturated than on a light one."
275575739,6186,magao,2017-01-27T02:36:40Z,"your most common status (stalled) is different to my most common status (paused). in my case, i have a lot of rss filtering, and i have all torrents paused by default so i can pick and choose (there's often several options available). as you said, no theme is going to satisfy everyone. stalled uploading is generally an inconsequential status, and so imo should be either a neutral colour or the same as active uploading (royal blue on light theme, steel blue on dark theme). i'm going to implement having both uploading states be the same in my next version of the pr. _edit: tried this, disconnected my vpn, started seeding but for some reason it stayed in seeding instead of stalled uploading - with zero traffic._ stalled downloading is almost always undesirable e.g. if all my torrents are stalled downloading for a while it might indicate that my vpn connection has gone down. i think it definitely deserves a warning colour (i.e. reddish). note that there are cases that stalled uploading could indicate a problem (e.g. a networking issue)."
275576804,6186,zeule,2017-01-27T02:45:45Z,", would you accept a pr which implements skin colours selection by a user adding a new options page ""appearance"" (possibly merging with #6196)?"
275577102,6186,zeule,2017-01-27T02:48:22Z,"indeed, the most common status may differ from user to user. this complicates selecting a universal theme even more."
275604503,6186,magao,2017-01-27T07:23:26Z,yes - i did but i'd already gone about it another way which i could do with just an svg viewer and text editor ;) the result is sub-optimal for later graphical editing because it's using masking which is why i want to take yours and minimise the differences.
275763808,6186,magao,2017-01-27T20:17:40Z,i used [[a link] but i didn't use any of the graphical features other than viewing the changes. once i'd worked out the masking i needed for each file i then just modified each svg in a text editor. the colours are as per my version of `torrentmodel::getcolorbystate()` for the light theme (+ the comments above): checking.svg: #008080 completed.svg: #00008b downloading.svg: #228b22 error.svg: #ff0000 filteractive.svg: #228b22 filterall.svg: #d1954e filterinactive.svg: #800000 paused.svg: #000000 queued.svg: #008080 resumed.svg: #228b22 stalleddl.svg: #800000 stalledul.svg: #4169e1 uploading.svg: #4169e1
275779933,6186,magao,2017-01-27T21:30:34Z,"there are definitely some differences between your svg paths and the originals e.g. checking.svg has less-rounded corners. unfortunately, i can't find anything which can take a path and invert it except by masking :( or alternatively by producing a bitmap and then tracing it. i think i may just leave the svgs masked. anyone wanting to change them in the future will presumably have the know-how to deal with it. but i'll add a note in the readme.md."
275820856,6186,magao,2017-01-28T02:26:15Z,no need to post pngs - i'll just generate them using grunt.
275878237,6186,magao,2017-01-28T22:09:35Z,"they look fine to me, except that the downloading and uploading icons are quite a bit bigger now. so obviously there was a reason to have different files. could you redo `downloading.svg` and `uploading.svg` from the originals? we'll also need to check on his hi-dpi monitor once i update the pr (after i get the new `downloading.svg` and `uploading.svg`). before: ![a link] after: ![a link]"
275957307,6186,magao,2017-01-30T00:02:12Z,"i think it would be best to keep the smaller icons in this pr and then maybe you could create a separate pr for larger icons. this pr has already become much much larger than i originally envisaged (but otoh i think the result is also much better). i still need to reorder the pr (need to rebase your commit into it, etc) and i'm working my paid job right now so i might not get to it until the end of the day. so maybe best to wait until i have final versions for all the (small) icons to reduce churn? fwiw i prefer the look of the smaller icons, but i don't have a hi-dpi screen and it might be that when all the icons are larger i won't mind so much (the main thing is that they're out of balance with all the other icons). btw, to change the amount of whitespace you could do what i did in pr #6321 - change the viewport, but in the opposite direction i.e. whereas i made the viewport larger to increase the amount of whitespace there, you would decrease the viewport."
276192429,6186,magao,2017-01-30T21:13:53Z,"thanks - i'll hopefully push a new set of commits later today. and yes - it is `viewbox` you need to change. the parameters are `x`; `y`; `width`; `height` - you need to reduce `width` and `height` by twice what you increase `x` and `y` to keep the icon centred. `viewbox=""0 0 32 32""` -> `viewbox=""2 2 28 28""` -> `viewbox=""4 4 24 24""` (screenshot from boxysvg) ![a link] the image remains the same size, but when you then convert to png it's the viewbox dimensions that are used, so the icon ends up larger."
276238766,6186,ghost,2017-01-31T00:41:39Z,this and the new theme have me excited for 3.4
276294712,6186,magao,2017-01-31T07:37:32Z,"integrated inverted icons from . i rebased your commit into my series so you may want to delete the branch from your own repository to prevent duplication of changesets (maybe after this pr is merged). also changed the stalled uploading colour to be the same as uploading. i think this pr is now ready for review. the only thing is the refactoring suggested by , but as i said i think i'd prefer that to be a separate pr once this is merged (and preferably done by someone who understands the effects on the webui as well)."
277359560,6186,magao,2017-02-03T20:53:49Z,"something happened with [a link] - they changed from `viewbox=""0 0 32 32""` to `width=""32"" height=""32""`. when running `grunt` this resulted in a tiny 32x32 image in the top-right corner of a 256x256 png ... fortunately, changing back to using `viewbox=""0 0 32 32""` results in restoring the original size, so i'll make that modification in-flight. also turns out that `viewbox` is case-sensitive. and looks like something also happened with paused - it's all blank (even though it's got a path). i've taken the version from the previous commit. turns out `paused.svg` originally had a `viewbox=""0 0 256 256""` and `resumed.svg` had `viewbox=""0 0 16 16""`. i've normalised them both to `viewbox=""0 0 32 32""` so all the status icons have the same `viewbox`, which will make playing with the amount of whitespace by `viewbox` manipulation much easier."
277371139,6186,magao,2017-02-03T21:47:07Z,"rebased on top of master, integrated new icons from + my fixes. would you like me to squash my fixes from 1b8f521 into your commit? btw, i tried reducing the whitespace in the icons, and while they looked ok in the status list, i found them to be over-large in the torrent list. maybe as part of a separate pr there should be an new ""behaviour"" option to select larger icons. we wouldn't need to change the icon files as we could modify the pixmaps on the fly. i might play around with this and see what i can come up with."
277415554,6186,magao,2017-02-04T03:34:55Z,"does it really matter? `grunt` will produce the same 256x256 png regardless of whether the source is 32x32 or 256x256 (since svg is a vector format). having them with the same `viewbox` dimensions is more for consistency and ease of experimentation. i rescaled by resizing the document and object in inkscape, then manually positioning the object, then modifying the svg xml to remove all the cruft - a somewhat error-prone process that i'd prefer not to do for all the icons."
277566991,6186,magao,2017-02-06T01:27:32Z,"looks like i'm going to include an option for large status icons in this pr after all. they use the original same png files, but trim off most of the space around them before converting to an icon (so they rely on the icons having that space). i've also got the status icons dynamically responding to change of dark/light theme. as far as i can see there's no event that tells us the theme has changed, but i'm reasonably certain we'll always get a repaint event and i'm relying on that. need to clean up the changesets before i push - probably this evening. mint-x ![a link] ![a link] mint-y-dark ![a link] ![a link]"
277607775,6186,magao,2017-02-06T07:53:43Z,"the commits have been refactored and the actual order doesn't match what is showing above in the pr. look at the [a link] instead (although that still has some weirdness with the _follow project coding style_ commits - there should only be one at the start). 1. refactored the icon caching. most of the status icon handling code has been moved to `guiiconprovider`. other components now only need to specify an icon id e.g. `filterall`, torrent state, or both in a few cases. 2. torrent and filter lists follow the status colour. 3. dynamically detects light/dark theme changes and switches to the appropriate icon colours. 4. new preference ""use large status icons"". switches between the small and large icons as above (updates when clicking ""apply""). 5. status colour changes as discussed above. bah - just spent an hour trying to work out why i was building successfully, but some of the appveyor and travis builds were failing. turns out i'd put some code inside an `#ifdef` that it shouldn't have been, and missed putting some inside an `#ifdef` that should have been ..."
278139144,6186,magao,2017-02-07T21:03:34Z,my current prototype removes the direct manipulation of mainwindow and replaces it with capturing the palette change and forwarding a signal. the widgets then connect to that signal and update their icons.
278145227,6186,zeule,2017-02-07T21:26:12Z,eager to see it :)
278238657,6186,magao,2017-02-08T06:12:19Z,"rebased on top of master and hopefully addressed all comments (either in discussion or code). i've included commit 417ec61 which moves the status icons out to their own directory - let me know if you don't want it and i'll remove it from the pr. i've simplified the api somewhat, and in particular `iconprovider::geticonpath()` no longer takes an optional parameter. instead, the icon path is hard-coded to `:icons/skin/` (or `:/icons/status/` with 417ec61). theme detection now takes place in `guiiconprovider::configure()`, which emits `guiiconprovider::themechanged()` if there actually was a change. this will either be called from `mainwindow::event()` (via `guiiconprovider::updatetheme()`) in response to a palette change, or due to a `preferences::changed()` signal (for small/large status icons). anything which needs to be notified of a theme change simply connects to `guiiconprovider::themechanged()`. btw i've kept the ""large"" status icon terminology as the current votes are currently 2 in favour (, ) to 1 against (). i've also used `static const` `qlatin1string` and `qcolor` inside `torrentmodel::geticonid()` and `torrentmodel::getcolorbystate()`. i think it makes the code more self-documenting (and potentially slightly more efficient, though unlikely to be significant). at one point this was a simple 6-line pr ..."
278343310,6186,zeule,2017-02-08T14:29:36Z,"btw, there is an unanswered question from that times: this pr floods the main window with a lot of bright colours, effectively colourising all the strings in the torrent list, not only making them hard to read, but also making the main window look tasteless. i again suggest to colourise only the torrents that are in an active state which implies quick changes, i.e. those under checksum computations and maybe actively downloaded and the ones with errors. for the rest of them leave a neutral text and colourise icons only."
278456263,6186,magao,2017-02-08T20:46:06Z,"in my main window, it massively reduces the amount of colour as all the paused torrents go from salmon -> black. i changed stalleduploading to be the same colour as uploading - did that not fix your problem? if not, what state are the torrents in that you're complaining about? i would suggest that once this is eventually merged you create a pr with your suggested changes. it would need a separate `torrentmodel::geticoncolorbystate()` i would think. or thinking about this further - maybe have **all** the text neutral, and just rely on the icon colour? ![a link] ![a link] i've currently got both versions side-by-side (light theme), and i think i like the text being coloured."
278460840,6186,sledgehammer999,2017-02-08T21:03:45Z,"let me say, that i didn't read any of this while it happened. so the discussion is pretty huge for me. i skimmed through it and i realize that it involves changes to font colors, icons(shape and color) and skins? so can you give me a summary on what is happening here?"
278469992,6186,magao,2017-02-08T21:39:15Z,"as the pr currently stands: 1. torrent state colour changes (the original pr with some modifications): paused -> black/gray 80 stalled downloading -> maroon/salmon stalled uploading -> royal blue/steel blue 1 (same as uploading) the idea is that stalled downloading indicates an undesirable state (e.g. you're not receiving data, so may wish to switch to a different torrent), whereas paused is a normal state and stalled uploading probably just indicates no one leeching (not sure if that's the case though). but see [a link]. 2. torrent status icons have been inverted - [a link] (thought the actual method of doing it has changed since). 3. recoloured the icon files to match the new light theme states so they display correctly in the web ui - [a link]. 4. torrent status icons are modified in-memory to be the same colour as the text - [a link] (though doesn't actually show the text). 5. dark/light theme is detected and the icons switched to the corresponding colours automatically (the text was already changing) - [a link]. 6. option in the preferences to display larger version of the status icons (mainly for people with hi-dpi screens). the icons are modified in-memory by trimming off excess transparent space. same screenshot as (5). note: i've though about reversing this - make the icons files be the larger size, then add transparent space in memory. that way we wouldn't be relying on the amount of excess space in the icon files. thoughts? one issue is that the icons would then always be larger in the web ui. 7. moved the status icon files into their own directory `src/icons/status` (waiting on your decision)."
278480887,6186,magao,2017-02-08T22:20:38Z,rebased on top of master. addressed review comments. top two commits are for discussion: beb94e9: status icons in own directory 4a571de: all text in torrent list black (light theme) or gray 80 (dark theme).
278488183,6186,sledgehammer999,2017-02-08T22:49:29Z,"quick review from your [a link] i think i like the icon changes. the font color changes, i am not so sure. in any case, i want to focus on some other prs this week and the next one. so don't wonder why i won't comment on this pr."
278490473,6186,magao,2017-02-08T22:59:03Z,if i create the _appearance_ options tab as discussed in pr [a link] then the issue could become moot by having options to override the colours.
278490921,6186,sledgehammer999,2017-02-08T23:01:01Z,true. so we can keep the current defaults and user can change them.
278492499,6186,magao,2017-02-08T23:07:56Z,"in that case do you want me to resubmit this pr without the colour change, and if so do you want the status icons in their own directory? i think at that point it should be ready for merging."
278493897,6186,sledgehammer999,2017-02-08T23:14:05Z,for the moment keep it as it is. let's see how the appearance tab implementation will go.
278511734,6186,zeule,2017-02-09T00:49:29Z,"to me, the new look is superb (with smaller icons)!"
301301169,6186,ghost,2017-05-14T09:36:35Z,will this be ready for 3.4?
520175885,6186,glassez,2019-08-10T20:01:44Z,what is the status of this pr? is it still relevant?
362281705,8347,Chocobo1,2018-02-01T14:27:49Z,"i don't oppose strict rules and regulations, but the guide is too long / too detailed imo and that might do the exact opposite as you wanted. if i (as a user) were going to submit a bug and stumbled upon that, either i just skim through it (and read nothing) or i will ignore it and submit it as i like (like a rebel, yeah). i would prefer keep it short and concise, 3~5 bullet points at most for each section and give refer links to those who really want to submit a perfect bug report. and since the number of sections are increasing, it might be best to add an toc (table of contents) at top."
362363305,8347,FranciscoPombal,2018-02-01T18:46:33Z,"then those users will get their issue closed with a comment such as ""closed for insufficient information or not respecting the contributing guidelines "". in my opinion, part of filtering/reducing the number of bad reports is realize that the majority of them will come precisely from the ""rebel"" users. atom and ublock have similar or more lengthy contributing guidelines and they are doing just fine with them. that being said, i can certainly look into compressing a bit, and a toc is indeed a very good suggestion, will add."
362380621,8347,FranciscoPombal,2018-02-01T19:47:05Z,updated pr.
364498625,8347,Chocobo1,2018-02-09T17:18:48Z,you can squash the commits now.
364530233,8347,FranciscoPombal,2018-02-09T19:10:28Z,perhaps we should wait for 's input about linking `.torrent` files/magnet links before i proceed?
368344841,8347,sledgehammer999,2018-02-25T21:09:26Z,"i haven't read the whole nor the specific about torrent linking but: imo, in order to be safe we can't encourage obvious copyright infringement. so linking and/or uploading such torrents shouldn't be encouraged. linking/uploading safe torrents is ok. **if** the problem is found to be centered around a particular torrent then whoever from the team is debugging the report could tell the user to email him the torrent."
368347386,8347,sledgehammer999,2018-02-25T21:40:55Z,"**i only read the new text. i haven't it compared it to the old one** imo, we should allow for reporting bugs that aren't easily reproducible or that the user can't figure out what triggers it although he tried. and this is especially true for crashes with stack traces. this kind of crashes aren't obvious to the user, while the trace itself **sometimes** can point to the exact reason. but the trace is usually understood by the devs not the users. so this: is a bit harsh punishment for closing an issue. imo, if a dev comes along, sees the trace and can't figure it out then it can be closed. clarify that they can use the ""subscribe"" button to receive notifications of that report without having to comment first. about the torrent link here is my suggestion: also wtf? typo? about the pr commit messages: you should wait until #8374 gets finalized/merged and reference that instead. **general comments** 1. everything appears ok, although it is a bit much text. 2. `do some basic troubleshooting:` should indicate that it is just examples. rarely anything got fixed by reinstalling qbittorrent 3. `steps to ensure a good bug report` -> it should be clarified that it is expected to at least follow most of those steps. and only if they are applicable. (we don't want to close issues because 2 steps out of 20 were missed)."
368385897,8347,glassez,2018-02-26T04:17:48Z,", as for stack trace reports. since the users blindly publish stack traces here we have lots of similar issues related to same bug. now this is one of those types of issues that i ignore when briefly reviewing the list of new issues."
368501592,8347,glassez,2018-02-26T13:19:57Z,"imo, one of the main ideas that this document should provide is ""bugtracker is not customer support"". a bug-reporter is a full-fledged participant in the problem solving process, which has its own role. bug-reporter helps us to solve some problem, but not vice versa!"
368580721,8347,glassez,2018-02-26T17:27:13Z,"i had one idea about issue management: 1. we introduce some label for bad issues, e.g. ""bad issue"". 2. when one of project members treats some issue as malformed it assigns the ""bad issue"" label to this issue. 3. the ""bad"" issue should be closed after some time (e.g. 1-2 weeks) unless some of the project members unassign ""bad issue"". of course, there must be assignment/unassignment reason in the issue comments. p.s. the same algorithm can be performed to duplicate issues."
368842806,8347,FranciscoPombal,2018-02-27T11:24:12Z,"i clarified the relevant points. however, i still think these guidelines deal with stack trace reports correctly. it is made very clear that stack traces are useful, but reports with *only* a stack trace are discouraged. done. done. done. should i remove the section entirely and just reference the file (once it is merged)? yes, but i think it is necessary. as mentioned before, i think it is better to have fewer, but high-quality and relevant bug reports than a lot of spam. if you think there are redundant sections/phrases, let me know and i will adjust the pr. i can't really compress the text further, but i could be biased since i've been looking at it for a long time done done"
368844901,8347,FranciscoPombal,2018-02-27T11:32:51Z,"yes. and it is difficult and annoying to figure out if two issues are the same without descriptive titles. issue titles should never be ""qbittorrent has crashed"" with *just* a stack trace. they should be at least something like ""qbittorrent crashed when/while doing xyz"", relevant info, etc and *also* a stack trace (if applicable). yes, this is one of the main objectives of the pr. i also have several ideas pertaining to issue management. mainly, more and better tagging is needed. i have volunteered in the past to help with this, and the offer still stands. however, i think the specifics of this subject should be discussed in some other thread, separate from the discussion about this pr, so that we don't go off-topic too much."
368845561,8347,FranciscoPombal,2018-02-27T11:35:41Z,fixed.
368935664,8347,sledgehammer999,2018-02-27T16:22:09Z,"after your comments, i understand that you have a valid point. actually, in the past when i tried to troubleshoot stack traces, the reporters never answered back or answered ""uhm random crash no reason"". so yeah, i take back what i said about stack traces. agreed. but i think a better label would be ""bad report"""
369192085,8347,FranciscoPombal,2018-02-28T10:13:50Z,just noticed that official windows/macos builds are available at [a link] so i think this: could be changed to something like this: * asking for specific builds of qbittorrent other than the [a link] one. you can install older releases at your own risk or for regression testing purposes. previous windows and macos builds are available [here].([a link] what do you think?
370145937,8347,glassez,2018-03-03T13:01:15Z,"or maybe `malformed`? without ""report"", since it can be applied not only to bug reports, but to feature requests as well."
370159350,8347,FranciscoPombal,2018-03-03T16:16:02Z,"""invalid"" applies nicely to both"
378216582,8347,glassez,2018-04-03T11:24:06Z,the one more related problem i have encountered often recently is issues already solved in master (and closed by appropriate commits) but still unavailable for the users due to very long release cycle so the users open similar issues again and again.
378342815,8347,FranciscoPombal,2018-04-03T18:04:34Z,"this commit cannot really solve that problem. at best it mitigates the problem, since the guidelines specifically instruct users to search before posting. however, we will still have to close the repeated issues that slip through."
378346816,8347,FranciscoPombal,2018-04-03T18:17:30Z,"this pr has been pending for some time now, is everybody satisfied with its current state? if no one has anything else to add i can squash the commits for this to be merged."
378411123,8347,FranciscoPombal,2018-04-03T21:51:27Z,"squashed commits, this pr is ready to be merged"
378468131,8347,glassez,2018-04-04T03:21:50Z,"we've already had too many changes since latest release, but is gone missing somewhere..."
383647445,8347,Chocobo1,2018-04-23T16:59:03Z,pr updated
385593286,8347,Chocobo1,2018-05-01T03:54:03Z,"i noticed a merge commit is introduced (which is not-preferable here). since this pr is approved, i'll attempt to clean it up (i.e. force push to this pr / your git repo) and merge it immediately afterward."
385594027,8347,Chocobo1,2018-05-01T04:00:44Z,thank you!
385632948,8347,FranciscoPombal,2018-05-01T09:24:32Z,thanks for the cleanup and merge! thanks everyone!
532125736,11241,thalieht,2019-09-17T08:49:12Z,ok but when the option names are finalized.
532127193,11241,glassez,2019-09-17T08:52:56Z,"i don't insist but i would split it into two prs. first is for adding existing feature (delete torrent + files) to share ratio limiting. second is for implementation of new feature (delete torrent and its root folder). since the second is quite ambiguous, it can slow it down. besides, ""delete torrent + files"" is all most users need, i think."
532326086,11241,thalieht,2019-09-17T17:42:25Z,no can do because of this mess with the indexes. also i don't want to.
532436310,11241,Lagicrus,2019-09-17T23:10:30Z,thanks for working on this :grinning_face_with_smiling_eyes: so happy to see this finally get worked on after the seeming abandonment of [a link] back in april 2018. can't wait to use this myself
532655850,11241,Zekcode,2019-09-18T12:11:27Z,this is going to be so awesome! :thumbs_up: !! thanks
532763494,11241,thalieht,2019-09-18T16:31:07Z,"removed the ""+ folder"" option and addressed all other comments so far i think, except for the options' names, waiting for a consensus."
532796496,11241,Piccirello,2019-09-18T17:57:44Z,is there now no way to clean up remnants from extracted files?
532829636,11241,thalieht,2019-09-18T19:23:06Z,no..
532916242,11241,Zekcode,2019-09-19T00:27:40Z,"one more request, just installed this and works perfect. is it posiable to calculate time, from gb (size of torrent) if i delete after 5 mins its fine for uploading to external server, if its a 10gb og smaller ish. bit if its a 100gb thats at problem :) does it make sense? :1st_place_medal: like seed 60 seconds for each gb of size a torrent is :)"
533984758,11241,thalieht,2019-09-23T07:16:37Z,"imo it's more appropriate for the option name to be in singular if it contains ""torrent"" but is right that it doesn't fit the rest of the sentence. maybe keep it as ""remove them and their files""?"
534048904,11241,glassez,2019-09-23T10:50:36Z,"sorry, don't understand what you mean exactly. entire sentence should be in singular form."
534085634,11241,thalieht,2019-09-23T12:54:18Z,"""seed torrent until its ratio reaches"" seems weird to me because the option applies to all torrents."
534097755,11241,glassez,2019-09-23T13:26:14Z,"not sure if this is the case in english... we are talking about any torrent, but not all torrents at once, so it is more correct to use the singular. , are you native english speaker? , can you comment?"
534134760,11241,LordNyriox,2019-09-23T14:52:04Z,": the plural version of the quoted phrase seems more appropriate, imo. both versions seem more or less grammatically correct (given the context), but the plural seems like it would better indicate that this is a *global* setting, rather than some form of one-off trigger."
534141069,11241,glassez,2019-09-23T15:05:42Z,well. then i will remain neutral. let's see which option wins. not for me.
534167348,11241,thalieht,2019-09-23T16:04:03Z,"maybe we can change the sentence as well: ""seed until the torrent's ratio reaches"" nope."
534171585,11241,Chocobo1,2019-09-23T16:13:58Z,"personally i find singular form describes it better (because the option applies to each torrent individually), however that would also require changing the sentence: ""seed torrents until their ratio reaches"" to something like ""keep seeding until the ratio reaches"" and ""seed torrents until their seeding time reaches"" to ""keep seeding until the seeding time reaches""."
534205370,11241,thalieht,2019-09-23T17:38:52Z,"now that i look at it, the groupbox ""share ratio limiting"" is long overdue for a rename (since seeding time was introduced). we could change it to something like ""seeding limits"" and change the sentences to simple ""when the ratio reaches""."
534462727,11241,thalieht,2019-09-24T08:56:34Z,"now i'm not so sure about seeding ""limits"" because it may imply things such as amount of torrents seeding, seeding speed and i don't know what else. but what to replace it with..."
534537885,11241,thalieht,2019-09-24T12:36:15Z,"once again i'll copy utorrent, can't find a more appropriate term than ""seeding goal""."
534631199,11241,LordNyriox,2019-09-24T16:11:28Z,": imo, ""`seeding threshold`"" would do nicely."
534639700,11241,thalieht,2019-09-24T16:32:06Z,"to me, that sounds like it will _start_ seeding after some prerequisite."
534842997,11241,LordNyriox,2019-09-25T04:11:26Z,": how about ""`post-seeding actions`"", then?"
534850107,11241,glassez,2019-09-25T04:49:02Z,"no. they are clearly described by the options inside group box. let's not fall into subjective speculation and keep ""seeding limits""."
534903769,11241,thalieht,2019-09-25T08:04:14Z,"accurate but not so easy to grasp imo. anyway, i guess we're keeping ""seeding limits"". thanks for the suggestions though . p.s. i hate this (searching for appropriate words and phrases)"
536239605,11241,Chocobo1,2019-09-29T01:51:52Z,thank you!
536268559,11241,thalieht,2019-09-29T08:24:13Z,thank you all for the reviews and your patience!
537309456,11241,Lagicrus,2019-10-02T02:32:13Z,thanks for this
567475259,11708,jagannatharjun,2019-12-19T12:45:20Z,can we use the existing progress bar(fusion style) on windows at least? i think the current progress bar style has become a signature of qbittorrent and it does look better as compared to the windows progress bar
567480349,11708,glassez,2019-12-19T13:02:05Z,"iirc, it was used because of incorrect text alignment. custom theme creators want to customize it too, unless i'm wrong. we can discuss it anyway. we can use ""fusion"" progress bar with default theme and native one with custom theme."
567480760,11708,jagannatharjun,2019-12-19T13:03:17Z,"yes, that would be great."
567561310,11708,sledgehammer999,2019-12-19T16:27:15Z,"+1. i wanted to do that a long time now but i kept forgetting about it. why? what do we gain from this? uhm, i am not so sure about this. iirc on windows it looks very weird. (at least when talking windows xp. the chunked green progressbar looked bad). it is also the matter of macos. i think it doesn't draw the text (percentage) at all in the native format."
567572243,11708,glassez,2019-12-19T16:54:30Z,1. it's recommended by qt 2. it affected by qss
567574682,11708,glassez,2019-12-19T17:00:22Z,fortunately we don't support xp anymore. it should be controlled by textvisible property. but i can't test it on macos to confirm. we can merge it and waiting for feedbacks from users that use builds from master.
567582385,11708,sledgehammer999,2019-12-19T17:20:40Z,i can. please wait a few days from my review too. (generally speaking not only for the macos thing)
567612009,11708,glassez,2019-12-19T18:42:15Z,"hopefully it will really be a few days, not weeks. otherwise i can extract this commit into separate pr."
567612705,11708,thalieht,2019-12-19T18:44:14Z,"changing to `qstyleditemdelegate` increased the height of every line, i know because i reverted only that and it's back to ""normal"". i'm not saying to go back to `qitemdelegate`, just giving a hint. it's no big deal to me but i prefer more info on screen. old / new ![a link]"
567795803,11708,glassez,2019-12-20T05:37:40Z,what os/de are these screenshots from? can you also provide full width screenshots? i'm interested in name column too.
567872881,11708,thalieht,2019-12-20T10:18:38Z,linux plasma. ![a link] ![a link]
567911778,11708,sledgehammer999,2019-12-20T12:40:46Z,"just a hunge for your sizing problem: what happens if you hide the ""progress"" column by unselecting it via the right-click menu (on the transfer list headers)?"
567924122,11708,thalieht,2019-12-20T13:28:17Z,"nothing, already tried that."
568012998,11708,glassez,2019-12-20T17:38:27Z,", can you try the following? 1. disable custom delegate at all (comment out its creation in transferдшыеwidget constructor|) 2. don't return any decorationrole from transferlistmodel"
568021692,11708,thalieht,2019-12-20T18:00:58Z,neither have any effect on the lines height.
568157313,11708,glassez,2019-12-21T06:34:36Z,seems it's default height in current qt.
568180978,11708,glassez,2019-12-21T13:24:00Z,"so we have to either accept that ""our worldview is outdated"" and get used to the current qt default ""look and feel"", or continue to use the outdated way until qt removes it permanently. in 2nd case i would still use qstyleditemdelegate in the case where the custom theme is enabled to allow customize transfer list."
568187712,11708,thalieht,2019-12-21T15:06:50Z,"another unrelated issue, is that the following happens if any column in the first line contains symbols from the language that is 3 lines below italiano, whatever that is. probably qt issue since it only happens with that language (only tested symbol languages). `qstyleditemdelegate` or `qitemdelegate` are irrelevant on this one because it happens with both but it doesn't happen in `master` which is why i thought i should mention it. ![a link]"
568472366,11708,sledgehammer999,2019-12-23T13:16:20Z,"i'll try to review this later today or tomorrow. after that passes, you can merge if you don't hear from me."
568475569,11708,glassez,2019-12-23T13:28:35Z,the main thing i want your opinion about is using native progress bar on windows and macosx. if you have no time for review please comment on it. i can extract it into separate pr if you (and others) need more time for it. i don't want to slow down model improvements.
568663685,11708,glassez,2019-12-24T06:02:53Z,weird... what changes have affected it? maybe the fact that most of columns doesn't use custom rendering. seems qt bug. anyway i don't think we should handle it by custom rendering all the fields.
568803183,11708,sledgehammer999,2019-12-24T21:18:32Z,"about native progress bars: this should be left for another pr. current situation: on macos the native progressbar doesn't even draw. (maybe wants to test too?) on windows 7 the native progressbar looks like below. imo, a bit unpleasant. windows 7: ![a link] about the rest: i'll conduct a review in a few hours. (if tomorrow(+10 hours from now) i have not done so, feel to merge the rest of the pr)"
568809430,11708,Kolcha,2019-12-24T23:04:27Z,"even qt 5.14 still has [a link] with progress bar on macos: i found workaround for that, qt can be patched, this is not a problem if qt is build from sources. required patch can be found as attachment for the mentioned [a link], it was posted by me long time ago. i didn't test it now, just because forgot about it, and built ""vanilla"" qt 5.14 so, my opinion is using fusion style for progress bar is better solution"
568830800,11708,sledgehammer999,2019-12-25T03:34:15Z,"i would rather not distribute patched qt. plus, it doesn't seem to draw a textual representation of the progress, only visual."
568847457,11708,jagannatharjun,2019-12-25T06:20:13Z,windows 10: also no '/s' in down speed and up speed. ![a link]
568853392,11708,glassez,2019-12-25T07:05:23Z,ok! i can reproduce it so i'll leave it as is.
568888773,11708,sledgehammer999,2019-12-25T11:26:49Z,"hmm, that's weird. about the extra width difference and for historical reasons: 1. here is how `qitemdelegate::sizehint()` calculates it: [a link] 2. here is how `qitemdelegate::sizehint()` calculates it: [a link] they operate on different rectangles. in any case, for me, the extra width is not something bad. it seems to look and it **may** provide better readability. old style had minimal margins, the new one feels ""more right"". i could be wrong. this is mostly subjective. if we get user backlash, then we'll implement our own calculations."
568995046,11708,glassez,2019-12-26T07:07:23Z,pr updated. comments are addressed.
572533790,11708,ghost,2020-01-09T12:09:22Z,sorting in columns isn't working properly after this pr. ![a link]
573130353,11708,glassez,2020-01-10T17:30:41Z,can't test it now... will do it later. your screenshot shows the size column isn't sorted properly. are there any other columns that are affected by this issue?
573275194,11708,ghost,2020-01-11T03:16:49Z,"size, done, completed, time active, session download & upload, downloaded, uploaded"
577052435,11708,Chocobo1,2020-01-22T07:52:54Z,"i found another regression: in options -> behavior tab we have ""hide zero in infinity values"" with selectable options ""always"" and ""paused torrent only"". the ""always"" is not working and the ""paused torrent only"" seems to work well."
577121495,11708,glassez,2020-01-22T10:43:30Z,i'll try to handle it asap.
599937037,11708,ghost,2020-03-17T08:17:57Z,qbt gui hangs a lot of times with the new transfer list architecture. maybe someone can reproduce it and create an issue ticket.
599941565,11708,jagannatharjun,2020-03-17T08:28:16Z,"by principle this should be faster, are you sure you are using release build or something similar"
599943208,11708,ghost,2020-03-17T08:32:23Z,qbt compiled from current master. the gui hangs after sometime when there’s a lot of download upload going on. usually after 15-20 mins. sometimes it won’t even display anything just stuck at a white screen when opened from tray. you’d have to close it and restart to make it work again.
599947473,11708,glassez,2020-03-17T08:42:10Z,are you sure it is related to this pr? anyway it should be confirmed by someone else.
599955992,11708,ghost,2020-03-17T09:01:33Z,no i’m not sure. but this one is the only major gui change since 4.2.1 which doesn’t have this issue.
600137891,11708,FranciscoPombal,2020-03-17T15:35:24Z,"try applying this patch directly on top of 4.2.1 and see if you can reproduce. if the patch does not apply cleanly and it is too difficult to make it apply, or if the changes to do so make it too different, you can always try git bisect."
757466580,14054,thalieht,2021-01-10T12:15:04Z,"other than the inevitable ""bug: i watched for like a whole minute the 12/24h graph and it didn't update"" i see no problems."
757650795,14054,glassez,2021-01-11T06:26:18Z,"so maybe push some dummy sample once averager is created? it can have all zero values and duration equal to resolution, isn't it?"
757654159,14054,jagannatharjun,2021-01-11T06:35:36Z,"wouldn't that create contradictions between different graphs? also, this is existing behavior and i am not interested in changing this in this pr. also what happened to the 4.3.3 release?"
757683237,14054,glassez,2021-01-11T07:51:27Z,really? i don't use it so i don't know. so maybe store first push values in buffer unconditionally (independently of resolution)? what do you mean?
757879987,14054,thalieht,2021-01-11T11:07:56Z,sorry about that. i didn't check it and i assumed it's new.
757923793,14054,xavier2k6,2021-01-11T12:34:27Z,i presume it's the fact that you added this to the 4.3.4 milestone & not the 4.3.3 milestone
757926916,14054,glassez,2021-01-11T12:41:11Z,v4.3.3 is decided to be released asap. so i don't want it to wait for this pr. of course if this pr is fully approved earlier we can change its milestone to 4.3.3.
759242979,14054,jagannatharjun,2021-01-13T06:44:55Z,"i agree with some of last of your comments but more or less they are nitpicking with little to no effect on either the working of the code or the readability. i am out for a month, and it will take me some time to resolve those."
759253513,14054,Chocobo1,2021-01-13T07:10:00Z,"then why this project have a review process? you can't be selective on the review comments. and please remember people *will* have opinion on your written code, either on readability or functionality (the same goes for anyone who makes a pr). i sometimes do find my opinion a bit nitpicking, but why should i hide it when there is opportunity for a little discussion/opinion exchange, maybe others might feel the same too. then there should be no problem to make it into v4.3.4."
759272167,14054,jagannatharjun,2021-01-13T07:52:52Z,"i sometimes do find my opinion a bit nitpicking, but why should i hide it when there is opportunity for a little discussion/opinion exchange, maybe others might feel the same too. i agree with you but imo the review process of this project too much nitpicky. i welcome the comments about the architecture and effects of the code, and changes violating the coding guidelines but find this much nitpickiness on the reviewer's part unprofessional and time-wasteful. consider this small pr, it has already taken around 20 days."
759391641,14054,glassez,2021-01-13T11:36:02Z,"during this time, several logical flaws were identified here. even considering that i was the only reviewer, and that i have very little free time, and i still want to program myself, it could be completed faster if i saw the code in a familiar/consistent form (then i would immediately focus on its logic). as for other projects, they may have their own reasons for not caring about the ""cleanness"" of the code, and they may also have the resources to maintain ""unclean"" code."
759401650,14054,glassez,2021-01-13T11:56:38Z,"usually, this ""nitpickiness"" (which are not part of the coding style) is expressed in an undemanding form. they may not be satisfied. moreover, it may not be liked by someone else, so it should not be satisfied at all, and may only be a reason for discussion (to fix some option in the coding style rules in order to avoid further ambiguities)."
761087375,14054,jagannatharjun,2021-01-15T17:50:21Z,"i doubt they are mostly marked as required changes. also at times i rather think to just apply those changes than waste more time discussing such small ""nitpicks"" which are really unnecessary efforts to cast someone else's code into their own mold (no offense) (ps: maybe i choose an incorrect analogy (psps: english is not my first language))."
761109263,14054,glassez,2021-01-15T18:29:50Z,exactly. the coding style is used to make the project code look uniform. this really makes it easier to maintain it.
777952756,14054,glassez,2021-02-12T03:58:57Z,thank you!
783715975,14054,zywo,2021-02-22T22:18:44Z,"i just received this: ``` assert: ""m_sink.size() < m_sink.capacity()"" in file /home/zywo/qbittorrent/src/gui/properties/speedplotview.cpp, line 148 --type for more, q to quit, c to continue without paging-- thread 1 ""qbittorrent"" received signal sigabrt, aborted. __gi_raise (sig=sig=6) at ../sysdeps/unix/sysv/linux/raise.c:50 50 ../sysdeps/unix/sysv/linux/raise.c: no such file or directory. (gdb) bt #0 __gi_raise (sig=sig=6) at ../sysdeps/unix/sysv/linux/raise.c:50 #1 0x00007ffff59fd537 in __gi_abort () at abort.c:79 #2 0x00007ffff5f5bbf1 in () at /lib/x86_64-linux-gnu/libqt5core.so.5 #3 0x00007ffff5f5b040 in qt_assert_x(char const*, char const*, char const*, int) () at /lib/x86_64-linux-gnu/libqt5core.so.5 #4 0x0000555555863939 in speedplotview::averager::push(std::array const&) (this=0x5555562a7ae8, sampledata=...) at /home/zywo/qbittorrent/src/gui/properties/speedplotview.cpp:148 #5 0x000055555586481c in speedplotview::pushpoint(std::array const&) (this=0x5555562a7a10, point=...) at /home/zywo/qbittorrent/src/gui/properties/speedplotview.cpp:209 #6 0x000055555579a7ed in speedwidget::update() (this=0x555556393ad0) at /home/zywo/qbittorrent/src/gui/properties/speedwidget.cpp:146 #7 0x000055555579b7bc in qtprivate::functorcall , qtprivate::list<>, void, void (speedwidget::*)()>::call(void (speedwidget::*)(), speedwidget*, void**) (f=(void (speedwidget::*)(class speedwidget * const)) 0x55555579a6a0 , o=0x555556393ad0, arg=0x7fffffffd7a0) at /usr/include/x86_64-linux-gnu/qt5/qtcore/qobjectdefs_impl.h:152 #8 0x000055555579b6bb in qtprivate::functionpointer ::call , void>(void (speedwidget::*)(), speedwidget*, void**) (f=(void (speedwidget::*)(class speedwidget * const)) 0x55555579a6a0 , o=0x555556393ad0, arg=0x7fffffffd7a0) at /usr/include/x86_64-linux-gnu/qt5/qtcore/qobjectdefs_impl.h:185 #9 0x000055555579b56b in qtprivate::qslotobject , void>::impl(int, qtprivate::qslotobjectbase*, qobject*, void**, bool*) (which=1, this_=0x5555563af8d0, r=0x555556393ad0, a=0x7fffffffd7a0, ret=0x0) at /usr/include/x86_64-linux-gnu/qt5/qtcore/qobjectdefs_impl.h:418 #10 0x00007ffff61ae546 in () at /lib/x86_64-linux-gnu/libqt5core.so.5 #11 0x00005555555f3a6d in bittorrent::session::statsupdated() (this=0x55555617fa00) at /home/zywo/build/qbit/src/base/qbt_base_autogen/vkoxe6aele/moc_session.cpp:706 #12 0x000055555562aa34 in bittorrent::session::handlesessionstatsalert(libtorrent::v1_2::session_stats_alert const*) (this=0x55555617fa00, p=0x7fffd8065638) at /home/zywo/qbittorrent/src/base/bittorrent/session.cpp:4902 #13 0x000055555562746a in bittorrent::session::handlealert(libtorrent::alert const*) (this=0x55555617fa00, a=0x7fffd8065638) at /home/zywo/qbittorrent/src/base/bittorrent/session.cpp:4490 #14 0x0000555555627373 in bittorrent::session::readalerts() (this=0x55555617fa00) at /home/zywo/qbittorrent/src/base/bittorrent/session.cpp:4462 #15 0x000055555564ed80 in qtprivate::functorcall , qtprivate::list<>, void, void (bittorrent::session::*)()>::call(void (bittorrent::session::*)(), bittorrent::session*, void**) (f=(void (bittorrent::session::*)(class bittorrent::session * const)) 0x5555556272e6 , o=0x55555617fa00, arg=0x7fffd8020048) at /usr/include/x86_64-linux-gnu/qt5/qtcore/qobjectdefs_impl.h:152 #16 0x000055555564bb0a in qtprivate::functionpointer ::call , void>(void (bittorrent::session::*)(), bittorrent::session*, void**) (f=(void (bittorrent::session::*)(class bittorrent::session * const)) 0x5555556272e6 , o=0x55555617fa00, arg=0x7fffd8020048) at /usr/include/x86_64-linux-gnu/qt5/qtcore/qobjectdefs_impl.h:185 #17 0x0000555555645781 in qtprivate::qslotobject , void>::impl(int, qtprivate::qslotobjectbase*, qobject*, void**, bool*) (which=1, this_=0x7fff712b37b0, r=0x55555617fa00, a=0x7fffd8020048, ret=0x0) at /usr/include/x86_64-linux-gnu/qt5/qtcore/qobjectdefs_impl.h:418 #18 0x00007ffff61a3f91 in qobject::event(qevent*) () at /lib/x86_64-linux-gnu/libqt5core.so.5 #19 0x00007ffff7a8615f in qapplicationprivate::notify_helper(qobject*, qevent*) () at /lib/x86_64-linux-gnu/libqt5widgets.so.5 #20 0x00007ffff6177f6a in qcoreapplication::notifyinternal2(qobject*, qevent*) () at /lib/x86_64-linux-gnu/libqt5core.so.5 #21 0x00007ffff617a9a1 in qcoreapplicationprivate::sendpostedevents(qobject*, int, qthreaddata*) () at /lib/x86_64-linux-gnu/libqt5core.so.5 #22 0x00007ffff61cfe33 in () at /lib/x86_64-linux-gnu/libqt5core.so.5 #23 0x00007ffff4f90e6b in g_main_context_dispatch () at /lib/x86_64-linux-gnu/libglib-2.0.so.0 #24 0x00007ffff4f91118 in () at /lib/x86_64-linux-gnu/libglib-2.0.so.0 #25 0x00007ffff4f911cf in g_main_context_iteration () at /lib/x86_64-linux-gnu/libglib-2.0.so.0 #26 0x00007ffff61cf4bf in qeventdispatcherglib::processevents(qflags ) () at /lib/x86_64-linux-gnu/libqt5core.so.5 #27 0x00007ffff617692b in qeventloop::exec(qflags ) () at /lib/x86_64-linux-gnu/libqt5core.so.5 #28 0x00007ffff617eba0 in qcoreapplication::exec() () at /lib/x86_64-linux-gnu/libqt5core.so.5 #29 0x00005555555d676e in application::exec(qstringlist const&) (this=0x555555f1c8c0, params=...) at /home/zywo/qbittorrent/src/app/application.cpp:650 #30 0x00005555555eb033 in main(int, char**) (argc=1, argv=0x7fffffffe1f8) at /home/zywo/qbittorrent/src/app/main.cpp:312 (gdb)"
794334618,14054,glassez,2021-03-09T19:19:55Z,#14518 should probably fix it.
163731176,4253,ngosang,2015-12-10T19:49:13Z,definitely we need to change the icon theme.
166765578,4253,ngosang,2015-12-23T00:04:24Z,"we should think in the icons... the default icon theme in windows is really ugly, awfull in windows 10... some icons are too small for hdpi displays (mac os)..."
167845960,4253,Nemo-qB,2015-12-29T18:09:59Z,looks very nice. fits qbittorrent perfectly.
167932262,4253,Chocobo1,2015-12-30T03:50:45Z,"agree with this. --- thanks for this, we definitely need a new set of icons for platforms other than linux. looking forward to a fully replaced screenshot. the details can be dealt later. don't forget to submit the script used to generate the images (& colors), i guess it is a html/css file right?"
170993137,4253,bertyhell,2016-01-12T17:54:53Z,i'll see if i can finish it this weekend. i first wanted to see if you guys were interested.
173316962,4253,bertyhell,2016-01-20T18:32:01Z,"hey, we're about 40% done we'll keep working on it they are done by hand. but we'll also keep svgs so you have a high quality version if you ever need it."
174049037,4253,bertyhell,2016-01-22T21:07:55Z,ok guys were at 60% of the oxigen icons have a sneek peek here: ![a link]
174082444,4253,Nemo-qB,2016-01-22T23:07:33Z,"looks great indeed, well done."
174162013,4253,bertyhell,2016-01-23T08:48:06Z,"sure, shouldn't be a problem"
174944502,4253,ngosang,2016-01-26T10:23:02Z,"i said that before but with little success. we should pack icons in folders src/icons/theme1, src/icons/theme2... each folder is a theme and should include all icons used in qbittorrent. by now we can ship the oxygen theme subset but in the future we can include more themes for windows and macos. the user will be able to change the theme folder in options and graphic designers can propose new themes or new icons."
174945570,4253,bertyhell,2016-01-26T10:26:50Z,"good idea. whoever implements that can copy all the icons into the correct folders. if we do this in this pr it will break all icon references, right?"
174946335,4253,ngosang,2016-01-26T10:30:21Z,don't change your pr because of my comment. wait for sledgehammer999.
174947014,4253,bertyhell,2016-01-26T10:32:26Z,:+1:
174953674,4253,sledgehammer999,2016-01-26T10:48:56Z,"thanks for the effort. actually i was too looking to replace everything with flat icons from icon fonts. but never got around to it. can you post a screenshot on how your current progress looks in the app? unless you aren't able to compile qbt. i don't know if you have covered the ""completed"" icon. if not, i suggest having ""tick"" sign(in a frame) with the current color scheme. and i might have similar suggestions for other icons. it all depends on how far you have come. ps: let's first tackle what the icons will look like, and then worry about sources/scripts/license compliance etc. no. i don't want theming support (or something like that). plus it will bloat the binary."
174954428,4253,bertyhell,2016-01-26T10:52:51Z,i can try to build it on friday. how easy is that on windows? is there a step-by-step i can follow? the screenshot i posted is our current progress. we hope to finish all the icons in the oxigen folder on friday. the other icons will take some more time. as for the license we're using font awesome as a base for these with some self made icons were needed. so we should be good on that front. [a link]
174957591,4253,ngosang,2016-01-26T11:01:48Z,i can test & review this pr at night.
174957821,4253,bertyhell,2016-01-26T11:02:55Z,i'll have to generate and commit the pngs first. i can do that on friday.
174957985,4253,sledgehammer999,2016-01-26T11:03:53Z,ok. i can also probably do a test build in a few hours. i'll post screenshot.
174958163,4253,sledgehammer999,2016-01-26T11:05:01Z,oops. now i saw that. then i'll wait.
176324339,4253,birdie-github,2016-01-28T18:28:50Z,"i do not want this grayish windows-10-like shit in qbittorrent. if you're gonna add it, please make it optional."
176641062,4253,birdie-github,2016-01-29T08:35:33Z,"i almost never look at my torrent client, because it's basically a background application. i wonder why you need to constantly gaze at what's inside of it. ok, speaking of this 2d design. the first two icons contain too much antialiasing and they basically look dirty. if we're going this path i want them to be 100% monotone. ![a link] if possible please do not delete old icons from the source distribution and make an icon pack selectable via a ./configure option."
176683735,4253,birdie-github,2016-01-29T10:29:25Z,thank you for your comment. i just hope that there won't be a situation when new additional actions are introduced in qbittorrent and the old icons set becomes incomplete thus people won't be able to use it successfully.
176960887,4253,bertyhell,2016-01-29T20:43:15Z,"ok, i finshed them. can you try and build it and share a screenshot? i can't wait to see the result :d ![a link]"
176971644,4253,sledgehammer999,2016-01-29T21:13:31Z,pretty much what said but also if you use the configure script then that probably means you're on linux. and on linux qbt uses the theme's icons anyway. if you're on osx then apple pretty much has this kind of icons all over the place already. i'll begin building shortly.
177006712,4253,sledgehammer999,2016-01-29T22:48:57Z,i think the various icons look smaller than the previous ones. especially those used in the menus and in the filelist+transferlist. screenshots follow for your comments: mainwindow: ![a link] preferences: ![a link] file menu: ![a link] edit menu: ![a link] view menu: ![a link] tools menu: ![a link] help menu: ![a link] context menu: ![a link]
177033718,4253,ngosang,2016-01-30T00:47:15Z,"1) some icons width/height ratio changed. for example: src/icons/oxygen/application-exit.png from => w: 32px | h: 32px to => w: 400px | h: 300px i think we need to maintain the ratio. i don't know what is the best resolution for hdpi displays but maybe 256x256 is enough, we don't want very heavy icons. 2) could you take a look at the icons in the src/icons/skin?? these icons are even uglier than the oxygen theme. will be possible to use this theme in linux? i know you rejected #2989 but this will be more simple. just add a checkbox in linux to select qbittorrent theme (by default is disabled)."
177240115,4253,Nemo-qB,2016-01-30T16:47:17Z,"looks nice, clean and simple. i agree with the scaling. im always hiding the top bar but i won't with these :d. thanks bertyhell for the icons & sledge for showing it."
177464943,4253,sledgehammer999,2016-01-31T10:54:15Z,the small green crosses don't even register as green in my eye when the icons appears in the toolbar.
178240413,4253,bertyhell,2016-02-01T22:52:43Z,"sure, that will beon friday though"
178979713,4253,guilhermedsx,2016-02-03T03:21:31Z,"i really love these new icons! hope they will be implemented soon, qb needs some ui love :d"
180547245,4253,bertyhell,2016-02-05T20:39:52Z,"we're working on converting the remaining icons. progress so far for the ""skin"" folder ![a link]"
183712105,4253,sledgehammer999,2016-02-13T17:44:26Z,"as for the ""skins"" folder. i would like for the icons that appear in the sidepanel for the status of torrents(which also appear in the transferlist) to lose their rectangle. their should have only the symbol which should be colored accordingly(not white). what do you guys think?"
186588674,4253,bertyhell,2016-02-20T12:54:23Z,"i added the last of the icons under the skins folder still todo: - change format of icons - reduce padding, so icons appear larger - switch square icons to rounded negative"
188749251,4253,bertyhell,2016-02-25T11:46:51Z,maybe it's useful to reference this issue here as well: [a link] it contains some proposals for replacing the program icon. definitely check out the poll at the bottom to let your voice be hear.
192526308,4253,sledgehammer999,2016-03-04T23:45:13Z,the pr needs rebasing. and i hope you have time to finish your remaining items. i'll gladly provide new screens then.
200303622,4253,ngosang,2016-03-23T11:25:39Z,ping.
202386987,4253,bertyhell,2016-03-28T13:12:49Z,"ok, i synced the pr. could we have a look at the square ones, before i change all of them?i think it might look nice."
204771233,4253,ghost,2016-04-02T18:41:41Z,"this should totally be merged. while i do agree that people don't use the ui itself too much, a little eyecandy does no harm. one thing: the icons look too small in the dropdown menus imo"
205037938,4253,sledgehammer999,2016-04-03T19:17:00Z,"you are the recent wizard about ui sizes in qt. take a look at this pr. the icons used for the torrent statuses here are way bigger than the displayed size. in the delegate we have reimplemented the size hint. it checks which is bigger, the icon height or the string height and returns the bigger one. however, in this case it returns the icon height which is very big. it results in very big rows **but** the drawn icon is still small. i suppose there is a hardcoded max size for the `qt::decorationrole` and i wonder if you know a way of retrieving it? (in order to correct the sizehint implementation) (below screens show correct because i hacked it) here are 2 screenshots with current icons. i'll comment on some things and please others say your opinion too. first image: ![a link] 1. the status icons have colors in a shade that isn't very distinguishable between them at those sizes. i am talking about the transferlist 2. the paused icon imo doesn't look good at that size. same for queued icon 3. the icons used for ""all"", ""active"", ""inactive"" are basically the same. only the color scheme changes. i admit that the current ""active"" and ""inactive"" isn't good either. i am hoping you can think something else. 4. the folder and file icon (sidepanel + content view) look tiny 5. the icons in the tabs also look tiny except the rss one. 2nd image: ![a link] the menu icons look tiny here too imo. only the x looks ok. same goes for most of the other menus too. kinda offtopic: when you want to rebase do ""git rebase master"" not ""git merge master"". anyway, i'll give you instructions on how to delete the merge commit later, when this is ready for merging into master."
205054056,4253,ngosang,2016-04-03T21:04:53Z,i agree with sledgehammer. what about icons for error and warning trackers in sidebar?
205054156,4253,sledgehammer999,2016-04-03T21:06:20Z,these use the system's icons. no need to change that.
205054880,4253,ngosang,2016-04-03T21:10:29Z,they break the design of the application... request 2 more icons and we can think later.
205055415,4253,bertyhell,2016-04-03T21:11:59Z,"yeah, we'll have to look at the sizes currently the svg to png grunt task just generates large pngs of 400px size. i'll have a look if i can make them use less padding and generate a smaller size. they do look a bit out of place now, with all the other ones being stylized have you had a look at the main icon thread? [a link]"
205060288,4253,thalieht,2016-04-03T21:39:48Z,"i agree with everything sledge said, especially the file icon almost looks like a blur. the seeding icon, white on orange has little contrast and its hard to distinguish the arrow from the background (always hated that). the tools -> options icon looks small there. is that a new icon in connection status? too small surface area to be able to easily tell color changes. unless it doesn't use color to denote status. all in all they look better than the current ones. nicely done."
205203263,4253,Chocobo1,2016-04-04T09:04:34Z,"i'll take a look. update: see pr #5070. ## could it be the pngs size is 400x300, `width /= height`? i wonder what happens if you make `width == height`. agree."
205211934,4253,bertyhell,2016-04-04T09:30:01Z,"no, it seems the svgs just don't have any size set. [a link] i'll resave the svgs and then it should be fixed"
205225857,4253,zywo,2016-04-04T10:04:12Z,this is how it looks like on ubuntu 15.10 under unity de and qt 4.8.6 ![a link]
205228779,4253,Chocobo1,2016-04-04T10:12:17Z,fixed in pr #5070.
205260268,4253,zywo,2016-04-04T11:42:48Z,confirmed my issue is fixed.
207564135,4253,bertyhell,2016-04-08T19:12:27Z,we ( and i ) extended the grunttask to allow for a width to be set for all the svgs. so now they are all 32px x 32px. i hope this fixes the issue of the icons that looked to small. next time we'll look at the color difference between blue and red.
207700410,4253,Chocobo1,2016-04-09T04:25:19Z,i think it will be better if the pngs are resized to 64px (or even 128px because of 4k panels). looks better here.
208015488,4253,sledgehammer999,2016-04-10T16:59:49Z,"the icon size problem has improve greatly with the last commit. 2 screenshots follow. my comments: 1. the paused icon looks better now, but shouldn't the red space between the two white bars be wider/bigger? 2. the icon used for trackers/peers. it doesn't bother me but i suppose you would want more detail in that size. it looks blurry imo. 3. toolbar. the color of the cross (green) and the color of the minus (red) doesn't come out much. and i think the edges of the cross show aliasing(?)/blurry. ![a link] ![a link]"
208509730,4253,dogancelik,2016-04-11T19:18:27Z,i'm not sure why icons are stored in the binary when you could store the icons in program folder under `.../qbittorrent/icons` like translations: - the qb community can make or share their own icon packs in the forums - **end-users can use custom icons without learning how to compile**
208617021,4253,sledgehammer999,2016-04-11T23:31:35Z,let's not talk about this. also only the qt translations are there. qbt translations are embedded into the binary.
213880960,4253,ghost,2016-04-24T04:07:57Z,"we're not getting these new icons in the stable release until every icon has been replaced, right? it would be ideal if qbittorrent got a complete icon overhaul rather than just replacing most of them."
218088053,4253,Soukyuu,2016-05-10T08:11:50Z,"i might be missing something, but why are you rasterizing the svgs? qt can display them directly, and that way the size will always be perfect, because the rasterizing happens in the ui to fit the required size."
218354888,4253,Chocobo1,2016-05-11T03:49:50Z,"simply put, our code is not ready to handle svgs directly."
220707945,4253,guilhermedsx,2016-05-20T20:16:20Z,"svg or png rendering, i just hope this gets merged soon. with picotorrent around the corner it's getting really hard to look at the current state of the ui on windows 10."
233520508,4253,guilhermedsx,2016-07-19T03:26:02Z,so... is this dead?
233677917,4253,bertyhell,2016-07-19T15:52:43Z,what issues? you mean: generate 64px sizes?
234135914,4253,guilhermedsx,2016-07-21T01:56:19Z,"would be a nice addition to the ux, i guess. the sooner the better."
236561019,4253,sledgehammer999,2016-08-01T11:56:49Z,"from quick re-reading the last ""issues"" are described here: [a link]"
237419325,4253,guilhermedsx,2016-08-04T00:50:44Z,"someone should build a latest trunk with this pulled, call it a preview and check the reception. i guess pretty much everybody will like it. and yeah, 256x256 in png is better. size difference will be negligible and scales to high dpi."
237459423,4253,bertyhell,2016-08-04T05:54:39Z,"updated all icons to be 256px in size. total size increase seems to be 0.4mb which is acceptable i presume increased distance between pause bars looks blurry => not sure how i can fix that except for creating a pixel perfect icon that is exactly the same size as how it shows up in the application. or maybe it will look better if the app uses the svg files directly? i could make the red and blue more saturated, but that will require me to touch a lot of the icons. maybe we can come up with the exact color values first so i don't have to redo them multiple times."
249362869,4253,koloved,2016-09-24T12:41:29Z,do you need some help for drawing icons?
249369811,4253,bertyhell,2016-09-24T15:15:21Z,i think all icons are included already. i'm not sure why this still isn't merged. i switched the icon size to 256px one month ago. shouldn't we merge this already?
252140535,4253,ghost,2016-10-07T02:42:07Z,is this going to make it to 3.4?
252790849,4253,ghost,2016-10-11T01:52:36Z,"it's a shame this hasn't been merged yet. even if one or two of the icons are slightly problematic, who really cares? it looks far better than the current design."
255244882,4253,guilhermedsx,2016-10-20T22:22:56Z,"if you don't want to have it as default, keep the awful theme from now and add this new one as a selectable option buried in the settings. just merge it already, it's been almost a year!"
255506769,4253,ghost,2016-10-22T04:27:53Z,"yes, please merge this as soon as possible. we have been waiting far too long for qbittorrent to actually look good on all platforms."
255589643,4253,Nemo-qB,2016-10-23T13:48:03Z,hell yeah! its about time it gets changed. qbittorrent will look great with these. thanks bertyhell for your work also. +1.
260086155,4253,guilhermedsx,2016-11-12T00:22:23Z,thank you so much for approving this!
260100840,4253,ghost,2016-11-12T04:22:03Z,![a link] looks good in macos. but what are these small black triangles? kinda confusing to me. anyway kudos to .
260111733,4253,thalieht,2016-11-12T09:28:40Z,maybe it's some kind of indication to keep pushing the button for pause/resume all.
260115840,4253,thalieht,2016-11-12T11:09:46Z,because the background of the icons is transparent some of them won't be too visible on some themes. ~~could the height of the torrents entries in the list be some external factor? current master doesn't have this problem.~~ edit: updated picture without the problem (i had to do a rebase)
265907860,4253,peburgos,2016-12-09T01:30:29Z,"anyone know how to use those icons on windows, even through they weren't merged yet? they look awesome and qbittorrent would be perfect with them, but i have no idea how to build the fork."
267498888,4253,okeatime,2016-12-16T02:04:59Z,assuming you have a local clone of qbittorrent and `cd qbittorrent`. how to merge is for example: [code block] and build [a link] .
267504618,4253,peburgos,2016-12-16T02:49:46Z,"thanks, haven't seen that page in the wiki, gonna try it now."
269417046,4253,elesto,2016-12-28T02:52:11Z,"one year in development of new icons, we are so close!"
269417539,4253,guilhermedsx,2016-12-28T02:57:40Z,"actually it's been ""ready"" (at the current state) since... i don't know. april. i've given up on ever seeing it on an official build, people seem to like 1995 linux visuals. it seems to be the case with most open software, sadly - quiterss, libreoffice and deluge also look far from ""in place"" on windows."
269576899,4253,peburgos,2016-12-29T03:29:04Z,"yeah, such a shame to see it's so common. many linux programs have excellent features, but they lack a lot in the design part. wish more developers notice how important it's to improve what users experience when they use their program. sorry to bother, but there is a reason why it's not merged? i mean, correct me if i'm wrong, looks like all the reported problems have been solved and there are many users are looking forward to any update about this."
270987264,4253,bertyhell,2017-01-06T19:40:57Z,"i rebased it again. for the love of god, please merge this already. ![a link]"
271107108,4253,elesto,2017-01-07T20:12:59Z,"please merge this!! worked so hard for us, and the icons are such a refreshing improvement! i'm on my hands and knees for you"
271189233,4253,sledgehammer999,2017-01-08T23:43:17Z,"(and others). sorry for the very long delay. my time is spread thin and i don't even know where to direct my attention from the deluge of github-email-notifications i get. and which prs to prioritize. anyway, this stays in my open tabs so i can review and hopefully merge tomorrow. thx for the tremendous job and patience."
271190621,4253,sledgehammer999,2017-01-09T00:02:51Z,/qbittorrent-frequent-contributors doesn't anyone have instructions for on how to remove the 2 `merge branch 'master' into` commits from the history? ps: here is how stuff looks on windows 7. ![a link]
271567857,4253,okeatime,2017-01-10T12:53:01Z,that causes me a headache. i want to know easy way to do that. how about squash all diffs into one commit? assuming: [code block] something like: [code block]
271618576,4253,sledgehammer999,2017-01-10T16:12:20Z,"i think you have included files in this pr that you didn't actually want. for example there are .js and .json files. also you have set (wrongly) some paths to be ignored in `.gitignore` but then you included the various .svgs + scripts in those paths. since this is a bit tricky to get working as it is for non-experienced git user, i suggest you create another local branch copying our **master** branch. then copy the .pngs as you see fit from your old branch and make a new commit+pr. if you would like to share with us the *svgs(which i would appreciate very much) make another commit in that branch with the svgs and git push. **i don't have a problem with current icons as you propose them.** so a new pr will probably get merged asap (assuming it is clean of artifacts). what do you say? ps: come to this pr and click the `files changed` tab at the top to see list of affected files by this pr."
271672286,4253,bertyhell,2017-01-10T19:25:56Z,"actually that is intended. see this readme file: [a link] it's essentially a grunt task that converts all svg images to pngs. so if someone created more svg's they can be converted uniformly using one grunt command. eg: changing the size of the png's is really easy this way: [a link] i also commited the png files, so you're not required to run this grunt task to get started."
271698726,4253,sledgehammer999,2017-01-10T21:09:33Z,"so i can merge it as-is. even though i generally don't like commits that can be squashed into previous ones, this pr has taken too long. also you don't know enough git to rework this. so i'll merge as-is. also can you explain to me why you put those lines in `.gitignore`? are they still relevant now that you included files from those dirs?"
271701090,4253,zeule,2017-01-10T21:19:13Z,"my two cents: 1. is there any need to produce png files? qt can load svg icons starting from version 4.2. 2. ""oxygen"" is the name of old kde icon theme, please rename the folder."
271703006,4253,sledgehammer999,2017-01-10T21:27:00Z,"this is phase 1. drop-in replacement of current icons. i don't think the author has the expertise to make other changes in the code, in order to make this a drop-in replacement. but this is a good comment. i'll do it right after i merge it. do you use to give a name to your theme or should i choose a generic/random one?"
271703902,4253,zeule,2017-01-10T21:30:27Z,"if we are going to drop png files, there is no need to merge that javascript png generator and its configuration."
271704599,4253,sledgehammer999,2017-01-10T21:33:21Z,"true, but since it isn't certain when this will happen exactly it doesn't hurt having it there for now."
271731379,4253,bertyhell,2017-01-10T23:28:43Z,"having the original svg's in the repo + a way to easaly generate the png's is quite useful in my opinion. that way other people can tweak the icons without having the manually recreate them every time. yes, those are still required. to run that grunt task you need node.js. the node package manager will install a bunch of files in node_modules to get all the required files for doing the svg to png conversion. you don't want to see those node_module files in your git status. having the png ignored as well is required, since someone generating the png files doesn't want to check them in there (src/icons/skin/build-icons/icons/), but rather move them to the ""drop in replace"" location (src/icons/oxygen/)."
271732393,4253,zeule,2017-01-10T23:34:03Z,"could you explain this, please? why would one need a png file to edit its source, the svg one?"
271732666,4253,bertyhell,2017-01-10T23:35:32Z,"oh, sorry, i had misread your comment. yeah, you're right, we can drop all those once we switch to svg assets. :thumbs_up:"
271733043,4253,zeule,2017-01-10T23:37:21Z,"thanks, ."
271733721,4253,sledgehammer999,2017-01-10T23:40:56Z,"the pngs currently need to be inside `src/icons/oxygen/` and oxygen is an icon theme name. immediately after i merge this pr, i plan to move the pngs to `src/icons/ /` and make the necessary code changes. do you want me to use a specific name for the ""theme"" or should i just put something generic like ""qbt-theme""?"
271735387,4253,bertyhell,2017-01-10T23:50:31Z,you can choose what ever. flat or font awesome are good descriptions since a lot of icons are based on those. but it is completely up to you.
271738162,4253,sledgehammer999,2017-01-11T00:07:15Z,ok. i'll do the merge tomorrow when i have a non-sleepy head.
271776718,4253,Chocobo1,2017-01-11T04:43:54Z,"yeah, tried that, it's awfully slow if you need to resize/load them on-the-fly, so there might need some mechanisms caching them."
271908433,4253,sledgehammer999,2017-01-11T16:01:25Z,thx for the great effort. be around if users start complaining :p
271910732,4253,zeule,2017-01-11T16:09:14Z,", could you give any numbers, please? plasma uses svg icons for many years and i can't see any signs of a slowness."
271913194,4253,Chocobo1,2017-01-11T16:17:22Z,"no benchmark for that, i just tried to load svgs in place of pngs; when opening a dialog/window, it took about 1~2 secs to pop up (normally would be instant)."
271921219,4253,bertyhell,2017-01-11T16:43:27Z,"he did it, he really did it ![a link]"
272286574,4253,eli-schwartz,2017-01-12T21:19:00Z,github.com now has a feature for this: [a link]
318642398,4253,ghost,2017-07-28T12:45:41Z,"am i getting something wrong here? what do i have to do to get these icons? they look amazing but i still have the ugly ones. i'm using qbittorrent v3.3.14 64-bit for windows, which i got from [a link] are they coming with 3.4?"
318665084,4253,zeule,2017-07-28T14:21:55Z,"these icons will be released with version 3.4.0,"
318668675,4253,ghost,2017-07-28T14:35:52Z,i see. waiting for that then! ![a link] :grinning_face_with_smiling_eyes:
318739303,4253,ghost,2017-07-28T19:14:14Z,"nice, i'll wait for the beta, just to help with bug reports, and if it takes too long i'll go with these. thanks! :d edit: beta stalled as expected, i'll try these builds :)"
320824934,4253,regs01,2017-08-08T01:33:11Z,those icons doesn't look good on windows 10. quite dark and colorless. would be nicer to be lightened. squarish icons also overloading table of tasks.
320889894,4253,ghost,2017-08-08T08:35:52Z,i love them.
320897190,4253,ghost,2017-08-08T09:06:20Z,"i agree. the icons could be a little bit brighter. they seem somewhat dull. it's definitely an improvement over the old icons but they just need to ""pop"" a bit more. especially the red delete button. the ""red"" color is so dull that you almost can't tell it's red. everything needs to be a few shades brighter, especially the red, yellow and orange icons. it doesn't have to be material design bright. just bright enough to not be dull."
320916017,4253,thalieht,2017-08-08T10:26:04Z,blue icons on high contrast theme win 10 :speak-no-evil_monkey: but i've seen a few pr's that i don't closely follow that touch icons.. i'm hopeful.
74369970,2550,DoumanAsh,2015-02-14T10:32:01Z,"btw, seems like there is some problem with build in travis it fails on:"
74372418,2550,ngosang,2015-02-14T11:59:54Z,tested in linux. works well and the speedup is noticeable if there are many engines. :+1:
74374265,2550,DoumanAsh,2015-02-14T13:05:46Z,added a bit of re-factoring in separate commit. the same i want to do in py2 version
74410609,2550,DoumanAsh,2015-02-15T09:38:21Z,"please test a bit more this code on linux, with different number of engines and etc seems like it fails to load extratorrent, legittorrents, torrentreactor on windows suspect that's due to sgmllib3 usage in these engines. there seems to be some problems with classes outside of python std library"
74414150,2550,ngosang,2015-02-15T11:40:44Z,"all engines = torrentreactor,mininova,piratebay,extratorrent,legittorrents,kickasstorrents. note: i have 1 dualcore working at 4.1 ghz (overclocked) so certainly i not a representative sample. note2: i know the python2 code is not changed but for comparison. note3: all engines are working for me. python3 multiprocess (new code) [code block] python3 (old code) [code block] python2 (new code) [code block] python2 (old code) [code block]"
74415042,2550,DoumanAsh,2015-02-15T12:12:53Z,"thanks for verifications. it seems there is windows specific problems for torrentreactor,mininova, extratorrent,legittorrents guess i'm better to re-write them first, before submitting this change"
74423333,2550,DoumanAsh,2015-02-15T16:07:36Z,updated extratorrent engine i will remove all remnants of deprecated sgmllib3 as i have no idea why multiprocessing breaks due to that on win upd: seems like the actual problem is with urlib which is used to get content of web pages...
74431837,2550,DoumanAsh,2015-02-15T19:16:41Z,found actual reason of fails:
74432038,2550,ngosang,2015-02-15T19:20:58Z,offtopic. what do you think about removing vertor and btdigg? with vertor i see it clear.
74432295,2550,DoumanAsh,2015-02-15T19:26:35Z,"vertor is already removed? btdigg moved to i2p, but dunno whatever they'll be back or not."
74432673,2550,ngosang,2015-02-15T19:34:36Z,"yep, it's already removed. i didn't see that. we can wait for btdigg."
74572173,2550,Pireo,2015-02-16T21:04:15Z,btdigg is back!
75609834,2550,sledgehammer999,2015-02-23T19:10:15Z,heads up: rebase this.
75704950,2550,DoumanAsh,2015-02-24T06:08:34Z,done someone likes to play with moving repository's files around? :d
75711819,2550,DoumanAsh,2015-02-24T07:37:15Z,"additional commit it will set retrive_url() timeout to 2 seconds instead of system-default. and instead of raising exception, it will return empty string. let me know if anyone disagree with 2 second timeout"
75717074,2550,DoumanAsh,2015-02-24T08:30:37Z,"replaced previous implementation with pool. it should simplify my code btw, what's your opinion?"
75840924,2550,sledgehammer999,2015-02-24T20:39:55Z,atm i don't have time for review. but anything that makes it go faster is welcome. i am marking for v3.2.0 so i don't forget it.
76136716,2550,DoumanAsh,2015-02-26T08:00:56Z,a bit of re-factoring to search execution. now both threaded and not threaded are similar. and both uses the same function. now i think this is perfect :) let me know if the same should be made to py2 code :)
76158162,2550,pmzqla,2015-02-26T10:51:27Z,"if you are using something older than python 2.6, i doubt you are running any recent version of qbittorrent. so if you feel like doing the same with the py2 code, imo there shouldn't be problems."
76162676,2550,DoumanAsh,2015-02-26T11:26:50Z,ported it to py2 and also corrected versions of files. i would appreciate if someone could test it in qbt for me as it is a bit of bother to switch to py2. manually(from console) it works fine
76163551,2550,pmzqla,2015-02-26T11:34:14Z,tested and working fine.
76217151,2550,sledgehammer999,2015-02-26T16:58:13Z,rebase plz.
76219839,2550,DoumanAsh,2015-02-26T17:09:50Z,np. done
76220917,2550,sledgehammer999,2015-02-26T17:14:56Z,"it seems that the new code has mixed results if i read the `time` stats correctly. however, it doesn't seem to be slower by a big margin. in fact in python3 it is 7secs faster with all engines enabled, while on python2 it is 1sec slower."
76224106,2550,DoumanAsh,2015-02-26T17:31:34Z,"hm... that's interesting... seems like py2 implementation may be a bit worse than py3. in my case multiprocessing is slightly better(1 sec) than original threading in my case py3 results ain't significantly better(2-3 seconds improvement) right now. well, that's a bit confusing... maybe it would be better to get some stats on both versions...(average from 100 executions) p.s. possible problem: on windows thread spawn is cheaper than process spawn..."
76230324,2550,pmzqla,2015-02-26T18:01:50Z,"i haven't noticed major differences, sometimes the search is faster, sometimes slower. at least now i can stop the search with ctrl+c (i had to use ctrl+z before). consider that without this kickass and other https engines are broken."
76236569,2550,DoumanAsh,2015-02-26T18:31:44Z,"btw, we can easily switch to threads by using multiprocessing.dummy which is wrapper around threading in python anyway i tried to measue time-stamps, but it differs from time to time... and i'm not sure how reliable it can be."
76242229,2550,DoumanAsh,2015-02-26T18:51:26Z,"can you please re-measure results too? for threading, just use"
76243109,2550,sledgehammer999,2015-02-26T18:55:31Z,"for clarification, i was refering to the stats posted here: [a link]"
76243621,2550,ngosang,2015-02-26T18:58:19Z,"wait, do not merge yet. i found something strange."
76246982,2550,ngosang,2015-02-26T19:16:24Z,linux python 3.4.2 works fine. linux python 2.7.9 i get 50 results less and check the screenshot: ![a link] i can repeat speed tests when this is fixed.
76248830,2550,DoumanAsh,2015-02-26T19:25:52Z,it seems like stdout overflow...? is it 100%?
76249450,2550,ngosang,2015-02-26T19:28:01Z,"in python if 2 threads write in the std output at the same time this kind of things happen. thread 1: print ""aaaaaa"" thread 2: print ""bbbbbb"" console: aaabbbaabbbbaab i have not looked at your code, but maybe this is happening."
76250458,2550,DoumanAsh,2015-02-26T19:31:51Z,"i doubt that both threads can write to stdout at the same time due to gil lock. note, i'm using multi-processing. in case of separated processes it can be quite possible, but print() should buffer as far as i know. so there should not be problem... though it may be possible that there is race condition when stdout's buffer is not enoough and that's lead to problem... in that case may be it is safer to leave threading tested a bit py3 version(with a bit of outdated code) it happens for me in 1 of 8 attempts upd: it does not want to happen again anymore with my latest code"
76257351,2550,ngosang,2015-02-26T19:59:33Z,"i always get at least one bad result. you have made many changes in this pr, it might be better to separate in another pr the commits that are not related to multithreading, so we can verify that the changes work separately."
76258057,2550,DoumanAsh,2015-02-26T20:02:58Z,for now can you please re-try with ? instead of just multiprocessing. it should use threading instead of actual multi-processing just change import for pool
76260610,2550,ngosang,2015-02-26T20:12:53Z,"python 2, i get wrong results in both :sob: from multiprocessing.dummy import pool [code block] from multiprocessing import pool [code block]"
76261810,2550,ngosang,2015-02-26T20:19:50Z,the results of print i put above are real. look at the engines column: ![a link] extratorrent.c**_1080**_
76262937,2550,DoumanAsh,2015-02-26T20:26:39Z,"switched to py2 1)multiprocessing100% reproduction 2)multiprocessing.dummy 0% (0 of 10 attempts) i dunno why do you have a problem with multiprocessing.dummy, but only actual multi-processing has this problem problem"
76264428,2550,DoumanAsh,2015-02-26T20:31:37Z,"python itself is not thread safe, that's why you cannot make multiple threads to execute code at once... will look into your link a bit later but i think that the old code would have the same problem. note that i still haven't encountered this problem with multiprocessing.dummy :)"
76280806,2550,ngosang,2015-02-26T21:45:23Z,"i know well how python works. i leave a little test for you to believe me. [code block] python 3 (note, i'm showing only lines with more than 60 characters) ![a link] python 2 ![a link] the problem exists in both versions but it's worst in python 2."
76283078,2550,DoumanAsh,2015-02-26T21:57:52Z,"well then since print() is bugged i guess i need to have some sorta lock. it may be possible for threaded version, but i'm not sure if it is possible for multi-processing version"
76283313,2550,sledgehammer999,2015-02-26T21:59:02Z,let's better move this to v3.3.0 for now.
76352576,2550,DoumanAsh,2015-02-27T07:57:54Z,please try py2 thread safe version(not multi-process safe) i remade multi-process version. just adding flush() to prettyprinter() i think it should help to avoid problem in 99% cases
76408849,2550,ngosang,2015-02-27T15:10:25Z,is not working. :cry:
76440281,2550,DoumanAsh,2015-02-27T17:54:29Z,hm... that's kinda lame though it worked fine for me i wll make py2 version thread safe and for py3 will leave it as it is. can you please test work of py3 verion for now?
76517293,2550,DoumanAsh,2015-02-28T08:38:33Z,updated py2 version. please check it now i have the second idea about safe multi-processing version. but let's wait with that for now
76518258,2550,DoumanAsh,2015-02-28T09:11:10Z,"second variant for python2 multi-processor. sorry for so many, but can you please test it too? :)"
77705990,2550,DoumanAsh,2015-03-07T19:38:41Z,would be also good for someone else to test py2 version
77707121,2550,pmzqla,2015-03-07T20:00:32Z,"it seems to work fine, i can't replicate ngosang's problem with this pull request and everything is working as usual."
77771666,2550,ngosang,2015-03-08T20:17:03Z,"![a link] pls try with python2 and seach term ""american"" in all engines."
77772381,2550,pmzqla,2015-03-08T20:31:02Z,still working. have you removed the plugins so that they are reloaded? [code block]
77772643,2550,DoumanAsh,2015-03-08T20:36:03Z,"what number of physical cpu cores you do have? well i hoped that re-opening stdout with 'utf-8' would help to block other processes, but it is highly possible that's not true since each process may have own stdout which is re-directed to the main one"
77773155,2550,pmzqla,2015-03-08T20:46:46Z,"here i have 2 cores, but the os sees 4 cores."
77773256,2550,DoumanAsh,2015-03-08T20:48:30Z,"current implementation creates process per physical core. most possibly you have typical dual core with double threaded processes(i.e. logical 4 cores). so in your case there are actually only two search processes are running... though actually i'm not sure. it may differ for each os, can you check 'ps' during search? how many python instances there will be though i guess it would be easier just check it in python:"
77774870,2550,pmzqla,2015-03-08T21:17:14Z,"that's for python3 (and says 4). for python2 i used `multiprocessing.cpu_count()` and i indeed see 4 threads running. i could also try on another machine with 8 cores (4 actual cores), but i'm not sure it's set up to test this, so i'll wait for ngosang's reply."
77775013,2550,DoumanAsh,2015-03-08T21:19:40Z,noticed his first comments: seems like he should not have many cores so it is kinda strange... will try on my notebook too now cam you please also re-try with multiprocessing.dummy? i'm out of ideas so i will stick back to threaded solution for py2. i dunno how to make a global lock with current search architecture. at least code looks much better :)
77804425,2550,ngosang,2015-03-09T06:01:10Z,"sorry, i didn't remove the nova folder. i did it now and it's working well. both versions work multiprocessing and multiprocessing.dummy."
77812633,2550,DoumanAsh,2015-03-09T07:56:57Z,"well now it is good news :) it seems that everything work fine, i know we delayed it, but do you want me to merge all commits into one or?"
77922810,2550,sledgehammer999,2015-03-09T19:19:13Z,i am delaying this for v3.2.1. i want to tidy up v3.2.0. it has taken to long. note to self(and probably to the op): i saw you mentioning that this spawns processes depending on the number of cores. shouldn't we limit it to 2 or 3 processes per time? -although i doubt that in the immediate future we'll get 100-core systems-
77926392,2550,DoumanAsh,2015-03-09T19:40:06Z,"well, yes... i do have this concern, but i'm unsure whatever should we limit or not. even if python spawns processes by number of cores. it is actually os who dispatch cpu to these processes, not python. so i don't think it would cause significant load on all cores at once. the problem is that we cannot predict amount of jobs(since user can have not builtin engines) but how to decide limit... i'm unsure... first i think we should take into account amount of search engines i.e. if the number of jobs 2 then there is no need to spawn 4 processes :) but this is not so easy with possible maximum. generally most of users would have 4 or 8 cores..."
78035883,2550,frenchiveruti,2015-03-10T11:24:13Z,"ok, hello to everyone, i just came here to ask one thing, is there any solution for the problem of the search engin? mine's only displaying thepiratebay searchs, all the other engines won't work, i've had to manually install python because of reasons, and it seems that won't work, but i have another pc that displays all the search findings, but on this one, qbt was able to auto install python. should i downgrade python 2.7.9 to p2.7.8? thanks, and impressive work yours, besides that i don't understand a single word of what are you talking about :+1: pd: i've came from #2425"
80041443,2550,DoumanAsh,2015-03-14T07:07:23Z,well first i would always advise to use py3 intsead of py2 second... did you try 's advice #2698 ?
88763579,2550,DoumanAsh,2015-04-02T06:29:11Z,before any sorta of merging please let me know when can i squash commits as there are just too many of them and not all of them have any significant meaning
89865226,2550,sledgehammer999,2015-04-05T22:25:47Z,"i don't think i need to see the intermediate commits or commits that fix previous commits. since, i don't know much python, i'll skim through it and test it. so you can start merging useless commits. (that doesn't mean you should merge them into one.)"
90752142,2550,ngosang,2015-04-07T22:47:43Z,"can you update the torrentreactor plugin with this changes? 1) rename it from ""torrentreactor.net"" to ""torrentreactor"" 2) update the icon (i have changed the favicon.ico to png): [a link]"
90801329,2550,DoumanAsh,2015-04-08T04:50:36Z,"well i guess it is easy, so np"
91349098,2550,Pireo,2015-04-09T20:35:18Z,"i've got this icon, clearer: [a link] it's downloaded in native 16x16"
91773272,2550,DoumanAsh,2015-04-11T06:45:52Z,hm... really? it is jpg so i wonder...
91776515,2550,DoumanAsh,2015-04-11T06:53:33Z,made small enchantments for used regex also
110120603,2550,DoumanAsh,2015-06-08T19:57:02Z,can you please check that i rebased correctly?(in regard of recent changes to some engines)
110167428,2550,sledgehammer999,2015-06-08T23:03:56Z,"a maybe silly question that may have been already answered here. what happens if a user running eg 3.2.0 (a version without multiprocessing), automatically downloads these new plugins? will they work for him too or will it cause problems?"
110167658,2550,ngosang,2015-06-08T23:05:49Z,"the changes in the plugins are minor fixes, not related with the multiprocessing/multithread. will work in old and new versions."
110170401,2550,sledgehammer999,2015-06-08T23:23:13Z,this has been in the testing stage long enough imo. and it seems there aren't any major problems. and is it ok to merge?
110170794,2550,ngosang,2015-06-08T23:26:05Z,i'm going to do the last tests in 10 minutes. wait for my report.
110171090,2550,sledgehammer999,2015-06-08T23:28:49Z,no need to hurry. take your time. i am going to sleep in a few minutes.
110192350,2550,ngosang,2015-06-09T01:37:09Z,"i tested this pr again. **there is no problems in multiprocessing, it's working well. but, there are problems with several search engines.** in the master branch all search engines are working well with python 2 and python 3. with this pr: **python 3:** - torrentreactor is not working. - mininova: the name in the results column is incomplete. - extratorrent: if you search **ratchet & clank** some results show **& amp;** instead of **&** **python 2:** - torrentreactor is not working. - torrentz is not working. - btdigg is not working. - legittorrents is not working. - mininova: the name in the results column is incomplete. - extratorrent: if you search **ratchet & clank** some results show **& amp;** instead of **&** i know you didn't edit torrentz and btdigg in this pr but breaks compatibility with python2 for some reason. if the changes are necessary we have to fix this engines in this pr."
110228058,2550,DoumanAsh,2015-06-09T05:18:10Z,"thank you. i will look into it, though i'm also thinking return back to threading for py2 version. about extratorrent, i think you were fixing something like that for piratebay? could you please share what was the problem? python 2 problem it seems there is some issue due to python itself, but i'm not sure what is the problem. it seems someone made python multiprocessor pool to work with unicode only... and it's me... :) now i need to correct mininova and extratorrent upd: fixed extratorrent, not all & amp; will be replaced by &"
110302766,2550,ngosang,2015-06-09T10:16:19Z,"the problem was different but i think this problem can be in other search engines you modified. the fix i made for tpb #3020 and the new demonoid #3164 solve the following problem. if you are parsing this string to obtain the name, [code block] with this code: [code block] the result is that you only get **takako nishizaki** because handle_data takes **&** as a special tag and not part of the string. if you want to get the full name, handle_data will be called 3 times: 1 - **takako nishizaki** 2 - **& gerald garcia - chinese melodies for violin** 3 - **& guitar [mp3]** and you have to merge the 3 strings."
110445915,2550,DoumanAsh,2015-06-09T17:54:24Z,i applied your comments now i have to correct mininova...
110464957,2550,ngosang,2015-06-09T18:59:42Z,when you finish i will test it again and if it's fine i will request sledgehammer to merge asap.
110472591,2550,DoumanAsh,2015-06-09T19:20:36Z,"fixed. actually i found small bug when i'm missing ""link"" and that started to lead to some issues :) so seems to be good now. thanks for help, can you please test everything again? :)"
110495493,2550,ngosang,2015-06-09T20:29:51Z,"this are the remaining problems. **python 3:** - mininova: the name in the results column is incomplete. **python 2:** - legittorrents is not working. (works in python 3) - mininova: the name in the results column is incomplete. in mininova i searched **a** [a link] and in qbittorrent i only see **how to write a** instead of **how to write a song, lyrics and chords. songwriting tips and ideas. ebook by dan-o at danosongs.com** if you can change legittorrents to **legit torrents** in the search engine name"
110496497,2550,DoumanAsh,2015-06-09T20:34:58Z,how legittorents is not working? there are no results? it works for me :( mininova works? [code block]
110498954,2550,ngosang,2015-06-09T20:43:49Z,you are right legittorrents it's working now. this is the screenshot of mininova ![a link]
110502611,2550,DoumanAsh,2015-06-09T20:59:45Z,"sorry, i did not notice that i switched branch :d"
110513521,2550,DoumanAsh,2015-06-09T21:44:27Z,finally it looks ok... i hope. i think it's a bit over complex... but well... i'm tired for now so let leave it as it is merge two commits into one.
110531961,2550,ngosang,2015-06-09T23:27:46Z,"everything is fine now, you can merge it. you can also merge #3164."
110535129,2550,ngosang,2015-06-09T23:49:43Z,"wait! i have found another bug. in extratorrent i get duplicate results (with the same name, size, pers and **hash**) the problem is only in extratorrent the other engines work well. tested with python 2 & python 3 (the same problem in both). ![a link]"
110591962,2550,DoumanAsh,2015-06-10T05:14:21Z,found that i was re-running the search over the same results twice. the problem was in bad logic when i was collecting links to pages with next results(there is easy chance to get the same links twice)
110649057,2550,ngosang,2015-06-10T08:25:48Z,it's ready. i tested it several times and i can't find anything wrong. yo can also merge #3164 and #2670 (search related).
110655264,2550,DoumanAsh,2015-06-10T08:38:33Z,#3164 will not be merge together with this one. sadly git often fails to auto-merge text files
110667215,2550,ngosang,2015-06-10T09:21:58Z,merge this pr first and then we will see if rebase is need. :smile:
110693625,2550,DoumanAsh,2015-06-10T10:40:15Z,"btw, if this is one is going to be merged soon then there is no need to merge #2670 separately. #2670 is included into this pr"
110715898,2550,Pireo,2015-06-10T11:51:10Z,"does kickass work properly now? because it is the only one that currently takes time and many times ends in ""search aborted"". i'm using python 2.7.10 and i've tested with qbt 3.1.12 and 3.2.0"
110945635,2550,sledgehammer999,2015-06-10T23:28:19Z,"i have merged #2670 before i read this. there are 2 commits that read ""final enchantments"". i think you mean ""final enhancements"". if yes, please correct it. probably tomorrow this will be merged too."
110997519,2550,DoumanAsh,2015-06-11T04:49:06Z,"yes... why i always misprint this word i dont know :( strange, git does not want to rename non-last commit anyway i squashed two last commits into one with correct name :) it works for me"
111177960,2550,sledgehammer999,2015-06-11T15:43:58Z,if you're using `git rebase -i ` then you can choose `reword` to change the message of a commit.
111183838,2550,ngosang,2015-06-11T15:59:41Z,he already did. this is ready finally...
111187785,2550,sledgehammer999,2015-06-11T16:09:38Z,i found some issues that appear only if you enable all engines but not if you search separately with each engine. i am attaching pics. ![a link] ![a link] ![a link] ![a link] ![a link]
111189280,2550,sledgehammer999,2015-06-11T16:14:07Z,"uhm, current git master has this problem too. so i am merging your pr and i hope someone fixes the problems i noticed. thank you all for the hard work."
111189522,2550,ngosang,2015-06-11T16:14:46Z,i had that problem too but was fixed long time ago. try this: [code block] and remove /home/xxx/.local/share/data/qbittorrent/nova/ and /home/xxx/.local/share/data/qbittorrent/nova3/ before launch.
111191019,2550,sledgehammer999,2015-06-11T16:18:57Z,yes removing them fixed the problem. that means that we should use a version for the non-search-engine .py files too.
111206375,2550,DoumanAsh,2015-06-11T16:57:25Z,"yay! it is merged, it took me a while :) btw there was there any bugs in addition to above mentioned?"
111260510,2550,sledgehammer999,2015-06-11T20:04:13Z,"apparently, most of them do have a version and it is checked in updatenova()..."
114299505,2550,Pireo,2015-06-22T23:15:53Z,"this happened to me: [a link] qbt 3.3.0 alpha, python 2.7.10, windows 7 ultimate 64 bit"
114362397,2550,DoumanAsh,2015-06-23T05:20:51Z,how often it happens?
114395387,2550,ngosang,2015-06-23T07:52:21Z,i'm almost sure is this problem: i have found why this is happening. this are the results when you have v3.2.0 installed and you change to v3.3.0. **file new_version old_version** python 3 [code block] python 2 [code block] forgot to change the version number in **novaprinter.py** that's why it's necessary to remove the whole folder. fixed in this pr #3282. tested with python2 & 3. maybe you can give a windows build to be sure.
114413282,2550,Pireo,2015-06-23T09:06:03Z,"it happens rarely though, and i've updated 3.2.0 to 3.3.0"
114433051,2550,DoumanAsh,2015-06-23T10:24:52Z,"thanks. kinda lame of me :( there is no need for new build. you can tamper with nova folders as well on windows :) please, as per suggestion, remove all files in nova folder(not in engines) and restart qbittorrent."
114469478,2550,Pireo,2015-06-23T12:12:19Z,"in the nova folder, i've removed all thos files except the ""engines"" subfolder and this problem with those searches didn't happen anymore, but this other still persists: [a link] it also gives a second identical result with tpb"
207030487,5090,glassez,2016-04-07T18:03:07Z,"i don't like this idea. this is not salvation for these browsers, since other apps still will not clean up after themselves. it will only add a little more fat to qbittorrent (not too little in the current implementation - two classes, a lot of settings etc.)."
207060758,5090,zeule,2016-04-07T19:38:22Z,"naturally, i'm not trying to provide a workaround for a browser. i think it is pretty obvious that some qbt users may use the app to download torrents which they do not want to be accidentally forgotten about and left at a well known or easy accessible place. for such cases the proposed option may be useful."
207251952,5090,glassez,2016-04-08T06:52:27Z,:)
207361156,5090,zeule,2016-04-08T10:17:53Z,"oh, those night wordings! :) i'll change that one."
207376167,5090,glassez,2016-04-08T10:57:31Z,"i just liked the meaning, not wording. this can be the reason. torrents are different... ;)"
207377717,5090,glassez,2016-04-08T11:02:33Z,"but you should warn the user that this will also remove the torrent, which he will open by clicking or by any other method. we can't distinguish it."
207380730,5090,zeule,2016-04-08T11:09:03Z,that is one of the reasons why i've asked for better options items names. can you suggest anything? i would use a tooltip or a warning message box only as a last resort.
207384737,5090,glassez,2016-04-08T11:18:50Z,even best option name isn't enough. we still need some description. maybe add some label with description near the main option control?
208417987,5090,zeule,2016-04-11T15:55:03Z,added a warning label and descriptive tooltip (see the updated description).
209109026,5090,sledgehammer999,2016-04-12T21:25:03Z,"i just want to add that this is a good feature because many users have requested it, especially in the forum. they wanted to have it as an option when deleting a torrent from the list. also i did a very quick look and i have a better implementation proposal. but i could be very wrong. why use the special guard thing? the session class already knows where the .torrent lies. so after adding it, it should check the preferences and delete it. deleting after cancel can be handled by addnewtorrent dialog alone. extra points: option to override the preferences setting from the addnewtorrent dialog."
209115350,5090,zeule,2016-04-12T21:42:48Z,"i could be wrong too. the dialog adds a torrent by creating a `torrentinfo` object which is passed to the `session` then. does this preserve the file path? i thought that it does not. the class encapsulates the logic which is used at two other places. otherwise `session` and `addnewtorrent` would read settings and i personally don't like this. besides, this approach can be easily extended to implement the extra point. the only question is how that should look? it seems to me that there should be an option which will give a possibility to preserve the torrent file unconditionally, whether it will be added or not. something like ""do not delete .torrent file after closing the dialog."" is it clear that the option cancels both settings, for added and for canceled torrent?"
209122193,5090,sledgehammer999,2016-04-12T22:01:46Z,unfortunately you're correct. don't know yet. i am looking at other things atm.
209125177,5090,zeule,2016-04-12T22:12:31Z,"just found that i overread the following: what do you mean here, please? we are not on a chat. :) i can wait, of course."
209125753,5090,sledgehammer999,2016-04-12T22:15:18Z,"their request was different form what you do here, but i think it results in the same thing more or less. they want another option when they right click on a torrent from the transferlist. apart from the regular delete they want also ""delete .torrent file"". i have declined it so far, because we don't track the original .torrent after we add it. and i thought it was a waste of time to implement such tracking."
209126229,5090,zeule,2016-04-12T22:17:34Z,"thank you, it is clear now. +1"
209640276,5090,zeule,2016-04-13T20:44:27Z,added an option to the `addnewtorrentdialog` to disable removing for a particular torrent (the option is visible only when the auto-deletion is enabled).
209657835,5090,zeule,2016-04-13T21:37:38Z,: unfortunately yes. thanks a lot!
209664857,5090,zeule,2016-04-13T21:56:08Z,thank you once again! the texts were corrected.
209820300,5090,zywo,2016-04-14T08:12:01Z,the checkbox alignment for torrent settings shouldn't be like that? ![a link] instead of: ![a link]
209843023,5090,glassez,2016-04-14T09:16:36Z,"i think no, because it does not belong to torrent properties."
209849737,5090,Chocobo1,2016-04-14T09:32:23Z,the new added option really should find a better place to stay: - collapsed menu: [a link] - expanded menu: [a link]
210524082,5090,zeule,2016-04-15T16:11:22Z,": took your suggestion about the dialog layout, thanks!"
211066959,5090,Chocobo1,2016-04-17T17:38:22Z,i guess you haven't update the pr yet? i didn't see the layout changes i mentioned. and also: [a link]
211067181,5090,zeule,2016-04-17T17:42:09Z,i've pushed the changes. did i miss something?
211229625,5090,Chocobo1,2016-04-18T06:48:05Z,i thought you were talking about this change: [a link] and also: [a link]
211339865,5090,zeule,2016-04-18T11:31:21Z,": or, no. i'm sorry for confusing you. i've your suggestion about the placement of the option in the ""add torrent"" dialog in general, but i agree with that it does not belong to the torrent properties. so it now does not ""jump"" as it was. concerning the size of the warning icon (where you suggest ""fixed"") i'm actually puzzled a bit (and forgot to share that before). the warning icon is retrieved from `qstyle` as `qicon` but the label wants a pixmap. what size shall i pass to the `qicon::pixmap()`? right now it is 16 by 16. this will be not enough even for dpi > 160, i guess."
211378506,5090,Chocobo1,2016-04-18T13:28:34Z,"although it's not a torrent property, it is a **setting** to the download job. and intuitively it fits nicely in a group of settings, so leaving it outside the group is well... less preferable. maybe the ""torrent settings"" can be renamed to ""download settings"". i hope this clarifies my point of view and i don't want to argue more on this. now is better, but you should place the new checkbox above ""never show again"", not under. and now i think why there is a need to have `delete .torrent files afterwards` in options? every download job goes through addtorrentdialog right? (except nox builds) remove the settings in options and rename ""don't delete .torrent file"""" to ""delete .torrent file"" in addtorrentdialog. isn't this simpler? and i suggest you revert to default properties as much as possible. intended changes can stand out this way. and if you are preserving the `i` in qlabel, at least make it untranslatable. also the `buddy` thing you keep ignoring me, please, can you tell me what is it for? worry about it later, currently we just let qt do the upscaling."
211381916,5090,glassez,2016-04-18T13:38:35Z,no! someone can disable dialog showing at all.
211513954,5090,zeule,2016-04-18T18:23:37Z,"+1 well, just to make it width not equal to zero. not an important thing. i'll remove it. omg, i remember how i removed it. must have forgot to save the file."
214503682,5090,sledgehammer999,2016-04-25T20:07:16Z,rebase please.
214511780,5090,zeule,2016-04-25T20:32:37Z,please.
214532665,5090,sledgehammer999,2016-04-25T21:35:52Z,i am done reviewing it. i didn't compile/test it. i'll do it before merging.
217629867,5090,ngosang,2016-05-07T11:23:23Z,"maybe i'm late but i don't like this idea. i think adding such functions are burdening qbittorrent. also the size of `.torrent` files is negligible compared to the size of today's hard drives. i see no reason to remove them. update: i have nothing against you, i think you're a great programmer, but you are trying to add many features in qbittorrent that are useful just for you. we should think about if a feature will be useful for more than 50% of people before including it. i'm thinking in #4994 for example."
217634458,5090,zeule,2016-05-07T13:18:47Z,: this feature is about not disk space but privacy.
217728939,5090,sledgehammer999,2016-05-08T15:51:40Z,2 minor fixes and i can merge.
217823029,5090,zeule,2016-05-09T09:54:40Z,done.
217846351,5090,sledgehammer999,2016-05-09T12:05:04Z,this seems to work fine for my simple tests. thanks for the patch and all the other reviewers.
217861719,5090,zeule,2016-05-09T13:19:54Z,i thank all the participants too.
307689815,6952,vit9696,2017-06-12T04:55:40Z,"i fixed the build issues except the one with qmake+gui. your homebrew formula defines `-skip qtmacextras`, which is necessary to provide dock icon badges and thus mandatory. once you update your toolchain (just removing this line should be enough), your buildsystem will start working once again. i could make it build even without the badges, but i see no reason to limit macos functionality just because a certain toolchain is broken."
307719474,6952,Chocobo1,2017-06-12T08:10:49Z,"2 things i wanted to add: 1. create fixup commits for now, note that eventually you'll have to squash all commits into one. 2. please provide before & after screenshots if possible, majority (at least me) of the devs don't have easy access to a mac."
307845402,6952,vit9696,2017-06-12T16:38:33Z,i fixed all the issues you asked me to change except the ones i consider invalid. the screenshots are available in the first post if you did not notice ^^
307902310,6952,vit9696,2017-06-12T19:50:55Z,"alright, i squashed all the changes into a single commit and even fixed a couple of other issues i spotted. would you please merge this?"
307981163,6952,Chocobo1,2017-06-13T01:36:18Z,"i would like to if i can verify this pr on a mac, otherwise, this pr will be handled by the project owner ."
307981700,6952,vit9696,2017-06-13T01:40:08Z,"well, i build this on a vm (too much of a dislike for qt to let it arrive on my real machines), and can give you vnc or teamviewer without any issues. maybe you could spot something yourself... ping me on irc or write an email to vit9696 at avp dot su."
308051489,6952,vit9696,2017-06-13T08:54:27Z,"actually it is a very small change, so i added it right here. it is especially bad because of the main menus, where the entry already says ""preferences..."", and because of dock that has options. to be honest, after this i felt like making all the icons greyscale on macos and be done with it. i am not sure how to do it properly. on macos one pretty much must use greyscale icons on toolbar, statusbar, in fact everywhere. and what you have at the moment looks terrible. shall i open an issue for a discussion? you have some theming pull requests here awaiting the merge, but this is not really about theming but about following the mandatory ui guidelines."
308055733,6952,vit9696,2017-06-13T09:11:49Z,"and just another thing, while i was changing the preferences title i thought that something is wrong with the window. now i see it. you use a qbittorrent icon everywhere in the windows. on macos we **do not** have a window icon unless this icon represents a file type, which is quite convenient. also fixed everywhere."
308062545,6952,vit9696,2017-06-13T09:38:32Z,"in addition to the screens in the first post, here are more: screenshots ![a link] ![a link] ![a link] ![a link] ![a link] ![a link]"
308133721,6952,vit9696,2017-06-13T14:25:54Z,"i created an issue regarding macos icon choice: [a link] please let me hear your opinion. i am a reasonably old macos user, and from what i remember even in the days of 10.6 colouring was not something to appear in the toolbar, and there were hardly many programs with the statusbar, and even them had greyscale icons. (e.g. [a link]. i guess we could continue the discussion in the created issue."
309215781,6952,vit9696,2017-06-17T13:40:35Z,"sorry, found a bug, which was previously unnoticed due to another bug in the very old code of yours, that started to trigger due to a qt change @. the issue is that recent qbittorrent binaries have black text in selected tabs (see [a link]. this happens because to support fusion and other styles on mac (that have black text on white tabs) qt devs added a stylesheet comparison in [a link] in your codebase you have a stylesheet replacement ([a link], [a link] that... does nothing on mac mhm. (it was later modified and moved a little but remained the same). this effectively switches all the styles on mac to stylesheet. qmacstyle check fails, and starting with the recent qt 5.8.x versions qbittorrent tabs on mac are unreadable. after i fixed this i discovered that i myself added a stylesheet change to remove the border. this is not valid, it breaks all the tabwidgets and `-style fusion` mode as well. i reworked the change, so we are good now ([a link] and [a link]. i squashed the commits, just as you asked, but here are the only changes i made since the review confirmation to make your life easier: [a link] i think this is finally good now and ready to be merged..."
309219332,6952,Chocobo1,2017-06-17T14:46:13Z,"yeah, if you could defer the squash-ups to just before merging, that would be great, example: [a link]"
309220447,6952,vit9696,2017-06-17T15:06:43Z,"as for squashing i am fine not to, generally even the maintainer does it at merging (on this site it is even automated). however, if i have to squash ""in the end"" it will most likely decline the confirmed review, so it is kind of an infinite loop with this logic. i left the commits untouched, let me know if we are good so that i could squash them and this gets finally applied xd))"
309222163,6952,Chocobo1,2017-06-17T15:37:02Z,"don't worry about it, its how we run the project now... someone (from the devs) will give you the signal. --- ping and i my review is done here."
309224769,6952,thalieht,2017-06-17T16:21:24Z,"closes #951, #2126, half #2761, #3022, #3030, #3617, #3750?, #4129?, #4147?, #4200, #4748?, #6997, pr #2096, #6206"
309227070,6952,vit9696,2017-06-17T17:00:40Z,"thanks for checking the tracker. this indeed fixes #4748. as for #2761 using just the bare api there is enough space for a single line only, i guess for a more complete fix one must perform a full manual redraw in cocoa, or at least provide an option to choose the speed to show. given the enforced red colour the latter is probably a bad idea, and the former is certainly outside of this pr. #3750, #4129, #4147 are fixed, the completely broken tray icon is now gone for good, and restoration and minimisation works fine."
310924741,6952,sledgehammer999,2017-06-25T20:02:44Z,"thanks for awesome work and sorry for the long wait. at least the other members started reviewing the code. of course i approve this work visually. i'll also update the toolchain on travis as soon as i get my hands on the macos machine. usually in a few days, where i'll also build the upcoming v3.3.14. ps: with my latest push your pr has a minor conflict. please fix it. thx."
310948091,6952,vit9696,2017-06-26T02:17:35Z,"hi, nice to see that moving. i rebased everything to trunk. had to add a minor change to get cmake compile: [a link]. hopefully this could get merged in 3.4.0 =)"
313381540,6952,vit9696,2017-07-06T12:26:59Z,"even though possibly a good idea, it is not really doable. icons still remain in the search tab, for example. while not so nice, this is essential for usability."
313388443,6952,zeule,2017-07-06T12:57:50Z,"could you elaborate, please? if you mean that the same icon might be used on other platforms in different places where on macos in one of them icon is not needed, then maybe we better add a context parameter to `guiiconprovider::geticon()`?"
313390794,6952,vit9696,2017-07-06T13:07:41Z,"i was referring to blacklisting tab/button icons as a class on macos. i think qt has something similar for non-menu icons that disables them globally, which is not really possible, since in some places the icons are still needed even on macos. wrapping functions like `guiiconprovider::geticon()` is possible, but from what i remember it is not the only function used, also the semantics of making a show/hide decision needs to be agreed on (it cannot just be ifdef macos → hide). in addition there is other code that still needs ifdefs. all in all, i would rather not try to refactor relevant side portions of code at the same time as fixing a lot of other things."
313873516,6952,sledgehammer999,2017-07-08T18:33:38Z,rebase on master. macos packageds for travis/homebrew have been updated to include qtmacextras (+ qtsvg) (plus latest rc_1_0 for libtorrent)
313875139,6952,vit9696,2017-07-08T19:06:19Z,we are good now =)
313882259,6952,zeule,2017-07-08T21:32:13Z,why do we use a custom qt bottle but not the package from homebrew?
314752806,6952,vit9696,2017-07-12T12:24:07Z,"now that everything is settled including the build issues, would you please approve and merge this or let me know what else is ought to be changed? it is not too hard to maintain the patch in sync with the ongoing changes in master, but i would rather not spend your and my time on stuff like rebasing. thank you for understanding. cc , , ,"
314787228,6952,sledgehammer999,2017-07-12T14:30:09Z,in the past the `macdeployqt` was broken. but now homebrew includes the patch in the formular itself. i can't remember any other reason. so it is probably safe to drop it now. i leave this pr open in a browser tab. i will review+merge as soon as possible.
314823404,6952,zeule,2017-07-12T16:27:50Z,great! thanks!
314843747,6952,vit9696,2017-07-12T17:42:43Z,"it may not be. i cannot produce a standalone build with `macdeployqt` from homebrew, though i am unaware if i am supposed to pass special flags or compile differently. please test it before removing =)."
314859122,6952,sledgehammer999,2017-07-12T18:38:17Z,are you using the 5.9.1 `qt.rb` formula? it explicitly has patch for this inside. and used `otool -l` in the qtnetwork and qtgui libs and the qtcore references were rewritten to relative paths pointing to the .app package. ps: i just use `macdeployqt qbittorrent.app` ps: relevant pr #7097
314905476,6952,vit9696,2017-07-12T21:41:13Z,"i have just rechecked my setup, and there is good news. qt from homebrew now deploys without issues. there still were 5.9.0 leftovers, and unfortunately the older macdeployqt was used and confused me. there is an important thing to be aware of, though: qt from homebrew requires 10.10 and higher."
314908343,6952,sledgehammer999,2017-07-12T21:53:20Z,we don't actually have a policy for macos. are there people not upgraded to 10.10 yet?
314908825,6952,vit9696,2017-07-12T21:55:28Z,"unsure, there could be some who stick to 10.9.5, but i personally do not care. just mentioned this because you were concerned about the minimum supported macos version in the other issue."
315550824,6952,sledgehammer999,2017-07-15T17:51:37Z,thx for the time you took to find all the little details and fix them.
315583127,6952,Chocobo1,2017-07-16T03:44:19Z,getting some errors on qbt launch: [code block]
315598244,6952,vit9696,2017-07-16T09:50:27Z,"i definitely don't have this. the only issues i see are: [code block] and they are most certainly due to [a link] are you using cmake or qmake builds? i use cmake, and now i do wonder whether qmake also needs q_os_mac definition for moc. like [a link]."
315598465,6952,Chocobo1,2017-07-16T09:54:31Z,"no worries, #7106 has just been merged. qmake"
315598598,6952,vit9696,2017-07-16T09:57:10Z,"oh, i see, thanks a lot :)"
408169299,6952,D3V4N5H,2018-07-26T17:15:02Z,"hello. i'm relatively new. i love qbittorrent. i'd like to see eta (expected time to finish download) on the badge instead of global download speed, as it makes sense to me, to not to check now and then from the window and then hide it again. i know c++ but not qt. how can i contribute? do i need any special development environment in my macbook air?"
200389249,4984,ngosang,2016-03-23T15:15:23Z,this feature is necessary but i've looked at the code and the implementation seems a little complicated. maybe can help you simplify things.
200560764,4984,SeigneurSerpent,2016-03-23T21:59:48Z,"let me elaborate on the changes introduced to clear a few things up. `session.cpp` is modified to set external ip address to `announce_ip`. that is how a client tells its public ip even operating in a private network. announcement url parameters `info_hash` and `peer_id` are just random 20-byte binary strings. qt5's `qurlquery` wouldn't decode the parameters fully as it normally expects utf-8 strings. sometimes it could lead to different ""half-decoded"" strings corresponding to one binary string, making the decoding function non-bijective (not one-to-one). therefore files `webapplication.cpp`, `webapplication.h`, `requestparser.h`, `requestparser.cpp`, `irequesthandler.h` and `connection.cpp` are changed to make url parameters decoding optional and turn it off for embedded tracker (via `configurerequestparser()` request and then invoking `disableurlparameterdecoding()` on `parser`), and let the tracker percent-decode the parameters. still, when string decoding fails for some reason, the string is stored in a hashtable as a key thereby preserving the way tracker used to operate before for erroneous strings. that’s why several `if` clauses are introduced in `tracker.cpp` static functions in `iputil` and `isnonroutable()` in particular are introduced in `tracker.cpp` to determine whether given ip address is public (external). these functions are used in `peer::getipforclient(clientip)` to retrieve public ip for a given peer if the `clientip` is public. otherwise it falls back to connection ip. if you have any questions or suggestions for improvement, please don't hesitate to tell."
200654828,4984,glassez,2016-03-24T04:12:28Z,"for a start, please describe this problem in detail. give me an example url that is decoded incorrectly, so i can check it out."
200947358,4984,SeigneurSerpent,2016-03-24T17:49:56Z,"lets consider a simple test that decodes sequences ""()a%7bb"" and ""%28%29a%7bb"". these sequences represent the same binary string. the default qurl::prettydecoded doesn't do much and produces ambiguity. qurl::fullydecoded seems to decode every character, but replaces non-utf8 0x80-0xff characters with a predefined character. it is evident when comparing decoded strings ""%80%00"" and ""%ff%00"". reference seems to corroborate this: [a link] ""non-utf-8 sequences: urls may contain sequences of percent-encoded characters that do not form valid utf-8 sequences. since urls need to be decoded using utf-8, any decoder failure will result in the qstring containing one or more replacement characters where the sequence existed."" [code block] [code block]"
201175294,4984,glassez,2016-03-25T07:04:11Z,"since there are two independent problems, it would be better if you will divide this pr into two: one for ip handling and the other for url decoding. this may speed up reviewing and merging. (leave this pr for the url decoding issue, because there are associated comments)"
201178852,4984,glassez,2016-03-25T07:15:03Z,"ok. that's all clear. but it's too abstract example. what about actual cases? what parameters can contain such escapes, under what conditions, and what clients can produce this? and, most importantly, can we consider such requests valid from the bittorrent protocol point of view?"
201420544,4984,SeigneurSerpent,2016-03-25T18:51:29Z,"the code is difficult to divide seamlessly into two separate updates, because both rely on `peer` class interface, which has been modified to incorporate both changes. therefore the separation would drag changes from both updates and lead to multiple merge conflicts. maybe it is better to move some ip-related code to a separate file to avoid clutter. another option is to first merge ulr-decoding pr and then create remote ip handling pr. according to the specification, info_hash and peer_id are 20-byte binary strings that must be percent-escaped: [[a link] the following page describes bittorrent tracker protocol in detail: [[a link]"
201435446,4984,glassez,2016-03-25T19:11:22Z,do not rush to do it. let me watch current implementation.
201756082,4984,SeigneurSerpent,2016-03-26T10:48:26Z,"percent-escaping produces us-ascii character sequences. utf-8 is backward compatible with us-ascii, i.e. both have the same binary representation in the range 0x00-0x7f. invoking `escaped.toutf8()` produces qbytearray of ascii symbols, which is consumed by qbytearray::frompercentencoding(). the function source code seems to confirm that it does what expected: src/corelib/tools/qbytearray.cpp [code block]"
201791926,4984,glassez,2016-03-26T12:09:58Z,"i've considered it (i mean url decoding). i fully agree with - your solution is too complicated. besides, it is located in the wrong application layer. later i will present you my suggestions for correcting this (i don't have the free time to do so now)."
202094243,4984,glassez,2016-03-27T15:50:03Z,"we need to fix this problem at the root. but where is the root? that's right - the root is in the requestparser class. in short, meaning that we must decode the request on the basis that it may contain any binary data in percent-encoded form. so we need to decode it not in qstring but to qbytearray (and change http::request::gets to `qmap `). and the decision how to interpret these data should be taken at the application level (webapplication, tracker, etc.)."
205817971,4984,SeigneurSerpent,2016-04-05T13:57:11Z,done. your suggestion seems to be the perfect solution to the problem. thanks!
206927758,4984,SeigneurSerpent,2016-04-07T14:20:19Z,"[code block] i completely forgot to test it with qt4, so i added some conversion code. both qt5 and qt4 have qstring(qbytearray) constructor, but only qt5 treats the array as utf-8 sequence. in qt5 everything should work like magic because of qstring(qbytearray) constructor and implicit construction from qbytearray to qstring. as far as qt4 is concerned, i added explicit conversion from qbytearray to qstring. request.gets is used in 3 webapplication functions: action_query_torrents, action_sync_maindata, action_sync_torrent_peers. but these functions appear not to be used by anything else. so i tested each case using handcrafted custom conversion tests. [code block] fixed. [code block] i guess i should leave only `defined(boost_asio_dyn_link)` all remaining issues have been fixed."
206928915,4984,SeigneurSerpent,2016-04-07T14:22:55Z,[code block] done
206953349,4984,glassez,2016-04-07T15:29:02Z,"you will hate to hear this, but i say no. i asked you to simplify your previous code, you made it difficult. i was told that my proposed simplification will reduce the amount of code and you just put the body of some functions in one line with braces in violation of our coding style rules. by the way, you also did not fix other coding style issues (or you just added the new). do you still have previous version of code?"
207020944,4984,SeigneurSerpent,2016-04-07T17:41:55Z,"yes i have. i guess rebasing was a terrible idea, so i'll do it only after a complete successful review. i restored the branch and created a separate commit. here is the proposed fix: [[a link] apparently i misunderstood some of your suggestions. so let me comment on some seemingly very strange changes i've made. i removed all getters from peer class when transformed it to struct. also i renamed toentryforclient() to peertoentry() and changed its signature to `libtorrent::entry peertoentry(const peer& peer, bool nopeerid, const qstring& clientip)` following the comment: [code block] i removed `escape()` function declaration from perr class and transferred it to unnamed namespace in tracker.cpp following the comment: [code block] i guess i didn't quite get what you mean by moving pure private thing to .cpp. i would appreciate if you could clarify this matter. i deleted the peerbuilder class and put the code generating peer uid in-place, the only thing it did useful, after reading the following comment: [code block] anyway i greatly appreciate any comments or suggestions. thanks!"
207039728,4984,glassez,2016-04-07T18:31:11Z,"sorry, i went a little crazy. it's not so bad. my frustration has caused most of the http::\* code. tomorrow i will comment in detail on this version of the code (not necessary yet to change anything)."
207250829,4984,glassez,2016-04-08T06:50:13Z,"i finished to comment. conclusion: 1. `requestparser.cpp` is ok. 2. `session.cpp` seems to be ok. 3. `tracker.*` need to be improved (according to my comments). 4. `http/types.h` needs to be fixed (according to my comments). 5. `abstractwebapplication.*` need to be untouched. 6. `webapplication.cpp` needs to be fixed (you should add get params parsing in affected actions). when you create qstring from utf-8 encoded qbytearray you should use qstring::fromutf8() for both qt4 and qt5 (to avoid redundant `#ifdef`s). p.s. try not to break the coding style rules, when you will be correct this time."
207489755,4984,SeigneurSerpent,2016-04-08T15:50:54Z,i hope i got everything right this time.
207498232,4984,glassez,2016-04-08T16:16:14Z,"there are still a few things for fixing. the rest now looks good. it also looks suspicious. namely, the dependence of this behavior from the inclusion of ` `. i'll try to test it later."
207503877,4984,glassez,2016-04-08T16:30:33Z,"besides, for some reason i can't find any mention of `boost_asio_disable_move` in boost.asio documentation."
207532916,4984,SeigneurSerpent,2016-04-08T17:42:45Z,no need. i replace std::swap with copy assignment and hereby eliminated all rvalue moves.
216602483,4984,sledgehammer999,2016-05-03T17:22:36Z,"one final comment. i may be a little bit confused by your changes. but here it goes. it is about the announce ip. from [a link]: so imo if the peer has set an announce ip, it should take precedence over the ip it connected through and if it is routable, otherwise use the connected ip as fallback. ps: if you know what interactive rebase is, then use the `fixup` keyword to merge your commits. if not, leave a comment and i'll give detailed instructions."
219551576,4984,sledgehammer999,2016-05-16T21:20:24Z,"/qbittorrent-frequent-contributors it seems that has abandonded this pr(or too busy). can someone review my comments, so i can prepare a patch after merging this?"
220838615,4984,SeigneurSerpent,2016-05-22T15:34:30Z,sorry for taking so long to reply. i was away from home.
220838951,4984,SeigneurSerpent,2016-05-22T15:40:34Z,if the changes are acceptable i can promptly merge them by interactive rebase
220866184,4984,sledgehammer999,2016-05-23T00:31:19Z,i took a glance at your comments. i'll look the changes more thoroughly tomorrow. you haven't commented on my [a link]
221086237,4984,SeigneurSerpent,2016-05-23T20:28:32Z,"i've changed somewhat server logic following your suggestion and now server provides external annouceip to external client, otherwise - connection ip. however, you might be suggesting to always provide announceip if it is routable no matter what client ip is. if that's the case, lets consider the setting of two local clients in the same network sharing private torrent. current client implementation always announces external ip in session::handleexternalipalert(). therefore both clients would announce their router's external ip to the server(which is one of the clients). torrent server would provide the external ip and the clients would fail to initiate data transfer. even if both specify their own local ip as annouceip. on the other hand, current server implementation would provide local ips to both clients and they would successfully communicate with each other. from the conceptual point of view, it is certainly right to provide routable announceip. for the above-mentioned scenario to work, i guess i should introduce a boolean option to turn inferred external ip announcement off."
246008416,4984,aekkarinnan,2016-09-09T19:03:42Z,6
520175192,4984,glassez,2019-08-10T19:50:32Z,", what do you think about this feature in general?"
520198078,4984,Chocobo1,2019-08-11T03:52:02Z,"i'm working on something similar (improving the basic tracker), although not as complex as the pr. i'll put up for review when ready."
689102834,13327,FranciscoPombal,2020-09-08T19:55:48Z,"a note about the review comments pertaining to ""extracting certain trivial changes/removals to other prs"" - i've explained in [a link] why i don't think it's a good idea. however, i do agree those should be separated into distinct _commits_. i'll do that once we get over the first review."
689121875,13327,FranciscoPombal,2020-09-08T20:36:41Z,i've addressed the comments. the ones i did not mark as resolved are the ones that i think warrant further clarifications/discussion. once we iron those out i'll force push to remove the `# genexp:` comments.
689514147,13327,FranciscoPombal,2020-09-09T11:58:51Z,"ok, i think all comments of your comments of the first review have been addressed at this point. let me know if there is something you think needs to be discussed further though. otherwise, i'll remove the `# genexp:` comments and then start splitting this up into separate commits."
689544072,13327,glassez,2020-09-09T12:55:19Z,seems it has no more blocking issues for me. although i need to review it again after all final changes have done.
689585104,13327,FranciscoPombal,2020-09-09T14:04:43Z,"alright then. please take a look at this. the changes made as a result of 's review comments were still very minor, so you can still compare this in its current state directly against [a link] to ascertain the value/advantages of going the generator expressions route. again, i will note that there are a few comments starting with `# genexp:` to signal places where the use of generator expressions was unavoidable. once i address your review comments, i can remove those comments and finally start splitting this up into discrete commits - i already have a pretty good idea of how i will do that; also threw in some good suggestions."
690218006,13327,FranciscoPombal,2020-09-10T11:54:13Z,force push to resolve [a link]
693498674,13327,FranciscoPombal,2020-09-16T15:53:47Z,force-pushed to address most review comments. i will now investigate the situation with `_crt_secure_no_deprecate` and `_scl_secure_no_deprecate`.
693523568,13327,FranciscoPombal,2020-09-16T16:36:40Z,"seems like `_crt_secure_no_deprecate` and `_scl_secure_no_deprecate` have been replaced by `_crt_secure_no_warnings` and `_scl_secure_no_warnings`, respectively, for a long time. apparently they just disable a `/w3` deprecation warning (`c4996`) for certain things that we probably ought to have enabled in all cases anyway. [a link] [a link] [a link] i'm not even sure if they were having any effect until now. i'll try building without them soon to know for sure."
693762274,13327,FranciscoPombal,2020-09-17T02:01:34Z,all comments addressed.
693794978,13327,glassez,2020-09-17T04:03:36Z,"just to clarify one point. previously, i suggested splitting these changes into some separate parts, but my goal was to review and merge them one by one (as separate prs). since it is generally approved now, i no longer see the point of making such a splitting post factum. the current split into two commits doesn't make sense for the master git history either. so let's just merge both commits into one and finish with it (if you don't have a great desire to prolong the fun even more)."
693840102,13327,FranciscoPombal,2020-09-17T04:50:25Z,"ok. the purpose of the current commit split is to enable easy comparison against the alternative with generator expressions, without having to open up [a link] now that the general review is done, and both implementations have been verified to produce the same results, they can be compared fairly in terms of readability, maintainability, etc (actually, the genexp version is missing a couple minor fixes that came in during this review, like removing the `*_secure_no_deprecate` defines for windows, which doesn't really make a difference - but let me know if you want me to remove that noise). i await your comments/decision on this matter ( you too)."
694108505,13327,glassez,2020-09-17T09:18:22Z,"i don't think we should stay here any longer. if you still want to present genexps as an improvement, you can publish the corresponding pr on top of this one when it is merged."
694191623,13327,FranciscoPombal,2020-09-17T12:16:42Z,"i was under the impression that there would be some more discussion about this before merging either one, but that's fine, the existing improvements can be merged now and we'll handle the rest later. i force-pushed to squash the commits together. this is ready for merging now."
694613674,13327,glassez,2020-09-18T02:37:39Z,thank you!
694627090,13327,NotTsunami,2020-09-18T03:28:43Z,"all cmake builds on ci are failing now, with osx failing in a previous spot from before."
694648316,13327,Chocobo1,2020-09-18T04:48:45Z,linux failing point: before this pr: no error this pr: [a link] osx failing point: before this pr: [a link] this pr: [a link] it should be investigated.
694973505,13327,FranciscoPombal,2020-09-18T16:48:59Z,"i have also seen this (or very similar) reported here: [a link] this failure seems to affect some systems, but not others. i don't know the exact reason why (and i can't reproduce on my linux and windows machines, though i haven't tried with wsl, like in the case of the bug report). i think i think this would fix it, but i wanted confirmation before proceeding: [a link] it does seem right to add the explicit direct dependency, as we do use it in `src/base/utils/misc.cpp` and `src/base/utils/password.cpp`. actually, i can just submit a pr with the change and see what happens with ci. will do that. though the symptom is different, the reason is the same - the broken bottle currently used. [a link] solves this of course."
837782506,14959,Chocobo1,2021-05-11T04:27:58Z,perhaps you should add installation step to windows builds on github actions.
837794266,14959,glassez,2021-05-11T04:39:45Z,"copying all the dependencies to build directory doesn't seem like valid building workflow, imo. it is absolutely unnecessary in correctly set development environment (i don't mean just ide). if you want all to be copied into some target directory just install it there."
838442970,14959,FranciscoPombal,2021-05-11T13:08:07Z,"only for the static builds, right? ok. ci for the dynamic builds will warrant a bit more disicussion because i don't think there is any more space for caching dependency artifacts, hence this comment in the op: --- what do you mean? the standard way to do the ""debug"" part of the ""edit/compile/debug"" cycle (ide or not) is to just point the debugger at the executable generated in the build directory, and it should ""just work"". if some required runtime dlls are not there, it will not work. such is life on windows. i'm sure it can also be done in some other roundabout way by configuring debugger search paths, etc, but this is simpler and more closely mimics the final setup that will be deployed to the user. regardless of matters related to development setup, copying the remaining runtime dlls to the build directory is a prerequisite to make installation trivial. maybe you would prefer if the full ""runtime tree"" were generated to its own sub directory of the build folder, so that it is not at top-level? for example, copying `build/qbittorrent.exe` to `build/run/qbittorrent.exe`, and the required runtime dlls also to `build/run`? is this what you meant?"
838788213,14959,glassez,2021-05-11T16:28:49Z,"it ""just works"" in **correctly set development environment** that i mentioned above (i.e. when all runtime dependencies are reachable via environment variables etc.)."
838861175,14959,FranciscoPombal,2021-05-11T17:20:44Z,"that's in the linux world, which i prefer as well - where every library, header file, etc is neatly stored in standard, well-known paths, all properly configured and ready to go, and automatically managed by a package manager. but on windows, where there is no such thing (beyond core system libs) and the common practice is to bundle everything separately between programs, it is much more practical to do it this way, rather than fiddling with `path`/`libpath`s for every single different project. imagine especially if you are a new contributor, you don't want to deal with that. my environment, and that of others _is_ correctly set up; fiddling with `path`/`libpath` in my shell/ide simply to get the compiled executable to run correctly (without ""installing"" it) should not be my responsibility, its stuff that my tools, such as my build system, should do for me - and cmake is smart enough to save me the work of doing anything else[1]. just like end-users don't have to fiddle with their `path`s to get their programs to work, developers shouldn't either. developer ux matters - on windows, this is the way to improve it. see for yourself, many people face this problem: [a link] of course those needing to ask these questions are mostly novices. but those who don't are experts, whose precious time is wasted configuring such things. [1] and it will become even smarter from 3.21 onward, thanks to [a link]"
838916668,14959,glassez,2021-05-11T17:58:53Z,"i don't talk about linux/windows world. i talk about ""correctly set development environment"" that is configured by developer to maintain all needed workflows (building, testing etc.). it isn't dependent of any os. yes, from time to time i use linux for development purposes and i use several non-default libraries/tools so they are located outside well-known system paths, but my ""development environment"" is still ""correctly set"" so i don't need apply such contr-productive actions like copying all dependencies in build dir. as for the newcomers you supposedly care about... sorry, but this is about developing, not playing video games. it is fair to expect at least basic knowledge from them. we do not require them to understand assembly language listing, etc."
838932402,14959,glassez,2021-05-11T18:09:55Z,"if we are talking about installing on windows (at least in passing), then wouldn't it be better to make it possible for cmake build script to produce a real installer (e.g. nsis) package for all types of builds (static and dynamic)?"
838962716,14959,FranciscoPombal,2021-05-11T18:30:34Z,"you are missing the point. it's not about complexity, it's about comfort and ease of use (basically, improving developer ux). and it's not just newcomers i care about (and i _do_ care about them, not just ""supposedly""). everyone on windows expects it to work this way in the best case, and when there are not many special requirements (which is the case for qbittorrent, it's a very run-of-the-mill gui application). if it doesn't work this way, it's not the end of the world of course, but the newcomers will struggle, and the experts will waste their time unnecessarily once more. lowering barriers of entry and simplifying workflows and setup is important. that's how you get more people into the project, both experts and newcomers alike. this is not a cathedral, it's a bazaar. it's for the community, by the community; the purpose of this project is not to stroke some developer's ego because they managed to setup and maintain an unnecessarily complex development setup, as opposed to some filthy gamer who could never achieve such a thing (i have no strong opinion about this comparison to video games, i simply don't understand it - this was my best interpretation of what it could mean). i did not say you never needed to use ""non-default libraries/tools"" on linux - in fact, i usually install the latest version of boost to `/opt/boost_w_xy_z` and use it instead of the one available in the repos. furthermore sometimes it is really necessary to maintain more complicated setups. in this case it is simply not. why complicate things when they can be easy? do you think stuff like this: [a link] is the best we can do? when i set out to improve the build system and the ci, the goal was to improve the project by making certain tasks easier and more accessible. i'm certain you agree this goal has been met. whereas previously, when a user wanted to test an ongoing pr, you'd have to tell them ""oh hey, you just have to follow this horrendously long procedure to compile from source"" or ""wait for some contributor to have the time to build it for you"", now they can simply download the test build and provide feedback. many users have been taking advantage of this and providing feedback more quickly; some of them who provide valuable feedback would not have otherwise been able to do so, either due to lack of time to compile themselves or expertise. in fact, i would bet you and other contributors have made use of the artifact downloads to quickly test things yourself without having to pull the pr and wait on the build (i sometimes do this, especially for windows stuff). through simplification and improving accessibility and developer ux, efficiency was improved - more people can do more things done quicker and with less effort. this is yet another step in that direction. additionally, the maintainers' time was freed up from having to maintain dependency bundles for the ci on the website; now everything is handled automatically and quickly (due to the caching). this in turn means we can be quicker in updating dependencies for ci. i should also reiterate that these improvements are not solely targeted at ""making it easier for newcomers"", and especially not at the expense of more experienced users. sometimes things get messy, and improving developer ux also means making it easy for experts to really dive in and dissect everything when needed. and, of course, this change is obviously not at odds with this goal either. perhaps this does not seem like a big deal to you, because you are biased by how long you've been doing this, but trust me, it is. that's fine, for most people, once something becomes a habit it severely distorts the perception of the areas where the task could be improved/simplified (this is the case for me as well in other matters). please keep that in mind."
838978371,14959,FranciscoPombal,2021-05-11T18:41:17Z,"to reiterate this: can i slog through [a link] yes. did i do it? yes, more than one time, unfortunately. can many other people do it? of course, this is not rocket science. do i wish to do it again? no, unless possibly as a means to try to track down and isolate a very specific and evasive bug (was never the case thus far). are there people who would have otherwise been able to help, but just gave up (not necessarily due to lack of technical capabilities)? you bet. very quickly i started thinking ""there must be a better way"", for most cases, and worked towards it. similarly: can i setup the paths to find the required dlls to debug the qbittorrent executable in the build folder? yes. can many other people also do so? of course. do i or others want to do it, given that there is an alternative way that is simpler and sufficient for 99% of cases? no. are there people who would have otherwise been able to help, but just gave up (not due to lack of technical capabilities), and instead contributed their time and expertise to other foss projects that were easier to setup a development environment for? you bet."
839391094,14959,Chocobo1,2021-05-12T02:45:28Z,"just to be clear, the point is to test (run through) the install step of cmake script and ensure it is working. as for dynamic builds, maybe you could install to some temporary path to avoid caching them."
839400175,14959,Chocobo1,2021-05-12T03:13:07Z,"i think glassez is talking about the clear separation of building step and installation step: building step would only produce artifacts from code and installation step would gather all artifacts and dependencies and put them to a predefined path. [a link] you violated the separation, that is, gathering/copying dependencies at the building step. there could be a compromise for this: put the alternative behavior into a cmake module and place the module at `cmake/modules/contrib/whatever.cmake`. the ""contrib"" folder stands for user contributed scripts and is not actively maintained by the project. the alternative behavior is by default off and it would need to be enabled by an explicit cmake argument (`-dcontrib_whatever=on`). what do you think?"
839403919,14959,glassez,2021-05-12T03:24:27Z,":thumbs_up: :thumbs_up: yes, i insist that ""build action"" just builds by default. if you want some irregular behavior, add it as an option."
839414017,14959,glassez,2021-05-12T03:58:38Z,"sorry, your motivation is contradictory in some aspects. why do you oppose this ""feature"" to the process of building/installing dependencies? it's still required, isn't it? why do you reproach me with the so-called windows way, while you yourself suggest using command-line tools etc. (which is clearly not the windows way) even when it is possible to use gui tools (you even suggest not using the cmake installer, but configuring it manually). if someone can go through all the suggested steps of building/installing qbittorrent and its dependencies, then it's not at all difficult for them to enter another command to set the paths, is it? but as suggested above, if our community wants this ""feature"", we can provide it as an option."
839439194,14959,glassez,2021-05-12T05:06:30Z,"honestly i still see no valid reason to distort meaning of build action instead of just apply install action if you need exe and its dependencies to be installed in some location. you can even set build dir as installation target dir if you want, can't you?"
839775980,14959,FranciscoPombal,2021-05-12T13:32:56Z,"(if you are in a hurry, just read the last 2 paragraphs at the bottom, below the horizontal line/separator) :+1: seems like a reasonable stop-gap solution for now. ideally we would of course want to cache the dependencies needed for the dynamic builds as well. i think the best way for now is to make it an entirely separate workflow (e.g. ""ci for dynamic builds"") maybe github will increase the available space for cached artifacts in the future, so that this can be simplified. [a link] you violated the separation, that is, gathering/copying dependencies at the building step. it seems to me like these statements contradict each other. if there is supposed to be a clear distinction between ""install"" and ""build"", why is it suggested that i run the ""install"" step if i just want to build for debugging? the install step is not meant to be executed as part of the normal development cycle. no. building step should produce artifacts _and do whatever else is necessary in order for the executable to be usable for the build folder_. in general, on linux nothing else needs to be done. on windows, it means potentially gathering and copying in artifacts to the build folder. the purpose of the install step is to gather all artifacts for deployment for deployment on an ""actual"" install location, to simulate what will end up on the users' machine. of course, these need not be the same, in qbittorrent's case it just so happens that the artifacts copied are all the same. but suppose we started including the `readme.md` and `license` files as part of the installation; in this case, these files _wouldn't_ be copied as part of the build, but _would_ be copied as part of the installation, because their presence doesn't affect debugging in any way, it is only important to check that they would actually be deployed in the the `install` step. similarly, i have noticed `windeployqt.exe` also copies `vc_redist.exe` as part of the gathering of runtime dependencies; i assume it does this for convenience, in case someone needs to update/install it, but clearly we're not going to copy it in the install step. so as you can see, i actually agree with you that there is a separation, i just think you're not right when claiming that `.dll`s and other stuff should not be copied as part of the build step on windows - because if you don't, you're just shifting the workload onto the developer to do additional setup to get debugging to work. as i've shown by the link to the google search above, this is a practice that is widely expected. but if you want to argue ""those are just noobs"", then i refer you to this comment by the maintainer of cmake himself: [a link] (and really, that whole thread and related threads), if you are more receptive to that argument of authority. you should consider that you may be a bit out of touch here. why do you oppose this ""feature"" to the process of building/installing dependencies? it's still required, isn't it? as mentioned in the previous paragraphs, running the ""install"" step as part of the normal edit/compile/debug step is in violation of the separation of concerns that you guys champion. it seems to me you're implying the ""windows way"" is at completely at odds with the general and widespread use of the cli and cli tools on windows. this is no longer the case, if you look at what microsoft has been doing for a while now. in the past years they have made a great effort to provide better command-line tooling. if there's a gui on top of that to expedite certain common workflows, great, but the cli is no longer a second-class citizen on windows. look at powershell core, `winget`, `vcpkg`, wsl, the new windows terminal (and the resulting opensourcing of much of their core terminal infrastructure), and many other things. these are all part of improving the developer experience. the newbies who use the gui (and experts with a lot of muscle memory for it) can still use it, now the experts and power users who prefer the cli are also much better served. yes, it is possible. you can open the dialogs in visual studio or whatever to define the correct settings. or, with this change, you don't need to do it. it is also possible to define those settings, paths, etc. via the command line - again, with this change, you don't need to do it. this is not about gui vs cli. it's about having to do less work with _both_ by default. i said i _personally preferred it_, and others may as well _if_ they have certain special requirements. i did not say others _should_ do the same. you can also use the installer (the more ""windows"" way), and won't be worse off for it. if one can do math with an abacus, why do we need calculators? yes, this is an exaggeration, but the point is that in that sentence you're implicitly recognizing that there _is_ an advantage in implementing this change, but you don't want it essentially _because in your opinion he current status quo is not that much harder_. if it can be improved with no downside, why not do it? --- anyway, speaking of ""no downside"", let's look at this in practical terms: in what way does this new way of doing things impact you negatively? if you can provide objective reasons for why this breaks/worsens _your_ workflow, i can start to work on solutions with you. after all, i don't want to implement something at your- or anyone else's expense whose workflow would be disrupted by this change. but, if it's all the same to you, why prevent implementing _and enabling by default_ a feature that is clearly useful for many other people, and improves their experience? _if_ this disrupts your existing workflows in some way, this can simply be gated behind a feature option that is `off` by default, e.g. (`copy_runtime_deps_to_buildir`). it would be similar in spirit to the current `msvc_runtime_dynamic` option, no need to put it into a separate `contrib` directory."
839785785,14959,jagannatharjun,2021-05-12T13:46:20Z,"no one will run this step for a compile, debug cycle, it's would just add extra time. we would like to have ""build"" as fast as possible to do dev work, you're just adding extra unnecessary steps here. no, the building is literally mean building, not aggregating dependents that's an install step. nope it doesn't you only perform this one time when setting the environment, your solution will run with every compile run."
839797912,14959,FranciscoPombal,2021-05-12T14:01:49Z,"exactly. hence why copying of dependent dlls to the build folder should be done as an automatic post-build step. edit: also, having to set up paths and whatnot when first starting out also prevents you form building as fast as possible at first... look. i have provided _sourced, real-world examples_ contradicting this, including one from other big cmake users and developers. thus, at a minimum, i expect you to provide sources to contradict my claims, ""nope it doesn't"" isn't good enough here. also, in case you missed it, a small clarification, in case you missed it: building means that at the end of the process, running the executable from the output directory should ""just work"". on windows, there are 2 ways to make it ""just work"". either setup paths, or have your build tool copy the necessary dependents to the folder. i should not have to convince you at this point that the latter saves you work and keeps your setup simpler and more self-contained. installing entails gathering and copying dependents _and potentially other files_ (e.g. `readme`, etc) to a _standard system install directory_ (or one made to simulate it). is this supposed to be an argument about the performance of the post-build operation? because as you can see, my solution uses `copy_if_different`, so it will only be very marginally slower after the first compile. anyway, you are welcome to provide numbers substantiating a potential claim of measurable performance impact. even if, in a hypothetical absolutely worst case, everything was overwritten every time, it's just a few dlls in our case, it takes no time at all anyway. edit: if you want to contribute constructively to the discussion, please address this:"
839808094,14959,jagannatharjun,2021-05-12T14:15:04Z,"look i don't think none of the other active devs actually uses cmake, modifying paths is just how it works on windows and i don't have enough motivation for argument. so i would really like you to at least put this under a define, this way you won't have to bump the cmake version as well and will keep your intended audience happy. this feature can be useful for release builds but i really don't see much use of it in debug builds (for my case at least), also since it will become more ""smarter"" in cmake 3.21 why don't just wait until then it should be released in like 15 days."
839883151,14959,glassez,2021-05-12T15:50:43Z,_:copyright: francisco pombal. all rights reserved._
839976419,14959,FranciscoPombal,2021-05-12T17:49:50Z,"~big~ worrying if true, considering cmake is now the default build system for qt6 itself and qt6 projects. again, tell me exactly where and how this disrupts your current workflow and i'll be happy to do my best to accommodate it. ok, we're 50% of the way there! if you had actually tried this you would find that dependent artifacts are also copied in for `debug` builds, so that other ""50%"" is also probably useful to you. i'll just submit another pr in 15 days. very funny. i should have probably added a few more clauses to that statement, but it is certainly true in a wide range of cases, including ours. meanwhile you are arguing that things should be more difficult for no reason. again: --- funny, you guys have invested a lot of time into writing unproductive posts (in the sense that you're still not telling me how exactly this change harms your workflow; we can of course discuss ""best""/""common"" practices all day long somewhere else) and now outright mockery. again (this is getting repetitive):"
840100951,14959,glassez,2021-05-12T21:13:46Z,"well, for now, let's close our eyes to our rejection of the idea of copying dependencies to the build directory and turn to its implementation. i'm sorry, but i highly doubt both its reliability and its maintainability. try to change my mind. just please stop wasting your time and mine on some ""philosophical"" texts that you like to publish here. i'm interested in formal arguments. as for reliability. what kind of reliability can you talk about if you try to guess the names of dlls and the paths to them? such care is similar to the situation if you decided to help me open the front door, trying to do it with some improvised objects in the hope that one of them will still open the lock, while i could easily open it with my key. what if one of these supposed names matches, but it's the wrong dll? as for maintainability. this monstrous code doesn't look maintainable. what if we need to add another dependency? what about dependency dependencies? what if one of them adds a new dependency in the future? would your approach require too much care for it to maintain?"
840238895,14959,FranciscoPombal,2021-05-13T02:20:27Z,"but that is the most important point here. this method is widely used and very useful, as the links i've posted above show. i'd like you to point out how this breaks your workflow, besides arguing about maintainability and reliability. those are general concerns about any pr, i want to focus on the unique practical problems of this pr in its current state (of course, concerns about maintainability of reliability are 100% valid and important, i address them below, after the horizontal rule/line). in my last few posts all i have asked for are formal arguments, and i have provided links and sources to better substantiate my own claims. so i reject the claim that i've wasted anyone's time... this is such a common workflow and commonly requested feature, that the next cmake version will include a built-in method of accomplishing this in the next version: [a link] i recommend you read the linked issue comments if you want to see what other people have to say about this. after next version's release, i plan to try to adopt it immediately, as it it can greatly simplify the current implementation. but please don't take this as an excuse to not work on this now and wait for that; i'd really like to have at least something working asap. in fact, given the historical opposition to keeping up with recent cmake versions in this project (which can even be seen in this very pr once again already), i can't even think about what will happen when i propose _yet another_ bump in the span of only a few weeks, and for how long that will be stonewalled... in the meantime, i'd like to make this functionality available. in a way, you can think about the current implementation as ""insurance"". for your convenience, i post here a snippet from the newly added documentation about this future feature: the locations of all the ``shared`` and ``module`` targets in the target's transitive dependencies. using this generator expression on targets other than executables, ``shared`` libraries, and ``module`` libraries is an error. on non-dll platforms, it evaluates to an empty string. depends on into its output directory in a ``post_build`` custom command. for example: --- the current implementation finds the dlls based on the values stored in variables set by the `find.*` module of the libraries themselves (for example, `openssl_crypto_library` and `imported_location.*`). so this is as reliable as it gets, if you can't trust the values that the built-in `findopenssl` provides you with (or some other library that you're consuming, even if it doesn't have a built-in `find.*` module), you can't trust anything. what we're after here are the imported location properties, and then we just find the dll in `../bin` relative to that directory, because they use the classic unix-style installation layout. if the library you're consuming sets these incorrectly, that is a bug in either the cmake config file provided by the library itself or the `find.*` module you're using to find it. as for what is probably the ugliest wart, `zlib_names_list`: it was not made up by me. i simply copied all the possible names from the upstream `findzlib` module. i think this is sufficient - if it's good enough for the rest of the world, its good enough for us. i have tested this both with and without vcpkg, and it worked as expected in both cases, which is a good proof of reliability. i agree that especially the zlib part is ugly. but i had to work with what i had; i encourage you to go read the upstream `findopenssl` and `findzlib` modules to double-check what they make available to you. there are quite some differences between the two, but the end result is that it is much simpler to write robust code to find the dll with what `findopenssl` provides than `findzlib`. i'm convinced this is the simplest possible way to handle the information given by `findzlib` and find the `.dll` robustly, but if you have suggestions for improvement, i'd be glad to hear it. anyway, tucking this away in its own file as suggested above in a review will at least keep its ""monstrosity"" out of sight and more manageable. now, for more specific answers: best case: it is a ""good citizen"" like libtorrent, and we can just add `""$ ""` to the `add_custom_command(target qbt_app post_build command ""${cmake_command}"" -e copy_if_different ...)` call. medium case: we have to add code similar to the case for openssl (maybe even slightly simpler) worst case: code similar to the case for zlib. in practice, i don't expect we'll add any new dependency any time soon, and by the time we do, we'll have already transitioned to the simpler built-in way of cmake >= 3.21 that i plan to change to later. with the current implementation, we'd have to handle transitive dependencies ourselves. not ideal, but doable (i'd fully commit to doing that if were needed!). in practice, the only thing we currently use that has a bunch of transitive dependency dlls is qt, and that is entirely handled by `windeployqt.exe`. also, again, i don't expect we'll add any new dependency with transitive dependencies any time soon, and by the time we might do so, we'll have already transitioned to the cmake >= 3.21 method, which, as you can read in the documentation, handles transitive dependencies for you."
840409112,14959,xavier2k6,2021-05-13T08:32:58Z,"my own 2 cents in relation to bumping minimum required to cmake 3.20 should only be done when msvc 2019 officially/natively supports it & **it will** in the next update. (they may even go to 3.21) #### similar to when dependencies were bumped boost/libtorrent ref:[a link] serendipitously: `boost` can now be raised to `1.66` for libtorrent 2.0 series as ubuntu 18.04 support has now been dropped! (since 4.3.4) if cmake minimum is changed now, the wiki will have to be changed to reflect what needs to be done in order to compile from source for those of us that do it the `legacy` way ____ i think it would be more beneficial to update `appveyor` to msvc 2019 (seperate to this pr obviously) as it brings [a link] references: [a link] [a link] [a link] [a link]"
840477816,14959,FranciscoPombal,2021-05-13T10:47:41Z,"this is a very different case than bumping boost/libtorrent. i know i'm repeating myself, but: cmake is a very simple **stand-alone tool** to install separately (either with an installer or zip). just like other similar cases like ninja, nasm, etc. we should not have to wait until version x of such tools is bundled with some other software package y. i believe we can at least bump it to `1.71` even, since that is what is supported in 20.04: [a link] but that is off-topic here. i think you are confusing things. the ""legacy"" way is [a link] the ""new"" way is [a link] which has recommended installing the latest cmake version for some time now. i just looked at the wiki page, and i realize it's probably better to change the wording to reflect the fact that the installer is also a viable option and more than sufficient. again, off-topic, but i don't care about appveyor (or travis) at all. in fact, i've expressed my dislike for having to deal with many different ci services and maintain the scripts, their different syntaxes and software stacks. github actions is just better than both, and can do everything we would ever need. as for the (very legitimate) concern of vendor lock-in: i would argue that if we are ever in that position, it is easier to migrate to greener pastures if we only have to translate/migrate from a single service (and in the meantime, if we are really worried about it, we could take defensive measures, such as doing everything with shell commands, instead of using ""built-ins"" of the service or 3rd-party actions). not that i think this is a realistic concern anyway; i believe that fortunately, the industry is moving towards more interoperability and standardization in this field."
840724086,14959,FranciscoPombal,2021-05-13T17:49:32Z,"i have addressed all your review comments. still unsure what you ended up deciding about the `_list` rename, that's why i mentioned you in that review and did not mark it as resolved yet. ~now the only thing left to do is:~ ~which will be pushed shortly.~ done. i'll leave setting up a workflow for the dynamic builds for another pr though (unless you insist it should be done in this one). ~edit: actually, i just noticed i have [a link] left to address as well.~ deferred to another pr: [a link]"
840733187,14959,FranciscoPombal,2021-05-13T18:04:44Z,"since this pr is about windows builds and general cleanup, i think it's best to defer the investigation and resolution of that linux-specific problem to another pr. ~i also just noticed i forgot to factor out the new code into its own module, will do it shortly, sorry for that.~ edit: done."
840736324,14959,xavier2k6,2021-05-13T18:09:53Z,"i am not confusing things, i believe you are - hence why i said for those of us that do it the legacy way. i compile using that **legacy guide** [a link] & will continue to do so in future.......your cmake bump will have a negative impact (from what i can see & i'm open to correction on this) for how i choose to compile from source........i will be ""forced"" to add extra steps (which as i suggested will have to be documented on the **legacy guide** wiki) to how i choose to do things while compiling or wait for msvc 2019 16.10 to be released officially or use a ""preview"" version. one of the reasons, i choose to compile via **legacy** is the fact that the new way via vcpkg isn't always ideal as seen with libtorrent port not having latest commit....boost 1.76 & even qt 6.1.0 still isn't officially available via vcpkg etc. etc. (wip, i know!) why then have you created a pr to update appveyor on libtorrent to msvc 2019 & a cmake improvement there also but only bump it to **cmake 3.17**? (why not go to cmake **3.20** there?)"
840772725,14959,FranciscoPombal,2021-05-13T19:11:34Z,"no, it is you who are confused, but now i understand why. legacy way == ""building with qmake/autotools""; new way == ""building with cmake"". it has nothing to do with whether the builds are dynamic or static. this pr simply improves the installation code for _both_ static and dynamic builds when building with the ""new way"", and improves the build/post build for dynamic builds in the ""new way"" as well. [a link] did _not_ become legacy. dynamic builds that ""just work"" are now a viable alternative, that's all. you'll notice that there is a stub on the wiki home that reads `windows (msvc 2019, dynamic linkage) todo`. it has been like that for a long time, but after this is merged, i plan to write it up :). as for the extra steps: the existing guides have always recommended using the latest available cmake version, so that's not the case. and even if it were, the steps are trivial: just run a simple installer, or unpack a zip and optionally add to `path`. there is no reason to rely on the version of such tools bundled with other software suites, be they vs, qt creator, etc. again, ""legacy way"" has nothing to do with whether you use `vcpkg` or not. when testing this out, i used both `vcpkg` and a full stack of manually compiled dependencies. no one wants to ""deprecate"" building qbittorrent without `vcpkg`. is this some veiled accusation of hypocrisy? the reason was because it was a prerequisite/blocker to something more urgent that i wanted to solve. i chose to be pragmatic and just deal with the path of least resistance. you should judge the reasons for bumping the version _in this project_ on its own technical merits, not resort to such whataboutisms about how things are done in other projects and why. the time we all have collectively wasted arguing whether cmake versions should be bumped or not and how ""inconvenient"" is is to update must be worth around 1000 lifetimes of installing/updating cmake by now."
840807944,14959,xavier2k6,2021-05-13T20:17:07Z,thank you for expanding on your reasoning & alleviating possible concerns i have. certainly not!! i could've rephrased it more appropriately to something like can you explain your reasoning or how come that's done differently there than here. etc. it was meant merely as a request for myself to have a better overall understanding of this project & it's dependencies/how one differs to the other or how there may be compatibility issues like compiling one with c++14 & another requires c++17 - where both should be compiled with same version etc. (hope i've expressed what i mean correctly??) i'm not insinuating/implying or attacking anybody here directly/in-directly - let's be straight about that. (if i wanted to call you out as a hypocrite - i'd call you straight out!) i'm merely having a dialogue to better understand.....end of. (to me this is a healthy thing) i'm in no way intentionally holding up this pr from being merged........my questioning etc can easily be dismissed by other members who have merging abilities etc.
840836761,14959,FranciscoPombal,2021-05-13T21:10:37Z,":+1: no problem, it became clear to me that it was just an honest misunderstanding about what ""legacy"" meant. i appreciate your understanding and honesty (especially this part: ""(if i wanted to call you out as a hypocrite - i'd call you straight out!)"" :)), and i must apologize - the presumption of guilt is 100% on me. it's just that this pr has generated a much more drawn-out and heated discussion that i'd hoped for. i have also been arguing the same exact points over and over for a long time now, and i'm tired of that: that this pr in no way impacts existing workflows (and if it did, that i'd be more than willing to resolve that issue); and that the qol improvements that i argue about are valid and shouldn't be dismissed by others just because they are used to a different (also valid) way of doing things. fortunately now it seems that the conversation has become much more productive - some legitimate concerns about reliability and maintainability were raised, which i have addressed. and i'm ready to address any other such concerns that pop up. i also had time to address the initial (and very welcome) review. :+1: you are of course well within your right to complain and suggest improvements if you think some other person (such as me) posts a pr that would very negatively impact your (and others') workflow. this is not the case here, and i understand that you just misunderstood the situation. what really bothers me is when someone (this is not directed at you now, it's in general) argues that requiring such a thing as a trivial update to some tool like cmake, ninja, nasm, etc as part of a pr is a huge deal-breaker for otherwise very tangible real-world benefits, and suggest waiting x weeks/months/years as an alternative just because they refuse to do a simple task of toolset maintenance, which is the developer equivalent of a mechanic not caring for- and not replacing their broken screwdrivers and wrenches. these things shouldn't have to be uphill battles every time."
840845496,14959,FranciscoPombal,2021-05-13T21:27:45Z,"about this force push: passing `--no-angle` to `windeployqt` fixes a potential build failure with qt5 (for example, when using vcpkg). `angle` is a purely optional runtime dependency that we have no use for at all, and this workaround won't be needed anymore in qt 6. see [a link] for more info."
845085424,14959,sledgehammer999,2021-05-20T12:50:25Z,"i agree with the first comments of and . a build step should just build the source and give out the executable. dependency gathering/installation should be done by another target which is requested by the user (eg `make install` or `make package` or `make install_deps`). the standard way of doing things is for `make` to just build the executable. nothing more nothing less. a developer is expected to know about setting up library search paths for his dev environment (ide or cli). if the purpose is to make it easier for newbies to get started, then maybe make it a separate explicit option like ""gather deps"" or ""modify path to include dependencies"". and to be frank, i am not entirely convinced we should go out of our way to ease the newbies for this particular problem. if a newbie doesn't know about lib search paths i really doubt that he will be able to contribute meaningfully in the codebase. if he can navigate the codebase, find the correct place to fix a bug and actually being able to code it, then there is very much high chance that he understands about lib search paths. lastly, one problem i can see with copying the deps is: for example, user builds newer libtorrent but his build continues to use the copied old version and he wonders why he can't see the fix that is in the new libtorrent. for all the above i assumed that means that the post-build step is done automatically after each build and it doesn't require any other action from the user"
845123305,14959,FranciscoPombal,2021-05-20T13:30:08Z,"thanks for chiming in on this. yep. also, cmake automatically copies the files if they are updated (that's the whole purpose of `copy_if_different`). so the following is not really a concern: ok, i don't know what to say anymore. this is not just ""to help newbies"". many actually expect that their windows build system copies the necessary runtime deps to the build folder, so that the build folder becomes equivalent to a user installation. i have posted multiple links showing that. check out the multiple links i posted above corroborating this, including the links to the cmake issue tracker posts where even one of the lead cmake maintainers (clearly not a ""newbie"") states this is the way they do things ([a link] and an upcoming feature in 3.21 is focused on improving this exact workflow ([a link] it seems many people here are just used to a single way of doing things, and can't accept that other people prefer another way. and i really don't understand the attitude of ""this does not affect me at all, but i still don't want this implemented even though it benefits a bunch of people"". even for me it is more convenient when building on a new vm/machine where i might not already have everything set up the way i like. however, since there is so much opposition to this, i'm willing to compromise on gating this change behind an option which is _disabled by default_, as you suggested: would you accept that then?"
845160470,14959,glassez,2021-05-20T14:13:00Z,"implementing it as an option was suggested you at very beginning of this pr discussion so it's you who ""can't accept that other people prefer another way"". a bit of sarcasm: i wonder how people have been developing on windows for several decades and haven't suffered from this problem... or until this time, there was no such brilliant developer who would fix it in this way? (the questions are rhetorical, so you don't have to answer them.)"
845196122,14959,FranciscoPombal,2021-05-20T14:57:30Z,"not quite, this is what i said: so far no one has told me if/how this disrupts their existing workflow, so i considered going the option route redundant and wasteful. i have repeatedly said that i'm more than willing to work out solutions to any possible disruption. i don't think there is any point in insisting further though, maybe something is getting lost in translation - if gating this behind an off-by-default option is the only way this is getting this in at this point, then so be it. you wouldn't have to ask these questions (rhetorically or not) if you had checked out the links that i posted earlier. but that doesn't matter now, lets wrap this up... any suggestions for the name of the option? personally i prefer the first one, it is only shown if the user is compiling for windows (either msvc or mingw) anyway, so i guess including `win`/`windows` in the name is redundant: - `copy_runtime_deps_to_buildir` - `win_copy_deps_to_builddir` - `win_copy_runtime_deps_to_builddir`"
847076677,14959,FranciscoPombal,2021-05-24T14:21:52Z,"ping, just need some final input to make the final changes (gating this behavior behind an off-by-default option) and get this ready."
847082815,14959,glassez,2021-05-24T14:31:41Z,"`copy_runtime_deps_to_buildir` is the best of the suggested options. `win_` is unnecessary, because this option is still not available on other platforms."
847093205,14959,FranciscoPombal,2021-05-24T14:48:19Z,"thanks, done. also reworded the commit description for the relevant commit."
848569988,14959,xavier2k6,2021-05-26T08:19:36Z,"**msvc 2019 16.10.31321.278** has been officially released now, it **includes cmake 3.20**"
852361123,14959,FranciscoPombal,2021-06-01T18:45:31Z,all done.
854742255,14959,glassez,2021-06-04T13:56:20Z,qt still ships cmake 3.19.
854744792,14959,FranciscoPombal,2021-06-04T14:00:06Z,is that supposed to be a blocker for this?
863164211,14959,glassez,2021-06-17T11:35:20Z,"yes, of course. or do you think it's acceptable to bring convenience to someone at the expense of causing inconvenience to someone else? there is nothing critical if this pr waits until qt installer provides cmake 3.20."
863269317,14959,FranciscoPombal,2021-06-17T14:06:08Z,"or do you think it's acceptable to bring convenience to someone at the expense of causing inconvenience to someone else? there is nothing critical if this pr waits until qt installer provides cmake 3.20. are you seriously complaining about the ""inconvenience"" of installing cmake 3.20? it is no inconvenience at all, either run a simple installer or extract a zip and add executables to `path`. imo, someone's unwillingness to do something so trivially simple as using an up-to-date cmake version should not come before the benefits that using such version brings for everyone else. i would understand your position if cmake were difficult/painful to setup correctly standalone. for example, i quite appreciate the fact that the qt installer provides pre-built openssl binaries, which are a pain to build from source on windows (although using vcpkg can ease that pain a little). but this is not the case for cmake at all, so you should not depend on the qt installer (or any other 3rd party tool, android studio also comes to mind here) for your cmake installation, you should take care of it yourself. edit: also you could install cmake 3.20 from the vs installer..."
863286310,14959,glassez,2021-06-17T14:26:14Z,"i was sure you'd say something like that. so i didn't want to say anything to your previous comment. but the interest to confirm my guess prevailed. just do the same with qbittorrent runtime dependencies and let's bury this ""feature"". otherwise, please just wait until qt installer updates the cmake version."
863287125,14959,glassez,2021-06-17T14:27:16Z,does vs installer provide ninja as well?
863517654,14959,FranciscoPombal,2021-06-17T19:48:22Z,"yes, and currently it is even the latest version (`1.10.2`). the package name is ""c++ cmake tools for windows"" i think."
863525051,14959,FranciscoPombal,2021-06-17T20:01:29Z,"and i, in turn, was sure _you_ would say something like this, perhaps thinking that you've successfully ""trapped"" me with that false equivalency. it is amusing (or maybe just sad) that you think the ""trouble"" of installing cmake the normal, trivial way somehow even comes close to ""cancel out"" the benefits provided by this pr. it is truly amazing (and definitely sad) how difficult it is to add features that improve automation of common development tasks in this project, to improve developer ux among other things. also, as i have said before: making installation easier makes it easier to implement it in ci, as well as automated packaging. you seem to think i'm some kind of crazy person for wanting stuff like this, but other people have similar ideas and wishes: [a link] but no, by the looks of it, we'll be doing un-auditable, manual releases on an unpredictable schedule and with an at best partially documented process well into the 2030's."
864377396,14959,glassez,2021-06-19T08:46:38Z,"_it seems that your problem is that you never doubt that you are right, and when your opinion is questioned, you do your best to find evidence that you are right. often it comes down not to formal proofs, but simply to searching for like-minded people and quoting them, etc. if i'm right, and this is true, then let's just end this discussion and everyone will have their own opinion. (because you don't care about mine, do you?) if the above is not valid, then let's try to continue._ **i'm really trying to find proof that this is a really useful thing** (although you may not believe me). that's how i understand it. to begin with, ""copying all dependencies to the build folder on each build"" instead of ""one-time setting of environment variables"" is inherently irrational. even the fact that the actual copying does not happen every time, but only after checking the files for changes, does not cancel its irrationality. after all, doing something (quite trivial for someone who decided to build an application) once looks much more rational than doing something with each build! of course, you will object that the user have to manually set the environment variables, _which is extremely difficult, etc._, and the copying is performed by the build system behind the scene and does not bother the user. but, as i mentioned in passing above, this should not be a problem for a user who decides to build an application on his own for the purpose of testing and debugging it, otherwise his mental abilities cause great doubt that he should do this at all. and besides, it does still bother the user, if we are talking specifically about the developer, as users of the build system, who can invoke the build quite often, so even a few extra seconds that it will spend each time checking/copying dependencies can greatly irritate him. (the above gives me enough reason to make this feature at least optional and disabled by default.) let's move on... well, maybe it has some other advantage that could offset its shortcomings? we'll see... could it be this? it does ""make installation trivial"" by simply moving the execution of all non-trivial actions from the installation step to the build step! this is obviously illogical, because the build step is performed much more often than the installation step, and most of the build cases do not imply further installation (if we are talking about developers workflow). in addition, it is not clear why it is impossible to still have this non-trivial logic where it is really required (in installation procedure)? sorry, i didn't find any proof why copying runtime dependencies to a single location **exactly at the build step** makes the installation process easier. this does not apply to this topic at all. no need to abuse it. i really like the idea of an automated build, so releasing the next version would just be adding a tag to the repository. what i don't like is the way that is suggested in this pr."
864569453,14959,FranciscoPombal,2021-06-20T15:14:07Z,"wrong :) yes, i substantiate my arguments. that's a bad thing? you keep insisting on some vague notion of ""formal proofs"" in contexts where it does not make much sense. this is not a mathematical discussion. this is about conventions and making development experience easier. in some cases (such as this one) substantiating ones position by showing that many others do the same thing **is** the ultimate form proof that you need. unless you are doing some really weird/novel thing (which is not the case for qbittorrent, it is a relatively simple gui download manager), it is a good thing to do certain things the same tried and true way that others do it. see [a link] of course ""many people do it x way, so we should also do it"" is a very dangerous way to think _in general_, and i'm sure you agree with that. but, in this case and others, it is a good thing to do the ""standard"" thing and/or the thing that many people request to be done a certain way. i do care about your opinion, otherwise i wouldn't bother engaging with you. it is valuable to engage with people with different perspectives. i believe you. the thing is, you seem to think i'm trying to convince you that this is a ""really useful thing"" _for you_. that is not what i'm trying to do. this might in fact never be useful _for you_, and that's completely fine. you might also find in the future that this turns out to be useful for you and that's fine as well. what i'm trying to say is that this is useful for many others (and i believe i have provided enough evidence of this), while not breaking _your_ existing workflow. i'm not trying to convince _you_ that this will change your life. what i have trouble understanding is your opposition to something that can clearly benefit many people while not impacting you at all. from a utilitarian perspective, it is a clear-cut improvement - it has an upside and no downside. and no, i don't thing requirink a simple upgrade to cmake counts as a downside - if you do, i guess we just agree to disagree here. everyone has to have cmake installed and updated anyway. i probably wouldn't even have considered submitting a pr if the changes i proposed implied telling a bunch of existing contributors/team members ""hey, remember how you used to do things? well from now on you'll have to do it this way"". a big selling point of this pr imo is that no one is forced to do anything any differently. you keep centering your argument around ""my preferred way of doing things is not difficult, so the others are invalid"". this is very obviously not about sufficient mental faculties. of course anyone could do it your way. it's just that clearly many people _prefer_ to do things another way. the reasons for this can be various, and if the implementation does not impact you negatively, why stop it? for example, consider the case of users who are involved in many different projects - they might not wish to deal with an env var jungle in their systems, and might prefer to have each project more self-contained rather than have them leak stuff to the system's environment. or even just dealing with environment variables at the project level - some just appreciate the convenience of not having to fiddle environment variables, the build system does the tedious work for them. now this is an instance of an argument that _does_ require ""formal proofs""/hard data to substantiate - extraordinary claims require extraordinary proof. the burden of proof is on you to supply profiling data showing how this adds ""a few extra seconds"" (a simple average of three `$ time cmake ...` runs or equivalent should be enough to get started). this is absolutely not something that adds ""a few extra seconds"". this adds a few milliseconds _at worst_. absolutely no one will notice it. again, i believe i've shown how the shortcomings you mentioned are nor really there (except for ""forcing"" you to update cmake, which again, we can agree to disagree on that one). and, more importantly, i've clarified how this does not impact your workflow, while being useful for others and that _i'm not trying to convince you (or others who prefer other workflows) to switch to this workflow_. the thing is, cmake is moving towards making it trivial to do this way. consider that in the new native feature that they are introducing in a future version, the use case i describe is exactly the example use case shown in the documentation: [a link] this is convenient for many people. as for non-trivial logic: again, once cmake releases the new version with the `target_runtime_dlls` genex, it will be possible to significantly simplify the code. you can be sure that i will submit a pr doing just that once that is possible (although you'll probably block it until vs/qt includes the new updated cmake version... seriously man, just install it the regular way...). i wish i had a good example at hand of how this in turn makes installation easier from some experiments i made, but i can't seem to find them right now... regardless, you'll be able to see it once i submit such a pr... for now, feel free to ignore this argument about ""making installation easier"", my above points stand on their own just fine and are enough to justify this.."
864569961,14959,FranciscoPombal,2021-06-20T15:18:00Z,"i can assure you installing cmake with its own installer (or zip) is even more convenient, and means you're no longer dependent on a 3rd party bundling the most recent cmake version. it never did in any reasonable way. you were creating your own problems (incompatible cmake version) by refusing to install the most recent version the standard way, instead of through a 3rd-party bundle."
864570663,14959,FranciscoPombal,2021-06-20T15:23:01Z,"small note: this is already the case, i have already agreed to this. this feature is gated behind the _optional, disabled by default_ `copy_runtime_deps_to_buildir` option, as discussed previously."
864584646,14959,glassez,2021-06-20T17:11:23Z,"to remove the issue of installing cmake once and for all, i will say the following. until recently, we (the developers of qbittorrent and myself) had no need to have the latest version of cmake, since we used only the main features that have been available for a long time. and although i initially used the original cmake installer (and i had to install and configure ninja manually, since it still doesn't have any installer), but i switched to using the qt installer for this, as it was much more convenient, because it took care of most of the tools i needed. naturally, i did not like that i had to lose this convenience in favor of some dubious feature from my point of view (besides, it only required its delay, and not complete rejecting so no one should have been hurt too much). most likely, i will still have to return to native installers, since you are predicting an ""incredibly bright future"" for the project, the onset of which requires the use of the most advanced cmake innovations. well, we'll see... in reality, i will start taking this seriously only when our build system learns how to create an installation package for windows (for a dynamically linked application as well)."
864637219,14959,FranciscoPombal,2021-06-21T00:23:05Z,"you say this as if this is simply a matter of ""needing"" the latest version or not, and as if ""we used only the main features that have been available for a long time"" is a _good_ thing/good practice/somthing to be proud of, as opposed to taking advantage of all it can offer you. i hope to convince you this is not the case. cmake is one of those pieces of software where by convention, everyone _should_ use the latest version, always, as soon as possible. this is feasible to demand since it is very easy to install and keep updated. other such minuscule ""inconvenience"" of installing it, there is no downside: - cmake has a very strong commitment to backwards compatibility via the policies mechanism. furthermore, regressions in new versions are incredibly rare thanks to their extensive test suite, and when they do happen, it's with some super obscure feature that is almost not used by anyone. - if this convention is followed, you can always iterate fast on the build system scripts and never worry about using new, better features that are introduced to make your life easier. this also prevents ""ossification"" of the build scripts. fair point about having to install the ninja binary manually. fortunately, it's just one small executable. and there is yet more light at the end of the tunnel: hopefully all this nonsense will go away once `winget` becomes more widespread and integrated into windows and finally brings it to the 21st century in terms of software installation management. this is closer than you think :)."
864776355,14959,glassez,2021-06-21T06:51:58Z,it was just a statement of fact. no need to look for hidden subtext there.
864779673,14959,glassez,2021-06-21T06:58:32Z,"i've been thinking about `winget`... but it will be ""yet another third-party installer"", which can only be a barrier if you want to have the latest versions of the software as soon as possible."
865246721,14959,FranciscoPombal,2021-06-21T18:19:17Z,"i see that i assumed too much, my apologies. i though it was an attempted justification for staying behind. no, that's scoop, chocolatey, and friends. i've got good news for you: microsoft is really serious about `winget`, just like they are serious about other recent projects like `vcpkg` and the new windows terminal. in fact, the upcoming windows 11 will ship _by default_ with the new windows terminal installed, and `winget` recently had its 1.0 release. the days of hunting for installers online or using 3rd party installation management tools on windows will finally soon come to an end..."
865250370,14959,FranciscoPombal,2021-06-21T18:24:48Z,"all done, any further comments?"
865269130,14959,glassez,2021-06-21T18:57:55Z,"note that i would not have approved it so easily if this feature was of my personal interest. its implementation may raise a number of questions. but let those who intend to actually use it worry about it. fortunately, it should become more reliable when cmake implements `target_runtime_dlls`."
865283442,14959,glassez,2021-06-21T19:19:17Z,"fortunately, cmake does not force anyone to ""copy runtime dependencies to the build folder"". it don't even implement such features as optional one. all it does is make someone be able to get a list of such dependencies. this approach deserves my respect."
865342056,14959,FranciscoPombal,2021-06-21T21:03:35Z,"of course, but the fact that the example usage of the feature the official docs show is exactly the workflow that i describe should at least make you pause and ponder about its merits..."
874150041,14959,FranciscoPombal,2021-07-05T14:19:01Z,any further comments? this is ready.
881576383,14959,glassez,2021-07-16T16:37:33Z,"well, cmake 3.21 is [a link]. so i would like to see how you get rid of the existing crutches using `target_runtime_dlls` expression."
885735879,14959,xavier2k6,2021-07-23T15:55:45Z,also ref.: [a link]
894793790,14959,Rootax,2021-08-08T12:56:58Z,"btw, how long is the linking against qbt_webui.lib supposed to be when we follow your (incredible) wiki ? on a 10920x, it's at it for more than an hour now... but no error so i let it run for now.. edit : my bad; the wiki is working great, i messed up something..."
894803676,14959,glassez,2021-08-08T14:10:27Z,doesn't seem to be correct...
942163003,14959,xavier2k6,2021-10-13T10:35:52Z,"i know there was concerns that qt still only shipped `cmake 3.19` at the time & msvc 2019 didn't have native support for `cmake 3.20` until `16.10.31321.278`. should we revise this update plan & perhaps implement 2/3 of these commits in a new pr: [code block] 1. update to `cmake 3.19` now. (""# todo: migrate to checksourcecompiles in cmake >= 3.19"") 2. when releasing official qbittorrent with `qt6` support (sometime next year probably...2nd lts march 2022) bump to `cmake 3.21` **msvc 2022** which will be **ga ~november 8th** & is `64-bit only` currently comes with `cmake 3.21` (**rc**) _____ **qt docs seem to suggest we use `cmake 3.21+`** at least for `qt6.2+` reference: [a link] _____ build tools tool | supported versions | description -- | -- | -- cmake | version 3.16 and newer (3.17 and newer for -debug-and-release builds 3.21 and newer for -static builds). | required for configuring the qt build. available in the qt online installer and on cmake.org. reference: [a link] ____ ### system requirements **all desktop platforms** - cmake (>= 3.16, >= 3.18.4 for ninja multi-config, >= 3.21.1 for static qt builds in qt 6.2+) reference: [a link]"
392993248,9007,wesleybl,2018-05-30T00:37:58Z,if i remove the disk where the torrent was downloaded and start the qbittorrent what will happen with the percentage completed? will keep 100% but will indicate error?
393031892,9007,glassez,2018-05-30T05:07:02Z,", well, great job! although, it requires more changes. 1. we need to return the correct components loading sequence (startuptorrents should again become a part of the initialization of the session, and not be called from outside). 2. torrent-manipulation actions (e.g. add torrent, delete torrent) should be unavailable (or maybe queued) until session is fully initialized (i.e. resumed all torrents). 3. we no need more two signals (torrentadded/torrentnew) since it will indicate the same event. 4. some gui components should be disabled until session is fully initialized (or unavailable in some other way, e.g. we can show no gui or show progress dialog)."
393047815,9007,Chocobo1,2018-05-30T06:41:53Z,"i agree with the idea, making it unavailable seems simpler. since this is an interactive program, displaying no gui would be a bad choice. *if feasible*, i would choose to ready the mainwindow as early as possible (modern browsers startup time is impressive!) and let user know program is still initializing: could be some text in statusbar, or display the torrent jobs initially as ""not yet loaded"" and transition to other ready state (paused or downloading) when it is loaded."
393050725,9007,glassez,2018-05-30T06:55:24Z,"session doesn't emit signals for resumed torrents in changed code, only one startupfinished signal, and i really like this idea."
393062538,9007,glassez,2018-05-30T07:42:31Z,"we still need queuing at least for ""add torrent"" action since the application can start with torrents specified in command line. of course, we can implement it outside the session."
393381971,9007,sledgehammer999,2018-05-31T02:30:23Z,"i addressed some of the comments in my 3rd commit i pushed 2 new commits. now the initial loading of the torrents is done in a separate thread. however, for me, the mainwindow still takes quite a few seconds to draw its contents. the initial blank/white window is drawn quickly. the widgets are taking quite a few seconds. the 2 new commits were written rather hastily with not enough testing. so rip them apart in the review."
393402683,9007,Chocobo1,2018-05-31T04:59:23Z,"haven't tried this pr yet, (for you) does it still take seconds to draw the gui even when there are no torrents?"
393549003,9007,wesleybl,2018-05-31T14:28:57Z,i would like to test this pr in windows. if i do: [code block] on linux and copying the files to windows will work?
393563171,9007,wesleybl,2018-05-31T15:11:20Z,"in fact, i've seen it's more complicated than that: [a link] i'll try it on linux."
393567335,9007,sledgehammer999,2018-05-31T15:23:45Z,no. linux binaries can't work on windows and vice versa. in any case i have prepared a windows build of this pr. use at your caution: [a link]
393578389,9007,wesleybl,2018-05-31T15:51:37Z,[a link] it didn't work on my windows 8.1 32 bits. is there a 32 bits version?
393650112,9007,sledgehammer999,2018-05-31T19:28:39Z,here's a 32-bit build: [a link]
393920748,9007,wesleybl,2018-06-01T15:43:11Z,"i did the following test with [a link] [code block] in this situation i do not think the percentage should be 0%. as the disk is not there, qbittorrent does not know if i deleted the file. if i connect the disk without stopping the qbittorrent and clicking ""resume"", it starts downloading the file from scratch. but the file is already there. if i stop the qbittorrent before connecting the disk, it recognizes that the file is there and maintains 100%. another test i did: [code block] it doesn't download the file again. what a breakthrough. but i should indicate i/o error only once. another: [code block] this is expected behavior. awesome! great work! thank you!"
393936371,9007,sledgehammer999,2018-06-01T16:33:03Z,"the 1st and 3rd test are essentially the same. in the point of view of the program, files are unavailable. libtorrent doesn't differentiate between disk not reachable or files not there. the progress stays 0% because at that point the ""torrent job"" is in an undetermined/undefined state. it needs both the files and the fastresume to indicate the progress. the 2nd test is again limited by what libtorrent does. libtorrent in the same session thinks that torrents are there even if they were deleted. any failure is interpreted as a read error that might go away after a while."
393943696,9007,wesleybl,2018-06-01T16:59:23Z,"i did the first test because i usually remove the external disk to copy files from it to another place, but i want to start qbittorrent to seeding files from other disks in the meantime. when i connect the external disk again, i want to continue seeding the torrents that are in it without having to check the files again (imagine that there are many torrents on the external disk).i think the qbittorrent would ideally indicate that the files are not there but keep 100%. so when i connect the disk i would only need to start the torrent with error, without it checking all. anyway, i can solve this problem by stopping the qbitorrent before connecting the disk. in the 2nd test the qbittorrent could be stop the torrent the first time it detected an i/o error."
393990985,9007,sledgehammer999,2018-06-01T19:50:23Z,"we may be able to implement a workaround. when user presses ""resume"", we could (behind the scenes) remove and re-add the torrent job so libtorrent can check again the fastresume and the data on disk. the only downside to this is that the torrent will probably lose its queue number."
394088052,9007,wesleybl,2018-06-02T13:35:09Z,"what is fastresume? how long does it take for each torrent? how will this influence deleted files? for example: [code block] what will happen to the torrent that had the files deleted? ideally, it should go to and state ""stopped"" and do not start the download. this would be an unusual situation. so i do not care if the queue number is lost."
396127415,9007,coolio2013,2018-06-11T05:37:34Z,"about [a link] on win xp-32: please rethink behaviour to disable the gui. rechecking takes time, especially big torrents on network shares. torrents with previous status 'paused' (set manually to avoid recheck) and dirty from previous crashes will be rechecked at startup of qbt. nothing you can do, since the gui is all disabled. log says `fast resume data was rejected for torrent {payload} fast resume rejected. check resume(): missing or invalid 'file sizes' entry. checking again...` process-monitor reveals that qbt does communications with other peers (i can't see checking itself). fastresume-files are not rewritten (same time/date for over 8hours) after start; some torrents should have completed recheck meanwhile. so the status remains and they will be rechecked again at next start, if qbt crashes or if i kill it now. this will repeat forever. qbt will become completely useless. please consider that."
402568993,9007,harrv,2018-07-04T22:51:56Z,"i'd really like to see this pr merged. when i use the file system to delete or move a file that i had been seeding, i never want it to be re-downloaded. i'd prefer to see an error in the client and then decide if i want to remove the affected torrent from the client or change that torrent's file path. i got used to the beauty and simplicity of that workflow when i used utorrent. is there anything i can do to help with the pr merge process? thank you very much for your code changes to resolve this. have you seen the review from on june 2? the requested changes look minor. is that the only thing holding up merging this pr? edit: i tried 's alpha (64-bit) and had the same issues as . every time i try to start the application, it appears hung. i'm seeding about 90 torrents. i waited more than 15 minutes and saw no change. that should be addressed before this pr is merged."
402606668,9007,glassez,2018-07-05T04:59:49Z,the requested changes are prerequisites for the main review.
403529201,9007,glassez,2018-07-09T15:57:48Z,"if feasible, i would choose to ready the mainwindow as early as possible (modern browsers startup time is impressive!) and let user know program is still initializing: could be some text in statusbar, or display the torrent jobs initially as ""not yet loaded"" and transition to other ready state (paused or downloading) when it is loaded. i've been thinking a lot about this problem lately. and i've come to the conclusion again that those disruptions to the natural sequence of initialization of the components with that you guys are trying to solve this problem can't lead to anything good. we will only get a lot of logical errors and unmaintainable code! the sequence should be in used-using order (as i said many times before). at global it should be as the following: 1. core components 2. ui and remote access components but is right too, the qbittorrent is ""interactive program"" (in gui mode) so it would be incorrect to leave the user without a response for a long time. however, this does not mean that we must break the right order. why should we display the main window immediately if it can't do any good at this time?.. i suggest another option (similar to other long-loaded programs): we just show the splash window (with some initialization related messages) until the application is fully loaded. tray icon can also be showed but it shouldn't provide any controls during application loading."
404703731,9007,tehmasterer,2018-07-13T02:06:33Z,"ugh... i thought this was fixed with the 4.1.1 update but it wasn't. i launched qbittorrent last week and i got all these i/o error pop notifications because my external drive wasn't connected. i noticed it switched all those torrents to resume so i quickly paused them. today i connected my drive and a few of my completed, paused torrents, started overwriting. if a torrent is completed but it can't find it, can it just say 100% and stay paused? the overwriting is an absolute nightmare. also some torrents have to be rechecked after i connect my external drive, even though the save path is the same. this is annoying for seeding."
404747255,9007,glassez,2018-07-13T07:12:37Z,", i have an idea (i need to test it). what about restoring completed torrents in ""seeding mode""? this should prevent it from being rechecked. but i need to test it in different use cases (e.g. when torrent was downloaded partially and then user want to download some more files)."
404751056,9007,sledgehammer999,2018-07-13T07:30:53Z,"fyi, i'll be able to resume this pr either today or the weekend. this sounds like a solution too. but you'll need to inspect the resume data yourself to determine the status. plus, you need to check for paused torrent instead (non-completed ones can have the same problem)."
405100038,9007,sledgehammer999,2018-07-15T15:44:57Z,pr rebased and review comments addressed. this signal is only used in the mainwindow in order to display a tray notification for **newly** added torrents.
405105470,9007,glassez,2018-07-15T17:24:48Z,"but the torrentadded signal is emitted only after start up process is finished, i.e. for **newly** added torrents only, so we no need the torrentnew signal, isn't it? just connect its slot to torrentadded signal."
405112157,9007,sledgehammer999,2018-07-15T19:23:01Z,"i see. yes, this probably will work."
411792209,9007,sledgehammer999,2018-08-09T15:10:55Z,"i did a minor pr update. because the modules are so interconnected we need to serialize some actions in the startup. until the torrents are loaded, new torrents can't be added. this also preserves the order of the loaded torrents. so rss and webui are started when the torrents are loaded. the mainwindow disables all other entry points (include the search tab). i investigated if there was an easy way to do it inside `addtorrent_impl()` but i couldn't. this also affects the order we connect to `startupfinished` signal. the application needs to be last to react. it is the one that initializes rss, webui and enables all the elements of mainwindow. the order of current code is preserved. also, theoretically, widgets draw their contents quicker if they have received **all** their data while they were hidden. (eg transferlist with hundreds of torrent entries) that's why i call `mainwindow::setenabledwidgets()` from `application::handlestartupfinished()`. `m_sessionstarted` is a guard inside `mainwindow::setenabledwidgets()` and i can't think of a way to eliminate it and make use of `session::isstarted()`."
412287418,9007,glassez,2018-08-11T16:51:50Z,", unfortunately i can't say that i approve this pr in its current form. it's more like a rough workaround (in terms of its design). however, as i see it, it takes away from you the resources that are already missing for full maintainence of the project. so you are free to merge it if you think its purpose is achieved (from a user point of view, closing our eyes to its implementation) in the hope that we will polish and improve it in the future. but i would make upcoming release asap (without this pr) and then merge it immediately so we would be able to test it thoroughly and fix/improve it before the next release. p.s. have you ever thought of having an additional release manager? this could help to make releases on time. it is a very hateful situation, when hotfixes ""rot"" in the master for several months while the bugtracker is filled with duplicate issues!"
417856013,9007,ghost,2018-09-01T12:20:26Z,i have this problem too. looks like add_torrent with flag_override_resume_data can help solve this problem.
450510074,9007,glassez,2018-12-29T18:08:26Z,", you still want to do something about it?"
519202550,9007,glassez,2019-08-07T17:51:29Z,", [a link]"
520470743,9007,githubuserthatsright,2019-08-12T15:22:04Z,"just so that i understand - this potential fix, or for that matter maybe any other, has been around for a bit over a year and more than just a few version updates and we've still got this as a problem?"
520481253,9007,glassez,2019-08-12T15:47:14Z,the problems it was supposed to solve (at least most of them) are now solved in a different way.
520492783,9007,githubuserthatsright,2019-08-12T16:16:39Z,so moving or deleting data of a formerly completed torrrent will in no case any longer cause a redownload?
520522747,9007,glassez,2019-08-12T17:40:13Z,this should be fixed now.
638189123,9007,glassez,2020-06-03T13:15:01Z,the goal was achieved in a different way.
680131950,13288,FranciscoPombal,2020-08-25T16:27:29Z,"additional notes: - the `add cmakegraphvizoptions.cmake file` commit is so that the `target_graph.dot` files produced as output of the builds don't get as cluttered. it was previously part of [a link] and i thought this would be a good place to re-introduce it. - the macos builds on travis have been broken for some time now, with no hope of getting fixed until either sledge returns and fixes the archives from builds.shiki.hu or someone spends time overhauling the travis script to to work around it. this pr is an alternative way of fixing that."
683182739,13288,FranciscoPombal,2020-08-28T23:05:32Z,"no change rebase, on top of the most recent cmake overhaul commit."
683779142,13288,FranciscoPombal,2020-08-31T13:30:15Z,"force push: removed the toolset specification for windows builds, so that it is clear that everything is built with the latest stable vs 2019 enterprise tools. turns out github actions runners don't keep older point releases around, so specifying the tool versions with `msvc-dev-cmd` is misleading (the latest ones will get used)."
685904805,13288,glassez,2020-09-02T18:04:45Z,"i'm sorry, but i still don't understand why it's required to be added in this pr. your explanation sounds like if you say to people who know what you're talking about in advance."
685917238,13288,FranciscoPombal,2020-09-02T18:26:41Z,"i've explained its purpose before: [a link] [a link] (first 2 paragraphs). try to build qbittorrent with the `--graphviz` flag without this file in the root dir to see the difference. the generated graph itself will be more cluttered with things that are not relevant and it will be split in many files, cluttering the output build directory."
685922502,13288,glassez,2020-09-02T18:35:28Z,how is it related to this pr? is any graphs producing **required** here?
685926316,13288,FranciscoPombal,2020-09-02T18:42:41Z,"yes, it's useful to see and troubleshoot the actual resulting dependency graph of the build. this was already relevant for [a link] so that the user could produce uncluttered graphs if they chose to, when building. but it is even more relevant in this pr. download one of the zips from [a link] and imagine how much more annoying it would be if the zip contained many little graph files instead. thanks to this configuration file it contains just one."
687785582,13288,glassez,2020-09-06T13:09:48Z,"really? i haven't seen any complaints about it not being in current ci builds. isn't ci just intended to make sure that new changes are still buildable on platforms other than the one they were created on? ""dependency graph of the build"" doesn't seem to be intended for everyone's use at all. someone who actually cares about it can produce it locally. in any case, you should not mix it in here (just as you shouldn't include creating graphs in ci environment). as already suggested in another pr, you can publish it in a separate pr, and try to provide a convincing argument that it makes sense at the project level."
688556083,13288,FranciscoPombal,2020-09-08T00:39:54Z,"it's not a solution to some specific complaint, it's just a general improvement. yes, but not just that they are buildable, but also built the same way (or at least without surprising changes). i want to have confidence that changes i make which shouldn't impact the way qbittorrent is built on other platforms live up to that promise. this is especially useful when making changes/improvements to the build system. not all developers have one machine with each of the supported operating systems. if someone complains there is something wrong when they tried to build on macos, it is much easier to troubleshoot if everyone (even those who do not own systems with macos/hackintoshes/don't have macos vms set up) can use the files produced by the macos ci runs as a canonical point of reference. ci is meant to both verify that things still build fine _and_ provide useful reference information for troubleshooting. you could make a similar argument for the generated executable + pdb file. if you consider them useful, why not the graph? if you're concerned about performance, don't be, cmake generates this graph really fast. i'll consider it, but for now i believe i've refuted the central premises of `ci is _just_ for checking if it is still buildable` and `you shouldn't include creating graphs in ci environment` in the previous paragraphs."
688935002,13288,glassez,2020-09-08T14:58:05Z,"okay, maybe producing dependency graph on ci really makes sense. i don't deal with cmake that closely, so it doesn't concern me. but then i have another questions. isn't this file for customizing cmake graph output according to someone's personal preferences? do we impose our preferences on others? does it have something that really depends on the individual characteristics of our application (or its build system)? if it's really better for everyone, why does it behave differently by default?"
688936950,13288,glassez,2020-09-08T15:00:45Z,"if it is approved, shouldn't we remove all similar(cmake based) configurations from other ci environments in the same pr?"
689041129,13288,FranciscoPombal,2020-09-08T17:56:40Z,"these are the changes from default: - `graphviz_custom_targets`: `false` -> `true` to give more information about custom target by default; i think this will be quite useful if we ever add custom targets. a little more information is always welcome - `graphviz_generate_per_target` and `graphviz_generate_dependers`: `true` -> `false` when both of these are false, only the final overall graph is generated. this prevents spam of lots of little files. - `graphviz_ignore_targets`: ` ` -> `.*autogen` this makes the `.*autogen` auto-generated targets (due to automatic {moc, uic, rcc}) not appear in the graph. i guess this would be the most controversial change, since this is the only one that removes information from what would otherwise be shown as the default. however, i don't think this is very useful 99% of the time. --- overall i think we should select the defaults that are most convenient for ci. if the options we choose for the ci don't suit someone's graph-generation preferences, they can always change it locally. i do wish there was a better way to pass these options than editing a specifically-named file, but sadly this is currently not possible. however, thinking about it a little better now, i think it would be beneficial to open up discussion about exactly _which_ graph-generation options are ""most convenient for ci"". from this standpoint, it is indeed better to factor this out to another pr. i don't expect it will be too different from this, though. i'll just take care of the other prerequisite pr first, before factoring out the cmake graphviz stuff."
694969124,13288,FranciscoPombal,2020-09-18T16:39:28Z,"rebased on top of master without the `cmakegraphvizoptions.cmake` file. this can be merged now to finally fix the broken ci. like i have explained above, it does all the travisci and appveyor scripts currently do, and some things it does better."
694974736,13288,glassez,2020-09-18T16:51:48Z,please describe how we can see its results when it is merged. will they available on prs pages?
694979623,13288,FranciscoPombal,2020-09-18T17:02:43Z,"yes, it will be available in pr pages and run on every pr against master and commit to master. as mentioned in op, here is an example of what you see once you click on the link: [a link] force pushed to bump vcpkg and bump libtorrent version to 1.2.10."
694986699,13288,FranciscoPombal,2020-09-18T17:17:48Z,"oops, sorry for requesting review again."
695799010,13288,FranciscoPombal,2020-09-20T15:19:29Z,"about this force push: seems like something changed with github actions runners, such that when using ninja, gcc is detected as the default compiler, which breaks the build. i came across this problem when reusing this pr for other things recently. so i have made a minor change to the windows job, it now uses the `visual studio 16 2019` generator instead of ninja, because this way, msvc is always detected as the default compiler. i have reported the bug here: [a link] sample run showing that it works now again: [a link] diff: [code block] the `/p:usemultitooltask=true` flag is to make sure the build utilizes all cores."
695940468,13288,glassez,2020-09-21T07:05:18Z,", sorry, i don't have time to write extensive comments right now to express my opinion on each issue raised. so i will comment on my attitude to this pr in general. i approve it without going into too much detail about it (although some aspects don't suit me either, or at least they should be further tweaked). and i want it to be merged as early as possible. i have two reasons: 1. we don't currently have a fully functional ci environment and this is really annoying. 2. it is better to continue discussing / improving it when it is already working and bringing some results, than to try to perfect something that is not yet there, at the risk of not getting anything in the end. these changes do not affect the source code of the app in any way, so the omitted flaws should not spoil anything very much. this will give us time to cool down a bit and look at it slowly and more objectively."
695943356,13288,glassez,2020-09-21T07:12:36Z,"so i have made a minor change to the windows job, it now uses the visual studio 16 2019 generator instead of ninja, because this way, msvc is always detected as the default compiler. this is a very controversial decision. instead of fixing script so that it uses the compiler we need with previously selected generator, you just changed the generator. i would agree with this if you made an equivalent substitution (for example, jom). but ""visual studio""?.. personally, i don't see any practical value for these generators other than loading cmake project to visual studio ide. i think it's perverse to use these tools in a non-interactive environment."
696142293,13288,FranciscoPombal,2020-09-21T14:14:41Z,"you're right, i changed it to use ninja + the `ilammy/msvc-dev-cmd.3.0` action, i think this is a better solution."
696278979,13288,FranciscoPombal,2020-09-21T18:06:15Z,"i've given up completely on the upstream inclusion of a `cmakegraphvizoptions.cmake` file, as i no longer think it makes sense. so i won't be making a future pr about it. if someone really wants it later, it's only about 5 lines anyway for the options that matter."
698444612,13288,glassez,2020-09-24T16:14:52Z,", hey, you guys still haven't come to any agreement about it? i want to have a working ci."
698463055,13288,Chocobo1,2020-09-24T16:50:23Z,i would like to approve this pr if you agree to look into this afterwards: [a link] do we have an agreement?
698509711,13288,FranciscoPombal,2020-09-24T18:22:59Z,this has been ready for 3 days. the static builds? in case it wasn't clear before: sure! i also think it would be very useful. i thought it was understood that it was out of scope of this pr - but this pr was definitely made with such future extensions in mind.
698714968,13288,Chocobo1,2020-09-25T04:36:09Z,"i think we can also add a badge in readme.md, see: [a link]"
698888083,13288,Chocobo1,2020-09-25T11:57:38Z,thank you!
794261720,13288,oprypin,2021-03-09T18:18:45Z,"sorry for necro-posting and sorry for plugging my website. but, since this mentions ""nightly"" builds (and i'm not sure what exact purpose was in mind) -- well, you can get a convenient link to the builds (either always-latest or a particular one) via [a link]: [a link]"
1704045488,19542,glassez,2023-09-03T08:16:16Z,i wonder if the same port can be used for both ssl and non-ssl connections?
1706600660,19542,rcarpa,2023-09-05T13:14:53Z,"libtorrent doesn't allow this as of today. from their [a link] : `ssl connections are accepted on a separate socket from normal bittorrent connections. to enable support for ssl torrents, add a listen interface to the settings_pack::listen_interfaces setting with the s suffix` this also quite expected. while technically it's possible to try to detect if the client initializes an ssl connection based on first received bytes, it would mean putting heuristics into the code path of security-related primitives. i'm not aware of any broadly used network server which would do that. do you have any example of server doing that in mind?"
1706759364,19542,glassez,2023-09-05T14:43:44Z,"it was curiosity mostly. i didn't go into much detail about such things. all that comes to my mind is http and https (not sure if it's the same). or can they also not coexist on the same port? in any case, the question is settled, since libtorrent does not support it."
1706857000,19542,rcarpa,2023-09-05T15:38:33Z,"""can"" is the wrong word. technically it could be possible, but i cannot think of a reasons to do it [*]. http has been allocated the port 80 by iana; https: port 443. this is the setup which every normal web server uses. [*] except, maybe, to hide a ssl service on a port. for example: hide that there is a vpn server listening on an open port by dissimulating it as a web server."
1706982015,19542,glassez,2023-09-05T16:59:21Z,"oh, right. usually the default ports are hidden in urls, so i forgot about the fact that they are different."
1745861225,19542,Neustradamus,2023-10-03T23:05:04Z,to follow
1962911187,19542,Chocobo1,2024-02-25T11:59:30Z,superseded by pr #20338.
437278687,9824,thalieht,2018-11-09T07:53:28Z,"clazy found only 4 in whole project (for what i've changed so far), great. the condition i said for copyasconst is obviously wrong but if all it takes is clazy i guess it doesn't matter. but what about qasconst? is what i said in the first post correct or there is more?"
437478425,9824,thalieht,2018-11-09T20:00:38Z,"i've also found a few existing `for ( : )` like the following [a link] `articles` is non-const qlist. is it correct as is, or it needs qasconst?"
437582550,9824,Chocobo1,2018-11-10T13:05:28Z,your understanding seems correct. seems not as `result` is already `const`.
437591934,9824,thalieht,2018-11-10T15:32:15Z,"thanks and sorry if i'm being a pain... i found the following from another project which is in the same situation: [a link] `info` being const but `variants` not, yet qasconst is added anyway."
439445828,9824,Chocobo1,2018-11-16T16:20:47Z,"nothing more from me, i think you can squash commits then let others review."
439461677,9824,thalieht,2018-11-16T17:11:18Z,squashed.
439601585,9824,glassez,2018-11-17T08:54:36Z,"sorry for delay. guys, let's define the policy of using qasconst/copyasconst once and for all. 1. **(lvalue)** we require to use qasconst when we iterate over non-const container but we don't intend to modify its items. however we can safely use it even with const containers to be sure that further code modifications will not lead to unexpected detaching of shared data. 2. **(rvalue)** copyasconst is a more expensive operation because it calls the copy constructor (although it is quite lightweight). when can it really help? only when affected method returns copy of internal container. when method creates new container it isn't affected by ""detaching"" problem. now i'm not sure that using copyasconst is the best solution. it generates either unnecessary copying or requires awareness of the internals of the affected methods (i.e. we need to know exactly what it returns to decide whether to use copyasconst or not). maybe just drop it and use another approach?"
439607065,9824,thalieht,2018-11-17T10:38:25Z,i added qasconst if container is not const or where possible and copyasconst where clazy said it might detach. if not copyasconst then what? also i'm not sure about [a link] and [a link]
439614026,9824,thalieht,2018-11-17T12:45:09Z,"i run clazy again and i had missed one, fixed."
439704996,9824,glassez,2018-11-18T16:21:31Z,as for [a link] this is a misconception of course. all fields of const struct are const too ([a link]
439715486,9824,thalieht,2018-11-18T18:44:12Z,reverted and thanks for the link.
441477727,9824,thalieht,2018-11-25T22:02:58Z,"removed most copyasconst. the remaining ones are mostly qt functions that i have no idea whats going on inside: [a link] [a link] [a link] [a link] [a link] qobject::findchildren () [a link] [a link] also there is `feed::articles()` which returns shared container, and `folder::articles()` which does not. the following is confusing to me and i'm not sure which one is used here (i assume `feed::articles()`) [a link] i can't make `feed::articles()` return const ref, i get some error about inheritance. `logger::getmessages` and `logger::getpeers` have multiple return paths including shared container so i left the copyasconst there."
441534661,9824,Chocobo1,2018-11-26T06:43:49Z,"this question makes me thinking, normally we should only care about the return type of a function, not its implementation, however the detachment problem forces us to look into, isn't that a bit weird? another (less popular) idea is just ignore using `copyasconst` in most cases, only use it at performance critical places (almost none in qbt i guess), does that make sense?"
441537251,9824,glassez,2018-11-26T06:58:56Z,"i wouldn't go that way. after all, the copy constructor is less expensive than the real `detach()` (which leads to deep copying). so, if i had to choose between extreme cases, i would prefer to use `copyasconst()`. in addition, it will protect against changing the program logic by oversight (because `for (type var : copyasconst(container))` is equivalent to `foreach (type var, container)`). so the only question is whether we should ""lazily"" use it everywhere, or try to discard those cases where it is not required."
441552923,9824,thalieht,2018-11-26T08:17:09Z,"i think we should keep it for qt functions because we don't know if they will be changed some day to return shared container, except maybe for ones that wouldn't make sense to, e.g. mid() split(). awaiting your decision guys."
441988680,9824,glassez,2018-11-27T09:29:38Z,"i had to re-examine it... **first.** why did we call it `copyasconst`? it totally baffled me! let's see its code: [code block] we don't really copy the value but move it. so the better name should be ""forwardasconst"" or ""fwdasconst"" (or something like it). **second.** move-constructor is really simple. it just copies a couple of pointers. **third."" let's compare the pros and cons. in the case when we are dealing with a really shared container (references count > 1), then `copyasconst` wins undoubtedly. when a container exists in a single instance (i mean its shard data), we get the following: 1. `copyasconst` way causes move-constructor + destructor of empty object (so lightweight) 2. non-`copyasconst` causes two `detach()` (in its lightweight form, i.e. just checking ref count) additionally the first way prevents us from unnecessary work to assess the need for use `copyasconst` in some particular case (and from errors when we misinterpret some case). i'm sorry i made you think of that. but i think we needed to do that before we approved that pr. so let's choose our way and finish it!"
442044751,9824,Chocobo1,2018-11-27T12:42:15Z,"personally i have no problem using `copyasconst` everywhere, except the name is a bit long and too verbose which slows me down when reading it, sometimes i hope we can have it in some shorthand, e.g. `fconst()` which stands for forward as const."
442052995,9824,glassez,2018-11-27T13:12:04Z,"i would use more readable name, e.g. `asconst()`. we can even rename our implementation of qasconst to asconst to use single name in all logically similar situations (for both lvalues and rvalues)."
442055513,9824,Chocobo1,2018-11-27T13:20:32Z,"agree, also i just remembered that it was proposed as `constify()` in pr #8325 but was changed later."
442082172,9824,glassez,2018-11-27T14:41:35Z,"well, let it be `constify()` if you prefer it more. iirc, you don't object to have same name for them?"
442086696,9824,Chocobo1,2018-11-27T14:53:57Z,"no problem for me, actually `asconst()` is 1 char shorter than the other so lets just use it."
442124990,9824,thalieht,2018-11-27T16:32:37Z,so i basically remove the last 2 commits and then rename copyasconst and qasconst to asconst in a new commit? wasn't qasconst chosen so qbt can use qt's implementation after min version is bumped to >= 5.7.0?
442169537,9824,glassez,2018-11-27T18:39:33Z,it's just trivial function template so we won't win much by using qt's qasconst instead of our own implementation.
442213829,9824,thalieht,2018-11-27T20:56:09Z,removed last 2 commits (kept a backup just in case) and renamed qasconst() and copyasconst() to asconst() so as far as copyasconst goes we're back to what clazy complained might detach.
442499715,9824,thalieht,2018-11-28T15:59:18Z,rebased.
442615898,9824,thalieht,2018-11-28T21:44:13Z,added asconst to all functions. i'm open to changes if you want some specific ones removed.
444786797,9824,Chocobo1,2018-12-06T08:19:28Z,thank you!
444839835,9824,thalieht,2018-12-06T11:24:44Z,thank you all.
1000976703,15888,glassez,2021-12-25T05:16:57Z,do we need to support both qrc and folder based themes?
1000976778,15888,glassez,2021-12-25T05:18:12Z,please attach some themes as zipped folders for testing.
1000990220,15888,jagannatharjun,2021-12-25T08:16:43Z,wanted to keep backward compatibility. no reason to trouble users for whom the themes are working [a link]
1001446422,15888,glassez,2021-12-27T09:02:41Z,"when i was thinking about this feature, i had the idea to set (in the ui and settings) not the path to the folder itself, but the path to the theme config file instead. it looks easier."
1001604830,15888,jagannatharjun,2021-12-27T14:55:54Z,yes probably less code but imo current implementation is more clearer whether it's more user-friendly is subjective.
1001633891,15888,glassez,2021-12-27T16:02:25Z,i initially thought about ui. a single path input field would look better to me. but let's find out other opinions.
1002596516,15888,jagannatharjun,2021-12-29T13:32:51Z,"replaced the folder-based option with a selection of config.json, code is much shorter now :thumbs_up:"
1003888869,15888,glassez,2022-01-03T06:11:30Z,thank you!
96203700,2892,ngosang,2015-04-25T13:28:51Z,"**tests using archlinux & qt4** i can't build with libtorrent 1.0.4 (with the master version everything is ok): [code block] with libtorrent 0.16.17 i can but there are some problems... - i had torrents in the list (before test this pr) and they are gone, it's not a very big problem for me. - if i add a new magnet link and wait until metadata is retieved, i can see this lines in the console: [code block] - i add new magnet link with ""start torrent"" checked. the torrent starts downloading but after 5 or 10 seconds the torrent stop. :s :s if i start it again the torrent stops again in few seconds... if i close qbittorrent and open again it's working as expected. - when torrent download finishes the torrent extension (.!qb) isn't removed. - when torrent download finishes i renamed one file inside the torrent in the ""content"" tab. the file isn't renamed in the filesystem. (i think this is related with extension (.!qb)). - when i click file => exit i see this message in the console: [code block] - torrents with non ascii characters in the title fail. you can try with this: magnet:?xt=urn:btih:mwqbr6uvgtvi6eycx7wmhr4qah5uq5vh&dn=the%20imitation&tr=udp%3a%2f%2fopen.demonii.com%3a1337%2fannounce the torrent downaload starts but you can see this message in the console: file error: the imitation ... and if you close qbittorrent, the next time the file is in the state ""missing files"". you can see the ""content"" tab also, the non ascii characters are wrong."
96210107,2892,glassez,2015-04-25T14:06:10Z,do you build libtorrent with `export-extra=on`?
96210348,2892,ngosang,2015-04-25T14:08:47Z,"i think no. i'm using this script for installation: [a link] btw, i updated the previous comment."
96210409,2892,glassez,2015-04-25T14:10:35Z,"what is your os and build/run environment (qt, compiler etc.)?"
96211186,2892,ngosang,2015-04-25T14:16:07Z,archlinux (updated) gcc 4.9.2 qt4 4.8.6 boost 1.57.0 make 4.1 libtorrent-rasterbar 0.16.17 or libtorrent-rasterbar 1.0.4 (just one at the same time) as i said libtorrent 1.0.4 works perfect with the master branch.
96213326,2892,glassez,2015-04-25T14:22:31Z,"it's expected behavior. torrents resuming were remade. now torrent resume data is stored in resumedata in form _torrent_info_hash.torrent_ + _torrent_info_hash.fastresume.queue_number_ (e.g. _0a89005cc7894d26eed12d35de59b02d11791ca0.fastresume.0_, _0a89005cc7894d26eed12d35de59b02d11791ca0.torrent_). so you can copy and adjust your old resume files."
96215236,2892,ngosang,2015-04-25T14:27:19Z,"don't worry about me :smile: .look the other problems, if you need i can try more things."
96215554,2892,glassez,2015-04-25T14:30:05Z,"this description can help others. of course. it is very difficult to test in isolation. the more testers, the better."
96219995,2892,ngosang,2015-04-25T15:06:44Z,i added a new problem at the end: #2892#issuecomment-96203700
96233925,2892,sledgehammer999,2015-04-25T16:26:51Z,"is extra-export=on needed now? if yes, why?"
96234880,2892,glassez,2015-04-25T16:41:26Z,"it's just a guess. i have a habit to build so on windows (i just use my old script). but travis-ci builds it without errors, so it is suspicious."
96240695,2892,glassez,2015-04-25T17:20:17Z,fixed. do you test updated code? and then comment out what is fixed and what is not.
96241063,2892,glassez,2015-04-25T17:24:23Z,i tried: ![a link]
96243098,2892,ngosang,2015-04-25T17:38:22Z,it's working now. the problem with codification is still present. ![a link] i just compiled the master branch with the same libraries and it's working well. **updated:** when i add the torrent it's working but if i close qbittorrent before completion and open it again there it's.
96247051,2892,glassez,2015-04-25T18:04:09Z,you still test it with libtorrent-0.16?
96252636,2892,ngosang,2015-04-25T18:13:26Z,yes. i can try with 1.0.4 again. wait a few minutes.
96256086,2892,glassez,2015-04-25T18:22:47Z,linux mint 17 + qt 5.4 + libtorrent-0.16.19 + boost-1.54 = no problem with codification. maybe the problem is with qt 4.8?..
96258761,2892,ngosang,2015-04-25T18:43:09Z,with this pr: - qt 5.4 + libtorrent-0.16.17 => no codification problem - qt 4.8 + libtorrent-0.16.17 => **codification problem** - qt xx + libtorrent-1.0.4 => **compilation error** with master branch: - qt 5.4 + libtorrent-0.16.17 => no codification problem - qt 4.8 + libtorrent-0.16.17 => no codification problem - qt xx + libtorrent-1.0.4 => compilation successful can you help us?
96259790,2892,glassez,2015-04-25T18:52:30Z,"is there a problem with the encoding (as in your screenshot), when you added the torrent? or it only appears after resume (together with missing files)? do you use temp path? where do you save? when you resume, it shows the same path?"
96260362,2892,sledgehammer999,2015-04-25T18:54:08Z,"if master branch is ok with encoding, i assume that the pr has a code path that forgets to do fromutf8() when reading the path strings from libtorrent."
96263297,2892,ngosang,2015-04-25T18:59:25Z,when i add the torrent there is no problem. it's when i close qbittorrent and reopen it.
96263806,2892,glassez,2015-04-25T19:01:56Z,the encoding problem is in torrent filenames - not in save path (as i see it).
96323643,2892,glassez,2015-04-26T05:07:14Z,linux mint 17 + qt 5.4 + libtorrent-**1.0.4** + boost-1.54 = no problem with building/encoding. need to try with qt 4.8...
96361381,2892,pmzqla,2015-04-26T10:31:46Z,"i really don't know what's wrong with `libtorrent::fastresume_rejected_alert::message() const`, but i still can't build qbittorrent (libtorrent 1.0.3, qt 4.8.6, boost 1.55) [code block] if i use the deprecated `p->msg` the build finishes. i don't understand why `storage_moved_failed_alert` is fine, but not `fastresume_rejected_alert`"
96367011,2892,glassez,2015-04-26T11:37:20Z,qbittorrent master uses `libtorrent::fastresume_rejected_alert::message()`... :confounded_face:
96367055,2892,sledgehammer999,2015-04-26T11:37:58Z,"windows 7: - qt 4.8.6 + libtorrent 1.0.4(svn11008) -> encoding issue after i **add** the magnet. the problem isn't present in the ""add new torrent"" dialog. also, i don't need to restart the client. the content window shows garbage info immediately. - qt 5.4.1 + libtorrent 1.0.4(svn11008) -> everything is ok, even if i restart the client. - qt 4.8.6 + libtorrent 1.0.4(svn11008) + **current git master** -> no encoding problem i navigated the source and it seems to do the right thing on both qt4 and qt5... i cannot find anything obvious. the following is a nitpick but i imagine this will get annoying fast. in qtcreator, if i right click on a method invoked by an object instance (eg `m_info->file()`) and select ""follow symbol under cursor"" it opens up the relevant header file where that method is invoked. if i do the same on the header file it doesn't open the cpp file where the method is defined. i need to first right click on the header file and select ""switch header/source"" for it to work. up until now, the ""follow symbol ..."" command immediately opened the cpp file without going to the header file first. any idea on how to fix this?"
96368914,2892,glassez,2015-04-26T11:44:53Z,this happens for everything or for some classes only. can you test it.
96369001,2892,sledgehammer999,2015-04-26T11:47:30Z,i noticed this while navigating the source for the encoding issue. so the torrentcontelmodel/fs_util/misc/bittorrent info and related files seem to have this problem.
96370986,2892,pmzqla,2015-04-26T12:08:01Z,"the build doesn't fail if i use ""-o1"" instead of ""-o2"". i had to manually edit the makefile because the configure script always puts ""-o2"", no matter what's the value of the variable cxxflags. [code block] edit: and ""-o3"" works fine (?!?!?) edit2: using gcc 4.9.2"
96388030,2892,sledgehammer999,2015-04-26T14:11:29Z,the convert_from_native error might be related/fixed by this commit in the rc_1_0 branch: [a link]
96402034,2892,glassez,2015-04-26T15:48:18Z,"yeah, i caught it! from qt 4 docs: from qt 5 docs: try to test updated code."
96409022,2892,sledgehammer999,2015-04-26T17:00:21Z,"i confirm that the encoding issue is gone now. but can you tell me what you did differently now? point me to the relevant code? i also see that you totally deleted misc::toqstringu() functions. what took their place? also forget about the ""follow symbol under cursor"" problem. i don't seem to be able to reproduce it now. probably a faulty state of qtcreator."
96409774,2892,glassez,2015-04-26T17:08:02Z,i replaced `qstring::tostdstring()` with utility function `string::tostdstring()`. see `core/utils/string.cpp`. `misc::toqstringu()` and `misc::toqstring()` replaced with `string::fromstdstring()` (just more informative name). but it is not relevant to this problem.
96410364,2892,sledgehammer999,2015-04-26T17:21:11Z,"i am not sure `string` should be used as a namespace. too generic and very close to qstring and std::string. but this isn't important enough to address it now. if someone has a better naming, he should tell it. i was wondering what you changed here, because previously i had looked at the code of the content model that requested filenames and they all used toqstringu() correctly. so i cannot understand how qstring::tostdstring() fits in the picture."
96410915,2892,glassez,2015-04-26T17:24:21Z,we used qstring::tostdstring() when call libtorrent functions (like rename_file() and so on).
96411892,2892,glassez,2015-04-26T17:35:59Z,"actually, i intend to place all utility functions in a namespace utils. so it will be a utils::string."
96743372,2892,ngosang,2015-04-27T17:10:31Z,it's broken. check travis logs.
96792687,2892,ngosang,2015-04-27T19:41:33Z,codification problem is solved. what about ..? - when torrent download finishes the torrent extension (.!qb) isn't removed. - there is a problem with the upload ratio. it works but when you close and open qbi the upload ratio is set to 0.00.
96972751,2892,glassez,2015-04-28T08:29:42Z,"thank you for testing! but could you provide a little more information? it always happens or under some certain conditions. what settings do you use when testing qbittorrent (for example, saving to temporary folder). single- or multifile torrent cause this issue."
97109708,2892,ngosang,2015-04-28T15:38:51Z,"qt 4.8 + libtorrent-0.16.17 save files to location => /mnt/downloads/descargas keep incomplete torrents in => /mnt/downloads/temp i downloaded 10 torrents and all files have the (.!qb) extension after download is complete. (single and multifile torrent cause this issue) edit: this problem causes many more problems because the next time you try to share the torrent qbittorrent thinks you renamed or removed so there is a i/o error. he thinks the files don't have the extension. it's simply not working. i add a new torrent and seems it's working but the uploaded and downloaded amount is not saved on qbittorrent close. to replicate this problem do this: 1) download one torrent with many leechers, so you can upload some data, and wait until download finish. 2) check the uploaded/downloaded/ratio amounts in the transfers list and in the general tab. 3) file => exit 4) open qbittorrent again and see the uploaded/downloaded/ratio amounts."
97135784,2892,glassez,2015-04-28T16:53:33Z,this is replacement for old downloadthread class.
97806624,2892,glassez,2015-04-30T14:03:36Z,", i cannot reproduce this issue. please recheck with updated code. fixed. please recheck."
97963802,2892,ngosang,2015-04-30T20:53:53Z,"the ratio is fixed partially. if i look the uploaded amount for one torrent, close and reopen qbittorrent and look at that amount again the values are different. looks like when qbittorrent closes don't save the last statistics for the torrent so the saved amount is always lower than the real one. the (.!qb) extension is still there. in one previous comment i explained the (.!qb) extension and ratio problems. can you test it?"
98040882,2892,glassez,2015-05-01T04:31:19Z,this regression is exactly of this pr? qbittorrent master works correctly with this?
98093453,2892,ngosang,2015-05-01T10:15:58Z,master works perfect in all senses. wait for the response but i think i'm doing everything well.
98120772,2892,pmzqla,2015-05-01T12:13:51Z,"i actually have other problems. if i try to start a torrent, it's not added. if i add it again, qbittorrent tells me that it can't add it because the same torrent might be in a ""adding state"". this is what i get [code block] magnet links work. however, metadata are not shown in the add torrent dialog and the download actually starts even if i hadn't press ok. i also think that the transferlist is not correctly updated, often the information displayed remain the same. if i start a magnet before metdata are fetched, i can see the download start as i would expect, but i soon end up with: [code block] built from ""glassez/bittorrent"" directly. i also cleared ""~/.config/qbittorrent"" and ""~/.local/share/data/qbittorrent""."
98122093,2892,glassez,2015-05-01T12:21:28Z,"what is your os, libs, compiler etc.?"
98147424,2892,pmzqla,2015-05-01T14:48:42Z,"debian sid. for this build i used: qt 4.8.6, libtorrent 1.0.3, gcc 4.9.2, boost 1.55"
98346804,2892,glassez,2015-05-02T10:34:24Z,"damn, what am i doing wrong? i can't reproduce these bugs. either you guys are hiding something. please include in your reports as much information as possible. this is especially true of the conditions of the tests. what settings are used, how do you add torrents (whether use addtorrentdialog or not, save it in the default folder, assign the label), what were you doing before that, etc. also you should make sure that before you start the test you have cleaned the build directory and downloaded the latest source code. apparently, i want more testers. do you have the time? or i can count on you only after version 3.2 released?"
98361957,2892,ngosang,2015-05-02T13:59:42Z,"**archlinux qt 4.8 + libtorrent-0.16.17 + gcc 4.9.2 + boost 1.57.0** fresh install. i made a new folder and git clone the master branch, then i merged this pr. i also emptied this folders: **/home/xxxxx/.local/share/data/qbittorrent/** and **/home/xxxxx/.config/qbittorrent/** i executed **./configure --with-libtorrent-rasterbar0.16** and then **make**. now all settings have the default value. i open qbittorrent, accept the legal notice, **enable the .!qb extension preference**, add new magnet dialog, i add 1 magnet link: magnet:?xt=urn:btih:d41eec7c601a89000fd8808858a7aa12f31574b0&dn=debian+7+4+0+i386+netinst+iso&tr=udp%3a%2f%2fopen.demonii.com%3a1337%2fannounce this torrent is single file. two cases: 1) i click accept before metadata is retrieved. **the torrent is not saved in the downloads path**, it's in /tmp/d41eec7c601a89000fd8808858a7aa12f31574b0/debian-7.4.0-i386-netinst.iso.!qb **this problem only happens in qt 4.8, in qt 5 i think it's working.** 2) i click accept after metadata is retrieved. the torrent is saved in the downloads path. :+1: torrent start downloading and i wait until it's completed. i go to the downloads folder and the single file don't have the **.!qb** extension in both cases :+1: (but in the 1st case the file is in a wrong folder). if i repeat the both tests with the **.!qb extension preference disabled** the downloaded files **still have the .!qb extension and that extension isn't removed when torrent completes.** **this problem only happens in qt 4.8, in qt 5 i think it's working.** i can't replicate the ratio problem but i'm sure it's there. i tried to replicade the problems but i can't."
98380739,2892,pmzqla,2015-05-02T17:17:24Z,"yes, this fixes the problem. for some reason, all the problems disappeared once i built qbittorrent with libtorrent 1.0.4 (with the patch linked by sledgehammer) instead of 1.0.3. the build finishes, downloads start, magnet waits for me to press ok. i don't know what was happening. i can't reproduce the "".!qb"" problem."
98394818,2892,sledgehammer999,2015-05-02T20:02:49Z,"here is a hint on why the stats may not be saved correctly. (i didn't read your changes entirely). `torrent_handle::need_save_resume_data()` may not return true in case of a seeding torrent that only has its stats updated. note: when i say ""may"" i mean it as a guess not as a possibility that i have encountered. also the docs aren't very clear if need_save_resume_data() considers the above case. i think we should ask arvidn. libtorrent docs:"
100525859,2892,sledgehammer999,2015-05-09T18:12:50Z,my `git mergetool` autosolves the conflicts when rebasing. i use `kdiff3` as backend.
101060019,2892,sledgehammer999,2015-05-11T21:55:31Z,i started reviewing this. -i'll try to ignore as much as possible from the deluge of new bugs/threads here and in the forum coming in for v3.2.0- the first 3 commits are ok. i am looking at the fourth now. i'll leave inline comments.
101068510,2892,sledgehammer999,2015-05-11T22:45:15Z,"ok. i am done with the 4th commit. i'll wait your responses before continuing to the next one. i also noticed that you have taken a whole another approach to singletons. now we have a triplet of static methods: `initinstance()`, `freeinstance()` and `instance()`. why have you chosen this approach over the current one?"
101151973,2892,glassez,2015-05-12T06:36:14Z,"singleton with lazy initialization is good when the program has several execution paths, some of which do not use these components. we know exactly when and in what order we want to create (almost) all components of the application. of course, you can leave the old version and call singleton::instance() in the place where you want to create the object, but then why all the other `if (!m_instance)`? this is of course, not much will heat the cpu... but if we know that the object exists, i believe that this is unnecessary. in addition, some of our singletons depend on each other. what if (the old way) we will delete one of them and the other will call it instance() in the code that follows (though even in its destructor)? even if we control it now, this may appear in future changes."
101349056,2892,sledgehammer999,2015-05-12T17:02:05Z,i'll leave the singleton talk aside for the moment. i'll come back to it when everything else is ready. for now i have finished the review of [a link] too. commit [a link] is quite big. i am taking a break. i'll begin reading it later today.
101365154,2892,sledgehammer999,2015-05-12T17:53:55Z,i took a quick peek at [a link] while doing something else. i noticed `infohash.h` and `cachestatus.h`. please don't put code in headers. split any such file into .h and .cpp.
101709616,2892,sledgehammer999,2015-05-13T15:08:25Z,"i noticed there are 5 more files in commit [a link] did you remove them from some previous commit that i reviewed? anyway, i have limited time today. i'll review the 5 new files later(they seem pretty straight forward) and maybe i'll start the next commit. i hope i can finish it today."
101720444,2892,glassez,2015-05-13T15:43:37Z,done.
102142508,2892,ngosang,2015-05-14T19:20:42Z,offtopic archlinux updated libtorrent-rasterbar to version 1.0.5 in official repo. [a link]
102181134,2892,sledgehammer999,2015-05-14T21:56:03Z,ok. is there a problem with that?
102184861,2892,ngosang,2015-05-14T22:13:25Z,"no, works perfect. besides, qbittorrent-3.2.0 in the repo is compiled with it."
102864980,2892,sledgehammer999,2015-05-17T22:26:58Z,that's it for today. please don't push the changes i proposed. leave it until i finish the commit. you can comment on something though. ps: about the 0.16.x dropping: i can't remember what we agreed on. if i told you to also support 0.16.x then ignore my inline comments about dropping it.
103170598,2892,glassez,2015-05-18T18:49:14Z,"it sounds convincing. in this case, i am at your service. but if you notice any serious problems in the old code mentioned by me, it should be noted somewhere, to fix later. and there are enough problems, actually (as i noticed). there's something i have noted."
104741746,2892,glassez,2015-05-22T18:48:00Z,"please notify me when you finish with ""redesign main core classes."". i'll update this pr because some next commits already changed."
104743081,2892,sledgehammer999,2015-05-22T18:55:56Z,of course. i am doing it in chunks because it is huge and i'm taking breaks. currently reviewing the torrenthandle.cpp file. the only other big one left is session.cpp. don't push anything until i say i have finished.
104760501,2892,ppolewicz,2015-05-22T20:31:43Z,if i want to make a fix for #2743 (so changing interface / port does not require a restart) should i do it on glassez/qbittorrent/bittorrent or on main trunk or somewhere else?
104771306,2892,sledgehammer999,2015-05-22T21:10:53Z,better wait a bit for this to be merged and have something solid to work on.
104787102,2892,ppolewicz,2015-05-22T22:10:41Z,ok. is there any eta on the merge?
104787704,2892,sledgehammer999,2015-05-22T22:15:58Z,from day to day. i am actively reviewing this. and it is the only thing i am focused on now.
105081216,2892,sledgehammer999,2015-05-25T00:23:00Z,"i finished all the **new** files from [a link] what is left to see are the rest of the files. most of them are you rearranging includes and adjusting var names. however, i want to ask you something. i don't see the usefulness of the `sessionprivate` and `torrenthandleprivate` classes. what are you trying to achieve?"
105255728,2892,glassez,2015-05-25T15:52:56Z,"the problem is that the session needs to interact internally with torrenthandle. for this purpose, these classes have some methods. we shouldn't make these methods public. but i don't want to do these classes friendly to each other, as they should have access only to a limited interface of each other. so i declared these methods as private in bittorrent::bittorrent session and::torrenthandle classes and as public in sessionprivate and torrenthandleprivate. external code uses interfaces of bittorrent::\* classes, and they internally use *private interfaces. it might not be the best option. so i wrote in another comment that i'm still considering other internal structure options. but you don't have to worry about that, because the external interfaces of these classes will not affected (and, hence, code that interacts with them, will not change, too)."
105258941,2892,glassez,2015-05-25T16:14:28Z,"i will update this pr in the next couple of hours, so you could continue."
105265023,2892,glassez,2015-05-25T16:45:53Z,pr updated.
105267439,2892,sledgehammer999,2015-05-25T16:51:31Z,you shouldn't have done that. i haven't finished with the commit only with the new(green) files. i had requested for you to refrain from updating till i say so. luckily i still have the github email notifications that point to the old commit. it will be a pain going back forth between the commits.
105272314,2892,glassez,2015-05-25T17:19:32Z,"oh, i'm sorry! i misunderstood you. maybe it's not so bad? i corrected what you pointed out in the current reviewed commit. and next commits."
105497424,2892,glassez,2015-05-26T11:48:12Z,"i was able to restore previous state of this branch (in which it was prior to my last update). if you want, i'll revert this pr."
105509420,2892,sledgehammer999,2015-05-26T12:32:22Z,no don't revert. leave it as-is. i have locally your previous code. i'll checkout the new code in a new branch and compare. then i'll begin commenting on the rest of the files. (probably tomorrow)
107176578,2892,sledgehammer999,2015-05-31T13:17:29Z,i finished with the whole pr. now you can fix/answer my inline comments and we're good to merge. i want to ask(or note some general observations): 1. what happens if a user closes qbt before a magnet has downloaded its metadata? how do we restore that magnet? 2. why do you create a file lock for the resume folder? did you notice problems without it? 3. inside `session::addtorrent_impl()` we should initialize `libtorrent::add_torrent_params::file_priorities` directly from `bittorrent::addtorrentdata::filepriorities` and not after the torrent has been added to the session. 4. i propose using lowercase names for namespaces to differentiate from class names. plus i propose the `bittorrent` namespace become `bt`.
108232454,2892,glassez,2015-06-03T07:38:33Z,"this can be divided into two different cases. 1. if we add magnet with dialog and the user closed the program (or system crash) before loading the metadata, we do not have any way to fix this, because the torrent has not yet been added to the session. 2. if we add without dialog (or what is the same, clicked there ""ok"" without waiting for downloading the metadata), then the torrent is added to the session and we have to resume, even if it has no metadata. now this is not yet implemented. i plan to do this later. i have an idea - we can save magnet uri in fastresume file in that case, if the torrent hasn't metadata, and then (when you resume) use this if there is no torrent file. in the previous code we had to check for the existence of this folder each time it is accessed. now we are sure that it exists throughout the program. it would be nice also lock the ability to change access rights, but i don't know how to do it. i wanted to do it, but for some reason i thought that such a possibility should be kept in `libtorrent::torrent_info` (through which i made a preliminary renaming files), but couldn't find it there. thanks for the tip. done. technically, **class** = **namespace** + **struct** + etc. so i see no reason to apply different naming. usually, lowercase namespace names are used where it is customary to call all in lowercase (for example, in libtorrent). i prefer not to use such a naming scheme. however, if you insist, we'll change that. at the expense of **bt**. not good to use acronyms and other abbreviations in such names (even the names of the variables, except for some simple cases, should be as informative as possible). exceptions can be only some well-known abbreviations (e.g., utils, fs, misc, etc.) or too small reduction in long words, do not interfere with the perception of their meaning. if you care about the enter code screen space, then (trust me) it's not the greatest evil (especially now, in the era of big monitors). this is my (and not only my) opinion on the matter. the final decision for you. the only request is if we change it, it is easier to do it in a separate commit (i was so tired from rebasing). i finished all the fixes. if there are no additions here, i will update the pr. waiting for your answer."
108544736,2892,sledgehammer999,2015-06-03T17:48:57Z,"ok. no change for the namespaces. unless, i am wrong libtorrent doesn't generate(even dummy) fastresume for magnets. don't bother with it. and i don't think this is even possible. however, we could preemptively test at startup if the folder is writable+readable by the program. if not, abort gracefully and inform the user of the situation. you can update the pr. i also left a final inline comment for your consideration/information."
108573856,2892,glassez,2015-06-03T18:53:47Z,"anyway, i will try to solve it somehow. create a lock file also solves this problem (at least partially)."
108580023,2892,sledgehammer999,2015-06-03T19:04:52Z,"we could just write a bencoded file containing a dictionary(aka a dummy fastresume). the filename scheme would be the same. but in there we just save the magnet uri, the save path, paused, etc... (of course libtorrent might generate the resume already)"
108870815,2892,glassez,2015-06-04T12:23:34Z,done. waiting to create new pr.
110494270,2892,sledgehammer999,2015-06-09T20:24:02Z,ok. only the last comment remains.
111274869,2892,sledgehammer999,2015-06-11T20:54:02Z,thank you very much for your hard work.
111275523,2892,ngosang,2015-06-11T20:57:33Z,"omg, i've been waiting for months. should i rebase my other pr?"
111492366,2892,onto,2015-06-12T13:24:36Z,"i have empty torrents list after build last version from master with these commits, how to restore it? i copy *.fastresume and *.torrent files from ~/.local/share/data/qbittorrent/bt_backup to ~/.local/share/data/qbittorrent/resumedata but nothing change."
111496367,2892,glassez,2015-06-12T13:42:05Z,you can use 0 as for all your torrents (or actual queue positions if you know).
111496568,2892,equeim,2015-06-12T13:42:58Z,build error with --disable-gui: [code block]
111497449,2892,glassez,2015-06-12T13:47:49Z,"if you want a reply, you need to properly ask a question. when compilation errors, you must specify the version of the os, compilers, libraries, etc. upd: have you tried to build qbittorrent just before #2892 was merged?"
111500467,2892,equeim,2015-06-12T13:53:48Z,"gentoo gnu/linux, gcc 4.9.2, qt 5.4.1, libtorrent 1.0.5. build with disabled gui is broken after merging this pull request."
111508824,2892,ngosang,2015-06-12T14:18:00Z,i confirm the --disable-gui problem too.
111512220,2892,glassez,2015-06-12T14:26:04Z,try to put [code block] after line 51 of main.cpp (after `#include `).
111543000,2892,equeim,2015-06-12T16:21:54Z,this fixed the issue.
111576797,2892,sledgehammer999,2015-06-12T18:05:15Z,and yet [a link] didn't error out in the nox builds....
111593294,2892,glassez,2015-06-12T19:18:14Z,"apparently, earlier this header was included via some other. obviously, in some configurations, it still does. i, like travis, have had no build problems."
111694644,2892,Gelmir,2015-06-13T10:08:35Z,"too bad there was no automatic migration for fastresume. 1. move everything to resumedata 2. run this script from resumedata (remove -whatif to disable ""dry-run"" mode) [code block]"
111695534,2892,sledgehammer999,2015-06-13T10:13:16Z,see this comment(and the following): [a link]
111863635,2892,ngosang,2015-06-14T18:44:35Z,i noticed that the sorting order has changed again #2501: ![a link]
427559047,9600,dzmat,2018-10-06T09:14:35Z,reworded commit message. also fixup-ed and rebased.
427717650,9600,glassez,2018-10-08T04:09:16Z,", such comments are at least meaningless (actually they are pleasing). especially in the actively reviewed pr. even in the absence of activity, there are usually reasons for this (e.g. lack of free time)."
427884449,9600,dzmat,2018-10-08T15:46:18Z,"squashed, rebased."
429543736,9600,glassez,2018-10-13T13:53:14Z,thank you all!
173432650,3235,Chocobo1,2016-01-21T02:34:08Z,"i think this pr will have a better chance of getting merged by making these options available in ""advanced options"". maybe later when i find time."
178441409,3235,Chocobo1,2016-02-02T08:26:16Z,commits & first post updated.
304206664,3235,Chocobo1,2017-05-26T06:52:41Z,"i plan to resurrect it after i'm done with other things, it's very low prio now."
321564854,3235,sledgehammer999,2017-08-10T14:18:14Z,"fyi, this is approved. you can resurrect and merge. and probably you don't need 3 separate commits."
321565773,3235,sledgehammer999,2017-08-10T14:21:16Z,"i think `guided_read_cache` and `use_parole_mode` can always be on. imo, they don't need a user setting."
321737086,3235,Chocobo1,2017-08-11T06:00:00Z,"libtorrent made `use_parole_mode = true` as default, i'll drop this one. as for `guided_read_cache`, it's disabled by default in libtorrent and might not get enough testing. imo make it tunable is better. now i plan to add some other options, i'll put out a pr first, then we can bargain."
321976399,3235,Chocobo1,2017-08-12T11:50:49Z,i've updated this pr and now it add options for the following settings: [code block]
322212756,3235,Chocobo1,2017-08-14T14:54:55Z,"i think it's ready, the only thing left is [a link]"
322233033,3235,sledgehammer999,2017-08-14T16:07:01Z,shit. i thought i had replied to this. yes. no problem. approved by me. now remains to revoke his block.
322389010,3235,Chocobo1,2017-08-15T06:39:01Z,pr updated.
323724974,3235,Chocobo1,2017-08-21T11:54:47Z,updated.
324352933,3235,Chocobo1,2017-08-23T14:31:03Z,any comments?
324367424,3235,zeule,2017-08-23T15:11:49Z,no.
324523827,3235,Chocobo1,2017-08-24T03:36:21Z,thanks to everyone
340542463,3235,Seeker2,2017-10-30T18:35:23Z,was announce_to_all_tiers dropped because qbittorrent lacks the gui support for it? send upload piece suggestions cripples upload speed for some reason. i'm guessing it's an super/initial seeding type of feature to be used with low upload max? prefer_tcp set to false also causes local peers to slow to almost nothing when internet utp peers are connected even when lan speeds are set to unlimited.
340585853,3235,sledgehammer999,2017-10-30T21:11:56Z,look at #7660
413577862,9349,Chocobo1,2018-08-16T15:04:59Z,"i was thinking, are there other parameters than --portable that user will want to put in .params file? if not, it could be a lot easier to just detect the file (""portable"" or whatever) existence and add `--portable` to argv list. either way, this pr is a great step towards true portable mode. also i reckon this feature should be windows only."
413650301,9349,zeule,2018-08-16T18:58:38Z,"well, one can use the `--profie` there too. i just feel weird about changing application behaviour with appearance or disappearance of a directory. linux users use flash drives too."
413747014,9349,Chocobo1,2018-08-17T03:24:54Z,"ok, afaik it is quite common on windows apps, to name a few, foobar2000, utorrent, mpc-hc, ccleaner, they just detect some file or directory and goes into portable mode if exists."
416328459,9349,sledgehammer999,2018-08-27T18:48:42Z,"does [a link], which is static, actually require a q*application running instance?"
416517919,9349,zeule,2018-08-28T09:37:33Z,"yes, it requires an initialised app object."
416690006,9349,zeule,2018-08-28T18:21:11Z,": yes, any command line parameter can be read from that file."
416773177,9349,sledgehammer999,2018-08-28T23:29:04Z,i hope you didn't copy the getexename()/executablepath() code from another codebase without mentioning it.
417017391,9349,glassez,2018-08-29T16:30:08Z,"i would put them in the ""main.cpp""."
417020819,9349,glassez,2018-08-29T16:40:15Z,", is this feature generally approved?"
417021794,9349,glassez,2018-08-29T16:43:05Z,", what about param redefinition? what source is preferred? command line or file?"
417030691,9349,zeule,2018-08-29T17:08:31Z,": command line, of course, because they go last. the same as you pass a parameter via the command line twice."
417417649,9349,zeule,2018-08-30T18:17:16Z,"shortened the function, moved it into the main.cpp file."
418177121,9349,zeule,2018-09-03T18:54:16Z,"would a menu command (""tools|enable portable mode"") to write/remove the portable switch to/from the .params file provide a better user experience?"
418428405,9349,glassez,2018-09-04T16:14:30Z,"i think not. it should be separate distro for ""portable"" version (or option in installer to generate ""portable"" installation."
418646432,9349,sledgehammer999,2018-09-05T08:33:18Z,"for windows, i can start providing a 7z ""portable"" distro along with the installers. (separate link/file) apart from the comment style fixes is there anything else holding this pr back?"
418647033,9349,sledgehammer999,2018-09-05T08:35:19Z,yes. unless there is a better way proposed to signal portable mode in an automatic way.
418658148,9349,glassez,2018-09-05T09:11:42Z,"certainly. this pr contains many other coding style violations, as i mentioned earlier."
418681845,9349,mzso,2018-09-05T10:30:49Z,"[a link] commented on [2018. szept. 4. 18:14 cest]([a link] ""2018-09-04t16:14:30z - replied by github reply comments""): [a link] commented on [2018. szept. 5. 10:33 cest]([a link] ""2018-09-05t08:33:18z - replied by github reply comments""): how about both? i see no reason for the installer to not have the option."
418693974,9349,sledgehammer999,2018-09-05T11:17:04Z,it's easier to have the executable ready than waiting an installer to output them easier for me. the installer programming language will complicate this extra option.
419361986,9349,zeule,2018-09-07T08:20:56Z,"the installer just needs an option to output a prepared file with the command line switches, doesn't it?"
419363137,9349,zeule,2018-09-07T08:25:22Z,can't fix them unless you point them out.
419373688,9349,mzso,2018-09-07T09:02:45Z,"[a link] commented on [2018. szept. 7. 10:20 cest]([a link] ""2018-09-07t08:20:56z - replied by github reply comments""): one might want to update a portable instance, and the file since it's not exclusively for portable mode might have other content. by the way this effects an archived package also, also a lot more negatively. because the installer could handle this automatically, but the user needs to remember that the file was customized and recognize that overwriting with all files the package will destroy this customizations. (thus the upgrade process is a fair bit more complicated) (i ran into an issue like this with notepad++, which nonsensically has a default hotkeys file instead of creating one, so my hotkey customizations were always reset to default, before i discovered what was happening.)"
419377621,9349,zeule,2018-09-07T09:17:32Z,"i don't quite share your concerns, because if the file was installed via an installer, editing it is like patching the executable itself. if users do that, they are expected to maintain their modifications. i can submit another one (abandoning this one) 1. implement a tiny executable that sets the portabke mode via the environemnt variable or command line swithch and call the actual qbt executable. 2. change the installer code to rename qbittorent.exe and install the new executable under that name instead. but, frankly, the params file seems to be simpler and robuster to me."
419381761,9349,mzso,2018-09-07T09:32:28Z,"[a link] commented on [2018. szept. 7. 11:17 cest]([a link] ""2018-09-07t09:17:32z - replied by github reply comments""): are you joking? how can you say editing a text file meant to hold custom parameters that can't even be modified by the app itself is like patching an executable? waving the issue off won't make it less of a problem for users. an an empty *.portable file would be simple and robust. this way you need to deal with whatever parameters that were added."
419385609,9349,zeule,2018-09-07T09:45:51Z,"no, i'm not. why would i be? everything installed be an installer or another package manager is read-only for a user. i must admit that the idea of using an installer for a portable application looks odd to me. maybe you could share a use-case, please? not that robust as it can't contain profile directory and i can easily imagine why cache and temp directories (the last one is not implemented yet in the portable mode) should not reside near the application binary."
419410252,9349,mzso,2018-09-07T11:24:30Z,"[a link] commented on [2018. szept. 7. 11:45 cest]([a link] ""2018-09-07t09:45:51z - replied by github reply comments""): this just sounds like your bias to me. using an installer option to generate a portable instance is not unheard of, it's practical. besides in a portable instance it's normal for the user to manipulate files. it's not that the .params file is not meant to be edited. how do you image people would use it?"
419412770,9349,zeule,2018-09-07T11:36:32Z,"sorry, i can't see how it can be practical. portable app is meant to be taken away from a system where it was set up. then how the package can be unistalled, for example? updated? exactly! but not with the installer program. in my vision the portable app is created by copying an existing installation/package archive file contents and then the files can be manipulated as needed."
419415785,9349,glassez,2018-09-07T11:51:12Z,i still prefer have separate portable build to avoid start time slowdown (because of reading some files etc.).
419416108,9349,glassez,2018-09-07T11:52:35Z,i'm also not sure this method won't break commandline parameter handling on windows.
419423669,9349,mzso,2018-09-07T12:26:39Z,"[a link] commented on [2018. szept. 7. 13:36 cest]([a link] ""2018-09-07t11:36:32z - replied by github reply comments""): you run the installer, point it to the existing portable instance's folder, and it would update it. uninstalling? you delete the folder if you don't need it anymore. the installer's purpose would be to not overwrite the .params file if it's modified. (and add the portable switch, when selecting portable mode, otherwise it would not make sense.) manually? that'd remarkably cumbersome."
419433139,9349,zeule,2018-09-07T13:06:02Z,"in what way? , i was always sure that the main purpose of a installer package is to track installed entities and remove all of them when uninstall is requested. this is certainly impossible with a portable application. deleting files does not mean reverting system changes made during the installation. probably, i just don't understand why do you need a portable qbt and how would you use it."
419445838,9349,mzso,2018-09-07T13:51:17Z,"[a link] commented on [2018. szept. 7. 15:06 cest]([a link] ""2018-09-07t13:06:02z - replied by github reply comments""): there are no system changes to revert with a portable instance i see no reason why it couldn't also be used for creating and upgrading portable instances"
419481401,9349,zeule,2018-09-07T15:45:24Z,"untrue, there are registry records. in this case what is the difference between an installation and an archive?"
419629499,9349,glassez,2018-09-08T10:15:05Z,"still, i don't see any serious reason not to have a separate ""portable"" build. why do we need all these "".params"" files, etc.? let's consider the following. ""portable"" build just uses predefined profile location (i.e. exe folder) and has ""portable"" mode enabled by default. why we need ""portable"" mode as runtime option at all? why someone needs to use the same installation in both modes?"
419676769,9349,mzso,2018-09-08T22:25:00Z,"[a link] commented on [2018. szept. 8. 12:15 cest]([a link] ""2018-09-08t10:15:05z - replied by github reply comments""): it's fine by me. (whether it's packaged separately or not.)"
420912596,9349,glassez,2018-09-13T07:35:02Z,"from `qcoreapplication::arguments()` docs: _on windows, the list is built from the argc and argv parameters only if modified argv/argc parameters are passed to the constructor. **in that case, encoding problems might occur.**_"
421342632,9349,zeule,2018-09-14T12:25:34Z,", i don't understand what does the quoted text have to do with the changes in this pr. if one wants to abuse the qt's parameter parser, it doesn't matter how to pass strings, either via the command line directly, or writing them into a file and reading afterwards."
422124958,9349,glassez,2018-09-17T18:39:35Z,"no. it's about valid use case. qt don't use argc/argv on windows by default since it contains strings in 8-bit encoding and so it cannot correctly handle params containing characters missing in such code page. it is use `getcommandlinew()` instead. but when you pass modified argc/argv to the qapplication constructor qt has to use it. **_in that case, encoding problems might occur._** e.g. in case when user tries to open some file containing any of missing in current code page characters."
422504427,9349,zeule,2018-09-18T18:45:12Z,"aha, thanks! reading qt sources helps. my god, what a dirty hack... ok then, i will hook into the `qbtcommandlineparameters` class."
423772762,9349,sledgehammer999,2018-09-22T20:55:27Z,"i don't want to poop the party but i have opened #9584 as an alternative. (also, i haven't read the last discussions in here for at least a week)"
438310837,9349,zeule,2018-11-13T15:38:14Z,"it was nice to control qt options from that fiel, but qt documentation does not agree. thus the pr was greatly simplified. the .params file is read during the internal qbt parameters parsing."
563925042,9349,glassez,2019-12-10T08:34:26Z,", , are we still interested in this feature? (given the fact that the author has been inactive for a long time)"
562857329,11592,sledgehammer999,2019-12-07T14:49:02Z,"guys, i think i addressed all your comments so far. take a look at the new commit."
562921055,11592,SadPencil,2019-12-08T07:39:19Z,"as an ipv6 user, can't wait for this bug being fixed. i hope this fix could be approved fastly."
562936390,11592,sledgehammer999,2019-12-08T11:16:26Z,"in this push, i addressed almost all the comments, apart 2 from glassez."
563291012,11592,sledgehammer999,2019-12-09T15:26:08Z,i think i addressed everything and i did some furhter refactor. due to that i implemented it as a separate temporary commit. it will be easier for you to see what i changed.
563292406,11592,sledgehammer999,2019-12-09T15:29:10Z,the missing part is the webui code itself. will you be able to plug in the correct js/html changes?
563300376,11592,Chocobo1,2019-12-09T15:47:33Z,currently i'm low on free time to write code unfortunately.
563764120,11592,glassez,2019-12-10T04:26:57Z,"isn't empty string treated as ""any ip"" by app core? then it should be used here as well."
564086458,11592,sledgehammer999,2019-12-10T15:28:53Z,"now the webui receives an empty string to mean all addresses, `0.0.0.0` to mean all ipv4 addresses and `::` to mean all ipv6 addresses. this seems to have the benefit of the least possible code/refactoring. i also changed how the gui populates the comboboxes to match the logic of the webui comboboxes. and i probably changed other things here and there. so forgive me but please take another look at the whole thing."
564204792,11592,sledgehammer999,2019-12-10T19:25:20Z,"on another note, i just noticed that we do a lot of [code block] but i realize that we can collapse it to: [code block] i'll make the changes later (only code affected by me)."
564532564,11592,sledgehammer999,2019-12-11T13:11:17Z,closes #11632
565037198,11592,sledgehammer999,2019-12-12T14:48:02Z,do you approve?
565039149,11592,glassez,2019-12-12T14:52:25Z,i would still change canonicalipv6addr to suggested canonicalipaddr form. but you can ignore this opinion.
565041647,11592,sledgehammer999,2019-12-12T14:58:00Z,"imo, i don't want to give the impression that the function can be used with ipv4. (yes, it will work but it shouldn't be used for ipv4)."
565110920,11592,glassez,2019-12-12T17:43:41Z,"you cannot forbid it since function accepts generic host address (function name isn't enough, there can be use case when parameter is bypassed unchecked). you either can break it at runtime (throw an exception) or change it to be valid (have a meaning) for any kind of host address. if my argument is irrelevant to you, you can merge this pr, i have nothing to add."
565125990,11592,sledgehammer999,2019-12-12T18:24:39Z,"no, i meant that it is discouraged through the function name. thank you all for the reviewing."
568168024,11592,ghost,2019-12-21T09:48:55Z,"this introduced the tracker not working bug in v 4.2.1 the annnounce goes through and tracker status says ""working"" but still the torrent gets moved to error section unless you expilcity set ""optional ip address to bind to"" to ""all ipv4 addresses"" #11691"
576265055,11592,FranciscoPombal,2020-01-20T13:03:30Z,"there is new information available about this topic in the libtorrent documentation: [a link] not sure if this warrants any changes/additions to the code introduced in this pr, but i thought i should give the heads-up."
980568171,15793,glassez,2021-11-27T12:27:34Z,"note for the testers: this pr is still draft. something can work incorrectly for now. do not test it with your real profile. it would be very useful to me if you tested it both with a clean profile and with some already existing one (you can copy your regular profile) to check the correctness of the upgrade. for the completeness of testing, it is necessary to have several categories/subcategories with torrents in them. some categories need to have a specified ""save path"". some torrents should have an automatic tmm enabled. the option to save incomplete torrents in a separate folder should be enabled . some torrents should not be fully downloaded. all of the above should be configured before the first launch of this pr (you can create such a test profile based on your regular one and save it somewhere so that you can use a copy of it in tests later)."
980584160,15793,glassez,2021-11-27T12:47:29Z,"please don't pick on gui - it's not my familiar area. if there are obvious/objective shortcomings, then of course i will correct them. but please, let's leave all the subjective and controversial things for later issues/prs. webui (as usual for me) is out of scope of this changes. you just need to ensure that existing functionality isn't broken. webapi can be enriched with the new methods to allow manipulating per-category and per-torrent download paths in this pr or in one of the following ones."
980781096,15793,thalieht,2021-11-27T18:25:58Z,"""download folder"" sounds indistinguishable from ""save path"" to me. maybe you meant ""downloading folder"" but that's not much better. i'd go with just incomplete/unfinished. i know it's internal but think of the future code readers. are the relevant options in new torrent dialog and torrent options dialog supposed to mirror the global option i.e. are they an indicator that the global option will take effect or to override it? in torrent options in manual mode, the option is always deselected by default which would suggest that it overrides the global, whilst the option in new torrent dialog mirrors the global one. existing partially downloaded torrents in manual mode aren't moved to the global incomplete save path. they continue downloading in final destination. (temp folder option was disabled in my existing profile prior to testing this pr if it matters). in new torrent dialog, auto tmm mode, when changing category the save path and temp save path lineedits have each other's path filled in. in torrent options the browse... button for the relevant option opens a ""file"" dialog instead of a ""folder"". the final save path is always the default no matter what is set in new torrent dialog in manual mode. in new torrent dialog, when the temp folder checkbox is unchecked, it doesn't become checked when changing to autotmm mode. i didn't do any of that yet. ~~/off topic this would be much simpler if ""manual"" mode didn't exist for categories. if i'm not mistaken categories in manual mode are no different than tags.~~"
980787306,15793,glassez,2021-11-27T19:13:13Z,"""download path"" means the path where the torrent saves files during download. i still had the option to use the names ""finished (save) path/unfinished (save) path"" or ""complete (save) path/incomplete (save) path"" but for some reason i like them less. in any case, none of them makes clear sense to third-party code readers. but of course i will concede to the option that will be supported by a majority of votes. it is supposed to work the same way as some other options: in ""add new torrent dialog"" it is initially set to the global default value, but allows you to override it; in ""torrent options dialog"" it displays the value of the selected torrent and allows you to change it. i'm sorry, i don't understand what exactly you mean... torrent can be either in ""manual"" or ""automatic"" mode. currently category options (save and download paths) are applied to torrents that are in ""automatic"" mode. everything else will be checked by me and commented on later."
980788991,15793,glassez,2021-11-27T19:26:40Z,"note: any option that is part of ""auto management"" feature is designed to behave in the following way: 1. global value of such option is just ""default value"" for ""manual"" torrents. it is used as an initial suggestion in ""add new torrent dialog"" or if torrent is added non-interactively. once torrent is added it has its own ""copy"" of this option so it doesn't more follow the global one if it's changed. 2. ""automanaged"" torrents follow their category options. if category has no some option overridden the global one is used. if category has relative path it is resolved against corresponding global one."
980803682,15793,thalieht,2021-11-27T23:06:04Z,"/off topic never mind, it was an undigested idea."
981585236,15793,thalieht,2021-11-29T12:22:08Z,i've tested all that and i haven't found any problems. i'll test again after the fixes. what's the deal with the partially checked option in category options dialog? why not just unchecked for default?
982252879,15793,glassez,2021-11-30T03:34:27Z,it's the way to configure category to not override global setting. honestly tri-state checkbox isn't so good in this role. combobox with default/enabled/disabled seems better for me.
987909518,15793,glassez,2021-12-07T13:07:36Z,done. should be fixed now. should be fixed now. should be fixed now. should be fixed now. also added more improvements.
988073237,15793,glassez,2021-12-07T16:15:11Z,done. i hope i didn't missing something...
988240848,15793,thalieht,2021-12-07T20:26:24Z,"still happening. general: ""use another path for incomplete torrents"": i now see that ""another"" refers to the final destination but i initially thought it was referring to the global temp path. i tried to think of a good neutral option description that doesn't have this problem but i failed. e.g. ""use a temp folder for incomplete torrents"". category settings: isn't ""default"" supposed to use the global temp path? if it is, it's not reflected in ""torrent options"" nor in ""new torrent dialog's"" temp paths while in autotmm mode and a category in ""default"" mode is selected. they are both updated with whatever temp path is filled in category options and most importantly, there is no distinction between ""default"" and ""yes"" functionally. in both modes torrents with that category are downloaded in whatever is in the category's ""path"" lineedit. nitpick: ""path:"" label in category options should also be disabled when ""no"" is selected. new torrent dialog: (not important) in manual mode, the global temp path should always be an entry in the temp path's combobox. (also not important) imo temp path should have its own ""remember last used save path"" instead of coupling the current one to both the save path and temp path. torrent options: while in autotmm, changing category doesn't update the temp path options like in new torrent dialog."
988480240,15793,glassez,2021-12-08T04:07:05Z,"if they were saved to the target path before the upgrade (i.e. if the temporary folder was disabled), then ""manual"" torrents should not have an assigned ""download path"" after the upgrade. the upgrade logic is such that the upgrade itself should not cause any file movements (i.e. the current locations will be applied in one way or another). if you change default/global ""download folder"" settings after upgrade it shouldn't affect ""manual"" torrents."
988487420,15793,glassez,2021-12-08T04:23:46Z,"just take it contextually. the path for saving the torrent is indicated here next to it. so it means ""save the torrent there, but save it at another path until it is complete"". but maybe use ""save at another path until it is complete"" or ""save at another path while it is incomplete""? as i mentioned above, i have problems with ui design."
988494016,15793,glassez,2021-12-08T04:43:21Z,"no. currently it is supposed to affect only ""use download path"" setting and not ""download path"". in other words they are handled separately so you can override ""download path"" but it will be used only when ""enabled"" globally. do you think it's over customizable?"
988515716,15793,glassez,2021-12-08T05:38:37Z,"does it behave like this for the ""save path"" combobox? i kind of tried to follow it... but this is too much, isn't it? in any case, all such ""not so important"" things can be adjusted later, if someone else cares about it."
988768808,15793,thalieht,2021-12-08T12:27:24Z,forgot to mention that. temp folder was enabled before the upgrade and these torrents were moved to the final destination on first launch. unfortunately the same can be said about these. do you think it's over customizable? i can't understand what this means. no idea. personally i only use autotmm but this is what came to mind when testing it. :thumbs_up:
988820918,15793,glassez,2021-12-08T13:36:39Z,"i just checked the upgrade. the download path was correctly assigned to all incomplete ""manual"" torrents... are you sure they are moved? note: ""save path"" in torrent properties view is literally ""save path"" and not ""actual location of torrent content""."
988844679,15793,thalieht,2021-12-08T14:07:29Z,"yes i'm sure. i use ""open destination folder"" and it opens the final destination with the files downloaded so far in it."
988860966,15793,glassez,2021-12-08T14:26:44Z,"...but ""download path"" of torrent correctly points to previously used ""temp folder""? and torrent is still incomplete?"
988869011,15793,glassez,2021-12-08T14:36:20Z,"there are two related options: 1. download path 2. is the use of ""download path"" enabled or disabled category can override one or both of them. e.g. you can assign custom ""download path"" to category but still leave ""use download path"" to be ""default"" so it will be used only when enabled globally."
988991342,15793,thalieht,2021-12-08T16:54:26Z,"oh no no, that option is disabled for such torrents (manual) in their torrent options (should be enabled). assuming that by ""download path"" you're referring to the temp path...as i said earlier, an ambiguous term. and yes torrent is still incomplete. that is most unexpected (for me). i never would have guessed that. so the only difference from what i was expecting is which temp path to use, category's or global, personally, i don't see the usefulness of using the category's temp path instead of the global temp path since we can fine tune the category's temp path to our liking with ""yes and no"" options. i don't know what users want, but if i were using this feature i would want ""default"" to mean use the global setting and path."
989045493,15793,glassez,2021-12-08T18:01:31Z,"maybe you started upgrading from some kind of ""dirty"" profile (with `categories.json` already created by previous upgrade)?"
989107164,15793,thalieht,2021-12-08T19:02:30Z,uhhh oops :) false alarm. i didn't know about this new file though.
989536490,15793,glassez,2021-12-09T05:50:58Z,"okay, let's get this straight (for me). here's what you expect from the category options (as i understand it): ""use another path for incomplete torrents"" is **default**: 1. path field is disabled and shows default temp path of category 2. default temp path of category is used when it is enabled in preferences ""use another path for incomplete torrents"" is **no**: 1. path field is disabled and empty 2. temp path is never used regardless of settings in preferences ""use another path for incomplete torrents"" is **yes**: 1. path field is enabled 2. given temp path is always used regardless of settings in preferences"
989740781,15793,thalieht,2021-12-09T10:55:44Z,"no... i would expect default to use the global settings so: 1. path is disabled and shows the global temp path. maybe the path is empty if the global setting is disabled? to indicate that to the user. 2. global temp path is used when enabled in the preferences or if it's not, don't use a temp path. ""yes"" and ""no"" as they are (and you described)."
989878189,15793,glassez,2021-12-09T13:59:53Z,"the difference, as i understand it, is ""global temp path"" vs ""default temp path of category (aka global temp path with category name appended)"", right?"
989923528,15793,thalieht,2021-12-09T14:51:14Z,"oh that's what you meant by ""default temp path of category"" then sure that sounds good to me. ignore my post [a link] you got it right in [a link]"
996820606,15793,glassez,2021-12-17T15:40:48Z,please give priority review to [a link] and [a link] they are less complex than this pr and i would like them both to get into the v4.4 release.
998958457,15793,glassez,2021-12-21T17:20:14Z,done.
999060555,15793,thalieht,2021-12-21T20:06:04Z,would it be too much to ask for the tri-state combobox in torrent options as well (as in category options)? there doesn't seem to be a way for torrents in manual mode to be automatically updated to a new global temp path state (on/off and/or new temp path).
999086319,15793,glassez,2021-12-21T20:52:11Z,"that's how it should be. otherwise, what is the difference between the modes?"
999098608,15793,thalieht,2021-12-21T21:14:36Z,the category settings.
999270097,15793,glassez,2021-12-22T04:07:50Z,"the main difference is ""following or not global settings"". the ""manual"" mode is for people who don't want anything (related) to be affected when you change default settings. it already works the same way for the ""save path"". the ""temp path"" had no division into modes before, so we can say it was always ""automatic"". note that some people ask category options to be used as default ones for ""manual"" torrents as well. and i'm inclined to provide this ""feature"" at least optionally."
999796026,15793,thalieht,2021-12-22T18:57:54Z,"alright, last issue from me, i can't find any other problems: new torrent dialog: manual mode, temp path is not empty when the option is unticked."
1000820837,15793,glassez,2021-12-24T12:26:19Z,should be fixed now.
1000870921,15793,thalieht,2021-12-24T15:14:11Z,"almost :) when default mode is manual and global temp path enabled, the temp path in new torrent dialog is empty on dialog creation (the global path is used)."
1000884269,15793,glassez,2021-12-24T15:52:03Z,and now?
1000908437,15793,thalieht,2021-12-24T17:51:36Z,no more problems.
1003675674,15793,glassez,2022-01-02T07:34:11Z,"do you think i should merge it now so that it can possibly get into the upcoming v4.4 release, or postpone it until the next v4.4.1 release?"
1003676874,15793,Chocobo1,2022-01-02T07:49:41Z,"since it is a new/redesigned feature, it should go into major release, so 4.4.0."
1003763120,15793,glassez,2022-01-02T19:25:48Z,", thank you for reviewing and testing!"
1004030394,15793,The5kull,2022-01-03T11:28:11Z,updating to this build made all my torrents disappear. [a link]
1004078013,15793,glassez,2022-01-03T13:06:00Z,"any details? platform/os, screenshots, configs, logs? , can you test it again? i'm away now."
1004174728,15793,thalieht,2022-01-03T15:37:10Z,i can reproduce with that build in portable mode but i can't when i compile master in linux (not portable). .fastresumes files are still there and torrents reappear unharmed when changing to a previous build.
1004182566,15793,glassez,2022-01-03T15:50:00Z,on windows? are there some interesting log messages? i can't too.
1004216680,15793,xavier2k6,2022-01-03T16:44:01Z,dropped in one of those builds as a replacement for my main setup & poof torrents appear gone! (windows 10 x64 - `c:\program files\qbittorrent`) logs: [code block]
1004217004,15793,thalieht,2022-01-03T16:44:34Z,are there some interesting log messages? yes windows. nothing strange in the log.
1004218664,15793,glassez,2022-01-03T16:47:36Z,"well, i found the problem. will fix it asap. i hope you'll help with testing. v4.4 release is already on the doorstep."
424954495,9541,Piccirello,2018-09-27T04:21:11Z,"whoops, good catch. pushing a new commit."
437464062,9541,xnoreq,2018-11-09T19:11:38Z,"why would you concatenate ids with pipes into a long string just to later split them again?! why not do the proper thing and use a field ""ids"" that has an array of integer ids as value? so instead of `""id"": ""134|140|500|....""` you have `""id"": [134, 140, 500, ...]`. instead of `""id"": ids.join(""|"")` you have `""ids"": ids`. instead of doing the split server-side you iterate over the array of integers directly."
439763954,9541,Piccirello,2018-11-19T03:51:03Z,"this is currently done to maintain consistency with all our existing apis. in the future these should all be cleaned up and switched to the ""correct"" way."
446078052,9541,Chocobo1,2018-12-11T05:33:00Z,thank you!
1465441361,18645,brvphoenix,2023-03-13T03:05:14Z,"i'm not skilled in c++, so please forgive me for asking some ridiculous questions. can i avoid cross dependencies if using the application interface class? do you have any suggestions for this, keeping the original form, using a singleton or any other way?"
1465524179,18645,glassez,2023-03-13T05:12:01Z,i believe the easiest thing for all of us would be to revert this commit.
1465543650,18645,glassez,2023-03-13T05:36:56Z,"isn't `read files by qdatastream` a separate thing? i would strongly recommend to extract it into separate pr with explanation about its goals. also i would split ""compressing"" and ""sorting"" work unless they are really too interlinked."
1471578205,18645,brvphoenix,2023-03-16T09:16:36Z,i'm ok with that ;).
1604166446,18645,glassez,2023-06-23T11:45:23Z,"finally i found time to complete this review. i have a lot of comments about coding style, etc. but this is not the most important thing, it can be easily fixed. i have a couple of more significant claims that i would really like to be resolved before it is approved: 1. it would be better to unify the naming of backup files in such a way that the name of the compressed file differs only by adding a `.gz` extension to the name of the corresponding uncompressed one. 2. i really don't like all this hassle with ""sorting"" backup files (and in fact, it's renaming a lot of files). it would be better for the backup file to remain untouched after its creation (up to its deletion, if configured). we could use the timestamp as a unique component of the file name."
1604746834,18645,glassez,2023-06-23T19:07:25Z,"another unification i would like to see is the following: regular backup is produced just by renaming the original log file. i would like to preserve this behavior and apply compressing to backup file itself. imo, this could give the following advantages: 1. if compression fails for some reason, we will still have an uncompressed backup file, 2. since compression in this case is an addition to the main algorithm, it will be much easier to do it in a separate thread (i.e. we create a backup file as usual, run an asynchronous ""compression"" task, and continue to do our usual things of writing log messages to main file)."
1605333940,18645,brvphoenix,2023-06-24T09:31:40Z,current the log backups will not be renamed and the compressed backup files will be named as ` + .gz`
1853948818,18645,luzpaz,2023-12-13T13:46:12Z,any traction here ?
617361053,12574,xavier2k6,2020-04-21T19:16:59Z,does this or the other pr [a link] close #8330?
617485996,12574,FranciscoPombal,2020-04-22T00:57:43Z,"technically, that issue should have been closed with the merging of the linked pr in the last comment (fixed that now). these new prs are just follow-ups that improve on that original ones, that arose from my additional experience in managing the issue tracker."
618537536,12574,LordNyriox,2020-04-23T17:33:08Z,": not strictly related to the pr itself, but i noticed that both the old template and this one do not seem to have a defined layout for ""feature requests"". for instance, submitting a log entry for a behavior that does not yet exist, does not seem viable to me. any advice on this?"
618586700,12574,FranciscoPombal,2020-04-23T18:48:03Z,"ok, i have changed things around a bit. now there are separate templates for bug reports and feature requests, as well as links to the relevant support communities. additionally, i threw in a simple pr template. when a user clicks ""new issue"", now they will get something similar to this this: [a link] as a bonus, github will no longer complain about ""you are using an old version of issue templates. please update to the new issue template workflow. learn more"" (check this here: [a link]"
618599690,12574,FranciscoPombal,2020-04-23T19:07:37Z,"i have pushed the changes to my master branch. ~the bug report and feature request templates are not showing up, but i think that is because my repo is a fork:~ edit: i fixed it. try it out here: [a link] here is what it looks like for a user: ![a link] note that the headers in the files like the following are metadata for github only and do not show up when the user is creating the issue: [code block] as a bonus, feature requests get automatically labeled on creation."
723572746,12574,xavier2k6,2020-11-08T12:46:02Z,"[code block]` how about something like this?? big wall of text to go through currently in this pr (that i can see people - straight away, deleting & writing their own thing.) i know, i certainly don't like it!! ### result: #### qbittorrent version/architecture (32bit/64bit) #### operating system/version #### (if on windows), please include (full version displayed in `command prompt` window) e.g. `[version 10.0.19042.xyz]` #### (if on linux), please include `libtorrent-rasterbar` and `qt` version #### install method (official installer/self-compiled/other - please specify) #### what is the problem #### what is the expected behavior #### detailed steps to reproduce the problem #### extra info (if any) #### mandatory attachments (log(s) and settings file)"
723572888,12574,xavier2k6,2020-11-08T12:47:05Z,"the reason i included the `full` version string is that: it gives a more searchable text string for determining what os the qbittorrent user base runs, this will also aid in the raising ""minimum supported""/""dropping"" of eol os's/because of dependencies/compilers etc. ### for example: #### windows 11 * [a link] - {_eol - oct 14th, 2024_} * [a link] - {_eol - oct 10th, 2023_} *** #### windows 10 * [a link] - {_eol - oct 14th, 2025_} * [a link] - {_eol - jun 13th, 2023_} * [a link] - {_eol - dec 13th, 2022_} * [a link] - {_eol - may 10th, 2022_} * [a link] - {_eol - dec 14th, 2021_} * [a link] - {_eol - may 11th, 2021_} * [a link] - {_eol - dec 8th, 2020_} * [a link] - {_eol - nov 10th, 2020_} * [a link] - {_eol - nov 12th, 2019_} * [a link] - {_eol - apr 9th, 2019_} * [a link] - {_eol - oct 9th, 2018_} * [a link] - {_eol - apr 10th, 2018_} * [a link] - {_eol - oct 10th, 2017_} * [a link] - {_eol - may 9th, 2017_} *** #### windows 7 / 8 / 8.1 * [a link] - {_eol - jan 10, 2023)_} * [a link] - (_eol- jan 12, 2016_) * [a link] - {_eol - jan 14, 2020_} * [a link] - {_eol - jan 14, 2020_} *** ### windows operating systems no longer supported as of 4.2.0 release (december 3rd 2019) *** #### windows xp / vista * [a link] - {_eol - apr 11, 2017_} * [a link] - {_eol - apr 11, 2017_} * [a link] - {_eol - apr 11, 2017_} * [a link] - {_eol - april 8, 2014_}"
723584886,12574,xavier2k6,2020-11-08T14:30:03Z,"[code block]` or maybe this? ### result: #### qbittorrent version/architecture (32bit/64bit) #### operating system/version #### (if on windows), please include (full version displayed in `command prompt` window) e.g. `[version 10.0.19042.xyz]` #### (if on linux), please include `libtorrent-rasterbar` and `qt` version #### install method (official installer/self-compiled/other - please specify) #### what is the problem #### what is the expected behavior #### detailed steps to reproduce the problem #### extra info (if any) #### mandatory attachments (log(s) and settings file)"
723655580,12574,FranciscoPombal,2020-11-08T19:38:31Z,"then their issue will be immediately closed and locked as invalid. this is a feature, not a bug, to filter out users who are not willing to put in the minimum effort."
723658083,12574,xavier2k6,2020-11-08T20:00:58Z,"you have to take in to account that for some users - looking at that wall of text is basically double dutch & may know nothing about markdown etc so may not know how it's supposed to look etc. there have been users here, who have made issues & just pasted the `sigabrt` crash reports for example with remarks like.....i dunno, just happened....it told me to report it here, so i did. (deleted - the template etc) `openssl`/`libtorrent`/`boost` don't even have that kind of text to read through/fiddle with etc. keep it to bare minimum/essentials & it's followed up."
723658849,12574,xavier2k6,2020-11-08T20:06:53Z,this is `openssl`'s [code block]`
723658964,12574,xavier2k6,2020-11-08T20:07:45Z,`liborrent` [code block]`
723659902,12574,FranciscoPombal,2020-11-08T20:15:23Z,"the libtorrent template is not sufficient for us. there is a selection bias for the kinds of users (i.e., more technical) who post issues on issue trackers of libraries, so it doesn't need to be more verbose than that, for the most part - those who post there already know what kind of information they must provide for the report to be useful. the same selection bias applies to openssl, but this is at least partly offset by the fact that openssl is a huge and ubiquitous project. i like the markdown hints and the fact that they attempt to redirect users to other resources, but this new template for qbittorrent also does this. perhaps it would also be nice to add something like ""if you're having trouble formatting the text the way you want, check out these resources: [a link] [a link] as for the crash reports - perhaps we should add something in the crash dialog along the lines of ""when submitting the bug report, please fill out the whole template properly, don't just copy-paste the stacktrace""."
723667669,12574,xavier2k6,2020-11-08T21:21:39Z,"i think, the main thing for `stack traces` is that they are posted in **code blocks** some crashes - have a window pop-up, user takes a screenshot & posts that with majority of info missing or don't copy it all correctly. (it'd be great if when qbittorrent crashed with stacktrace - it would automatically output it to a file) don't get me wrong here, i think the new template for choosing `bug report` `feature request` **is** a great idea! the only hang up i have really with the (wall of text) is the `checklist` is there really a need for it? (since there's already a link to the guidelines provided) could the guidelines be the very first step?? (before actually submitting new issue) the current headings could be like below, as i've shown previously....... warning is there & what is needed is clear. [code block]`"
723785514,12574,glassez,2020-11-09T06:16:34Z,"it would be just fine if github allowed us to have a ""create new issue"" form (instead of issue template) where we would place all these prerequisites, checkboxes, etc. in a friendly way, and it would simply not allow someone to create an issue if some of the required fields are not filled in or filled in incorrectly."
723923473,12574,xavier2k6,2020-11-09T10:30:51Z,that would probably be the best option all-round & i believe it is do-able with google form submissions/scripts. ref: [a link] & [a link] & [a link]
727193321,12574,glassez,2020-11-14T11:35:54Z,", have you any ideas about it?"
735506363,12574,FranciscoPombal,2020-11-30T02:15:09Z,"sorry for not answering sooner. now that i've cleared my 100+ issue backlog i can get back to important stuff. in short, i'm against this. this hearkens back to my arguments about requiring 1000 people to make 5% extra effort every once in a while (i.e. when they post an issue) vs. 10 people to make 5% extra effort all the time. it is not a huge barrier for entry for those 1000 people to fill in a markdown template with extensive instructions properly, while it is taxing for us to implement and maintain such a system on top of everything else we already do. - maintaining the template code is much more difficult for us and becomes a maintenance burden. plus it reduces the potential pool of contributors who can suggest/implement improvements to the template. - we probably actually want to filter out the users who wouldn't/couldn't fill out a markdown template properly. i'm all for reducing barriers to entry and improving contribution accessibility, but there are maintenance trade-offs to be made, and we must keep low-effort posting/spam under control. at the end of the day, contributing to foss projects is a deliberate decision. if someone's gonna do it, they're gonna do it, it's not a markdown template or other ancillary procedure that will stop them. as long as it's reasonable, and not some insurmountable amount of bureaucracy that wears them down by 1000 paper cuts, it's fine imo. but hey, i'm open to changing my mind. regardless, i think such a solution should be implemented in tandem with the current change, not instead of it. we should make it convenient for people to post high-quality issues on github with github itself."
735558319,12574,glassez,2020-11-30T05:37:38Z,"the idea is to separate information that is only important to the issue creator and only at the time of creating the issue (all these ""i read and accept"", links to coding guidelines, etc.) from information that is directly relevant to the issue itself and important to everyone else. alternatively, we can drop all these checkboxes, rephrase all these warnings and confirmations a bit, and add something like this: by creating issue, you confirm that you have read and agree with the statements above. _(note! all text above, including this line, should be deleted to avoid being included in the issue description)_"
787604110,12574,FranciscoPombal,2021-03-01T03:07:53Z,"this works well in other high-traffic projects. `youtube-dl` comes to mind, but there are many others. is having the checkboxes on top that much of a problem for you? you already know _you and other contributors_ can mostly ignore it. we just care that all checkboxes are ticked, which is something our brains immediately register within a couple milliseconds of opening the issue. plus, if you see an issue posted without all checkboxes ticked, **you can immediately de-prioritize it when perusing the issue tracker, since that information is shown in the issue pages** (look at the `4 out of 5` in this example): ![a link] the purpose of the checkboxes is to serve as a ""constructive educational filter"", by trying to accomplish these two objectives: - filter low-effort posters. - guide and assist diligent posters, who _want_ to post a high-quality issue, but might not not be aware of all the steps necessary to do so in the context of our project. i believe these are worth pursuing, even if it means a little more ceremony in the form of a ""header"" of checkboxes that at most causes the ""inconvenience"" of having to scroll down a little bit more in lengthy posts. this defeats much of the purpose of the checkbox ""header"" serving as an ""constructive educational filter"". also, you would no longer be able to check at a glance from the issue page if a certain issue might not be worth opening (as outlined in bold above). formatting directions for the user's eyes only (like how to ""tick"" the checkboxes), which we really don't benefit from seeing in the issue body at all are already hidden away as comments, so they won't show up no matter what."
792834795,12574,glassez,2021-03-08T15:32:44Z,one more note. some projects offer several templates for creating different types of issues. can we at least separate feature requests templates from regular issue ones?
792845555,12574,FranciscoPombal,2021-03-08T15:48:56Z,this pr does that.
792860240,12574,FranciscoPombal,2021-03-08T16:05:45Z,"from a random user, [a link] (emphasis mine): the new template also directs the user to the contributing guidelines, that contain tips on what useful information can be included to enrich the report."
792875698,12574,xavier2k6,2021-03-08T16:25:33Z,"i still think this would be the overall better option but i wouldn't see it as a necessity straight away & would certainly not want it to get in the way of this pr/work getting merged, what we have here is better than what we've got i suppose & it can be revised/re-configured/adapted etc or even replaced at a later stage."
792918257,12574,glassez,2021-03-08T17:19:58Z,"good. i agree. let others speak out, and we can merge it if there are no serious objections. besides, i can't check all the details of these templates myself."
792976376,12574,FranciscoPombal,2021-03-08T18:31:43Z,"yes (once there is approval i'll rebase and fix the merge conflict). an important point: this pr was first posted almost a whole year ago now. we had to suffer with a much worse issue template during that time, when this could have been merged much sooner. it took a whole year to realize that this was obviously objectively better than the existing one?? we need to iterate on these kinds of things faster. they don't need to be perfect from the start, and improving the quality of life for frequent contributors should be a top priority (refer back to my above point in [a link] about filtering low-effort issues and requiring 1000 people to make 5% extra effort every once in a while (i.e. when they post an issue) vs. 10 people to make 5% extra effort all the time)."
793050400,12574,thalieht,2021-03-08T20:24:04Z,i'm still against all those checkboxes. maybe replace them with just one? either way i won't insist/resist any more.
793352377,12574,glassez,2021-03-09T04:03:42Z,"not **obviously objectively better**. at least not for me. i still think it overcomplicated and it may not have as positive an effect as you advertise. but since you are dealing with it more, i let you improve it in a way that you think will be better."
848196226,12574,FranciscoPombal,2021-05-25T19:19:17Z,i believe all comments were addressed. previews updated in the op.
848374613,12574,FranciscoPombal,2021-05-26T00:43:36Z,"thanks for the review, all comments addressed."
848752027,12574,FranciscoPombal,2021-05-26T13:04:43Z,"thanks for the review, all comments addressed."
850877031,12574,xavier2k6,2021-05-29T18:20:14Z,should it be mentioned that we do not support `qbittorrent enhanced edition` `portableapps` versions & that issues relating to use of `docker` should be directed to `discussions`/`forum` etc.?
850880898,12574,ArcticGems,2021-05-29T18:43:07Z,"maybe where you choose between 'bug report' and 'feature request', it should say at the of both options ""no support for other forks/editions!"". example: `report a problem with qbittorrent to help us solve it (no support for other forks/editions!).`"
852365247,12574,FranciscoPombal,2021-06-01T18:52:42Z,"that's already mentioned in the contributing guidelines, i don't think it needs to be further emphasized here since we already tell the user to go read them. any further comments? i think this is ready to be merged now. it would be a nice improvement for all /bug-handlers."
852393728,12574,ArcticGems,2021-06-01T19:36:00Z,i still think this one is oddly phrased = maybe this is better? =
852608016,12574,FranciscoPombal,2021-06-02T00:41:16Z,"you're right, thanks for the suggestion. fixed."
852940466,12574,glassez,2021-06-02T11:14:59Z,"i have already expressed my opinion. but i won't stop it. i suggest that the team just vote. if the majority supports it, let's merge. , do you have any blocking objections?"
852948200,12574,thalieht,2021-06-02T11:27:54Z,"what this means now: ""this is **not** a support issue or question, so it belongs in discussions section, forum, or subreddit"" i would replace ""therefore"" with ""both of which are"" last comment from me: i would make the inclusion of logs/settings files ""opt-out"" with something like: ""include them unless you _know_ they are irrelevant to solving the issue"". examples: ""my fonts are too small"" ""translation problems"" ""the torrent's ""added on"" is reset on every restart"" etc. obviously the related checkbox would go away with this change. p.s. i won't ""officially"" approve this pr because it adds >1 checkbox but other than that lgtm."
852989745,12574,ArcticGems,2021-06-02T12:35:29Z,"i see what you mean. maybe also add 'report/request' in the beginning (request for 'feature request' part). = the use of 'issue' bugs me as well since the section is called ""issues"". maybe change it because it could confuse some users?"
853030504,12574,FranciscoPombal,2021-06-02T13:31:42Z,"ok, will do. we should not trust users to ""know it's irrelevant"". and even if they make the correct judgement, this will just lead to most taking the path of least resistance and not uploading the files even when needed, leading to the usual inefficient back-and-forth. other projects such as `youtube-dl` have similar demands and it works really well, no one complains. as i've said before, it is more scalable to demand a little more from reporters from the get-go. than it is to expect us (team members and contributors) to ask the same thing over and over again in each new issue. does this mean it has 1 checkbox too many, or that you would like it to have _only_ 1 checkbox (i assume it's the latter)? why is that a bad thing? it's the users who have to fill them in, not you. the number of filled checkboxes filled can be seen from the issues list. this can help you prioritize issues that have had more thought put into them before even opening them (the ones that have all checkboxes checked). , do you have any blocking objections? well i still need at least 2 ""official"" approvals, right? i just want to handle issues more efficiently and reduce the number of useless/low effort posts. as you've said before, so let's get on with this already after (after addressing chocobo's comments, if any, sooner rather than later i hope). if this doesn't work as well as i think it will, no one has a bigger incentive than me to fix it/improve it further."
853276561,12574,glassez,2021-06-02T18:17:25Z,ok. but you're still not the only bug handler. so i would like to see that there are no serious contradictions with the other members.
853353676,12574,xavier2k6,2021-06-02T20:15:46Z,"suggest -> **issue reporting section** suggest -> **feature request section** suggest -> changing all headers to something like below to avoid seeing `(type here)` `### qbittorrent info and operating system(s) ` `### if on linux, `libtorrent-rasterbar` and `qt` versions `"
853459460,12574,FranciscoPombal,2021-06-03T00:04:24Z,":+1:, done. i understand but i disagree (i have also thought of this in the past). i'm always concerned users will write inside the ` `, which is worse than leaving a `(type here)`. we already explicitly warn the user to delete each `(type here)` as they fill out the template in a comment above. i think it's better to go with `(type here)` for now, if we still see that many users are not deleting the `(type here)`s, we can then try alternative solutions such as the one you propose."
853508219,12574,Chocobo1,2021-06-03T02:17:21Z,no.
853714933,12574,xavier2k6,2021-06-03T09:07:48Z,"well, if they do that & we are attempting to tighten up the issue tracker procedures in this pr then we can mark it as invalid can't we? (as they didn't follow our instructions correctly) one overall checkbox may be sufficient enough for compliance with the instructions set out in `markdown` text but i won't insist on this. my opinion from [a link] would still be the best option & as i said previously this is something that should be looked at in the future. (maybe 6 months from now?) i don't think i have any other issues with this pr."
853735874,12574,FranciscoPombal,2021-06-03T09:39:56Z,"well we should be strict, but not super strict in closing issues for being invalid. a user may make an honest mistake; with the ` ` approach, the issue may not be understandable unless we specifically inspect the raw text. with the `(type here)` approach, the most that can happen in that case is that there is an extra `(type here)` appended/prepended to whatever the user writes, which is not ideal, but not that harmless, as the content is still all readable - and not a reason alone to close the report. we can always change this in the future if users complain about it. fortunately i doubt this will be the case. as i've demonstrated before, multiple other projects have been using the ""multiple checkbox"" method successfully for a long time. they keep the user engaged and alert as they are reading and fulfilling each requirement. first we should see how this one does ""in production"". this might not be the perfect solution until the end of time, but it sure has a much better chance of being more effective than what we have now, and it is proven in other even bigger projects. then sure, something based on google forms can be looked at in the future. however, i have expressed my reservations about it, and i'd like to add that some users might not like the fact that they have to interact with an external google resource just to submit an issue... :+1:"
853740829,12574,FranciscoPombal,2021-06-03T09:48:15Z,"cool, can we finally get this approved and merged then? i believe and 's concerns have been addressed (but let me know if there is still some last minute change that you need!)."
854574976,12574,FranciscoPombal,2021-06-04T10:17:40Z,"i followed the conventions/guidelines in github's documentation. basically, - `.github/issue_template` directory name must be upper case - `.github/pull_request_template` directory name must be upper case - the name of the files inside `.github/{issue, pull_request}_template` are case-insensitive. so i chose lower case, to follow the convention of the rest of the files in the repository that don't have a case-sensitivity requirement. - `support.md` must (should?) be named exactly like that - `funding.yml` must (should?) be named exactly like that references: - [a link] - [a link] - [a link] - [a link] --- the `.github/pull_request_template/pull_request_template.md` file name should not contain the `_template` suffix for consistency with the rest, you are right about that, will push shortly to fix it."
856041762,12574,FranciscoPombal,2021-06-07T15:34:11Z,macos ci failure is obviously spurious.
856969675,12574,glassez,2021-06-08T17:48:39Z,thank you!
857042556,12574,ArcticGems,2021-06-08T19:26:21Z,"maybe when it's time to release 4.4.0 beta, you guys can add another part called something like ""[4.4.0 beta] bug report"" with its own checklist and relevant questions?"
857586531,12574,FranciscoPombal,2021-06-09T10:38:51Z,"these templates can be used without changes for such purposes. it is sufficient for the user to write ""4.4.0 beta"" in the version field. if we really do need a clearer separation between issues from that version and others, we'll just label them differently as they're posted."
898884373,12574,ArcticGems,2021-08-14T11:51:42Z,"i think the 'bug report form' that you can find in the 'ublock-issues' repository is interesting. no more template evading/removing or checkbox mistakes! it's worth looking into. pr: [a link] check out how it looks here (start a issue, but don't submit) = [a link]"
898912604,12574,xavier2k6,2021-08-14T16:05:37Z,thank you so much! this is a very useable option like what i had similarly suggested in [a link] [a link] [a link] i'll try to work on this/submit pr over the wknd.
898964175,12574,xavier2k6,2021-08-14T22:09:41Z,here's an example: ![a link]
899000136,12574,ArcticGems,2021-08-15T05:54:46Z,"sorry, missed what you wrote earlier"
1850311054,20118,OdinVex,2023-12-11T15:29:39Z,"i'll adjust in time, i think this was older tinkering. edit: hm, git clone built fine and ran fine, no adjustments. (cmake .; make) edit: added override, must've forgot. this too compiles, should address the macos fail. could someone else peek at it, i shouldn't code so early."
1850595547,20118,stalkerok,2023-12-11T18:00:07Z,"screenshots: gui: ![a link] ![a link] webui: ![a link] ![a link] didn't find any problems. but it's still better to use ""ip"" instead of ""address"" to save space, in case in the future someone (maybe you) wants to add a display of both ipv4 and ipv6 address at the same time, or even all possible addresses. or any other information. imho"
1850614144,20118,OdinVex,2023-12-11T18:09:45Z,"i mentioned in the original pr that you (the general you, as in qbittorrent team/developers/whoever it may concern) can decide what language to use. when i see *ip* i see *internet protocol*, not *address*, but i've been developing since 2004 in areas that include developing protocols and it just looks weird to my mind seeing ""external internet protocol"" when i'd need to refer to an address. again though, i don't care which way it goes in your (general your) project, anyone pick. i'm running around on 28"" 4k high-dpi setups, so i don't have space to worry about. \*shrug\* personally i'd rather the backend kept track of the last externally-detected addresses via type so it could end up ""external address(es): ipv4, ipv6\*"" where an asterisk denotes which was detected most recently, somewhat adapting and opportunistic in displaying more, maybe even a popup menu showing a small 'mini-exec' log of addresses detected with timestamp (or enabling the view for the log and simply preset the filter to detected ips...easiest and most 'integrated' in my opinion, less ui to manage or clutter and easily implemented). edit: i might take some time later today to implement separate ipv4/ipv6 addressing and displaying both using 'addresses' (or only one if only one exists and using 'address' *or whatever the project ends up deciding*). edit: cleanly refactoring to support both ip address types is problematic because other functions rely on not making a difference between them, such as `isreannouncewhenaddresschangedenabled` (see `handleexternalipalert` for more info). i haven't had any time to grasp the code, would that function matter or care about which type or is it safe to just go ahead and let it through regardless of ip address because it's still an externally detected change?"
1850698483,20118,OdinVex,2023-12-11T18:58:37Z,"i've implemented it all but i've come across a formatting situation. do you want a space between ipv4 and ipv6 addresses or a comma and space or what? edit: went with a single space. tested gui and webui, currently working on my end."
1850709635,20118,stalkerok,2023-12-11T19:06:00Z,would be a good option.
1850737147,20118,OdinVex,2023-12-11T19:24:34Z,"i didn't see the message until after commit, my bad. comma and space would require keeping track of whether both are being shown or just one and adjusting so, was easier to use trim at the time."
1850753581,20118,stalkerok,2023-12-11T19:33:39Z,"a small information window when hovering over an address with all available ip addresses would be a good option (the same as when hovering over ""connection status"", for example)."
1850759181,20118,OdinVex,2023-12-11T19:37:33Z,"qbittorrent currently doesn't keep track of addresses, merely the last detected of each type. the backend would need some further tinkering to do that. i don't do enough web development with javascript (i personally despite js) to add a popup, but i can look at it. edit: perhaps that popup should just show the log filtered for detected ip addresses?"
1850769621,20118,stalkerok,2023-12-11T19:44:15Z,perhaps i just don't really understand how good or bad it would look.
1850798324,20118,OdinVex,2023-12-11T20:04:07Z,"edit: i haven't pushed it yet but i've refactored the code to show (and send for webui) both ipv4 addresses and ipv6 addresses such as '`external address(es): detecting`' -> '`external address: 0.0.0.0`' -> '`external address: f:f:f:f`' ->'`external addresses: 0.0.0.0, f:f:f:f`'. the addresses past detected are available for someone to write a popup (or something) if desired. all strings allow for translation, of course. i wonder, should we mark the last detected one via asterisk in cases with multiple addresses? (ex: '`external addresses: 0.0.0.0, f:f:f:f*`') it might be helpful for someone and is easily done. edit: instead of a popup, i'd say just call the view->log.onclick, call the execution log->onclick, set the filtertextinput text to '`detected external ip.`' and set '`information messages`' to ticked in the drop-down. it'd show ip as well as when they were last used, less ui to develop. that'd work for the gui and webui, too."
1856520768,20118,OdinVex,2023-12-14T20:16:27Z,"i decided to reuse elements of the ui. the label at the bottom was converted into a button similar to setting download/uploads speeds. when it's clicked it'll open up the `execution log` and add `information messages` to the filter list to show messages as appropriate. the gui doesn't currently have a text input means of filtering the log, but at least they'll be shown (informational type). the webui is pre-set with the translatable text and works as well. try it out, see if it needs tweaking. if you want to call things 'internet protocol(s)' instead of addresses be my guest. edit: i felt this approach to reuse and reinforce use of the execution log as a means of information conveyance was best. it beats adding more ui that would need maintenance and simply works. every user-facing string is translatable via `tr` and `qbt_tr`, i paid attention to make sure i used that 7 strings total including the transitory-state strings."
1856532952,20118,OdinVex,2023-12-14T20:26:21Z,"except one string, forgot that one, added. :sweat_smile:"
1857543210,20118,glassez,2023-12-15T09:19:43Z,"we don't want to `call things 'internet protocol(s)' instead of addresses`. we do want to write `ip` as a shortcut of `ip address`. i can't figure out what the problem is. a similar thing (called ""metonymy"") is used everywhere (just look around, it's strange that you haven't come across it). we say ""ip"" instead of ""ip address"", ""e-mail"" instead of ""e-mail address"" whenever the context allows us to do it unambiguously."
1857572492,20118,glassez,2023-12-15T09:42:55Z,"is it a really good idea to do it this way? firstly, it is doubtful to implicitly enable something that was previously explicitly disabled by the user. secondly, the log can be filled with a lot of messages, so it obviously won't seem intuitive to the user to see it."
1857583957,20118,glassez,2023-12-15T09:51:48Z,"personally, i would limit myself (at least to begin with) to something minimalistic like deluge does. just `ip: 123.456.7.8` or maybe `ipv4: 123.456.7.8 | ipv6: 2001:0db8:3c4d:7777:0260:3eff:fe15:9501`. details can be shown in tooltip. or, if it is really necessary to see more details/statistics, we can later add ""external address info"" dialog that is displayed when you click on appropriate button on status bar."
1857777251,20118,stalkerok,2023-12-15T12:03:25Z,"i don't think that's a good idea, a `, ` separator like that would save some space. `ip: 123.456.7.8, 2001:0db8:3c4d:7777:0260:3eff:fe15:9501` and `ipv4: 123.456.7.8 | ipv6: 2001:0db8:3c4d:7777:0260:3eff:fe15:9501` :thumbs_up:"
1857800353,20118,glassez,2023-12-15T12:22:32Z,"to clarify. i meant two separate items of status bar. personally i would keep only addresses w/o `ip` etc. that would be enough. if not, then someone could look (once) at the details in the tooltip."
1858231124,20118,OdinVex,2023-12-15T17:26:39Z,"i say e-mail address and ip address. \*shrug\* that's what showing the execution log was to do. it simply re-used the pre-existing ui and filters to just the relevant messages (webui can filter by text which makes it much more useful, gui can only filter by message type and is less useful). not sure if this is known, but this doesn't have to be perfect to get such a useful feature implemented. it doesn't *harm* anything except at most screen-space. on a side note, i disable the search and rss but they re-enable themselves and are useless to me. if they intentionally click on the addresses then they intentionally want more information, i don't see any harm in showing the execution log tab *when they specifically asked for information/details*. fancy conveyance was 'immediately' irrelevant development to simply getting the functionality out there."
1923702440,20118,stauffenberg2020,2024-02-02T12:23:55Z,can a country flag be shown next to the ip address?
1924282250,20118,OdinVex,2024-02-02T17:01:39Z,"not sure why you'd want that but probably, qb already has the capability to show peers so it'd just be a matter of adding it. for now i'm just using my violentmonkey script."
1924308751,20118,stauffenberg2020,2024-02-02T17:13:32Z,"i use qb in docker container attached to a macvlan network. and this macvlan network is encrypted through a vpn. i always want to make sure that the encryption is working properly, i.e. qb is always connected through vpn to the external network. hope its clear."
1924315097,20118,OdinVex,2024-02-02T17:15:57Z,"that doesn't explain at all why a *country flag* would be what you want. you'd see the external ip address. as for the reason for showing an ip address...same, doing the whole vpn deal."
1924345200,20118,stauffenberg2020,2024-02-02T17:24:16Z,"well, somewhat true. i would always choose a vpn from a different geographical region than my current region. the point is, i want to see a (red/green) flag/icon that my qb container is connected through vpn and not exposing my ip publicly. since the docker container is connected through macvlan network, it cannot find out what my public ip is, unless the vpn service is down. hence, if i see a country flag other than my current region - i will add downloads without hesitation."
1924382554,20118,OdinVex,2024-02-02T17:37:55Z,"not ""somewhat true"" at all, your response did not actually say why, you simply mentioned something you're doing. just pointing it out."
1924388334,20118,stauffenberg2020,2024-02-02T17:40:55Z,did you understand the need for the feature request now? or should i explain further in detail?
1924395439,20118,OdinVex,2024-02-02T17:45:01Z,"of course i did, but i don't make assumptions, that makes for bad communication and bad reading comprehension. you have a reading comprehension issue. edit: to very clearly clarify, i do understand what you want, i'm just pointing out that you did not say why when i asked you why."
1924401909,20118,stauffenberg2020,2024-02-02T17:49:47Z,"thanks, i only look forward to the implementation when some of the experts have time to do it, not an english class as i am not a native english speaker and neither i want to be a shakespear or churchill."
1924407132,20118,OdinVex,2024-02-02T17:53:04Z,"i've been a linux kernel developer, contributed to mainline even, i *am* an expert, 20 years now and counting. this had nothing to do with english classes or anything of the sort. you did not actually state *why*, you simply stated something you *do* which did not explain *why*. i'm just going to ignore your rude deflections. you can _wait_ for _other_ experts to add it for all i care now."
1925749414,20118,stalkerok,2024-02-04T13:26:11Z,"it's a good idea actually, but it could be implemented in another pr. , could you implement what has already been suggested here? it would also be nice to have a setting to disable the display of ip address. or even vice versa, that by default this setting would be disabled, so that it would not show ip address."
1925775825,20118,OdinVex,2024-02-04T14:30:38Z,"no one seems to agree about how best to implement. i say show both last ipv4 and last ipv6 detected with a proper string informing people, but apparently that's ""too much info taking up too much space"". another thinks the execution log shouldn't be shown even if users click on the address(es) and wants a popup. i never got any answer from a windows user as to whether qb reports ipv6 addresses with zone info or just the address detected (though this is about external ip address, so i'm not sure why they brought that up to begin with...). i'm not going to waste time just to be told it isn't wanted in the end (the crying about screen real-estate, they can just disable it). no design decision makes everyone happy, hands are tied. the ingredients are there if people want to tinker. i've implemented what i want with a violentmonkey script, it works flawlessly and just how i like it. it shows last ipv4 and ipv6 addresses and clicking it shows my execution log filtered to show addresses. it also has a nice ""info"" icon and no one is fussing about screen real-estate or design of it. edit: as for whatever their name's suggestion they can hope someone else implements it. their problem, not mine."
1925787715,20118,stalkerok,2024-02-04T15:09:07Z,"you can implement one of the suggested options, i don't think anyone will mind. you can put this off for another pr, maybe someone will implement it later. but i said already my wishes about this, that the popup would look the same as the ""connection status"" window."
1925790221,20118,OdinVex,2024-02-04T15:16:10Z,"so that's where the confusion is... that's is not a popup (an actual 'window'), that is a **tooltip**... that's already in there.. i'm not changing the string from 'external address...' in my src, it makes no sense without it. showing a random address with no indication if it's local interface or external address detected makes no sense. if you want it you add it."
1925791087,20118,stalkerok,2024-02-04T15:18:39Z,"oops, yeah, that's what i mean."
1925791748,20118,OdinVex,2024-02-04T15:20:33Z,"yeah, that's already in there. if you hover over it you'll see the same thing you see already, it's a default in qt (but i had not gotten around to showing it in web ui i think, at least in the pushed src.)"
2057898044,20118,OdinVex,2024-04-15T22:10:57Z,herpderp unstale.
2168960844,20118,OdinVex,2024-06-15T00:16:54Z,herpderp unstale.
2211795925,20118,bacon-cheeseburger,2024-07-06T15:20:00Z,"i use -nox/cli + webui only and would like this feature. i couldn't care less about debating the labeling and whether an extra single character is wasting space ("", "" vs "" | ""). if that's a concern, this is 2024 and people know what ipv4 and ipv6 addresses look like. ""x.x.x.x"" and ""x:x:x:x:x:x:x:x"" is more than suitable. if someone doesn't know what those are, they wouldn't be looking for it in the first place. don't over-think it. anyways, is this pr in current form the one to use? if not, where should i be looking? thanks."
2211815941,20118,OdinVex,2024-07-06T16:43:04Z,"not everyone knows what ip addresses are, even. just because they don't know what something is doesn't mean they won't see it. it's not over-thinking, it's preventing software from becoming dumb as fuck like windows became. this pr is just here for whoever wants a head start on maintaining their own patches. i simply use a violentmonkey script to do exactly what i wanted and it works well for all of us regardless of this entire thread+pr. if people want it they can use it or tweak it however they like. edit: the space-saving bit i didn't care about either considering the purpose of it all but one person appeared to be bothered by the space an ipv6 address might take up on screens too tiny to be usable... i think they're confused about the entire ui needing to use css to style things appropriate for dpi-related issues such as tiny screens or 4k monitors+ by using a singular root base font size and relative (em, etc) changes and svgs so everything renders correctly at any size and designed for the screen size, and so-on."
2211823430,20118,bacon-cheeseburger,2024-07-06T17:16:22Z,"i don't believe the average genx-genz person, which makes up probably 99.9% of the qbittorrent user base, doesn't know what an ip is. if they don't, seeing ""x.x.x.x"" vs. ""ipv4 x.x.x.x"" isn't going to change anything for them. we can agree to disagree, no prob. i do believe providing the external ip to the user can be useful be it via internally in qbittorrent (preferable imo) or the violentmonkey script you mentioned."
2211823690,20118,glassez,2024-07-06T17:17:21Z,"it's not very clear what exactly you mean. if i see, for example, `93.184.216.34` in status bar, and i know that this is an ip, then i don't need any labels (especially something too detailed, like `ip address` instead of a short `ip`). the only thing i might be interested in is what kind of ip address is displayed here (i.e. an _external_ address in this case). but this is the kind of information that is required only once upon first time you use the application (and only provided that you have not dealt with other similar applications), so it is not only wasteful, but also pointless to occupy a workplace with it, it is enough that it is displayed in the tooltip (along with other external addresses, if there are several of them). if someone does not know what an ip address is, then a constantly visible label will not help them either."
2211828404,20118,OdinVex,2024-07-06T17:37:29Z,"i won't assume 99.9% are but i would lend they would most likely make up the majority, uncontested. usually seeing unfamiliar terms leads intelligent people to query their definition and a quick query of 'ipv4/v6' might be enough for people to get the gist of what they are. i don't know how many torrenters know what dht is but it's labeled and there. i looked into what dht was when i saw it. people might take a moment to learn, might not. it may not be clear to you but it's clear to a few people without github accounts that i develop with that use qb, i keep them abreast of this thread in particular because they wanted this feature and just use my violentmonkey script meanwhile. some have been around since the early phreaking days, though myself a little after. we've noticed the mass dumbing down of software hiding away information or control, usually in the name of making things better...and the horrible side-effect (hopefully not intention) of people not being able to gleam or understand the underlying workings of things. over ""helpfulness"". it ends up with people on forums asking derp-simple questions or reinventing software and scripts to bring back control or functionality. this was already discussed. ip does not mean ip address, it means internet protocol. short-hand has led to people saying 'ip' but it's still incorrect, but i specifically mentioned i didn't care if qb changed the strings. i'd like to offer the thought: that would be an assumption for some. *i'd* like to know if my isp went down even for a few seconds and issued a docsis devreset rebooting all modems and giving me a different ip...or to know if my vpn is still functional, let alone if my private ip leaked due for any reason. i'm not the only one that specifically feels this way, a quick search engine (bing, google, fill in) about kill-switching qb outgoing connections due to a vpn loss and such reveals a lot of people wish they could monitor the external address of the qb host. my violentmonkey script specifically changes an icon to flash a critical one while alerting to any address changes. in the end, i don't think it *hurts* to let people know the external address(es) detected and i *know* of some obvious helpfulness of it. the rss tab is 100% useless to me but i'm not fussing about screen space or the fact i had to keep turning it off every session until my violentmonkey script. the fact the execution log isn't shown by default bugs me but i turned it on with my violentmonkey as well. others using it liked it this way too. edit: entire point is for this to be helpful to those that might need it. edit: i'd also like to again point out deluge has had it for years and it's been requested for qb a number of times as well. seems it's all quibbling about how to display or communicate it in the status bar. ipv6 addresses being as long as they are with screen space being an issue with screens that can't even display the ui to begin with has thrown a wrench into it by bringing up the 'px' implementation of measuring rather than relative sizes to easily layout the ui but eh...feature or none, the other script users are happy and not one has complained of anything so far."
2211833521,20118,glassez,2024-07-06T17:59:03Z,you took that phrase out of context and wrote a lot of unrelated information underneath it in response.
2211834117,20118,OdinVex,2024-07-06T18:01:18Z,"i don't think i did at all. it was all related. edit: to clarify in case it wasn't obvious, i may want to see that information at any time, that was the whole point of the reply by showing scenarios very practical and real versus your ""only required once upon first time"" posit."
2211892546,20118,glassez,2024-07-06T19:22:15Z,"ok, please explain what you mean by ""that information"". this phrase in the context of my comment means a label near the displayed ip address value. i was saying that you don't need to see `external ip address: 93.184.216.34` in the status bar all the time, but `93.184.216.34` is enough. a description of what kind of ip address is displayed there can be placed in the corresponding tooltip."
2211900880,20118,OdinVex,2024-07-06T19:40:09Z,"the externally detected ip addresses. ...? that was the entire purpose of the initial filing and the initial pr and then this pr? i was saying that you don't need to see external ip address: 93.184.216.34 in the status bar all the time, but 93.184.216.34 is enough. a description of what kind of ip address is displayed there can be placed in the corresponding tooltip. that isn't what was said but i understand what you're saying in this reply. this was already resolved though, i mentioned that the qb project can do whatever they want with the strings. if you want it to say ""hamburgers:"" go head, or nothing at all, fine, i don't care what qb does with it. i've only ever pointed out that it's weird and unintuitive ui development to just display an address with no context (eg., ""external ipv4/ipv6 detected:"" (or whatever the case may be)). i've never cared what qb *does* with it, i simply wanted to lay the ground work since no one had done it. people can edit their translations file(s) to correct/adjust/prefer whatever they want. i'd like to note a feature idea as well. the option to use an interface's ip address(es) over remotely fetched addresses. it's purely to eliminate traffic and reliance upon a third party for users that *know* they'll only ever have public addresses and such."
2212492561,20118,OdinVex,2024-07-07T15:55:33Z,"-hub some of my script users have rotating vpns too, yeah. this was part of their desire to see the externally-detected addresses. i think the only thing mostly being argued here is how to convey the information."
2214170726,20118,OdinVex,2024-07-08T14:04:38Z,"-hub, an image of what?"
2214219789,20118,xavier2k6,2024-07-08T14:22:55Z,"i suggest you `rebase` & take care of current conflicts which need to be resolved, this will also allow others to use ci builds for testing purposes."
2214242669,20118,OdinVex,2024-07-08T14:31:41Z,"the cosmetics is the only issue here. i thought i embedded a screenshot in the first pr. maybe i forgot. ![a link] ![a link] i mentioned through this pr that i'm not doing anything anymore, i only bump it to keep it alive for anyone else who wants to deal with disagreements around cosmetics."
2214900884,20118,OdinVex,2024-07-08T18:30:35Z,"i know what a docker image is. you asked for an image but never specified of what (i knew you were talking about a docker image, but it made no sense to ask for the only thing i have: a violentmonkey script). the images i instead gave were of the implementation in the webui, that's why i posted it. it's relevant to the only issue relating to this pr: cosmetics. keep up bud."
2214921215,20118,stalkerok,2024-07-08T18:41:38Z,"time to force close this pr, maybe someone from the team will have the desire to implement this later. or make changes and finalize this pr."
2214933324,20118,OdinVex,2024-07-08T18:48:59Z,"they have no desire, despite there periodically being new issues asking for it. it's been in deluge for years, qbittorrent developers didn't seem to give a fuck when i read all the issues asking for it. ""lay the groundwork"" was what it ended up being. i did but the developers don't like it. i told them they could change whatever but all they did was rehash. oh well, that's all there is to it."
2351486891,20118,skomerko,2024-09-15T09:16:39Z,"hey , could you look into it maybe? i read through this thread and it looks like remaining problems are mostly cosmetics. it would help a ton of people. i don't have much experience and at most could bring parts to make it work in the webui but i guess not everybody would be satisfied :p"
333287464,7522,glassez,2017-09-30T06:23:54Z,pr updated.
333288674,7522,glassez,2017-09-30T06:51:03Z,as you can see `conf.pri.mingw` and `conf.pri.msvc` have mostly the same content. i would join it into single `conf.pri.example` file.
333328140,7522,glassez,2017-09-30T18:46:12Z,", what about having only one example config file?"
333329224,7522,glassez,2017-09-30T19:04:43Z,pr updated. added more comments.
333365346,7522,glassez,2017-10-01T09:44:52Z,maybe name it `conf.pri.windows`? done. i use the proposed name `conf.pri.windows` unless someone have strong objections.
333570929,7522,glassez,2017-10-02T15:31:26Z,pr updated again. stack trace support enabled from user config now.
333579807,7522,glassez,2017-10-02T16:00:08Z,", addressed your last comments."
334059944,7522,glassez,2017-10-04T06:17:46Z,wow! glad to hear it.
334060261,7522,glassez,2017-10-04T06:19:52Z,thank you all!
335015623,7522,funkydude,2017-10-08T15:48:38Z,"you are using qt 5.9 no? as far as i'm aware, it removed support for vista and xp, so targeting xp can probably be changed."
335026355,7522,glassez,2017-10-08T18:05:51Z,uses 5.9.x for 64-bit releases (vista+) and 5.7.x for 32-bit releases (xp+). what do you mean?
335050294,7522,funkydude,2017-10-09T00:40:28Z,"qt 5.9 only supports 7 and above, not vista. [a link] but if these build files are only for the 32 bit version then you can just ignore my comment."
335210346,7522,glassez,2017-10-09T16:30:22Z,`conf.pri.windows` is just an example configuration. you can use different settings.
335271691,7522,funkydude,2017-10-09T20:08:00Z,the comment was a direct response to the following comment from are you stating this is not what is used for the official release?
335283207,7522,sledgehammer999,2017-10-09T20:50:19Z,i am doing the official releases. the 32-bit release is based on qt 5.7.1 and supports windows xp. the 64-bit release is based on qt 5.9.1 (soon 5.9.2) and doesn't support windows xp. for 64bit i disable this line: [code block]
57332748,1984,Gelmir,2014-09-30T15:33:17Z,oh. and i've found my old patch. almost gave up the search. [code block]
57488807,1984,paolo-sz,2014-10-01T15:58:50Z,"ok, i made some improvements to the patch and now there are no more constraints on qt version. i tried (win7) with qt4.8.5 and qt5.3.2 and everything behaves as expected (with the sleep(120000) trick placed just after the setsdblockreason() call in the shutdowncleanup() function. what i miss are tests on xp..."
57935181,1984,TONPumper,2014-10-05T12:57:54Z,does this mean that there is going to be a new version released to correct the issue?
57935287,1984,sledgehammer999,2014-10-05T13:01:22Z,"-sz some nitpicks: 1. you should use eg `::getprocaddress()` for any winapi call. `::` denotes the global namespace where all winapi functions live. why should you do this? code readability. a 3rd party reading that code will know immediately that that function is winapi and not qt/qbittorrent function. 2. don't leave comments after the `#else` or `#endif`. qtcreator does a pretty good job on separating everything visually. now other random things: 1. [a link] seems to be deprecated on later versions. i think its better to use [a link] instead. 2. why use getmodulehandlea() instead of getmodulehandle() ? 3. user visible strings should be wrapped in the tr() macro. `qstring tmpstr(""please wait while qbittorrent is exiting...\nbe patient, it could take a while..."");` should be `qstring tmpstr(tr(""please wait while qbittorrent is exiting...\nbe patient, it could take a while...""));` however i am not sure we should include a linebreak in the translatable text. translators might remove it. there might be some other syntax improvements possible but i don't want to dwelve into those. i'll do them myself after i merge this. do you have anything to add?"
57935319,1984,sledgehammer999,2014-10-05T13:02:25Z,-sz to clarify: i meant to say that you should use `::` before any winapi call for code readability.
57937251,1984,Gelmir,2014-10-05T14:13:59Z,", no objections."
58015814,1984,paolo-sz,2014-10-06T13:24:02Z,"ok, understood. ok... i'm not using qtcreator unless for deep debug reasons... i completely agree but i was not sure on the microsoft sdk used by the project (mainly you). iswindowsversionorgreater requires sdk 8.0 (or 8.1, i don't remember exactly) while getversion is marked to be deprecated for future versions. on top of this mingw (mine, at least) does not have iswindowsversionorgreater defined yet so i choose to use getversion... well, i don't know... to tell you the truth i just copied the code from internet... ok. just for curiosity, did you have the chance to try the patch with xp? if so, is it working without changes or it needs some adjustments?"
58071321,1984,sledgehammer999,2014-10-06T18:49:01Z,you are right. my mingw (gcc 9.0) does not include it neither does my msvc2008 installation. so basically we should use getversion() for the moment. i don't understand why ms will change its behavior. this probably brake a lot of already released software. do the changes we discussed and then i'll try to compile it under xp.
58074146,1984,sledgehammer999,2014-10-06T19:03:47Z,"from the getversion docs: msvc builds automatically append a manifest and mingw builds use this manifest: [a link] i don't know if that is enough to trigger the ""old behavior"" in newer versions of windows. further doc reading is needed."
58077598,1984,sledgehammer999,2014-10-06T19:21:08Z,we are overthinking this. gelmir's path had something that i missed. something that we already do for winapi in other places in qbt(probably gelmir's code too). since you dynamically look for `shutdownblockreasoncreate` you should only check if that pointer is null. if it is then that means we are running on a system that doesn't support it (ie xp). no need to check for os version.
58158376,1984,paolo-sz,2014-10-07T09:24:36Z,"i made the changes you request. i have also refined the patch to the minimum needed to work (only wm_queryendsession message intercepted, only one call to windowseventfilter::setsdblockreason) in order to solve a double blocking message in some cases. i also added the italian translation (with \n included... it works). everything rebased in a unique commit."
58172321,1984,sledgehammer999,2014-10-07T11:48:47Z,remove the translations. translations are done on transifex. you can register there and request to be added in the italian team. here is the project page: [a link] also the github diff shows that mainwindow.h has its permissions changed to 755. was this accidental?
58176032,1984,paolo-sz,2014-10-07T12:26:20Z,"indeed i didn't change permissions directly, i guess my editor did that along the way, sorry..."
58811561,1984,sledgehammer999,2014-10-12T17:32:16Z,"i compiled and run this in a clean windows xp vm (using qt4). each time i try to shutdown the os, qbt is closed but the shutdown process is somehow aborted! i need to re-issue the shutdown for it to actually shutdown! wtf!?!?"
58814762,1984,sledgehammer999,2014-10-12T18:26:26Z,"irrelevant to the above: however, i don't see you using `shutdownblockreasondestroy`. wouldn't that stall the shutdown progress on supported oses?"
58858946,1984,paolo-sz,2014-10-13T08:03:19Z,"good question... good question... definitely, i need to test my patch directly on xp... i will install a vm like you did and i will try to get the code working on xp too... until ms decides to change behaviors another time... i was supposing the block reason would be automatically destroyed when the application ends... but i feel this is not the main cause of the behavior you see... probably it is related to wm_xxx signals management... i will update you once i will have my xp vm alive..."
58862109,1984,paolo-sz,2014-10-13T08:40:35Z,"excerpt from [a link] if i understand correctly, the code you wrote, with abouttoquit signal and shutdowncleanup function, falls exactly in the delay response to wm_queryendsession case and thus the shutdown is delayed until qbt closes (as you already reported somewhere in this thread). at this point i do not see other ways except than detecting the os through getversion and not enabling my code on xp (or below)... but again, i will be more precise when i will have the vm..."
58903358,1984,sledgehammer999,2014-10-13T14:53:50Z,your excerpt explains everything that we have observed so far. so we need stop sending false for wm_queryendsession in case of windows xp.
59998263,1984,sledgehammer999,2014-10-21T21:02:36Z,"-sz i locally merged your branch and made some edits on top of it. now the qt4 version behaves as expected on windows xp. however the qt5 version has a weird behavior. the app never exits and the shutdown is aborted. i need to manually quit the app and then issue a shutdown. to tell you the truth, i am actually using a bit old qt5 build based on qt 5.2.1. maybe this is the problem. or something else has changed in qt5. dunno. i have to try again without your patches and see how it behaves. i re-read my code but i can't find something obviously wrong. can you test on your os(win7) and see if my edits work as expected? 1. test if windows wait for the app to exit when it is minimized to the tray and no window is visible. 2. try putting a sleep() too. 3. when the app actually exits after the sleep() does the shutdown process continue or is it aborted? one last question: in `windowseventfilter::nativeeventfilter()` when we detect `wm_queryendsession` shouldn't we respond with ""true"" according to the msdn docs? here is my local branch: [a link]"
60084548,1984,paolo-sz,2014-10-22T13:31:48Z,"sorry, i just see your post now that i made my new push... i'll give a look to your branch... let me know if you prefer to go ahead with that or use mine which now behaves ""well"" both on xp(32bit) and win7(64bit), qt4.8.5 and qt5.3.2 indeed in my googling around i remember i found something about some issues on shutdown and qt5.2... i did a lot of work on my original patch in order to simplify the code and now seems to be more elegant. on the other side i notice the xp behavior is not so pretty and i try a thousand of ways to improve that but with real poor results so i temporary give-up and i made the push leaving the xp behavior as it was before. the not nice behavior i'm referring to on xp is that the user is not well informed about the reason qbt is not responding and the fact that the cancel button on the pop-up window shown by windows behave like the ""end now"" button instead of canceling the shutdown process..."
60084997,1984,sledgehammer999,2014-10-22T13:34:58Z,"observation: you seem to have borked/mixed the commit history. i get 29 new commits for the poll request, which are actually already commited to master. can you reworked your history and force push here again?"
60085862,1984,paolo-sz,2014-10-22T13:41:12Z,"ok, i did a big mess with git... do you have any suggestion on how to cleanup everything?"
60086890,1984,sledgehammer999,2014-10-22T13:48:18Z,"1. create a new branch based on your master branch(the branch in this pull request i presume) 2. switch back to your master branch 3. force pull the official master branch onto your master branch. the force pull should overwrite everything and make it identical to the official branch 4. switch to your created branch 5. look at the history of that branch and note down the hashes of your commits 6. switch back to master 7. use the ""cherry-pick"" command to cherry pick your commits onto the top of master(using the hashes one by one). 8. when done forcep push your master branch. it should overwrite your previous mess and update the current pull request."
60120165,1984,sledgehammer999,2014-10-22T17:12:56Z,can you test my branch? -using a new local branch- and see if it behaves correctly on your system?
60199323,1984,paolo-sz,2014-10-23T06:52:33Z,"ok, just give me some days, i'm not sure i will be able to do that today or tomorrow..."
60362865,1984,paolo-sz,2014-10-24T09:11:44Z,"i tried your branch, the scenarios are as usual (with the sleep trick): 1. visible mainwindow, logoff 2. mainwindow minimized to tray, logoff 3. qbt closed, logoff here are the results: - xp_32, qt5.3.2: all fine (except the cancel button behaving as the ""end now"", but this is ""normal"") - xp_32, qt4.8.5: as above - 7_64, qt5.3.2: all fine (except the double appearance of qbt in the list of application which are blocking shutdown in scenario 1) - 7_64, qt4.8.5: all fine in any case, i suggest you to have a look to the latest cleaned commit on my branch. i understand you already did some work on the old version but i feel this new commit is really better as a starting point (or, at least, has some more comments) one possible cause of this behavior could be the ""long *"" parameter (which should be ""result"") not used in our event filter. if i understand correctly, when our event filter returns true then the result value is the value returned to the os. if result is false then the shutdown is aborted. in my original branch and in your too, result is not assigned so, if the default value is false, we see the problem you describe. are you sure about that never? what i usually see is the app correctly exiting after 2 mins but the shutdown effectively aborted... but my previous comment about changes on shutdown in qt5.2.x vs qt5.3.x is still valid..."
62581956,1984,paolo-sz,2014-11-11T17:19:59Z,"this latest push is exactly the behavior i would see. tested with qt5.3.2 and 4.8.6 in all the usual three scenarios and now everything behaves correctly (including the cancel button really canceling shutdown). i feel this is the shortest, simpler and cleanest code i'm able to write for this pull request."
62608418,1984,sledgehammer999,2014-11-11T19:49:17Z,just so you know i haven't forgotten about this. if i'm lucky i'll get to review this the coming weekend.
73431476,1984,sledgehammer999,2015-02-08T21:00:26Z,-sz this feature is really important. i merged a pr that moved the files around in the project tree and it broke this pr. can you rebase? then i'll try to review it asap and hopefully get it merged for v3.2.0. thanks for all the effort so far.
73677444,1984,paolo-sz,2015-02-10T10:30:19Z,"wow, a huge code restructuring... ok, i realigned this pr to the new code/structure and all the usual tests are passing with win7/xp (all combination possible). just a note not related to this issue, in main.cpp (line 203 and 205) you call to app.reset(....), sould not be app->reset?"
76440488,1984,glassez,2015-02-27T17:55:44Z,we call qscopedpointer::reset() there.
76443460,1984,glassez,2015-02-27T18:14:05Z,"i have objections! we use mainwindow dynamic creation in order not to create it without the need (for example, when the application is already running and we only need to pass parameters). oop != create classes for everything! your functionality can be easily implemented inside the application class."
76464435,1984,sledgehammer999,2015-02-27T20:18:20Z,"i hadn't reviewed this. i wasn't going to merge it as is. i just wanted a mergable state. tomorrow, i'll be free and i'll start reviewing this. hopefully i'll get the other milestone items fixed too, so we can get v3.2.0 out."
76528393,1984,paolo-sz,2015-02-28T14:37:05Z,", it doesn't matter where the functionality is implemented, the point is that it needs some handle to a window (mainwindow seems to be the most reasonable choice) until the application is exiting. i tried with the dynamically created mainwindow and the functionality of this pr is completely lost (with serious application crash). honestly i do not see other ways than making mainwindow statically created but i'm open to any suggestion"
76531183,1984,glassez,2015-02-28T15:47:14Z,i now have no time to delve into this issue... but at least you can use `qscopedpointer ` to combine dynamic creation with the existence of the object until the application is exiting.
76690752,1984,paolo-sz,2015-03-02T10:43:26Z,"by the way, i'm going to test the changes suggested by . as far as you are in the review process of this pr and i do not want to switch your ground, let me know if you want me to commit them (no terrific changes)... or maybe when."
76779077,1984,sledgehammer999,2015-03-02T18:52:50Z,"i would have thought that ""cancel"" would let the program continue execution without interruption. no problem go ahead. however, i wonder why you chose to abandon your initial design of installing an event filter? i still have this local branch that i **might** choose over your pr: [a link]"
76909039,1984,paolo-sz,2015-03-03T09:01:04Z,"well, basically because with the initial event filter approach i were not able to solve the issue on the cancel button and, as long i were trying to find a solution by reading qt docs, i realized it was pretty complicated, quite ""intrusive"" in the current code and not easily manageable. but i don't think the current implementation is conceptually different from the original event filter one, it only differs in the fact that the dirty work (installing event filter, catching windows events, ...) is left to qt. this made the code less intrusive (only the instantiation of the object class inside the application.cpp file), more portable (i never tested on platforms other than windows but, in theory, it could work with linux or mac with only small changes in the constructor part) and, i feel, more readable. i think this is feasible but it implies some changes in the events to monitor, abouttoquit is too late to stop qbt termination, it allows only to stop the machine shutdown... this works perfectly, thanks for the hint."
76936910,1984,sledgehammer999,2015-03-03T12:31:02Z,"yes. that's exactly what i want. ""cancel"" means continue execution of program and cancel system shutdown. if the program is in the process of exiting, i want it to exit. i want it to continue executing as long as it needs in order to perform a clean exit. i don't want qbt to abort its exit."
76956028,1984,paolo-sz,2015-03-03T14:35:16Z,"ok, there is a misunderstanding, i think. - without this pr, cancel button kills qbt and shutdown immediately (dirty exit) - with this pr, cancel button aborts shutdown but leave qbt in clean exit modality, in other words, qbt continues its exiting process until its clean end and the shutdown is canceled"
76957051,1984,sledgehammer999,2015-03-03T14:40:24Z,"ok. i understand you now. however, i'll test myself that particular aspect too, because it seems so mind bogglingly wrong. i can't believe windows has this flaw. essentially `end now` and `cancel` have the same effect for the app."
76958993,1984,paolo-sz,2015-03-03T14:50:40Z,"if i understand correctly, this is not a 100% windows issue in the sense that, in the case of a shutdown blocking application, the shutdown management is shared between windows and the app. if the app does not manage correctly the ""signals"" from windows we got this buggy behavior. so the problem here is in qbt not on windows and the demonstration is that changing the code (this pr) the misbehavior is gone."
93594786,1984,sledgehammer999,2015-04-15T23:15:36Z,"-sz i have made a far simpler solution. it seems to work great on windows 7 and on windows xp. both while the mainwindow is showing and while it is mimimized to the tray. can you test too? btw, can you describe to me how you solve the problem we discussed here: [a link] ? i can confirm that ""cancel"" kills qbt and continues with the shutdown instead of aborting. here is my commit: [a link]"
93666079,1984,paolo-sz,2015-04-16T07:33:46Z,"indeed your commit is pretty simpler than mine... yes, i will try to test it as soon as possible. does this mean your commit still do not solve the kill instead cancel on xp? well, the exact way the shutdown process is managed within qt is far to be clear to me but, my understanding is that abouttoquit signal happens too late in the shutdown process. the trick i used (that seems to work even if its implementation is very ""delicate"" which make me think i miss something) is to connect to the signal commitdatarequest instead and then: - requests the qsessionmanager user interaction through the allowsinteraction() member function - make the cleanup stuff - release the qsessionmanager maybe this made superfluous the connection to abouttoquit signal but, sincerely, i don't remember if i did that test within the thousands of tries i did... :-( i will try to also test your solution with the additional commitdatarequest trick..."
93679146,1984,paolo-sz,2015-04-16T08:39:35Z,"no, no, now i remember... both signals abouttoquit and commitdatarequest need their connections as far as they manage two different cases in xp (but i think the two connection does not destroy other oses). commitdatarequest is only raised when you try to shutdown the pc with qbt still open, so it is necessary to cleanly manage qbt shutdown in the case it is still open at shutdown time. abouttoquit is also raised when the pc is shutting down (this is why i implemented the alreadydone variable) but , more important, is raised also when you simply close qbt (while commitdatarequest is not) and where a cleanup is still needed. so the conclusion is: your commit is probably fine if we add a new function and a new signal connection connect(qapp, signal(commitdatarequest(qsessionmanager &)), this, slot(shutdowncleanup(qsessionmanager &)), qt::directconnection); void application::shutdowncleanup(qsessionmanager &manager) { manager.allowsinteraction(); cleanup(); manager.release(); } and we implement the alreadydone protection in the current cleanup() function. i wil try also this upgrade to your commit."
93706148,1984,sledgehammer999,2015-04-16T10:48:05Z,"i am away now and can't test what you said or what i say below. theoritically speaking the only time that qbt will take time to shutdown is when the session has many torrents(eg 100). during shutdown this manifests loosely in this flow: qbtsession::drop->private pointer destructor->request fast resume for all torrents->busy loop/wait for libtorrent to post the fastresume alerts for all torrents->save to disk. the loop/wait can take time when there are many torrents in the session. during this loop/wait i don't think the mainloop(qt's mainloop) has a chance of ever running. so commitdatarequest() signal will be emitted probably well after the user has clicked the ""cancel"" button in the ""end program"" windows dialog. and if we don't handle that immediately we'll observe the same thing. ps: i produce the ""end program"" dialog in a different way that you. you said you produce that dialog during log-off. try this, put a 3min sleep() before shutdownbrdestroy. then issue a system shutdown on xp. after a while a dialog will appear saying that qbt isn't closing and giving you the possibility to press ""end now"" button to kill the process. also it has a progress bar at the top. if you let the progress bar reach 100% the dialog will present also a ""cancel"" button. and the dialog is the same as the one you showed above. from the dialog text, pressing ""cancel"" should abort the system shutdown. however, it instead kills qbt and the system shutdown continues. i'll be very surprised if `commitdatarequest()` is enough to prevent this."
93727790,1984,paolo-sz,2015-04-16T12:59:05Z,"ok, i made some tests and here are the results (i tested only qt5, let me know if you want me to test also 4.x but be aware that i will need some more time to recompile everything...) 1. your commit does not work fine on 7 when window is minimized to tray (no button visible on the taskbar, only icon in tray), the machine's shutdown does not wait the ""sleep()"" time but goes ahead immediately. 2. as you are already aware, it also fails with the kill on cacel behavior on xp the reason of (1) is that, in order to work with the blocking reason, vista+ not only needs a valid handle to a window but also needs some visibile object around the screen, if you delete all the main window childrens while window is minimized to tray, no visible widgets will remain visible and the blocking reason will be ignored. about (2), my understanding is that commitdatarequest() is issued right after you click the shutdown button, indeed it provide a pointer to the qsessionmanager giving you the chance to interact, and eventually cancel, the shutdown process. i will made a new commit starting from your. a few additional notice: - i moved the shutdownbrdestroy and window destruction into application:: destructor (this should be practicaly the very end of qbt so we are pretty sure nothing is still pending) - i made an explicit cast to hwnd when using m_window->effectivewinid() otherwhise gcc complains (at least on 64bit compilation)"
93729041,1984,sledgehammer999,2015-04-16T13:04:43Z,"leave it where it is. because as soon as the last window is destroyed windows kills the application anyway. (aka `delete m_window;`). weird. if you look at the headers `wid` is typedef to hwnd for windows. at least msvc2013 doesn't complain for qt4. on the tray issue. i didn't test thoroughly with qt5. i mainly tested with qt4. one question though. when you are minimized to tray, is the qbt tray icon showing or is hidden? (you know under the ""arrow"" thingy the tray has)."
93739968,1984,paolo-sz,2015-04-16T13:54:46Z,shit! it seems that travis complains with qsessionmanager... qt5 vs qt4 differences i guess i understand... i need to compile for qt4 too... it is showing until while qbt is running (even if minimized to tray) but it disappears as soon as you choose to shutdown the machine and the shutdown doesn't wait...
93749058,1984,paolo-sz,2015-04-16T14:31:40Z,stupid me... it was only a matter of enabled/disabled gui...
93762460,1984,sledgehammer999,2015-04-16T15:23:20Z,"-sz stiil cannot test your patch yet, but about the tray issue can try the following? in the constructor of mainwindow class put `setatrribute(qt::wa_deleteonclose, false);`. does it solve it?"
93940163,1984,paolo-sz,2015-04-17T08:11:47Z,"nope, the only way which is currently working on my side is to hide the window at the beginning of cleanup() function and delete the window together with all its children when doing delete m_window ."
94008316,1984,paolo-sz,2015-04-17T15:24:36Z,"ok, i have made the full set of tests and here is the resulting table (jpg because i'm pretty sure github does not accept xls...) by the way, i found some additional strange behaviors... see the notes on table... ![a link]"
94191446,1984,sledgehammer999,2015-04-18T18:58:08Z,"thank you for the spreadsheet. i hadn't tested ""minimized to tray"" only ""close to tray"". i thought they do the same thing. after further investigation i have found that even if you just minimize the window, without the option to go to tray, the shutdown process doesn't halt. (qt5.4.1 + win 7). so ""minimize"" does something to the window and the os doesn't consider it. edit: i am trying to find out if there is a way to prevent the above."
94194819,1984,sledgehammer999,2015-04-18T19:34:26Z,"more on this: win xp + qt5-> if you only minimize, without going to tray, the shutdown waits. wtf is happening here!?!?! edit: this is also true for win xp + qt4"
94201433,1984,paolo-sz,2015-04-18T21:16:54Z,"somewhere in the ms documentation (i think this previous comment [a link] i remember it is stated that the shoutdown will be blocked by a running application if some conditions are met. one of these conditions is that the application must have something visible. so i think the problem is that you delete all from the main window just at the beginning of the cleanup() function, removing all the visible stuff of bqt. this is why i replaced the delete stuff with m_window->hide() in my patch... all the other stuff in my patch is to solve the kill on close issue..."
94203431,1984,sledgehammer999,2015-04-18T21:40:10Z,"if that was true, it would also kill the application when it was ""closed to tray"" too. and hide() isn't enough. read my code comment. we need to sync the preferences. mainwindows has various custom widgets that also save preferences in their destructor. that's why i explicitly delete all children and not the mainwindow."
94378233,1984,sledgehammer999,2015-04-20T07:17:03Z,"just a heads up: the various ""fails"" of your spreadsheet may be due to the application crashing. i cannot investigate this fully, because it is very difficult to debug something when the os is shutting down. while i was trying to manually delete the custom widgets from inside mainwindow i discovered this buffling behavior: 1. create a funciton mainwindow::cleanup() and inside stop() all the timers that are private to mainwindow 2. modify the function that is called when the ""options"" button from the toolbar is pressed to call instead cleanup(). 3. run the app and press the button. it crashes with a backtrace window. running it through the debugger it shows that the timer is happening inside qtimer::stop()! wtf?!?!? 4. tested with qt5 on win 7. ps: for 2 days i might not be reachable. and i cannot test it further at the moment."
94774145,1984,glassez,2015-04-21T12:19:49Z,"please see #2898. perhaps your ""strange"" behavior related with it."
94863370,1984,paolo-sz,2015-04-21T16:32:02Z,"in this case, sorry it was not clear to me before your post, i agree with you, hide() is not enough... i then tried to find another way and what i found seems to be promising... still working on it. about the crashes you report, i started to see the backtrace window too. i feel you are right about the source of the fails i reported. my 2 cent comment: i see in mainwindow.cpp a lot of pointers to classes... but none of the call to public functions of those classes is protected by null check neither none of those pointers is deleted on mainwindow destruction... i'm not a c++ master but i feel this is a very good source of crashes especially when you start deleting the main window's childrens...."
94877152,1984,sledgehammer999,2015-04-21T17:15:44Z,"good catch. -sz yes, the lack of null checks may be the cause of problems. but supposedly stopping the timers stops any code activity in mainwindow. the lack of deleting pointers in the destructor is usually a mistake. however, in this case `qobject`s that have a parent are deleted by their parent when the parent gets destroyed. all those pointers you see have their parent set to the mainwindow instance(see that each `new` uses `this` in the constructor). so this shouldn't be a problem. here's an interesting tool that let's you simulate shutdown and makes debugging easier: [a link] i'll try to investigate this during the weekend."
95245331,1984,paolo-sz,2015-04-22T15:57:14Z,"have you already tried to run it? because it is not working on my xp 32bit installation... anyway, i tried to push another version... i have commented the code in order to explain what i did and why. i have not fully tested the new implementation but maybe it is better to have some comments from you... the tests i did are promising..."
95487432,1984,paolo-sz,2015-04-23T08:21:39Z,could another reason be all the pointers in mainwindow.h not protected by qpointer?
95488171,1984,paolo-sz,2015-04-23T08:27:18Z,", the mutex is because when you are blocking the commitadatarequest signal (connected to shutdowncleanup) a window is displayed offerirng you to force shutdown or cancel (a third implicit is wait until shutdown happens naturally). if you choose the ""cancel"" option, then the shutdown process will be interrupted and the quit signal is not emitted. but shutdowncleanup function in any case calls the cleanup function. the result is that the qbittorrent process does not exit even if the cleanup was executed. it stay ""alive"" but doing nothing..."
95508450,1984,glassez,2015-04-23T09:25:15Z,but what if you just try to call qapp->quit() at the end of cleanup()?
95513372,1984,paolo-sz,2015-04-23T09:40:40Z,"because cleanup() is called by shutdowncleanup() too... and, in some previous post, you rightly made me notice that the qt docs says i cannot call quit() from within commitdatarequest slot... but maybe it is only a suggestion... i completely agree that the watchdog is complicated solution..."
95514100,1984,glassez,2015-04-23T09:44:38Z,but you can do it via qtimer::singleshot() with 0 timeout.
95517639,1984,paolo-sz,2015-04-23T09:54:00Z,"excerpt from qt docs ""...timeout of 0 will time out as soon as all the events in the window system's event queue have been processed..."" not exactly want i want to do, i don't care about event queue status, i want to issue a quit as soon as all the cleanup stuff has been done..."
95534560,1984,glassez,2015-04-23T10:45:36Z,in your code the timer fires only once shutdowncleanup() will return.
95543169,1984,paolo-sz,2015-04-23T11:13:39Z,"right, this is exactly what i said and what i want to implement..."
95557595,1984,glassez,2015-04-23T11:40:59Z,"no, you misunderstood me. your timer fires only once (regardless of the specified interval). the same effect as in the proposed method (with a zero timeout). so all these mutexes are overweight."
95561015,1984,sledgehammer999,2015-04-23T12:06:27Z,some updates: i have figured mostly why it crashes. i'll have something solid in the weekend.
95868543,1984,paolo-sz,2015-04-24T09:28:18Z,", i think i'm catching your point and the tests definitely confirm you are totally right. and this new approach is really much more elegant, thanks"
96450284,1984,sledgehammer999,2015-04-27T00:07:31Z,"-sz i pushed new code in my branch. it seems to solve all the fails you documented on your excel **except** one. the one when ""cancel"" is clicked by the user on windows xp. i wanted to test with the sessionmanager as you do, but i didn't get any more time today. i see from your patch that you now connect to `commitdatarequest()` regardless of being on windows xp or not. do we get any benefit from this on vista+? the application seems to behave correctly on vista+ when cancel is clicked. ps: i think you have written a comment about `commitdatarequest()` and vista+ but it either got lost during your force pushes or i am too tired to spot it on this bug report. ps2: i'll move the creation of the block reason inside cleanup(). first i want to test and see what to do with `commitdatarequest()`."
96544715,1984,paolo-sz,2015-04-27T07:56:32Z,", indeed i wrote it. the connection does not get any benefit in vista+ which i confirm is correctly working without it. i choose to do in the current mode for 2 reasons: 1. qt docs says the return of m_window->effectivewinid() could be different from time to time so i thought it was better to create the block reason inside cleanup() . but doing this i lost the xp/vista+ detection where the connection to commitdatarequest() has to be done. instead of writing additional code (i cannot use iswindiwsvistaorabove() because current mingw does not support it), i decided to do the connection in any cases. 2. the code is simple, it does not need to manage special cases (except the shutdownblockreasoncreate() ), xp or vista+ does not care, the code is the same. i finally did the same (check my last forced push)"
96842464,1984,sledgehammer999,2015-04-27T22:45:45Z,"-sz i pushed a new commit on top of the mine. can you see it and maybe test? it seems to work fine for me. if you agree, i am going to merge the 2 commits and push the code into master, finally closing this issue. edit: quick link to my branch: [a link]"
97084660,1984,paolo-sz,2015-04-28T14:29:32Z,", i only had a fast look through your branch's code and i'm pretty confident it will be (almost) the right one. i will make the tests and i'll provide you the results. in the meanwhile just a couple of comments. - if there are no special reasons in not doing m_window->hide() before the m_window->cleanup() , you could consider to add that call. this is only a visual improvement in order to not leave on the screen a not responsive/refreshed window. - you could also consider to move the m_window->cleanup() after the block reason creation. my concern is about the delay due to saving gui settings... maybe i'm paranoid but i'm not so confident that delay will be surely smaller than 5 seconds (old or slow machines/hw, heavy disk activity, ...)"
97086230,1984,sledgehammer999,2015-04-28T14:35:06Z,"sure, i will do the 2 things you mentioned. in the meantime you can test the current code. those changes will not affect the results."
97200102,1984,paolo-sz,2015-04-28T20:36:01Z,", just one word: perfect! all the tests were successfully ended also on my side, thanks to you and for all the great work! just out of curiosity, what was the problem that created the backtrace window when you was trying to delete the main window's children in a loop?"
97206759,1984,sledgehammer999,2015-04-28T21:05:23Z,"i never debugged that. however, i had my current mainwindow::cleanup() hooked up to the preferences button (for easy execution). then inside the cleanup() i tried to delete every pointer(of widgets). some of them resulted in crashes and the debugger wasn't very helpful. (i didn't use debug builds anyway). some were fixed by changing the order of deletion. others by not deleting them because deleting their container widget(eg `tabs`) also deleted the children. if i first deleted the children and then the container i got some other crash based on signals being emitted. i didn't investigate further since deleting of the container deleted the children too."
97207155,1984,sledgehammer999,2015-04-28T21:06:54Z,and as i say in the commit message thanks to you too.
706774593,13498,thalieht,2020-10-11T22:05:00Z,wow! 10k torrents take 5-6 sec to load for me while in master it takes 30-40. well done!
706779595,13498,xavier2k6,2020-10-11T22:48:30Z,"briefly tested with the windows build from [a link] with 10,000 test torrents. discarded 1st run as caching etc. 2nd run ~8 secs to show full gui from 1st click only 2 downsides: when clicking on options (advanced window etc) - hangs for a few seconds/displays (not responding) ~**i haven't compiled it myself, so it may be a different story when i use different libraries.**~ **_not an issue with qt5.15.1/boost 1.74 & openssl 1.1.1h_** the splash screen - don't use it & have this unchecked - but this pr will constantly show it. **edit:** ~it also has alot more ssd activity after it loads about 50 - 55% & takes a bit longer to close.~ pebkac had the 10,000 test torrents in resumed state, not paused."
706839330,13498,glassez,2020-10-12T03:40:28Z,"imo, loading & populating gui after session is fully restored is best approach. this pr is still in draft form, some code is temporary, just to demonstrate it quickly. if we decide to continue in this direction, i'll clean it up. the main thing that needs to be completed is some feedback during application loading, while the main gui is unavailable. for now, i just made the splash screen display unconditionally, but this is a temporary solution. i don't think it is acceptable, at least when application is configured to start minimized (but personally i would display it in all other cases unconditionally). i want to extract the tray icon into a separate component so that i can display it from the very beginning and use it for feedback during app loading. what do you guys say? , i need your general opinion about the direction of these changes (don't look at the code in detail yet)."
707177803,13498,Chocobo1,2020-10-12T15:08:42Z,well i don't have strong opinion on it except that splash screen isn't really a common thing nowadays. iirc some linux desktop environment doesn't support tray icon so it may not be universally available...
707181829,13498,glassez,2020-10-12T15:15:40Z,"i agree, but it still ""rocks"" in long-loading apps. not having any response for 10-20 seconds is much worse."
707196436,13498,ArcticGems,2020-10-12T15:41:33Z,"i agree with glassez, without the splash screen, you might think qbittorrent crashed. maybe you could make so that the splash screen only shows when you have x number of torrents."
707249312,13498,Chocobo1,2020-10-12T17:26:10Z,or maybe instead a progress bar placed at the rightmost of the status bar: ![a link]
707271569,13498,glassez,2020-10-12T18:11:53Z,"this makes sense when part of the interface is available from the beginning, but some additional tasks are still performed in the background. so this doesn't seem like a relevant example to me. i would use something like photoshop as a suitable example. otherwise, what do you suggest to display in the main window besides the progress indicator? empty controls? in addition, we must make them unavailable for interaction, so as not to allow the user to perform conflicting actions. generally, i can't imagine how it could work in this case. besides, i'm not good at gui designing and i don't want to get stuck in it for long. i just want to implement the main idea (populate gui after session loaded) as simply and clearly as possible for me. but if you (or someone else) have any more detailed ideas, you're welcome."
707276481,13498,xavier2k6,2020-10-12T18:22:38Z,"in the original improve startup thread, i made a build that uses the latest commit `dd1e7d0` from there but modified the ""time-out"" from default `10` & set to `200` instead. for me that build opens instantly & all 10,000 test torrents get fully loaded in 38 - 40secs on my machine....... will i upload it here or in original thread for testing, also - anymore though to what i suggested in [a link]"
707424675,13498,NotTsunami,2020-10-13T01:12:53Z,"for the sake of development of this pr test builds should probably be just master + this pr, however benchmarks of the settings you mentioned vs just this pr vs master might be appreciated."
707436168,13498,ghost,2020-10-13T01:56:33Z,"my suggestion is, if qbt is being started from a startup entry on windows, start it as minimised to tray like every other app. and when it’s started as minimised, do not show any loading/splash screens. however when someone clicks on the tray icon display the loading screen. show the loading screen only when someone starts qbt as not minimised. remove the settings for splash screens altogether. no app uses those anymore. this may also confuse users as to think it’s a bug."
707490719,13498,glassez,2020-10-13T05:07:21Z,":thumbs_up: this should be obvious. :thumbs_up: now ""start minimized"" is a user-configurable option. although i believe that it should work unconditionally, when qbittorrent starts automatically, then minimized, in other cases - show a window. but it is kind of separate issue."
707550045,13498,jagannatharjun,2020-10-13T07:30:00Z,"disable transfer list (maybe whole window), and only show a progress bar in the status bar, i'm only saying this because the current splash image doesn't look good, ~personally, i liked your previous solution better, 30-40 seconds delay in loading 10k torrents is kinda understandable (but don't tell them it can be done in 5 seconds)~ (nope)"
707559291,13498,xavier2k6,2020-10-13T07:49:02Z,"i would agree with this! although this would be great! - i don't believe we are getting the correct observations/profiling in our collective tests. the profiling in my opinion needs to be a bit more fleshed out & have more users feedback like i suggested in the other thread with users who have `12,000 & 36,000 real-life` cases. the hardware used will have an impact on loading/start-up.........ssd/nvme ssd or hdd so that in itself needs to be kept in mind when possible `5 seconds` can be seen as wonderous for some but others it could be a ""i wish/if only"" feeling."
707575879,13498,glassez,2020-10-13T08:18:28Z,"hey guys, please don't mix different levels of this problem. i am primarily interested in whether we want to continue using the current (""idiotic"", imo) startup method, where we gui tries to handle all the intermediate states of the session loading, or whether we should populate gui after the session is already loaded. if we choose the second method, then we will need to decide on the preferred way to provide feedback during app loading (whether it will be a splash screen, or some special view of main window, etc.)."
707592018,13498,ghost,2020-10-13T08:46:40Z,"trackers are stuck at ""updating"" with the build from this pr."
707845350,13498,glassez,2020-10-13T16:04:51Z,"well, it looks like we found a bug in libtorrent. it is due to `lt::session::pause()` and `lt::session::resume()` calls (it seems that no one used the second one, so it remained unnoticed until now). session aborts tracker requests when we pause it: [a link] this puts the tracker manager in an aborted state: [a link] and then when we try to resume the session, it tries to send announces, but tracker manager cannot do it because of aborted sate (or we get ""assertion failed"" error in the debug build): [a link] the problem is that once tracker manager gets into aborted state, it doesn't come back from it. and it really looks like a bug, otherwise `lt::session::resume()` is meaningless since it cannot work."
707915038,13498,arvidn,2020-10-13T18:04:09Z,"oh, it sounds like it. i'll take a look"
708049190,13498,sledgehammer999,2020-10-13T22:44:12Z,"i'll throw one **minor** suggestion on the represantion of things. if i understand correctly the goal of this pr is to load every torrent behind the scenes and once every torrent is loaded into the lt session then update the ui (aka transferlist) in one go. so your problem is what to do with the ui for the few seconds that it takes to load the torrents and the ui looks as doing nothing/unresponsive (or that you haven't popped up any ui element yet). my suggestion: present the mainwindow as usual but have everything disabled in it. in the place of the transferlist put an empty background (usually grey) and a qlabel stating ""torrents are being loaded. please wait..."". i think this can be achieved with qstackedwidget."
708056612,13498,FranciscoPombal,2020-10-13T23:05:58Z,"i am against making the tray icon mandatory/an essential part of the presentation, because a) some people like me don't like tray icons, or only want them for very specific things and b) tray icons may be available in some not-so-uncommon setups. i second the proposal of showing the gui asap and presenting a visual cue about torrent load progress (progress bar in status bar and/or greyed out transfer list with text), rather than showing a splash screen or something like that."
708169945,13498,glassez,2020-10-14T05:41:28Z,"okay, i'll try something like that... to be honest, i did not really want to get into this terrible jungle of main window initialization. but i'll give it a try. i'm still not sure whether to show progress. it can add an unnecessary load that we really want to avoid. maybe just a message ""torrents are being loaded. please wait..."" will be enough."
708180647,13498,ArcticGems,2020-10-14T06:09:44Z,maybe a moving loading icon so that user know it's not frozen or is it to much?
708248540,13498,arvidn,2020-10-14T08:31:39Z,would you (or someone else) be able to test this patch? [a link]
708393688,13498,ghost,2020-10-14T13:14:17Z,i've tested it and it's working fine now. you may merge it.
708436153,13498,xavier2k6,2020-10-14T14:21:00Z,"i made a build from the previous 'load ui after bittorrent session is restored commit: ebd5b4e' & gui fully shows up after 5 seconds on my machine. (default settings with portable profile & 10,000 test torrents/paused state.) i don't know what the general consensus would be to not have anything displayed (for those 5 seconds) at startup?! this **is** actually a vast improvement over **v1** & i was wrong. **well done!**"
708536394,13498,glassez,2020-10-14T17:06:19Z,"this is acceptable to me. besides, i wouldn't have to poke around in the main window. but do not forget that the result will not be so great on slower/older systems. waiting even 20 seconds without any feedback is unacceptable, imo."
708873985,13498,glassez,2020-10-15T03:32:22Z,", would it be difficult to implement a flag that allows you to create a session in pause mode?"
708925312,13498,arvidn,2020-10-15T06:19:09Z,i think it's a good idea. it's not trivial to add in a backwards compatible way though. i'll take a look. maybe there will have to be a new session constructor
709229885,13498,glassez,2020-10-15T11:42:39Z,"seems it requires libtorrent 1.2.11 and higher. not a problem for me. but if there are objections to raise minimum supported version of libtorrent, we will have to wait with this improvement."
709242348,13498,sledgehammer999,2020-10-15T11:59:48Z,"iirc the only problematic os here is linux. but since we provide via our ppa the newest libtorrent for the most popular distro(ubuntu) it shouldn't be a problem to raise the minium version of 1.2.x. besides, if a distro already packages 1.2.x and wants to update qbittorrent, it will almost always update libtorrent-rasterbar alongside with it."
709987089,13498,glassez,2020-10-16T11:22:41Z,"i started digging in the main window today. this is just awful! no wonder i tried to avoid it all this time. it's just a bunch of poorly structured, confusing ""illogical"" logic. can someone, for example, explain what the hell is going on with systray? what are the deferred attempts to create it if it is not available? after all, the documentation says in black and white that you can simply create qsystemtray object, even if ""system tray"" is not available in the system at the moment, and it will initialize system feature itself when it becomes available. , , do you know anything about this? maybe it's just a relic of a long time ago (for example, the qt4 era)?"
710750429,13498,kasper93,2020-10-17T05:03:19Z,"i did quick look and i don't understand why do you intend to keep serialized loading? in your patch (roughly) 1. load resume data (with splash screen) 2. add torrents to lt 3. start session 4. process tens of thousands alerts in one go, which adds torrents to list view. this is the exact problem i wanted to mitigate. there is no need to halt any processing(or gui) until all torrents are resumed, they can be resumed/added asynchronously as session/gui operates normally (visually the list will fill up as they are loaded). this way 1, 2, 4 is interleaved between each other and torrents are added in batches as lt notify about them being loaded. without any gui waiting/stalling. splash window is nice and all, but it is still taking time. they are two main problems when resuming torrents. 1. loading the resume data 2. processing lt alerts so far you only handled 1 and 2 is as crucial to handle correctly as 1, because throwing tens of thousands of alerts on main thread to process in one batch will also make it not responsive for quite some time. in some alerts we call back to lt and depending on lt state taking mutex might take some time and by interlarding those steps we make number of alerts to process way lower in one batch releasing gui event loop sooner."
710782758,13498,ghost,2020-10-17T09:23:08Z,"i think you've missed the v1 version of this pr where it was attempted to load the torrents asynchronously and populating the list as they are loaded. however, the results are not quite desirable."
710784308,13498,glassez,2020-10-17T09:33:33Z,", can you try the last commit? it is not yet fully completed, but it should still give a general idea of the approach used. i would like to know how it behaves in both cases, having a lot of torrents (a test set of 10,000), as well as under your normal conditions (as many torrents as you use normally)."
710786619,13498,glassez,2020-10-17T09:49:04Z,"exactly! in my patch (roughly) 1. load resume data and add torrents to lt simultaneously in different threads 2. start session 3. populate gui with all existing torrents at once that is key improvement here (since it is more effective than add them one by one) the only remaining problem here is how to provide feedback during session restoring. this is not a problem at all if you don't have a large number of torrents. but if there are several thousand of them, then user need to see that the app is loading, and not crashed/frozen."
710786956,13498,ghost,2020-10-17T09:51:31Z,i've identified an issue. the 5-6 seconds loading time that some were reporting in this pr were probably affected by the libtorrent bug which caused trackers to be stuck at updating. the ci github actions build is probably still using an older libtorrent because i'm still facing that stuck at updating issue for trackers on latest commit. it took 4 seconds to load 10k torrents. but i think if trackers were working it would've taken more time.
710787399,13498,ghost,2020-10-17T09:54:19Z,can someone provide a build with latest rc1_2 branch of libtorrent and latest commit of this pr? or is it possible to update the libtorrent on the github actions build?
710789500,13498,xavier2k6,2020-10-17T10:09:11Z,general to content tabs missing in latest actions build?? ![a link]
710798441,13498,glassez,2020-10-17T10:23:27Z,"well, will handle it. but how it behaves generally? how long does it take for the main window to appear? how long does it take for the transfer list to appear? how does the window behave between these events?"
710831354,13498,xavier2k6,2020-10-17T11:13:09Z,"here ya go, just be aware of [a link] edit: 10,000 test torrents not included in this build. windows test build of 4.3.0(alpha1) with listed libraries: [code block] [a link]"
710835668,13498,xavier2k6,2020-10-17T11:19:47Z,"cool seems to be ok, didn't test extensively! instantly about 5 secs from paused state/about 7 secs from resumed state (10,000 test torrents - default settings) seems to be ok, didn't test extensively! have **374** torrents in my main setup & main window opened instantly & it took only about 1/2secs to fully load transfer list etc. if you want more feedback on user experience etc - list below is of the 4x users i identified with a large amount of torrents. [code block]"
710846205,13498,ghost,2020-10-17T11:32:52Z,thanks for the build! here's a capture of how it behaves with 10k torrents [a link]
710848797,13498,glassez,2020-10-17T11:35:47Z,"i wanted to know if i should continue in this direction. if it's generally approved, i'll clean it more. when it becomes more stable, we can call the users you mentioned."
710854357,13498,glassez,2020-10-17T11:41:59Z,"thank you for your testing and feedback. this really helps, because i don't have much time to do it myself. it would be nice if you provided information about the hardware configuration of your machines that you are testing it on."
710858555,13498,ghost,2020-10-17T11:48:11Z,"with only 22 torrents it loads the same as previous versions. [a link] tested on a windows 10 machine. hardware: ssd with 500 mb+ r/w a 6c/6t cpu, 16 g ram."
710861655,13498,glassez,2020-10-17T11:53:23Z,seems has no such issue. did you have all tabs closed before?
710862799,13498,xavier2k6,2020-10-17T11:55:39Z,i just saw that myself in his clips?! no - is there an option for that.....
710867095,13498,xavier2k6,2020-10-17T12:02:40Z,no bother. windows 10 pro version 2004 x64 (os build 19041.572) i7 4790 (4 cores 8 threads) 32 gib ram samsung ssd 850 pro 256 gb (main os) (latest firmware) samsung ssd 860 evo 2tb (torrents downloaded are saved here) (latest firmware)
710880427,13498,xavier2k6,2020-10-17T12:20:13Z,i'll test it on another machine later & report back.
710907993,13498,glassez,2020-10-17T12:43:53Z,"well. i would not like to see unexpected side effects for less ""powerful"" users (such as myself). i mean ""general"", ""trackers"", ""peers"", etc. you can see one or none of them."
710929734,13498,ghost,2020-10-17T13:02:56Z,"i can confirm the issue with the lower tabs. if you don't have any of the tabs shown while exiting the client, on the next start none of them shows up."
710930136,13498,xavier2k6,2020-10-17T13:03:19Z,"none, even if i load up my compiled build or the actions build with portable/profile & no torrents added.....100% default/vanilla/virgin......"
710935274,13498,xavier2k6,2020-10-17T13:07:41Z,can confirm not showing on at default settings either as previously stated.
710952947,13498,xavier2k6,2020-10-17T13:22:43Z,"actually...........having a checkbox to enable/disable ""show lower tabs"" would be a nice feature. may make a ""feature request"" in a new issue for this?!"
710959556,13498,glassez,2020-10-17T13:29:01Z,do they interfere with you even in the collapsed state?
710967950,13498,xavier2k6,2020-10-17T13:35:26Z,it's more of an `aesthetic` preference for me........(now that i've seen them gone lol) practically......i obviously can't say if there's a benefit or not (redrawing etc).........but i don't use them much....usually closed/minimized anyway.
711029897,13498,FranciscoPombal,2020-10-17T15:28:41Z,"yeah, it is possible to update the version on the actions build, i'll submit a pr to vcpkg. i would also like to have more build variants in ci (e.g. with `rc_1_2` head), but currently i'm not aware of a way to accomplish that without blasting through the cache usage limit (thereby making cache useless, since at least one job would always be uncached, and thus severely increasing ci time to almost 2h, which is unacceptable) or doing more non-cached package installations, which would also increase the ci time somewhat. another solution would be to have a separate ""secondary ci"" workflow that is assumed to simply take longer than the main one, where we could have all build variants we'd like."
711032759,13498,xavier2k6,2020-10-17T15:46:14Z,"the ""actions builds"" are also defaulting async io threads to 10.....this was only meant to be for libtorrent 2.0 correct or was this changed for 1.2.x as well in master??"
711039065,13498,FranciscoPombal,2020-10-17T16:23:15Z,that change was intended for both 1.2.x and 2.x
711039410,13498,xavier2k6,2020-10-17T16:25:23Z,"ah cool, thanks for the clarification - i thought when i saw it...that something from 2.0 had crept in to 1.2.x that rise in default is a good change for ssd/hdds users alike..."
711040514,13498,glassez,2020-10-17T16:31:07Z,should be fixed now.
711041230,13498,xavier2k6,2020-10-17T16:34:06Z,"when you run qbittorrent & main (blank) window loads up you can click on the gear icon =>sigsegv crash or, tools=>options =>sigsegv crash"
711052399,13498,glassez,2020-10-17T17:25:00Z,"you can click on the gear icon =>sigsegv crash or, tools=>options =>sigsegv crash oh, i see. as i said, latest changes are not yet complete. tool bar and most of menu items should be unavailable until the session and other core components are loaded."
711086877,13498,kasper93,2020-10-17T22:14:39Z,"also i don't understand why you always have to be rude. sure, let me try asking again. why do you want to serialize loading/adding torrents to lt and processing them? queuing everything in lt like i said makes big batch of alerts to process, in my test with just ~600 torrent it takes 5-7s do you intend to manually add torrents to list and ignore `add_torrent_alert`? or you want to gather those alerts and process them together? why? after all adding torrents is iterative process so what overhead is involved when processing alerts one by one? anyhow it probably boils down to what time you measure, because letting lt session work while adding torrents will make pure adding torrents slower, but whole time to actually running torrent will be shorter."
711147199,13498,glassez,2020-10-18T10:24:51Z,can you produce a build with both `m_nativesession->pause()` and `m_nativesession->resume()` commented and compare its behavior with previous one?
712099628,13498,glassez,2020-10-19T11:41:49Z,have you any result?
712100095,13498,FranciscoPombal,2020-10-19T11:42:47Z,"please don't delete comments, hide them if needed."
712102254,13498,glassez,2020-10-19T11:47:49Z,"i don't delete anything important, even offtopic (i hide them), only what was of temporary significance (it often turns out that we use pr thread as a messenger). otherwise, it becomes difficult for me to maintain it."
712111496,13498,FranciscoPombal,2020-10-19T12:06:21Z,"please leave it be for now. it is bad precedent to delete comments, even if they are spam (in a serious spam incident, it is preferable to ban the users from posting). plus this is not even a particularly long discussion (yet). i agree it is not ideal to use the pr comment section for ephemeral communication, but we should enforce some other policy, like joining irc for such conversations when 2 or more members notice they are online at the same time. this could be discussed together with other organizational matters."
712112435,13498,glassez,2020-10-19T12:08:17Z,ok
712154070,13498,xavier2k6,2020-10-19T13:24:26Z,"i won't be in front of any of my machines until later this evening so it may be tomorrow before i actually have any update for you, sorry about that"
712764417,13498,glassez,2020-10-20T10:48:49Z,"i noticed one thing. when qbittorrent starts ""cold"", reading resume data takes most of the startup time. generally, startup time rests on reading time (at least in my tests on hdd driven machine). but with subsequent restarts of qbittorrent without restarting the system or any other heavy operations that can rewrite the disk io cache, resume data is read much faster (even in my tests on hdd, it occurs in a couple of seconds, which is several times less than the total startup time). since the normal launch of qbittorrent is usually ""cold"", i think we should test this pr in the same conditions. am i right?"
712798288,13498,glassez,2020-10-20T11:58:17Z,"i also added some temporary code that makes some timestamps and outputs debug messages about the resume data read time and the total session resume time. if you can see such messages, it would be a good idea to get this info in your test reports."
712800290,13498,kasper93,2020-10-20T12:02:15Z,"you can use vmtouch to simulate both scenarios easily. controlling mapped pages is quite important, because as you noticed reading resume data form memory is fast. generally we cannot optimize io time much, so would be nice to pipeline it with other processing to hide as much overhead as possible."
716433731,13498,glassez,2020-10-26T09:45:19Z,"there's no one left to test the latest changes?.. , ,"
716445444,13498,xavier2k6,2020-10-26T10:07:21Z,i'll come back to this when i have more time...... `an0n666` seems to have got his account deleted?
716689049,13498,thalieht,2020-10-26T17:01:33Z,"10k torrents no difference in loading time from the commit with the splash screen: 5-6 sec all paused and 13 sec all resumed. one thing i noticed is that when all torrents are resumed, the loading progress bar animation is frozen after second 6 until the gui is loaded. doesn't happen when all torrents are paused. i don't expect anything regarding it, i'm just mentioning it. oh and no timestamps for me."
716845732,13498,xavier2k6,2020-10-26T21:55:38Z,"**can confirm this & here are results from tests i conducted (actions build used - commit: `7b8087d`)** ### paused ### default/portable/10,000 test torrents (double-click to fully loaded) 1st run 1min 33 secs 2nd run 4 secs 3rd run 4 secs 4th run 4 secs (left it closed for 20 mins) 5th run 14 secs 6th run 4 secs - runs 2/3/4/6 are the result of starting qbittorrent again as soon as it disappeared from task manager - after 6th run in paused state - i resumed torrents & quit after a few minutes. **left about 2 hrs pass before beginning testing in resumed state.** ### resumed ### default/portable/10,000 test torrents (double-click to fully loaded) 1st run 1min 34 secs 2nd run 32 secs (left it closed for 10 mins) 3rd run 1min 10 secs 4th run 14 secs 5th run 9 secs 6th run 7 secs - runs 2/4/5/6 are the result of starting qbittorrent again as soon as it disappeared from task manager same for me same observation, just before it is about to load gui fully....starts to kinda stutter/freeze - no progression."
718195287,13498,xavier2k6,2020-10-28T20:39:23Z,"i gave the actions build with `87a9710` a whirl..... took 56 secs to load fully from double click (cold) 2nd/3rd run 3 going in to 4th sec to load fully from double click one thing to note is that consistently the ""downloading"" in status pane ""always"" shows a different amount on each run.......it never shows the `10,0000` - amount goes up or down on each run...... see pic for example: ![a link]"
718351843,13498,glassez,2020-10-29T04:27:41Z,"one thing to note is that consistently the ""downloading"" in status pane ""always"" shows a different amount on each run thank you for testing. this last attempt seems to have defects. in addition, it does not bring the desired result. it seems that the whole current approach does not work well with a large number of ""resumed"" torrents. looking for a different approach..."
737860313,13498,glassez,2020-12-03T10:43:31Z,"i didn't abandon this work, but just put it on hold to solve more important tasks. i have some more ideas on how to go further."
742461389,13498,xavier2k6,2020-12-10T11:26:06Z,i don't know if any of these would make a difference: ## classes/module: `qfuture` `qtconcurrent` `qpromise`
759455011,13498,ghost,2021-01-13T13:40:56Z,this is probably a related issue. [a link]
902347953,13498,NotTsunami,2021-08-20T00:47:40Z,is this on hold until qt6 support is finalized or are we going down a different route?
902419470,13498,glassez,2021-08-20T04:21:40Z,i'm still busy with other problems. but i come back to think about this from time to time.
215987124,5195,ngosang,2016-04-30T18:54:47Z,could you share and example of utorrent rss feeds file?
215992053,5195,mgziminsky,2016-04-30T20:09:39Z,"here's a sample file with all imported options enumerated in the rules. you'll need to change the extension back to `.dat` to use it, [a link]"
215995012,5195,glassez,2016-04-30T20:58:04Z,1. i think you should separate logic from gui code and move it into appropriate base class. 2. use **const** instead of `#define` to create constants 3. check and fix coding style
215998255,5195,mgziminsky,2016-04-30T22:09:38Z,"1. i'll see what i can do. do you have any particular expectations or suggestions as to how you want this to look in the end? i'm thinking a new aggregate model class that will hold the loading logic and results, then copying the loaded data into the final objects from the view callback. does that sound acceptable? 2. fair enough, will fix 3. did you see something that doesn't follow the coding style? i'm using the provided qtcreator profile and ran uncrustify before committing."
216012123,5195,glassez,2016-05-01T03:19:52Z,"no need to complicate it. why not just implement the import function which parses the utorrent file into set of qbittorrent rss feeds and rules, and to call it from the gui?"
217627608,5195,ngosang,2016-05-07T10:29:16Z,"**omg! it works perfect. thank you so much! i couldn't find a single.** i know this little improvements are not caused by your work but should be easy to implement for you. in the import dialog: ![a link] i think we should have this 3 options: - all supported formats (*.rssrules *.filters *.dat) <= selected by default - qbittorrent (*.rssrules *.filters) - utorrent (*.dat) i don't know if it's possible but i want to see the extension (*.dat) in the dialog combo. in the export dialog the filter should be qbittorrent, the same as in the import dialog. remember the extension in the combo. :) ![a link] the import dialog title doesn't seem ""proffesional"" ![a link] export dialog title neither: ![a link]"
217660345,5195,mgziminsky,2016-05-07T18:29:09Z,"simple enough, i can add this in. this actually bothers me too. from what i can tell though, this is the fault of the system's native file dialog. the only solution that will ensure the filter rules are consistently shown is to force the use of qt's built-in dialog rather than the system native one. i'd be happy to change them, do you have some better alternatives in mind?"
217662796,5195,ngosang,2016-05-07T19:19:05Z,"i changed my mind, do not change that. seems related to the de, in windows you can see the extension. i'm not english native.. maybe: - select a rss rules file - select destination rss rules file"
218143456,5195,glassez,2016-05-10T12:33:14Z,please rebase and squash the last 4 commits into one so i can check it out.
218737876,5195,glassez,2016-05-12T12:07:32Z,"imo, your main mistake here is you import feeds together with the rules and therefore it would be logical to do it from the main rss ui, but for some reason you are doing it from narrowly (single-purpose) dialog, because of what you had to do that ugly closure (i mean the `addfeed` signal). you should either import all utorrent rss data from main rss ui or split importing into two parts (import feeds from main ui and import rules from appropriate dialog). i would prefer the first option. what do you think on this?"
218748948,5195,mgziminsky,2016-05-12T12:57:53Z,"i share your discomfort with the whole addfeed signal thing i ended up with, so i am completely in favor of making this change. i don't think there is any good way to import them separately, so i would also prefer your first option. in that case, what are your thoughts on how this should be exposed from the main ui? my vote is a new option under the tools menu. then, if desired at some point, the ability to import settings from utorrent can be added there as well as part of a sub-menu along with the rss import option."
218762892,5195,glassez,2016-05-12T13:50:16Z,"my vote is some button between ""rss downloader"" and ""settings"". but it would be better to ask other contributors."
218875326,5195,mgziminsky,2016-05-12T20:26:04Z,"for this feature though, the majority of users probably won't be using it, and those that do will only need to use it once. i typically think of buttons as a way to make common actions more accessible. since this will be used so rarely, i feel like a button on the main ui will just be in the way."
218955602,5195,glassez,2016-05-13T05:30:54Z,"your truth. i proceeded just from the fact that we already have some rss command buttons, but do not have rss menu. but usually (in the case of a one-time import) the user is just offered to do it at the very beginning (through dialogue, for example). so we might as well do it when user turn on rss ui."
218997498,5195,zeule,2016-05-13T09:38:09Z,i do share your concerns. i would try to implement the import filters in their own executables (i don't say they have to be executables). i guess the discussion about the signal went ahead already and that implementation will be changed.
219605060,5195,mgziminsky,2016-05-17T02:39:58Z,"ok. so after experimenting a bit, here is what i decided to go with: - a new menu option under the file menu that is only visible while the rss tab is enabled. - open file dialog filter restricts to exactly `rss.dat` instead of `*.dat` - `rss.dat` file in utorrent's default location is pre-selected in the file dialog - importing will disable download rules and open the rules dialog so the user can check the imported rules - maybe this should only happen if at least one rule is imported? the most significant code change compared to before is to the behavior of the `downloadrulelist`. the items in the list are now ""implicitly-shared"", which makes them effectively immutable. this allows `downloadrulelist` to be copyable, which lets the rules dialog initialize it's editable list with a copy of the rules in memory, instead of loading them from disk."
222309924,5195,mgziminsky,2016-05-28T13:57:40Z,"has anyone had a chance to look at my most recent commit? sorry for the direct mentions, but there hasn't been any activity here in almost 2 weeks."
222317206,5195,glassez,2016-05-28T16:33:03Z,"the qbittorrent rss subsystem is implemented through the ass (i have long intended to rewrite it, but i still once). maybe that's why your changes look horrible (it's hard to build a good house on a bad groundwork). so i prefer not to criticize it now. i better redo it all at once then, if the maintainer decides to merge this. the only comment is about coding style. please fix it."
222328220,5195,zeule,2016-05-28T20:28:02Z,i'm sorry but i have nothing to say. don't use rss and thus do not really understand what is going on under the hood.
223816875,5195,mgziminsky,2016-06-05T14:42:45Z,"you mention coding style, but i don't know where you are referring to. i made sure to follow the style guide. i have the qtcreator profile loaded and ran uncrustify on my new files. i even went back and fixed some unrelated code based on your previous comments."
223916908,5195,glassez,2016-06-06T10:00:20Z,well. i pointed out your error in the code.
260212926,5195,apdidy,2016-11-13T21:07:15Z,"i'm new to this github. has update 5195 been released into a stable or unstable version of qbittorrent? if not, when do you anticipate to release the next version with this update? if it's going to be awhile, would you be able to guide me to a how to on compiling the source code for windows? then a how to on adding the updates you have checked but not released?"
261784442,5195,mgziminsky,2016-11-20T15:23:20Z,"based on where the conversation left off, it seems unlikely this will be merged any time soon, if at all. if you want to compile it on your own, you can find instructions on the qbittorrent wiki here: [a link] and specifically for windows here: [a link]"
277713150,5195,sledgehammer999,2017-02-06T15:17:29Z,recently i am doing quite a few pr reviews+merging regarding rss(mostly by ). do you mind rebasing this? i hope i'll have time to review+merge it too. thanks for the effort so far.
277801929,5195,magao,2017-02-06T20:23:05Z,"my new rss rule handling (#6180 and #6181) has now been merged to master, and the new functionality in those might make importing easier. basically, the changes were to reach parity (or better) with the utorrent rss filters ... note that regex rule parsing is currently broken on master - see pr #6344. for myself i created a quick-and-dirty python script to convert my ~100 utorrent rss filters to qbittorrent. i could make it available to see if there's any functionality in it that should be incorporated into this pr. side note: i needed to temporarily modify the qbittorrent rule loading to handle either a `qmap` or `qhash` (since i couldn't get `pyqt` to save as a `qhash`) but didn't see any point in creating a pr for that ..."
277851680,5195,mgziminsky,2017-02-06T23:45:03Z,"thanks for the update. i'd been keeping an eye on that batch of rss prs, so if they are being merged now i'll try to get mine rebased some time this week."
528150843,5195,joachimweyl,2019-09-05T01:00:47Z,new to github. how do i find out if this code exists in qbittorrent or not?
528180426,5195,glassez,2019-09-05T03:25:58Z,"no, it isn't."
596122392,5195,FranciscoPombal,2020-03-07T18:09:43Z,is this abandoned? re-open or start a new one if you still want to land something like this.
545768089,11354,glassez,2019-10-24T06:35:47Z,", are you test it? couldn't it is possible lead to an inconsistent state? what does happen, e.g., if you pause ""checking paused"" torrent? and then resume it?"
545936716,11354,thalieht,2019-10-24T14:11:27Z,"if by ""checking paused"" you're not referring to some weird internal state but to pause->recheck->interrupt recheck by pausing the torrent->resume, then yeah i had tested it and it behaves as expected: it resumes rechecking where it left off. however after qbt restart, the torrent will automatically recheck if the recheck wasn't finished. not sure if that's expected behavior (don't know where to look in order to change it, if it isn't)."
547095701,11354,glassez,2019-10-28T18:55:54Z,"it isn't good idea to pause checking process in any case. well, user can have reason to do it so i will discuss no pros and cons. first case is when the user triggers ""force recheck"" of paused torrent manually. seems we can easily allow to pause it during checking but we need to clear `m_pausewhenready` flag. the second case is when user wants to pause torrent that is checking during startup. this is a complex case and it requires careful research, otherwise we can plunge the torrent into inconsistent state."
547192385,11354,thalieht,2019-10-28T23:39:35Z,"i bet it involves `m_startupstate`, i can't understand it. maybe you'd like to take over? turns out it's not as simple as i thought..."
547277571,11354,glassez,2019-10-29T06:33:56Z,at least you can finish the first case here. it is easy as you can see from my comment. and it should be done before v4.2 release. i have no time now. i don't even have a suitable computer at my disposal.
547375064,11354,thalieht,2019-10-29T11:25:34Z,"done (i hope) with some rudimentary testing again, no problems found."
548039518,11354,glassez,2019-10-30T18:01:36Z,"hmm, interesting point of view... can you explain what it's based on? mine is based on the fact that the user's last explicit action is ""resume torrent"", so user expects the torrent will keep resumed. or you separate ""checking"" from all other torrent jobs so ""pause"" and ""resume"" when torrent is checking affects only ""checking"" process?"
548048119,11354,xavier2k6,2019-10-30T18:20:51Z,"~~[a link] ~~some torrents seem to need to be rechecked over & over again on each new openeing of qbittorrent......although it seems the amount is becoming less & less......i believe it is to do with the ""not responding"" being encountered on checking said torrents.~~"
548048879,11354,thalieht,2019-10-30T18:22:32Z,"i hadn't given it any thought but it's pretty much what you said. it felt more intuitive. also whether you were sarcastic or actually asking for my opinion the answer to both is that i don't care either way and my pov is clearly subjective hence you are right that it should resume the torrent. ""resume"" actually :^)"
548288884,11354,thalieht,2019-10-31T09:45:06Z,"i have now given it some thought and stand by what i said that it should return to its prior state. consider this: someone has his torrents on an external drive and forgets to connect it before starting qbt. they all start rechecking. ""damnit not now i have work to do"" and pauses everything. he had a mix of paused and non-paused torrents and i doubt he wants everything resumed when rechecking is finished. remember, recheck was issued automatically/forcefully/unwillingly and the pause/resume commands were manual and explicit during the recheck. so despite what the code says, has the human given the command to ""resume torrent""?"
548401055,11354,glassez,2019-10-31T14:26:20Z,"no sarcasm. i am a supporter of simple, strict and reliable interfaces. but it often requires a certain skill and/or mentality from the user, so it is inconvenient for most ordinary users. so i'm interested in a different opinion. this isn't so good example. such torrents just become ""missing files"". but you are right generally: recheck can be issued automatically/forcefully/unwillingly in many cases. so you still lead to the fact that ""checking"" is a special state that can be started/paused regardless of the main state of the torrent. hmm... in principle, i do not object to such a model, if we manage to formalize it consistently. the question is, will it be intuitive to the user that these actions (pause/resume) are context sensitive?"
548411501,11354,glassez,2019-10-31T14:48:10Z,"sorry, it seems like a different issue."
548430385,11354,glassez,2019-10-31T15:27:32Z,", , can you share the discussion above (about special meaning of ""checking"" state)?"
548442191,11354,jagannatharjun,2019-10-31T15:52:33Z,"well, i didn't know the internals of qbittorrent yet. so i don't think i can add anything useful here but by reading the comments and with my little understanding, i want to say that the idea should be that one can pause a torrent at any point in time, and ""resuming"" should resume the torrent i.e seeding if it were seeding previously or checking if it were checking."
548466138,11354,thalieht,2019-10-31T16:46:45Z,"the question is: if a paused torrent (initial state) started rechecking but was paused before it finishes, when user resumes the rechecking should the torrent go back to paused or resumed (seeding/downloading etc) when it finishes?"
548505192,11354,Chocobo1,2019-10-31T18:18:26Z,i would expect resumed state.
548529496,11354,glassez,2019-10-31T19:19:22Z,do you clearly understand the reasons for the contrary opinion?
548626310,11354,xavier2k6,2019-11-01T01:02:17Z,all ok now......had an extra resume file in bt_backup folder from about 2 yrs ago that had no torrent or torrent file associated with it....deleted it & resumed all other files manually for a split second or two in qbittorrent/re-paused - all saved same modified date/time regarding fastresume file & has not been stuck in a re-check loop on every start-up since.
548643857,11354,Chocobo1,2019-11-01T02:39:12Z,"i haven't look into much, that viewpoint was made as an user."
548673826,11354,glassez,2019-11-01T05:44:02Z,"ok, i asked for user opinions."
548697538,11354,LordNyriox,2019-11-01T07:45:43Z,": imo, the ""initial"" state should be preserved, assuming it is reasonable to do so. i like to micromanage my qbittorrent transfers, which includes a lot of pausing and manual rechecking at various times. if some emergency comes up, and i have to pause a running recheck process to free up system resources, then i would like to be able to go back to exactly what i was doing in qbittorrent once the emergency is resolved."
548881908,11354,glassez,2019-11-01T17:38:55Z,"guys, it seems that you still do not understand what the hitch is... although the purpose of the changes is stated as ""allow to pause checking torrents"", it is not a problem in itself: just remove a couple of lines of code. the problem is what should happen next when we resume it again. the fact is that ""checking"" can be performed for generally paused torrent (for which it temporarily resumes and then pauses again), for example, this can happen when a previously paused torrent is starting up, or when the user manually rechecks some paused torrent. an illustrative example is #11076. let's imagine you want download some torrent and run qbittorrent but it starts to check existing (both paused and resumed) torrents for some reason. you don't want to wait for it to finish checking and pause them all. after you've done your current job you want to resume all existing torrents. what should you do? and what behavior do you expect from qbittorrent?"
550410700,11354,Chocobo1,2019-11-06T17:16:37Z,"i thought this situation isn't too different to what thalieht [a link] eariler. so my answer hasn't changed. basically this is what i would expect qbt to do (disregard what it is doing currently): 1. when i press ""pause torrent"", i want it paused, i.e. just full stop. 2. when i press ""resume torrent"", i give qbt permission to do whatever it takes to get it running. the program may recheck the files if necessary. but eventually i want it to be in running state (either in downloading/seeding or whatever finished state). i haven't really thought thoroughly on this, but i hope the following can reduce confusion from a user perspective. 1. when user manually rechecks some paused torrent, this marks the torrent a ""need recheck"" label (internally) and starts checking it. now while it rechecks the user can have 2 actions: * wait for it done and the torrent will become paused again. * press pause to interrupt it. now user can have 2 actions to leave this paused state: a. select ""recheck torrent"" again, this action will go to step 1. b. select resume. this will recheck the torrent and then starts running, i.e. leaving paused state."
551020401,11354,thalieht,2019-11-07T10:31:37Z,"if user has hundreds of torrents and they all start checking, he's supposed to manually track down which ones were previously paused and force recheck only those he wants to be paused again? no one will do that anyway, everyone will just resume. not to mention that issuing force recheck on a half checked torrent will start from the beginning (no big deal since checking is no longer parallel, well except for force resumed torrents). unacceptable imo. i only object because of this case, if mass rechecks were never mandatory it wouldn't even be an issue."
551034530,11354,Chocobo1,2019-11-07T11:10:57Z,"what leads to that condition? does the user manually rechecks them or qbt auto start the rechecking? if it is the former i would expect this: * running state -> user initiate rechecks -> recheck done -> continue in running state * running state -> user initiate rechecks -> user pause it before done -> user resume it -> recheck done -> continue in running state * running state -> user initiate rechecks -> user pause it before done -> user initiate recheck again (via menu ""force recheck"", not ""resume"") -> recheck done -> torrent in paused state in the latter case (imo) it shouldn't, it should display ""needs recheck"" and sits in paused state and wait for user decision/action. ps. i don't have a huge collection of torrents so i'm not familiar with this use case. for me it is confusing & inconsistent if the resume doesn't really mean starting the torrent (like what you will expect :play_button: on music players) and will depend on whether it needs rechecking. ps. to be clear, i don't mean to insist on my viewpoint and block any pr, i'm just expressing myself."
551043818,11354,glassez,2019-11-07T11:40:00Z,"so how about the following: 1. when user pause/resume torrent that is not started completely yet it applies to torrent initialization only, i.e. the torrent will be in the same state for which it is preparing. 2. when user pause and then resume already srarted torrent it will be resumed after all."
551056497,11354,thalieht,2019-11-07T12:19:19Z,i don't think i understand this (you're speaking in terms that describe `m_startupstate`).
551123720,11354,glassez,2019-11-07T15:18:38Z,"apply pause/resume action to ""checking"" process only when checking is triggered automatically (i.e. on startup checking). otherwise (i.e. on manual checking) apply pause/resume to entire torrent."
551142004,11354,thalieht,2019-11-07T15:57:54Z,fine by me.
551160912,11354,Chocobo1,2019-11-07T16:39:19Z,"when user pause/resume torrent that is not started completely yet it applies to torrent initialization only, i.e. the torrent will be in the same state for which it is preparing. when user pause and then resume already srarted torrent it will be resumed after all. i think it is not fully ideal but i can accept it for now."
551584485,11354,thalieht,2019-11-08T11:01:29Z,is this ok or i have to check for a specific `m_startupstate`? [code block]
551654645,11354,glassez,2019-11-08T11:50:16Z,", you need to apply suggestion from [a link] and then replace the following code in `pause()` [code block] with the following: [code block] unless i am missing something..."
551694280,11354,thalieht,2019-11-08T12:18:32Z,"thanks that works too, although weird to look at: ""if m_pausewhenready then dont pause when ready"""
551851813,11354,glassez,2019-11-08T14:37:17Z,"why weird? if ""pause when ready"" action was scheduled we cancel it (since we pause it explicitly and we don't want it to be paused automatically after we resume it)."
551853280,11354,glassez,2019-11-08T14:40:58Z,", why didn't you apply exact the same changes as i suggest in [a link]"
551859858,11354,thalieht,2019-11-08T14:57:53Z,i did what are you talking about? edit: oops the preprocessor indentation is wrong but i'll wait for your answer in case you mean something else.
551895749,11354,glassez,2019-11-08T16:28:58Z,"sorry, i mean exactly what i mean... but your code is different from my one."
551912489,11354,thalieht,2019-11-08T17:12:12Z,you don't mean that the following closing brace belongs to `if (m_pausewhenready) {` do you? of course you do... everything else is the same. i thought you just forgot a closing brace because of the indentation. [code block]
552051517,11354,Chocobo1,2019-11-09T01:28:28Z,thanks!
552063131,11354,glassez,2019-11-09T03:52:25Z,", thank you very much! :+1:"
552063191,11354,glassez,2019-11-09T03:53:39Z,4.1.x has the same issue so i think we should backport it.
552089750,11354,thalieht,2019-11-09T11:08:52Z,"thanks everyone. while testing the backport i accidentally discovered that we can't force recheck a checking torrent on startup that we paused. do you want me to do something in `torrenthandle::forcerecheck()` or just remove the following? or it doesn't matter and i should leave it alone? currently working on the backport, will make pr for master afterwards. [a link]"
552090735,11354,glassez,2019-11-09T11:21:45Z,", you should backport this changes as is. then we can elaborate on issue you meantioned. seems, yes. and add `m_startupstate == started` to `if (ispaused)` condition below."
552094336,11354,thalieht,2019-11-09T12:16:57Z,"i'm not gonna make a million prs for no reason, especially backports to a branch that will probably not see another release. i'll just make another commit for it and update pr description to mention the future pr to master. i''ll assume you meant `m_startupstate = started`"
552103010,11354,thalieht,2019-11-09T13:59:15Z,"i better mention that i tried `if (ispaused() && (m_startupstate == started))` in case you meant that, but it pauses the moment it starts checking the ""on startup checking torrent i paused"" that i force recheck."
552103667,11354,glassez,2019-11-09T14:05:44Z,"yes, but in reverse order. sorry, i cannot understand what do you mean."
552103832,11354,glassez,2019-11-09T14:07:38Z,backport pr that contains commits from several upstream prs is allowed.
552105334,11354,thalieht,2019-11-09T14:27:24Z,"cases 3 and 4 (rechecks on startup, both originally resumed and paused) instead of resuming the checking torrent that i paused, i force recheck. it goes to 0.0% and is paused immediately."
552208944,11354,thalieht,2019-11-10T16:11:16Z,#11472. i just removed the first line for now until there is an answer.
552211672,11354,glassez,2019-11-10T16:44:21Z,"well, i didn't think it through. it is necessary to begin with a questions ""for what it is needed?"" and ""what the user expects as a result?"". so please describe possible use cases."
552221970,11354,thalieht,2019-11-10T18:48:06Z,to be able to force recheck in legitimate cases which i mentioned above.
552223181,11354,glassez,2019-11-10T19:02:40Z,"what cases? you just meantioned that ""instead of resuming the checking torrent that i paused, i force recheck"". but what's the reason to do it? and what do you expect as a result? seems there are two possible ways: restart ""preparing"" process or skip ""preparing"" process (if you understand what i mean)."
552227873,11354,thalieht,2019-11-10T19:56:22Z,"honestly i wouldn't do it but apparently it's not unexpected [a link] a. select ""recheck torrent"" again, this action will go to step 1. b. select resume. this will recheck the torrent and then starts running, i.e. leaving paused state. once again no, i don't know what ""preparing"", ""starting"" entails but i expect it to continue rechecking (if possible, currently it starts from the beginning) or to restart checking, as it currently does."
554437940,11354,glassez,2019-11-15T16:48:15Z,"it has already been explained several times... well, i'll say it again. ""preparing"" is ""initial fastresume data/torrent checking"" and analyzing its result. but back to our question... some torrent can be started to become either paused or resumed (i.e. ""target"" state). you have paused its checking. what state it should reach after you perform force recheck on it? we have chosen ""target"" state in case you resume it. also be noted that when you recheck paused (started) torrent it becomes paused again. so what behavior should be used in case of recheck of ""preparing"" torrents? btw, user can perform ""recheck"" when checking is being performed."
554444365,11354,thalieht,2019-11-15T17:05:30Z,"its previous state, ""preparing"" torrents included in the answer."
554625132,11354,glassez,2019-11-16T10:34:51Z,so how it works in current #11472?
554628070,11354,thalieht,2019-11-16T11:22:05Z,pauses in all cases...[a link]
554633273,11354,glassez,2019-11-16T12:35:16Z,can you test the following? [code block]
554634706,11354,thalieht,2019-11-16T12:52:39Z,1. paused (initial resumed) 2. paused (initial paused) 3. resumed (initial resumed on startup) 4. paused (initial paused on startup)
554638946,11354,glassez,2019-11-16T13:47:52Z,it's really weird... nothing should have changed for this case.
554639605,11354,thalieht,2019-11-16T13:55:28Z,`ispaused()` is true so it gets to `m_nativehandle.stop_when_ready(true);`
554639815,11354,glassez,2019-11-16T13:58:09Z,then i don't understand first two cases...
554640004,11354,glassez,2019-11-16T14:00:12Z,and maybe other cases too. what do you mean?
554640414,11354,thalieht,2019-11-16T14:05:05Z,"never mind, i don't understand how 3rd case works with these changes so... better disregard my speculations."
554644963,11354,thalieht,2019-11-16T15:01:26Z,"ah i get it, it's because `m_pausewhenready = true` was moved so the following is reached and it overrides `m_nativehandle.stop_when_ready(true)` [a link] but that's not called when torrent is `started`."
554646784,11354,glassez,2019-11-16T15:23:54Z,", i still don't understand you. what case we're discussing?"
554647293,11354,thalieht,2019-11-16T15:30:34Z,1st and 3rd cases. why 1st doesn't work and 3rd works.
554651666,11354,glassez,2019-11-16T16:23:05Z,but what do you mean by the first case? you recheck resumed (i.e. non paused) torrent and it becomes paused after checking has done?
554656276,11354,thalieht,2019-11-16T17:17:07Z,yes. the 1st case is the only one that doesn't work the way we want i.e. to return to its prior state after the recheck.
554658181,11354,glassez,2019-11-16T17:39:30Z,"but it shouldn't be affected by my changes and it should work as previously. it is ""started"" and ""non paused"" so it is out of both ""if"" bodies (in previous code it is out of ""if"" body so nothing is changed). or am i wrong?"
554662736,11354,thalieht,2019-11-16T18:34:43Z,but it is paused in all cases when we issue the recheck. also in previous code i said that it gets paused in all cases after the recheck. wait.. i think there is a misunderstanding: in all cases we interrupt the checking by pause and then force recheck again. so in all cases the torrent is paused when we issue the second recheck.
554664120,11354,glassez,2019-11-16T18:53:26Z,"then what's difference between 1st and 2nd cases? anyway, when we recheck paused torrent it should keep paused after checking has done (it is current behavior). when we recheck ""preparing"" torrent it should become in those state for which it is preparing (we suggest this behavior)."
554669271,11354,thalieht,2019-11-16T20:00:25Z,"in that case your changes have the desired result. considering what we were talking about in this issue i thought we were talking about the same thing, but instead of resume as the final step we force recheck. anyway i'll make pr for master with these changes as there is no time left for 4.2 release."
675169263,13266,kasper93,2020-08-17T23:43:17Z,"this is rebased on #12173, two first commits are from there."
675292389,13266,glassez,2020-08-18T06:54:24Z,"add screenshots, please."
675454001,13266,kasper93,2020-08-18T12:40:31Z,![a link]
675464286,13266,ghost,2020-08-18T13:01:24Z,nice! finally we get to see error messages per endpoint as well as connection error messages!
680084396,13266,glassez,2020-08-25T15:08:41Z,"shouldn't you rename ""url"" column to ""url/local endpoint""?"
680302777,13266,kasper93,2020-08-25T22:34:51Z,"i changed it, but not sure i like it. maybe some more generic and simple like `name`, which would fit both?"
681368091,13266,glassez,2020-08-27T04:09:48Z,"imo, `name` fits none of them."
939418617,13266,kasper93,2021-10-10T06:55:32Z,rebased onto latest master
1133178536,13266,kasper93,2022-05-20T18:07:18Z,rebased on current master
1586188617,13266,luzpaz,2023-06-11T14:27:59Z,great work here. any idea on a merge eta ?
1605688450,13266,kasper93,2023-06-24T19:01:59Z,rebased onto latest master and removed the changes that were rejected in other prs
1683569985,13266,glassez,2023-08-18T08:40:09Z,superseded by #19468.
366522094,8427,glassez,2018-02-18T15:00:49Z,", unless i'm wrong, we can process only original data views in all cases until we require to save some of them or convert to another format (e.g. qstring)."
367327407,8427,Chocobo1,2018-02-21T13:35:48Z,timeout: [a link] pr updated.
367403731,8427,glassez,2018-02-21T17:25:12Z,", it's really hard to compare with the previous version, as diffs look just awful! i hope you had a good reason to completely rewrite that. i want to test this and look at some suspicious places in the debugger. however, i firmly believe that this should be divided into two commits, one for ""enable http persistence connection"" and the second one for the rest."
367417754,8427,Chocobo1,2018-02-21T18:09:45Z,"of course, better performance & security (if no bugs creeps in, even so, it's still better than the previous version imo). due to i've already mixed them together, it's hard to separate cleanly. i can push a version that the first commit do everything except ""http persistence connection"" and the second commit enables it."
367426494,8427,glassez,2018-02-21T18:37:52Z,"well, order isn't so important here."
367925077,8427,Chocobo1,2018-02-23T06:46:52Z,"ok, done."
369850819,8427,Chocobo1,2018-03-02T08:07:22Z,thanks for the reviews!
455149118,10175,FranciscoPombal,2019-01-17T12:05:06Z,i can imagine a lot of people are using let's encrypt for their certificates. wouldn't it make sense to include an option to auto-reload the certificate from disk every x days? this way people wouldn't have to reset the certificate every time it renews.
455174236,10175,Chocobo1,2019-01-17T13:37:00Z,perhaps... anyway it is out of scope of this pr.
455737810,10175,Piccirello,2019-01-19T01:42:23Z,"thanks for tackling this often-requested feature. i haven't had a chance to review the code yet, but this is going to be a support nightmare. nox users aren't going to have any idea why their setup broke after updating. what about writing out the contents of the existing cert + key to qbittorrent's config directory, on upgrade, so that it continues to work? or some other approach to make upgrading easier. it can be in a separate pr, but definitely before 4.2 is released."
455739760,10175,Chocobo1,2019-01-19T02:04:03Z,one of the reason why this is for 4.2.0 only is that we already break webui users with this change: [a link] so maybe it won't be much of an issue since webui users already need to reconfigure their setup?
455906441,10175,Piccirello,2019-01-20T21:59:03Z,"what will the process be for setting the password? will there be a prompt on first login, or does the user need to modify some config file? the reason i think this pr will be an issue is that the webui will be entirely broken, unless the user tries a different protocol."
455930836,10175,Chocobo1,2019-01-21T02:36:12Z,user will be required to login with default password and updates it.
456365705,10175,glassez,2019-01-22T11:24:53Z,"the user can do it remotely (via webui). however, this pr requires access to the server to update its configuration. maybe you should listen to and implement the update code? i don't think it's too complicated."
456387707,10175,Chocobo1,2019-01-22T12:49:09Z,"no, webui will fallback to un-encrypted http automatically, so it is still accessible. i would agree with you guys if this had nothing to do with security. a few concerns from my viewpoint: * certificate and private key are sensitive things, as for me i would not like them to be exported automatically to other files without my consent, the same even if we provide a log message, because not every user will look at it. * we just cleared all upgrade code in 4.2.0 to start fresh, now we want to reintroduce upgrade code so soon? my point is we already broke the webui (greatly), it doesn't matter more or less. i might be wrong but so far i'm not greatly convinced that we really need the upgrade code."
456390945,10175,glassez,2019-01-22T13:01:00Z,"i'm not insisting on ""upgrade"" code, i was just suggesting that we think about it again. personally, i am for us to clean our code from time to time from all unnecessary things, even if it leads to incompatible changes."
456391804,10175,glassez,2019-01-22T13:04:06Z,another way is to just keep using existing certs/keys if no new settings are set.
456392482,10175,glassez,2019-01-22T13:06:24Z,offtopic: could we turn lgtm off until it's fixed? it's really annoying!
457321839,10175,Piccirello,2019-01-24T19:18:49Z,"that’s not necessarily true. a user may have a reverse proxy configured and not expose qbittorrent directly, which i believe is a common use case based on issues created on this repo. in that case the protocol will have been hard coded and will now be incorrect. the difficulty comes in that changing the protocol won’t be an obvious thing to check when qbittorrent suddenly “stops working”. i think this point is moot because we already save the user’s cert and key on the file system. we would just be moving it to a separate file in the same location. users generally aren’t concerning themselves with how qbittorrent stores its config files. if this approach is doable i think it would be a good compromise to avoid upgrade code. my hesitation stems from qbittorrent not just making a major config change, but from users not having any idea of the change that’s going to occur. if we had a means of telling the user, this would be a non-issue."
457446408,10175,Chocobo1,2019-01-25T03:50:23Z,"from what i see, most of the case is `qbt <--http--> proxy <--https--> web` so it is not affected by this pr. i would prefer it too. please don't get me wrong, i not stopping anyone from adding the migration code (after this pr), i'm just not motivated. we can make a post at [a link] there is one such example, the title: tuesday march 7th 2017 - notice to tracker operators: user agent change if we post it now would it be sufficient?"
457448482,10175,glassez,2019-01-25T04:05:00Z,"i think the final decision is . the point was not ""to start fresh"" but ""to remove old upgrade code"", imo. i think it isn't a problem to maintain upgrade from directly previous version. but as i said before it isn't problem for me if we introduce some incompatible changes at this point (of course we should mention it in release notes)."
457568573,10175,sledgehammer999,2019-01-25T13:13:00Z,this ^ i am bit rusty with the webui part. can someone explain in few words what is this change aka old vs new?
457590163,10175,Chocobo1,2019-01-25T14:30:38Z,"previously the certificate & key were imported to qbt config, now we don't do that, instead we let user to specify the path to certificate & key. this will break webui users who have https setup, without upgrade code users will need to login via http and update the path to the certificate & key to re-enable https."
457955045,10175,sledgehammer999,2019-01-27T21:16:35Z,"imo, we should have migration code, that exports the keys into files in the same dir that current settings are saved. the keys are already accessible to anyone having access to that part of the filesystem anyway. it's bad to suddenly degrade the connection security when the user has explicitly configured https and expects it work. or another measure: detect if the old keys aren't empty and news keys are empty ->refuse login until the user reconfigures https (or drops it)"
458039708,10175,Chocobo1,2019-01-28T08:38:39Z,"pr updated, added migration code in a new commit and `m_ui->textwebuihttpscert->setfilenamefilter` helpers."
459564955,10175,Piccirello,2019-02-01T00:53:27Z,"the upgrade code worked great for me. one note: the cert and key are created with perms of 644. ideally, the key would use 600 so that it's not readable by anyone other than the owner (none of the config files should be). can someone think of a reason why this wouldn't be feasible?"
459611210,10175,Chocobo1,2019-02-01T05:31:32Z,"instead of changing every file, perhaps change the folder (~/.config/qbittorrent) to 700 would be sufficient? since this issue has a bigger scope than this pr, let's do it in another pr."
473670043,10384,sledgehammer999,2019-03-17T14:18:42Z,most comments are addressed. (will rebase later on latest master)
473691999,10384,sledgehammer999,2019-03-17T18:23:15Z,"pr updated again. **guys an honest question:** in recent diffs i have seen this usage: [code block] i suppose this is done for performance reasons to not copy the temporary object, right? is there a rule when to prefer this practice? is it preferred for objects bigger than the size of a pointer? is this to be followed strictly or to our own discretion? because i have mixed usages in this pr."
473878334,10384,Chocobo1,2019-03-18T11:49:15Z,"i think it is only used when `somefunctionthatreturnsavariable()` returns a const reference, otherwise `localvar` should be a normal variable."
473880890,10384,Chocobo1,2019-03-18T11:58:20Z,"i noticed there is this empty file: src/gui/log/logmessage.cpp, i think you can remove it instead."
473922727,10384,sledgehammer999,2019-03-18T14:03:38Z,"yes, you're correct. i did a regex search in the codebase and the only cases were what you described. also 2 cases where it initializes from a pointer if i can decipher it correctly. 1. misc.cpp:236 [code block] 2. reverseresolution.cpp:58 [code block] in any case, i'll stop using const ref to initialize local variables. that was a mistake. i'll correct it."
476148406,10384,glassez,2019-03-25T11:02:40Z,i would also implement it in a way to avoid duplication of logger data (aka log messages) in the model. but this will require some (minor) modification of the logger.
476164885,10384,sledgehammer999,2019-03-25T11:55:40Z,"about the model/view issue: if i understand correctly you want the model to interact with logger and not the widgets up the hierarchy, right? so basically the model a) gets the accumulated messages on start and b)listens/reacts to new messages, right? this would be probably good too. i have a minor idea on how to achieve this, (if my above assumption about model/view is correct)."
476165564,10384,glassez,2019-03-25T11:57:58Z,yes.
476168934,10384,sledgehammer999,2019-03-25T12:09:44Z,"i just re-thought my idea about this: it wouldn't work. basically i have zero ideas about this. do you have anything specific? how will the data be shared between the two? maybe the model holds the msg ids and dynamically queries logger for msg data when required by the view? but again, the qreadlocker would introduce lag."
476229464,10384,glassez,2019-03-25T14:47:24Z,"at first glance, all you need is the ability to get a message by its index. some time ago i wanted to get rid of all qreadlockers (and forbid using basic app components from service threads directly), but you all proved to me the failure of my improvement due to the fact that qreadlocker does not reduce performance too much. anyway we can measure it."
480577407,10384,sledgehammer999,2019-04-07T10:20:18Z,i have pushed 2 commits. the 1st one moves all data gathering into the models. the 2nd one doesn't cache the data (apart from the msg index) and directly queries them from the logger when needed. i don't know if any of them satisfies the goal of the pr: faster than current implementation at handling big logs ps: the 2nd commit will be squashed into the 1st one if it is deemed satisfactory.
615023067,10384,Chocobo1,2020-04-17T03:44:44Z,superseded by pr #12458. closing.
1476532823,18735,rmartin16,2023-03-20T16:13:30Z,"i support this change. however (and this may be unavoidable), this change blocks local connections for me when qbittorrent is running in a docker container. i can work around by exposing the host network to the docker container....and that (ofc) comes with its own implications. fyi if nothing else since i exclusively use qbittorrent in docker for personal and development purposes; i imagine this also may impact existing qbittorrent images and installation guides."
1476718617,18735,glassez,2023-03-20T18:14:44Z,"it's not a problem to change the username this way, but it's not that easy for a password. and i think access only from the localhost may be too strict a requirement, because it seems impossible or quite difficult for things like docker, which is often used to run qbittorrent-nox."
1477031216,18735,sledgehammer999,2023-03-20T22:32:36Z,can users pass cmd arguments when starting the docker container? (i am a docker noob). i have introduced 2 cmd parameters that allow the user to change the webui credentials.
1478164776,18735,sledgehammer999,2023-03-21T16:23:04Z,"if not, then i would also move username/password processing to application class next to the webui port processing. #### my rationale for the above and for the naming scheme it depends on the semantics you want to give. these cmd switches make persistent edits to the config file. they aren't meant to be seen as temporary overrides of the config. so i want to consider them as another mode of operation. aka `edit config` vs `normal mode`. i don't feel strongly about that. if you insist i'll make the necessary changes."
1478295585,18735,glassez,2023-03-21T17:18:07Z,"this is a good idea in itself, imo (something similar has occurred to me). but it contradicts the current semantics, so i object to it. such different ""modes of operation"" could be introduced in one of major update."
1478418339,18735,sledgehammer999,2023-03-21T18:47:49Z,οκ. i'll push the requested changes later.
1478492780,18735,Chocobo1,2023-03-21T19:50:46Z,"other than the 'semantics', passing sensitive information via commandline parameters (especially to a long-time running program) is a very bad idea. for example, in a multi-user machine, someone (one with enough privileges and not necessarily the root) could easily see all your commandline parameters in clear text. and also the sensitive information is in clear text in memory (in argv list) *for a long time* which is also a bad practice. imo using `edit config` mode changing the user/password make sense and is a lot better than `normal mode`. i.e. throw away the sensitive data the sooner the better."
1478715619,18735,sledgehammer999,2023-03-21T23:15:36Z,"in that threat model, such privileged users already own you because they can easily either edit your config file or monitor your traffic. am i wrong? however, your comment reminded me of another possible leak: bash history files. they record each command you give via the terminal. this would require a totally different approach for configuring the password. eg having qbt to wait for user input in the terminal. personally i cannot code this in a reasonable timeframe."
1478741136,18735,sledgehammer999,2023-03-21T23:58:15Z,"after doing a bit of research, it seems you don't need [a link] to achieve this. so it is valid threat concern."
1478928689,18735,glassez,2023-03-22T05:14:47Z,so i think you shouldn't provide it in this pr.
1479016433,18735,sledgehammer999,2023-03-22T07:04:54Z,what do you mean? should i drop the cmd arguments commit?
1479219768,18735,glassez,2023-03-22T09:41:36Z,"yes. doesn't it look like you're covering up one vulnerability with another? of course, cli is intended not only to be used from a shell like bash, which will save passed parameters in its history file, and an informed user will not use it in this way. but an informed user will also not open access from the outside without changing the default password..."
1479381350,18735,glassez,2023-03-22T11:19:35Z,"maybe instead add command line parameter to set ""trusted host"" from which alongside with localhost) a login using default credentials is accepted?"
1480015688,18735,sledgehammer999,2023-03-22T17:53:18Z,"i asked because your comment was vague for me. i wasn't sure what you were suggesting to do. i have removed the commits about cmd arguments. altered a string in the first commit and made a constant out of the default password (new commit). this would require a bit of work than i can't do now. in any case, i would prefer devoting the extra time in implementing([a link]"
1480021438,18735,sledgehammer999,2023-03-22T17:57:55Z,"### solution for manually editing the config file for the credentials simply change the **username** to something other than ""admin"" and it will let you login remotely with the new username and the old (default) password. **after doing that**: immediately log into qbittorrent and change your password too. ps: the username is saved under the key `preferences/webui/username` (sorry for the caps)"
1480033856,18735,glassez,2023-03-22T18:06:34Z,"well, looks like acceptable compromise."
1480037369,18735,glassez,2023-03-22T18:09:14Z,"is this the right solution for docker users? (sorry, i'm not too good at this.)"
1480091000,18735,Chocobo1,2023-03-22T18:49:09Z,"no. users run qbt-nox on headless machine so there won't be console unless they really work for it and sometimes it is just impossible. one solution i can think of is to present the webui users a ""change password"" dialog after loading the private/index.html. that is, it will immediately check whether the username/password is still the default and if it is jump out a ""change password"" dialog. as how to check whether username/password is still default, it could be a new web api endpoint or just reuse some existing one. this solution mostly affect/protect users whom are using the official webui and thus we should also advocate 3rd party webui implementations to do the same by mentioning it on the news section of our website. also this issue has been there for a long time and of course it should be solved eventually but imo it is not that urgent we need it in the upcoming 4.5.3 release."
1480380567,18735,sledgehammer999,2023-03-22T23:25:26Z,"this solution mostly affect/protect users whom are using the official webui and thus we should also advocate 3rd party webui implementations to do the same by mentioning it on the news section of our website. this sounds like a lot of intervention in the various code places to accommodate this behavior. imo, we should strive for the simplest possible solution (code-wise). i am just throwing ideas here. i would like this pr to be approved/merged as-is. my new idea for discussion: have an explicit cmd arg `--allow-remote-login-with-default-credentials`."
1480570177,18735,Fijxu,2023-03-23T04:02:21Z,"good change, i remember some day to enter in a empty qbittorrent web server from the internet and i leaved a note with a torrent saying to the owner something like ""change the default password or something"" i still don't understand why people don't protect their things on the internet. someday people like me will find out a service with default credentials. it's not ultra secret"
1480587518,18735,glassez,2023-03-23T04:29:45Z,"i would not call it a convenient or reliable solution. i think that, after all, the key aspect of solving the problem is the restriction on access from external addresses, otherwise there is a greater chance that the attacker will be the first to log in using the default credentials. the same applies to `--allow-remote-login-with-default-credentials`. the only problem is cases like using docker, when the user cannot log in from the localhost. that's why i suggested providing an opportunity to set a ""trusted host"" via command line parameter."
1480635660,18735,Chocobo1,2023-03-23T05:47:18Z,"sadly, this change alone would block remote users from logging in new docker installations. reasons already stated in previous posts. the commit is good but on a whole *it will need more before an official release*. compared to messing with comandline parameters (which is unexpected and cumbersome for docker users, they just want to deploy and login/use it), it is convenient. note that *not* all docker users are power users, some of them might just use a mouse to install qbt docker image from some management interface. also i suspect nox users (not just docker users) would just abuse that commandline param and still uses the default credentials."
1480663122,18735,Chocobo1,2023-03-23T06:27:13Z,i reckon it would be best that we have more mechanisms applied (as long as they don't step on each other) since each of them has a different goal. and sole relying on just one won't be enough. 1\. deny remote user login with default credentials for users with local accessibility. 2a. --allow-remote-login-with-default-credential an escape hatch for users without local accessibility. 2b. trusted host command line parameter similar to `--allow-remote-login-with-default-credential` but safer(?) yet more cumbersome to configure for some users. 3\. webui change password dialog to remind webui users to change credentials.
1481260012,18735,glassez,2023-03-23T14:05:37Z,":thumbs_up: , i believe this is not a critical vulnerability to rush to fix it as soon as possible. there is a big chance that we will hurt more users than we will help if we don't think about it thoroughly. i would strongly recommend taking your time with it."
1482291329,18735,glassez,2023-03-24T05:52:51Z,"does a typical docker image deployment scenario provide an initial configuration option, such as a configuration file template? or maybe there is some initial configuration file preinstalled in the docker image itself?"
1483848858,18735,sledgehammer999,2023-03-25T15:17:07Z,please take a look at pr #18763. it is an alternative approach.
1483861384,18735,glassez,2023-03-25T16:18:13Z,"why am i asking this? i think that since docker images provides some kind of pre-installed environments, then most likely it can also include a pre-installed qbittorrent configuration file. thus instead of the command line parameter suggested by or me, we could simply provide such a configuration option, so that docker image producers could include it in the pre-installed qbittorrent configuration file. i think this will be enough to start."
1483881638,18735,sledgehammer999,2023-03-25T17:49:10Z,"(docker noob here) it can be configured to look for the config file: [a link] the hard part is manufacturing a valid password value. we use pbkdf2, with a given settings (iterations, hash algo), to produce and save the password(as salted hash). it's possible to generate it via cmd commands probably, but kinda hard to find out all the necessary info."
1483883634,18735,sledgehammer999,2023-03-25T17:58:44Z,"on second reading, you probably meant something else. how do you imagine this would work? what would the docker image producer provide as part of configuration?"
1483885339,18735,glassez,2023-03-25T18:06:24Z,:thumbs_up: `allowremoteloginwithdefaultcredential` option set to `true`. or `trustedhostaddress` in case user side address can be known in advance.
1483890193,18735,sledgehammer999,2023-03-25T18:21:43Z,what's different than the docker image simply having qbittorrent always launched with `--allow-remote-login-with-default-credential`?
1483891708,18735,glassez,2023-03-25T18:29:36Z,"none. we must use the method that will be possible to apply at the stage of creating a docker image. edit: perhaps i was just confused by the remark that the console is unavailable (or hardly available) to docker users. but after all, it is not necessary to set command line parameters at all. they can just be pre-configured as part of startup script."
1483900761,18735,sledgehammer999,2023-03-25T19:15:27Z,"afaik users run docker images from cmd like this: [code block] and they can pass arguments like this: [code block] however, according to users can also manage/run images entirely through gui without touching the cmd. these users will have difficulty running with cmd arguments."
1483902520,18735,glassez,2023-03-25T19:23:12Z,"but there still has to be some kind of startup script that runs the necessary programs when you run docker image, for example, qbittorrent, right? then it can pass parameters to executable if they are provided within that startup script."
1483907534,18735,sledgehammer999,2023-03-25T19:47:52Z,"yes, usually the script is called [a link]. but, embedding the cmd argument into the script it will result in **always** calling qbittorrent with that argument. doesn't that defeat the purpose of this pr?"
1483909664,18735,glassez,2023-03-25T19:57:40Z,"yes. i do not yet see the possibility of a more or less reliable solution if local access to qbittorrent is impossible. so i interpret this as just an opportunity to disable the suggested restrictions for such cases. in addition, the problem being solved is less relevant for such isolated environments as docker containers, isn't it?"
1483911897,18735,glassez,2023-03-25T20:09:20Z,hmm... now i've found the following sentence in qbittorrent docker page: i'm confused. is it always true or the network configuration is still part of docker/image config?
1483924802,18735,sledgehammer999,2023-03-25T21:19:40Z,"that's why i opted for requiring the user to explicitly bypass the restriction via cmd args. the bypass is supposed to be temporary and explicit, hence the cmd arg. docker user can do that easily, unless he doesn't know how to do terminal stuff at all. personally, i don't find that latter part a blocking concern. also, as i personally interpret the situation, i don't see any other concern/objection to the explicit cmd arg option. maybe i have missed something. i don't know. edit: i mean restrict to local + have a `--allow-remote-login-with-default-credential` bypass."
1484023594,18735,Chocobo1,2023-03-26T07:55:06Z,"not only that. what if in the future the password encryption was changed? thus having a second implementation of generating the password is a huge technical debt. that script is embedded in the final docker image and therefore users cannot change it without rebuilding the whole image. it is `docker-compose.yml` and `.env` for users to customize. indeed, i intend to always include that cmd parameter to docker images once it is ready. note that we still need to remind users to change credentials ~~which i think #18763 should cover it (if it had the webui parts and if i'm not mistaken)~~. it should be revised, i'll update it. ps. i don't have enough time to catch up the developments so i'll reply in bulk when i'm available."
1484026802,18735,sledgehammer999,2023-03-26T08:09:13Z,"uhm, current implementation of the pr informs the user of the problem and the solution upon logging in."
1491918615,18735,bakerboy448,2023-03-31T13:21:33Z,why not provide an upstreams setting so users can add their own ip range.... as `localhost` and `127.0.0.1` is not going to work out well (i.e. docker) alternatively - allow private ip / lan ranges having to mess around with cli is just asking for problems
1509846404,18735,xavier2k6,2023-04-15T14:04:58Z,it may also be advisable to look at **increasing password length requirement** from **6 characters** to **8+**
1734262768,18735,zotabee,2023-09-25T18:30:18Z,any news?
1759224886,18735,luzpaz,2023-10-12T09:07:51Z,time to nip this in the bud ?
1771411058,18735,sledgehammer999,2023-10-19T17:20:21Z,closes #19738
1771686883,18735,sledgehammer999,2023-10-19T20:50:09Z,"i have rethought this and i propose a different approach 1. upon login the server will check if default credentials are used. 2. if yes, it will allow api access only to the ""change credentials"" api(plus logout/login). every other api request will be denied. 3. our webui will recognize this and redirect to a page for changing the credentials. 4. step 2 will happen regardless of the network from which the connection comes from. 5. (optional) maybe consider full access on default credentials if it comes from localhost. this implements the procedure of ""enforce a credential change upon first start of the device"". it is based on the assumption that the timeframe between program installation and first-time user interaction won't be long enough to get hijacked by an attacker. even if it is hijacked, the user will notice it immediately because the attacker will have to change the credentials and the user won't know the new credentials and won't be able to access the ui. this shouldn't interfere with docker users either. am i wrong?"
1772125946,18735,glassez,2023-10-20T05:53:45Z,"that's the problem. why do we put docker at the forefront at all? this is only a special case (besides, the least sensitive), and we should eliminate the problem as a whole. what is the problem? this is the ""default credentials"". so let's just get rid of them and force the user to set them themselves before he can use the webui/api. there should be no difficulty with this in any ""regular"" use case. as for the docker, we will leave the care of its specifics to it. if it is really problematic for the docker user to adjust the qbittorrent configuration before running the container, then let them be set during the creation of the image itself (by image creator). yes, it will still be ""default credentials"", although per docker image (which as said above is less sensitive to this problem)."
1772151341,18735,sledgehammer999,2023-10-20T06:19:57Z,that's very easy to implement and enforce on the gui version. we simply refuse to close the preferences window `if (enable.webui && !(credentials set))`. but how do we achieve that in the headless version? (if we get rid of credentials)
1772199264,18735,Chocobo1,2023-10-20T07:07:15Z,"i had an alternative idea: just generate a 6 (or 10) digit number random password at the very first launch of qbt. in gui version, webui is by default off and when user turns it on (selected the webui checkbox), we will force the user to enter a new password via some ui widget property. i suspect we don't even need to show the random password. in nox version. we will print the password to console and let user read it themselves."
1772220546,18735,glassez,2023-10-20T07:25:46Z,this is not an alternative idea. it basically coincides with my intention. :thumbs_up: :thumbs_up: random password is meaningless in gui mode. just don't allow to enable webui w/o custom password is set. :thumbs_up: like we do currently for default credentials.
1772224620,18735,sledgehammer999,2023-10-20T07:29:07Z,does this have any security implications that we should consider?
1772270147,18735,glassez,2023-10-20T08:03:51Z,we won't be able to do anything if someone else (or malware) has access to the user's computer to read generated credentials. this is beyond our responsibility.
1772515794,18735,Chocobo1,2023-10-20T10:48:27Z,the password is limited to the specific user and is local to the machine so i think it is pretty safe.
1772568202,18735,sledgehammer999,2023-10-20T11:29:33Z,generally i agree but see below. this will downgrade the current security offered to the user. now we don't store the password itself but a salted hash of it. printing to console requires having access to the plaintext password.
1772584536,18735,glassez,2023-10-20T11:43:13Z,"it is supposed to be printed once generated, i.e. once qbittorrent is started w/o stored password. then it is stored as usual and never be accessed as plain text. if the user did not remember it at the first launch, then he will have to reset it in the usual way, as it was previously available, i.e. clearing the saved password hash."
1772595202,18735,Chocobo1,2023-10-20T11:52:26Z,perhaps the password can be generated every time if the user haven't updated it.
1772665114,18735,sledgehammer999,2023-10-20T12:37:27Z,"it is probably easy to miss it in the first launch. and hard to debug afterwards (lots of ""hey what's the default password"" questions). sounds good. however, qbt will need to track this. i am not rejecting the above but where do we stand on the following? provide a cmd arg for the nox version for configurin credentials (eg `--configure-web-credentials`). it will enter interactive mode asking the user to input username and password. then write them to settings and exit."
1772680218,18735,glassez,2023-10-20T12:48:03Z,"it's not a problem, imo. just don't store generated password so it is always empty at start unless user set custom one and it is stored."
1772711677,18735,Chocobo1,2023-10-20T13:09:21Z,"there should be a field (maybe `webuipasswordupdated`) that records whether user has updated the password. if the field is non-existent/empty/`false` (or the webui hash is still the default `adminadmin`) then a random password is generated at launch and updates the webui password/hash and prints clear text password to screen. otherwise do nothing and start qbt normally. once the user updates the password, this field is marked `true` (or something else, i haven't consider it thoroughly). but won't you need more code to handle it at webui authentication? i suppose update the webui hash would be easier. i don't consider it necessary but i don't object it either. imo it can be done later (not a high priority) if anyone is interested."
1772995751,18735,glassez,2023-10-20T15:55:54Z,"i believe it is better to avoid adding such an additional/temporary entry to the config file, if we can do with a variable."
1773056531,18735,glassez,2023-10-20T16:38:49Z,"the main thing now is to decide about the basic concept, and the implementation details are just details."
1773269212,18735,sledgehammer999,2023-10-20T19:11:31Z,"let me summarize. i think there is consensus for the following: 1. fresh install equals empty credentials. old default credentials are treated as empty too. 2. gui: on empty webui credentials the gui will enforce the configuration of credentials before accepting the configuration setting ""enable webui"" 3. nox: on empty webui credentials, it will create ephemeral(per session) credentials that will be output on the console/log. that being said, i think 's proposition of tracking the ""empty"" state via a variable is doable."
1773379930,18735,xavier2k6,2023-10-20T20:53:11Z,"please take [a link] in to account too. currently, the default password of `adminadmin` = 10 characters, yet we allow to lower that `default` by only requiring `6`"
1773653055,18735,glassez,2023-10-21T04:13:50Z,"i suppose there may be problems with this in some cases. there is no problem if webui is disabled. we need to think about how to behave if webui is enabled, but uses legacy default credentials. also we need to reject ""adminadmin"" from being set as password."
1773672716,18735,Chocobo1,2023-10-21T05:11:42Z,why not detect if the password hash is still equal to `adminadmin` (the previous default hash value) and require a new password if it is. i don't think we need to always reject it since the new default password is randomly generated. we only need to reject it when the user hasn't change it when upgrading from an older qbt version.
1773684880,18735,glassez,2023-10-21T05:54:42Z,"i'm not worried about how to detect this (it's not a problem), but about how to ""require a new password"" in a non-confusing way. in gui, we could just show a dialog stating that the existing credentials are no longer valid. but what about no-gui case? to a greater extent, i worry about systems running in non-interactive mode."
1773691776,18735,glassez,2023-10-21T06:26:35Z,"what does a randomly generated password have to do with it? i mean that ""adminadmin"" is well-known default password that is most likely to be affected by attakers. so i suggest to forbid it at all (i.e. disallow user to set such a password like any other invalid one)."
1773693332,18735,glassez,2023-10-21T06:35:03Z,"of course we will have to post a warning on the site that the default credentials are no longer valid. given the severity of the solved problem, the possible transitional difficulties of users can be considered as negligible."
1773698227,18735,Chocobo1,2023-10-21T06:58:52Z,"i presume users would have to check the logs. in fact they do it often when qbt service is not up. afaik some service manager will redirect stderr/stdout to their own log. i don't insist but i don't favor disallowing ""adminadmin"" as a password if some dumb user really wants it to be (or they could have their reasons). i don't like being a nanny for users. also note that another reason i dislike complicating setting/getting passwords is because potential [a link] that might creep in..."
1773703618,18735,glassez,2023-10-21T07:20:58Z,"reasonable enough, imo."
1773742726,18735,sledgehammer999,2023-10-21T10:13:41Z,"i am in favor of disabling ""adminadmin"" for existing users. this is a security fix and a breakage of sorts is warranted. also it is most likely a mistake for the user to have webui enabled and default credentials. otherwise we will complicate things on our side unnecessarily. on the webui front we can leverage the response to `/api/v2/auth/login`. now it responds with `200` and a string reading `fails` when credentials are wrong. we could return a detailed string about the ephemeral credentials and make the webui display that."
1773743132,18735,sledgehammer999,2023-10-21T10:15:31Z,"in fact, i'll put a similar warning to the news page now that i'll make the 4.6.0 release. ""dont use default credentials for the webui. they will be disabled in a following release""."
1777573797,18735,staze,2023-10-24T16:13:44Z,"i think this idea has been altered, but wanted to say, i think the issue with this is users may not know what enabling web gui does, so they may enable and never go change it. allowing change credentials via the api, or web interface, when the default password is still set would let an attacker change the password using the default. =/"
1780438835,18735,glassez,2023-10-26T05:27:48Z,superseded by #19777.
84645098,2757,pmzqla,2015-03-22T16:19:50Z,"for the translations you need to use `lupdate`, but usually sledgehammer takes care of it and updates everything. i can see in your screenschot that the speed is displayed differently from the rest of the application. you could use `misc::friendlyunit(qreal val, bool is_speed)`, or use `tr(kib/s)`."
84649635,2757,onto,2015-03-22T16:34:02Z,fix it.
85078363,2757,sledgehammer999,2015-03-23T16:29:10Z,"don't worry about the translations. i'll generate them when i merge your code. the only thing i want to say is based on the screenshot: i think you need to draw gridlines too, otherwise the graph seems useless imo. about the code: currently i am trying to finish up v3.2.0, so i can't review it at the moment. if it works, then at most my review will concern only bad code design(if any)."
85116509,2757,onto,2015-03-23T17:34:18Z,"thanks for response. i was think about gridlines, will add them."
85608090,2757,onto,2015-03-24T17:25:19Z,better? ![a link]
85692900,2757,sledgehammer999,2015-03-24T21:13:24Z,yes!
86149932,2757,onto,2015-03-25T17:59:35Z,added.
86555111,2757,ngosang,2015-03-26T15:01:07Z,"i love it. just two comments: 1) the drop down box always show ""total uploaded"" even when you don't have selected that checkbox. ![a link] 2) the legend is behind the graph lines. ![a link] ![a link] in other clients it's in front of (it's just an example, i don't like the white background) ![a link]"
86651218,2757,onto,2015-03-26T18:09:42Z,i try to add transparent background to legend: 50%: ![a link] 75%: ![a link] which is better?
86653650,2757,ngosang,2015-03-26T18:15:03Z,50% for me. can you try to make the lines of the grid thinner?
86669279,2757,onto,2015-03-26T18:54:24Z,paint gridlines without antialiasing: ![a link]
86676808,2757,ngosang,2015-03-26T19:15:49Z,looks perfect to me. what about?
86678071,2757,onto,2015-03-26T19:19:03Z,i will try to fix it asap.
87423136,2757,onto,2015-03-29T14:52:48Z,"i change combobox to button with menu, looks better at my opinion: ![a link]"
87429032,2757,ngosang,2015-03-29T15:41:49Z,can you rebase?
87437183,2757,onto,2015-03-29T16:33:27Z,rebased
87438827,2757,sledgehammer999,2015-03-29T16:40:55Z,you should squash/fixup similar commits into one. or commits that fix a problem in a previous commit of **yours**. note: you can still have multiple commits thematically arranged. note: `git rebase -i ` is your friend(and then `git push --force`). if you need instructions i'll gladly tell you.
87442733,2757,ngosang,2015-03-29T16:51:35Z,":+1: for me it's ready to merge. just one detail. i deleted qbittorrent.conf to test how it looks in a fresh install and by default all graphs are displayed. i think it's better to show only ""total download"" and ""total upload""."
87450473,2757,onto,2015-03-29T17:57:31Z,"may be commits need to ""squash"" into one commit (or two)? because all of them (exclude last) are fixes (and code rewriting) of previous commits."
87452144,2757,sledgehammer999,2015-03-29T18:13:25Z,"if they fix only one commit then squash them together(or probably use 'fixup'). otherwise, squash relevant commits together."
87452293,2757,sledgehammer999,2015-03-29T18:14:10Z,if i confused you: commits that fix a certain commit should be squashed into the same commit.
87455085,2757,onto,2015-03-29T18:51:39Z,i hope i understood you correctly
87462079,2757,sledgehammer999,2015-03-29T19:45:58Z,now that i see the remaining comits: merge them into one.
87736700,2757,onto,2015-03-30T16:06:31Z,"travis ci failed due to network errors, but it buildable."
87740869,2757,sledgehammer999,2015-03-30T16:21:10Z,"yes. don't worry. github is under ddos for a week now :( anyway, i might be able to squeeze this in for v3.2.0 instead."
108960607,2757,Chocobo1,2015-06-04T16:36:42Z,":+1: for this. btw, it would be best if the text strings can be capitalized, e.g. `total upload -> total upload` in both menu item and graph, and the `select graphs` button."
108989917,2757,onto,2015-06-04T17:48:48Z,two variants: ![a link] ![a link] at my opinion second looks better.
108994251,2757,Chocobo1,2015-06-04T18:06:02Z,"mmmm... i guess the second is a bit better, but imo the button still should be `select graphs`."
109006537,2757,onto,2015-06-04T18:51:13Z,![a link]
109150384,2757,Chocobo1,2015-06-05T03:09:17Z,:100:
109391433,2757,sledgehammer999,2015-06-05T18:37:02Z,sorry that i am late to the party. i prefer the first version. it is decided to have every word capitalized in menus/options.
111456148,2757,onto,2015-06-12T11:16:31Z,"do you mean `total upload`, `total download`, ... and `select graphs`?"
111458138,2757,ngosang,2015-06-12T11:26:22Z,"he mean this with also **select graphs** ![a link] one more thing, i don't know if you readed #3134. you need to rebase this pr to make it mergeable in master branch but you can keep this pr for the v3.2.x branch so your changes will be in the next release. take a look at open prs to see what i mean."
111476989,2757,onto,2015-06-12T12:33:25Z,i rebase commit with current master.
113799497,2757,sledgehammer999,2015-06-20T18:19:40Z,are you working on this? i would like to include it in v3.3.0 if possible.
113799607,2757,sledgehammer999,2015-06-20T18:20:12Z,"if you have any questions on how to do things based on our comments, just ask here."
113907334,2757,onto,2015-06-21T14:19:22Z,"yes, i'll fix your suggestions asap."
114636640,2757,onto,2015-06-23T20:45:33Z,i do some changes regarding [a link] and [a link] check it. p.s. i don't find a way to forward declare template classes.
116300861,2757,ngosang,2015-06-28T17:18:41Z,he needs some help.
118537212,2757,fingershop,2015-07-04T17:50:24Z,"can't wait to have this graph in qb! please consider allowing the graph legend to be turned off, for a nice clean look. the legend is helpful at first, but after a day or two you know what the graph means, and the legend is no longer needed."
120767676,2757,sledgehammer999,2015-07-12T22:04:26Z,"what is your status? are you waiting for me to help you(or comment) somewhere? i cannot see where you need help. btw, for `speedplotview.cpp`, `speedplotview.h`, `speedwidget.cpp`, and `speedwidget.h` put a license notice at the top of file. take a look at the one for `src/core/bittorrent/infohash.h` (don't forget to put your name(or nickname) and email instead)"
120985325,2757,nucluster,2015-07-13T16:22:09Z,hi! how i can get compiled exe-file for windows with this speed widget? it's very needfull thing for me!
122073448,2757,onto,2015-07-16T20:08:24Z,"i add license notice, are sources ready to merge?"
122097512,2757,sledgehammer999,2015-07-16T21:10:08Z,thanks. i'll review it tomorrow and if i don't find anything wrong i'll merge it.
122137084,2757,sledgehammer999,2015-07-17T00:33:03Z,"i did a test compilation on windows with msvc2013. there is an error in `speedwidget::update()` due to the sleep() you use. i change it to use our sleep function `utils::misc::msleep(1000);` can you do the same? my question is why do you sleep there? btw, how is `speedwidget::update()` run again? @ everyone this speedwidget shows info session wide. however the bottom is reserved for buttons that show info per torrent. do you have any suggestion on how to solve this discrepancy?"
122176034,2757,Chocobo1,2015-07-17T04:57:41Z,"how about adding a extending-spacer between `content` & `speed`, this will make `speed` looks like right-aligned thus implying a difference. and maybe the `speed` can be renamed to `graphs`."
122179570,2757,onto,2015-07-17T05:33:27Z,can make like this: ![a link] but in utorrent no difference between session tabs and torrent tabs ![a link] what do you think?
122185541,2757,glassez,2015-07-17T05:59:49Z,"qbittorrent is not utorrent! imo, difference between session tabs and torrent tabs should be."
122212272,2757,ngosang,2015-07-17T08:12:46Z,"if we put the speed tab at top, with the log, the user can't see the transfer list and the graph at the same time. this looks good to me: ![a link]"
122219771,2757,sledgehammer999,2015-07-17T08:48:10Z,"i was thinking the same guys, but i was curious if there was another good solution. proceed with putting the button to the far right. can you answer my other questions too?"
122252535,2757,sledgehammer999,2015-07-17T11:38:25Z,"nevermind, i realized how `speedwidget::update()` is run multiple times. you have a (almost infinite)loop in there that's why you need to sleep between calls. proceed with the above change. do you think it is bad to sleep there?(it is a background thread anyway)."
122331748,2757,onto,2015-07-17T16:20:36Z,"absolutely agree, refer only for example. as another solution can use qtimer for this."
122405025,2757,sledgehammer999,2015-07-17T20:34:48Z,"in my opinion this is more or less the same as sleeping, so no need to change it. this is low priority anyway."
122561607,2757,sledgehammer999,2015-07-18T16:30:26Z,thank you for the hard work.
122561920,2757,sledgehammer999,2015-07-18T16:32:29Z,i have pushed some minor fixups on top of your code: [a link]
122571115,2757,Chocobo1,2015-07-18T17:39:17Z,"please add `qt += concurrent` in `src.pro`, it'll fix compilation error with qt5."
122573012,2757,sledgehammer999,2015-07-18T18:07:40Z,done.
122575079,2757,onto,2015-07-18T18:26:19Z,thanks for merge.
109561228,3150,Chocobo1,2015-06-06T09:55:41Z,":thumbsup: very useful! i didn't test it yet, just some suggestions i thought of to make it more perfect: - the title should be capitalized: `peers addition` or maybe `add peers` (pick one). - the window should be resizeable vertically and horizontally as there would be potential text clipping for high dpi users, and the text edit area should follow the resize. - just glimpse through the code, ignore me if wrong, it seems there would be problems when validating ipv6 address, e.g. `2001:db8::ff00:42:8329`, also see: [a link]. - [a link], like: `setplaceholdertext( ""1.2.3.4:20000\n[2000::45]:20000"" );`"
109599144,3150,ngosang,2015-06-06T15:15:51Z,"changed to 'add peers' already it's. now the ipv6 format is [ipv6]:port (like in utorrent and other apps). i changed the copy peer function to copy the ipv6 with this format. i have tested with this ips and it's working: [code block] i like it but for now we have to be compatible with qt4. when support is dropped you could made this change in add magnet, add torrent... and this one."
109606344,3150,Chocobo1,2015-06-06T15:47:35Z,"something missing from my last comment: - when an input line (ip:port) cannot be validated/read, output the problem string in the qmessagebox::warning instead of giving a general error message. should be a trival change. the rest is good for me!"
109606634,3150,ngosang,2015-06-06T15:49:53Z,i can compile in my machine but travis fails. when you have time can you help me to fix that?
109606767,3150,Chocobo1,2015-06-06T15:50:38Z,try add `#include ` before `#include ` in peersadditiondlg.h
109608288,3150,ngosang,2015-06-06T16:08:32Z,![a link] thanks
109613901,3150,Chocobo1,2015-06-06T16:28:13Z,(don't forget to capitalize the title)
109625611,3150,ngosang,2015-06-06T17:56:09Z,"i think it's not necessary. there is other msgbox with the title ""no peer entered"". no peer entered?"
111382594,3150,glassez,2015-06-12T06:49:00Z,"and why not make different versions for qt4/qt5 using conditional compilation directives. if you do not use the advanced capabilities of qt5, then we do not proceed to use it. there is always a lot of people who will say, ""why do we need qt5, because everything works fine?""."
111437530,3150,ngosang,2015-06-12T10:11:54Z,"i'm not opposing, just saying that in other windows the help is displayed in this way (in qt4 and qt5). see add magnet, add torrent... if i make this dialog looks different in qt5 and the other windows have the old style will be weird. anyway if you want i can make the changes."
111438463,3150,Chocobo1,2015-06-12T10:16:46Z,"it won't be the first inconsistency (if you made the change) in this program.... just joking. thinking differently, this could be the first example for following ui fixups."
111442835,3150,glassez,2015-06-12T10:35:32Z,"join this. besides, you could change other windows too (if you want, of course)."
111446621,3150,glassez,2015-06-12T10:50:24Z,"by and large, we now have only ""compatible"" with qt5. we almost never use its ""charms"", as compatibility has come recently (i mean in master). but every time we add to the code something new, it's an excuse to try a new approach this new thing and remake similar to it old ones."
111447026,3150,ngosang,2015-06-12T10:52:18Z,i'm making the changes but i don't know if **[2000::45]:20000** is a good example. can you give me other? ![a link]
111457390,3150,glassez,2015-06-12T11:22:57Z,"ip addresses around us. for example, fdb1:9973:dbba:0:ca6c:87ff:fe3f:8133."
111469119,3150,Chocobo1,2015-06-12T12:04:27Z,"is this better? (text in setplaceholdertext) [code block] pardon me, if i contradict my previous post. or just have the same layout as qt4 version, but with the additional text in setplaceholdertext? [code block] (can't make up my mind...)"
111472861,3150,ngosang,2015-06-12T12:11:05Z,"i'm going to use this: [code block] without the label ""format: ipv4:port / [ipv6]:port"" in qt5 version."
111489328,3150,ngosang,2015-06-12T13:17:30Z,rebased
111731708,3150,sledgehammer999,2015-06-13T17:15:03Z,"don't forget to delete the peeraddition.cpp file and also remove it from the relevant .pri. btw, this is eligible for v3_2_x backporting."
111742215,3150,sledgehammer999,2015-06-13T19:29:17Z,i have answered to your questions already. please reload the pages from github so you can view my comments. sometimes github is stupid.
111751902,3150,ngosang,2015-06-13T20:51:23Z,"i did all changes you suggested. i tried to simplify things, take a look. i did the backport with the old code #3150 but i'm not going to do more changes into it. the code is a mess but it works well. we all are making efforts in backport the code but it's necessary? how long will take the 3.3.0 release?"
111754232,3150,sledgehammer999,2015-06-13T21:38:16Z,it depends. there are stuff to be done. like ensure a proper migration from the old bt_backup files to the new files... and i am sure glassez wants to put some more changes in before releasing.
111754743,3150,sledgehammer999,2015-06-13T21:47:51Z,if something is difficult to backport then it should be left in master only. normally i'll request simple things to be backported.
111755216,3150,ngosang,2015-06-13T21:57:35Z,"you can take a look at the old code, it's completely different. i let you 2 comments."
111755633,3150,ngosang,2015-06-13T22:10:31Z,![a link]
111757549,3150,sledgehammer999,2015-06-13T22:28:29Z,"for me that's the last comment. i'll also wait for to say if it is ok, since he participated in the review. (making the port compulsory is correct)."
111788379,3150,glassez,2015-06-14T06:40:27Z,"i think this is the only blocking issue. there are already enough changes for a new release. yes, my mission is not finished yet. but now it is not large. i want to do this gradually so as not to affect the release cycle. only new geoip manager is for 3.3.0 release. and current pr's (those that i will publish before the release)."
111800413,3150,ngosang,2015-06-14T08:38:47Z,this pr is ready. i prefer not delay much the release of version 3.3.0. i think we are trying to be too ambitious including too much in each release but meanwhile there are many known bugs in the stable releases. the most important softwares release a version every x months regardless of whether it contains many changes because the important thing is the bugs are fixed in a bounded time.
111864074,3150,sledgehammer999,2015-06-14T18:51:53Z,i am ready to merge. ok?
111979307,3150,ngosang,2015-06-15T08:37:58Z,if is not able to find more problems it's finished.
113915729,3150,ngosang,2015-06-21T15:41:37Z,changed.
113941643,3150,ngosang,2015-06-21T18:58:54Z,changed.
116299952,3150,ngosang,2015-06-28T17:11:57Z,"i think this is ready (if you don't have more changes). about the v3.2.0 pr #3196 i prefer to not merge that, you can close if you want."
121408433,3150,ngosang,2015-07-14T22:15:13Z,with the last commit contol+c copies in format ip:port instead of ip only. is there any reason to not merge?
122649523,3150,sledgehammer999,2015-07-19T11:01:31Z,"rebase. also edit your commits to include the bug numbers. ps: don't spam multiple ""closes"" in them. just use `closes # , # and # `. i know it will auto-close only the first one. i'll close the rest. it is ugly to use multiple ""closes""."
122650953,3150,ngosang,2015-07-19T11:37:55Z,ready.
122671930,3150,sledgehammer999,2015-07-19T15:32:52Z,"thanks for this. if it is easily backported, please do so."
609770726,12434,FranciscoPombal,2020-04-06T12:42:56Z,fixed.
615405985,12434,FranciscoPombal,2020-04-17T18:47:50Z,i removed the leniency changes. now this is just about logging more stuff in the embedded tracker.
615850916,12434,FranciscoPombal,2020-04-18T11:51:49Z,"we don't know how long it will take until the logging is redesigned. it could take a long time. in the meantime, i think this is a relatively small change that can come in very handy when diagnosing issues with the embedded tracker. otherwise, every time i try to solve a problem with the embedded tracker, i basically have to ask the bug reporter for a wireshark capture (not a realistic request for the majority of the users). with this change, hopefully solve the issue with just the information in the logs. plus in terms of code structure this is pretty trivial to change/undo when the logging is finally redesigned."
615856507,12434,glassez,2020-04-18T12:15:57Z,it can be done quickly as soon as we reach any agreement on it. but for some reason this topic is ignored...
615857177,12434,glassez,2020-04-18T12:19:00Z,"well, i'll approve it unless my objections are supported by someone else."
615904138,12434,glassez,2020-04-18T17:02:05Z,"do you have any idea what i'm talking about (have you read my suggestion about it elsewhere)? if so, does your answer here mean that you are simply neutral about it, so that you have no fundamental objection to changing it?"
615907876,12434,Chocobo1,2020-04-18T17:26:23Z,"no, i don't have a complete picture, please remind me about it."
615965149,12434,FranciscoPombal,2020-04-18T22:31:33Z,"i thought about it some more, and i think you are mostly right. i will remove the logging of the request params errors, as it is somewhat redundant at the end of the day. however, i still think logging the ip/protocol stuff at the tracker side is very useful for diagnosing potential problems. the potential ipv4-mappend ipv6 -> ipv4 conversion is information that is not available anywhere else short of debugging the program, for example."
616038672,12434,glassez,2020-04-19T05:27:30Z,"i suggest to use log message types based on verbosity levels instead of current ""flat"" (and mostly confusing) typification: 1. we define several verbosity levels, e.g. (starting from most verbose) debug, info, warning, critical. 2. we assign level to log message according to its relevance. 3. we allow to set log level threshold via settings. 4. log just ignores all messages that have more verbose level that configured threshold (i.e. it doesn't store such messages and it doesn't notify about them). e.g. if ""warning"" level is set as threshold only ""warning"" and ""critical"" messages will be processed. with this architecture, we can easily add more messages (even diagnostic ones) without fear of overloading the productive configuration (which is supposed to have a threshold higher than debug)."
616043437,12434,Chocobo1,2020-04-19T05:49:22Z,"in general, i feel like it is quite similar to what we are using currently. as a user, i would like to have the ability to select verbosity levels independently, there might be some kind of message in some level that i'm interested in and other levels doesn't interest me. as for your earlier comment: currently logger stores all log messages without filtering them, i don't mind we change this."
616046453,12434,glassez,2020-04-19T06:01:35Z,"seems you don't understand it. from the log perspective any level contains messages from all previous (less verbose) levels. it seems meaningless to store, e.g., only ""debug"" messages. but we can preserve current filtering at the ui side so user can see only selected message types (of course from the subset that is provided by logger according to selected threshold)."
616053786,12434,Chocobo1,2020-04-19T06:31:29Z,"i simply don't like to be forced to show levels that i don't want. what if i really want to suppress warning level but still want info & critical levels? the verbosity hierarchy (or threshold) you presented is quite limited and inflexible from a user viewpoint. i admit i don't understand what this has to do with verbosity hierarchy. basically you just need to filter the messages according to its level at `logger::addmessage()` and add an off by default `debug` level. and that is enough about my opinion, maybe you should wait for others opinion too (i really don't mind changing it if the majority agrees)."
616055706,12434,Chocobo1,2020-04-19T06:39:03Z,if this is possible then i suppose i'm fine with it.
616064071,12434,glassez,2020-04-19T07:16:55Z,"i talk about core log architecture. and i didn't invent it, it's widely used (to be honest, i've always wondered where qbittorrent log structuring came from). it even seems to follow the general principle of verbosity, used not only in logging. from this perspective, it is useless to cut out any particular layer of messages. what's the point to store, e.g., only info messages? what can you use them for? the point is to tell the logger to be more verbose (or less). e.g. a productive configuration usually does not require all messages, especially debug ones. the debug configuration can include all of them. for example, when something starts to go wrong, the user can sacrifice performance to be able to provide more debugging information. looks like you're talking about a view layer after all. so my proposal is still here:"
616080945,12434,arvidn,2020-04-19T09:02:59Z,"i think the main use case for logging is to debug and troubleshoot issues. i think when enabling more verbose logging, it's almost always to trouble shoot a specific issue. being able to narrow down which component(s) print additional logging can save a lot of log noise from unrelated parts of the program. unrelated to the issue being trouble shot that is. this has worked well in utorrent (where the log tab context menu lets you check categories of logs to enable)."
617327777,12434,FranciscoPombal,2020-04-21T18:12:17Z,"alright, i've addressed the comments and made a few changes to improve the embedded tracker implementation in general. - both the actual address and the claimed address are treated similarly now, including converting to ipv4 if they are ipv4-mapped ipv6 - from the beginning, it is guaranteed that the addresses are either pure ipv4 or pure ipv6, in order to prevent surprises with converting to qbytearray, for example - other minor things - includes only the logging changes previously agreed upon."
704969862,12434,FranciscoPombal,2020-10-07T14:21:03Z,rebased on top of `master`. thoughts on [a link]
2115962679,20833,ManiMatter,2024-05-16T18:46:59Z,"thanks having included this on milestone 5.0, and for having reviewed the code. i was not able to figure out how to test whether the feature works properly. just wanted to check if you had a chance to test if it actually works? many thanks"
2152184449,20833,ManiMatter,2024-06-06T11:47:15Z,"- quick question, do i need to do anything here to get this merged?"
2152276785,20833,glassez,2024-06-06T12:24:00Z,at least it should be confirmed by someone from the team (or maybe by couple of other people) that it works as intended.
2152436797,20833,ManiMatter,2024-06-06T13:14:03Z,"thank you for the fast response. i unfortunately did not figure out how to build a docker image from the code so that i could test it myself. did you test it on your end by any chance? if so, did it work? looking forward for the other people to test it (guess that is done via qbittorrent/web-developers ?)"
2153404378,20833,ManiMatter,2024-06-06T21:03:10Z,"- many thanks for your review. i incorporated your changes. regarding renaming: i am not sure i understand your suggestion to rename the ""isprivate"" to ""private"" in the various places. since the flag that is returned currently in the properties is called ""isprivate"", i feel it makes sense to keep calling it like this, rather than changing to ""private"". what was your thinking when suggesting the rename? in terms of functionality, did the feature work for you as expected?"
2154887712,20833,Chocobo1,2024-06-07T13:49:08Z,"it looks weird to me. for example: `bool torrentfilter::matchisprivate(const bittorrent::torrent *const torrent)` and without going into the internals, what is it supposed to mean? a match/matching is private... what? no, it is matching for a private flag/property on a torrent object. using another name like `matchprivate` (or `matchprivatetorrent`, `matchprivateflag`, etc.) could avoid the confusion imo. look at other similar functions, they aren't that hard to read and understand: `matchstate`, `matchhash`, `matchcategory`. another one: `torrentfilter::torrentfilter(..., const std::optional isprivate)`. what does it mean for the parameter by ""is private""? is it running a test (with some outcome) on the parameter/variable? no, i suppose the function want some state for a ""private"" flag/property. and therefore i would suggest just call it `private` (or `privateflag`, `privatestate` or something like that). i haven't got time to test. btw our ci do provide build artifacts, you can use it to verify."
2154957436,20833,glassez,2024-06-07T14:25:07Z,":+1: the torrent property is called ""private"". using the qt naming convention getter/setter methods are called `isprivate`/`setprivate` accordingly. but in most cases we have to refer to the original property name (i.e. without `is` prefix)."
2154962996,20833,ManiMatter,2024-06-07T14:28:03Z,"thank you for the pointer, which helped me find the ci artefacts. however, i am not sure i know how to run them, would you mind pointing me in the right direction once more? in my regular setup, i run a docker container which i pull from lscr.io/linuxserver/qbittorrent:latest. my take is that the artefacts from the ci do not provide a docker image, correct? if that's the case, i'm left off with my mac to test (which runs on sonoma). under the [a link], i see four options: build 2.0.10 vs build 1.2.19 and gui on vs gui off. what is the difference between those? lastly, after downloading them and unpacking the .zip, i see there is a .dmg inside and a cmake folder. the app inside the .dmg is crossed out in my case and when trying to open it i get a message ""not supported on this mac"". appreciate your patience and help - happy to support testing.. just need to figure out how to get the artefacts to run."
2155021051,20833,ManiMatter,2024-06-07T15:00:35Z,"mh. i changed the naming convention across the board, but now ci complains, since the word ""private"" is a reserved word in c++. any suggestions what to do? change to ""privateflag""?"
2155032087,20833,glassez,2024-06-07T15:06:49Z,i couldn't imagine that you would misinterpret my comment above so much. i definitely didn't want you to change naming convention we use. i was just stating a fact about such a convention so that you could understand where the name of the method `isprivate` came from.
2155041684,20833,ManiMatter,2024-06-07T15:12:35Z,"sorry. new to all of this.. let me revert the commit. my understanding was that the suggestion was to consistently rename the ""is private"" to ""private""; i must have misunderstood. could you again please point me in the right direction in what sense i shall change the namings? are we only talking about the matchisprivate and setisprivate functions to matchprivate and setprivate?"
2155838633,20833,Chocobo1,2024-06-08T06:39:23Z,"my take is that the artefacts from the ci do not provide a docker image, correct? yes, no docker image. under the [a link], i see four options: build 2.0.10 vs build 1.2.19 and gui on vs gui off. what is the difference between those? different libtorrent versions and with gui or not. probably doesn't matter for you. it seems our mac artifacts is for arm. you're out of luck then..."
2155865669,20833,ManiMatter,2024-06-08T08:07:07Z,"many thanks for the guidance, . besides not being 100% on the proposed renamings of the variables/functions (last post), i unfortunately do not know how to finish this pr without being able to test myself. do you see any way that i can test (or would you know about someone who could support)?"
2157369634,20833,Chocobo1,2024-06-10T06:13:13Z,"for testing only, the easiest way is to get a windows/ubuntu virtual machine. then you can run the ci artifacts for these platforms. for development, you'll need to setup properly: installing the compiler and libraries. you could read the instructions here: [a link] [a link] might be of help for getting the libraries."
2158858587,20833,ManiMatter,2024-06-10T16:49:45Z,"hi sorry for my questions, i feel pretty dumb. i have now installed a virtual box with ubuntu on my macbook, and have downloaded the ubuntu artefact with gui (took ages to download despite me having a fast connection). i extracted the `qbittorrent-ci_ubuntu-x64_gui=on_libtorrent-2.0.10_qt-6.5.2/qbittorrent-ci_ubuntu_x86_64.appimage`, but when i click on it, nothing happens. when i try to launch it from terminal, i get the error `'cannot execute binary file'`. is this still because of the cpu architecture? i have a 2.8 ghz quad-core intel core i7 macbook pro from 2015. any ideas?"
2159027425,20833,Chocobo1,2024-06-10T18:27:23Z,sometimes i abort it and re-download. would be faster the second time. probably not. your cpu is fine. did you try to give it execute permission first? `chmod +x qbittorrent-ci_ubuntu_x86_64.appimage` then run it in console: `./qbittorrent-ci_ubuntu_x86_64.appimage` also make sure you have `fuse` package installed.
2159046095,20833,ManiMatter,2024-06-10T18:37:46Z,"thanks for the guidance, that has worked for me, many thanks (ie. was able to open the gui). i guess to be able to test the api, i need to download the non-gui version so that i can test from the browser?"
2159080298,20833,glassez,2024-06-10T18:55:16Z,this is not necessary. gui version still provides webui/webapi if enabled in settings.
2159116325,20833,ManiMatter,2024-06-10T19:16:40Z,"thanks again for pointing me on the right path. i tested it, all working as expected: tested with: `[a link] 1. `info`: public and private torrents show up, i.e., no filtering (correct) 2. `info?isprivate`: public and private torrents show up, i.e., no filtering (correct) 3. `info?isprivate=false` (or `false`, or `false` but not `0`): only public torrents show up (correct) 4. `info?isprivate=true` (or `true`, or `true` but not `1`): only private torrents show up (correct) 5. `info?isprivate=xyz` (or any other random, incorrect filter): public and private torrents show up, i.e., no filtering (correct) content-wise, i therefore think this is ready to be merged. you had some further suggestions as to renaming functions/variables, and to change the initialization of anyisprivate. i'm not 100% sure i understand what should be changed there - is it a must for this pr to be merged? if yes, appreciate if you once again could point me in the right direction, or if you could support with a commit for those items."
2165757142,20833,ManiMatter,2024-06-13T13:57:58Z,", - what do you think, can we merge this?"
2166469780,20833,ManiMatter,2024-06-13T18:06:53Z,"thx for the commit, , much appreciated"
2167677935,20833,glassez,2024-06-14T09:55:44Z,why do you pollute this pr with inappropriate commits?
2167714782,20833,ManiMatter,2024-06-14T10:17:51Z,"hi, still working on it. apols. will squash when ready. wanted to add the ""private"" flag to the ui as well, hope that makes sense."
2167727508,20833,glassez,2024-06-14T10:26:03Z,"imo, it is separate thing and should be provided in its own pr."
2167729485,20833,ManiMatter,2024-06-14T10:27:11Z,ok fair. thought it may make sense to add it in this one since content-wise related. but happy to remove the commits and create a separate pr.
2167757384,20833,ManiMatter,2024-06-14T10:44:06Z,- i have reverted the commits and created a separate pr to work on adding the private flag to the gui. apologies for the confusion caused. [a link]
2168127777,20833,Chocobo1,2024-06-14T14:06:25Z,from [a link]
2168143995,20833,ManiMatter,2024-06-14T14:15:17Z,done
2171172226,20833,glassez,2024-06-16T07:57:34Z,thank you!
2171173762,20833,ManiMatter,2024-06-16T08:02:57Z,"thx to you, and for your guidance and help, i learnt a lot"
69459133,2389,buinsky,2015-01-10T15:17:42Z,"/webdev , please review the pr."
69464895,2389,buinsky,2015-01-10T17:54:54Z,i rebased the code.
69468729,2389,glassez,2015-01-10T19:36:08Z,"ты используешь qvarianthash, чтобы сравнивать списки, но при передаче конвертируешь их в списки. это усложняет код. что если так и передавать их, не конвертируя? это практически не увеличит размер передаваемых данных, т.к. для измененных данных все равно приходится передавать некоторый идентификатор. при этом, списки, состоящие из простых значений (например, `labels`) можно обрабатывать и передавать как списки, не делая промежуточного преобразования в qvarianthash. такой вариант позволит, к примеру, полностью избавиться от функции copydatatopartialresponse()."
69476110,2389,buinsky,2015-01-10T23:12:15Z,"если использовать qvariantlist вместо qvarianthash. то нужно будет вводить функцию проверки наличия в массиве элемента с нужным id / поиска элемента в массиве с нужным id. в qvarianthash удобно хранить имя id-поля по которому можно идентифицировать элементы списка (чтобы определять какие данные удалены). можно хранить имя id-поля в конце или начале списка, но тогда понадобится функция наподобие copydatatopartialresponse, которая будет проходить по всем елементам и удалять имя id-поля в скопированных данных. или ты предлагаешь имя id-поля не удалять и пересылать вместе с данными?"
69484602,2389,glassez,2015-01-11T05:48:50Z,"нет, ты не понял. я предлагаю обрабатывать и пересылать как списки только списки, состоящие из простых данных, например `labels`. а списки сложных данных, наоборот, не только обрабатывать, но и пересылать в виде хэш-таблиц (объектов json): [code block]"
69484848,2389,buinsky,2015-01-11T06:03:40Z,длина хэша - 40 байт. не хотелось бы удлинять ответ.
69485148,2389,glassez,2015-01-11T06:22:01Z,да почему удлинять? ты его все-равно пересылаешь для всех измененных торрентов.
69488904,2389,buinsky,2015-01-11T09:51:49Z,i rebased the code. will other comments?
69494247,2389,buinsky,2015-01-11T13:21:56Z,`haschanges` используется для определения изменившихся данных.
69494311,2389,glassez,2015-01-11T13:24:05Z,где оно реально используется?
69494553,2389,glassez,2015-01-11T13:31:24Z,"[code block] я уже писал в комментариях, но, видимо, ты не заметил. это выражение бессмысленно, т.к. если `!changes` верно, то в `partial` и так нет этого ключа. а больше `changes` нигде реально не используется и ее можно смело удалять."
69494795,2389,buinsky,2015-01-11T13:40:14Z,как же нет ключа? [code block] вторая строка. грубо говоря `haschanges` используется для удаления пустых объектов без изменений.
69495652,2389,buinsky,2015-01-11T14:10:00Z,the code rebased.
69500942,2389,buinsky,2015-01-11T16:47:54Z,will any comments about rebased code?
69501333,2389,glassez,2015-01-11T16:58:24Z,зачем их добавлять?
69501346,2389,glassez,2015-01-11T16:58:54Z,позже еще посмотрю. пока занят.
69501804,2389,buinsky,2015-01-11T17:11:09Z,"синхронизируемые данные можно представить в виде дерева. когда обрабатываются потомки какого-то узла для них создается временный объект для хранения синхронизируемых данных, поскольку в узле невозможно сразу сказать, будут ли изменения в потомках узла. когда прошла обработка данных потомков принимается решение: оставлять объект (изменения есть) или его можно удалить (изменений нет)."
69502625,2389,sledgehammer999,2015-01-11T17:30:27Z,"/qbittorrent-frequent-contributors sorry for the offtopic. this is a heads up. and the only way i know to contact you. i have something big happening in real life this week. so until friday i will be mostly or totally inactive. i may also choose to ignore you during that period. after friday, unless something unforeseen happens, i'll be able to be 100% active for a while. and i'll be able to tackle most of the v3.2.0 milestone issues in that timeframe."
69503125,2389,glassez,2015-01-11T17:43:01Z,"не будем далеко ходить... разберем приведенные тобой две строчки кода: [code block] когда `processhash()` завершает работу, то переменная `hash` либо содержит пустую таблицу (значит, нет никаких изменений), либо нет (значит, изменения есть). тогда почему бы не сделать так: [code block]"
69505096,2389,glassez,2015-01-11T18:33:15Z,"не может. или покажите, при каких условиях это не так."
69539579,2389,buinsky,2015-01-12T08:23:44Z,сейчас точно такое же поведение у программы. что не так?
69551145,2389,glassez,2015-01-12T10:26:41Z,"так то оно так, да не так... клиент первый раз хочет получить данные и отправляет `rid = 0` - какая ветвь `if - else` выполнится? а какая должна?"
69565929,2389,buinsky,2015-01-12T12:58:47Z,будут еще замечания?
69573305,2389,glassez,2015-01-12T14:01:59Z,"ты, видимо, считаешь, что я придираюсь... поверь мне - это не так. просто я вижу в твоем коде некоторые недостатки, видимо, от неопытности. я хочу не просто их исправить, а чтобы ты понял, в чем они заключаются. однако, судя по твоей реакции, тебе этого не надо. если ты считаешь, что все делаешь правильно, а я зря тебя достаю своими замечаниями, то скажи это прямо. праздники кончились - у меня нет ни времени, ни желания что-то тебе навязывать. просто исправим явные ошибки и пусть примет этот pr. а мне будет легче потом все доделать. так что - нужны замечания или нет? а пока ты думаешь, я укажу на явные ошибки."
69614512,2389,buinsky,2015-01-12T18:02:18Z,нужны.
69777948,2389,buinsky,2015-01-13T16:57:57Z,нужно еще что-нибудь исправить?
69798928,2389,glassez,2015-01-13T19:01:30Z,"как я уже говорил - праздники кончились, а вместе с ними и свободное время... но нам надо разобраться с этим до конца. осталось немного математики и здравого смысла. ну, во-первых, все-таки поборемся с излишней универсальностью некоторых функции. таких у нас три - processlist, processhash и processmap. делают они одну и ту же операцию, но с разными типами данных (а именно, сравнивают два объекта одного типа и вычисляют разницу между ними). самая основная идея здесь в том, что мы должны оперировать не с некоторыми абстрактными qvariantlist, qvarianthash и qvariantmap - у нас это лишь способ представления, соответственно, списка простых данных, списка структурированных данных и самих этих структурированных данных. не менее важно и то, что внутри функций сравнения мы имеем два объекта, можно сказать, одного класса - если это структуры, то они имеют одинаковый состав, а если списки - то они содержат элементы одинакового состава (это ведь логично - мы же не должны сравнивать, например, торрент с чем-то другим). и вот что следует из вышесказанного: 1. проверки типа `!prevdata.contains(key)` в функции `processmap` не нужны, так как `data` и `prevdata` имеют одинаковую структуру (т.е. одни и те же ключи). 2. проверки типа `prevdata.isempty()` в функции `processmap` также не нужны (и по той же самой причине) - даже если мы будем сравнивать пустые структуры, то они будут пустыми обе, и все отработает правильно и без этих проверок (цикл просто не начнется). 3. описанные в предыдущих пунктах проверки актуальны для `processhash`, т.к. здесь мы сравниваем два списка, а они могут содержать разное количество элементов или быть пустыми. но (это чистая математика) `prevdata.isempty()` здесь никак не зависит от цикла и поэтому ее нужно перенести за его пределы (чтобы не делать одно и то же n-е количество раз). это же относится и к `processlist`. что еще можно сказать об этих функциях... функции, имеющие выходные параметры должны быть спроектированы так, чтобы они инициализировали эти параметры (т.е. вызывающая сторона не должна об этом заботиться). в нашем случае достаточно просто их очистить. получается примерно следующее: [code block] p.s. просьба оставить комментарии в функциях. те комментарии, которые перед функциями, нужно разместить перед их предварительным объявлением."
69838009,2389,fbarriga,2015-01-13T22:57:12Z,it's possible to use english as lingua franca ?
69894530,2389,buinsky,2015-01-14T10:08:51Z,please check comment for `getsyncmaindata` function: [code block]
69912307,2389,glassez,2015-01-14T12:58:49Z,"the json specification does not distinguish different types of data of the form ""key: value"". in json this is called **object**. but old _btjson_-code uses the term **dictionary**. you should use this term here."
69914392,2389,glassez,2015-01-14T13:18:45Z,i've updated my big comment with `processxxx` functions. i added more comments in functions code and improve `processhash` by removing second loop.
70071573,2389,buinsky,2015-01-15T11:16:10Z,your code in your big comment doesn't properly works. so i updated only comments.
70074466,2389,glassez,2015-01-15T11:44:44Z,"this is not my code. this is just example code. i wrote this ""on paper"", i'm not compile it and didn't test it - that's your job, because it is your pr. and my code is in my pr. what and how is it doing wrong?"
70075820,2389,glassez,2015-01-15T11:58:05Z,ok. i've found it. replace [code block] with [code block] in my example of code (`processhash()`).
70244459,2389,buinsky,2015-01-16T12:01:54Z,i rebased the code.
70407199,2389,glassez,2015-01-18T12:51:52Z,"thank for your work. i haven't looked client code. leave it to the others. regarding comment to `getsyncmaindata()` function, then let it check someone else too."
70407334,2389,sledgehammer999,2015-01-18T12:56:50Z,ok. after style is fixed i'll take a look at the diffs. (as soon as i can)
70407721,2389,buinsky,2015-01-18T13:10:08Z,", the code rebased."
70408142,2389,sledgehammer999,2015-01-18T13:23:51Z,"fix the typo in the first commit message ""implement functions for generating partial responses of req**u**ests."""
70408306,2389,buinsky,2015-01-18T13:28:30Z,done.
71030694,2389,sledgehammer999,2015-01-22T14:48:15Z,all else seems ok to me.
71087044,2389,buinsky,2015-01-22T19:55:04Z,it's not a typo. each value of 'torrents' dictionary contains a map with info about a torrent.
71094091,2389,sledgehammer999,2015-01-22T20:38:26Z,see the bold part: shouldn't the last word in this line read `torrent` ?
71104100,2389,buinsky,2015-01-22T21:38:14Z,i'm not sure. my english isn't very good. should it be?
71106218,2389,sledgehammer999,2015-01-22T21:50:46Z,"in english: ""one torrent"", ""two torrents"", ""three torrents"" etc"
71107320,2389,buinsky,2015-01-22T21:57:18Z,"`""torrents"": dictionary contains information about a torrents.`"
71108034,2389,pmzqla,2015-01-22T22:01:40Z,maybe you meant something like: `dictionary containing information about torrents.`?
71108253,2389,sledgehammer999,2015-01-22T22:02:58Z,"this makes more sense. in english ""a"" is the same as saying ""one""."
71110320,2389,buinsky,2015-01-22T22:15:33Z,the code rebased.
71110751,2389,sledgehammer999,2015-01-22T22:18:24Z,thank you for the code and your time. thanks for helping buinsky and reviewing this.
71110808,2389,sledgehammer999,2015-01-22T22:18:44Z,-i am just going to let travis-ci finish the build and then merge.-
71478797,2389,pmzqla,2015-01-26T15:33:46Z,something is not really clear to me. the value of rid returned by /sync/maindata?rid=x is x+1 . shouldn't it be x ?
71522284,2389,buinsky,2015-01-26T19:33:16Z,`rid` in response is id assigned to response by server. `rid` in request params is processed by client response id. scheme: 1) server send `rid` (= x) to client 2) client confirms that it received response (send `rid` = x as request parameter to server)
71527344,2389,pmzqla,2015-01-26T20:01:52Z,"ok, thanks. another question. is it wanted that if the client never changes rid in its requests, the server doesn't do a full update? e.g. sync/maindata?rid=0 -> full_update=true, rid=1 sync/maindata?rid=1 -> full_update=false, rid=2 sync/maindata?rid=1 -> full_update=false, rid=3 sync/maindata?rid=1 -> full_update=false, rid=4 ..."
71531138,2389,buinsky,2015-01-26T20:24:06Z,this is expected behavior. client tells to server that it processed the response with id = 1. and server sends only difference with that response. this because server keeps previouse response data to compare with current response untill client will send `rid` equal to current response id or unknown id (not previous or current). i hope i have not confused you.
71532524,2389,pmzqla,2015-01-26T20:32:31Z,"ok, i just wanted to make sure this was the expected behavior. everything is clear now, thanks."
394156163,9026,Chocobo1,2018-06-03T11:38:19Z,can you give a general approval of this pr direction?
394176056,9026,sledgehammer999,2018-06-03T17:04:10Z,i won't be able to comment until late tomorrow. please wait a few days and don't merge.
394252464,9026,glassez,2018-06-04T06:54:40Z,pr updated.
395236798,9026,sledgehammer999,2018-06-06T22:42:03Z,quick comment (the rest on the weekend): the *.qm files shouldn't be in the repo. they should be created during build like the regular translations do. look at `qm_gen.pri` file in the root folder (or i'll manually create them with lrelease on build)
395504638,9026,glassez,2018-06-07T17:38:43Z,"ok, fixed."
395528121,9026,glassez,2018-06-07T18:56:13Z,"note for reviewers: **tstool is not the part of main qbittorrent codebase.** it just a helper to avoid creating/updating webui translation files manually. it just a plain script and not the well-formed application. i set the goal only to achieve the desired functionality in the most simple way. who does not like this approach, you can go to criticize all the millions of existing scripts like this! so i ask you to comment on it only on the basis of the prerequisites above. you can ""improve"" it later yourself, if ""add a dozen lines of code without changing the functionality"" is an improvement for you."
405149502,9026,glassez,2018-07-16T05:00:58Z,yes. you asked me: yes. webui translation files are created using this script.
405235022,9026,glassez,2018-07-16T12:43:45Z,"so, will anyone approve this pr, or do you still have doubts?"
405255736,9026,sledgehammer999,2018-07-16T13:56:20Z,"imo, it is best to only comment if there is a bug in the python script. since isn't particularly interested in python and improving code quality of the script. patches are welcome after the merge from more knowledgeable people."
406881901,9026,glassez,2018-07-22T17:06:17Z,actually you have to update them once you've updated .ts files.
421078514,9026,glassez,2018-09-13T17:00:19Z,", is this pr generally approved or rejected? have you some additional comments?"
423757929,9026,sledgehammer999,2018-09-22T16:57:50Z,"damn it. the github-email spam has gotten to me. yes this is generally approved. i don't like distributing .qm files. if want us to distribute it feel free to continue. otherwise, drop the change about distributing .qm files."
423764607,9026,glassez,2018-09-22T18:40:01Z,"what do you mean exactly? if you don't like having .qm in qbittorrent repo, it isn't intended and i fixed it. webui .qm files should be distributed with qbittorrent binary as well as other .qm files, otherwise how can it be used?"
423768158,9026,sledgehammer999,2018-09-22T19:39:03Z,i meant this: so we're good.
426346025,9026,glassez,2018-10-02T16:44:55Z,"pr updated (rebased onto current master). , /demigods, i intend to merge this pr in the next few days, unless you have any objections (to the feature itself, but not to the translation helper script). please don't merge any conflicting prs before. , it breaks cmake builds and i don't know how to fix it. , (just a note; i hope it doesn't get in the way of this pr) once it's merged, we'll either have to accept prs with translation updates, or publish webui translations on transifex and sync with it from time to time."
427655262,9026,glassez,2018-10-07T13:52:35Z,", can you re-approve (or comment) it?"
427670887,9026,Chocobo1,2018-10-07T17:28:37Z,"offtopic, also i've been thinking, (after this pr) it should be possible to write a small parser in js to parse qt .ts files directly (ditching .qm files), this way we can move the i18n string replacement from webui server to client side (browser). i only got the idea recently, haven't got the time to code it."
428136641,9026,glassez,2018-10-09T10:09:19Z,", python warnings are fixed. i don't know why lgtm can't compile c++ code."
428409242,9026,Chocobo1,2018-10-10T01:42:21Z,just letting you know merging this pr will break cmake build. if you don't have time we can fix it after the merge.
2332253914,21300,glassez,2024-09-05T17:15:59Z,"i believe that there are a huge number of users (including me) who are not affected by mmap-related problems at all because of their use cases. at the same time, i am not sure that disabling mmaping will not bring other problems in some use cases, because mmap io subsystem was not originally designed to work in this mode. therefore, it would be better to provide `mmap_file_size_cutoff` as an option."
2332266661,21300,glassez,2024-09-05T17:23:14Z,"or maybe provide a way of disabling memory mapped files via another ""disk io type"" which behind the scenes would be just mmap disk io with disabled memory mapping."
2332279378,21300,HanabishiRecca,2024-09-05T17:30:46Z,"i like that idea more. switching `disk io type` also requires client restart, could work as additional safety measure. exposing the raw int field is not very useful imo. because some arbitrary values don't really mean anything. and advising people with mmap problems to set it to something like `2147483647` would be weird. so on/off behavior looks better."
2332314284,21300,HanabishiRecca,2024-09-05T17:48:15Z,there is also another related option: [a link]. maybe worth setting to `always_pwrite` along the way.
2332404132,21300,HanabishiRecca,2024-09-05T18:39:47Z,"done. this option also could be repurposed in the future, when the actual pread-disk-io would be in production."
2332410892,21300,glassez,2024-09-05T18:44:01Z,will it provide any additional benefit? isn't setting `mmap_file_size_cutoff` to maximum value enough?
2332428896,21300,HanabishiRecca,2024-09-05T18:54:39Z,"no, it is redundant and doesn't do anything in this case. [a link] i see it as an additional safety net. but if you think it is excessive, i'll remove it."
2332454285,21300,glassez,2024-09-05T19:10:23Z,"well, so be it."
2356334456,21300,nagyimre1980,2024-09-17T15:58:40Z,will 5.0.0 include it?
2383555643,21300,glassez,2024-09-30T15:41:21Z,a note for the one who will be merging this pr: i have corrected the pr title. don't forget to change the commit message to follow it.
2386521509,21300,glassez,2024-10-01T16:58:49Z,thank you!
2386692002,21300,USBhost,2024-10-01T18:30:37Z,wasn't the fallback single-threaded?
2386706722,21300,HanabishiRecca,2024-10-01T18:38:57Z,"no, it uses as many threads as you set via `asynchronous i/o threads` option."
2389123264,21300,KyleSanderson,2024-10-02T16:39:28Z,this doesn't seem to be in the 5.0.x branch - do you know if this will make it for 5.0.1?
2389148498,21300,USBhost,2024-10-02T16:51:21Z,isn't it the new default? basically called default?
2389174287,21300,HanabishiRecca,2024-10-02T17:02:54Z,"there is a milestone on the right. i'm not in the developers team, just a regular user, so it does not depend on me. no. you need to enable it explicitly (`disk io type` => `simple pread/pwrite`)."
2389193845,21300,USBhost,2024-10-02T17:13:39Z,scratch that i was wrong. it's not on 5.0.0
2389226937,21300,HanabishiRecca,2024-10-02T17:29:09Z,"of course not. this pr was only merged yesterday, **after** the 5.0.0 release. i clearly described testing steps in that message [a link]"
2412831913,21300,Pentaphon,2024-10-15T03:42:01Z,has anybody done any testing to confirm this works as intended?
2412833558,21300,USBhost,2024-10-15T03:44:11Z,try this [a link]
2426401974,21300,glassez,2024-10-21T11:25:51Z,could you create pr to my v5.0 branch in order for it to be backported?
2426431081,21300,HanabishiRecca,2024-10-21T11:40:11Z,unfortunately github does not allow forking the same repo twice. is there a problem with cherry-picking?
2426440525,21300,glassez,2024-10-21T11:45:00Z,"why do you need it? there are conflicts regarding the webui, which i prefer not to get involved with solving."
2426504811,21300,HanabishiRecca,2024-10-21T12:15:24Z,"ok, i did it manually."
2442897890,21300,buroa,2024-10-29T00:03:30Z,this pr made my year. thank you
2543710050,21300,mreilaender,2024-12-15T09:59:12Z,"thank you very much ! for me with memory mapped io under linux, qbittorrent didn't release the memory and simply kept growing eventually forcing other processes to use swap. using pread fixed the issue without any obvious side effects :)"
564424464,11614,Tester798,2019-12-11T08:01:24Z,"ok, here is the variant without ""spoofing command line parameters""."
564432789,11614,glassez,2019-12-11T08:27:39Z,"it looks like this feature makes `--portable` command line parameter completely meaningless, so it should be removed. or am i missing some important use case?"
564457871,11614,Tester798,2019-12-11T09:35:32Z,"hmm.. yes, after first time when program will be run with `--portable` command line parameter `profile` folder will be created in app folder and use of `--portable` command line parameter wouldn't be needed anymore. but if `--portable` command line parameter will be removed, then user will need to create `profile` folder himself manually to initiate portable operation, so i'm not sure if the parameter should be removed. the intent of this pull request is just to add the possibility to run the program in portable mode without need of specifying any additional portable parameters."
564462961,11614,glassez,2019-12-11T09:48:35Z,"creating folder is no harder than running program with some parameter. but having ""--portable"" parameter only to create ""profile"" folder is meaningless, imo."
564464578,11614,Tester798,2019-12-11T09:52:50Z,so should i add removing --portable command line parameter to this pull request too?
564465746,11614,glassez,2019-12-11T09:55:39Z,yes. unless someone provides a compelling reason not to. let's wait at least for opinion.
564478473,11614,Chocobo1,2019-12-11T10:27:59Z,"i don't have opinion on either way under the condition that `--profile` switch won't be affected, otherwise we broke some usage pattern here. also i would like to see a new log entry stating the used profile directory when qbt is started (whether in portable mode or not, generally useful for users imo), can you do that ?"
564485865,11614,glassez,2019-12-11T10:49:01Z,"i.e. portable mode with profile dir other than default one is really useful? do we allow such configuration currently? if no, i will insist on removing ""--portable"" param. one important thing is general approval of this way of ""portable mode"" detection. several different options were discussed earlier (explicit portable build, params file, etc.) but i do not recall that we came to a consensus, because we still have open prs that implement other ways."
564487408,11614,Chocobo1,2019-12-11T10:53:27Z,"yes. i don't use portable/profile switch and i'm just saying that some users will be affected. just to be clear, it seems the `--portable` switch is just a shortcut for `--profile qbt_binary_path/profile`."
564491885,11614,glassez,2019-12-11T11:06:46Z,"well, then it should definitely be removed here. all other ""useful"" cases are covered by other parameters."
564539475,11614,Tester798,2019-12-11T13:29:14Z,removed `--portable` command line argument. added logging of config profile directory (because logging just base profile directory will require more code modification).
564564567,11614,glassez,2019-12-11T14:21:17Z,"isn't ""profiledir"" suitable?"
564568586,11614,Tester798,2019-12-11T14:29:04Z,`profiledir` is empty in case of not portable operation.
566355032,11614,Chocobo1,2019-12-17T02:45:26Z,before we press the merge button. should this land in v4.2.x or in next major release v4.3.0?
566378978,11614,glassez,2019-12-17T04:48:28Z,"i think it's not a problem to merge it in v4.2.x. v4.2.0 was not very successful and should not have spread much (i would treat it as one of the late beta/rc versions). besides, hardly anyone has a ""profile"" folder in application directory for any other purpose than portable mode, so we are unlikely to break something. have you any other thoughts?"
566389243,11614,Chocobo1,2019-12-17T05:36:40Z,"for me it seems many people have tried it and some (if not many) of them reverted back due to problems. not many, i just thought this is a behavior change and personally i would prefer including it in next major release instead (but i don't insist). well i'll merge it and let decide."
566389475,11614,Chocobo1,2019-12-17T05:37:44Z,thank you!
566394292,11614,glassez,2019-12-17T05:58:37Z,:+1:
566748306,11614,sledgehammer999,2019-12-17T21:04:34Z,"a lot of people were/are interested for a painfree way to enable portable mode. so what's the worst case? that someone has forgotten a ""profile"" folder in the same folder as the binary? big deal. let's not forget that for official installations it is extremely hard for such a file to exist. (usually the binary is installed in protected/system folder). so i am inclined to include this in the next release."
566948022,11614,FreePlague,2019-12-18T09:23:03Z,how about qbt_portable = 1 environment variable? is this gone too?
567027831,11614,olliebean,2019-12-18T13:19:14Z,"the first time i ran this new version without the --profile command line, all the downloaded files from my existing torrents - that had already been saved to the correct directories according to my save path in the downloads tab of the options - were moved into the profile folder, and i had to move them back to where they should be by right-clicking on each one and selecting ""set location"". seems to have been a one-off, as new torrents are saving to the correct locations as per the settings, but surely this can't be working as designed?"
567070302,11614,glassez,2019-12-18T15:04:35Z,"it's not about --profile parameter. it's about --portable that is removed in favour of auto detection of ""portable"" mode."
567079979,11614,olliebean,2019-12-18T15:27:45Z,"i was using --profile=profile due to problems i had previously using the --portable switch. i just restarted qbittorrent without any command line, and it seems that problem still exists - all my torrents are now showing errors. the errors in the log read: ""the filename, directory name, or volume label syntax is incorrect."" it seems to be related to portable mode trying to use relative paths for everything. i guess i'll restore my configuration from backup and continue to use --profile=profile."
567082566,11614,glassez,2019-12-18T15:33:32Z,"--profile=profile doesn't mean ""portable"" mode. ""portable"" mode includes ""relative fastresume paths""."
567087843,11614,olliebean,2019-12-18T15:44:53Z,"yes, and apparently relative fastresume paths doesn't work properly if those paths aren't in qbittorrent's directory. 4.2.1 means portable mode is automatically enabled if the ""profile"" folder is found in qbittorrent's home directory, so i'm going to have to either revert to an older version or rename the profile folder to get my paths working properly again."
567092248,11614,olliebean,2019-12-18T15:54:43Z,"regardless, v4.2.1 seems to have royally messed up my existing torrents. it knows where they are - if i double-click on a torrent, it opens the correct directory with the correct file selected - but they are showing errors, and if i try a ""recheck"" it can't find them. any guidance on how to get things working again would be welcomed. restoring my profile folder from backup doesn't seem to have helped. nor did renaming the profile folder or reverting to an older version."
567156838,11614,Janaue,2019-12-18T18:37:03Z,the issues for broken torrents is old [a link]
567174534,11614,olliebean,2019-12-18T19:24:34Z,"is there any way to explicitly disable relative fastresume when running portably? previously the way to get around this was to use `--profile=profile` instead of `--portable`; now the workaround seems to be to use a different name for the profile directory, e.g., `--profile=userprofile`, to prevent `--relative-fastresume` being automatically enabled by the presence of the ""profile"" directory."
567328673,11614,glassez,2019-12-19T04:36:33Z,"when you set `--profile=profile` without `--relative-fastresume` it just will use profile folder you set. *note: i'm not sure qbittorrent can correctly handle existing torrents when you start it in another mode than the previous one.* so your problems can be caused by switching between modes and then running qbittorrent with torrents created in another mode. it seems that you do not understand exactly what has been done here. we haven't changed how it works in one mode or another. we just changed the way to enable ""portable"" mode."
567405179,11614,olliebean,2019-12-19T09:18:04Z,"thanks - it seems my mistake was to run the executable directly, without using `--profile=profile`, upon which it corrupted the fastresume paths in my existing profile folder. i'd been using this command line option for so long, via a shortcut, that i'd forgotten that --portable mode has this problem (and if i'd remembered, i probably would have assumed it had been fixed by now anyway), and thought this new update meant i wouldn't need the command line option any more. had i just kept using my shortcut as before, i wouldn't have run into any problems."
567456094,11614,glassez,2019-12-19T11:42:48Z,", can you confirm that ""portable"" mode works as expected? do you use it currently?"
567477889,11614,Janaue,2019-12-19T12:54:27Z,ddddd
567480011,11614,Janaue,2019-12-19T13:01:05Z,so what is the proper way to enable the portable mode and avoid the error of directory name ?
567481773,11614,olliebean,2019-12-19T13:06:19Z,"the option `--profile=profile` is essentially the same as portable mode, but without the `--relative-fastresume` option that causes the path errors. it won't fix any path errors caused by running in portable mode, but it will prevent any more paths getting broken."
567565306,11614,Tester798,2019-12-19T16:37:01Z,"didn't know it's released already, was planning to switch to it after this change. just checked versions 4.2.0 and 4.2.1 and looks like they work the same way in `portable` mode: giving error for the downloaded torrent after program is restarted if torrent was downloaded not to default folder. if the program is running with `--profile=profile` command line, then looks like it's giving no error for the torrent after restarting the program (for both 4.2.0 and 4.2.1). so looks like it's the problem with `--relative-fastresume` functionality?"
567569126,11614,Vanquo,2019-12-19T16:46:52Z,"[a link] [a link] [a link] [a link] these are all somehow related. if i can describe the problem me, olliebean and others are having with portable mode, its trying to save torrents in the same drive letter as qbittorrent.exe but outside of the profile folder. torrents saved in say "".\profile\qbittorrent\downloads"" are fine after closing and reopening the app but any torrents located outside the profile folder but within the same drive letter will give the paths error. any torrent saved in a different drive letter as qbittorrent.exe works fine. maybe portable mode should by default just not have `--relative-fastresume`. how about just keep the default to absolute paths and give us the option to decide if we want to save files in a relative path for portable use like specifying in the ""default save path"" to save files in "".\profile\qbittorrent\downloads"" relative to the qbittorrent.exe."
567573135,11614,sledgehammer999,2019-12-19T16:56:34Z,"guys, this is a closed pr. if you experience problems, then open a new report describing the issue as best as you can. and maybe leave a link here too."
567602237,11614,LeoKesler,2019-12-19T18:15:11Z,", the same happens if the torrents are saved in other driver letter. in this case, qbittorrent will copy the files to profile folder."
568038284,11614,a-raccoon,2019-12-20T18:35:15Z,"what is the explicit name of the ""automatically detected portable profile folder"" in the program directory under windows? assume no command-line switches are used. can the folder be empty, to generate a new ini file within, or must it contain a .ini file already? drive = `e:` programdir = `e:\qbittorrent\` autodetectportableprofiledir = `e:\qbittorrent\?` also recommend a `[x] install as portable (warning: do not install as portable to c:\program files\)` in the qbt installer."
568791910,11614,bacon-cheeseburger,2019-12-24T19:02:19Z,"i know this is late in the conversation but there are some things people need to remember when it comes to software... - user-defined paths should *always* be respected. - no app should take it upon itself to move/copy files from user-defined paths. trying to make apps ""smart"" by guessing what user intent is, almost always makes the app problematic. if i, as a user, want portable mode, *i* will tell the app, preferably by command line parameter. if i want to use a specific `profile`/dir for my config, *i* will tell you where to find it. - k.i.s.s. *always* applies! users who need/want to work outside of default settings know what they want. stop trying to make assumptions, just listen to what they're telling you via the command line. - good apps do what the user asks, no more, no less. bad apps argue with the user over what the user wants."
568804750,11614,a-raccoon,2019-12-24T21:42:42Z,"-cheeseburger : not all users have command-lines or want to use command lines or edit shortcuts with command-line switches. it is a very standard practice within the microsoft windows environment and culture for a portable app to work via automatic detection of a config file within the proximity of the exe file. same goes for dll files within the proximity of the exe. this is a defined standard. more and more windows apps behave in this way, because using third-party pseudo-portablizing containment sandbox tools (portableapps) is very ghey and unnecessary. qbittorrent is not moving nor copying anything. the user does this."
568808747,11614,olliebean,2019-12-24T22:51:27Z,"-raccoon : the problem isn't with how the portable mode is enabled, whether by a command line or automatically if the profile folder is detected alongside the exe file. the problem is with the portable mode being unable to correctly handle a user-defined path for where to store the downloaded files without losing track of said files and throwing up errors, and indeed with it moving the user's existing downloaded files out of their user-defined folders and into its profile folder without asking or informing the user. (i think we've established that it does do this, as it has happened to me and to other users on enabling portable mode.)"
568811867,11614,bacon-cheeseburger,2019-12-24T23:54:41Z,"-raccoon and a lot of users are **not** windows users. rather than trying to shoehorn/force windows quirks/oddities/etc's, apps should just simply listen to what the user is telling it whether it be by command line, config file, or otherwise. there's no reason an app should push back against user preferences. if the user _explicitly_ instructs the app to behave in a certain way, look for (pro)files in a certain place, etc. then do it. don't fight the user, just do it. another point of consideration for non-windows/linux users is many people don't tolerate the idiocy that is distro/filesystem hierarchy. instead they create more simple & sensible hierarchies that suit their needs and make things like creating backups vastly easier. generally speaking, puking files all over the place is just bad design."
568859027,11614,glassez,2019-12-25T07:45:59Z,"but this pr is about ""how the portable mode is enabled"". we didn't touch anything else here. so please stop littering this topic with problems that isn't directly related to it."
569987671,11614,eli-schwartz,2019-12-31T20:38:16Z,"why are you backing up program executables? if you're not backing up program executables, then none of this has anything to do with backups. complain about portable mode as you will, but simply enabling the mode when faced with a strictly windows-style layout should really not be affecting linux users for good or ill. and people doing backups of their profile data should not be using portable mode, as it will puke obtuse, bloated binaries all over their backups, which is just bad design for a backup system. p.s. any distro lets you create your own packages (some easier than others), which define whatever you darn well please, no matter how wrong you want to be... but it doesn't matter, qbittorrent is a single executable file, plus icons stored in the icon theme directory and accessed via `qicon::fromtheme()` to ensure users are permitted to theme the program themselves. so if you really, truly want to relocate /usr/bin/qbittorrent to /opt/lolware/my/path/is/the/best/qbittorrent, you can."
570480788,11614,bacon-cheeseburger,2020-01-03T06:46:03Z,"-schwartz what are you on about? nobody said anything about backing up executables but it wouldn't matter if they did. a lot of people *do* in fact backup executables for known-working compatibility reasons. and nobody said anything about relocating ""/usr/bin/qbittorrent"", if that's even where it's located, to anywhere else. and who cares about creating your own packages using whatever layout suits you if the program doesn't behave properly or in an expected manner according to the given settings?"
616598737,12557,glassez,2020-04-20T14:42:07Z,"well, i'll look into it asap."
619227512,12557,Piccirello,2020-04-24T20:36:34Z,"wow, someone actually implemented this! major props - you're going to get a lot of love from the qbittorrent community for this. this is a big change so it may take a bit to review. please include me in all web ui/api prs"
619314081,12557,glassez,2020-04-25T03:43:23Z,"sorry, what do you mean?"
619320400,12557,Chocobo1,2020-04-25T04:49:40Z,please remind/ask him to review all web ui/api related prs.
619970998,12557,glassez,2020-04-27T13:01:30Z,", please review this pr asap, since it's most wanted feature for many years."
628643567,12557,WolfganP,2020-05-14T13:41:18Z,any news on this pr? is there any showstopper?
628656575,12557,seproDev,2020-05-14T14:01:04Z,still waiting for people to test the functionality. other then that #12558 should probably be fixed before merging.
629117343,12557,glassez,2020-05-15T08:53:55Z,#12843 should probably fix it. can someone test it?
629154604,12557,seproDev,2020-05-15T10:16:26Z,works!
632689927,12557,seproDev,2020-05-22T13:26:58Z,rebased to resolve merge conflicts.
639186236,12557,Jylijs,2020-06-05T00:18:40Z,any update?
640747094,12557,RaduMemetea,2020-06-08T16:50:52Z,nothing new on this?
640750990,12557,glassez,2020-06-08T16:58:31Z,", if you don't have any serious comments in general, and you can't check it thoroughly, i would merge it as is and wait for user feedback. judging by the related issue, there is a fairly large user base."
640769313,12557,Chocobo1,2020-06-08T17:32:42Z,i'm ok if piccirello is fine with it too. what do you think?
640799538,12557,Piccirello,2020-06-08T18:33:55Z,i tested very quickly with a public rss feed i found online and everything seemed to work. i'm ok with merging as long as we have users thoroughly test it before it makes it into a release.
641064126,12557,Chocobo1,2020-06-09T06:35:06Z,thank you!
641102152,12557,glassez,2020-06-09T07:51:41Z,it would be useful if someone provides test builds with this feature merged.
641304476,12557,WolfganP,2020-06-09T13:40:34Z,"a quick test of a new master build worked perfectly (adding new subscription, updating it, selecting entry, getting details, double click to download). couldn't test the rules system via the webui, but will report later if any errors appear. thanks a lot !"
641326646,12557,FranciscoPombal,2020-06-09T14:16:23Z,"1 or 2 hours after this comment is posted, windows builds with this feature will be available here: [a link]"
642223257,12557,jobrien2001,2020-06-10T19:53:57Z,"i found a bug in the webui. it truncates an rss url string. max characters is set too low. tried a jacket rss url (which are somewhat long) and it cut the string at a certain point. try enter this and you will see. you wont get any results, but you can check in the feeds.json it has been cut. try ""[a link] also not sure where to post feedback on this new feature so i posted it here. should i have opened an issue? update: edited manually with nano feeds.json with and its updating the feed. now i have another issue. the rss downloader popup containing all the forms to create new rules, has all the forms disabled. no error shows on log or browser console. could it be the linuxserv docker image that is not good?"
642253880,12557,rmarble,2020-06-10T20:56:45Z,"i'm happy to help test and give feedback after i get my new server set up. but...i'm a bit of a novice, and have been doing my best to understand the technical part of all this. is this built in to a version of qbittorrent, or is there some extra wizardry involved to implement it? i appreciate your patience with a new linux user and right brainer. :)"
642256218,12557,jobrien2001,2020-06-10T21:00:27Z,setup docker on your environment then use this image: docker pull linuxserver/qbittorrent:4.3.0202006091235-7009-1720580ubuntu18.04.1-ls50 update: for more info on the variables go to [a link]
642599068,12557,seproDev,2020-06-11T12:02:33Z,"yes, that's definitely an issue. i think it should also be removed for newfolder and rename_feed. the forms stay disabled when you select a rule? what browser and os are you using?"
642603770,12557,jobrien2001,2020-06-11T12:10:58Z,"disabled as soon as i hit the autodownloader button and the popup loads. i cant create any rules. unraid this docker: [a link] brave, tried edge aswel."
642606582,12557,seproDev,2020-06-11T12:16:50Z,so the context menu doesn't load? the web ui is missing a dedicated add rule button and instead only has the context menu. maybe that should be added.
642607757,12557,jobrien2001,2020-06-11T12:19:38Z,"the rss popup for creating rules pops and i can see the forms, but the forms are disabled, so i cannot interact with them to create a new rule."
642609527,12557,seproDev,2020-06-11T12:23:50Z,when you open the rss downloader window the forms should be disabled since no rules is selected. when you right click on the left hand side the context menu should open to create a new rule. ![a link]
642612539,12557,jobrien2001,2020-06-11T12:30:33Z,i cannot test atm but i will report back and see if i can get past it. i would agree the add rule button should be there. maybe the forms hidden when they are in a disabled state.
642656381,12557,seproDev,2020-06-11T13:41:11Z,i have started work on fixes in [a link]. should i create an issue for each fix/commit or squash all changes?
642792660,12557,FranciscoPombal,2020-06-11T16:31:33Z,"fixes look good. i would say one pr for all these fixes, but with the 3 separate commits. then others can decide whether or not they should be squashed (in which case the purpose of each change should be mentioned in the commit message body)."
643015820,12557,jobrien2001,2020-06-12T01:33:31Z,"everything working properly from the ui, but there is still a problem with handling completed rss torrents. a lot of us use jackett as a proxy to get rss magnets. example rss item from jackett, note the id and torrenturl attributes (the id is a link to the page and the torrenturl a link that will redirect to a magnet). [code block] jackett's torrenturl and link attributes change every single time an rss is requested. if i set an autodownloader rule and it downloads an item it will not be marked `""isread"": true` on completion. this causes the downloader to redownload the article when there is a qb restart. for some reason i do not understand this only happens on a qb restart, in other words, it remembers it has already downloaded the article in the current qb process. i have 2 suspicions: 1. it could be the `id` attribute, note that most rss lists use the hash for an `id` while jackett uses a url link (a jackett limitation). maybe a variable type problem? 2. qb uses more than the `id` attribute to determine if an article should be marked `""isread"": true` (which it should not). i suspect it could use the feedurl as well, and since the feedurl change constantly this could be interpreted as a new item. also, jackett links cannot be magnets because of the way it works so this could also be the culprit. i did some digging and these 2 blocks of code look where this is happening in rss_autodownloader.cpp i do not know the language so please forgive any errors in my assessment. [code block] ""if (feed *feed = session::instance()->feedbyurl(job->feedurl))"" this may not pass because the feed url in the json may not be the same as the one obtained when accessing torrenturl. [code block] ""if (bittorrent::magneturi(torrenturl).isvalid()) {"" torrenturl's provided by jacket are not magnets, so this may not pass. ""if (feed *feed = session::instance()->feedbyurl(job->feedurl)) {"" and this line pops again."
643047647,12557,jobrien2001,2020-06-12T03:40:40Z,"update: if i download manually the rss article in the webui by using the rss tab and right clicking on a giving article and selecting download.... it will correctly mark the article with `""isread"": true` something must be different in the rss auto download code. here is confirmation that its working properly marking `""isread"": true` by downloading manually from rss list: [code block]"
643069248,12557,glassez,2020-06-12T05:14:15Z,", your last comments are unrelated to both current topic and webui. if you want to report some problem in rss core functionality you should create separate issue (one issue per problem)."
643761266,12557,jobrien2001,2020-06-14T12:39:12Z,add rule button and feed max length is working now. manual download button is working and so is open news. btw the buttons looks great and the user interface looks more straight forward because of them.
643771929,12557,jobrien2001,2020-06-14T14:11:37Z,"not sure if this is webui or another rss core problem. -add a feed -add rule assigned to that feed. -delete feed rule still exists assigned to that feed (which doesnt exist anymore). `""affectedfeeds"": [xxxxxxx]` this might be harmless or intended to preserve the rule settings. the reference to the feed can be removed by simply opening the rule and hitting save again."
644539847,12557,jobrien2001,2020-06-16T05:30:20Z,3 days running without a problem. 1 thought about the icons: i found myself clicking on the big trashcan icon on the main toolbar instead of the small trashcan when trying to delete a rule. maybe a plus and minus would be better choice for icons to distinguish from the main toolbar. created a separate issue. thank you.
644553116,12557,seproDev,2020-06-16T06:11:34Z,"as long as this doesn't break anything i would keep it as intended behavior. even if this were considered a bug i don't think the webui should deal with it. instead that should be changed at api or core level. currently all shown icon are identical to the desktop ui. if we were to change them here they should also be changed in the desktop ui. i thought about adding icons to the ""new subscription"", ""mark items read"", ""update all"" and ""rss downloader..."" buttons. the problem is that it the regular buttons are styled by the browser and thus the custom styling for the image buttons would only really be fitting for one browser."
644555152,12557,glassez,2020-06-16T06:16:55Z,"it's a disadvantage of currently used approach, imo. i have repeatedly suggested that we separate web ui from desktop ui completely. really they are separate applications."
644849895,12557,Piccirello,2020-06-16T15:49:17Z,"i've yet to see this suggested by anyone that actually uses the web ui. if this split were to happen, i predict that the web ui and apis would quickly fall behind in functionality."
645650493,12557,jobrien2001,2020-06-17T22:05:05Z,"may i suggest an enhancement? a size column in the rss list, if thats its available in the api. some feeds do provide a size attribute."
645669566,12557,FranciscoPombal,2020-06-17T23:00:28Z,please open new threads to discuss each new bug or feature.
917433554,15452,glassez,2021-09-11T16:23:09Z,"i think there are other suitable candidates to be moved in ""torrent options"" dialog. offhand, these are the following: 1. save path 2. sequential download 3. download first and last piece first"
917563669,15452,Chocobo1,2021-09-12T06:01:29Z,i like this better.
918134033,15452,thalieht,2021-09-13T12:18:01Z,"i've been trying to think about the relationship of autotmm and save path (should save path be disabled when autotmm is enabled?) but i now tested how ""set location..."" works: it disables autotmm, so i don't think there should be any interaction between these 2. let me know if i'm wrong. which brings me to the layout. now that i added the save path does that still apply? if yes should i move autotmm above the download... checkboxes? if anyone has a better idea on where to put the new options (autotmm, save path, download....) let me know. ![a link] moved, as in... remove the originals? although autotmm was convenient for me to have it in the context menu, moving it was a necessary evil because it was.... accident prone. but save path? now users would have to do 2 extra clicks for that. p.s. i moved code around for the new options to be inline with how they are shown in the gui (currently)."
918152181,15452,glassez,2021-09-13T12:42:39Z,"yes. otherwise what's the point to move it there? i am always annoyed by these complaints about a couple of extra clicks, unless it is something that is really often used. when i implemented autotmm, it could have been one of two: 1. explicitly setting the save path disables autotmm 2. setting the save path is disabled/prohibited if autotmm is enabled. i chose the first option because of the simpler implementation. but it seems to me more confusing, so now i would prefer the second option (as it is done in the ""add new torrent"" dialog)."
918153944,15452,glassez,2021-09-13T12:45:08Z,"if anyone has a better idea on where to put the new options (autotmm, save path, download....) let me know. well, it should at least be located alongside with ""save path""."
918390903,15452,thalieht,2021-09-13T17:02:23Z,"consolidation, for when people want to change e.g. 3 things at the same time they don't have to open 3 different dialogs. you're right, for options like the ones in the advanced tab, which you set and forget. hide them behind 5 clicks, no problem. but you can't call a ""volatile"" option such as the save path that some people may want to change for every torrent as ""not often used"". anyway i don't really care about it personally. you want the shortcuts gone, they're gone."
918401773,15452,glassez,2021-09-13T17:14:39Z,that was just my opinion. other members may still worry about a couple of extra clicks.
920555347,15452,Chocobo1,2021-09-16T03:55:21Z,no strong opinion from me.
922259978,15452,thalieht,2021-09-18T11:05:43Z,i squashed all commits.
925698446,15452,thalieht,2021-09-23T10:43:59Z,that was harder than i thought. i double checked everything but i probably missed something. edit: forgot pic ![a link]
926028867,15452,ArcticGems,2021-09-23T17:51:36Z,maybe it would look better if 'save path' and 'category' was inside a box just like the 'torrent speed limits' and 'torrent share limits' options??
926794448,15452,thalieht,2021-09-24T17:17:42Z,i'm neutral.
926803173,15452,xavier2k6,2021-09-24T17:31:29Z,what about `tags`? to me it looks fine from the screenshots.
926814725,15452,ArcticGems,2021-09-24T17:50:18Z,"ok :thumbs_up: imo by having the autotmm checkbox above 'save path' and 'category', makes it look ""unbalanced"" and that's why i made the suggestion. anyway, it's not important, so keep it as-is. :thumbs_up:"
927124425,15452,thalieht,2021-09-25T13:50:54Z,beyond my capabilities.
933073084,15452,Chocobo1,2021-10-04T01:23:46Z,"the ci errors are strange, try do a `git rebase master`."
933361588,15452,thalieht,2021-10-04T10:43:36Z,"i had to re-add `#include ""base/utils/fs.h""`in transferlistwidget because of [a link]"
938751399,15452,thalieht,2021-10-08T15:57:00Z,"i separated ""mixed categories"" from ""no category"" in the category combobox. edit: changed signal for category combobox from `qcombobox::currentindexchanged` to `qcombobox::activated` because if the ""currently used categories"" item was already selected and it was clicked again, it would fill the combobox with the text that should be placeholder. /offtopic you guys probably already know this but i worry you're re-reading the whole diff every time: you can click on ""forced-pushed"" to see the diff from the last force push."
939327832,15452,glassez,2021-10-09T17:00:00Z,"i'm sorry, i need more time to sort this out. but first of all i would like to clarify the intended behavior. i am interested in whether we should allow some setting to return to its original state if it was ""mixed""? for example, should we allow the user to set the checkboxes to a ""grayed"" state after it has left it once? or the category back to ""currently used categories""?"
939354892,15452,thalieht,2021-10-09T20:04:58Z,yes imo.
943411006,15452,FranciscoPombal,2021-10-14T14:25:50Z,"(posting outside of the review sub-thread for more visibility) you could set the existing category save path as the placeholder text of the lineedits: [a link] this way, i believe it is much easier to reason about the state of the lineedits. - the lineedit never has text when the torrent options window loads, only placeholder text. - if a torrent has a category, the placeholder text shows the category name. - if a torrent doesn't have a category, the placeholder text shows ` ` - if the dialog refers to multiple torrents, and there are mixed categories, the the placeholder text shows ` `/` ` - same logic for the save path lineedit. to allow people to change from ""mixed categories"" to ""no category"", add a `no category` checkbox that clears and disables the category lineedit when checked. this should hopefully cover all edge cases while presenting an intuitive ux to the user. edit: ok now that i've built it i see that you are actually already using placeholder text, missed that in my initial rushed scan of the code. hopefully my other suggestions are useful."
944897590,15452,glassez,2021-10-16T10:58:30Z,"but iirc this is not implemented currently even for simpler properties! why break your brain trying to do this in such a difficult case, if it will also generate inconsistency?"
944939658,15452,thalieht,2021-10-16T15:55:03Z,"thanks for the comment. i'm not against placeholders but the way i've done things in this dialog, it would probably complicate the implementation... even more. i've set a placeholder for mixed categories because any string can be a category and i couldn't think of a good way to reset to mixed categories. i've thought about the checkbox or even a push button but thankfully, i found this way of setting the first item in the combobox as mixed and handling any interaction with it. it's not perfect because it can only be reset by selecting it from the combobox but it's the best i can think of. i'm definitely open for suggestions on mixed categories placeholder text though (""--currently used categories--"" at present) assuming doesn't make me remove it. well, checkboxes have it. anyway i've already done it for categories. are you telling me to remove it for... consistency? it's not that i don't want to have it for everything, i just can't think of a good way to do it for the other properties."
947741257,15452,glassez,2021-10-20T14:46:40Z,"do you mean that the user can switch checkbox to `qt::partiallychecked`? well, then it should be available only if the checkbox was `qt::partiallychecked` initially, otherwise it is meaningless/confusing. ok, let's leave it as is for now. what controls do you mean exactly? maybe they can have some ""special"" or empty value?"
947854303,15452,thalieht,2021-10-20T16:55:53Z,"of course, and that's how it is. speed and share limits. speed limits use the special value as ""inequality"" for mixed torrents and if the limit is changed, then it's used for ""no limits"", and share limits have no radiobutton checked for mixed. i can't find a way to allow users to uncheck a radiobutton (click on the currently checked to uncheck it so all radiobuttons are unchecked)."
948359667,15452,glassez,2021-10-21T08:02:42Z,"iirc, you can play with [a link]. it allows you to have radio buttons unchecked when its ""exclusive"" property is set to `false`. unfortunately you can't keep it always `false` since it allows you to check more than one radiobutton. but you can set it to `false` once already checked radio buttons is clicked and set it to `true` once unchecked radiobutton is clicked."
949515631,15452,thalieht,2021-10-22T10:55:06Z,thanks alot! done.
964780685,15452,Chocobo1,2021-11-10T04:40:04Z,thank you!
1007922008,15452,debiedowner,2022-01-08T09:25:31Z,"since mentioned his annoyance by the ""complaints about a couple of extra clicks, unless it is something that is really often used"", let me discuss why i used to use the ""download in sequential order"" & ""download first and last pieces first"" options in the context menu very often. of course, while i think that my use case is reasonable, i don't know how common it is, but let me explain it anyway as a data point. when adding a torrent of a media file, i usually select ""download in sequential order"" in the add torrent dialog, in order to be able to preview the media file to make sure it's correct, ensure its quality etc. once enough of the file is downloaded and i previewed it, i turn off the ""download in sequential order"" option to let it download most optimally for the swarm. occasionally, i find that the media file also needs the end of the file to open, in which case i select the ""download first and last pieces first"" option. i don't select it in the add torrent dialog for all torrents, because often it is not needed, and it can take a long time in slow torrents and delay being able to preview the file, especially since #3816 significantly enlarged the percentage to be downloaded at the end and there is no option to decrease it. so i used to use these two options at least once for *almost every single torrent*, often twice, and sometimes more. this change, which makes it more cumbersome to change these options, encourages me to leave the torrents at downloading sequentially. #164 has a lengthy discussion of why that might be bad. so i was disappointed to see that qbittorrent 4.4.0 pushes me to bad behavior for the health of the swarm, in addition to make things more inconvenient. also, i am less likely to notice that i left the file downloading sequentially and i should change it, since now this information is hidden in the torrent options dialog, whereas it used to be always in-my-face as it appeared as a check mark in the context menu. in any case, i don't expect this change to be taken back, and if any options were to come back to the context menu, i guess those are more likely to be the category option or maybe set location action, as they seem to be getting more complaints (#15946, #15965). since the other two are unlikely two come back, i would at least love to be able to open the torrent options more quickly, with a hotkey, as i mentioned in this issue: #15980"
1008072837,15452,glassez,2022-01-08T17:31:17Z,"please don't take my words out of context. it really annoys me when it comes to things that are not so often used. it is a pity that you (and everyone else who is affected by these changes) did not participate in this topic when it was opened. well, i get your point. apparently, we need to return these items to the context menu. ideally, i would suggest making this menu configurable."
1008153245,15452,debiedowner,2022-01-08T21:05:05Z,"my apologies, re-reading what i wrote, i realized that quoting you in that fashion can be read like i am disagreeing with you, and even being confrontational, which was not at all what i intended. of course you are right that complaining about extra clicks are pointless without making a case that they need to be used often. i started with that quote merely to give a justification for barging in to the discussion that is already finished; maybe if i had said ""since rightfully mentioned his annoyance..."" it would be more in the tone i intended it, or better yet, i should have omitted it altogether. and you are also right that i should have made this point earlier before this change was made. i recognize that i am late, that's why i didn't want to be one of those ""change was bad, reverse it"" people creating new issues and complaining. i had actually made peace with the fact that the decision was made to move them to the torrent options dialog, so i was just proposing that a way to access that dialog more easily could soften the blow, as had earlier discussed. i explained my reasons for using these two options often only to support that proposal, though i would of course be happy to see them return to the context menu."
1187426978,17389,glassez,2022-07-18T13:27:12Z,"/bug-handlers could someone do preliminary tests? also, there is no message in the progress dialog yet, so i would like someone to suggest it."
1187749207,17389,ghost,2022-07-18T16:53:16Z,nice! 10k dummy torrents without any files restored in ~5 seconds! i then went ahead and deleted all torrents when tracker announces were still in progress. noticed a issue where the status bar filters remained at 10000 and did not update. trackers sections also showed wrong info. ![a link] **edit:** this issue with filters does not occur on master.
1187762315,17389,thalieht,2022-07-18T16:58:49Z,"i tested with the 10k torrents from here [a link] - tracker error filter counter counted up at a steady pace but stopped at a non-fixed number fewer than the total amount of torrents (sometimes 100 sometimes 400 and anything in between). - i deleted a massive amount of torrents at once (>7000) and some filter counters weren't updated or worse. as i said before the counter error filter was counting up at a steady pace and i think this was the number it had reached when i deleted the 7k: ![a link] - when all 10k are resumed, there is a few second freeze after the loading progress bar where everything is frozen as before the ""improve startup"" pr and i can't interact with the gui unless the progress bar is shown (at 100%) for those few seconds in the end but i suppose that's normal. last few startups it's the second one and i don't know how to reproduce the first but i thought i should mention it just in case. - it's unexpected to me that i can't minimize qbt while torrents are loading. - first time i tested minimize to tray + minimize on startup causes the startup progress bar to stop loading after i click the notification or the tray icon, don't remember what i did, and i can only click ""cancel"" at which point it crashes. i can't reproduce again: [code block] `loading torrents...`?"
1187839058,17389,glassez,2022-07-18T17:22:34Z,as for the crash reported above. you most likely use libtorrent-1.2 based build and you are under the issue mentioned by me in [a link]
1187863079,17389,thalieht,2022-07-18T17:28:50Z,"as for the crash reported above. you most likely use libtorrent-1.2 no, the 2.0.6 from ci."
1187910378,17389,glassez,2022-07-18T17:42:09Z,the same thing either. the fix is merged between 2.0.6 and 2.0.7.
1187998554,17389,xavier2k6,2022-07-18T18:07:32Z,it might be best to get [a link] merged first?!
1188106211,17389,glassez,2022-07-18T18:44:37Z,it matters only for testing using ci artifacts (and only for libtorrent-2.0 based builds). anyway this pr is currently draft and #17385 is already approved so it'll be merged soon.
1188129369,17389,xavier2k6,2022-07-18T18:54:39Z,"i know, but sometimes it's easier/convenient that the builds are available via actions than building them ourselves...."
1191392915,17389,glassez,2022-07-21T11:55:10Z,"pr is updated. the issue with filters should be fixed now. you can still hide/show it by clicking on tray icon. if you really care about minimizing the only thing i can think of is to add minimize button to progress dialog and try to minimize both dialog and main window together (i'm not sure i'll be able to do it). in any case, seeing progress dialog without the possibility of minimization is not such a bad option compared to a completely unresponsive ui, as it was before (before the ""improve startup"" pr was merged)."
1191394565,17389,glassez,2022-07-21T11:56:58Z,could you compare the startup speed of this pr and master branch on your machine under the same conditions?
1191425700,17389,ghost,2022-07-21T12:30:36Z,"in master it took the same time. however i noticed a bug in master if i add 10k torrents at once (in paused state, torrent content and options dialogue disabled) and close the client too quickly(obviously after 10k torrent finished loading), then i do not have all 10k torrents on next start. but if i wait a few seconds after adding all 10k, then all torrents load up in next startup. i think the shutdown process cancels ongoing background job of adding torrents without notifying the user. edit: most likely the resume data writing process gets cancelled."
1192287455,17389,glassez,2022-07-22T07:49:30Z,"well, or go back to my idea to show only the progress window (which has a minimize button), and create the main window only after the session is restored."
1193243423,17389,ghost,2022-07-24T04:17:23Z,what would happen when someone actually wanted qbt to start minimized to tray icon? they wouldn't want to see the progress i guess.
1193245576,17389,glassez,2022-07-24T04:38:28Z,currently they won't see any dialog unless clicked on tray icon.
1197720507,17389,glassez,2022-07-28T06:29:46Z,"oops... i forgot to remove the extra delay that i originally used for testing with a small number of torrents: [a link] otherwise, your results look strange. for me, the acceleration compared to the master is visible to the naked eye (but i did not measure it in detail)."
1197738436,17389,ghost,2022-07-28T06:53:20Z,"this bug still exist. 10k torrents restored in 2 seconds now! i consider this a great improvement! however, if i turn on windows defender, it takes around a minute to restore all torrents. edit: the last statement is true only for the first startup after enabling defender. subsequent ones take 2-3 seconds. more edit: its also true after rebooting the system. defender seems to slow up qbt startup a lot!"
1197751069,17389,ghost,2022-07-28T07:07:48Z,this issue does not happen with sqlite database. so i guess defender is scanning all those individual fastresume metafiles when qbt is accessing them and thus delaying the startup significantly. one more reason to switch to sqlite by default maybe? also it seems with sqlite i don't even get the loading screen with 10k torrents..they just load up so damn fast!
1197754147,17389,glassez,2022-07-28T07:11:08Z,"it is another issue, isn't it?"
1197757980,17389,glassez,2022-07-28T07:15:19Z,"one more reason to switch to sqlite by default maybe? [a link] people still see some problems with it. however, it seems objective to me only the need for the possibility of creating backups while the application is running."
1198070984,17389,glassez,2022-07-28T12:24:11Z,"it is ready in general terms. it still doesn't fully follow the behavior of the main window and i really doubt that this is really required: 1. progress dialog has a minimize button, but it is always simply minimized to the taskbar regardless of the ""minimize to tray"" setting, you can minimize to the tray only by clicking on the tray icon itself (but it still does not start visible if both ""minimize to tray"" and ""start minimized"" settings are set); 2. main window just starts depending on settings and not follows the current state of progress dialog (so if it is configured to start minimized to tray it is really started minimized to tray even if progress dialog was previously opened from tray by user)."
1198636950,17389,glassez,2022-07-28T21:13:29Z,", could you test and feedback it as well?"
1200346758,17389,oorzkws,2022-07-31T04:39:33Z,"caveats: i built this on the current libtorrent rc. questions: 1. it's not clear what will happen if i hit cancel on the loading pop-up. does this cancel loading the torrents, exit the program, or something else? if it does exit, maybe changing ""cancel"" to ""exit"" would be appropriate? 2. i'm not seeing the progress bar move at all despite the numbers in the background showing progress being made (at this point, around half of my torrents have been rechecked and all are loaded). ![a link] is this unimplemented, a bug, or something behavior wise that i'm misjudging? notes: - i really appreciate that it respects the start minimized setting - i haven't yet finished a whole load cycle, i'll update this comment if anything else comes up"
1200347212,17389,glassez,2022-07-31T04:45:15Z,seems you use wrong commit to test. now it shows only progress dialog until all torrents are loaded.
1200347491,17389,glassez,2022-07-31T04:47:21Z,", /bug-handlers, should i change the button text?"
1200348077,17389,oorzkws,2022-07-31T04:51:54Z,"thanks, i had done the build after you mentioned me initially. i'll rebuild on current."
1200351065,17389,ghost,2022-07-31T05:16:58Z,maybe cancel and exit is more appropriate.
1200352435,17389,ArcticGems,2022-07-31T05:30:59Z,maybe 'exit' is better than 'cancel' in this case.
1200355161,17389,oorzkws,2022-07-31T05:56:32Z,"![a link] hm, rebuilt on the current commit and still not seeing progress. the window doesn't come up behind though so i'm not sure where i ""really"" am progress-wise. i'll give it some more time. edit: now seeing progress, went from 0% to 100% quite quickly. ![a link] all in all, it seems a bit less useful than tracking by gui numbers (primarily total torrent count and rechecking torrent count) but if it makes it load faster in general i'm all for it. perhaps a number of n/total count would be useful in this dialog? otherwise, no issues."
1200364760,17389,Chocobo1,2022-07-31T07:12:07Z,:thumbs_up:
1200367747,17389,glassez,2022-07-31T07:34:33Z,so what is its use? how practically could you use these numbers?
1200372355,17389,oorzkws,2022-07-31T08:08:00Z,- seeing the total count lets me verify that the client has recognized the correct amount of torrents - seeing the current count provides a more granular progress count (i.e. 1 of 32300 loaded stepping to 2 of 32300 loaded is more useful than 0% stepping to 0%) - having both pieces of information available lets me guesstimate the total load time or see if slowdowns are happening at certain points
1200383014,17389,glassez,2022-07-31T09:04:43Z,"maybe it's important when you have 200k torrents, but still... how would you use this information before the app if completely loaded? it is still updated once for several (dozens) torrents. hardly much more accurate given the above (unless you have a lot of torrents on a very slow system). well, for example, it was slightly delayed at 678/10000. what practical benefit could you derive from this information? in addition, it may make startup progress reporting less scalable. i mean, if the startup process will include any more tasks in the future. edit: it also seems to require more cumbersome logic to set progress dialog range..."
1200385152,17389,oorzkws,2022-07-31T09:16:45Z,"mainly for power outages/crashes/instance migrations where that information is useful. bug reports :grinning_face_with_smiling_eyes: the last time i ran into something like this, i ended up parsing the log to graph torrents/minute loaded over a time period. having a simple display for troubleshooting can mean a lot. at the end of the day, it's your call. if you see it as not being worth the time, that's fine - i'm just providing cases where such information has been useful to me."
1200386861,17389,glassez,2022-07-31T09:27:57Z,"maybe leave ""detailed reporting"" for the further improvement? it requires more serious reflection, imo."
1200387633,17389,oorzkws,2022-07-31T09:33:07Z,"that's fair. things can always be refined, and the current iteration is plenty functional."
1200439743,17389,glassez,2022-07-31T14:47:56Z,fixed. now if app started hidden but then user opens progress dialog and doesn't hide it again until session is restored main window will start as opened as well.
1200454448,17389,glassez,2022-07-31T16:13:41Z,"another disadvantage turns out to be that `qprogressdialog` uses the `int` type for the value, while the torrent loading code theoretically supports more torrents (at least with qt6)."
1203462864,17389,glassez,2022-08-03T04:15:09Z,thanks to all the reviewers and testers!
1203471249,17389,glassez,2022-08-03T04:30:47Z,"now we are ready to v4.5 beta release. unfortunately, we have problems with compatibility with libtorrent-1.2 due to the fact that [a link] is still not backported there (and i'm beginning to doubt that it will be). in any case, it would be nice to get your support in the mentioned pr (preferably, not just a thumbs up, but reasoned arguments). in any case, if it does not resolve in our favor, i will use a workaround, although in this case the startup performance will decrease."
1203572839,17389,oorzkws,2022-08-03T07:12:09Z,"i'll comment here so i don't clog the pr, but wouldn't a behavior change such as this (with a user claiming they had expectations based on previous, bugged, behavior) preclude the change from being backported? since while it does fix a bug, it can be ""breaking"" in changing the behavior patterns for that branch."
1203671415,17389,glassez,2022-08-03T08:53:55Z,"maybe i'm the one who is wrong, but for me, arguments like ""don't fix this error, as it will break my workaround for it"" don't look reasonable."
1203891894,17389,glassez,2022-08-03T12:35:08Z,i suppose i still found a way to fix it without losing performance. see #17491.
1203900599,17389,ghost,2022-08-03T12:43:18Z,if we aim to release 4.5.0 beta with both rc1_2 and rc2_0 build then there would be a lot of builds for the user to choose from..i guess we should only make a qt6 and rc2_0 beta release of 4.5.0 and keep the rc1_2 and qt5 builds for 4.4.x series.
1204130700,17389,glassez,2022-08-03T15:44:59Z,"i don't think it's a good idea to leave libtorrent-1.2/qt5 based variants without public beta testing. i am sure that we will still have to produce ""stable"" releases of v4.5 branch based on them."
1207136347,17389,Chocobo1,2022-08-06T03:26:29Z,"i'm having a some crashes now. i have 0 torrents in qbt. and the crash occurs when starting qbt. sometimes it will crash, sometimes it won't. when qbt crashed, the startup progress dialog is shown with 100% along with the stackdump dialog. another weird problem is, when qbt started up successfully, the ""add .torrent file"" menu option & button is missing. not sure if it is related to the same root issue. not sure if it is my own problem but i think it is worth looking in. qbittorrent version: v4.5.0alpha1 (64-bit) 7f40602da927bffcf38cbaaab4b8b111e747cec4 libtorrent version: 2.0.7.0 qt version: 6.3.1 boost version: 1.79.0 caught signal: sigsegv [code block] gdb stack trace: [code block]"
1207137981,17389,glassez,2022-08-06T03:37:42Z,i'll take care of it asap.
1207204142,17389,glassez,2022-08-06T12:13:47Z,couldn't reproduce it on windows (but found other bug). will try on linux as soon as i can.
1207240167,17389,glassez,2022-08-06T16:09:37Z,i found a bug. fix is coming soon.
1207245180,17389,glassez,2022-08-06T16:44:35Z,added as a second commit in [a link]
1224884470,17389,xavier2k6,2022-08-23T21:03:46Z,"looking through ci logs, this pr seems to have introduced this: `d:/a/qbittorrent/qbittorrent/src/app/application.cpp:806: tr() cannot be called without context` currently in `master` it is now `line 845`: [a link]"
1905034480,20314,luzpaz,2024-01-22T23:45:19Z,commit has a typo in the title: dor -> for
1906809085,20314,pktiuk,2024-01-23T19:46:02Z,should i also update api version?
1913348143,20314,pktiuk,2024-01-27T22:03:38Z,could you look at this code?
1913480108,20314,glassez,2024-01-28T07:03:32Z,"it would be more clear and robust if it just returns content of given directory (only subdirectories if we don't need files). also it should be named based on what it does (e.g., get directory listing), not what it could be used for in any particular case (autocompletion etc.)."
1913628431,20314,pktiuk,2024-01-28T15:10:57Z,"this is exactly why i used name autocompletion, because it completes provided paths. (not only lists directories) maybe it is a better idea. filtering paths can be done on the frontend side and seems to be a bit more universal."
1913630220,20314,glassez,2024-01-28T15:16:40Z,exactly. it is enough to get the directory listing only once.
1913630485,20314,pktiuk,2024-01-28T15:17:26Z,is it good now?
1913633953,20314,glassez,2024-01-28T15:27:18Z,"no. i would expect that its parameter is the path to the target directory (i.e. the one whose list of subdirectories you want to get), and not to some of its file/subdirectory."
1913675256,20314,pktiuk,2024-01-28T17:58:34Z,it should be good now.
1914332514,20314,glassez,2024-01-29T09:51:21Z,are you the one who intends to add some functionality to webui that would use this api?
1914497524,20314,pktiuk,2024-01-29T11:27:30Z,"yes, i want to implement it, but i would like deal with it later in separate pr. afaik other webui-s may be also interested in this api ([a link] )."
1925432489,20314,pktiuk,2024-02-03T19:12:20Z,a stupid mistake while pushing. code should be fine now.
1944485807,20314,pktiuk,2024-02-14T19:48:03Z,"api description to be pasted into wiki ### get directory content name: `getdirectorycontent` |parameter| type| description| |-|-|-| |dirpath|string| absolute path to directory| |show|string|define which elements should be listed: `all`, `files`, `dirs`| returns: |http code|scenario| |-|-| |200|success| |400|invalid path| |404|directory not found| in case of success, the response will be a json array with the names of elements in the directory. for example `/api/v2/app/getdirectorycontent?dir_path=%2fhome&show=all` could return: [code block]"
1944520270,20314,pktiuk,2024-02-14T20:14:13Z,"tbh i find setting up an environment for qbittorrent really annoying and problematic (mainly because of the new qt, boost and libtorrent), so i created a simple docker for development. would you be interested in contribution with dockerfile and simple instruction how to use it? later it could be used for creating easy configs for [a link] and would allow app development using [a link]. it would make life for new developers much easier."
1945324292,20314,glassez,2024-02-15T03:57:05Z,"why to mix naming conventions? it should be `dirpath`. btw, just path should be clear enough within the context of `getdirectorycontent`."
1945325763,20314,glassez,2024-02-15T03:59:52Z,"this name is more appropriate for ui than for api. imo, it would be better to use something like `mode`."
1945757048,20314,pktiuk,2024-02-15T10:10:37Z,done
1945934149,20314,Chocobo1,2024-02-15T11:45:11Z,"although it is not for development, we already have something alike: [a link] speaking for myself: * devcontainers that probably would help other newcomers. however, i already have my own dev environment in archlinux. setting it up for qbt is dead easy and therefore i probably won't be maintaining devcontainers. you'll have to be sure that it won't rot through the test of time. * github codespaces i'm not interested."
2083359317,20314,glassez,2024-04-29T18:13:46Z,thank you!
788393533,14465,FranciscoPombal,2021-03-01T23:29:49Z,"haven't tested this yet, but the cmake bits lgtm at first glance."
788608409,14465,glassez,2021-03-02T05:29:33Z,"and you won't be able to do it, since it's not even going to be successfully built at this stage yet."
788811473,14465,xavier2k6,2021-03-02T10:42:34Z,i dunno if you have already seen this or if it will be of any help to you: [a link] [a link]
803038090,14465,glassez,2021-03-19T18:44:33Z,", can you adjust github ci configuration for this pr?"
803983583,14465,xavier2k6,2021-03-22T11:16:40Z,vcpkg still doesn't have support for qt 6.x.x as it's still a wip ref.: [a link] they will probably need some help over there... a possible alternative could be [a link] for local building/testing? qt 6.0.3 should be out this week/latest next..
804022830,14465,glassez,2021-03-22T12:25:09Z,"well, it finally compiles successfully on windows using official qt 6.0.2 installation: ![a link] the first thing that catches your eye is the broken progress bars: ![a link] ![a link]"
804026989,14465,xavier2k6,2021-03-22T12:35:18Z,i wonder is that over the recent pr to change to `progressbarpainter` class?
804029628,14465,FranciscoPombal,2021-03-22T12:39:14Z,"sure, i'll use the current wip version at [a link] hopefully it's usable."
804030202,14465,glassez,2021-03-22T12:40:16Z,"it still works fine in qt5, doesn't it? but this is definitely due to its manual painting."
804031132,14465,glassez,2021-03-22T12:41:52Z,", ping."
804037781,14465,xavier2k6,2021-03-22T12:53:31Z,just checked latest gha master & it behaves as expected....
804043662,14465,jagannatharjun,2021-03-22T13:02:41Z,maybe because someone removed this flag in the current master [a link]
804124279,14465,glassez,2021-03-22T14:52:25Z,good catch :thumbs_up: confirmed.
804130761,14465,Chocobo1,2021-03-22T15:00:30Z,it looks like a qt bug to me. maybe add `m_dummyprogressbar.setorientation(qt::horizontal)` in `progressbarpainter::progressbarpainter()` or `styleoption.state = (option.state | qstyle::state_horizontal);` if the first didn't work.
804132340,14465,glassez,2021-03-22T15:02:30Z,"i came across a crash related to the rss subsystem. i'll try to debug it later. as for supporting other oses, that's a problem for me. at least until i'm provided with a workable ci environment."
804135472,14465,Chocobo1,2021-03-22T15:06:19Z,maybe you can consider splitting some of this pr. i see some of the changes are eligible for merging by adding appropriate conditionals to qt6. if we are lucky we might be able to support both qt5 & qt6 at the same time.
804135498,14465,glassez,2021-03-22T15:06:21Z,"it helps. i tried it first before i wrote ""confirmed"" above."
804137773,14465,Chocobo1,2021-03-22T15:09:23Z,"please help yourself (adding a commit), i don't have qt6 setup yet."
804152031,14465,xavier2k6,2021-03-22T15:27:48Z,did you configure qt `statically` or `dynamically`?
804160229,14465,glassez,2021-03-22T15:38:20Z,"as i said before `replace qstringref with qstringview` contains the biggest and most inconvenient changes. embedding it in the current codebase can generate a hell of a lot of conditional code. besides, i don't know what we can do with the build systems to support both qt versions at the same time."
804162133,14465,glassez,2021-03-22T15:40:50Z,as i said before i use **official qt installation**. it provides dynamic libraries.
806027164,14465,glassez,2021-03-24T17:40:10Z,"for those who want to test it on windows, i can provide my custom build in the archive."
806147280,14465,xavier2k6,2021-03-24T20:00:29Z,"please do, it would be interesting to see if qt6 fixes some of the gui issues etc"
806151226,14465,glassez,2021-03-24T20:03:25Z,how can i share it?
806180077,14465,xavier2k6,2021-03-24T20:55:02Z,do you have dropbox? upload to mega?
806864975,14465,glassez,2021-03-25T14:36:26Z,"[a link] please try this. if it doesn't work because of the lack of some runtime library, tell me what it requires more."
806972633,14465,xavier2k6,2021-03-25T15:42:18Z,"thank you, have given it a quick whirl via `portable mode` seems some of the gui issues that have been reported still remain (as i was expecting they would)"
814092157,14465,glassez,2021-04-06T12:47:47Z,"now there is only one commit left with the code changes. actually, it contains two types of changes: replacing `qstring::splitbehavior` with `qt::splitbehavior`, and replacing `qstringref` with `qstringview`. i can include these changes in the current codebase conditionally, which will generate a lot of such conditional constructs in the code. either i do it in an unconditional form, but target these changes to the milestone where the qt minimum version will be increased to the required level: 1. qt 5.14 for `qt::splitbehavior` 2. qt 5.15.2 for `qstringview` what do you think about?"
814590221,14465,Chocobo1,2021-04-07T04:25:59Z,i would chose this.
814755292,14465,glassez,2021-04-07T09:20:38Z,"then there is no point in doing this now, but only when the corresponding milestone is started. in any case, i intend to rebase this pr from time to time and provide test builds."
814818517,14465,sledgehammer999,2021-04-07T11:00:28Z,"i am contemplating this plan: ubuntu 21.04 lts is going to be released sometime this month. there can be another **final** release in the v4.3.x series this month. then we switch to 4.4.x and drop ubuntu 20.04. thus having as minimum qt 5.14. however, i don't yet know when we should support 5.15 only. we could also drop ubuntu 20.10 for 4.4.x but imo it sounds a bit strict atm. are we depended on the various qstringview::tolong/int etc functions or only to the ::split() function? if only ::split(), then it seems trivial to implement our own version of it for <5.15.2 targets."
814845664,14465,glassez,2021-04-07T11:41:24Z,not only `split()`.
815122098,14465,glassez,2021-04-07T18:15:41Z,":thumbs_up: maybe in qbittorrent v4.5? it is unlikely to be released before the fall of 2021. i would prefer that we have a codebase that is fully compatible with both qt 5 and 6 versions, for the lifetime of at least one minor version of qbittorrent."
815180476,14465,sledgehammer999,2021-04-07T19:49:34Z,"yeah. you wrote it just before i was able to comment again. plan: 4.3.x: one last release in april. 4.4.x: drops ubuntu 20.04, bumps qt to 5.14. expected eol in the fall(~october) 4.5.x: drops ubuntu 20.10, bumps qt to 5.15, and hopefully gets full qt6 support for testing builds. official releases will continue with qt5. the switchover to 4.5.x should be around october probably, so it coincides with ubuntu 21.10. the qt6.2 lts is supposed to be released in september. there's a possibility that it either gets slightly postponed or that the first version is not so smooth. lastly, we aren't in a rush to officially switch to qt6 from day one. but at least we should be ready as much as possible(code-wise). (and also keep an eye on win7 usage at that time). :+1:"
816285711,14465,FranciscoPombal,2021-04-08T23:01:55Z,"`vcpkg` builds are close, just a few details left to be ironed out... see [a link] ubuntu 21.04 is not an lts release. the next lts release is 22.04. ""supporting"" non-lts ubuntu releases (such as 20.10, 21.04, 21.10) is more or less irrelevant. the vast majority of people don't use them, and their lifecycle is only 9 months or something like that. if you want to drop support for the current lts (20.04) so soon, might as well go straight to qt6, and tell ubuntu users that they will have to stick with the last release of the 4.3.x branch until next year (22.04 is basically guaranteed to support qt6), or compile qbittorrent+qt6 themselves."
816547073,14465,glassez,2021-04-09T09:18:58Z,i wouldn't still drop qt5 until qbittorrent officially supports libtorrent2. i.e. i want the last qt5 based qbittorrent branch is libtorrent2 based one.
816981687,14465,sledgehammer999,2021-04-09T21:28:04Z,"oops you're right. but still, ubuntu's package staleness is hugely inconvenient for us. i don't think it is viable to continue supporting the latest lts. it is too behind and the next one isn't coming soon enough."
817232360,14465,FranciscoPombal,2021-04-11T01:39:31Z,here is a branch with vcpkg qt6 builds for windows and macos: [a link] (there's just 2 new commits on top of this pr). actions run: [a link] it _should_ work (i only tested locally for windows - [a link] the ports used were from the wip qt6 pr: [a link] (most recent commit at the time of writing). it was also necessary to apply a small patch to `src/cmakelists.txt` due to a possible bug with qt's detection of `zstd` (which we don't even use) - see the comments about it in the qt6 vcpkg pr. feel free to integrate these changes (or some improved version of them) into your branch. this should be useful for getting some builds into people's hands automatically for testing until the vcpkg qt6 pr gets merged; then we can drop the overlay ports of the qt stuff.
817268750,14465,FranciscoPombal,2021-04-11T08:15:02Z,"great news: the windows build did indeed succeed for the run: [a link] still no dice with the macos build - i included it just in case though, but the reason it's failing is not related to qbittorrent anyway."
817331519,14465,FranciscoPombal,2021-04-11T16:09:00Z,"this is a blocker for macos: [a link] these headers don't exist anymore in qt6, because all the platform-specific extras packages were removed (the features they provided were consolidated elsewhere). edit: usages of deprecated/no longer existing qtmac stuff:: [a link] ref: [a link] [a link] ref: - [a link] - [a link]"
830598230,14465,glassez,2021-05-01T09:50:30Z,"is it still valid, or should we postpone it until v4.5?"
830834827,14465,sledgehammer999,2021-05-02T16:25:57Z,yes. unless something changed that i am not aware of. i am doing the 4.3.5 release now.
833333629,14465,xavier2k6,2021-05-06T08:23:10Z,both [a link] & [a link] are released. **qt 6.0.4** will be **last patch** release to **qt 6.0 series** ref: [a link]
851611426,14465,xavier2k6,2021-05-31T17:36:31Z,what is the time frame for completely dropping support of qbittorrent versions built with libtorrent 1.2.x series? do you plan to run the batch tool again to close these issues?
873563594,14465,xavier2k6,2021-07-04T10:44:11Z,qt 6.1.2 is almost ready to be merged on vcpkg ref.: [a link]
873573405,14465,xavier2k6,2021-07-04T11:48:35Z,"that zstd issue is still present with vcpkg's version of qt 6.1.1......do we still have to patch it on our end? as no doubt it will still be there with there qt 6.1.2 version..... click to show ""zstd::zstd"" issue [code block]` **edit:** boost 1.76 is also almost ready from them too. ref.: [a link] **edit2:** are vcpkg using **zstd** as a default for compression/decompression or perhaps as a **zlib** wrapper?? (just a thought) **edit3:** github actions ci to be ammended `ci.yaml` **to be renamed:** `qt5-base` -> `qtbase` `qt5-svg` -> `qtsvg` `qt5-tools` -> `qttools` **to be removed** `""qt5-winextras:x64-windows-static-release""` `""qt5-macextras:x64-osx-release""` qt 6, removed these modules `winextras`/`macextras` anyway. ref.: [a link]"
873605896,14465,xavier2k6,2021-07-04T14:51:54Z,~ does github actions/vcpkg use `ccache`??~ ignore
873614751,14465,FranciscoPombal,2021-07-04T15:47:39Z,"tbh i think the simplest way to avoid the zstd issue is to tell vcpkg to build qt6 without the zstd feature, we don't use it anyway. afaik the issue has been reported upstream, but still not fixed. alternatively, we can workaround it with a small change to our cml (i think commenting out `set(cmake_find_package_prefer_config on)` is enough), but this is sub-optimal."
873618368,14465,xavier2k6,2021-07-04T16:08:11Z,i think qt uses zstd as default compression algorithm now for the qt resource system ref.: [a link]
873622420,14465,FranciscoPombal,2021-07-04T16:35:06Z,"i don't think there is a big impact on us either way. anyway, for future reference, here is the upstream qt report about the findzstd cmake issue: [a link]"
873622965,14465,xavier2k6,2021-07-04T16:39:13Z,":thumbs_up: :thumbs_up: (was just re-reading [a link] when you posted, lol) thanks!"
873623072,14465,glassez,2021-07-04T16:40:05Z,:thumbs_down:
873623481,14465,xavier2k6,2021-07-04T16:43:10Z,i believe is only suggesting this as a temporary workaround in order to get gha to make builds for testing purposes......not a permanent change?!
873624161,14465,glassez,2021-07-04T16:48:25Z,"gha can make such changes in our cml ""on the fly"", doesn't it?"
873626164,14465,xavier2k6,2021-07-04T17:02:16Z,not sure about that...... i'm not talking about the master branch etc - more our own repositories/branches to modify/create the test builds.
873631331,14465,FranciscoPombal,2021-07-04T17:38:55Z,"as i said before, i also don't want to go the ""modify our own cml to workaround a qt bug"" route if it can be avoided. and it can be avoided quite easily, simply by telling vcpkg to build qt without zstd support. so this is not needed: , even though it is also an escape hatch i am comfortable with using if push comes to shove (e.g., if for some reason we require qt to have zstd support in the future or something like that)."
873657103,14465,xavier2k6,2021-07-04T20:32:05Z,thank you for the cml workaround.....it worked.
874394834,14465,FranciscoPombal,2021-07-06T01:21:37Z,over at [a link] we're now golden: [a link]
889786970,14465,xavier2k6,2021-07-30T10:06:10Z,~ if you rebase from master the qt6 builds should work now since pr [a link] was merged.~ edit: see [a link]
889831355,14465,xavier2k6,2021-07-30T11:31:33Z,"apologies, i forgot that you have a separate qt6 workflow file. change: vcpkg_commit: `b361c2eefa3966cb7cec45275aff32e90430aaa6` **to** `8dddc6c899ce6fdbeab38b525a31e7f23cb2d5bb` in `ci_qt6_win_mac_test.yaml`"
931222554,14465,xavier2k6,2021-09-30T11:08:03Z,**this is only intended as a reference/fyi** ____ - `qt 6.2.0` [a link] - `qt 6.2.0` is the first release in the qt 6.2 **lts** series & it's available to [a link] - `qt 6.2.0` [a link] - `qt 6.2.1 / qt 6.2.2` in [a link] _____ - `appveyor` should have image available with `qt 6.2.0` tomorrow `1st october` - `vcpkg qt 6.2.x port` ~is still a wip.~ available as of `vcpkg_commit: <35bfef7> 35bfef708400cf882efb3e4df93045e0a06c9c23` (not yet available in default vcpkg via gha ci os environment images) ____ `qt 6.3` series in [a link]
932276692,14465,glassez,2021-10-01T14:24:47Z,"now i believe it's time to merge it into the master. i changed it by making the build with qt6 optional (cmake-only, via qt6 option), so that we can continue to have a single codebase for both qt5 and qt6 branches. there is no ci support here. i don't have time and i don't want to deal with it - someone else can do it better than me. i have saved the old developments in a separate [a link], so you can use them as a basis if necessary."
932415397,14465,xavier2k6,2021-10-01T17:17:43Z,"for ci, we may be able to use something like [a link] across all os's as there's no ppa/repo with qt6 currently or we can build from source....."
932716925,14465,glassez,2021-10-02T08:53:07Z,i can't figure out what the hell is wrong with the windows ci build. i have successfully built it locally with both qt 6.2 and qt 5.15.2.
932724478,14465,xavier2k6,2021-10-02T09:50:41Z,it's because of boost 1.77.0 reference: [a link] we need to probably discuss this further on what we should do going forward until boost 1.78.0 is released in december with the included fix in `asio`......should we add the qt macro temporarily etc.
932799205,14465,glassez,2021-10-02T18:28:34Z,":thumbs_down: i don't see any good reason to just mark some boost versions as incompatible. these ""keywords"" (signal, slot , emit) are quite old and widely known, so that we can consider such problems as an external bug (bug of boost in this case)."
932824594,14465,xavier2k6,2021-10-02T21:46:09Z,have a fix for windows ci.... apologies - i actually got you to remove the fix in a way from your pr [a link] i thought it wasn't being used at all & it wasn't really as `donotupdatevcpkg:` was set to `true` if `vcpkggitcommitid` is added back in to workflow with any `commit` e.g. commit (`3768cef9c204bb168c04b3ba7cb93b10a140a91d`) before boost 1.77.0 was introduced & `donotupdatevcpkg:` is set to `false` this will override the pre-installed vcpkg. this will allow windows ci to build with boost 1.76 again.....we can turn `donotupdatevcpkg:` back to `true` when boost 1.78.0 is released or if a `fix / workaround` is included in a newer vcpkg commit.
943431049,14465,octavedo,2021-10-14T14:47:24Z,"http/2 is enabled by default, please see: [a link] qbittorrent does not appear to handle http/2. i tested with the git dev branch of qt. it will fail to download the tracker list in the ""tracker addition dialog"" (please see below) i propose the attached patch to solve this problem. diff -run -x .ds_store src/base/net/downloadmanager.cpp src2/base/net/downloadmanager.cpp --- src/base/net/downloadmanager.cpp 2021-10-14 13:49:32.000000000 +0100 +++ src2/base/net/downloadmanager.cpp 2021-10-14 14:05:07.000000000 +0100 @@ -115,6 +115,7 @@ qnetworkrequest createnetworkrequest(const net::downloadrequest &downloadrequest) { qnetworkrequest request {downloadrequest.url()}; + request.setattribute(qnetworkrequest::http2allowedattribute, false); if (downloadrequest.useragent().isempty()) request.setrawheader(""user-agent"", default_user_agent);"
1780548290,19777,Chocobo1,2023-10-26T07:18:09Z,ps. i would try to review it on this weekend.
1781456647,19777,staze,2023-10-26T16:29:10Z,will this prevent previous default credentials from working?
1781464843,19777,glassez,2023-10-26T16:34:10Z,"sorry, i don't understand the essence of the question... the behavior is described in the op. qbittorrent will no longer have default credentials. ""admin:adminadmin"" won't work anymore unless you explicitly configured qbittorrent to have such credentials."
1781499701,19777,staze,2023-10-26T16:57:58Z,"on new installs, makes perfect sense, there's no default, it'll be randomized, etc. but if you updated from a previous version, and have web enabled, the default credentials exist and are ""valid""... during the upgrade, does it check the hashed value of that password, say ""it's adminadmin, must be default"" and disable it? i'm trying to determine if the update process to whatever version will ""close"" the security vulnerability."
1781552339,19777,glassez,2023-10-26T17:36:12Z,"you don't seem to understand what the ""default credentials"" means. this only applies if there are no credentials explicitly specified in the configuration file."
1781572470,19777,staze,2023-10-26T17:51:36Z,"i do. i just don't know how they're implemented in qbittorrent. if you don't set credentials on old versions, did it leave the credentials null and only accepted admin:adminadmin, or did it set them to admin:adminadmin? if the latter, then they're ""set in the configuration file"" and won't be invalidated by this patch... since you've said ""admin:adminadmin"" if explicitly set, is valid. i'm not sure how else to word this. if you can manually set ""admin:adminadmin"" as credentials (which, to me seems incorrect and should be prevented since it's a known, default, credential), how are we preventing the old default credentials from continuing to work if the user just upgraded from an old version rather than a new install?"
1781584039,19777,glassez,2023-10-26T18:00:02Z,if you don't set it there should be nothing in config file. just test it yourself.
1781764725,19777,staze,2023-10-26T19:21:56Z,"gotcha. so the config file being null for that setting means it's not overriding the built in credentials. understood. would still argue that admin:adminadmin should be disallowed, but probably a discussion for another day. thanks for the answers! =)"
1793805716,19777,sledgehammer999,2023-11-05T18:04:15Z,"further comments: 1. will the html part of the webui fail if an empty password is being set via the config page? 2. for the old default credentials: i remember that in previous versions, before some internal refactoring, under some conditions the `preferences` backend would write even the default values to disk. do you remember any details? my point is that we may need to also blacklist ""adminadmin"" going forward, because it might have been inadvertently written to disk."
1793812030,19777,glassez,2023-11-05T18:33:26Z,"as far as i know, it is now being prevented from writing default values. simply because it does not write the value if it matches the current one."
1793812570,19777,glassez,2023-11-05T18:36:07Z,"previously, it was suggested that it does not make sense to prohibit the user from doing this if he really wants to do so. i would prefer to refrain from adding anything else here, except the most necessary minimum. someone else can improve it in the future if they want to."
1793812683,19777,glassez,2023-11-05T18:36:44Z,i'll check it later.
1793816024,19777,sledgehammer999,2023-11-05T18:52:48Z,"sure but there is a difference between the user explicitly writing vs our code inadvertently writing default values. for future reference: the solution could be as simple as `preferences::getwebuipassword()` returning an empty string even if the old default is explicitly written to disk. this doesn't account for installs that have their config file survive from the older behavior. however, i recognize that this might not be a big enough userbase to warrant a relief effort."
1794204028,19777,glassez,2023-11-06T07:11:27Z,"not only. we would also have to reject the user's attempts to set such a password. yes. in addition, this is already a well-known problem and users have been officially warned about it."
1801184356,19777,glassez,2023-11-08T06:39:49Z,pr is rebased to resolve conflicts.
1801192349,19777,sledgehammer999,2023-11-08T06:48:40Z,"in case (or someone else) doesn't propose a reasonable solution, i am not against merging this pr as-is. unless, he accessed the webui because auth was disabled for local access and then he disabled that setting via the webui. ps: i wouldn't mind the `has_webui_password_configured` solution if nothing else is proposed."
1801205766,19777,glassez,2023-11-08T07:02:09Z,"i thought about this case. it still has a temporary password. imo, anything else is beyond the scope of this pr."
1801982940,19777,sledgehammer999,2023-11-08T14:18:48Z,"can you consider the following change? in [a link] change the current `""fails.""` string to `""invalid username or password.""` then add an additional specialized check for failure while on temppassword. in that case the string should be something like `""a temporary password has been generated because no password has been configured. find it in the console output. restarting qbittorrent will generate a new temporary password.""` and finally change [a link] to [code block] this way the user won't be dumbfounded on why he can't login anymore."
1802101712,19777,glassez,2023-11-08T15:19:08Z,"i wouldn't do anything more than announce on the official website that ""default"" credentials are no longer supported. moreover, your proposal will lead to incompatible api changes in a minor update which is bad idea. , what do you think?"
1802191558,19777,sledgehammer999,2023-11-08T16:01:42Z,"i don't think it is an incompatible api change. especially if you look the js code around the linked line. currently the api responses: 1. http 403 + (may have response text attached, i didn't check code)-> user's ip is banned for too many failed login attempts 2. htpp 200 + response text ""ok."" -> logged in 3. htpp 200 + response text ""fails."" -> log failure, presumably invalid user/pass new: 4. htpp 200 + response text ""specialized error string"" -> log failure, explained in response text the breakage would happen if we changed the log success response. ps: i amend my previous comment. `fails.` should stay. only add a specialized response for temp password failure."
1802213772,19777,glassez,2023-11-08T16:13:28Z,"some webapi users can legitimately count on the fact that it has only two options, `ok` or `fails`, and, for example, determine an unsuccessful result only by testing it for `fails`. so these are incompatible changes if it will return something else. and, by the way, it is incorrect to judge such things based on the built-in webui. if we only cared about it, we would not need to talk about any compatibility of the api changes."
1802344580,19777,sledgehammer999,2023-11-08T17:29:43Z,sadly you're correct: [a link]
1807101435,19777,sledgehammer999,2023-11-12T11:41:43Z,closes #13833 closes #16529 closes #18731 closes #19738
1782900772,19801,glassez,2023-10-27T13:16:30Z,note that `uncrustify` does not guarantee full compliance with our coding style. just read [a link] and follow it in your code contribution.
1792612561,19801,luzpaz,2023-11-03T15:07:36Z,ping
1793067581,19801,jNullj,2023-11-03T20:39:57Z,"thank you for the reminder, i may be able to fix the pr this sunday."
1831845811,19801,ASTX111,2023-11-29T12:55:35Z,any idea when this might be coming? it would be a great update to the appliacation! <3
1832558715,19801,jNullj,2023-11-29T19:22:47Z,"due to my new job, my github activity has decreased. apologies for delays. i'll aim to resume work this weekend. feel free to co-commit or suggest changes. if maintainers feel the need to edit or create a separate pr due to my pace, i understand. thanks for your patience."
1839510029,19801,jNullj,2023-12-04T21:30:23Z,updated the pr: resolved all suggestions by at [a link] to [a link] i fixed the issue spotted by added code to update existing delay when the value is changed and merged latest master commits as well.
1880469203,19801,glassez,2024-01-08T06:56:31Z,"unfortunately, i have found that these changes have ""opened the door"" to undefined behavior and/or race conditions. i want to make some preliminary changes in separate pr, and when it is merged, we will continue with this one."
1886597291,19801,glassez,2024-01-11T08:19:42Z,#20257
1886604654,19801,glassez,2024-01-11T08:25:28Z,"it looks like the place where you originally inserted the timer code was the best choice. the illogic that confused me was caused by the inappropriate naming of some things, so i corrected them in #20257. i added the timer code there in advance (with zero timeout), so all you have to do is add the code for setting the configured timeout."
1888608776,19801,jNullj,2024-01-12T08:00:54Z,"no problem, i will update it after #20257 is merged to avoid reworking this pr if it changes before that. i noticed you included a copyright notice update, should i add my (and co-authors) name/year in the files once i update them?"
1888651337,19801,glassez,2024-01-12T08:31:55Z,"your - yes. are there any co-authors who have made significant contributions to it? or do you mean those who offered some tips on correcting the coding style, etc.?"
1888755585,19801,jNullj,2024-01-12T09:41:07Z,"those who offered some tips on correcting the coding style, as in those who reviewed my code and offered changes. all changes i made which you did not offer, i created myself."
1888832381,19801,glassez,2024-01-12T10:27:27Z,"if the proposed changes are trivial, such as correcting the coding style, then we do not take this into account as co-authorship."
1890333031,19801,glassez,2024-01-13T05:57:18Z,#20257 has just merged.
1900824404,19801,glassez,2024-01-19T17:38:36Z,thank you!
68049790,2332,sledgehammer999,2014-12-24T12:37:55Z,/webdev any comments?
68051188,2332,pmzqla,2014-12-24T13:08:15Z,"would it be possible to have more commits with smaller changes next time? i think it greatly simplify the review of the code (i maybe tend to overdo it sometimes). anyway, for now i simply tested the changes and everything seems to work as before from a user point of view."
68143010,2332,glassez,2014-12-26T14:29:22Z,"here are a few observations: 1. the **session** should only be considered as a data store in which something can be stored between requests (as in usual web applications). 2. too much logic made in **action** code. compare with `action_json_torrents`. here we are, in a good way, simply call some function from `btjson`, and pass your `rid` and some data from the **session** (for example, the previous response) as arguments. 3. partialresponsegenerator has a redundant interface."
68166262,2332,buinsky,2014-12-27T02:22:00Z,", please prompt me where should i store partialresponsegenerator objects and how to link them to the session? could you explain more?"
68187797,2332,glassez,2014-12-27T19:31:59Z,"i have little free time this weekend, but if you can wait a bit, i will explain everything in detail."
68189314,2332,sledgehammer999,2014-12-27T20:29:13Z,"i won't merge this until you have explained yourself and everything gets resolved. i don't mind waiting. its better than rushing broken code. /webdev sorry for hijacking this thread. there isn't any other way to contact you afaik. i know that some of you are busy. but if you have time and aren't bored you could start populating the wiki with the new info about the webui api. here is the old page: [a link] you guys are far more qualified to write the documentation. make sure to make 2 new subpages in the above page. one leading to the current documentation and one to the new documentation. afaik, there are at least 2 android apps using the webui api..."
68311636,2332,sledgehammer999,2014-12-29T22:42:42Z,"since you mention 4 points in your description, could you split your commit accordingly?"
68313088,2332,buinsky,2014-12-29T23:00:29Z,", i can do it, but logic of the program will be broken without any commit (they will be strongly linked). may be it will be better to keep all code changes in one commit?"
68313549,2332,sledgehammer999,2014-12-29T23:06:10Z,if the changes cannot be split into functioning subcommits then you should leave it as one i suppose. edit: it just seemed from your description that you have implemented different and separate things.
68315027,2332,buinsky,2014-12-29T23:26:41Z,", if i will write preliminary commit, which will remove some functionality of webui such as displaying torrents, hiding priority column, receiving torrents info, than it will be possible to split my commit because my commit overrides all this functionality."
68428629,2332,glassez,2014-12-31T07:51:48Z,"now, as for class interface... [code block] don't use public fields - usually we make them private, but use public getters/setters if necessary. [code block] getresponseid() and getpreviousresponseid() is not needed outside of class, as well as all the code fragment above. in general, if you look at the task as a whole, your class (i mean the primary function of it - generatepartialresponse()) must take three input parameters - rid, the previous response and current response - and to return some result (partial response). everything else is of no interest to us (i mean code external to the class) - it is the details of its implementation."
68429398,2332,glassez,2014-12-31T08:16:31Z,"other comments... [code block] your hack doesn't do any good, and only complicates the code. many c++ classes in qt (including qvariant) use implicit data sharing, so simple operations (assignment, passing as a function argument or return from a function) does not produce a real copy of the data. see [a link]."
68429868,2332,buinsky,2014-12-31T08:31:08Z,", can you give me an example, that shows how to write the following code without macroses: [code block]"
68430022,2332,buinsky,2014-12-31T08:35:53Z,"also, can you propose way to link partialresponsegenerator objects to session (partialresponsegenerator objects must be created and destroyed with the session) without putting them into websession class?"
68436935,2332,glassez,2014-12-31T11:29:53Z,it is not necessary. as i mentioned in the session it is better to store any data. instance of partialresponsegenerator can be created with every request.
68438140,2332,glassez,2014-12-31T12:01:23Z,"and yet... i think your implementation partialresponsegenerator you have abstracted from the actual data structures that handle many of its functions. here it is also only complicates the code. we are not just some abstract qvariant, which can contain anything - here is a concrete data structure. if you remember this, you can make everything much easier and more efficient. `labels` and `queueing` better to pass through a separate request - it is a separate task. i think you'd better not to dwell on your current implementation, and to try to create everything from scratch, taking into account all the comments. if you want, i can sum up how it should work."
68438787,2332,buinsky,2014-12-31T12:19:12Z,", partial[key].tolist() will create a copy of qvariantlist, but i need to modify the source data."
68439088,2332,buinsky,2014-12-31T12:26:41Z,"it's convenient to receive this data with torrents for immediate update of info related to torrents. i plan to add label column to torrents list. what if new label will displayd in torrents list, but labels list will not updated immediately? i think, webui shouldn't work this way."
68439188,2332,buinsky,2014-12-31T12:29:43Z,it can't because instance of partialresponsegenerator must track what data have processed by the client.
68439845,2332,buinsky,2014-12-31T12:45:03Z,"partialresponsegenerator can be used to cut any json responses with repeating data. this is what it is made for. by the way, utorrent webui also uses shortened responses."
68441492,2332,buinsky,2014-12-31T13:24:45Z,i plan to make changes in the commit in a few days. i will ask you to review changes then.
68445958,2332,glassez,2014-12-31T14:52:42Z,"oh, sorry. here i was a bit hasty. i wanted to write one thing and wrote another... so `partial` here is pure output value, it is better to return it from a function as a return value. but since several such values, it is possible to change the parameter type to qvariant&, and put there qvariantlist inside the function. p.s. it is better not to mix the input and output parameters with each other in the function declaration."
68481168,2332,buinsky,2015-01-01T06:18:33Z,"this does not relieve us from using the constdata function. i suppose that better to use macroses for compacting the code. i think that better to keep previous and current response in partialresponsegenerator class and not to create new objects for storing responses. i don't khow where better to keep partialresponsegenerator objects, but websession is convenient place. i changed my commit. please review it."
68486062,2332,glassez,2015-01-01T12:59:18Z,"apparently, you do not want to understand what i'm trying to say... so now i'm just going to list things that are wrong in principle, and not because you use it here. 1. qvariant::constdata() is a public member of a class, but it is ""not recommended"" for use (not for nothing that the developers of qt do not mention it in the documentation). using raw pointers generally very dangerous thing. if you can't do without using of constdata(), it does not mean that this cannot be done. 2. we should not do something with class data from outside. with proper class design we should not have such opportunities. as a consequence, we should not make public fields in the class (unless absolutely necessary). these are the main disadvantages. i'm not even going to pay attention to the smaller ones. also, i did not look at the client code (and don't want to do)."
68488397,2332,buinsky,2015-01-01T14:55:22Z,"1. i understand that constdata() is ""not recommended"" for use, but all perfectly works. could you propose another method of direct access data stored in qvariant? if you can't do it, lets leave all as is. 2. i fixed this issue if you're talking about partialresponsegenerator. could you express your opinion about using constdata()?"
68495031,2332,glassez,2015-01-01T19:10:10Z,"you do not want to (or can't) understand me. i say that it's wrong and must be done correctly. and you - i understand that it's wrong, tell me how to do wrong in another way. not to do wrong! **direct access data stored in qvariant** is wrong. and (most importantly) you can easily do without it. and what do you think of this? [code block] unfortunately, now i'm away from my main computer, but otherwise i would have corrected your code and show how you can do. perhaps later i will show it here in part, only basic fragments. i'm not project maintainer. perhaps will merge this."
68495889,2332,sledgehammer999,2015-01-01T19:41:24Z,i was hoping to not really read webui code. and glassez knows better the in and outs of it. but anyway i'll review this (not necessarily today). i need a simple thing from you. i want you to explain to me simply how the partial request/response is supposed to work. (maybe an example). then i'll be able to understand better what you are trying to achieve and if you try to achieve it correctly. ps: i agree that we must not use non-documented api.
68495929,2332,glassez,2015-01-01T19:43:16Z,"here is one of such fragments. your code [code block] can be replaced with [code block] where `rid` is what we received in the request, and `lastresponse` we store in the session (it also contains `rid` of last response). as you can see, we don't want any class to perform this task. only btjson::gettorrentspartial() and a couple of functions."
68509565,2332,buinsky,2015-01-02T05:28:57Z,"response represented in qvariantmap variable. qvariantmap contains key/value pairs. values can contains: 1) variables of some basic type (int, qstring ...), for examle: [""name"", ""torrent1""], [""speed"", ""123000""]. 2) qvariantmap variable which keep object properties. 3) qvarianhash variable which contains list of variables or objects. so qvariantmap variable represents hierarchy of objects with properties which we must send in response. partialresponsegenerator keep last processed response by client. when client send request partialresponsegenerator compares generated response with last response recursively and leaves in hierarchy of objects and their properties only changed data. for example: last processed response: [code block] current response: [code block] partial response [code block] also partialresponsegenerator handle id of processed response to enshure that client recieved and processed partial response and client does not need full response data (when the page is reloaded or there are problems with the network). you can see how request is processed in function btjson::gettorrentspartial in glassez post."
68511486,2332,buinsky,2015-01-02T07:04:15Z,"please review ""temporary commit"". if you will be satisfied with the code changes i will merge the commits into one."
68512244,2332,glassez,2015-01-02T07:38:51Z,"well, the process went. remained fully get rid of constdata(), but it can be done later - now you can proceed to the algorithm. as far as i understand, your current code is incompatible with what we have (i mean `json/torrents` request). again, i'm sure you can (and should) extend an existing algorithm by adding your ideas, and not to create a new request."
68512546,2332,buinsky,2015-01-02T07:51:44Z,i can extend `json/torrents` request algorithm. i want to know what you thinking about including labels and queueing flag into response? it would be convenient to update the list of torrents label with the torrents table. or not? i think that to much responses for each portion of data isn't good.
68521001,2332,glassez,2015-01-02T11:33:14Z,"well, then let's begin. personally, i advocate that each data type had its own request. they are updated with varying frequency. besides, nothing bad will happen if some a short time (even a few seconds) we will have some labels in the list of torrents and not to have them in the list of labels. but we'll simplify the code for handling requests and responses, and thus increase the reliability of our program. we should not blindly imitate other programs. now, regarding the revision of the existing code. look at this too. now we just sent a list of torrents that matches the request parameters (filter, label, limit, offset). at the end of `btjson::gettorrents()` before converting to json, we have this list. it only remains to compare these torrents with those that we sent last time and send only the changed data. moreover, we do not have any way to transmit information about those torrents that were in the previous list, and now there is no - current client code defines that itself. but for the rest of the torrent we should pass at least the hash, even if the data has not changed since the last time - it is necessary for the proper functioning of the sort (although the data of the torrent could not be changed, but its position could). in other cases, if the data are changed partially, we must send only the hash and modified data. when the client code needs to be modified so that they will check how much of the data came from the server and update only them, and the rest left as is. draw your attention to the fact that we need to compare two lists of torrents only that have a certain structure that will deliver us from all recursive calls and significantly shorten and simplify the code compared to original version of it."
68525356,2332,buinsky,2015-01-02T13:07:08Z,i think that `json/torrents` and `json/torrentspartial` can be exist together. `json/torrents` can be used by clients that need such data representation. `json/torrentspartial` can be used by webui and mobile clients (transmited data reduced tenfold or more). mixing the functionality of two queries is a perversion. webui will be work better and faster if it will filter and sort torrents by itself. can you judge us?
68525950,2332,glassez,2015-01-02T13:19:23Z,"such statements need to argue. besides, if you're not aware, before webui contained filtering and sorting code, but we got rid of it. filtering on the server side also significantly reduces the traffic. combining this with partial data transfer will make it possible to reduce the amount of transmitted data."
68528547,2332,buinsky,2015-01-02T14:09:20Z,instead of sending request webui immediately filter or sort torrents. sometimes it is useful to step back. this is not reduces traffic when selected all torrents and all labels. partial response reduces traffic more overwhelmingly. do you know why firefox loses popularity? because it slow. it should be noted that firefox code is almost perfect.
68541241,2332,buinsky,2015-01-02T16:49:42Z,"the problem is that partial response is not fully compatible with `json/torrents` it has different logic. partial response contains removed objects ids from previous response. also `torrents` response contains array of torrents (`[{...},...,{...}]`) and i don't know where to put `pid` (`[{...},...,{...}],pid=...` is not valid json data). here is 2 solutions: 1) change response to this format: `{torrents={...},pid=...}`. in this case existing applications that uses webui api will not be able to receive data. 2) use cookies. i think it's a little clumsy. may be it will be better don't remove `torrentspartial` request?"
68543002,2332,pmzqla,2015-01-02T17:11:29Z,"i had prepared a txt some time ago. i refined it a little bit and uploaded here . i know it should be done in the wiki, but doing this was faster and maybe it could make updating the wiki simpler."
68547251,2332,glassez,2015-01-02T18:04:44Z,"agree on the expense of the sort. but how, specifically, what are you going to filter without sending a request? for example, at some point in time the user switches the filter from ""active"" to ""all"". i agree. but assuming that a step forward was erroneous. you still haven't proven. i do not propose to leave it as is. i propose to combine both methods. it is generally incomparable things. i don't even want to discuss it. this is a good option. besides, now web api is in the process of redesigning and already has some incompatibilities with older clients. when the redesign is complete, we will publish the documentation for the new api so that clients can implement support for it. if you think i'm just picking on you, you can relax. it's just different. as i already mentioned, web api has undergone a redesign, one of the aims of which was the reduction of traffic. and originally i was looking at your case. but then i rejected it due to serious problems during its implementation. so i did what could be done at that time - filtering on the server side. and now i realized that it has eliminated the problem that stood in the way of implementation of the partial data transfer. i'm sure that you have not yet discovered this problem. if i'm wrong, then i can describe this problem (the use cases in which it appears), and you will tell me how you resolved it."
68548205,2332,sledgehammer999,2015-01-02T18:16:24Z,"sorry guys for the late response. i was coding something else and didn't have time to take a look at this. this may be a language thing, but it is important to note that any other member isn't hostile. keep in mind that even if you speak english perfectly the written word may seem harsh. that's because you can't hear the tone of the voice the other person is using. i am refering to both buinsky and glassez. so yes, you should continue discussing and exchanging ideas. as i can tell from the comments there already was progress on how to resolve some issue. keep it going. some back history in case you didn't know. we had discussed various things for the webui with almost a year ago. this is what he is refering to."
68548411,2332,buinsky,2015-01-02T18:19:19Z,i get rid of `constdata()` in the code.
68548903,2332,buinsky,2015-01-02T18:24:55Z,just call function `updatetable` in `dynamictable` class (file dynamictable.js).
68549784,2332,buinsky,2015-01-02T18:35:27Z,could you write it in russian? i'm not sure that i understand you.
68550929,2332,buinsky,2015-01-02T18:49:27Z,"webui/btjson.cpp:220:82: error: invalid initialization of non-const reference of type ‘qvariantmap& {aka qmap &}’ from an rvalue of type ‘qmap ’ webui/btjson.cpp:152:6: error: in passing argument 3 of ‘void processmap(bool&, qvariantmap&, qvariantmap&, qvariantmap&)’ webui/btjson.cpp:273:82: error: invalid initialization of non-const reference of type ‘qvariantmap& {aka qmap &}’ from an rvalue of type ‘qmap ’ webui/btjson.cpp:250:6: error: in passing argument 3 of ‘void processmap(bool&, qvariantmap&, qvariantmap&, qvariantmap&)’ webui/btjson.cpp:289:99: error: invalid initialization of non-const reference of type ‘qvarianthash& {aka qhash &}’ from an rvalue of type ‘qhash ’ webui/btjson.cpp:190:6: error: in passing argument 3 of ‘void processhash(bool&, qvariantlist&, qvarianthash&, qvarianthash&, qvariantlist&)’ /webdev, does anyone khow how to solve these errors?"
68553757,2332,sledgehammer999,2015-01-02T19:22:01Z,"in this case, i don't have a problem in both of talking in russian. i am going to look into it in ~25-30 minutes."
68557211,2332,sledgehammer999,2015-01-02T20:01:34Z,"the error messages took me a while to understand. eg for the first the only way to fix that i know of is: [code block] of course poor variable naming, only for testing purposes. the same fix applies to the other errors."
68558868,2332,sledgehammer999,2015-01-02T20:22:32Z,"or if it makes sense code-wise, change the signature of processmap/processhash to take the 2 variables as const references. (eg processmap(const qvariantmap &data))."
68558982,2332,glassez,2015-01-02T20:23:46Z,"this is a poor knowledge of **c++** language. replace [code block] with [code block] or simply [code block] and yet... there is a function parameters order convention: input, both input and output, output. so: [code block]"
68560009,2332,glassez,2015-01-02T20:36:37Z,"as far as i understood, you are always stored on the client side all the torrents in addition to those that appear in the table (i.e., in addition to filtered). this should work, at first glance. but the effectiveness of this solution is questionable. and it is precisely at the efficiency you focus in their arguments."
68560308,2332,glassez,2015-01-02T20:40:28Z,other functions need to be redone in a similar way.
68560544,2332,buinsky,2015-01-02T20:43:27Z,i don't anderstand this sentence. could you write it in russian?
68561186,2332,buinsky,2015-01-02T20:51:43Z,"частичный ответ обычно небольшой. да, мы можем сократить и его с помощью отфильтровывания на стороне сервера, но с другой стороны мы уменьшим отзывчивость интерфейса."
68561904,2332,glassez,2015-01-02T21:01:12Z,"в своих доводах в пользу своего решения ты делаешь упор на его эффективности, при этом ты предлагаешь постоянно хранить все торренты на стороне клиента (помимо уже отфильтрованных и отсортированных, которые отображаются в таблице), что подразумевает при каждом запросе обработку и тех и других. к тому же твой способ получения частичных данных весьма громоздкий. я не вижу причин для этого. ты говоришь о какой-то универсальности, но она здесь явно не требуется. объясните, за счет чего мы уменьшим отзывчивость интерфейса? видимо, я чего-то не понимаю... только объясняйте аргументированно."
68583448,2332,buinsky,2015-01-03T04:51:10Z,"1) пересылаемые данные при использовании частичных ответов имеют **весьма малый размер**. 2) при использовании фильтрования и сортировке на стороне сервера каждый раз при нажатии фильтра или при сортировке сортировке списка посылается запрос, который требует времени на его обработку. я часто подключаюсь к webui через мобильный телефон, интернет на котором не радует ping-ом и каждое переключение фильтров или сортировка подтормаживает. бывает, довольно ощутимо. лично меня это раздражает. если бы фильтрования на стороне сервера не было интерфейс работал бы без задержек, а данные обновлялись бы по мере поступления ответов от сервера. 3) при сортировке на стороне сервера придется пересылать хэши всех торрентов. каждый хэш имеет длинну 40 байт. затраты на их пересылку могут быть больше, чем при использовании частичного ответа для всех торрентов, но без сортировки. к примеру, когда в списке 30 торрентов, а активны из них только несколько. см. пункт 2. для меня это основной аргумент к тому, чтобы не использовать фильтрацию на стороне сервера."
68587235,2332,glassez,2015-01-03T08:17:36Z,"мы не делаем приложение только для вас. какова, по-вашему, доля тех людей, которые поступают так же (при условии, что текущий webui не расчитан на маленькие экраны). насколько часто происходит переключение фильтров при средне-статистическом использовании? я думаю - крайне редко. в основном, используется какой-то один фильтр. согласен. хотя это актуально только для некоторых типов фильтрации. позволю себе подвести некоторый итог: 1. несомненно, сама по себе передача только измененных данных - это хорошая идея. вопрос только в ее реализации и использовании. 2. возможно, стоит реализовать частичную передачу через отдельный тип запроса. решение этого вопроса можно предоставить руководителю проекта или/и обсудить с другими разработчиками. 3. использование частичной передачи совместно с клиентской сортировкой/фильтрацией в qbittorrent webui под вопросом. это полезно только в момент переключения фильтра при условии плохого сетевого соединения. что касается сокращения трафика, то он будет меньше только при использовании лишь некоторых фильтров. при этом код webui увеличится на ~250 строк. пусть решает руководитель. давайте это обсудим. может, что-то подкорректируем (хотя я постарался изложить только факты) и опубликуем для остальных разработчиков."
68624922,2332,buinsky,2015-01-04T08:11:42Z,"каждый запрос - это около 500 лишних пересылаемых байт (заголовок запроса и ответа). сейчас индикатор альтернативной скорости в webui работает неправильно. при переключении в программе использования альтернативной скорости в webui индикатор не меняется. т.е. нужно периодически получать информацию об использовании альтернативной скорости. также в webui нужно периодически получать информацию об метках и использовании приоритетов. что, для этих случаев нужны отдельные запросы? мне кажется, что нужно сделать несколько запросов только для использования в webui, которые будут передавать совместно данные, которые обновляются в одно и то же время. есть какие нибудь мысли по этому поводу и по поводу последнего поста glassez ?"
68626492,2332,glassez,2015-01-04T09:21:13Z,"то есть, твой основной замысел - хранить на стороне клиента все данные (по крайней мере, большинство из них) и периодически обновлять их путем запроса изменений. картина начинает прорисовываться. проблема в том, что ты так до сих пор и не дал целостного и подробного описания своего замысла. а ведь это не просто изменения текущего api, это совершенно другое поведение, другой api. и реализовывать его нужно параллельно существующему."
68627059,2332,buinsky,2015-01-04T09:44:52Z,"я предлагаю сделать запрос `json/webuimaindata` и пересылать в нем все данные (торренты, метки, текущую скорость, статус соединения и т.д.) в сокращенном виде, кроме данных во вкладках свойств текущего торрента, списка трекеров и содержимого торрента."
68627872,2332,sledgehammer999,2015-01-04T10:17:58Z,i don't speak russian.
68627994,2332,buinsky,2015-01-04T10:23:29Z,"i propose to make a request `json/webuimaindata` and send in it all the data (torrent, labels, current speed, connection status, etc.) in an abbreviated form, except data in the tabs of the properties of the current torrent trackers and list the contents of a torrent."
68628795,2332,sledgehammer999,2015-01-04T10:55:40Z,i this a separate issue from the one this pr tries to implement? i wonder what you discussed in russian.
68628997,2332,buinsky,2015-01-04T11:03:18Z,"it is a separate issue. if agrees with me, i will implement this in separate commit. could you write your thoughts for ?"
68630769,2332,glassez,2015-01-04T12:12:16Z,"i will try to describe what i understood from the plan of . and just complement it by my comments. i will write in english and russian, to more accurately understand what i mean. proposes to implement a completely different web api based on data synchronization between the host (qbittorrent) and web clients (you can call it web sync api, whereas an existing - web query api). this will work as follows. in some key points (usually, at the first request and on network errors, causing the loss of transmitted data), the client receives a complete copy of all data and saves it. it only asks for the changes that have occurred since the previous request and updates its copy of the data. sorting and filtering of data is performed on the client side. proposes to create a query `json/webuimaindata` (i think you can just `json/syncdata` - this will reflect its essence). but better, in my opinion, if we further differentiate between existing and new api, providing new **scope** to it - `sync/data` (or `sync/maindata`, if it is necessary to conduct separate sync some parts of the data). in this case, **scope** for an existing api can be renamed from `json` to `query` (it happens, for example, `query/torrents` and so on). я попытаюсь описать, что я понял из замысла . и сразу дополню это своими комментариями. писать буду по-английски и по-русски, чтобы все более точно поняли, что я имею ввиду. предлагает реализовать совершенно другой web api, основанный на синхронизации данных между основным приложением (qbittorrent) и его веб клиентами (можно назвать его web sync api, тогда как существующий - web query api). это будет работать следующим образом. в некоторых ключевых точках (обычно, при первом обращении и при сетевых ошибках, приводящих к потере передаваемых данных) клиент получает полную копию всех данных и сохраняет ее у себя. в последствие он лишь запрашивает те изменения, которые произошли с момента предыдущего запроса и обновляет свою копию данных. сортировка и фильтрация данных происходит на стороне клиента. предлагает создать для этого запрос `json/webuimaindata` (я думаю, что можно просто `json/syncdata` - это будет отражать его сущность). но лучше, по-моему, будет, если мы еще больше разграничим существующий и новый api, выделив для него новый **scope** - `sync/data` (или `sync/maindata` на тот случай, если придется проводить раздельную синхронизацию некоторых частей данных). при этом, **scope** для существующего api можно переименовать из `json` в `query` (получится, например, `query/torrents` и т.п.)."
68631094,2332,sledgehammer999,2015-01-04T12:23:38Z,"does this mean overhauling the webapi entirely(and again)? the client side sort seems to negate your previous changes(not necessarily bad). in the proposed api it seems that almost all commands will be gone. the client will download a bunch of data at startup, save it and manipulate on it. then on each request-update, hopefully a lot less data. only data that has changed. one question is would any webclient need all that data in the first place? or if the bulk of the initial data isn't that big, then i don't see any harm done. do you have anything to comment(negative or positive) on the proposed api?"
68631619,2332,glassez,2015-01-04T12:44:34Z,"no, it doesn't. if we implement this, it will exist in parallel with current api. for its operation it is only necessary to make one new request (or possibly several - see previous post) and implement a mechanism to compare data. the current api will not be affected (should not be affected), with the exception of maybe requests naming (see previous post). regarding the use of this new api in qbittorrent embedded web client (qbittorrent webui), it is, i think, a separate issue. for me, personally, it's all the same. so it's up to you. or, maybe other developers will be some suggestions on this issue. the main thing for me, if the new api will be created, that it was done professionally. and in this matter i will not leave alone."
68631761,2332,glassez,2015-01-04T12:49:31Z,"the volume of initial data will be slightly larger than the one that was passed earlier on every request (and the one that is passed now, if you don't filter). but it is with a proper implementation."
68632561,2332,sledgehammer999,2015-01-04T13:18:23Z,"hmm, ok. as an i idea i think it is good one. i now wait to see its implementation. i imagine that this pr should be incorporated with the new api and not now, right?"
68636148,2332,buinsky,2015-01-04T15:15:24Z,"done! , /webdev please check my commits."
68641452,2332,glassez,2015-01-04T17:43:27Z,"oh, you are fast! stand down a little bit, and then you will have to do a lot of extra work. first, still bear in mind that web api (i.e., those requests that qbittorrent handles) and webui (i.e., the web client, which comes with qbittorrent) are separate things (if you haven't realized). therefore, changes in them should be made separately. in this regard, you need to rebase your changes so that some commits touched the code of the main application and the other touched the web client code. secondly, in your place, i wouldn't edit the client code until such time as the work on the api will not end, and then you have to redo it constantly. thirdly, you need to rename pr so that its name reflects its essence, and also give a detailed description (this is not a simple bugfix, so you can ignore it). and yet. must approve requests renaming. so how this does affect compatibility with existing clients, this renaming should be done before version 3.2 will be released (to all api incompatibility appeared at one time). if is approved, it will be possible to do this in a separate pr, because the current can not be completed before the release of version 3.2."
68641655,2332,buinsky,2015-01-04T17:49:00Z,please write your last post in russian.
68641841,2332,glassez,2015-01-04T17:54:34Z,"о, какой ты быстрый! остынь немножко, а то тебе придется делать много лишней работы. во-первых, все-таки имей ввиду, что web api (т.е. те запросы, которые qbittorrent обрабатывает) и webui (т.е. тот веб клиент, который поставляется вместе с qbittorrent) это отдельные вещи (если ты этого еще не понял). поэтому правки в них нужно вносить отдельно. в связи с этим тебе нужно переделать твои изменения таким образом, чтобы одни коммиты затрагивали код основного приложения, а другие - код веб клиента. во-вторых, на твоем месте, я бы не торопился править клиентский код до тех пор, пока работа над api не закончится, а то тебе придется переделывать его постоянно. в-третьих, тебе нужно переименовать pr так, чтобы его название отражало его суть, а также дать подробное описание (это не простой багфикс, чтобы можно было игнорировать это). и еще. должен утвердить переименование запросов. так как это влияет на совместимость с существующими клиентами, то такое переименование нужно будет сделать до того, как версия 3.2 выйдет (чтобы все несовместимости api появились за один раз). если это одобрит, то можно будет сделать это в отдельном pr, т.к. текущий может быть не завершен до выхода версии 3.2."
68642362,2332,sledgehammer999,2015-01-04T18:09:23Z,"did you mean api renaming? json->query? if yes, since this is still unreleased we can rename it now. (i am still unsure how close v3.2.0 eta is in general. if you continue to improve on code i'll gladly accept it. especially webui)."
68642626,2332,glassez,2015-01-04T18:16:55Z,"yes. i think it should be done in a separate pr, so you do not forget (if you decide to release 3.2, and this pr is not yet ready). i tell to do it. сделай, пожалуйста, отдельный pr с переименованием запросов `json` в `query`. одобрил его."
68668078,2332,buinsky,2015-01-05T04:46:44Z,", it will be better to split this pr into 3 prs. it will be easier for me if prs will be merged one by one. so i left only first commit in this pr. , please merge it."
68868616,2332,buinsky,2015-01-06T14:05:20Z,will you merge the pr?
68870218,2332,sledgehammer999,2015-01-06T14:19:29Z,sorry i don't have time to review the final code at the moment. i'll do it in the weekend.
68931562,2332,buinsky,2015-01-06T20:52:39Z,i transfer partial response part of the code into future pr.
69457900,2332,sledgehammer999,2015-01-10T14:37:14Z,i didn't look too close in the non-c++ code. the rest is ok. sorry for the waiting.
44133616,1703,sorokin,2014-05-25T13:49:01Z,qbittorrent uses outdated version of boost without boost::atomic. ok.
44756977,1703,sledgehammer999,2014-05-31T19:16:20Z,i just finished the first pass. one general observation. the code identation should look like this(i am talking about the curly braces): [code block] no i need to do a second pass to comment about the correct flags in the status() call and to re-read the alertdispatcher code. we are almost ready for merging.
44757129,1703,sledgehammer999,2014-05-31T19:21:57Z,"wow don't make new commits. or if you like make a new commit that will correspond to an old one. and when all changes are done for each commit you will ""squash"" the new ones into the olds ones. (on their related ones). (don't worry i'll give instructions on how to do this on git)"
44757196,1703,sorokin,2014-05-31T19:24:56Z,i fixup my existing commits based on your suggestions. (git rebase -i)
44757220,1703,sorokin,2014-05-31T19:25:47Z,lets i push new version. and your will make a second pass on review.
44757259,1703,sledgehammer999,2014-05-31T19:26:53Z,not yet. the rest is simple enough to use the existing commits.
44757340,1703,sorokin,2014-05-31T19:29:47Z,oops. i already pushed.
44757643,1703,sledgehammer999,2014-05-31T19:40:29Z,i'll tell you when i'm done.
44759550,1703,sledgehammer999,2014-05-31T20:57:37Z,"anyway. let's say that i am finished. please review your edits in qbtsession.cpp regarding the alerts. i saw a few unjustified deletes. i will review the rest of that file when you do the rest and push the changes. please do this (using git rebase -i ) 1. do all the changes for [a link] commit into a new commit. 2. then ""squash"" the new commit onto the old one. (even if you fixup it doens't matter at this point) alternatively you can do first the git rebase -i but choose to ""edit"" the relevant commits. git will stop in the first commit for you to edit. go ahead and edit the relevant files for the required modifications for **that** commit. then `git add` those files. (git status is your friend). then to continue to the next commit do `git rebase --continue`. git will ask you for a commit message before continuing though. or if follow any other workflow. i just want to have in front of me a series of commits with the ""final"" code. thanks for your patience and cooperation."
44759577,1703,sledgehammer999,2014-05-31T20:59:14Z,edit: the commit i referenced above is just an **example**. i want you to post all the necessary edits for all the commits. i'll wait your comment that you're done before i start to look again at the code.
44770035,1703,sorokin,2014-06-01T07:58:18Z,where can i find all my old commits? (those that were here before force push)
44770317,1703,sledgehammer999,2014-06-01T08:16:46Z,"hey i think i have better/simpler interface of the alert dispatcher in mind. how about this: 1. dispatch() checks the type of the alert. if it isn't a `state_update_alert` it puts the alert into a queue (eg vector). 2. the readalerts() in qbtsession continues to operate in a fixed timer based approach. 3. each time the timer timeouts readalerts() requests the whole queue(like it does now) from the dispatcher via the getpendingalertsnowait() function. now because we want react almost instantaneously to `state_update_alert` we cannot wait for the timer to timeout. the dispatcher should have signal named `torrentupdates` or `statusesupdates`. in qbtsession constructor we do something like this `connect(m_alertdispatcher, signal(torrentupdates), slot(handletorrentupdates(const std::vector &)), qt::queuedconnection);`. then dispatch() instead of queueing this type of alert it will `emit torrentupdates`. according to the qt docs, when you connect the signal in this manner it is guaranteed that the slot will be called in the main thread even though the signal was emitted in another thread. this way you avoid the extra logic of event_posted and enqueuetomainthread() (and possibly other details). at his point, if i understood correctly the code, a signal is a emitted when every alert is received which isn't very desirable. we should queue them. ps: also the `stats_alert` may need its own signal to handle it almost instantaneously too."
44770376,1703,sledgehammer999,2014-06-01T08:19:58Z,i see you already have squash/fixup your commits. that's ok. just continue the way you like it. and just before merging we'll fix any stupid issues with commit messages or anything git related.
44770404,1703,sorokin,2014-06-01T08:21:22Z,you linked commit [a link] so i can address issues in it. but don't know how to find your feedback on other commits.
44770434,1703,sledgehammer999,2014-06-01T08:23:57Z,if you already forced pushed into the branch and have deleted the old commits(eg via squash/fixup) then everything is lost. github doesn't keep track of comments made in deleted commits.
44770479,1703,sorokin,2014-06-01T08:26:51Z,incorrect. when ui thread is slow many alerts are grouped into one signal.
44770526,1703,sledgehammer999,2014-06-01T08:29:16Z,"you are probably correct, but still i think its better to convert. this will mean that readalerts() will stay almost as is. no need to create a handlealerts() function. what do you think?"
44771840,1703,sorokin,2014-06-01T08:42:30Z,"although i do agree that it is better to have several queues for different kind of alerts. where alerts are properly coalesced, handled and appropriate signal is emitted. i think this is the direction for further improvements. at the same time i don't like the proposed timer approach. because it make unnecessary lag, and also it wastes unnecessary battery time (cpu must wake up to perform an action) and cpu time."
44771941,1703,sorokin,2014-06-01T08:45:55Z,handlealert() is just a cleanup to keep reasonable function size and nesting depth. it could be inlined into readalerts() function but this makes readalerts() less readable.
44771959,1703,sledgehammer999,2014-06-01T08:47:05Z,then how about this: 1. we should have a generalalerts signal and connect readalerts to it. 2. in dispatch() before exiting check for this: size of queue and interval since last emit. if queue has more than eg 20 alerts emit the signal. or if interval is bigger than 1s and queue has less than eg 20 alerts(not empty) emit the signal too.
44771978,1703,sledgehammer999,2014-06-01T08:48:08Z,i am going to merge this for readalerts() [a link] so don't worry about the depth atm. (i will merge it after this pull request)
44772069,1703,sorokin,2014-06-01T08:53:38Z,this will conflict with my changes. i have done similar cleanup in my last two commits.
44772100,1703,sledgehammer999,2014-06-01T08:56:00Z,i think will be ok with rebasing. just don't change readalerts() too much. or do you want me to merge that now so **you** can rebase on that?
44772258,1703,sorokin,2014-06-01T09:03:28Z,"i have found out that series of dynamic_cast is taking some time (small, but measurable). i hope that one day we will optimize repaint. if we optimize repaint this series of dynamic_casts will become second most expensive action in ui thread. i have found out also that have optimized dynamic_casts already. the problem is that his pull request conflicts this my changes. so i decided to reimplement his code on top of my commits. i want you to merge my pull request. because it contains all changes in pull request and also some other changes."
44772308,1703,sledgehammer999,2014-06-01T09:06:21Z,"but it also contains your name in the commit instead of glassez's... while we wait for glassez's reply, go ahead and implement the rest of the things that need changing. also what is your opinion on my last proposal on the dispatcher?"
44772504,1703,sorokin,2014-06-01T09:15:56Z,"i thought about this. this does make sense. but i decided to go with my current approach, because i don't see any benefits. currently it works in the following manner: if ui thread can not cope with a rate of alerts, alerts are coalesced. if ui thread manages to grab alerts very fast. it will grab them one at the time. this approach works well with short-time burst of alerts and also it adds minimal lag when alerts are rare. what are we trying to optimize/minimize?"
44772620,1703,sorokin,2014-06-01T09:21:43Z,should i change an author of commit?
44772654,1703,sorokin,2014-06-01T09:23:19Z,"looks like i answered all comments. if i have missed something, please let me know."
44772938,1703,sledgehammer999,2014-06-01T09:39:45Z,status: i am trying to re-write the status flags...
44773344,1703,sledgehammer999,2014-06-01T10:02:52Z,status: done with the cache torrent_status don't forget to overload the static functions of qtorrenthandle.
44773514,1703,sledgehammer999,2014-06-01T10:12:18Z,"1. fix your indentation. 2. don't include these 2 commits: [a link] and [a link] in this pull request. (you can keep them locally in a separate branch in case we need them. 3. after you're done with the above, i want you to explain to me something about the dispatcher (again)."
44774367,1703,sorokin,2014-06-01T10:33:27Z,done. fixed in alert dispatcher and in torrent statistics. ok. ready.
44774420,1703,glassez,2014-06-01T10:36:14Z,"i think my request can be merged before, at least because it to be previously created. besides, i now no time for this (even rebasing) - i need time for other tasks (webui). may not have to use my request if it will be easier to improve qbittorrent. but in this case i have some remarks on similar with my changes (i will comment on the appropriate places in the code if necessary)."
44774451,1703,sorokin,2014-06-01T10:38:15Z,", have asked me to not include two my last commits on pull request, you can find them at my master branch [a link]"
44774521,1703,sledgehammer999,2014-06-01T10:42:46Z,how about i merge [a link] now and then you can rebase your [a link] around it? can you do it?
44774566,1703,sledgehammer999,2014-06-01T10:44:49Z,also the build fails: [a link]
44775228,1703,sorokin,2014-06-01T11:21:07Z,"i made ~20 rebases on the last several hours. i get a bit tired of constant rebasing and resolving conflict. no wonder that the build has broken. i have provided you the work on top of my, i'm ok if you just change author. you want work on top of my. i don't want to make a rebase again. sorry, but i become tired of resolving conflict and a bit angry because this work is useless. i can do this work but later. if you want it right now, rebase it yourself. sorry."
44775356,1703,sledgehammer999,2014-06-01T11:28:50Z,the modifications i commented about shouldn't result in any conflicts... no need to get angry. take your time. don't rebase on glassez's request -forget about that code-. leave your last 2 commits out(as you already have done). pretty up the rest of the commits and when you're done leave a comment here so i can do one last pass over them. i repeat take your time.
44775407,1703,sledgehammer999,2014-06-01T11:31:17Z,"and to make your life easier: use the 'edit' keyword when doing git rebase -i. then you do the changes in the relevant files, you git add them and then git rebase --continue."
44790151,1703,sorokin,2014-06-01T21:37:50Z,i repaired the build. ok.
44790500,1703,sledgehammer999,2014-06-01T21:52:16Z,"while i was writing my question i understood what the situation is. but i have 2 simpler questions: 1. alertdispatcher.cpp line 61, i thought you said this re-assignment was unnecessary 2. (i assume i didn't misunderstand the usage of the qwaitcondition). why use the qwaitcondition and complicate things? when getpendingalerts() gets called if we don't have any alerts in the queue, just return an empty list. (i won't look at the rest of the commits atm. i am too sleepy. probably tomorrow)"
44790583,1703,sledgehammer999,2014-06-01T21:55:58Z,small nitpick: you have included again your last 2 commits in this pull request. (have them ready to do a separate pull request upon this request's merging)
44790609,1703,sledgehammer999,2014-06-01T21:56:50Z,ignore this. github seems broken. now those commits don't show up.
44791241,1703,sorokin,2014-06-01T22:21:54Z,"yes. we should check that there is still non-zero value in *tag, but if it is non-zero it should be equal to the value obtained before. without qwaitcondition ui thread will burn 100% cpu during in savefastresumedata() waiting for alerts."
44791344,1703,sledgehammer999,2014-06-01T22:26:29Z,this is what i get when i am sleepy. i thought that getpendingalerts() was called by readalerts()... ok i think that was my last grey area about alertdispatcher. i think you have done a really solid work on that class.
44985164,1703,sorokin,2014-06-03T16:09:25Z,how the merging is going? what is your decision with #1652? (i would like to start working on #1592 so i would like to have a branch i can base my work on)
44985395,1703,sledgehammer999,2014-06-03T16:11:05Z,i am doing a test build atm. so this will be merged pretty soon.
45000972,1703,sledgehammer999,2014-06-03T18:17:43Z,"i am merging this. thank you very much for the huge effort. **2 notes**: 1. there are 4 new files now. alertdispatcher.h, alertdispatcher.cpp, torrentstatistics.h, torrentstatistics.cpp can you leave at the top of the files a license notice like the rest of qbt files have? in alertdispatcher you can leave your email in the contact. in the torrentstatistics i am not so sure what should go there. you just moved code around. that code was mostly written by iirc. care to leave a comment about this? 2. in future pull request please have your commits **titles** start with a capital letter (and maybe end with a period). also try to make them as small and descriptive as possible. if you want to give a lot more info just use the commit **message**. thank you again. ps: i did some edits that you left out and fixes in a separate commit."
45006531,1703,sledgehammer999,2014-06-03T19:03:10Z,i am tagging you here since github doesn't have a pm system. make a pull request for your other 2 commits(about the alerts). i have 2-3 notes to comment but they are pretty simple to fix by you. thanks.
45024260,1703,sorokin,2014-06-03T21:39:58Z,woo hoo! it is merged. #1730 #1731
45135018,1703,sledgehammer999,2014-06-04T18:53:24Z,there is problem with atomicpointer and qt5 in alertdispatcher.cpp from gcc 4.9 on windows i get these: [code block] the only thing that i found is that the qatomicpointer class no longer provides operators \* and ! in qt5. check [a link] and [a link] class docs. any ideas?
45211689,1703,sorokin,2014-06-05T12:12:27Z,they changed an interface in qt5. in qt5 .load() and .store() functions should be used. we could place a ifdef here or use std::atomic (if we enable c++11) or use boost::atomic (if we update boost version).
45211885,1703,sledgehammer999,2014-06-05T12:14:35Z,the question is load() or loadacquire()? store() or storerelease() ? if you could prepare a new pull request with ifdefs that would be great.
45229582,1703,glassez,2014-06-05T14:55:45Z,"to take advantage of c++11, will limit the range of supported compilers. i think the maintainer will not do. although i also like some of the innovations of this standard (even little things like automatic type deduction make the code more compact when working with iterators, etc.)."
45238622,1703,glassez,2014-06-05T16:01:43Z,"i did not immediately realize... after all, i've got it compiles with qt5 fine. however, i use visual studio 2013. i dug around a bit in the code of qatomicpointer - it has conversion operator to pointer (to qalertdispatcher\* in this case), however, gcc, apparently, does not here an implicit conversion. what if you try to explicit? this will eliminate ifdef's."
45243601,1703,sledgehammer999,2014-06-05T16:40:39Z,do you mean type casting? yes we cannot switch to c++11 because i use msvc2008 for the windows official releases. (i don't want to depend on boost since qt has similar functionality)
45251768,1703,glassez,2014-06-05T17:50:23Z,"yes, i mean type casting."
45253205,1703,glassez,2014-06-05T18:02:23Z,"i just built qbittorrent (current master) on linux with gcc 4.8.1 so this is a bug of gcc 4.9, apparently..."
45262739,1703,sorokin,2014-06-05T19:23:36Z,"i guess store() relaxed as we do it under mutex and loadacquire. i'm not 100% sure. when i use std::atomic i usually use maximal ordering (sequential consistency), because usually performance doesn't matter. ok."
45275834,1703,sledgehammer999,2014-06-05T21:14:50Z,this is because of windows xp. i don't want to depend on extra runtimes. windows's users are fuzzy about total installed sized.
45336911,1703,glassez,2014-06-06T13:36:06Z,"do you use msvc2008 express edition? if so, then you can start using msvc2010 express edition with no problems (it contains some new features). newer releases are not supported windows xp."
46232851,1703,sorokin,2014-06-16T20:34:43Z,"i'm trying to prepare a patch to fix compilation with qt5. how to build qbittorrent with qt5. i tried option --with-qt5 in ./configure, but it doesn't work. it requires qmake from qt5 for building, but it still create a binary that uses qt4."
46237054,1703,sledgehammer999,2014-06-16T21:02:34Z,the terminal output of ./configure && make would be useful. also the contents of config.log and makefile should be useful too. (pastebin or similar is your friend)
46778931,1703,sledgehammer999,2014-06-22T11:43:12Z,"sorry guys for bothering you. but since in guthub there is no way to directly communicate with each other i have to resort in tagging. just so you know, my email is sledgehammer999.org if you want to have more direct chats. i just wanted to know what is your status. are you working on something? are you busy with real life?"
46789357,1703,sorokin,2014-06-22T18:54:40Z,./configure --enable-debug --with-qt5: [a link] config.log: [a link] make: [a link]
46789427,1703,sorokin,2014-06-22T18:56:58Z,i made a push request with my recent changes. a bit. but usually i have some time during weekend.
46789689,1703,sledgehammer999,2014-06-22T19:07:03Z,"i suspect that this is the terminal output after running ""make"". that output is really weird: the above line checks and recreates the makefile if needed with the qt5 qmake, which is correct. then a few lines below: this line recreates the makefile unconditionally using the qt4 qmake! can you post the contents of makefile after you run `./configure --enable-debug --with-qt5`?"
46789921,1703,sorokin,2014-06-22T19:16:18Z,my current makefile in qbittorrent/ directory: [a link]
46790021,1703,sorokin,2014-06-22T19:19:59Z,my current makefile in qbittorrent/src/ directory: [a link]
46790115,1703,sledgehammer999,2014-06-22T19:23:09Z,try deleting qbittorrent/src/makefile. it could be left over from previous builds/configurations. did that fix the problem?
46790188,1703,sorokin,2014-06-22T19:25:23Z,yes. thank you.
46790446,1703,sorokin,2014-06-22T19:35:55Z,now i have a few linking errors: [a link] linker command: [a link]
46790663,1703,sorokin,2014-06-22T19:43:19Z,hm. looks like something was not rebuild. i will do make clean && make.
46790918,1703,sledgehammer999,2014-06-22T19:54:01Z,you probably know this bug `make -jx` where x marks cores/threads speeds up the compilation process.
46791197,1703,sledgehammer999,2014-06-22T20:04:38Z,"i meant: you probably know this, but make -jx where x denotes how many cores/threads to use. this speeds up the compilation process."
46791265,1703,sorokin,2014-06-22T20:07:01Z,"yes, thank you. i know about this flag, but always forget to use it. :-)"
46791292,1703,sledgehammer999,2014-06-22T20:07:54Z,did the linker error go away?
46791490,1703,sorokin,2014-06-22T20:14:35Z,"yes. linker error have gone. i think it is a bug, but reconfiguration doesn't force a rebuild of object files."
564712175,11637,FranciscoPombal,2019-12-11T20:10:42Z,"these changes are suggestions from my experience with using qbittorrent ""in the field"". the numerical values, in particular, don't have a bulletproof justification, it's just a ballpark. the idea is to optimize defaults for the common case, where it is understood that ""common case"" now also includes users with relatively fast connections (50+ megabits to 1 gigabit, my condolences to any australians or americans reading this) and machines (with ssds, and the like). the goal is to do this without raising the minimum requirements to run qbittorrent with several torrents too much (i think the main concern would be memory usage). of course, as always, users at either extreme end (ultra fast machines and connections, machines dedicated to high speed seeding, racing, or users with very low available memory and other system resources) will need to tune their settings for their specific use case. i would appreciate comments about all of these potential changes, but especially relating to the `watermark*` ones. does the memory consumption of these settings increase proportionally to the number of active torrents or peers or is there a single send buffer for everything? if it is the former, then at least the value for `send_buffer_watermark` is probably unreasonable and wasteful for everything except the fastest connections. additionally, how difficult would it be to detect the number of hardware threads on a system at runtime? i ask this because, like i said in a previous discussion, i think the default value `aio_threads` should be changed to be `4 * number_of_hardware_threads`. the reason is that libtorrent will spawn 1 sha-1 thread for every 4 `aio_threads`. nearly all systems will perform better, particularly when rechecking, if libtorrent spawns as many sha-1 threads as there are hardware threads available. nowaydays most people have machines with at least 2 cores (laptops) or 4 cores (desktops), and many people have more than this. with `aio_threads` set to 4, libtorrent will only ever use one of them for sha-1. but that is a matter for another pr... i would appreciate guidance, thanks"
564939815,11637,FranciscoPombal,2019-12-12T10:10:37Z,"yes, that is my main concern as well. i am open to suggestions regarding all of the fixed numerical values relating to memory usage, especially the send buffer stuff. ultimately, i can remove those kinds of changes from this pr, but i still think the other changes (like announcetoalltrackers) are worth it on their own."
565244701,11637,sledgehammer999,2019-12-13T00:13:14Z,"personally, i wouldn't like this change. however, if others agree i am not going to block this. iirc `true` was the default for some time. i can't remember the exact reason we switched back, but i think it had something to do with webui users (and console users). not relevant anymore after my #11592 was merged. for the others, i don't have any particular comment."
565249363,11637,FranciscoPombal,2019-12-13T00:32:47Z,"what are your reasons for not liking it? it would be nice to know. in any case, this change can be subject to a vote, it it is all the same to you. it would make sense to be `true` by default, because it is better for the average user while not making things more difficult for those who want it `false`. users who want this set to `false`, i.e. webui and console users, already have to change the config to: - set the port number to the desired one, as it is unlikely that qbittorrent randomly assigns the exact fixed port number they want on first run. - change a bunch of settings they would have to anyway (password, etc). these users have to edit the config either way, might as well make it explicit that setting a fixed port is intended for advanced usage. in light of this, if you also don't have strong feelings one way or the other, we could vote on whether this should be changed or not, like above. yeah i realized it became irrelevant as well i will rebase this on top of the current master and remove this change."
565287795,11637,Chocobo1,2019-12-13T03:41:25Z,"just to make sure you guys are talking about the same thing, the affected setting is for bitorrent port and webui always listen on a fixed port 8080."
565397325,11637,FranciscoPombal,2019-12-13T10:54:44Z,"yes, and anyway webui users typically want to change both values. for ""regular"" gui-only users, random listening port is better for the reasons outlined above, and the webui port is not important for them."
565405439,11637,FranciscoPombal,2019-12-13T11:19:41Z,rebased and dropped ipv6 setting change due to [a link]
565465557,11637,sledgehammer999,2019-12-13T14:42:17Z,about my comment for random port: i did some history digging and issue digging. i couldn't find the problem i was remembering. so there's a possibility i misremember this. also after #10523 it probably isn't a big problem to go full random. i missed this. don't we break some kind of universal guideline on good behavior for clients if we enable this by default?
565509122,11637,LordNyriox,2019-12-13T16:31:45Z,": does that matter, given that a significant chunk of your userbase seems to expect the behavior that enabling it would provide?"
565836630,11637,FranciscoPombal,2019-12-15T18:58:24Z,"yep, my thoughts exactly."
565837133,11637,ghost,2019-12-15T19:05:28Z,queue should be disabled by default. have seen a lot of users who switched from utorrent/bittorrent and are limited to only seeding 3 torrents at a time by default. some don’t even understand that the torrents queued for seeding are actually not seeding. what’s the devs logic to set such a low value? by default seeding should be unlimited (-1). however setting a limit on max active downloads is reasonable.
565942654,11637,Seeker2,2019-12-16T07:42:20Z,"announcetoalltracker should be left off, but announcing to 1 tracker on all tiers should be on. otherwise, this will serve to reduce or eliminate https public trackers which have far higher bandwidth requirements than regular http trackers (let alone udp ones!) the https trackers are far more likely to run into bandwidth hosting issues if every peer or seed starts using the https tracker as well as the regular tracker on the same tier. quite a few torrents are made with tracker tiers for a reason, and hammering all those trackers by default because of connectivity issues only some people have seems a really poor workaround. if qbittorrent is failing to switch to a working-and-reachable tracker on each tier when one is available in a timely manner (not taking 3+ hours just to switch between 3 trackers), perhaps that should be investigated and fixed instead. i had to clarify working-and-reachable trackers, because many proxies do not work with common udp trackers due to them not supporting udp packets. ...or isps that block/scramble unencrypted tracker packets, which might prevent http trackers from working. ...or ipv6 trackers, if there are any."
566662718,11637,NotTsunami,2019-12-17T17:22:28Z,agreed. i am in favor of all changes except announcetoalltrackers.
566705270,11637,FranciscoPombal,2019-12-17T19:09:49Z,"upon reading 's post and reading through [a link] one more time, i think i have changed my mind. imo, the correct fix would be to: 1. > announcetoalltracker should be left off, but announcing to 1 tracker on all tiers should be on. (what said). 2. provide a more sophisticated tracker edit dialog, that clearly shows which tier a tracker is in and allows the user to move trackers between tiers and add trackers to specific tiers. thus, if a user is having trouble finding peers, they can add a bunch of trackers each to a different tier. regarding point 2: the downside is that the current feature of ""automatically add the following trackers to new torrents"" would probably need an upgrade, to support specifying the tiering of the auto-added trackers. it should be noted that, with the existing code base, no combination of options can bring qbittorrent to full compliance with [a link]. what's more, [a link] is very specific about the announce order in each case, but doesn't specify whether a client should always announce to all trackers in a tier even if the first was successful."
566827592,11637,FranciscoPombal,2019-12-18T01:39:02Z,"dropped the change to the `announcetoalltrackers` setting in light of previous comments. should i remove the changes to `send buffer` stuff, which will probably require much more discussion? since we all seem to be in agreement about the other changes, they could get merged right away. i was kind of hoping this would be able to make it in some form to 4.2.1, but alas."
566854402,11637,Chocobo1,2019-12-18T03:45:17Z,i think you missed one change discussed here: [a link]
566854670,11637,Chocobo1,2019-12-18T03:46:33Z,:thumbs_up:
566873471,11637,ghost,2019-12-18T05:26:26Z,use random port should be off. as 4.2 addresses the default port 8999 already.
566877507,11637,ArcticGems,2019-12-18T05:45:20Z,should this one still be included since it's already been done with this merged pr??: [a link]
566905202,11637,Seeker2,2019-12-18T07:22:25Z,"another elephant-in-the-room concerning people having trouble getting torrents working is it's not very apparent why a torrent isn't downloading or uploading. from what i understand, the only clue in the main torrent list window is the torrents with trackers errors show up as ""stalled"". this post: [a link] ...doesn't seem to be a case of all udp trackers failing or all apparent trackers on a torrent being tried-but-failing. qbittorrent doesn't even appear to be trying on some. the first torrent shows seeding and connected to 1 seed, which i've seen numerous times in my own use of qbittorrent. the middle torrent shows a poorly-created torrent with all the trackers in 1 tier. i manually split those trackers into different tier groups when i see them on utorrent, but that's annoying to do in utorrent and a huge pain in qbittorrent. that's one of the few examples where it's really tempting to just announce on all trackers, but what a mess doing that! (there might be 100+ trackers on it!) the follow-up post by the same person: [a link] ...shows qbittorrent clearly failing on tracker updates where utorrent does not."
567283718,11637,FranciscoPombal,2019-12-19T01:09:59Z,"addressed everything. thanks, done. done. ? perhaps qbittorrent should add a new state, something like ""tracker error"", to better informed the user. and it also should not fail announces when other clients don't as well. maybe some kind of timeout is set too low? anyway, those problems are all out of scope of this pr."
567300631,11637,ghost,2019-12-19T02:19:40Z,qbit is already setting a random port on first startup. if you’re going to set it on every startup then there’s still some chance of setting a port used by other apps. also those who’ve been using qbit for some time now may have forwarded a port manually on their router for qbit. if it becomes random they’ll lose that until they go into the settings and set it to not random. the proper fix for this issue would be to use a different port if the current port fails to be listened on.
567301684,11637,Chocobo1,2019-12-19T02:24:15Z,"just to clarify, the port number is actually assigned from os so it is (very) unlikely to be used by other apps. existing installations won't be affected. it only matters for new installs."
567304458,11637,ghost,2019-12-19T02:37:26Z,some trackers track session data based on ip:port. if a random port is acquired everytime it’ll generate a new session everytime qbit is restarted.
567306350,11637,ArcticGems,2019-12-19T02:46:28Z,"i think this option is something many new user could easily miss = they configurate their router and next time they start qbittorrent the port listening fails, they will likely skip checking qbittorrent options and create a new git issue."
567306875,11637,ghost,2019-12-19T02:48:54Z,yes exactly. they might miss that as almost no client sets random port by default.
567550971,11637,FranciscoPombal,2019-12-19T16:01:53Z,"no one sets up port forwarding on their routers without first checking that they have selected a fixed port. and, in case they don't, the crowd that sets up port forwarding also knows how to setup a fixed port. random port at every start is safer than simply at first startup in the general case, for the reasons outlined above."
567569244,11637,FranciscoPombal,2019-12-19T16:47:10Z,rebased
567570712,11637,ArcticGems,2019-12-19T16:50:48Z,"i was talking about the **second** time **new** user start qbittorrent (**after** the first startup). you shouldn't underestimate the ""average user"" carelessness (i experience this often in my work :stuck_out_tongue:)"
567571744,11637,Chocobo1,2019-12-19T16:53:22Z,fyi you only need to rebase a pr when you saw merge conflicts on github (you can find examples in older prs of what it looks like). this also save some time for me and others to review & re-approve the pr.
567573040,11637,FranciscoPombal,2019-12-19T16:56:21Z,"i still don't understand what the problem is. user that wants to setup port forwarding goes to settings, looks around and sees this: ![a link] i'd say this is pretty clear and difficult to miss. the option to select the port number is even greyed out until they unselect ""use a different port each startup"". if they are careless enough to miss it the first time, they will surely see it the second time when they go double-check the port number and notice it has changed."
567573901,11637,FranciscoPombal,2019-12-19T16:58:24Z,"hmm, sorry, i though i needed to rebase up to the most recent commit regardless. thanks for the heads-up."
567578865,11637,ArcticGems,2019-12-19T17:11:02Z,"you would be suprised how many who don't double-check things and choose to complain immediately to the support. anyway, you guys can decide what you think is the best."
567635413,11637,sledgehammer999,2019-12-19T19:45:32Z,"actually no. we setup the variable like this: [code block] and then immediately in the session constructor we do this: [code block] this would have the nice sideeffect that until a user chooses a different setting he would get a random port on each start. however, the settings file is saved even if the user doesn't change something and immediately closes the client. (this it saves the new random port to the conf file as a fixed value). offtopic: the saving of the conf file immediately after launch and exit without changing a settings smells like a bug and should be investigated later. we shouldn't write the conf file unnecessarily. it could lead to data loss."
567638011,11637,Chocobo1,2019-12-19T19:52:53Z,"i think you're missing the context, i was referring to [a link] and see this: [a link] it seems it only happens once for each fresh install, not a big deal for me since there is always some other settings being modified along with it (such as eula on program start)."
568246051,11637,p43b1,2019-12-22T09:33:52Z,old but gold answer about why announcing to all trackers (edit: in a tier or not it's not important) is a very very bad idea: [[a link]
568324316,11637,FranciscoPombal,2019-12-23T01:29:39Z,anything else preventing the merge?
568338207,11637,Chocobo1,2019-12-23T03:07:55Z,"i can't merge a pr (outside of webui stuff) with only my approval, it will require other collaborators approval too. lets ping for review."
568354506,11637,glassez,2019-12-23T04:54:38Z,"i have my doubts about ""random port"" by default. having it is more likely to run into a busy port from time to time than having a well-known port. as of ""disk cache size"" i have no personal experience. but as far as i remember there were the problems with it in the past and we repeatedly changed its value. will we step on the same rake again? my general opinion about default option is qbittorrent should work from the scratch on typical system of regular user. btw, guided ""first time run settings"" dialog will be useful, imo."
568356206,11637,ArcticGems,2019-12-23T05:04:44Z,"or a option during installation to choose between ""regular settings"" or ""low-end computer settings"". (a option that can also be made afterwards in qbittorrent option). example = - regular settings - low-end computer settings - custom (only in qbittorrent option: automatically switch to this when user manually change relevant settings)"
568503481,11637,FranciscoPombal,2019-12-23T15:24:53Z,"this was discussed above. the problem is precisely that qbittorrent does not use a well-known port. it uses a random port determined at first startup, which stays that way. there is a chance that the random port chosen at first startup is not the best, so always randomizing the port enables users to fix whatever port choice problem arises via a simple ""turn it off and on again"". as discussed above, setting it to `auto` lets libtorrent select: - more reasonable values for users with more resources - similar values to what we have now for users in more constrained environments so it is a strictly better option than the fixed value it has now. yes. that is why i am proposing these changes. i know from experience that certain settings are not optimal for the average case (mostly `checkingmemusage` and `sizediskcachesize`). additionally, the proposed changes take into account users with low-end/low-power machines, such as raspberry pis. yes, something like the ""bittorrent settings calculators"" of old. ideally, libtorrent could even have the possibility of auto-adjusting most important settings based on a short automatic test. but that is for another day."
568513216,11637,Chocobo1,2019-12-23T16:05:06Z,"that is not precise enough, see my relevant posts above: [a link] [a link] in short, with `userandomport = true;` the port number will be assigned by the os (randomly) which should be an unused port at the time making the api call."
568520298,11637,glassez,2019-12-23T16:33:52Z,"well, it's good."
568648649,11637,Chocobo1,2019-12-24T04:27:19Z,thank you!
581267766,11637,ghost,2020-02-03T07:02:01Z,seeing some crazy disk i/o when diskcache is set to auto in a 32g system.
581342456,11637,arvidn,2020-02-03T10:26:50Z,"""crazy"" good or ""crazy"" bad? is the disk cache itself being flushed to swapfile?"
581354219,11637,ghost,2020-02-03T10:54:04Z,crazy bad. it started reading at 150 mb+ from disk. no download/upload ongoing. maybe it was loading files onto cache from disk?
581469288,11637,FranciscoPombal,2020-02-03T15:29:57Z,"according to current libtorrent code, auto would set the cache to around 800 mib on a 32 gib system. this is probably excessive. you can manually set it to lower. meanwhile, libtorrent could set auto cache to be `amount_of_ram/60` or even a flat value of, say, 500 mib for systems with > 16 gib of ram."
581473338,11637,ghost,2020-02-03T15:38:10Z,most people would not want to waste that much ram on a torrent client. when people see that much disk i/o or ram usage they’ll probably switch to some other client instead. why not keep the default to a low value so everyone is happy? if someone wants to allocate more ram they could change it from settings.
581475463,11637,arvidn,2020-02-03T15:42:40Z,"i don't think 800 mib is excessive. if one downloads a torrent, if the whole torrent can fit in the cache you get the best performance. it's not obvious to me that setting the cache to a high value is inherently problematic (apart from the fact that the process will use a lot of *anonymous* memory, which won't get evicted gracefully under memory pressure). could you provide more details of what is being read from disk? is a file being checked? is a file being moved? you say 150 mb (i assume you mean per second), would you expect libtorrent to read faster or slower than that? (and why?) what tool did you use to measure the 150mb/s, and what exactly did it measure?"
581479025,11637,ghost,2020-02-03T15:49:40Z,i think the disk read maybe unrelated. it could be due to some file check on startup(even though nothing was saying checking). 800 mb is not too much but if your system is not dedicated to torrenting you might want other processes to use that extra ram. basically it all depends on priorities.
581480146,11637,arvidn,2020-02-03T15:52:01Z,"agreed. in fact, in the next major release of libtorrent (2.0) the disk cache will use the kernel facility, to make it use as much ram as the kernel has available to it, and gracefully evict it when the system needs more free ram."
581523951,11637,FranciscoPombal,2020-02-03T17:24:26Z,"this change came about because the vast majority of users have < 32 gib ram, and for them the previous fixed disk cache value was sometimes a major performance bottleneck."
581528189,11637,ghost,2020-02-03T17:34:08Z,"i see. but even on a 16/8 gib system this would use an amount of ram which is ""significant"" to some users. specially when other alternatives might be using lesser amount of ram with quite similar performance why would anyone opt to use qbit? unless someone can prove that using a 500 mib cache instead of 64 gives a significant performance boost, this will remain up to debate."
581539085,11637,FranciscoPombal,2020-02-03T17:59:33Z,"i did not claim that 500 mib is a better value than 64 mib. my point is that currently, libtorrent assigns ""reasonable"" values for users that have 512 mib ram and up, with the exception of users with 2 gib (for these users, auto sets the value to ~68 mib, which is basically the same as before). here, ""reasonable"" means ""larger enough than 64 mib to not be a bottleneck but not so big that users would complain about excessive ram usage"". to quote my table above, extrapolated from the libtorrent code: it's with 32 gib and up that the current libtorrent logic starts setting values that are perhaps too big. but like arvid mentioned, all this will be resolved in libtorrent 2.0. nobody will have to fiddle with setting the amount of cache anymore. until then, this is a workaround to: - prevent tanking performance due to too little cache - dissuade users from setting it to silly values like 1 gib and up."
581838796,11637,ghost,2020-02-04T10:19:47Z,"on a desktop environment 400 mib could be unreasonable to many users. i believe the values that are automatically set by libtorrent should be re-calibrated to not go over a pre-set maximum. like don't set anything beyond 200 mib for even >8 gib systems. the user always has the option to configure the cache settings if he's experiencing a bottleneck. cache related bottlenecks will not happen in every use case. one guy could download a 400 mib file to his cache but if no one is downloading from him, keeping that data in cache and wasting the memory sounds unreasonable to me. also downloading to cache will not give any significant speed boost as well if the network is not fast enough. so is it ideal to use a large cache even if someone has a very slow network?"
581894097,11637,arvidn,2020-02-04T12:46:38Z,"it seems reasonable to make the ""logarithm"" extend past 4 gib. i'm open to suggestions. here's the current logic: [a link] maybe there should be another tier at 8gib"
581908157,11637,FranciscoPombal,2020-02-04T13:25:33Z,i think these would be reasonable target values: - 8 -> 200 mib (same as now) - 12 -> 250 mib - 16 -> 300 mib - 24 -> 350 mib - 32 -> 400 mib - \>32 -> 512 mib i don't think it makes sense to fine tune too much for more than 32 gib since: a) it is already a huge amount b) libtorrent 2.0 will probably come around way before systems with >32 gib ram become common place among the majority of the user base (whereas systems with 8-16 gib ram are already common now). thoughts?
582027341,11637,xavier2k6,2020-02-04T17:37:16Z,i think the current method should be kept **as is** but with the addition of below: a new tier(s) at 8gib/16gib or 32gib there should probably be a max upper limit cap for the manual setting of the disk cache setting too. (just like the outstanding memory when checking torrents is capped at 1024mib) should manual disk cache setting only have a range up to max 1024mib?? this would fall under the **current** calculation: * 32 gib ram: 32768/40 = ~800 mib
582042491,11637,ghost,2020-02-04T18:11:54Z,"if this is the current logic then the above mentioned calculations are not correct. you're take a 40th of everything exceeding 4 gib a 30th of everything exceeding 1 gib and a 10th of everything below a gib and adding those up to get the final cache value? so on a system with 8 gib ram it would be using around ~256mib not ~200mib? anyways, if that's the case then adding another tier on 8gib would help."
582046930,11637,FranciscoPombal,2020-02-04T18:22:08Z,"the table you quoted is what this pr implements. in the comment above yours, i suggested new cache values for systems with large amounts of ram, which is what we are now talking about. without this pr, (i. e. in all stable releases of qbittorrent thus far), the cache is set to 64 mib for everyone. 8 gib ram = 8192 mib ; 8192/40 = 204,8"
582048858,11637,ghost,2020-02-04T18:26:33Z,the code doesn't do a 8192/40. check the link.
582082520,11637,xavier2k6,2020-02-04T19:45:26Z,"i thought the quoted table was what the ""**auto**"" option **implements currently** ie the libtorrent ""logarithm"" if that's true then my opinion is the same, it should stay as is & tweaked with new tier(s) & i do apologise in advance if i've taken it up wrong/misunderstood. you are suggesting to lower the cache values though on what the ""logarithm"" does currently?? btw - i am a plus 1 for implementing the default of ""auto"" if it does in fact use the libtorrent ""logarithm"""

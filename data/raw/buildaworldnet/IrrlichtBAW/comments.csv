id,pr_number,user,created_at,body
524583954,358,devshgraphicsprogramming,2019-08-24T22:01:40Z,"ok @Crisspl  I see that retrofitting this shit to work with `SMaterial` and `ICPUMaterial/IGPUMaterial` is rather cumbersome.

Maybe after you get back it would make more sense to implement these 50%
https://repository.genmymodel.com/devshgraphicsprogramming/VulkanComputeAndRenderPassIndependentPipelines
https://repository.genmymodel.com/devshgraphicsprogramming/VulkanRenderpassIndependentPipelines

This means an `IRenderPassIndependentPipeline<>` and `IComputePipeline<>` without any `IPipelineLayout<>` objects implemented yet (that's just to much).

In place of `IPipelineLayout<>` you can use the current  `SMaterialLayer<>`

`IDriverPipelineCache` is a cache for helping to speed up the creation of new *compute* pipelines (separate from the runtime per-thread caching on OpenGL), there's an actual Vulkan API object for that, but with OpenGL we could put that to some use, like storing introspection or compiled SPIR-V for parsed GLSL + extension list. For now it can be an empty useless object.

Then at-least we:
- disable/enable blend per FBO attachment
- finally support all blending modes and factors on any FBO attachment separately
- separate color mask per attachment
- support all the Render/Raster states that vulkan advertises (lots of multisampling state)
- finally support stencil operations properly (can rewrite OITZoo without bare OpenGL)
- support the GL_PATCH primitive type without fucking guessing from whether we're using a tessellation shader


This changes our asset hierarchy a bit, In the follwing way.

~ I<>MeshBuffer -> I<>MeshDataFormat -> I<>Buffer ~
I<>MeshBuffer -> I<>RenderpassIndependentPipeline & I<>Buffer -> I<>SpecializedShader & I<>PipelineLayout/SMaterialLayer

So I<>MeshBuffer takes over the I<>Buffer vertex input bindings (so now vertex and index are stored in the same place) while I<>RenderpassIndependentPipeline replaces the remaining functionality of I<>MeshDataFormatDesc.

I<>RenderpassIndependentPipeline also replaces everything except for `SMaterial::TextureLayer[]` which is now moved outside as a member of `I<>MeshBuffer` instead.

P.S. Adding support for Compute shaders might be super easy now, just an `IVideoDriver::setComputePipeline` + `IVideoDriver::dispatchCompute{Indirect}()`
P.P.S.  In Vulkan Compute and Graphics pipelines can be set separately, we'll try to emulate the same with OpenGL."
528044524,358,devshgraphicsprogramming,2019-09-04T19:16:00Z,anything fucked up after the merge?
528065780,358,Crisspl,2019-09-04T20:12:42Z,"nah, not yet at least"
530796801,358,devshgraphicsprogramming,2019-09-12T12:11:27Z,Where's the compute pipeline?
530864384,358,Crisspl,2019-09-12T14:55:19Z,">Where's the compute pipeline?

in next (last currently) commit"
533020039,358,devshgraphicsprogramming,2019-09-19T08:12:36Z,"@Crisspl you need a `IPipelineLayout::isCompatibleWith(const IPipelineLayout*)`

its needed for a lot of things, such as deciding if descriptor sets need to be unbound or push-constants are nullified (in `IRR_DEBUG` we can push an all 0s range on the new pipeline when this happens, and do nothing on release builds)."
533065065,358,devshgraphicsprogramming,2019-09-19T10:14:54Z,@Crisspl you may want to read (but not apply fully) the ideas in #25 and #59 
533500701,358,devshgraphicsprogramming,2019-09-20T10:31:43Z,"@Crisspl  check if this is true in the Vulkan spec
>There might be something that says that if your pushconstants are incompatible, your descriptor sets are also invalidated"
533518816,358,Crisspl,2019-09-20T11:41:06Z,"yes, compatibility for descriptor sets requires also compatibility for push constants. And compatibility for push constants requires exactly the same push constant ranges"
534290449,358,Crisspl,2019-09-23T21:22:11Z,Observation: lack of assumption that `vertex buf binding` = `attrib number aka location` makes hash for VAOs more complex and less probable that fitting VAO will be found in cache (+ more VAO objects needed to be created). 
534320242,358,devshgraphicsprogramming,2019-09-23T23:12:13Z,"> Observation: lack of assumption that vertex buf binding = attrib number aka location makes hash for VAOs more complex and less probable that fitting VAO will be found in cache (+ more VAO objects needed to be created).

How big is the hash with the above @Crisspl  ?

P.S. The `E_FORMAT` enum has less than 256 values (actually 197), so could use `EF_UNKNOWN` as a value for a disabled vertex input location. Binding is 4 bits, and relative offset 11bits (max value is 2047).

So this gives you 15 bits per location, and we have 16 locations... so 46 bytes for location hash.

Then you only hash the input rate and stride per binding, input rate is 1 bit and stride is 11 bits just like relative offset. So 32 bytes here.

Total is a 78 byte hash.
"
534931687,358,devshgraphicsprogramming,2019-09-25T09:16:47Z,"Extras to resolve:
https://github.com/buildaworldnet/IrrlichtBAW/pull/358#commitcomment-34799198"
535013843,358,Crisspl,2019-09-25T13:08:35Z,"what about `glCreateSamplers`? For some reason until now we were using `glGenSamplers` and somehow it was working, not why. I'm going to add COpenGLExtensionHandler but i see there's this line
```
static PFNGLCREATESAMPLERSPROC pGlCreateSamplers; //NULL
```
seems kinda mysterious."
535063575,358,devshgraphicsprogramming,2019-09-25T14:57:17Z,"> what about glCreateSamplers? For some reason until now we were using glGenSamplers and somehow it was working, not why. I'm going to add COpenGLExtensionHandler but i see there's this line

If you don't have EXT nor ARB DSA, then use Gen samplers, if you have DSA then create.
You can make an 
```cpp
extGlCreateSamplers
```
that wraps around the DSA thing and emulates it (like the other create/gen wrappers)"
535249973,358,Crisspl,2019-09-25T22:33:29Z,we have to know what (thing/type/...) should go to `driver::draw*Indirect()` in `vao` parameter. As for now it was `IMeshDataFormatDesc<video::IGPUBuffer>*` but obviously it cant be like this anymore
535250554,358,Crisspl,2019-09-25T22:35:50Z,also: look at a few of my last commits and look for comments with `TODO`. i have some questions regarding driver's member `ResetRenderStates` 
535254095,358,devshgraphicsprogramming,2019-09-25T22:49:45Z,"> we have to know what (thing/type/...) should go to driver::draw*Indirect() in vao parameter. As for now it was IMeshDataFormatDesc<video::IGPUBuffer>* but obviously it cant be like this anymore

ok the drawcall cannt set the VAO/Pipeline implicitly inside the draw anymore, we need a `bindPipeline` and `bindDescriptorSets` and `pushConstants` just like we used to have `setMaterial` that is separate from `draw`"
535254191,358,devshgraphicsprogramming,2019-09-25T22:50:08Z,"> also: look at a few of my last commits and look for comments with TODO. i have some questions regarding driver's member ResetRenderStates

Could you list them with links?"
535254856,358,Crisspl,2019-09-25T22:52:49Z,">ok the drawcall cannt set the VAO/Pipeline implicitly inside the draw anymore, we need a bindPipeline

so meshbuffer shouldnt hold graphics pipeline object?"
535255804,358,Crisspl,2019-09-25T22:56:52Z,">Could you list them with links?

https://github.com/buildaworldnet/IrrlichtBAW/pull/358/files#diff-e542fbce317985be1bfa2e51a7fe1a7eR1042
https://github.com/buildaworldnet/IrrlichtBAW/pull/358/files#diff-e542fbce317985be1bfa2e51a7fe1a7eR2703"
535257016,358,devshgraphicsprogramming,2019-09-25T23:02:13Z,"> so meshbuffer shouldnt hold graphics pipeline object?

yes it should, you can use it inside the draw the validate the same one has been bound as required"
535258084,358,Crisspl,2019-09-25T23:06:49Z,">yes it should, you can use it inside the draw the validate the same one has been bound as required

O_O oh ok"
535265523,358,devshgraphicsprogramming,2019-09-25T23:34:44Z,"@Crisspl does our raster parameter struct have a ""rasterizerDiscard` boolean?"
535265945,358,Crisspl,2019-09-25T23:36:41Z,">does our raster parameter struct have a `rasterizerDiscard` boolean?

yes"
539904153,358,devshgraphicsprogramming,2019-10-09T08:48:34Z,"@Crisspl there's a bunch of files in 
https://github.com/Crisspl/IrrlichtBAW/blob/shaders/source/Irrlicht
That have last been modified over a year ago, they're probably as good as dead now (i.e. `COpenGL*Renderer`)"
539904451,358,devshgraphicsprogramming,2019-10-09T08:49:22Z,"@Crisspl also the following function in `IVideoDriver` will give you a headache (abstract non defined)
`virtual void removeAllTextureBufferObjects() =0;`
you can kill it"
541240709,358,Crisspl,2019-10-11T22:09:19Z,"To make dynamic offsets work without copying of arrays, i'd have to modify precomputed (in `COpenGLDescriptorSet`) multibind params in-place.

(this obviously requires `COpenGLDescriptorSet::getMultibindParams()` to return params struct as non-const ref; this implies that GL state tracker structs have to hold descriptor sets as non-const [smart] ptrs; this implies that `driver::bindDescriptorSets()` has to take descriptor sets as non-const ptrs as well)

Ofc after modification and running multibind calls i'd have to bring params to previous values. But real implications are that concurrent access to precomputed multibind params in COpenGLDescriptorSet is out of question.
So.. either that or we have to copy arrays of offsets in order to apply dynamic offsets. I personally think that copying is much better here (copying has to happen only if descriptor set was bound with any dynamic offsets, only offsets arrays are copied, and ofc it concerns UBOs and SSBOs only)"
541251155,358,devshgraphicsprogramming,2019-10-11T23:02:20Z,"> So.. either that or we have to copy arrays of offsets in order to apply dynamic offsets. I personally think that copying is much better here (copying has to happen only if descriptor set was bound with any dynamic offsets, only offsets arrays are copied, and ofc it concerns UBOs and SSBOs only)

This small amount of copying makes sense, but only in COpenGLDriver and on-stack (91+96 values on stack, current OpenGL maximums for SSBO and UBO counts)."
542382331,358,Crisspl,2019-10-15T20:06:50Z,"Done everything except:
* ~https://github.com/buildaworldnet/IrrlichtBAW/pull/358#discussion_r332878486 (iterator pair...)~
* ~`clearScreen()` GL state changes (related: https://github.com/buildaworldnet/IrrlichtBAW/pull/358#discussion_r328449492 and https://github.com/buildaworldnet/IrrlichtBAW/pull/358#discussion_r333882980)~
* ~get rid of tex targets and img formats in `COpenGLDescSet` multibind params struct~
* ~https://github.com/buildaworldnet/IrrlichtBAW/pull/358#discussion_r323703046~
* https://github.com/buildaworldnet/IrrlichtBAW/pull/358#discussion_r332880971"
543890323,358,Crisspl,2019-10-18T19:02:46Z,to me it's merge-ready except [this discussion](https://github.com/buildaworldnet/IrrlichtBAW/pull/358#discussion_r336571131)
543965676,358,devshgraphicsprogramming,2019-10-18T21:46:50Z,we need to put `IBuffer` back into `irr::core`
543995049,358,Crisspl,2019-10-18T23:00:38Z,">we need to put IBuffer back into irr::core

there are 2 IBuffers now: asset::IBuffer and core::IBuffer decided here https://github.com/buildaworldnet/IrrlichtBAW/pull/358#discussion_r335101656 where asset::Ibuffer is answer for ""ICPU and IGPU Buffer need a common base on top of core::IBuffer"""
544115221,358,devshgraphicsprogramming,2019-10-19T08:27:11Z,">there are 2 IBuffers now: asset::IBuffer and core::IBuffer decided here #358 (comment) where asset::Ibuffer is answer for ""ICPU and IGPU Buffer need a common base on top of core::IBuffer""

Ok resolved.

> to me it's merge-ready except this discussion

- Your input attachment query is not querying all the extensions
- pipeline caching mess
- compute pipelines
- pasting of enabled GLSL extensions

to find the conversations scross up and press ""Load More` until all items are not hidden anymore"
544287022,358,Crisspl,2019-10-20T20:02:58Z,it's ready
544314179,358,Crisspl,2019-10-21T01:16:13Z,"maybe try closing this PR and opening another one so that comments in this one are preserved. (If you're right about that retargeting will cause all the comments to disappear). idk how to dump comments to some usable form (not screenshot; i mean theres chrome extension to ""screenshot"" whole page whatever long wouldnt it be but it wont let us ctrl+f later)"
544472541,358,devshgraphicsprogramming,2019-10-21T11:29:22Z,"There are two very old unresolved things:
1. using ifdef instead of commenting out old code so that I can find it later
2. @AnastaZIuk documentation update

Obviously need to clear the latest comments and we can merge.

But then we immediately open another PR for compute pipelines and making this branch finally build."
544869655,358,devshgraphicsprogramming,2019-10-22T09:02:51Z,"@Crisspl merge and correct https://github.com/Crisspl/IrrlichtBAW/pull/15

Then I will hit the merge button."
605350452,424,devshgraphicsprogramming,2020-03-27T23:06:53Z,Review done on 28/03/2020
641075904,424,devshgraphicsprogramming,2020-06-09T07:00:40Z,Remember to merge my PR into your branch
701469027,424,Crisspl,2020-09-30T15:34:37Z,I think it can be considered as mergable. Fixed thin dielectric and a few more annoying bugs (see commits for a list)
703170560,424,devshgraphicsprogramming,2020-10-03T22:07:40Z,@Crisspl did you end up fixing the `twosided` thing for BSDFs?
710719024,424,Crisspl,2020-10-17T01:18:56Z,"> @Crisspl did you end up fixing the `twosided` thing for BSDFs?

yea"
714357998,424,devshgraphicsprogramming,2020-10-22T09:22:04Z,"Also one last thing, Mitsuba creates approximate BSDFs for loaded OBJs... it seems we don't, so it should be an error to not specify a BSDF element on a OBJ shape"
718120556,424,Crisspl,2020-10-28T18:19:11Z,"> Also one last thing, Mitsuba creates approximate BSDFs for loaded OBJs... it seems we don't, so it should be an error to not specify a BSDF element on a OBJ shape

It is an error (`assert()`) for each non-`shapegroup`, non-`instance` shape to not specify a BSDF"
731355102,424,devshgraphicsprogramming,2020-11-20T19:06:31Z,5 unresolved conversations until merge @Crisspl 
569841467,410,devshgraphicsprogramming,2019-12-31T01:08:08Z,"Ok, so this is what I want to happen now.

The MTL loader should always return the same few combos of vertex and fragment shaders.

A new shader is only warranted if it requires a different set of `layout(...) in` or `layout(...) out`, so basically if some different combination of vertex attributes is enabled or different combination of textures (useful to have a MTL global cache of these combos).

all the other variance should be handled by the UBERSHADER mechanism, which is basically a `switch` on a UBO/PC integer value.

Naturally there will be externalities required to have a functioning render, such as:
- Camera matrices (MVP, VP^T^-1 = Normal Matrix, etc.)
- Lights

Now I dont want duplicate code floating around, so please factor out as much as possible into common built-in includes, especially the BRDFs for which an API has already been invented:
https://github.com/buildaworldnet/IrrlichtBAW/issues/384#issuecomment-544130414

and please please please preprocessor guard everything so user can replace everything, vertex input, vertex output, fragment input, fragment output, main functions, descriptor sets, lighting, bsdf, etc.
https://github.com/buildaworldnet/IrrlichtBAW/issues/384#issuecomment-544130414

Default lighting should be preprocessor guarded and be evaluated against a hardcoded point light centered at the camera position + environment map IBL (with 32 or 64 samples from the BRDF importance sampling, with ""random"" 2D numbers from the sobol sequence permuted by a random toroidal (modulo 1.f) offset, a.k.a cranley patterson rotation, `new = fract(original+random)`) if any is present.

In conclusion, all the given asset loader generater shader should look like is:
- version
- a whole bunch of BRDF includes
- more includes from built in headers
- preprocessor guarded inputs
- preprocessor guarded outputs
- preprocessor guarded local function declarations (these should be very rare, mostly to do with attribute/BRDF parameter loading from UBO or texture, as everything can be factored out into built-in headers this stuff should be minimal)
- preprocessor guarded main entry point
- preprocessor guarded local function definitions

Furthermore we should stick to some preprocessor guard convention, so its easy to override shaders generated by any loader (examples of naming convention given in https://github.com/buildaworldnet/IrrlichtBAW/issues/384#issuecomment-544130414)


P.S. I will provide you with Sobol Sequence, in the meantime use the Halton or Hammersley sequence (whatever is left over from our last february's/march's PCF shadows work). The random should probably be seeded by the world space or model space position of the pixel."
573379570,410,Crisspl,2020-01-12T03:54:35Z,">* ultra weird one: if app us running over some period of time (seems like 5-10s) and after this time i want to close the app, there's a crash regarding access violation during atomic decrement. If app will be closed before those 5-10s, than no crash happens... (????) This behavior is present on debug build, dont know how about release.

seems like not an issue, crash doesnt happen any more... maybe msvc generated some weird code before and it wasnt fault of ourc cpp code (wouldnt be first time)"
577109380,410,devshgraphicsprogramming,2020-01-22T10:13:36Z,There's about 20 unresolved conversations that are 2+ days old.
580467131,410,devshgraphicsprogramming,2020-01-30T21:25:28Z,"One polite request, for every built-in BRDF make a function that already has the cosine factored in and takes `irr_glsl_BSDFIsotropicParams` as input so there is some standarisation (need that stuff to be reusable for Mitsuba and glTF)"
581392481,410,devshgraphicsprogramming,2020-02-03T12:31:38Z,"Ok, we're almost done."
581841490,410,devshgraphicsprogramming,2020-02-04T10:26:26Z,9 Unresolved conversations.
582854624,410,devshgraphicsprogramming,2020-02-06T11:10:10Z,did you change the depth writing mask fro alpha blended objects?
618003543,474,devshgraphicsprogramming,2020-04-22T19:57:05Z,we genrally want to abandon the `TexturePacker` nomenclature in favor of `VirtualTexture`
618029676,474,Crisspl,2020-04-22T20:44:09Z,why doesnt `IVirtualTextureResidentStorage` keep (as a member) a physical page texture? actually i cant see them at all.. i'm a little confused.
618030999,474,devshgraphicsprogramming,2020-04-22T20:46:57Z,"> 
> 
> why doesnt `IVirtualTextureResidentStorage` keep (as a member) a physical page texture? actually i cant see them at all.. i'm a little confused.

they're here
```cpp
   class IVirtualTextureResidentStorage
   {
      IVirtualTextureResidentStorage(E_FORMAT_CLASS _formatClass, const uint32_t* _dimensions, uint32_t _layers) ...

      PoolAddressAllocatorST<> tileAllocator;
      core::multimap<E_FORMAT,uint16_t> assignedPageTableLayers;
   };

   // this should almost be a `const`
core::map<E_FORMAT_CLASS,core::smart_refctd_ptr<IVirtualTextureResidentStorage<ViewType>>> storage;
```

the ""semi-const"" map has them"
624557723,474,devshgraphicsprogramming,2020-05-06T10:06:37Z,Only a few old conversations left
626696108,474,devshgraphicsprogramming,2020-05-11T13:18:07Z,cool now merge my branch and we're good
655559160,497,AnastaZIuk,2020-07-08T14:35:03Z,done
667153619,497,AnastaZIuk,2020-07-31T14:38:44Z,I will do exactly what I did before but with no caching nor wasting memory for all the layers
670471114,497,Crisspl,2020-08-07T11:27:44Z,"Don't use `auto` this much! It becomes illegible, use `auto` only in generic/template code when you actually need it and in case of very long type names (but even then prefer `typedef`/`using` instead). `auto i = 0u` isnt a good place to use `auto` for sure!"
670488136,497,Crisspl,2020-08-07T12:17:05Z,"Actually... i dont know why you even touch output regions while decoding.. Just do `CBasicImageFilterCommon::executePerRegion(commonExecuteData.inImg, decode, commonExecuteData.inRegions.begin(), commonExecuteData.inRegions.end(), clip);`, fill scratch with decoded texels, do SAT on scratch, and finally `executePerRegion` over output regions (encode). Ofc all of the above should be done per layer. Take into account my today's review.
Yout negative offsets problem must be result of wrong API usage (of which is great amount as I already found quite a few in review comments), but theres no point in looking for whats wrong because it can be redesigned and done in much simpler way (the main part, (i.e. SAT code) most likely doesnt need any changes)"
670516446,497,devshgraphicsprogramming,2020-08-07T13:28:03Z,"> Don't use `auto` this much! It becomes illegible, use `auto` only in generic/template code when you actually need it and in case of very long type names (but even then prefer `typedef`/`using` instead). `auto i = 0u` isnt a good place to use `auto` for sure!

Also `auto` without a reference (`auto&`) turns into a ""copy-by-value"" which has other performance implications."
670539562,497,devshgraphicsprogramming,2020-08-07T14:16:39Z,"OK I think `clip_functor_t` needs an explainer
https://github.com/buildaworldnet/IrrlichtBAW/blob/shader_pipeline/include/irr/asset/filters/CBasicImageFilterCommon.h#L58

You create the object by giving it the subresource (mip level and layer) of the original image, as well as the offset + extent to clip to, these are pretty much derived from your Filter's State.

you also pass it some texel-block-format info, but thats just for convenience and speed (it can derive those from the format).

Whenever you call the clip functor's function operator
https://github.com/buildaworldnet/IrrlichtBAW/blob/shader_pipeline/include/irr/asset/filters/CBasicImageFilterCommon.h#L69
it will produce a `newRegion` that is the intersection of the offset and extent of the functor and the offset and extent of `referenceRegion`.

Now in order to produce such a region so its valid and is ""as-if"" it specified the image itself, you need to do the following:
1. Resolve your `bufferWidth` if it was `0/-1` and similar because you need to know the byte-distance between successive rows and layers in a clipped region
2. Find an Offset that is both within the functor's state and the `referenceRegion` (maximum of the coordinates)
3. Find an Extent that when added to the previously computed offsets is still within both rectangles (minimum of the coordinates with the maximum subtracted). `targetLimit` is the the one-past the max coordinate of the rectangle given in the constructor, while `resultLimit` is the equivalent for the input region.
4. Compute a new `bufferOffset` given the change in the `offset` (offset can only become larger than the reference region so the `bufferOffset` shall be increased by a non-negative number)

You can see step 2 and 3 being done starting on this line:
https://github.com/buildaworldnet/IrrlichtBAW/blob/shader_pipeline/include/irr/asset/filters/CBasicImageFilterCommon.h#L82

If the two rectangles don't intersect (no common texels) then we return `false`
https://github.com/buildaworldnet/IrrlichtBAW/blob/shader_pipeline/include/irr/asset/filters/CBasicImageFilterCommon.h#L84

The `offsetInOffset` cannot be negative:
https://github.com/buildaworldnet/IrrlichtBAW/blob/shader_pipeline/include/irr/asset/filters/CBasicImageFilterCommon.h#L90"
615398353,468,devshgraphicsprogramming,2020-04-17T18:30:11Z,JPG Loader is fine
617359878,468,AnastaZIuk,2020-04-21T19:14:36Z,I'm done
723332418,554,devshgraphicsprogramming,2020-11-06T22:41:59Z,@Crisspl there still remains the problem that it looks like literally every mesh gets its own pipeline (loads of separate shader compiles)
488618273,291,manhnt9,2019-05-02T10:03:38Z,"CEGUI build is integrated in to irrbaw, but don't try it yet, still has some errors.

The building process is done, I will have to set correct configurations for CEGUI."
488916020,291,manhnt9,2019-05-03T03:36:48Z,"Proposed changes, please review @devshgraphicsprogramming @Crisspl.
(Approved by devsh on Discord).

In order to link more libs to an example, we'd have to modify `macro(irr_create_executable_project)`.
CMake complains if I use `target_link_libraries` in CMake of example, after `irr_create_executable_project("""" """")` since it's called before in the `macro(irr_create_executable_project)`.

So `target_link_libraries` should be called once.

To let example add more libs, the macro can be changed to: `macro(irr_create_executable_project _EXTRA_SOURCES _EXTRA_OPTIONS _EXTRA_INCLUDES _EXTRA_LIBS)`.

Further changes required:
- Find and replace `irr_create_executable_project("""" """")` with `irr_create_executable_project("""" """" """" """")`
"
489042786,291,devshgraphicsprogramming,2019-05-03T10:03:45Z,Double approved.
489065532,291,manhnt9,2019-05-03T11:30:28Z,"I pushed the changes several hours ago, it appears before the comment because my Windows time is f**ked by Linux. Have just fixed my LVM partitions, relocated and resized, etc so still no code yet. My environment is stable now. From here we can expect frequent code updates."
489554949,291,manhnt9,2019-05-06T09:05:59Z,Linux can now build CEGUI and base project.
489560082,291,manhnt9,2019-05-06T09:26:15Z,"In the waiting of the IMG loaders, I will use STB image for the time being."
489562603,291,manhnt9,2019-05-06T09:36:25Z,"The progress is still new, I will notify when it's ready to be reviewed."
489563503,291,manhnt9,2019-05-06T09:39:54Z,"According to @Florastamine, Native File Dialogs library has bugs on Linux so he had to replace with [Portable File Dialogs](https://github.com/samhocevar/portable-file-dialogs), and it works well.

Bug description:
The implementation of NDF which uses zenity (nfd_zenity.c) on a few occasions would skip right through the file dialog, which would return garbage because the window just flashes and closes right after without the user be able to choose anything.
PDF also uses zenity and doesn't exhibit the same problem, plus its single header.
It's in active development (more than NDF) and is made by a OSS supporter Sam Hocevar, the guy who invented WTFPL license."
489880541,291,manhnt9,2019-05-07T02:17:41Z,"I had to remove this include, it produces conflicts with glew that CEGUI uses.
#include ""../source/Irrlicht/COpenGLExtensionHandler.h""
"
489980559,291,manhnt9,2019-05-07T08:11:58Z,"Current CMake warning:
CMake Error at cmake/common.cmake:12 (add_executable):
  Target ""brdf_explorer"" links to item
  ""IrrlichtBAW/build/3rdparty/CEGUI/build/install/lib/CEGUIOpenGLRenderer-0_Static.lib
  "" which has leading or trailing whitespace.  This is now an error according
  to policy CMP0004.
Call Stack (most recent call first):
  examples_tests/13.BRDF_Explorer/CMakeLists.txt:13 (irr_create_executable_project)

I have to keep this because of the CMake's nature. The build still works correctly though. In fact, it needs this warning to work.

For example:
```
set(VAR
  lib1
  lib2
)
message(STATUS ${VAR}) # will print lib1lib2

# so I have to use
set(VAR
  ""lib1 ""
  ""lib2 ""
)
```"
490440667,291,devshgraphicsprogramming,2019-05-08T10:51:13Z,"> 
> 
> Current CMake warning:
> CMake Error at cmake/common.cmake:12 (add_executable):
> Target ""brdf_explorer"" links to item
> ""IrrlichtBAW/build/3rdparty/CEGUI/build/install/lib/CEGUIOpenGLRenderer-0_Static.lib
> "" which has leading or trailing whitespace. This is now an error according
> to policy CMP0004.
> Call Stack (most recent call first):
> examples_tests/13.BRDF_Explorer/CMakeLists.txt:13 (irr_create_executable_project)
> 
> I have to keep this because of the CMake's nature. The build still works correctly though. In fact, it needs this warning to work.
> 
> For example:
> 
> ```
> set(VAR
>   lib1
>   lib2
> )
> message(STATUS ${VAR}) # will print lib1lib2
> 
> # so I have to use
> set(VAR
>   ""lib1 ""
>   ""lib2 ""
> )
> ```

would it work as
```
set(VAR
  ""lib1""
  ""lib2""
)
```
?"
490441665,291,devshgraphicsprogramming,2019-05-08T10:55:20Z,"Last thing, why is Portable File Dialog a submodule in irr::ext?

btw you have permission to put 3rdparty dependencies (even CEGUI) of any extension in the `./3rdparty` folder as this simplifies life when multiple extensions or parts of the library need the same extension.
Just don't install them"
491142232,291,manhnt9,2019-05-10T03:25:47Z,"```
set(VAR
  ""lib1""
  ""lib2""
)
```
Doesn't work.

I'll relocate the submodules.

"
491146493,291,manhnt9,2019-05-10T03:54:34Z,Still doesn't build so I postpone the refactoring.
491663223,291,manhnt9,2019-05-13T03:23:23Z,"Well, GitLab tracks summary of unsolved comments so you can check without having to scroll, just saying."
492485573,291,manhnt9,2019-05-15T03:03:32Z,"About the clip control.
Currently not calling `resetOpenGLClip()` because I call `setOpenGLClip()` after `saveOpenGLState()` so `restoreOpenGLState()` should also restore the clip."
492490192,291,manhnt9,2019-05-15T03:32:11Z,"RFC about the default texture slot, looks like it's from Windows.
Will we be able to use this?

![DefaultEmpty](https://user-images.githubusercontent.com/11463928/57746702-911ddb80-76fc-11e9-8a44-fa2a8c3c04f6.png)
"
492548822,291,devshgraphicsprogramming,2019-05-15T07:57:59Z,"> RFC about the default texture slot, looks like it's from Windows.
> Will we be able to use this?

I don't understand ? clarify."
492549096,291,manhnt9,2019-05-15T07:58:50Z,The icon seems like it is designed for Windows. Would you like to change to something else?
492549272,291,manhnt9,2019-05-15T07:59:18Z,"Like a free for commercial use icon, maybe."
492601846,291,devshgraphicsprogramming,2019-05-15T10:38:34Z,"> Like a free for commercial use icon, maybe.

I'm open to any icon that has a license that lets us use it."
492907972,291,manhnt9,2019-05-16T04:02:17Z,"CEGUI ext is now a static library, @devshgraphicsprogramming let's review.
Only texture loader and minor refactoring left then we'll be able to do the 3D rendering."
492909591,291,manhnt9,2019-05-16T04:12:45Z,"Replaced image icon to FontAwesome's icon.
![DefaultEmpty](https://user-images.githubusercontent.com/11463928/57826000-7fefd000-77cb-11e9-8fb8-960a03e97a6d.png)
@Florastamine be alert about this issue, we won't just take any icon to use in our work.

![Screenshot_2019-05-16_11-14-21](https://user-images.githubusercontent.com/11463928/57826061-c80ef280-77cb-11e9-9bfd-be50f676e7c7.png)

"
492994137,291,manhnt9,2019-05-16T09:33:44Z,"I'm having this on Windows (release mode).

![Capture](https://user-images.githubusercontent.com/11463928/57843372-5b5e1d00-77f8-11e9-8eda-00e88f5d8b78.PNG)
"
492995658,291,manhnt9,2019-05-16T09:38:09Z,MSVC can't mix Debug/Release libs (can't build Debug example with Release CEGUI libs). So I'm changing CEGUI build process to use `add_subdirectory`.
493053683,291,devshgraphicsprogramming,2019-05-16T12:49:46Z,"> FontAwesome's

What's the license for that image?"
493288619,291,manhnt9,2019-05-17T01:46:11Z,https://fontawesome.com/license/free
493297815,291,manhnt9,2019-05-17T02:38:08Z,"CEGUI deps are not meant to be built on Linux, so Linux users have to install packages manually.
This is the message when I use add_subdirectory with CEGUI deps:

  This dependency pack is intended for use on Apple OS X and MS Windows only.
  For other systems, such as GNU/Linux, please consult your package manager
  or distribution maintainer to discover how to install the libraries you
  wish to use with CEGUI.  Thanks!
"
493320672,291,manhnt9,2019-05-17T05:03:03Z,"CEGUI deps must be built before adding cegui as subdir to find those deps.
So I don't have other options than to build CEGUI deps when configuring (running CMake)."
493321310,291,manhnt9,2019-05-17T05:07:00Z,"CEGUI's project added.

![Capture](https://user-images.githubusercontent.com/11463928/57904289-420eac80-789c-11e9-8807-ecd02af17836.PNG)
"
493321755,291,manhnt9,2019-05-17T05:09:44Z,"CEGUI deps was downloaded into build folder. In order to reset the build folder easier (just deleting build folder without caring about anything inside), deps is downloaded into 3rdparty/CEGUI folder and ignored in git. Then it's extracted to build folder and will be built there."
493340396,291,manhnt9,2019-05-17T06:43:17Z,"Only this left and we'll have a perfect MSVC build.
Looks strange.

![Capture](https://user-images.githubusercontent.com/11463928/57908194-aa17bf80-78a9-11e9-9e74-cff4189195a7.PNG)
"
493374826,291,manhnt9,2019-05-17T08:46:39Z,Ah typo. It's good now.
493405292,291,manhnt9,2019-05-17T10:25:40Z,"Looks what your macro resolves to. I'm not sure that function instead of macro will make a difference but I always stay away from macro. It's as dangerous as variables in CMake. I'm wasting the whole day to make it link for MSVC.

-- optimizedC:/Users/manh/Desktop/IrrlichtBAW/build/3rdparty/CEGUI/cegui/lib/CEGUIOpenGLRenderer-0_Static.liboptimizedC:/Users/manh/Desktop/IrrlichtBAW/build/3rdparty/CEGUI/cegui/lib/CEGUIBase-0_Static.liboptimizedC:/Users/manh/Desktop/IrrlichtBAW/3rdparty/CEGUI/cegui/dependencies/lib/glew.liboptimizedC:/Users/manh/Desktop/IrrlichtBAW/build/3rdparty/CEGUI/cegui/lib/CEGUIExpatParser_Static.liboptimizedC:/Users/manh/Desktop/IrrlichtBAW/build/3rdparty/CEGUI/cegui/lib/CEGUISTBImageCodec_Static.liboptimizedC:/Users/manh/Desktop/IrrlichtBAW/3rdparty/CEGUI/cegui/dependencies/lib/freetype.liboptimizedC:/Users/manh/Desktop/IrrlichtBAW/build/3rdparty/CEGUI/cegui/lib/CEGUICoreWindowRendererSet_Static.liboptimizedC:/Users/manh/Desktop/IrrlichtBAW/build/3rdparty/CEGUI/cegui/lib/CEGUICommonDialogs-0_Static.liboptimizedC:/Users/manh/Desktop/IrrlichtBAW/3rdparty/CEGUI/cegui/dependencies/lib/libexpat.liboptimizedC:/Users/manh/Desktop/IrrlichtBAW/3rdparty/CEGUI/cegui/dependencies/lib/pcre.libdebugC:/Users/manh/Desktop/IrrlichtBAW/build/3rdparty/CEGUI/cegui/lib/CEGUIOpenGLRenderer-0_Static_d.libdebugC:/Users/manh/Desktop/IrrlichtBAW/build/3rdparty/CEGUI/cegui/lib/CEGUIBase-0_Static_d.libdebugC:/Users/manh/Desktop/IrrlichtBAW/3rdparty/CEGUI/cegui/dependencies/lib/glew_d.libdebugC:/Users/manh/Desktop/IrrlichtBAW/build/3rdparty/CEGUI/cegui/lib/CEGUIExpatParser_Static_d.libdebugC:/Users/manh/Desktop/IrrlichtBAW/build/3rdparty/CEGUI/cegui/lib/CEGUISTBImageCodec_Static_d.libdebugC:/Users/manh/Desktop/IrrlichtBAW/3rdparty/CEGUI/cegui/dependencies/lib/freetype_d.libdebugC:/Users/manh/Desktop/IrrlichtBAW/build/3rdparty/CEGUI/cegui/lib/CEGUICoreWindowRendererSet_Static_d.libdebugC:/Users/manh/Desktop/IrrlichtBAW/build/3rdparty/CEGUI/cegui/lib/CEGUICommonDialogs-0_Static_d.libdebugC:/Users/manh/Desktop/IrrlichtBAW/3rdparty/CEGUI/cegui/dependencies/lib/libexpat_d.libdebugC:/Users/manh/Desktop/IrrlichtBAW/3rdparty/CEGUI/cegui/dependencies/lib/pcre_d.libIrrCEGUIExt"
493408411,291,manhnt9,2019-05-17T10:37:31Z,"MSVC will always be considered a disease to me. CMake with GCC is very great. For example if you link IrrCEGUIExt, you have all IrrCEGUIExt as well. Guess what you get with MSVC? A IrrCEGUIExt string."
493737402,291,devshgraphicsprogramming,2019-05-19T08:26:45Z,"> 
> 
> CEGUI deps are not meant to be built on Linux, so Linux users have to install packages manually.
> This is the message when I use add_subdirectory with CEGUI deps:
> 
> This dependency pack is intended for use on Apple OS X and MS Windows only.
> For other systems, such as GNU/Linux, please consult your package manager
> or distribution maintainer to discover how to install the libraries you
> wish to use with CEGUI. Thanks!

That's literally beyond annoying, but it can stay like this for the time being so you're not wasting your time."
493737838,291,devshgraphicsprogramming,2019-05-19T08:34:24Z,"> CEGUI deps must be built before adding cegui as subdir to find those deps.
> So I don't have other options than to build CEGUI deps when configuring (running CMake).

> CEGUI deps was downloaded into build folder. In order to reset the build folder easier (just deleting build folder without caring about anything inside), deps is downloaded into 3rdparty/CEGUI folder and ignored in git. Then it's extracted to build folder and will be built there.

Sounds like the CEGUI dependency pack is a little bit fishy ;)

I think we've had the ""had to be built upon Configure"" issue with OpenSSL (and then it turned out that you can actually get the exotic dependency building outside of Configure), @Crisspl how did we resolve it?"
493738644,291,devshgraphicsprogramming,2019-05-19T08:47:13Z,"> 
> 
> Looks what your macro resolves to. I'm not sure that function instead of macro will make a difference but I always stay away from macro. It's as dangerous as variables in CMake. I'm wasting the whole day to make it link for MSVC.
> 
> -- optimizedC:/Users/manh/Desktop/IrrlichtBAW/build/3rdparty/CEGUI/cegui/lib/CEGUIOpenGLRenderer-0_Static.liboptimizedC:/Users/manh/Desktop/IrrlichtBAW/build/3rdparty/CEGUI/cegui/lib/CEGUIBase-0_Static.liboptimizedC:/Users/manh/Desktop/IrrlichtBAW/3rdparty/CEGUI/cegui/dependencies/lib/glew.liboptimizedC:/Users/manh/Desktop/IrrlichtBAW/build/3rdparty/CEGUI/cegui/lib/CEGUIExpatParser_Static.liboptimizedC:/Users/manh/Desktop/IrrlichtBAW/build/3rdparty/CEGUI/cegui/lib/CEGUISTBImageCodec_Static.liboptimizedC:/Users/manh/Desktop/IrrlichtBAW/3rdparty/CEGUI/cegui/dependencies/lib/freetype.liboptimizedC:/Users/manh/Desktop/IrrlichtBAW/build/3rdparty/CEGUI/cegui/lib/CEGUICoreWindowRendererSet_Static.liboptimizedC:/Users/manh/Desktop/IrrlichtBAW/build/3rdparty/CEGUI/cegui/lib/CEGUICommonDialogs-0_Static.liboptimizedC:/Users/manh/Desktop/IrrlichtBAW/3rdparty/CEGUI/cegui/dependencies/lib/libexpat.liboptimizedC:/Users/manh/Desktop/IrrlichtBAW/3rdparty/CEGUI/cegui/dependencies/lib/pcre.libdebugC:/Users/manh/Desktop/IrrlichtBAW/build/3rdparty/CEGUI/cegui/lib/CEGUIOpenGLRenderer-0_Static_d.libdebugC:/Users/manh/Desktop/IrrlichtBAW/build/3rdparty/CEGUI/cegui/lib/CEGUIBase-0_Static_d.libdebugC:/Users/manh/Desktop/IrrlichtBAW/3rdparty/CEGUI/cegui/dependencies/lib/glew_d.libdebugC:/Users/manh/Desktop/IrrlichtBAW/build/3rdparty/CEGUI/cegui/lib/CEGUIExpatParser_Static_d.libdebugC:/Users/manh/Desktop/IrrlichtBAW/build/3rdparty/CEGUI/cegui/lib/CEGUISTBImageCodec_Static_d.libdebugC:/Users/manh/Desktop/IrrlichtBAW/3rdparty/CEGUI/cegui/dependencies/lib/freetype_d.libdebugC:/Users/manh/Desktop/IrrlichtBAW/build/3rdparty/CEGUI/cegui/lib/CEGUICoreWindowRendererSet_Static_d.libdebugC:/Users/manh/Desktop/IrrlichtBAW/build/3rdparty/CEGUI/cegui/lib/CEGUICommonDialogs-0_Static_d.libdebugC:/Users/manh/Desktop/IrrlichtBAW/3rdparty/CEGUI/cegui/dependencies/lib/libexpat_d.libdebugC:/Users/manh/Desktop/IrrlichtBAW/3rdparty/CEGUI/cegui/dependencies/lib/pcre_d.libIrrCEGUIExt

This is still a problem or did your last two commits get around it?

Also what do you propose instead of that macro?"
493823761,291,manhnt9,2019-05-20T03:01:48Z,"It links properly now. Macro is like find and replace (same as #define in C++) so passed parameters could be messed up in code generation. Also it bloats up the CMake code and increases configuration time a little bit.
I would use CMake's function syntax."
494223131,291,manhnt9,2019-05-21T03:12:13Z,"I'm also giving irrbaw an ext framework, including:
- A macro to create a static ext library by providing header, source list, external include path and compile options
- That macro will build, install headers, install ext lib to correct location according to `Extension Rules`
- And set global CMake variables for any example to use, e.g: IRR_EXT_CEGUI_INCLUDE_DIRS and IRR_EXT_CEGUI_LIB

To use the ext framework:
- Refer to ext/CMakeLists.txt, then add_subdirectory and copy 2 simple variables
- In ext's CMake code, call irr_create_ext_library_project
- Now you can use IRR_EXT_NAME_INCLUDE_DIRS and IRR_EXT_NAME_LIB"
494226684,291,manhnt9,2019-05-21T03:33:50Z,CMake code is now super clean.
494238662,291,manhnt9,2019-05-21T04:52:46Z,"Discovered and fixed another issue affecting the bad boy MSVC.
Also reported to CMake [repo](https://gitlab.kitware.com/cmake/cmake/issues/19278)."
494239583,291,manhnt9,2019-05-21T04:57:54Z,Commit date is messed again because of Linux/Windows time mismatch.
494308158,291,ghost,2019-05-21T09:10:38Z,"> Commit date is messed again because of Linux/Windows time mismatch.

You can configure Linux to use local time as the stored time format
```
timedatectl set-local-rtc 1 --adjust-system-clock
```

Linux and Windows use different conventions when writing current time/date to BIOS upon booting, hence the mistmatch
"
494327055,291,manhnt9,2019-05-21T10:05:08Z,"I was lazy to find the solution although I've done before. Used your above command, Thanks!"
494406748,291,devshgraphicsprogramming,2019-05-21T14:07:27Z,"Hi, I met with our contact, tried to show him the example and ran into this when doing a fresh clone

```
Cloning into 'C:/work/IrrlichtBAW/manhnt/3rdparty/CEGUI/cegui'...
Host key verification failed.
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
fatal: clone of 'git@gitlab.com:InnerPieceOSS/cegui.git' into submodule path 'C:/work/IrrlichtBAW/manhnt/3rdparty/CEGUI/cegui' failed
Failed to clone '3rdparty/CEGUI/cegui'. Retry scheduled

Cloning into 'C:/work/IrrlichtBAW/manhnt/3rdparty/portable-file-dialogs'...
Host key verification failed.
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
fatal: clone of 'git@github.com:samhocevar/portable-file-dialogs.git' into submodule path 'C:/work/IrrlichtBAW/manhnt/3rdparty/portable-file-dialogs' failed
Failed to clone '3rdparty/portable-file-dialogs'. Retry scheduled

Cloning into 'C:/work/IrrlichtBAW/manhnt/examples_tests/media/cegui_alfisko'...
Host key verification failed.
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
fatal: clone of 'git@gitlab.com:InnerPieceOSS/cegui_alfisko.git' into submodule path 'C:/work/IrrlichtBAW/manhnt/examples_tests/media/cegui_alfisko' failed
Failed to clone 'examples_tests/media/cegui_alfisko'. Retry scheduled

Cloning into 'C:/work/IrrlichtBAW/manhnt/ext/CEGUI/stb'...
Host key verification failed.
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
fatal: clone of 'git@github.com:nothings/stb.git' into submodule path 'C:/work/IrrlichtBAW/manhnt/ext/CEGUI/stb' failed
Failed to clone 'ext/CEGUI/stb'. Retry scheduled

Cloning into 'C:/work/IrrlichtBAW/manhnt/3rdparty/CEGUI/cegui'...
Host key verification failed.
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
fatal: clone of 'git@gitlab.com:InnerPieceOSS/cegui.git' into submodule path 'C:/work/IrrlichtBAW/manhnt/3rdparty/CEGUI/cegui' failed
Failed to clone '3rdparty/CEGUI/cegui' a second time, aborting

CMake Error at 3rdparty/CMakeLists.txt:7 (add_subdirectory):
  The source directory

    C:/work/IrrlichtBAW/manhnt/3rdparty/SPIRV-Headers

  does not contain a CMakeLists.txt file.


CMake Error at 3rdparty/CMakeLists.txt:11 (add_subdirectory):
  The source directory

    C:/work/IrrlichtBAW/manhnt/3rdparty/SPIRV-Tools

  does not contain a CMakeLists.txt file.


CMake Error at 3rdparty/CMakeLists.txt:16 (add_subdirectory):
  The source directory

    C:/work/IrrlichtBAW/manhnt/3rdparty/glslang

  does not contain a CMakeLists.txt file.


CMake Error at 3rdparty/CMakeLists.txt:26 (add_subdirectory):
  The source directory

    C:/work/IrrlichtBAW/manhnt/3rdparty/shaderc

  does not contain a CMakeLists.txt file.


CMake Error at 3rdparty/CMakeLists.txt:36 (add_subdirectory):
  The source directory

    C:/work/IrrlichtBAW/manhnt/3rdparty/libjpeg

  does not contain a CMakeLists.txt file.


CMake Error at 3rdparty/CMakeLists.txt:45 (add_subdirectory):
  The source directory

    C:/work/IrrlichtBAW/manhnt/3rdparty/libpng

  does not contain a CMakeLists.txt file.
```"
494407560,291,manhnt9,2019-05-21T14:09:18Z,"Network problems, @Crisspl met these too. Were you using coffee's internet?"
494408182,291,manhnt9,2019-05-21T14:10:55Z,BTW you could ask for a pre-built version. Are you still there or not?
494409050,291,manhnt9,2019-05-21T14:12:58Z,Also did you try cloning your original repo too?
494413131,291,manhnt9,2019-05-21T14:22:51Z,"Ah I discovered something, we should use HTTPS for those modules. I was using SSH url because I always use SSH. Sorry, this is very unexpected. Will update."
494413563,291,devshgraphicsprogramming,2019-05-21T14:23:55Z,when can I pull and try again?
494413780,291,manhnt9,2019-05-21T14:24:28Z,in several mins
494414122,291,manhnt9,2019-05-21T14:25:17Z,If you want to save build time I can send a prebuilt version.
494415012,291,manhnt9,2019-05-21T14:27:21Z,"I pushed, try git reset --hard and pull, then git submodule sync"
494476562,291,Crisspl,2019-05-21T17:06:31Z,"Not sure if it's the same problem but in my case it started running when i created gitlab account, created ssh key and registered it in gitlab account"
494803280,291,manhnt9,2019-05-22T13:30:44Z,I think that's it. The only odd thing I've found out is that the failed submodules were using SSH URLs.
495045281,291,manhnt9,2019-05-23T02:37:07Z,"Shit, I was hurrying and sleepy, pasted STB URL for CEGUI module."
495698770,291,devshgraphicsprogramming,2019-05-24T16:28:23Z,"Having CMake `Configure` build your CEGUI dependencies is a nightmare (takes so long one thinks its broken), we should fix it at some point in the future (before 2020)

I'm getting linker errors, the glew dependency
```
38>LINK : warning LNK4098: defaultlib 'MSVCRT' conflicts with use of other libs; use /NODEFAULTLIB:library
38>CEGUIOpenGLRenderer-0_Static.lib(GL3Renderer.obj) : error LNK2001: unresolved external symbol __imp___glewUseProgram
38>CEGUIOpenGLRenderer-0_Static.lib(GL3Renderer.obj) : error LNK2001: unresolved external symbol __imp___glewUniform1i
38>CEGUIOpenGLRenderer-0_Static.lib(GL3Renderer.obj) : error LNK2001: unresolved external symbol __imp___glewBlendFuncSeparate
38>CEGUIOpenGLRenderer-0_Static.lib(GL3Renderer.obj) : error LNK2001: unresolved external symbol __imp___glewActiveTexture
38>CEGUIOpenGLRenderer-0_Static.lib(RendererBase.obj) : error LNK2001: unresolved external symbol __imp_glewGetErrorString
38>CEGUIOpenGLRenderer-0_Static.lib(RendererBase.obj) : error LNK2001: unresolved external symbol __imp_glewExperimental
38>CEGUIOpenGLRenderer-0_Static.lib(RendererBase.obj) : error LNK2001: unresolved external symbol __imp_glewInit
38>CEGUIOpenGLRenderer-0_Static.lib(GL3FBOTextureTarget.obj) : error LNK2001: unresolved external symbol __imp___glewFramebufferTexture2D
38>CEGUIOpenGLRenderer-0_Static.lib(GL3FBOTextureTarget.obj) : error LNK2001: unresolved external symbol __imp___glewCheckFramebufferStatus
38>CEGUIOpenGLRenderer-0_Static.lib(GL3FBOTextureTarget.obj) : error LNK2001: unresolved external symbol __imp___glewDeleteFramebuffers
38>CEGUIOpenGLRenderer-0_Static.lib(GL3FBOTextureTarget.obj) : error LNK2001: unresolved external symbol __imp___glewGenFramebuffers
38>CEGUIOpenGLRenderer-0_Static.lib(GL3FBOTextureTarget.obj) : error LNK2001: unresolved external symbol __imp___glewBindFramebuffer
38>CEGUIOpenGLRenderer-0_Static.lib(Shader.obj) : error LNK2001: unresolved external symbol __imp___glewGetShaderiv
38>CEGUIOpenGLRenderer-0_Static.lib(Shader.obj) : error LNK2001: unresolved external symbol __imp___glewCompileShader
38>CEGUIOpenGLRenderer-0_Static.lib(Shader.obj) : error LNK2001: unresolved external symbol __imp___glewGetAttribLocation
38>CEGUIOpenGLRenderer-0_Static.lib(Shader.obj) : error LNK2001: unresolved external symbol __imp___glewCreateShader
38>CEGUIOpenGLRenderer-0_Static.lib(Shader.obj) : error LNK2001: unresolved external symbol __imp___glewCreateProgram
38>CEGUIOpenGLRenderer-0_Static.lib(Shader.obj) : error LNK2001: unresolved external symbol __imp___glewGetShaderInfoLog
38>CEGUIOpenGLRenderer-0_Static.lib(Shader.obj) : error LNK2001: unresolved external symbol __imp___glewGetProgramiv
38>CEGUIOpenGLRenderer-0_Static.lib(Shader.obj) : error LNK2001: unresolved external symbol __imp___glewBindFragDataLocation
38>CEGUIOpenGLRenderer-0_Static.lib(Shader.obj) : error LNK2001: unresolved external symbol __imp___glewGetUniformLocation
38>CEGUIOpenGLRenderer-0_Static.lib(Shader.obj) : error LNK2001: unresolved external symbol __imp___glewAttachShader
38>CEGUIOpenGLRenderer-0_Static.lib(Shader.obj) : error LNK2001: unresolved external symbol __imp___glewDeleteProgram
38>CEGUIOpenGLRenderer-0_Static.lib(Shader.obj) : error LNK2001: unresolved external symbol __imp___glewShaderSource
38>CEGUIOpenGLRenderer-0_Static.lib(Shader.obj) : error LNK2001: unresolved external symbol __imp___glewGetProgramInfoLog
38>CEGUIOpenGLRenderer-0_Static.lib(Shader.obj) : error LNK2001: unresolved external symbol __imp___glewDeleteShader
38>CEGUIOpenGLRenderer-0_Static.lib(Shader.obj) : error LNK2001: unresolved external symbol __imp___glewLinkProgram
38>CEGUIOpenGLRenderer-0_Static.lib(StateChangeWrapper.obj) : error LNK2001: unresolved external symbol __imp___glewBindVertexArray
38>CEGUIOpenGLRenderer-0_Static.lib(StateChangeWrapper.obj) : error LNK2001: unresolved external symbol __imp___glewBindBuffer
38>CEGUIOpenGLRenderer-0_Static.lib(GL.obj) : error LNK2001: unresolved external symbol __imp___GLEW_VERSION_2_0
38>CEGUIOpenGLRenderer-0_Static.lib(GL.obj) : error LNK2001: unresolved external symbol __imp___GLEW_VERSION_3_1
38>CEGUIOpenGLRenderer-0_Static.lib(GL.obj) : error LNK2001: unresolved external symbol __imp___glewGetStringi
38>CEGUIOpenGLRenderer-0_Static.lib(GL.obj) : error LNK2001: unresolved external symbol __imp___GLEW_VERSION_3_2
38>CEGUIOpenGLRenderer-0_Static.lib(GL.obj) : error LNK2001: unresolved external symbol __imp___GLEW_VERSION_1_3
38>CEGUIOpenGLRenderer-0_Static.lib(GL.obj) : error LNK2001: unresolved external symbol __imp___GLEW_ARB_texture_non_power_of_two
38>CEGUIOpenGLRenderer-0_Static.lib(GL3GeometryBuffer.obj) : error LNK2001: unresolved external symbol __imp___glewEnableVertexAttribArray
38>CEGUIOpenGLRenderer-0_Static.lib(GL3GeometryBuffer.obj) : error LNK2001: unresolved external symbol __imp___glewVertexAttribPointer
38>CEGUIOpenGLRenderer-0_Static.lib(GL3GeometryBuffer.obj) : error LNK2001: unresolved external symbol __imp___glewBufferSubData
38>CEGUIOpenGLRenderer-0_Static.lib(GL3GeometryBuffer.obj) : error LNK2001: unresolved external symbol __imp___glewDeleteVertexArrays
38>CEGUIOpenGLRenderer-0_Static.lib(GL3GeometryBuffer.obj) : error LNK2001: unresolved external symbol __imp___glewBufferData
38>CEGUIOpenGLRenderer-0_Static.lib(GL3GeometryBuffer.obj) : error LNK2001: unresolved external symbol __imp___glewGenVertexArrays
38>CEGUIOpenGLRenderer-0_Static.lib(GL3GeometryBuffer.obj) : error LNK2001: unresolved external symbol __imp___glewUniformMatrix4fv
38>CEGUIOpenGLRenderer-0_Static.lib(GL3GeometryBuffer.obj) : error LNK2001: unresolved external symbol __imp___glewGenBuffers
38>CEGUIOpenGLRenderer-0_Static.lib(GL3GeometryBuffer.obj) : error LNK2001: unresolved external symbol __imp___glewDeleteBuffers
38>CEGUIOpenGLRenderer-0_Static.lib(Texture.obj) : error LNK2001: unresolved external symbol __imp___glewGetCompressedTexImage
38>CEGUIOpenGLRenderer-0_Static.lib(Texture.obj) : error LNK2001: unresolved external symbol __imp___glewCompressedTexImage2D
38>CEGUIOpenGLRenderer-0_Static.lib(Texture.obj) : error LNK2001: unresolved external symbol __imp___glewCompressedTexSubImage2D
```"
495699736,291,manhnt9,2019-05-24T16:30:53Z,Is this the latest commit?
495700029,291,devshgraphicsprogramming,2019-05-24T16:31:40Z,"yes, after hard reset, pull etc."
495701093,291,manhnt9,2019-05-24T16:34:23Z,What is your CEGUI module's latest commit?
495703709,291,manhnt9,2019-05-24T16:41:28Z,"About the slowness, I don't thing it's gonna improve much when using git modules, because:
- Downloading a zip file is faster than each uncompressed submodule
- Build time of dependencies and cegui won't improve"
495725788,291,devshgraphicsprogramming,2019-05-24T17:40:52Z,"Build time is fine, its just the CMake ""Configure"" stage thats killing me"
495730597,291,manhnt9,2019-05-24T17:52:57Z,Did the linker errors go away? I think it's because you wasn't having latest CEGUI patch for static linking.
495801668,291,devshgraphicsprogramming,2019-05-24T22:12:31Z,"if we need a later version of CEGUI can you commit that you've pulled a later version of the submodule?
(if you pull a different submodule commit/branch, you can commit that fact)"
495845607,291,manhnt9,2019-05-25T04:12:00Z,"Yes I know that, just wondering if you've got the correct CEGUI version. Because it (glew linking errors) is strange since that is fixed in latest CEGUI."
495916740,291,devshgraphicsprogramming,2019-05-25T13:01:20Z,"well I reset and force intialized my submodules, what else can i do?"
495917628,291,manhnt9,2019-05-25T13:14:19Z,Could you paste last 5 commits of git log after cd into `3rdparty/CEGUI/cegui`?
495918002,291,devshgraphicsprogramming,2019-05-25T13:20:05Z,"```
Revision: fcc8d6cdc1992ba532db865ec56056e930850cc4
Author: ManhNT <manhnt.9@outlook.com>
Date: 20/05/2019 11:35:35
Message:
Update CEGUI for static PCRE fix

----
Modified: 3rdparty/CEGUI/cegui

Revision: 7b86b751cec96158bf9214f3e49ab9467fd63dd4
Author: ManhNT <manhnt.9@outlook.com>
Date: 20/05/2019 11:04:05
Message:
Update patched CEGUI

----
Modified: 3rdparty/CEGUI/CMakeLists.txt
Modified: 3rdparty/CEGUI/cegui

Revision: 3d5d0224eb7aaacf88d7f931325f0a13615b7675
Author: Manh NT <manhnt.9@outlook.com>
Date: 02/05/2019 22:17:39
Message:
Update CEGUI submodule to ignore dependencies folder

----
Modified: 3rdparty/CEGUI/cegui

Revision: 272422997a98184f39a0945279f9c95d2deec785
Author: ManhNT <manhnt.9@outlook.com>
Date: 01/05/2019 11:34:00
Message:
Add submodules

----
Modified: .gitmodules
Added: 3rdparty/CEGUI/cegui
Added: examples_tests/media/cegui_alfisko

```"
495918281,291,manhnt9,2019-05-25T13:24:10Z,"Yeah that's an old module. My log is below, notice that the first commit hash is the same as what I pushed: https://github.com/manhnt9/IrrlichtBAW/tree/sRGB/3rdparty/CEGUI
```
commit 160161abafdafe2b033b1d84c3df10eb6f45cbda (HEAD -> saga, origin/saga, origin/HEAD)
Author: ManhNT <manhnt.9@outlook.com>
Date:   Mon May 20 16:33:55 2019 +0700

    Add utility files

commit 1795c87bbb250c9b10322a0f10f3bfb731cc3f68
Author: Manh NT <manhnt.9@outlook.com>
Date:   Mon May 20 16:31:38 2019 +0700

    Add PCRE to static dependencies config

commit 8c1906537df085f46ac962856cd8ef881a470ae8
Author: Manh NT <manhnt.9@outlook.com>
Date:   Mon May 20 14:54:58 2019 +0700

    Initial static dependencies patch

commit a19029730a24ceb7ff1eec522d7b18b1bddc1fd2
Author: Manh NT <manhnt.9@outlook.com>
Date:   Wed Apr 17 10:59:45 2019 +0700

    Revert missing patch

commit 18802fcdbbaa864d8d9bd95c8ff420100d471854
Author: Manh NT <manhnt.9@outlook.com>
Date:   Wed Apr 17 10:55:59 2019 +0700

    Revert incompatible change
```"
495918756,291,manhnt9,2019-05-25T13:31:45Z,"Oooh, strange, but the latest commit message should be `Add utility files` instead of `Update CEGUI for static PCRE fix` shown in https://github.com/manhnt9/IrrlichtBAW/tree/sRGB/3rdparty/CEGUI.

I think Git is messed up somehow. I'm checking."
495919534,291,manhnt9,2019-05-25T13:43:48Z,"Solved, besides Git URL a submodule needs the branch name if it's not using master as default branch. My CEGUI branch is `saga`. Adding submodule without branch name works for the first time but it can't update without knowing which branch later. Git is dumb in this issue, not producing a sensible output and just assume the updated status somehow."
495919566,291,manhnt9,2019-05-25T13:44:12Z,You can pull and try updating the CEGUI module.
495931039,291,devshgraphicsprogramming,2019-05-25T16:29:33Z,"I couldn't pull because despite the pull of the main repo (where the branch is specified) git told me I'm not on a branch when pulling a submodule

So I had to pull explicitly, and it told me I'm up to date
```
C:\work\IrrlichtBAW\manhnt\3rdparty\CEGUI\cegui>git pull origin saga
From https://gitlab.com/InnerPieceOSS/cegui
 * branch              saga       -> FETCH_HEAD
Already up to date.

C:\work\IrrlichtBAW\manhnt\3rdparty\CEGUI\cegui>
```

Why do I need to mess around with the module manually if you update the submodules file?
Its not like I had any tracked or untrack file changes there.


And after all this I get extra compiler errors + cannot find glew.h ."
495931196,291,manhnt9,2019-05-25T16:31:43Z,"For any submodule, you'll have to checkout its branch before pulling.
```
git checkout saga (or master for other modules)
git pull origin saga
```"
495931338,291,devshgraphicsprogramming,2019-05-25T16:33:43Z,"I've done that manually, question is why on earth do I have to do that by myself, shouldn't we all be synced up nicely regarding what branch and revision/commit of a submodule we're using?

Especially after a `hard` `reset`?"
495931633,291,devshgraphicsprogramming,2019-05-25T16:38:00Z,"I was all up to date and proper.

Seems that because the CEGUI deps are not proper targets, after a change of cegui the following happens:
1) `ZERO_CHECK` doesn't work, as in it doesn't detect dependency
2) ""Configure"" again doesn't work because of CMake cache

So I needed to delete cache, and do ""Configure"" with correct extra options from the ground up again. "
495932229,291,manhnt9,2019-05-25T16:46:47Z,"The submodule hassle is due to the git mirroring.
The git version has extra changes (.gitignore for example) which are not reasonable to put into original svn repo. And the sync process will break completely if the git repo has manually made commit via git.
So each time I sync, my sync script does some tricks that re-writing some git commits, I'd have to revert git changes, sync from svn, re-add git changes and commit, and push -f. Maybe the commit hashes are messed up.
For now, I can eliminate git changes from the repo (leaving out .gitignore and then dependencies folder generated by build will be detected by irrbaw's git, but we already have shaderc and openssl polluted the same way, shaderc needs a touch of new lib file before building and openssl only builds in the source folder).

About the CEGUI CMake cache, yes because CEGUI version has changed. I advise deleting the CEGUI folder generated in build/3rdparty and configure again. Also note that I've tried deleting my build folder and rebuild several times on both Windows and Linux, so it shouldn't meet any serious build problems now."
495932510,291,devshgraphicsprogramming,2019-05-25T16:50:31Z,"Actually OpenSSL building in the source dir is not a problem, because the submodule gets reset and pulled the latest version from the 1.0.2 branch every time it builds ;)

Yeah the shaderc thing is a drag, they were supposed to have already fixed it :(

I think CEGUI deps should be properly added and statically linked on Linux after we ship BRDF Explorer completely."
495932916,291,devshgraphicsprogramming,2019-05-25T16:56:21Z,"Update: I've experienced #299 when trying to build example 13 in the Release configuration straight away.

Nope still same glew linker errors"
495937212,291,devshgraphicsprogramming,2019-05-25T18:02:06Z,"Even in Debug build
```
12>CEGUIOpenGLRenderer-0_Static_d.lib(RendererBase.obj) : error LNK2019: unresolved external symbol __imp_glewInit referenced in function ""protected: void __cdecl CEGUI::OpenGLRendererBase::init(bool,bool)"" (?init@OpenGLRendererBase@CEGUI@@IEAAX_N0@Z)
12>CEGUIOpenGLRenderer-0_Static_d.lib(RendererBase.obj) : error LNK2019: unresolved external symbol __imp_glewGetErrorString referenced in function ""protected: void __cdecl CEGUI::OpenGLRendererBase::init(bool,bool)"" (?init@OpenGLRendererBase@CEGUI@@IEAAX_N0@Z)
12>CEGUIOpenGLRenderer-0_Static_d.lib(RendererBase.obj) : error LNK2001: unresolved external symbol __imp_glewExperimental
12>CEGUIOpenGLRenderer-0_Static_d.lib(GL3Renderer.obj) : error LNK2001: unresolved external symbol __imp___glewActiveTexture
12>CEGUIOpenGLRenderer-0_Static_d.lib(GL3Renderer.obj) : error LNK2001: unresolved external symbol __imp___glewBlendFuncSeparate
12>CEGUIOpenGLRenderer-0_Static_d.lib(StateChangeWrapper.obj) : error LNK2001: unresolved external symbol __imp___glewBlendFuncSeparate
12>CEGUIOpenGLRenderer-0_Static_d.lib(GL3Renderer.obj) : error LNK2001: unresolved external symbol __imp___glewUniform1i
12>CEGUIOpenGLRenderer-0_Static_d.lib(GL3Renderer.obj) : error LNK2001: unresolved external symbol __imp___glewUseProgram
12>CEGUIOpenGLRenderer-0_Static_d.lib(Shader.obj) : error LNK2001: unresolved external symbol __imp___glewUseProgram
12>CEGUIOpenGLRenderer-0_Static_d.lib(GL.obj) : error LNK2001: unresolved external symbol __imp___glewGetStringi
12>CEGUIOpenGLRenderer-0_Static_d.lib(GL.obj) : error LNK2001: unresolved external symbol __imp___GLEW_VERSION_1_3
12>CEGUIOpenGLRenderer-0_Static_d.lib(GL.obj) : error LNK2001: unresolved external symbol __imp___GLEW_VERSION_2_0
12>CEGUIOpenGLRenderer-0_Static_d.lib(GL.obj) : error LNK2001: unresolved external symbol __imp___GLEW_VERSION_3_1
12>CEGUIOpenGLRenderer-0_Static_d.lib(GL.obj) : error LNK2001: unresolved external symbol __imp___GLEW_VERSION_3_2
12>CEGUIOpenGLRenderer-0_Static_d.lib(GL.obj) : error LNK2001: unresolved external symbol __imp___GLEW_ARB_texture_non_power_of_two
12>CEGUIOpenGLRenderer-0_Static_d.lib(Texture.obj) : error LNK2001: unresolved external symbol __imp___glewCompressedTexImage2D
12>CEGUIOpenGLRenderer-0_Static_d.lib(Texture.obj) : error LNK2001: unresolved external symbol __imp___glewCompressedTexSubImage2D
12>CEGUIOpenGLRenderer-0_Static_d.lib(Texture.obj) : error LNK2001: unresolved external symbol __imp___glewGetCompressedTexImage
12>CEGUIOpenGLRenderer-0_Static_d.lib(Texture.obj) : error LNK2001: unresolved external symbol __imp___glewBindBuffer
12>CEGUIOpenGLRenderer-0_Static_d.lib(GL3GeometryBuffer.obj) : error LNK2001: unresolved external symbol __imp___glewBindBuffer
12>CEGUIOpenGLRenderer-0_Static_d.lib(StateChangeWrapper.obj) : error LNK2001: unresolved external symbol __imp___glewBindBuffer
12>CEGUIOpenGLRenderer-0_Static_d.lib(Texture.obj) : error LNK2001: unresolved external symbol __imp___glewBindFramebuffer
12>CEGUIOpenGLRenderer-0_Static_d.lib(GL3FBOTextureTarget.obj) : error LNK2001: unresolved external symbol __imp___glewBindFramebuffer
12>CEGUIOpenGLRenderer-0_Static_d.lib(Texture.obj) : error LNK2001: unresolved external symbol __imp___glewDeleteFramebuffers
12>CEGUIOpenGLRenderer-0_Static_d.lib(GL3FBOTextureTarget.obj) : error LNK2001: unresolved external symbol __imp___glewDeleteFramebuffers
12>CEGUIOpenGLRenderer-0_Static_d.lib(Texture.obj) : error LNK2001: unresolved external symbol __imp___glewFramebufferTexture2D
12>CEGUIOpenGLRenderer-0_Static_d.lib(GL3FBOTextureTarget.obj) : error LNK2001: unresolved external symbol __imp___glewFramebufferTexture2D
12>CEGUIOpenGLRenderer-0_Static_d.lib(Texture.obj) : error LNK2001: unresolved external symbol __imp___glewGenFramebuffers
12>CEGUIOpenGLRenderer-0_Static_d.lib(GL3FBOTextureTarget.obj) : error LNK2001: unresolved external symbol __imp___glewGenFramebuffers
12>CEGUIOpenGLRenderer-0_Static_d.lib(Shader.obj) : error LNK2001: unresolved external symbol __imp___glewAttachShader
12>CEGUIOpenGLRenderer-0_Static_d.lib(Shader.obj) : error LNK2001: unresolved external symbol __imp___glewCompileShader
12>CEGUIOpenGLRenderer-0_Static_d.lib(Shader.obj) : error LNK2001: unresolved external symbol __imp___glewCreateProgram
12>CEGUIOpenGLRenderer-0_Static_d.lib(Shader.obj) : error LNK2001: unresolved external symbol __imp___glewCreateShader
12>CEGUIOpenGLRenderer-0_Static_d.lib(Shader.obj) : error LNK2001: unresolved external symbol __imp___glewDeleteProgram
12>CEGUIOpenGLRenderer-0_Static_d.lib(Shader.obj) : error LNK2001: unresolved external symbol __imp___glewDeleteShader
12>CEGUIOpenGLRenderer-0_Static_d.lib(Shader.obj) : error LNK2001: unresolved external symbol __imp___glewGetAttribLocation
12>CEGUIOpenGLRenderer-0_Static_d.lib(Shader.obj) : error LNK2001: unresolved external symbol __imp___glewGetProgramInfoLog
12>CEGUIOpenGLRenderer-0_Static_d.lib(Shader.obj) : error LNK2001: unresolved external symbol __imp___glewGetProgramiv
12>CEGUIOpenGLRenderer-0_Static_d.lib(Shader.obj) : error LNK2001: unresolved external symbol __imp___glewGetShaderInfoLog
12>CEGUIOpenGLRenderer-0_Static_d.lib(Shader.obj) : error LNK2001: unresolved external symbol __imp___glewGetShaderiv
12>CEGUIOpenGLRenderer-0_Static_d.lib(Shader.obj) : error LNK2001: unresolved external symbol __imp___glewGetUniformLocation
12>CEGUIOpenGLRenderer-0_Static_d.lib(Shader.obj) : error LNK2001: unresolved external symbol __imp___glewLinkProgram
12>CEGUIOpenGLRenderer-0_Static_d.lib(Shader.obj) : error LNK2001: unresolved external symbol __imp___glewShaderSource
12>CEGUIOpenGLRenderer-0_Static_d.lib(Shader.obj) : error LNK2001: unresolved external symbol __imp___glewBindFragDataLocation
12>CEGUIOpenGLRenderer-0_Static_d.lib(GL3GeometryBuffer.obj) : error LNK2001: unresolved external symbol __imp___glewBufferData
12>CEGUIOpenGLRenderer-0_Static_d.lib(GL3GeometryBuffer.obj) : error LNK2001: unresolved external symbol __imp___glewBufferSubData
12>CEGUIOpenGLRenderer-0_Static_d.lib(GL3GeometryBuffer.obj) : error LNK2001: unresolved external symbol __imp___glewDeleteBuffers
12>CEGUIOpenGLRenderer-0_Static_d.lib(GL3GeometryBuffer.obj) : error LNK2001: unresolved external symbol __imp___glewGenBuffers
12>CEGUIOpenGLRenderer-0_Static_d.lib(GL3GeometryBuffer.obj) : error LNK2001: unresolved external symbol __imp___glewEnableVertexAttribArray
12>CEGUIOpenGLRenderer-0_Static_d.lib(GL3GeometryBuffer.obj) : error LNK2001: unresolved external symbol __imp___glewUniformMatrix4fv
12>CEGUIOpenGLRenderer-0_Static_d.lib(GL3GeometryBuffer.obj) : error LNK2001: unresolved external symbol __imp___glewVertexAttribPointer
12>CEGUIOpenGLRenderer-0_Static_d.lib(GL3GeometryBuffer.obj) : error LNK2001: unresolved external symbol __imp___glewBindVertexArray
12>CEGUIOpenGLRenderer-0_Static_d.lib(StateChangeWrapper.obj) : error LNK2001: unresolved external symbol __imp___glewBindVertexArray
12>CEGUIOpenGLRenderer-0_Static_d.lib(GL3GeometryBuffer.obj) : error LNK2001: unresolved external symbol __imp___glewDeleteVertexArrays
12>CEGUIOpenGLRenderer-0_Static_d.lib(GL3GeometryBuffer.obj) : error LNK2001: unresolved external symbol __imp___glewGenVertexArrays
12>CEGUIOpenGLRenderer-0_Static_d.lib(GL3FBOTextureTarget.obj) : error LNK2001: unresolved external symbol __imp___glewCheckFramebufferStatus
```

Are you actually getting your glew from vcpkg or something and not the repo?
Otherwise I have no idea how you manage to build this"
497048246,291,devshgraphicsprogramming,2019-05-29T18:09:01Z,"I think I found the issue, you're including the dependencies like this
```
..\..\..\3rdparty\CEGUI\cegui\dependencies\lib\XXXXX
```

When in-fact they are
```
..\..\3rdparty\CEGUI\cegui-cegui-dependencies-0ecdf3a9e49b\build\dependencies\lib\static\XXXXX
```"
497049140,291,devshgraphicsprogramming,2019-05-29T18:11:29Z,"Damn it, that's not it"
497052522,291,devshgraphicsprogramming,2019-05-29T18:20:31Z,"This might be definitely it
```
if (CEGUI_BUILD_SHARED_LIBS_WITH_STATIC_DEPENDENCIES AND CEGUI_USE_GLEW)
    add_definitions( -DGLEW_STATIC )
endif()
```

sources:
https://github.com/nigels-com/glew/issues/161
https://github.com/nigels-com/glew/issues/88
https://stackoverflow.com/questions/22213558/unresolved-external-symbol-imp-glewinit-vs-imp-glewinit0"
497057204,291,devshgraphicsprogramming,2019-05-29T18:32:30Z,"> This might be definitely it

Now it works, CEGUI needs `CEGUI_BUILD_SHARED_LIBS_WITH_STATIC_DEPENDENCIES = ON`"
497192719,291,manhnt9,2019-05-30T03:54:32Z,"CEGUI_BUILD_SHARED_LIBS_WITH_STATIC_DEPENDENCIES
is not intended. It's for dynamic libs with static dependencies. That's why I needed to patch CEGUI for static libs + static dependencies. Mine works without that option, I'm not able to dig into your case soon but in general that fix is discouraged."
497328475,291,devshgraphicsprogramming,2019-05-30T13:26:15Z,">  It's for dynamic libs with static dependencies. 

Seems not, also the only thing it seems to control is whether to define `GLEW_STATIC`

> Mine works without that option

No idea how thats possible, maybe you're actually loading glew from a system installed dll.
`GLEW_STATIC` must be defined when compiling anything that used glew headers for a static glew to work."
497895841,291,devshgraphicsprogramming,2019-06-01T00:20:06Z,Also funny story `CEGUI_BUILD_SHARED_LIBS_WITH_STATIC_DEPENDENCIES` does not show on the Linux CMake-GUI config screen ;)
497896022,291,devshgraphicsprogramming,2019-06-01T00:22:15Z,"Tested on Windows and Linux.

Merged as its 99% complete, further work should be done on a new PR (the helper refactoring etc.)"
562460549,403,AnastaZIuk,2019-12-06T07:11:24Z,"The OpenEXR is a **priority**, so I will slow with doing https://github.com/buildaworldnet/IrrlichtBAW/pull/402 GLI dependency for a while and focus on it."
567913268,403,devshgraphicsprogramming,2019-12-20T12:47:01Z,Did you forget to add and commit `cmake/FindZLIB.`  (the override for findpackage zlib)?
568174940,403,AnastaZIuk,2019-12-21T11:43:36Z,"> Did you forget to add and commit cmake/FindZLIB. (the override for findpackage zlib)?

There is no need for that now, I fixed CMake and now everything works properly"
667319181,521,devshgraphicsprogramming,2020-07-31T19:42:54Z,Ok now only Blue Noise Dithering left to do and we're ready to merge ;)
679280176,521,AnastaZIuk,2020-08-24T18:03:20Z,I think we should move `IDither` to asset directory
680990936,521,AnastaZIuk,2020-08-26T16:35:31Z,@devshgraphicsprogramming I'm done
683440711,521,AnastaZIuk,2020-08-30T16:25:57Z,**CBlitFilter** has worked with new API recently correctly without issues but I wonder if we should query the `seed` for wang hash in the way like I do it now (maybe we should change it to something like `std::chrono::high_resolution_clock::now().time_since_epoch().count()` or similar?)
683441168,521,AnastaZIuk,2020-08-30T16:30:20Z,"spotted an issue however!
![image](https://user-images.githubusercontent.com/34793522/91664338-d41ce180-eaee-11ea-839f-8447b9c0d77b.png)
it seems it isn't due to dithering - when using Identity dither it generates the same weird output on bottom and right 
EDIT: it's probably a bug https://github.com/buildaworldnet/IrrlichtBAW/issues/460#issuecomment-683741305"
683958930,521,devshgraphicsprogramming,2020-08-31T18:42:32Z,"> 
> 
> **CBlitFilter** has worked with new API recently correctly without issues but I wonder if we should query the `seed` for wang hash in the way like I do it now (maybe we should change it to something like `std::chrono::high_resolution_clock::now().time_since_epoch().count()` or similar?)

`seed` should be in the whitenoise dither's state"
683961121,521,AnastaZIuk,2020-08-31T18:46:30Z,"> > **CBlitFilter** has worked with new API recently correctly without issues but I wonder if we should query the `seed` for wang hash in the way like I do it now (maybe we should change it to something like `std::chrono::high_resolution_clock::now().time_since_epoch().count()` or similar?)
> 
> `seed` should be in the whitenoise dither's state

okay"
685713368,521,devshgraphicsprogramming,2020-09-02T12:50:02Z,This should be merged into @Crisspl 's branch when its done.
576198311,411,devshgraphicsprogramming,2020-01-20T10:00:58Z,"Almost ready to merge, just some changes to GLI writer needed"
496307981,307,devshgraphicsprogramming,2019-05-27T21:23:00Z,"One more thing, because this is nice and new clean API... the files should be in `include/irr/namespace/...`

In the case of Axis Aligned Bounding Boxes, they should be in `include/irr/core/math`"
498205433,307,devshgraphicsprogramming,2019-06-03T10:38:53Z,"@Przemog1 , btw you need to add `IRR_FORCE_EBO` to all classes which are ""empty"" (don't have members) otherwise their sizes will be messed up

like this
https://github.com/buildaworldnet/IrrlichtBAW/blob/08269e8af602b0622b2b48cad785d0997f0b4551/include/irr/core/BaseClasses.h#L21

Its a very interesting MSVC bug regarding Empty Base Optimization that you can read about ;)"
498640691,307,Przemog1,2019-06-04T11:57:22Z,"now all I need to do is better algorithm for box intersection test
"
498641681,307,Przemog1,2019-06-04T12:00:35Z,"Also to finish this task I will need operator<, operator>, unpackLo and unpackHi functions for SIMD vectors"
498644687,307,devshgraphicsprogramming,2019-06-04T12:10:28Z,"```cpp
auto pseudoMin = core::unpacklo(internalRep,other.internalRep);
auto pseudoMax = core::unpackhi(internalRep,other.internalRep);
if (FLOATING_TYPE) // min <= max implies max-min >= 0
   return _mm_movemask_ps((pseudoMax+pseudoMin).getAsRegister())==0x0u;
else
   return pseudoMin<=pseudoMax;
```"
499056629,307,devshgraphicsprogramming,2019-06-05T12:10:07Z,are we done?
499058690,307,Przemog1,2019-06-05T12:17:16Z,"If everything is alright then yes.
Need to add few comments and I think its time to suspend this task until SIMD vector classes rework."
362012645,21,devshgraphicsprogramming,2018-01-31T17:45:00Z,"please merge your branch, I needed to change some things for C++03 TR1 compliance"
362059870,21,devshgraphicsprogramming,2018-01-31T20:26:13Z,"I think this merge didnt take my std::memcpy for memcpy and set<>::emplace to set<>::insert fixes

For ref: https://github.com/buildaworldnet/IrrlichtBAW/commit/b3363be991506280768d45fa1fc41ceb764a26e5"
362083705,21,Crisspl,2018-01-31T21:54:34Z,"Well, it took, but for some reason doesn't show in diff..
And why actually C header (`""stdint.h""`) and why quatation marks instead of `<>` ?"
362239552,21,devshgraphicsprogramming,2018-02-01T11:34:27Z,"Becuase cstdint is from C++11, GCC throws a fit about it.

All that stdint provides is typedefs for (u)intN_t"
362250252,21,suddani,2018-02-01T12:22:46Z,"Wunderbar

Am 01.02.2018 12:46 schrieb ""devshgraphicsprogramming"" <
notifications@github.com>:

> *@devshgraphicsprogramming* commented on this pull request.
> ------------------------------
>
> In include/CFinalBoneHierarchy.h
> <https://github.com/buildaworldnet/IrrlichtBAW/pull/21#discussion_r165333271>
> :
>
> > @@ -100,6 +101,35 @@ namespace scene
>                  createAnimationKeys(inLevelFixedJoints);
>              }
>
> +			void fillExportBlob(void* _dataPtr, uint32_t* _size)
>
> Maybe have a ""Blob* SerializeToBlob(void** initialData, uint32_t&
> initialBlobSize=0);"" function for future use in all classes?
>
> With a requirement that outBlob is either NULL or an address of a pointer
> to memory which can be reallocated using realloc.
>
> And then at the end of the function return *outBlob;
>
> —
> You are receiving this because you are subscribed to this thread.
> Reply to this email directly, view it on GitHub
> <https://github.com/buildaworldnet/IrrlichtBAW/pull/21#pullrequestreview-93253098>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AA7twpt5rn6vu0-VfwU7AXZ41y4TvxBZks5tQaP6gaJpZM4R0PTU>
> .
>
"
362258405,21,devshgraphicsprogramming,2018-02-01T12:58:49Z,"About  variable size blobs such as MeshBlobV1, FinalBoneHierarchyBlobV1, etc.

Lets inherit them from a template struct
`template<class T>
struct VariableSizeBlob : public Blob
{
    static size_t caclBlobSizeForObj(T* _obj) {return 0;}
    static void*  allocMemForBlob(T* _obj) {return malloc(caclBlobSizeForObj<T>());}
};`
as i.e. class MeshBlobV1 : public VariableSizeBlob<ICPUMesh>

Then specialize the calcBlobSizeForObj function for all objects?

And finally change the structs inheriting from VariableSizeBlob to classes and make the constructors private and only provide a static placement new wrapper .."
362264739,21,devshgraphicsprogramming,2018-02-01T13:24:51Z,"Also I'm seeing a lot of 
`_ctx.headers[_headerIdx].blobSize = _ctx.headers[_headerIdx].blobSizeDecompr = size;
core::XXHash_256(&data, _ctx.headers[_headerIdx].blobSizeDecompr, _ctx.headers[_headerIdx].blobHash);
_file->write(data, _ctx.headers[_headerIdx].blobSizeDecompr);`
In every exportAsBlob

maybe we should make a general function for this on the Blob or in the CBAWMeshWriter, so we don't repeat ourselves?"
362670902,21,Crisspl,2018-02-02T18:46:45Z,I'm going to have much less time for a few days now. Could you just run writer/loader on some more complicated meshes to see if it's working? I'll also test it myself of course :D but some feedback from you would be nice since you know the exact needs
362806581,21,devshgraphicsprogramming,2018-02-03T13:34:44Z,"Still don't like the fact that allocMemForBlob is not a member of VariableSizeBlob

We can make it work with a CRTP.
[https://en.wikipedia.org/wiki/Curiously_recurring_template_pattern#Static_polymorphism](url)

This ties is with the other thing I don't like which is that ALL blobs are not constructed and filled in their constructors, VariableSizeBlobs would just use static some static func, i.e. ""createFromObj"" which would use placement new internally, with private constructors."
362820132,21,Crisspl,2018-02-03T15:12:04Z,Did this one thing now. About everything else I'll talk to you in a few days because of mentioned lack of time..
362820247,21,devshgraphicsprogramming,2018-02-03T15:13:06Z,"No problem, just remember to merge, I had to rip out C++11 std::free and malloc stuff from CBAWMeshWriter.cpp again"
362823118,21,devshgraphicsprogramming,2018-02-03T15:37:03Z,"I think a big problem now is a lot of DRY (Don't Repeat Yourself) violation, basically every specialization of `CBAWMeshFileLoader::make`

Does 
`
if (_data.wasCreated)
    return dynamic_cast<core::ICPUBuffer*>(_ctx.createdObjects[_data.header->handle]);
`
and
`registerObject(_data, _ctx, buf);` (which I want to disappear anyway)

The function `CBAWMeshFileLoader::make` should be wrapped in a generic `loadBlob` function which should do stuff like checking if the object was already loaded/created, checksum validation (in the future decompression) and, at the end, changing the object's status to loaded."
362823694,21,devshgraphicsprogramming,2018-02-03T15:41:25Z,"I think I forgot to mention rule 12,13 and 14 of HPC:
12) Recursion is evil, and so are deep call-stacks, ergo rule 13
13) Don't inline your functions, but keep them inlineable
14) Eliminate deep call-stacks, by usting your own stack!

I have an idea for keeping the loading from being functions calling functions, but for now its not essential.

In a nutshell if would boil down to:
1) `Obj* SomeObjectBlob::createObj<functionToGetLoadedBlobs>(Stack<handle>& _additionalBlobsToLoad)`
2) if  `SomeObjectBlob::needsFinalization(Obj* _obj)` then put on `std::pair<Blob*,void*> _objectBlobsToFinalize`
3) load everything that is on `_additionalBlobsToLoad` with repeating steps 1-2

4) For all in `_objectBlobsToFinalize` do `SomeObjectBlob::finalizeObj<functionToGetLoadedBlobs>(Obj* _obj)`"
364060336,21,devshgraphicsprogramming,2018-02-08T09:56:52Z,"Stop what you're doing, we need to talk"
708595682,549,devshgraphicsprogramming,2020-10-14T18:53:58Z,"I see a problem that
```
            if (isDummyObjectForCacheAliasing)
                return;
```
is used an an ""early out"" on all `convertToDummyObject`

Now because the call is recursive (goes through children) and whether a child is converted depends on its mutability state... this means that just because it was called before on an asset, won't guarantee that a second call is not going to produce side-effects.

This logic was broken even before mutability concerns, when we first introduced the recursion depth parameter."
708628534,549,Crisspl,2020-10-14T20:00:13Z,"> I see a problem that
> 
> ```
>             if (isDummyObjectForCacheAliasing)
>                 return;
> ```
> 
> is used an an ""early out"" on all `convertToDummyObject`
> 
> Now because the call is recursive (goes through children) and whether a child is converted depends on its mutability state... this means that just because it was called before on an asset, won't guarantee that a second call is not going to produce side-effects.
> 
> This logic was broken even before mutability concerns, when we first introduced the recursion depth parameter.

this `if` doesn't concern mutability at all. However I see your point.. for example at first I call converttodummy(0) and after that converttodummy (2). And levels 1 and 2 won't be converted then
"
713445826,549,devshgraphicsprogramming,2020-10-21T09:42:14Z,"TODO:
- [x] Comments
- [x] ~~non-const getters on non-mutable assets to return `nullptr` etc.~~ make non-const getters on non-mutable assets `assert(false)`
- [x] `const_cast` in CPU2GPU converter (so that const getters can be used)"
717311501,549,Crisspl,2020-10-27T15:10:54Z,All done
638757379,487,devshgraphicsprogramming,2020-06-04T10:14:11Z,Does this work and has it been actually tested?
685644428,487,devshgraphicsprogramming,2020-09-02T11:15:25Z,can you merge `shader_pipeline` into your branch so the diff is not insane?
686610697,487,Hazardu,2020-09-03T16:32:40Z,@devshgraphicsprogramming could you assist me with assigning the proper parameters for allocator's constructor in CFixedCapacityDoublyLinkedList.h?
585444038,422,devshgraphicsprogramming,2020-02-12T22:12:29Z,whhy does this PR contain updates to submodules?
585455836,422,Crisspl,2020-02-12T22:43:32Z,">whhy does this PR contain updates to submodules?

idk, added files with git add -u and those got added. I think it's no harm though"
585782411,422,devshgraphicsprogramming,2020-02-13T14:29:24Z,"> idk, added files with git add -u and those got added. I think it's no harm though

No way to tell unless you do a clean checkout and see if you've added a problem to our already problem riddled submodules.

The submodules were at specific commits and tags for a reaason"
590236130,422,devshgraphicsprogramming,2020-02-24T09:38:16Z,what are we doing about the unresolved conversations?
508554001,333,devshgraphicsprogramming,2019-07-04T18:31:34Z,@Crisspl you should merge my master branch into yours to get latest CMake+submodule fixes.
508922467,333,devshgraphicsprogramming,2019-07-06T12:21:24Z,@Crisspl There's still about 8 unresolved conversations remaining in the PR.
517994360,333,devshgraphicsprogramming,2019-08-04T11:11:20Z,Cool but you didn't include `CDerivativeMapper.h` in any other include so user won't be able to use it by just including `irrlicht.h`
418922215,143,devshgraphicsprogramming,2018-09-06T00:18:12Z,"It would be nice to unify the methods for all cache types.

the single-object caches can just return 1-sized ranges"
418930612,143,Crisspl,2018-09-06T01:09:29Z,"That's kind of stuff you should tell me before. It changes approach like a lot, but i'll see tomorrow how we can do that"
418973722,143,devshgraphicsprogramming,2018-09-06T05:56:36Z,"Well at least these classes are not being used anywhere, yet.

> That's kind of stuff you should tell me before.

Agreed. However it would be beneficial to commit the intended function declarations first (or interfaces), then we could discuss the approach before the trouble of writing definitions and implementations."
419498381,143,devshgraphicsprogramming,2018-09-07T16:44:03Z,"I allowed the insertion and caching of null pointers a month ago

https://github.com/buildaworldnet/IrrlichtBAW/commit/ed1029bd1995e07686dbd57c212d3a1ae8281fac#diff-d57fe204ada75d53d408f90f1606d69bR103

Also referenced it in the issue #123 

The non-nullness of the returned pointer is no longer an indicator of success.

Greet and Dispose are always called, even on nullptr... they are supposed to check for it and handle that."
419531679,143,Crisspl,2018-09-07T18:48:17Z,"> I allowed the insertion and caching of null pointers a month ago

I know, everything i'm aware of is up to date with your changes"
419557563,143,devshgraphicsprogramming,2018-09-07T20:31:42Z,ok I'll review code once again
420061262,143,devshgraphicsprogramming,2018-09-10T21:07:06Z,"The operation of `CPreInsertionVerifier` is really hard to decipher without comments.

The macros don't help either."
420071266,143,devshgraphicsprogramming,2018-09-10T21:42:57Z,"In general using `isNonZeroRange` to check a range's validity is not really that efficient.

As everything except for vector and possibly map/multimap could suffer big performance hits from the `std::distance` call as the ""complexity"" part of the spec says
http://www.cplusplus.com/reference/iterator/distance/

the complexity for non-random access iterators will be linear in the distance size.

A far better method would be to simply check if `range.first!=range.second`"
420099782,143,Crisspl,2018-09-10T23:57:45Z,Yea that's wrong. I'll change it to `!=` as you suggest
420178576,143,devshgraphicsprogramming,2018-09-11T07:40:31Z,"I think all uses of `NoPtrValueType_impl` could be replaced with `const
value_type &` or `const_reference_type` then the cache could take
non-ptr types too.

On 11/09/18 00:39, Krzysztof Szenk wrote:
> *@Crisspl* commented on this pull request.
> 
> ------------------------------------------------------------------------
> 
> In include/CObjectCache.h
> <https://github.com/buildaworldnet/IrrlichtBAW/pull/143#discussion_r216507667>:
> 
>>          ContainerT m_container;
>  
> -        using ValueType = typename ContainerT_T<K..., T>::value_type::second_type; // container's value_type is always instantiation of std::pair
> -        using NoPtrValueType = typename std::remove_pointer<ValueType>::type;
> -        using PtrToConstVal_t = const NoPtrValueType*; // ValueType is always pointer type
> +        // typedefs for implementation only
> +        using PairType_impl = typename ContainerT::value_type;
> +        //! Always pointer type
> +        using ValueType_impl = typename PairType_impl::second_type; // container's value_type is always instantiation of std::pair
> +        static_assert(std::is_pointer<ValueType_impl>::value, ""ValueType_impl must be pointer type!"");
> +        using KeyType_impl = typename PairType_impl::first_type;
> +        using NoPtrValueType_impl = typename std::remove_pointer<ValueType_impl>::type;
> 
> I have, a line below. Readability purposes
> 
> —
> You are receiving this because you commented.
> Reply to this email directly, view it on GitHub
> <https://github.com/buildaworldnet/IrrlichtBAW/pull/143#discussion_r216507667>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AGky8R6nYrSP_XqGD7bjCOhU32x5axIiks5uZvgdgaJpZM4Wbfu9>.
> 
"
420178954,143,devshgraphicsprogramming,2018-09-11T07:42:05Z,"ok I see that std::move shoudl take care of the first problem

By ""copy and move constructors for the cache base itself?"" I mean
```
inline explicit CObjectCacheBase(const CObjectCacheBase& other)
inline explicit CObjectCacheBase(CObjectCacheBase&& other)
```

On 11/09/18 00:41, Krzysztof Szenk wrote:
> *@Crisspl* commented on this pull request.
> 
> ------------------------------------------------------------------------
> 
> In include/CObjectCache.h
> <https://github.com/buildaworldnet/IrrlichtBAW/pull/143#discussion_r216508069>:
> 
>>          {
>              if (m_greetingFunc)
>                  m_greetingFunc(_object);
>          }
>  
>      public:
> -        inline explicit CObjectCacheBase(const std::function<void(ValueType)>& _greeting, const std::function<void(ValueType)>& _disposal) : m_greetingFunc(_greeting), m_disposalFunc(_disposal) {}
> -        inline explicit CObjectCacheBase(std::function<void(ValueType)>&& _greeting, std::function<void(ValueType)>&& _disposal) : m_greetingFunc(std::move(_greeting)), m_disposalFunc(std::move(_disposal)) {}
> +        inline explicit CObjectCacheBase(const GreetFuncType& _greeting, const DisposalFuncType& _disposal) : m_greetingFunc(_greeting), m_disposalFunc(_disposal) {}
> +        inline explicit CObjectCacheBase(GreetFuncType&& _greeting, DisposalFuncType&& _disposal) : m_greetingFunc(std::move(_greeting)), m_disposalFunc(std::move(_disposal)) {}
> 
>     a move constructor would require you to zero out or invalidate the
>     input reference.
> 
> That's why I use |std::move|. So |std::function| takes care of that
> 
>     Also why not copy and move constructors for the cache base itself?
> 
> Sorry, I don't understand what you're asking for
> 
> —
> You are receiving this because you commented.
> Reply to this email directly, view it on GitHub
> <https://github.com/buildaworldnet/IrrlichtBAW/pull/143#discussion_r216508069>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AGky8QvDn1LULEeyubSxGrOHM4V67Kzuks5uZvi_gaJpZM4Wbfu9>.
> 
"
420183770,143,devshgraphicsprogramming,2018-09-11T08:00:21Z,"I guess if you change `isNonZeroRange` to use the != operator instead of
`std::distance` this should be fine to stay.

On 11/09/18 00:56, Krzysztof Szenk wrote:
> *@Crisspl* commented on this pull request.
> 
> ------------------------------------------------------------------------
> 
> In include/CObjectCache.h
> <https://github.com/buildaworldnet/IrrlichtBAW/pull/143#discussion_r216510361>:
> 
>>          }
>  
> -        m_container.insert(it, {_key, _val});
> -        return true;
> -    }
> +    private:
> +        template<typename RngType>
> +        inline RngType findRange_internal(const typename Base::KeyType_impl& _key)
> +        {
> +            auto cmpf = [](const typename Base::PairType_impl& _a, const typename Base::PairType_impl& _b) -> bool {return _a.first < _b.first; };
> +            typename Base::PairType_impl lookingFor{_key, nullptr};
> +
> +            RngType range;
> +            range.first = std::lower_bound(std::begin(Base::m_container), std::end(Base::m_container), lookingFor, cmpf);
> +            if (range.first == std::end(Base::m_container) || _key < range.first->first)
> +            {
> +                range.second = range.first;
> 
> But it wouldn't give any information where to put new element/relation
> between contents of cache and elent being inserted. |findRange| is used
> also in functions where insertions happens
> 
> —
> You are receiving this because you commented.
> Reply to this email directly, view it on GitHub
> <https://github.com/buildaworldnet/IrrlichtBAW/pull/143#discussion_r216510361>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AGky8dw3XV0fgjPuJ21sWRBJzZH2HtSrks5uZvwVgaJpZM4Wbfu9>.
> 
"
420185532,143,devshgraphicsprogramming,2018-09-11T08:07:08Z,"Right now you have a situation that if you find a key, then the range
returned will be a valid range of all key values for that key.

However if the key is not present, you insert a nullptr key, and you
still return the old found range.

There are 2 problems with this:
1. Insertion (container modification) can invalidate existing iterators
2. Now the real valid range is the iterator returned by
`m_container.insert` and the `std::next` of that iterator

problem number 1 is the biggest issue as it will cause a segfault if
someone wants to use the returned range to know where their reserved
nullptr is.

On 11/09/18 00:51, Krzysztof Szenk wrote:
> *@Crisspl* commented on this pull request.
> 
> ------------------------------------------------------------------------
> 
> In include/CObjectCache.h
> <https://github.com/buildaworldnet/IrrlichtBAW/pull/143#discussion_r216509579>:
> 
>>          }
>  
> -		*_outval = it->second;
> -		return true;
> -    }
> +        bool getKeyRangeOrReserve(typename Base::RangeType* _outrange, const typename Base::KeyType_impl& _key)
> +        {
> +            *_outrange = findRange(_key);
> +            if (!Base::isNonZeroRange(*_outrange))
> +            {
> +                this->m_container.insert(_outrange->second, {_key, nullptr});
> 
> I don't understand. Also what means ""normally""?
> 
> —
> You are receiving this because you commented.
> Reply to this email directly, view it on GitHub
> <https://github.com/buildaworldnet/IrrlichtBAW/pull/143#discussion_r216509579>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AGky8SdbviY5Hww3cFXzBjF-LTOG1GlOks5uZvsAgaJpZM4Wbfu9>.
> 
"
420186000,143,devshgraphicsprogramming,2018-09-11T08:08:56Z,"OK, at least write a big comment on that line.

On 11/09/18 00:48, Krzysztof Szenk wrote:
> *@Crisspl* commented on this pull request.
> 
> ------------------------------------------------------------------------
> 
> In include/CObjectCache.h
> <https://github.com/buildaworldnet/IrrlichtBAW/pull/143#discussion_r216509107>:
> 
>> +    !impl::CPreInsertionVerifier<ContainerT_T, typename Base::ContainerT, std::is_base_of<impl::CMultiCache_tag, MY_TYPE>::value>::verify(this->m_container, it, _key)\
> +    )\
> +        return false;\
> +    \
> +    greet(newVal.second);\
> +    this->m_container.insert(it, newVal);\
> +    return true;
> +#define INSERT_IMPL_ASSOC \
> +    auto res = this->m_container.insert({ _key, _val });\
> +    const bool verif = impl::CPreInsertionVerifier<ContainerT_T, typename Base::ContainerT, std::is_base_of<impl::CMultiCache_tag, MY_TYPE>::value>::verify(res);\
> +    if (verif)\
> +        greet(_val);\
> +    return verif;
> +
> +    template<
> +        bool isMultiContainer,
> 
> I meant ""is multimal or unordered_multimap"". isNotVectorBased would be
> misleading here because it doesn't tell that only ""multi"" containers are
> allowed here (and vector)
> 
> —
> You are receiving this because you commented.
> Reply to this email directly, view it on GitHub
> <https://github.com/buildaworldnet/IrrlichtBAW/pull/143#discussion_r216509107>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AGky8YaMPUdMmoAdy2GRoUKNts0NAFbZks5uZvpWgaJpZM4Wbfu9>.
> 
"
420190100,143,devshgraphicsprogramming,2018-09-11T08:23:45Z,"it is the specialization used for single element associative cache, but
I forgot it returns a std::pair<iterator,bool>

On 11/09/18 00:44, Krzysztof Szenk wrote:
> *@Crisspl* commented on this pull request.
> 
> ------------------------------------------------------------------------
> 
> In include/CObjectCache.h
> <https://github.com/buildaworldnet/IrrlichtBAW/pull/143#discussion_r216508490>:
> 
>>  
> -template<
> -    typename K,
> -    typename T,
> -    template<typename...> class ContainerT_T
> ->
> -class CObjectCache<K, T, ContainerT_T, true> : public impl::CObjectCacheBase<ContainerT_T, std::pair<K, T*>>
> -{
> -    using ValueType = std::pair<K, T*>;
> +            return true;
> +        }
> +    };
> +    template<template<typename...> class ContainerT_T, typename ContainerT>
> +    struct CPreInsertionVerifier<ContainerT_T, ContainerT, false, true>
> +    {
> +        static bool verify(const std::pair<typename ContainerT::iterator, bool>& _insertionRes)
> 
> See all specializations of |CPreInserionVerifier|. It's not the one that
> is used in case you're talking about
> 
> —
> You are receiving this because you commented.
> Reply to this email directly, view it on GitHub
> <https://github.com/buildaworldnet/IrrlichtBAW/pull/143#discussion_r216508490>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AGky8atuQPljy36yvsykq7x1vHqa63e-ks5uZvlhgaJpZM4Wbfu9>.
> 
"
420242066,143,Crisspl,2018-09-11T11:34:05Z,">By ""copy and move constructors for the cache base itself?"" I mean
```
inline explicit CObjectCacheBase(const CObjectCacheBase& other)
inline explicit CObjectCacheBase(CObjectCacheBase&& other)
```

They're generated by the compiler for every class ever as long as the're not explicitely deleted in the class or one of its memebers."
420243072,143,Crisspl,2018-09-11T11:38:37Z,Also please answer in the conversation because it's hard to read when all the talking is scattered all over the page
420250179,143,Crisspl,2018-09-11T12:05:30Z,">However if the key is not present, you insert a nullptr key, and you
still return the old found range.

Oh yeah, it's a bug, thanks"
420253106,143,devshgraphicsprogramming,2018-09-11T12:17:09Z,"> Also please answer in the conversation because it's hard to read when all the talking is scattered all over the page

Reply by email seems not to put my replies in the right thread.

Do you want me to copy the replies in the right places?"
420254828,143,devshgraphicsprogramming,2018-09-11T12:23:25Z,"> They're generated by the compiler for every class ever as long as the're not explicitely deleted in the class or one of its memebers.

Ok, but can we get a static_assert that the end classes are copyable and movable ?"
420259459,143,Crisspl,2018-09-11T12:39:42Z,"Sure,
Btw, concurrent variants won't be moveable nor copyable (also in the sense of assignment) with c++11 impl. of locks (`std::atomic`)."
420270133,143,devshgraphicsprogramming,2018-09-11T13:15:15Z,I take thats a given about concurrents :)
420273886,143,Crisspl,2018-09-11T13:26:43Z,"So i'll explicetely delete copy/move ctors/assignment ops in concurrents so they're uniform regardless of locks implementation, ok?"
420293670,143,Crisspl,2018-09-11T14:27:09Z,">Ok, but can we get a static_assert that the end classes are copyable and movable ?


Hm turns out it's not really possible, because such static_assert must be inside template class definition (so it  triggers at template instantiation) but at least MSVC doesn't allow putting ""undefined class"" (because it's *inside* the definition) into `is_copy_constructibe<>` etc. Btw it's implemented with some compiler intrinsic here.
Also it can't live outside the definition because it'd have been concretized for some template args. Best bet imo would be to put some instantiations of cache template type into those type traits but it's extremely ugly"
420313539,143,devshgraphicsprogramming,2018-09-11T15:24:06Z,"> Best bet imo would be to put some instantiations of cache template type into those type traits but it's extremely ugly

Ok lets not bother with that."
420316702,143,devshgraphicsprogramming,2018-09-11T15:33:13Z,"I closed and merged but some areas I marked with `// can be get some general specialization for any allocator?` will need an update for the future because we need to support all std::vector (map, etc.) regardless of allocator used."
420321815,143,Crisspl,2018-09-11T15:48:01Z,"> will need an update for the future because we need to support all std::vector (map, etc.) regardless of allocator used.

Yea, i've seen your plans about this somewhere. I'll do this in next commit"
420323541,143,devshgraphicsprogramming,2018-09-11T15:53:12Z,You'll need a big merge for that ;)
420324437,143,Crisspl,2018-09-11T15:55:53Z,You've done it :D and i already pulled to my local
518009418,341,devshgraphicsprogramming,2019-08-04T14:45:19Z,"@Crisspl you do realize that the velocity buffer is practically almost not needed at all?

Unless ofc you plan to blend velocities for some weird obscure reason (particles).

Since we can very easily work out velocity
```c++
uniform mat4 matrixDiff = oldModelViewProj*inverseCurrentModelViewProj;
// Since (p.v.m) . (P.V.M)^-1 = p.v.m M^-1.V^-1.P^-1 , i.f.f. object does not move, the old model matrix cancels out with the new model matrix, so can use below for prototype
//uniform mat4 matrixDiff = oldViewProj*inverseCurrentViewProj;

vec4 currentProjPos = NDC.xyz*NDC.w; // get back gl_Position, same way that you do for deferred renderers.
vec4 oldProjPos = matrixDiff*currentProjPos;
vec2 velocityNDC = NDC.xy-oldProjPos.xy/oldProjPos.w;
```"
518009725,341,devshgraphicsprogramming,2019-08-04T14:49:01Z,"For getting NDC position or View Space Position from non-linear ZBuffer plus texcoords you can check out my previous work here
https://github.com/ConfettiFX/The-Forge/blob/master/Examples_3/Unit_Tests/src/09_LightShadowPlayground/Shaders/Vulkan/sdfSphere.frag#L106"
518012428,341,devshgraphicsprogramming,2019-08-04T15:23:11Z,"When we encounter skinned meshes or moving meshes, we could implement what is already required in Deferred+, that is give every object and triangle a Unique ID.

Then given the world space (or view space) 3D fragment postion, work out the triangle barycentric coordinates, then use data about the previous frame (old transformed skinning vertices by compute shader, old MVP matrices, etc.) to compute the 3 triangle vertex `gl_Position`s and reproject like that ;)"
518025260,341,devshgraphicsprogramming,2019-08-04T18:26:14Z,"@Crisspl last thing, try and work out the average distance between your jitter samples (obvsiouly repeat them a in a 3x3 grid) to find out the Mip-Map bias to set on all textures (its an OpenGL setting, you can extend `STextureLayer`)

I'd expect this, where N is numer of jitter sample positions

N=1 -> avg_distance = 1.0 pixel
N=2 -> avg_distance = 0.707 pixel
etc.

Your MipMap bias needs to be `log2(avg_distance)`

This is because now textures will get smoother and blurrier, so TSSAA can provide better quality AA in terms of texture filtering."
518311883,341,Crisspl,2019-08-05T16:50:40Z,"some screenshots
no camera movement:

![taa_d 2019-08-05 18-42-51-49](https://user-images.githubusercontent.com/16739017/62481074-b37e3d00-b7b1-11e9-98db-5a444f644e1d.jpg)
slight camera movements:
![taa_d 2019-08-05 18-43-33-70](https://user-images.githubusercontent.com/16739017/62481086-be38d200-b7b1-11e9-927f-1f8bd81d44c3.jpg)
fast camera movements:
![taa_d 2019-08-05 18-44-06-54](https://user-images.githubusercontent.com/16739017/62481104-ca249400-b7b1-11e9-83ab-43853e56033b.jpg)

as bmp (i had to convert to jpg for github to allow uploading it): https://www.dropbox.com/sh/e7rejuykgmevy5e/AAAKpTWYovRlpKcjOFtAcdj4a?dl=0"
518331577,341,devshgraphicsprogramming,2019-08-05T17:46:15Z,"@Crisspl Oh I read in Ke XU's presentation that the history buffer needs to be FP16, which makes sense because usually we have banding and loose a lot of info to the extent of needing dithering (I actually inject noise before writing out to 8bit textures/framebuffer in Build A World). So basically output post-gamma non-linear (lin2srgb) colors to a linear half-float history buffer.

Also since you will be using the compute shader, you can finally use RGB9E5 shared exponent non-renderable format for the history buffer (make an r32uint image view, use as read+write storage image and pack/unpack manually) which saves us 2x space!

To reduce banding and allow HDR displays (ITU 2020) your input could be FP16, R11G11B10F or RGB9E5, even though its post-resolve/post-gamma. If you get SRGB8 texture as input remember not to sample it as SRGB8 (it will linearize, you don't want to work in linear space), create a RGB(A)8_UNORM view for it.

Finally you could add dithering (nice noise) on the non-history output, after the motion blur if any.

In the future we will roll Tonemapping -> Color Correction -> OETF -> TSSAA & Motion Blur & Output Dithering into one shader"
518335683,341,devshgraphicsprogramming,2019-08-05T17:57:57Z,"Those screenshots don't look like AA, there's some blur but the straight edges of the box against the background don't look like 8x TSSAA"
518343819,341,Crisspl,2019-08-05T18:20:52Z,"what actually means ""8x"" in ""8x TSSAA""?"
518345934,341,devshgraphicsprogramming,2019-08-05T18:26:35Z,8 jitter positions.
615873111,341,devshgraphicsprogramming,2020-04-18T13:36:37Z,we'll redo it at some point
539876325,373,devshgraphicsprogramming,2019-10-09T07:29:40Z,"resolved everything, merge to other fork"
622187719,480,devshgraphicsprogramming,2020-05-01T00:20:49Z,"when the code is commented out the OpenGL vs.Vulkan NDC set-up is wrong (it doesn't get reset to OpenGL default before CEGUI is invoked)

However when its uncommented there's probably something wrong with saving the blend state (`glEnable` + `glBlendFunc` stuff)"
655763739,480,devshgraphicsprogramming,2020-07-08T21:20:05Z,closing temporarily.... reopen when ready for merge
559723678,402,devshgraphicsprogramming,2019-11-29T09:32:16Z,"AFAIK the GLM submodule may be fucked up and have problems configuring/building when added as a subdirectory in CMake, have to check and if its the case figure out what's wrong."
559724086,402,devshgraphicsprogramming,2019-11-29T09:33:30Z,"btw have a look at 
https://github.com/buildaworldnet/IrrlichtBAW/pull/381/files"
560168736,402,devshgraphicsprogramming,2019-12-01T22:39:47Z,"You need to view the ICPUImage as the full OpenGL image, all layers and mip-levels included.

ICPUImage gets its pixels filled by a series of buffer to image copies like in vulkan."
570060023,402,AnastaZIuk,2020-01-01T15:04:57Z,close due to moving to https://github.com/buildaworldnet/IrrlichtBAW/pull/411
546046717,387,devshgraphicsprogramming,2019-10-24T18:33:24Z,I have a bunch of comments for STL and PLY loaders that now got lost because of the merge.
546510553,387,devshgraphicsprogramming,2019-10-25T20:56:08Z,"I'd cut down on that `public virtual`, `IDescriptor` does not need to know anything about ref counting."
546553793,387,Crisspl,2019-10-26T00:57:11Z,">I'd cut down on that public virtual, IDescriptor does not need to know anything about ref counting.

not sure what about this is but yea, it needs to inherit from irefcounted, see IDescriptorSet code (smart_refctd_ptr<IDescriptor>)"
546553920,387,Crisspl,2019-10-26T00:58:47Z,">I have a bunch of comments for STL and PLY loaders that now got lost because of the merge.

they're still there"
546585297,387,devshgraphicsprogramming,2019-10-26T09:07:09Z,"> not sure what about this is but yea, it needs to inherit from irefcounted, see IDescriptorSet code (smart_refctd_ptr)

So you are holding onto objects by `IDescriptor` pointer ?

ok but lets have the `public virtual` used as low down the hierarchy as possible."
546740638,387,Crisspl,2019-10-27T22:19:06Z,">ok but lets have the public virtual used as low down the hierarchy as possible.

it is if i understand correctly what u mean. Went with same approach as with `IAsset : public virtual IReferenceCounted`"
599044694,437,Przemog1,2020-03-14T11:36:39Z,hash function may not make sense at this moment :V 
601760716,437,Przemog1,2020-03-20T15:31:15Z,"@devshgraphicsprogramming now on my machine, in debug mode time to load sponza decreased from ~1:30 to ~0:45
since sponza uses only `quantizeNormal2_10_10_10` functions `quantizeNormal888` and `quantizeNormal16_16_16` are not tested yet"
602526833,437,devshgraphicsprogramming,2020-03-23T11:07:52Z,"Nice, we just now need to wrap up the cache in a class and allow for saving, loading and mergining caches (so that we can accelerate between runs)"
605352944,437,devshgraphicsprogramming,2020-03-27T23:18:00Z,merge my branch into yours first.... and lets get this MF-cker merged!
606895396,437,devshgraphicsprogramming,2020-03-31T21:49:31Z,can you merge my `image_manipulator` branch into this?
606896427,437,devshgraphicsprogramming,2020-03-31T21:52:03Z,"Did you merge rebase or something like that??

I'm seeing 209 modified files!?"
607807416,437,devshgraphicsprogramming,2020-04-02T12:11:00Z,"not merging this with so many modified files, branch again, and hand-copy the changes"
496294794,301,devshgraphicsprogramming,2019-05-27T19:54:15Z,"> 
> 
> I know,
> TODO here:
> 
>     * hardcore warp size to 32 and get rid of `IVideoCapabilityReporter` dependency
> 
>     * move `CGLSLScanBuiltinIncludeLoader` to `asset` ns
> 
>     * bring back in-source include guards

should we have a `glsl` namespace for this?

After all this is crap that will never get serialized to a .baw file, and `asset` doesn't really need this glsl include processing, glsl preprocessor, nor a compiler... only SPIR-V reflection/introspection

And if SPIR-V reflection => you need GLSL compiler as well (shaderc) then `asset` could depend on `core`, `io` (future `system`) and `glsl`"
496303716,301,devshgraphicsprogramming,2019-05-27T20:52:27Z,"> 
> 
> not a good idea (discontinuity).
> 
> I'd fit a quadratic surface to a 3x3 sample neighbourhood of control points, and get the derivative analytically at the central point.
> 
> Example in 1D.
> 
> ```c++
> float samples[3] = ...;
> // x=-1 => a-b+c = samples[0]
> // x= 0 => c = samples[1]
> // x=+1 => a+b+c = samples[2]
> // a = (samples[0]+samples[2])*0.5-samples[1]
> // b = (samples[2]-samples[0])*0.5
> // dy/dx = 2ax+b
> // dy/dx(0) = b
> float dydx = (samples[2]-samples[0])*0.5;
> ```


btw equation for 2D biquadratic is
```cpp
vec2 gradient = vec2(texelFetchOffset(tex,current,ivec2(1,0)).r-texelFetchOffset(tex,current,ivec2(-1,0)).r,texelFetchOffset(tex,current,ivec2(0,1)).r-texelFetchOffset(tex,current,ivec2(0,-1)).r)*0.5;
```

which is actually identical to an average of the gradient of 4 bilinear surfaces around a pixel"
497109541,301,Crisspl,2019-05-29T21:07:34Z,">btw equation for 2D biquadratic is
>```
>vec2 gradient = vec2(texelFetchOffset(tex,current,ivec2(1,0)).r->texelFetchOffset(tex,current,ivec2(-1,0)).r,texelFetchOffset(tex,current,ivec2(0,1)).r->texelFetchOffset(tex,current,ivec2(0,-1)).r)*0.5;
>```



and it's sufficient for continuity?"
497120388,301,devshgraphicsprogramming,2019-05-29T21:44:38Z,"> and it's sufficient for continuity?

should be ok for generating derivative maps of the same resolution as the height map"
497441305,301,devshgraphicsprogramming,2019-05-30T18:46:33Z,Can you post a screenie of the derivative mapping?
497448374,301,Crisspl,2019-05-30T19:08:02Z,"![d](https://user-images.githubusercontent.com/16739017/58657597-ea9e2100-831e-11e9-9c79-4e5e4a8f277c.png)
"
497501250,301,devshgraphicsprogramming,2019-05-30T21:59:56Z,"Nice screenshots, the derivative map needs some mip-mapping XD

You should do a reduction in shared memory, you can recast the 18*18 smem buffer as a 16*16
With 16x16 WG size you can compute extra 4 mip levels from the base 

Then you can make a multi-pass solution that reduces 4 mips at a time:
Initial Run: 0 (already made by creating the map), 1, 2, 3, 4
Iteration 1: 5,6,7,8
Iteration 2: 9,10,11,12
...etc...

Don't try to be clever with Z-order curves and nice reductions as the functions will probably need to be updated at a certain point to use a nice kernel and modulate roughness maps when implementing Toksvig AA in the future.

But do add the `derivativeMapComputeMipMap` functions to a built-in header.
(disclaimer: there's probably no way to pass shared memory to a function, so requiring the user to define a macro might be in order)"
497504662,301,Crisspl,2019-05-30T22:13:32Z,"Currently `regenerateMipMapLevels()` is called after running derivative map gen CS. (but screenshot is done with bilinear filtering on derivative map sampler)
Do you know if there's a way to bind more than one mip level to one `image2D`?

edit:
>glBindImageTexture binds a single level of a texture to an image unit

i think not.."
497509704,301,devshgraphicsprogramming,2019-05-30T22:35:21Z,"> i think not..

Irrlicht has the downside of only using the multi-bind for storage images, see FAQ point for 18
https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_multi_bind.txt

But yes, you can only attach a single mip-map you'd need 5 image bind points

BTW: don't use texture sampler as input for subsequent mip-map calculation passes, because you'll need 2 memory barrier bits instead of just one (GL_SHADER_IMAGE_ACCESS_BARRIER_BIT). OBviously you'd need all the barrier bits after the very last mipmap."
497969168,301,devshgraphicsprogramming,2019-06-01T18:53:13Z,"I changed the branch that this will get merged into.

Also if you want there's a new sponza with bump maps (instead of normal maps) all packed nicely in a zip
https://github.com/buildaworldnet/IrrlichtBAW/commit/1b9b426022f8c1a97f2d175a9428ea0f6ec93347"
635886138,483,devshgraphicsprogramming,2020-05-29T09:57:08Z,I want to get this merged soon.
655763552,483,devshgraphicsprogramming,2020-07-08T21:19:39Z,closing temporarily.... reopen when ready for merge
517946621,340,devshgraphicsprogramming,2019-08-03T18:51:57Z,"Remember about this ""Respect and use IAssetLoaderOverride during the loading process (v. important)""

I'm gonna be really anal about that."
522160478,340,devshgraphicsprogramming,2019-08-16T21:42:03Z,"@Przemog1 You have an astronomical amount of duplicate code, use templates, CRTP or inhertance."
522377227,340,Przemog1,2019-08-19T01:08:07Z,">@Przemog1 You have an astronomical amount of duplicate code,

yeah, I had to redo a lot of things because of it"
546510688,390,devshgraphicsprogramming,2019-10-25T20:56:34Z,Will review tomorrow
546522010,390,devshgraphicsprogramming,2019-10-25T21:37:56Z,"> It seems like there is a *.layout entry in the .gitignore file which prevents the XML layout (which also has the extension .layout) from being tracked.

this is a remnant of a time before cmake, we used to have codeblocks project files in the repo. Now we can allow `.layout` to be tracked."
546583692,390,achalpandeyy,2019-10-26T08:45:10Z,"Thanks for the review.

Do you have a specific GUI in mind?"
546585080,390,devshgraphicsprogramming,2019-10-26T09:04:02Z,"> Do you have a specific GUI in mind?

512x512 window.
Drop down list of BSDFs to use:
- Diffuse
- Custom (Load File)

Diffuse BSDF and sample function shouldn't be too hard for you to put together.
When ""Custom"" gets chosen, then file open dialog pops up asking for a `.glsl` file"
546586194,390,achalpandeyy,2019-10-26T09:20:56Z,"How about instead of a drop down let's just default to Diffuse BSDF, then whenever the user presses the `Load Function Definitions` button they'll be prompted to open a `.glsl` file?

If going back to Diffuse BSDF is important we can add a `Reset` button as well.

I feel like a drop down will introduce unnecessary complexity."
546587712,390,devshgraphicsprogramming,2019-10-26T09:43:30Z,"> I feel like a drop down will introduce unnecessary complexity.

Fine."
546610856,390,achalpandeyy,2019-10-26T15:05:53Z,"Function signatures in the Fragment Shader maybe wrong, it is just to build without errors. They'll be updated accordingly.

Next is the reset button."
546620838,390,devshgraphicsprogramming,2019-10-26T16:59:01Z,I need to spec out the signatures of the functions for the bsdf for you
546898419,390,achalpandeyy,2019-10-28T11:08:29Z,Are the function signatures finalized?
546902422,390,devshgraphicsprogramming,2019-10-28T11:20:43Z,On it
546976779,390,devshgraphicsprogramming,2019-10-28T14:39:29Z,Ok @achalpandeyy I stopped editing around the BSDF struct definitions
546983454,390,achalpandeyy,2019-10-28T14:52:54Z,"The user is going to fill in the struct details in the loaded function definitions, right?
So that means, things like `VdotL`, `NdotL` etc are not necessary, because different BSDFs will have different formulae and they might not require `VdotL` (for example) specifically for their evaluation. "
546984386,390,achalpandeyy,2019-10-28T14:54:49Z,There is no `BSDFSample` struct anymore !
546985077,390,devshgraphicsprogramming,2019-10-28T14:56:10Z,"> The user is going to fill in the struct details in the loaded function definitions, right?

No, but I'm making those functions for you.

>There is no BSDFSample struct anymore !

Its there
```glsl
// do not use this struct in SSBO or UBO, its wasteful on memory
struct BSDFSample
{
   DirAndDifferential L;  // incoming direction, normalized
   float probability; // for a single sample (don't care about number drawn)
};
```

> So that means, things like VdotL, NdotL etc are not necessary, because different BSDFs will have different formulae and they might not require VdotL (for example) specifically for their evaluation.

Then the compiler will optimize them away ;)"
546986412,390,achalpandeyy,2019-10-28T14:58:39Z,"> No, but I'm making those functions for you.

So, they are not meant to be included in the fragment shader source code?
I mean the structs."
546986704,390,devshgraphicsprogramming,2019-10-28T14:59:16Z,"> So, they are not meant to be included in the fragment shader source code?

Not the user's code, you will prepend all that."
546987398,390,achalpandeyy,2019-10-28T15:00:44Z,"Right.
So, the user is expected to write function definitions in terms of these structs?"
546987550,390,devshgraphicsprogramming,2019-10-28T15:01:02Z,Yep.
547018162,390,devshgraphicsprogramming,2019-10-28T16:03:50Z,"@achalpandeyy getter functions 
https://github.com/buildaworldnet/IrrlichtBAW/issues/384#issuecomment-546903906

You can either:

### A
Map each pixel in a cubemap to an incoming (light) direction.
Then produce a number of different cubemaps (cubemap array) for varying outgoing (view) direction.

### B
Assign one axis of a 2D image to the angle between the view and normal (`NdotV`) the other to the light and normal (`NdotL`).
Then produce a number of different textures (2D texture array) for varying `VdotL` values.

I believe Disney calls it BRDF slices, (you'd just have to extend the axes from [0,1] to [-1,1] for the NdotB and NdotL)

For anisotropic BSDF you can map your texture array layers to varying `VdotL` AND `TdotV`.
It will take you a bit of trigonometry to derive `TdotL` from the 4 other angles.

### Notes

If you have anisotropic BSDF then you need to come up with a way to turn a [0,array_count] sequence into different samples of 2D values."
547031282,390,devshgraphicsprogramming,2019-10-28T16:31:37Z,"The official BSDF signatures are now here
https://github.com/buildaworldnet/IrrlichtBAW/issues/384"
547542539,390,achalpandeyy,2019-10-29T17:35:09Z,"Unfortunately, I ran out of time to work on this. I will not be able to make any significant progress for at least a month. If its urgent, please feel free to take it from here."
547799051,390,devshgraphicsprogramming,2019-10-30T08:55:31Z,"> Unfortunately, I ran out of time to work on this. I will not be able to make any significant progress for at least a month. If its urgent, please feel free to take it from here.

No problem."
557316397,390,devshgraphicsprogramming,2019-11-21T23:19:54Z,"You should move this work onto the `shader_pipeline` branch from my repository, since you're like 10-15% done, it would make sense to use the new API."
438265237,172,manhnt9,2018-11-13T13:27:47Z,"RenderDoc v0.92 capture file.
Vertex input is currently empty.

[capture.zip](https://github.com/buildaworldnet/IrrlichtBAW/files/2576396/capture.zip)
"
438291286,172,manhnt9,2018-11-13T14:46:14Z,"Debug build crashes. Release build runs but vertex data is not uploaded.

Irrlicht Engine version 1.8.3-baw
Linux 4.15.0-38-generic #41-Ubuntu SMP Wed Oct 10 10:59:38 UTC 2018 x86_64
Creating X window...
Using renderer: OpenGL 4.5.0
GeForce GTX 1050 Ti/PCIe/SSE2: NVIDIA Corporation
GLSL version: 45.0
`=================================================================
==27492==`
ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffffffdc78 at pc 0x5555555af76c bp 0x7fffffffd520 sp 0x7fffffffd510
READ of size 8 at 0x7fffffffdc78 thread T0
    #0 0x5555555af76b in unsigned int irr::video::StreamingTransientDataBufferST<unsigned int, irr::core::aligned_allocator<unsigned char, 16ul> >::multi_place<>(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, unsigned int, void const* const*, unsigned int*, unsigned int const*, unsigned int const*) (/home/manh/IrrlichtBAW/examples_tests/33.Draw3DLine/bin/Draw3DLine+0x5b76b)
    #1 0x5555555aeff8 in unsigned int irr::video::StreamingTransientDataBufferST<unsigned int, irr::core::aligned_allocator<unsigned char, 16ul> >::multi_place<unsigned int*>(unsigned int, void const* const*, unsigned int*, unsigned int const*, unsigned int*&&) (/home/manh/IrrlichtBAW/examples_tests/33.Draw3DLine/bin/Draw3DLine+0x5aff8)
    #2 0x5555555ae85a in unsigned int irr::video::StreamingTransientDataBufferMT<unsigned int, irr::core::aligned_allocator<unsigned char, 16ul>, std::mutex>::multi_place<unsigned int, void const* const*, unsigned int*, unsigned int*, unsigned int*>(unsigned int&&, void const* const*&&, unsigned int*&&, unsigned int*&&, unsigned int*&&) (/home/manh/IrrlichtBAW/examples_tests/33.Draw3DLine/bin/Draw3DLine+0x5a85a)
    #3 0x5555555aa026 in irr::ext::draw::CDraw3DLine::draw(float, float, float, float, float, float, float, float, float, float) /home/manh/IrrlichtBAW/ext/Draw/CDraw3DLine.cpp:51
    #4 0x5555555bc2f5 in main /home/manh/IrrlichtBAW/examples_tests/33.Draw3DLine/main.cpp:49
    #5 0x7ffff4e72b96 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b96)
    #6 0x5555555a8a09 in _start (/home/manh/IrrlichtBAW/examples_tests/33.Draw3DLine/bin/Draw3DLine+0x54a09)

Address 0x7fffffffdc78 is located in stack of thread T0 at offset 1256 in frame
    #0 0x5555555a9797 in irr::ext::draw::CDraw3DLine::draw(float, float, float, float, float, float, float, float, float, float) /home/manh/IrrlichtBAW/ext/Draw/CDraw3DLine.cpp:42

  This frame has 23 object(s):
    [32, 33) '<unknown>'
    [96, 100) '<unknown>'
    [160, 164) '<unknown>'
    [224, 228) '<unknown>'
    [288, 292) '<unknown>'
    [352, 356) '<unknown>'
    [416, 424) '<unknown>'
    [480, 488) '<unknown>'
    [544, 552) '<unknown>'
    [608, 616) '<unknown>'
    [672, 680) '<unknown>'
    [736, 744) '<unknown>'
    [800, 808) '<unknown>'
    [864, 872) '<unknown>'
    [928, 936) '<unknown>'
    [992, 1000) '<unknown>'
    [1056, 1064) '<unknown>'
    [1120, 1128) '<unknown>'
    [1184, 1216) '<unknown>'
    [1248, 1256) 'lineData' <== Memory access at offset 1256 overflows this variable
    [1312, 1336) '<unknown>'
    [1376, 1424) '<unknown>'
    [1472, 1528) 'vertices'
HINT: this may be a false positive if your program uses some custom stack unwind mechanism or swapcontext
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/manh/IrrlichtBAW/examples_tests/33.Draw3DLine/bin/Draw3DLine+0x5b76b) in unsigned int irr::video::StreamingTransientDataBufferST<unsigned int, irr::core::aligned_allocator<unsigned char, 16ul> >::multi_place<>(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, unsigned int, void const* const*, unsigned int*, unsigned int const*, unsigned int const*)
Shadow bytes around the buggy address:
  0x10007fff7b30: f2 f2 f2 f2 f2 f2 00 f2 f2 f2 f2 f2 f2 f2 00 f2
  0x10007fff7b40: f2 f2 f2 f2 f2 f2 00 f2 f2 f2 f2 f2 f2 f2 00 f2
  0x10007fff7b50: f2 f2 f2 f2 f2 f2 00 f2 f2 f2 f2 f2 f2 f2 00 f2
  0x10007fff7b60: f2 f2 f2 f2 f2 f2 00 f2 f2 f2 f2 f2 f2 f2 00 f2
  0x10007fff7b70: f2 f2 f2 f2 f2 f2 00 f2 f2 f2 f2 f2 f2 f2 00 f2
=>0x10007fff7b80: f2 f2 f2 f2 f2 f2 00 00 00 00 f2 f2 f2 f2 00[f2]
  0x10007fff7b90: f2 f2 f2 f2 f2 f2 00 00 00 f2 f2 f2 f2 f2 00 00
  0x10007fff7ba0: 00 00 00 00 f2 f2 f2 f2 f2 f2 00 00 00 00 00 00
  0x10007fff7bb0: 00 f2 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7bc0: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
  0x10007fff7bd0: 01 f2 f2 f2 f2 f2 f2 f2 f8 f2 f2 f2 f2 f2 f2 f2
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==27492==ABORTING
[1] + Done                       /usr/bin/gdb --interpreter=mi --tty=${DbgTerm} 0</tmp/Microsoft-MIEngine-In-gq9r71b3.bwm 1>/tmp/Microsoft-MIEngine-Out-05hcx3eq.3i6"
438302874,172,devshgraphicsprogramming,2018-11-13T15:17:41Z,You were doing a double free and a double alloc with no parameters
438336961,172,devshgraphicsprogramming,2018-11-13T16:28:37Z,"Is this ready for merging?
(i.e. does address sanitizer moan about anything else other than X11 )"
438346581,172,manhnt9,2018-11-13T16:53:15Z,"One comment on namespace left: https://github.com/buildaworldnet/IrrlichtBAW/pull/172#pullrequestreview-174336807

Tomorrow I'll check in debug build and confirm."
438527361,172,manhnt9,2018-11-14T03:46:13Z,"Quit message received.
Draw3DLine: ../../include/irr/core/alloc/GeneralpurposeAddressAllocator.h:400: void irr::core::GeneralpurposeAddressAllocator<_size_type, AllocStrategy>::free_addr(irr::core::GeneralpurposeAddressAllocator<_size_type, AllocStrategy>::size_type, irr::core::GeneralpurposeAddressAllocator<_size_type, AllocStrategy>::size_type) [with _size_type = unsigned int; AllocStrategy = irr::core::impl::GeneralpurposeAddressAllocatorStrategy<unsigned int, false>; irr::core::GeneralpurposeAddressAllocator<_size_type, AllocStrategy>::size_type = unsigned int]: Assertion `bytes+freeSize<=AllocStrategy::bufferSize' failed.
"
438527674,172,manhnt9,2018-11-14T03:48:25Z,"About the performance, will this be more helpful?
- Enqueue lines in a core::vector
- Draw all lines at once and clear
So users can add lines to a buffer and issue only one draw call at some point."
438529714,172,manhnt9,2018-11-14T04:02:38Z,git pull --rebase & push to apply your newest commits re-notify those commits
438576347,172,devshgraphicsprogramming,2018-11-14T08:19:58Z,"> Quit message received.
Draw3DLine: ../../include/irr/core/alloc/GeneralpurposeAddressAllocator.h:400: void irr::core::GeneralpurposeAddressAllocator<_size_type, AllocStrategy>::free_addr(irr::core::GeneralpurposeAddressAllocator<_size_type, AllocStrategy>::size_type, irr::core::GeneralpurposeAddressAllocator<_size_type, AllocStrategy>::size_type) [with _size_type = unsigned int; AllocStrategy = irr::core::impl::GeneralpurposeAddressAllocatorStrategy<unsigned int, false>; irr::core::GeneralpurposeAddressAllocator<_size_type, AllocStrategy>::size_type = unsigned int]: Assertion `bytes+freeSize<=AllocStrategy::bufferSize' failed.

That looks like an issue on my side"
438576973,172,devshgraphicsprogramming,2018-11-14T08:22:15Z,"> About the performance, will this be more helpful?
> 
>     * Enqueue lines in a core::vector
> 
>     * Draw all lines at once and clear
>       So users can add lines to a buffer and issue only one draw call at some point.

I would advocate passing a begin and end iterator to a list of positions for drawing multiple lines, I wouldn't mess around with enqueues etc."
618454857,478,devshgraphicsprogramming,2020-04-23T15:13:28Z,"nuke this file from the repo 
https://github.com/Przemog1/IrrlichtBAW/blob/shader_pipeline/cmake/add_pch.cmake"
618464570,478,devshgraphicsprogramming,2020-04-23T15:28:13Z,I guess then that we don't need all my old `*_pch.h` and `pch.h` headers that I've curated by hand all these years?
618466002,478,devshgraphicsprogramming,2020-04-23T15:30:31Z,"Also get rid of the `IrrlichtServer` target, we haven't linked anything with that in months, and I'm working on making the OpenGL functions be loaded from the .dll/.so at runtime so that we can handle a failure of GPU acceleration nicely in server applications."
623120309,478,devshgraphicsprogramming,2020-05-03T14:40:06Z,"let me know when both PCH and RelWtihDebInfo work on MSVC, then I can merge"
625877799,478,devshgraphicsprogramming,2020-05-08T15:43:13Z,"Ok I guess you're at the stage where you can test this with Clang, MingGW or Linux Clang/GCC"
626562802,478,devshgraphicsprogramming,2020-05-11T08:45:49Z,open this PR against criss' `mitsuba` branch
626966260,478,Przemog1,2020-05-11T21:10:44Z,"I'll clean it up
"
627031427,478,devshgraphicsprogramming,2020-05-12T00:09:46Z,can this get merged into criss' branch instead?
597322956,431,devshgraphicsprogramming,2020-03-10T21:19:04Z,nice stuff but needs an example of usage.
600142922,431,devshgraphicsprogramming,2020-03-17T15:44:43Z,You need to compile this and test it works
601464444,431,devshgraphicsprogramming,2020-03-19T23:36:02Z,Nice stuff
602535765,431,devshgraphicsprogramming,2020-03-23T11:28:37Z,"Ok, now make sure new files are only generated in the binary/build directory (dont want changes in source dir).

You will then need to add the header to the install target (so that it get copied properly) etc.
See how we treat `BuildConfigOptions.h` which is another dynamically generated header.

Take the `src/irr/builtin/shader1.txt` and turn it into `include/irr/builtin/shader1.txt`, this is because that if we don't choose to embed the resources, they will need to be added to the INSTALL target.
Also make the `include` be implicit in the python script.

Finally instead of having `src/irr/builtin/shader1.txt` as the test case (remove it), take some of the already existing C++11 rawstring shaders in builtin loaders (such as MTL or some in IAssetManager.cpp) and move them to their `.glsl/.frag/.vert/.comp` respective files in `irr/builtin/` (have the builtin path be the same as the path for cache insertion - remember the `include` is implicit!)."
602538214,431,devshgraphicsprogramming,2020-03-23T11:34:30Z,"My old example for loading shaders
```cpp
// the default but can be changed at runtime if someone needs for a reason
io::path IFileSystem::relativeIrrlichtInstallDir = ""include"";

// this can be an IFileSystem inline method
template<typename UniqueStringType>
inline core::smart_refctd_ptr<asset::ICPUBuffer> IFileSystem::loadBuiltinData()
{
#ifdef _IRR_EMBED_RESOURCES
  auto found = builtin::get_resource<UniqueStringType>();
  if (found.first && found.second)
    return core::make_smart_refctd_ptr<asset::CCustomAllocatorCPUBuffer<core::null_allocator<uint8_t> > >(found->second,found->first,core::adopt_memory);
  return nullptr;
#endif
  io::IFileRead* file = this->createAndOpenFile((relativeIrrlichtInstallDir+""/""+path).c_str());
  auto retval = core::make_smart_refctd_ptr<asset::ICPUBuffer>(file->getSize(),nullptr);
  file->read(retval->getPointer(),file->getSize());
  file->drop();
  
  return retval;
}
```"
604965823,431,Hazardu,2020-03-27T12:10:51Z,I will create a different branch with just intended changes
621792525,455,devshgraphicsprogramming,2020-04-30T12:08:59Z,"you need to make it so you install everything in the `irr/builtin` directory if EMBED_RESOURCES is false
just like this installs the headers
https://github.com/buildaworldnet/IrrlichtBAW/blob/08c69c2643e09c7457f29437597086582ae8f352/cmake/common.cmake#L188

test it, you should see the builtins copied to somewhere `C:\Program Files` (whereever IrrlichtBaW install prefix is)

but preferably not have them install if we've configured the lib not to embed"
368266622,39,devshgraphicsprogramming,2018-02-24T22:51:30Z,"Ok, so a few remarks:
A) Interestingly enough, supposedly, lzma has roughly the same decompression speed as lz4
B) I suggest hashing of post-encryption and post-compression data, has is there only to check blob was not corrupted by the disk i/o errors"
368269180,39,devshgraphicsprogramming,2018-02-24T23:38:03Z,"If the loading is slow, then maybe we should up the thresholds for compression `blobLz4EncrThresh(4096), blobLzmaEncrThresh(32768)` to something higher?

I also think that compression level parameter and algo should be exposed in writeprops.

Also can you check if the hash function in lz4/xxHash is the same one as in coreutil.h?

Finally I don't think you should worry about getting an upper bound on compression size, as we already threshold to compress stuff larger than 4k and 32k and the max stack we can take without crashing people's programs is 16k.
So it's safe to assume to always allocate on the heap and not worry about doing things on the stack for compressed blobs."
368276867,39,Crisspl,2018-02-25T02:10:55Z,">Also can you check if the hash function in lz4/xxHash is the same one as in coreutil.h?  
  
No, it's something different, not even one-call. A few functions forming some ""hashing pipeline""."
368304067,39,devshgraphicsprogramming,2018-02-25T12:08:06Z,"from what I gathered by reading the source of xxHash is that it can be done in bulk or streamed mode.

Bulk consists of 1 function -- `XXH64 ()`"
368347679,39,Crisspl,2018-02-25T21:44:35Z,"Here comes encryption with a few notes as for now:  
* No MAC checking yet  
* I didn't really have a neat idea about how to do ""no password"" thing, so here's kinda a little monster. Please look closer at this, maybe it is ok...  
* I'll also have to correct that now passwords **must** be 16 characters long. I guess passwords should be able to be any length <=16?
  
About MACs: I had an idea of making another block in our format (before block of offsets for example; it will be 0-size block when no blob is encrypted) and also another few bytes for MAC-count. I'll have to spend a little more time to tell how complicated it will be, but for now I think it'd work fine."
368349438,39,devshgraphicsprogramming,2018-02-25T22:06:16Z,"We should not care about MAC as we don't care if someone is trying to tamper with our data, like whats the worst that can happen? a dick will show up as a model?

Like we dont care about rejecting other content, we only care about that content being protected.

If we really gave a crap about real security then we'd use aes256.

Also I'm fine with requiring 16 char passwords, but if you're not then aesGladman, internally does some well-defined method of generating a passphrase (16byte) from hashing a password, it even has its own international spec number."
368684937,39,devshgraphicsprogramming,2018-02-26T23:12:11Z,Also now the convert2BAW tool will now have to take a password argument :)
369041536,39,devshgraphicsprogramming,2018-02-27T21:59:20Z,Added some comments in the latest push
369378837,39,devshgraphicsprogramming,2018-02-28T20:52:53Z,"Also can we have an option to specify whether to save texture paths relative to the input or output files in the Convert2BAW tool? (by implication also have this option in WriteProps, i.e. if non 0 length relative path exists then save relative to that path instead of the output file)"
364736319,36,devshgraphicsprogramming,2018-02-11T09:18:53Z,"hmm.. I think the reason why you don't see the skinned mesh is because finalize() (in the X loader) calculates the bounding boxes of the bones and the mesh.

But I am unsure of what else finalize() does, so we need to review it to see if it doesn't overwrite the bone hierarchies etc."
365015688,36,Crisspl,2018-02-12T18:26:58Z,"Thanks for the CR :)
Here's part of the docs. Again I'll have very little time for a few following days, but docs will be coming in small batches. There's a few params empty of which I wasn't sure about. I'll ask about them when I gather more unsureness.. :D"
365018804,36,Crisspl,2018-02-12T18:36:04Z,"> since you already have B, the blob type in the template parameter `void* _blob` could be `B* _blob`  
  
But then I'd have to cast to it while calling in the switch what would be kinda problematic. It is doable of course, but worth it?  
"
365043721,36,devshgraphicsprogramming,2018-02-12T19:59:38Z,"Can you merge your pull against my master , because as you start commenting, you will make conflicts"
365055629,36,Crisspl,2018-02-12T20:43:43Z,"Can do.   
Also about *Serializable base class: there's a problem with mesh/skinned-mesh inheritance from VariableSizeBlobSerializable (ISkinnedMesh inherits IMesh), same with mesh buffers."
365240237,36,devshgraphicsprogramming,2018-02-13T11:31:22Z,"> But then I'd have to cast to it while calling in the switch what would be kinda problematic. It is doable of course, but worth it?

Ok, lets keep it the way it is.

> Also about *Serializable base class: there's a problem with mesh/skinned-mesh inheritance from VariableSizeBlobSerializable (ISkinnedMesh inherits IMesh), same with mesh buffers.

Well since you need the object in order to serialize it, there is no need for the serialize method to be static.
Since there is no need for the serialize method to be static, then there is no need for static-polymorphism.
Since there is no need for static-polymorphism, the Serializable class doesn't need to be a template class with a Curiously Recurring... bla bla bla
Hence the Serializable class can be an Abstract Data Type with a single public method, a pure virtual function `serializeToBlob.`
(which yes, I know requires us to override the function in every class inheriting from Serializable).

But it could have a protected utlity template method which does exactly what the current `serializeToBlob` method does right now (have the utility method be a template, not the entire class).
At this point overriding the serializeToBlob function would become just an exact copy-paste."
365292639,36,devshgraphicsprogramming,2018-02-13T15:01:31Z,"> While coding I figured out we don't need getNeededDeps if we have instantiateEmpty. Also we don't need two stacks (in loader) about which we were talking about.

Yes, and now every blob gets loaded once and an empty object is made for every blob in the file, only to delete the objects which do no get referenced by any other one.
A stack of dependencies allows us to read 10 actually needed blobs out of 1000.

Also now the code loads the blob from the file twice (once for instantiateEmptyWithoutDeps and secondly for finalize), I believe?"
365346244,36,Crisspl,2018-02-13T17:45:49Z,"Ok, I didn't even consider posiblity of blob not referenced by any other. Why would there be such? Are you talking about using this as an archive file you mentioned some time?  I'll get it done later !
> Also now the code loads the blob from the file twice (once for instantiateEmptyWithoutDeps and secondly for finalize), I believe?
  
Yes, unfortunately there's the cost of simplicity :/"
365741208,36,Crisspl,2018-02-14T20:52:01Z,"There it is, but I can't go below two loads of blob unless we keep all the needed blobs in memory (that would also mean heap only I think) through the whole process of loading... which is not our goal either."
365894604,36,devshgraphicsprogramming,2018-02-15T11:03:37Z,"Hmm.. obviously reduction of disk IO > reducing memory fragmentation.

So the heap it is.

Certain things can always be loaded and finalized at once, like ICPUBuffers and textures, so heap not necessary (any object that has 0 dependencies).

Other things, yes, i guess the heap it is then.

Obviously lets keep the beautiful createOnStack function, but for heap allocation lets pass the stackPointer to be NULL.


One last thing before I approve the pull request, can we rename `source/Irrlicht/blobsLoading.cpp` to something more conformant to our standards (camelcase, etc.)?"
366468019,36,devshgraphicsprogramming,2018-02-17T20:10:04Z,ok... I shall push my latest stuff and then we merge.
551302598,399,devshgraphicsprogramming,2019-11-07T22:49:47Z,generally speaking most of the encodes need a `core::clamp`
551983051,399,devshgraphicsprogramming,2019-11-08T20:43:57Z,"> 
> 
> > 0.4 is an epsilon for clamping, isn't it good actually?
> 
> i guess it should be like
> 
> ```
> core::clamp(_input[i]+singf64(_input[i])*0.4, -32768.0, 32767.0)
> ```
> 
> where signf64() is some function returning -1.0 or 1.0 depending on sign of input
> 

Actually its the clamp that should have the epsillon, its because lots of NPoT numbers are not exactly representable in IEE754, and floats round down.

Should be on the clamp, because it affects the clamp (make sure that i.e. 2^32-1 doesn't truncate lower)

But you are correct that floats truncate towards zero, so the clamp minimums less than 0.0 should have -0.4 added not 0.4 

> ```
> double signf64(double _x)
> {
>     constexpr double retval[2] { 1.0, -1.0 }; 
>     const uint64_t& x = reinterprest_cast<uint64_t&>(_x);
>     return retval[(x>>63)&1ull];
> }
> ```
> 
> > yeah, but there won't be a symmetry, so shader could get broken if you did it as you have written
> > there would not be a 0.0 in shader, but because of shift there would be arround +/- 1/128
> 
> i think u're talking about normalized formats where indeed AFAIK -128 should map to -1 (example for 8bit snorm), but [s|u]scaled formats are seen in shaders as just ""static_cast(intval)""

Yeah ""SCALED"" formats need a larger minimum in the clamp.
""NORM"" stays as is.

"
554623477,399,AnastaZIuk,2019-11-16T10:10:47Z,"@devshgraphicsprogramming 
> Yeah ""SCALED"" formats need a larger minimum in the clamp.
> ""NORM"" stays as is.

https://github.com/buildaworldnet/IrrlichtBAW/pull/399/files#diff-36027e8ca0aae34f9c02456484835698R41
So NORM shouldn't have an epsilon at minimum? I mean, If there is for instance uint8_t NORM, min = 0, max = 255 + epsilon"
554634852,399,devshgraphicsprogramming,2019-11-16T12:54:50Z,"@AnastaZIuk NORM and SCALED clamp to the same values (because they are stored in the same integers)

The only difference is that the `double` value gets multiplied by the Max Positive Integer Value before the clamp for NORM and there is no mulitplication for SCALED before the clamp"
554768164,399,AnastaZIuk,2019-11-17T17:34:37Z,"I'm done If there is no function @devshgraphicsprogramming mentioned here https://github.com/buildaworldnet/IrrlichtBAW/pull/399#discussion_r347090520 about
"
555236428,399,devshgraphicsprogramming,2019-11-18T22:21:10Z,"does it build?
"
555361839,399,AnastaZIuk,2019-11-19T06:54:35Z,"@devshgraphicsprogramming  section with encode builds, status: to merge"
661902216,515,Hazardu,2020-07-21T14:39:58Z,"Something is wrong with the [shader](https://github.com/Hazardu/IrrlichtBAW/blob/geometryshader/include/irr/builtin/shaders/testGeomShader.geom), when converting to a gpu mesh, the specialized shader was a nullptr, and the console during runtime printed out this errors 
```
????:138: error: 'binding' : not supported for this version or the enabled extensions
????:138: error: '' :  syntax error, unexpected IDENTIFIER, expecting LEFT_BRACE or COMMA or SEMICOLON
```
What is a good extension for highlighting errors glsl in IDE?"
661915869,515,devshgraphicsprogramming,2020-07-21T15:03:21Z,"@Hazardu why did you add `testGeomShader.geom` to builtin !?

Also revert all changes to example 06 and the media folder"
670628328,515,devshgraphicsprogramming,2020-08-07T17:33:42Z,"did you forget to commit some files, such as the geometry shader?"
574636984,412,devshgraphicsprogramming,2020-01-15T12:23:55Z,so GLI does not support TGA?
574729277,412,AnastaZIuk,2020-01-15T16:06:19Z,"> so GLI does not support TGA?

actually it seems to me it does https://github.com/g-truc/gli/blob/master/test/main.cpp#L34
so what is the decision?"
574733443,412,AnastaZIuk,2020-01-15T16:15:23Z,@devshgraphicsprogramming should I get rid of the loader and replace it with gli tga loader?
574796517,412,devshgraphicsprogramming,2020-01-15T18:43:40Z,yes ofc you should as long as you can get the same functionality out of it!
575618865,412,AnastaZIuk,2020-01-17T13:08:36Z,"checked, there is no opportunity to use GLI for loading TGA - TGA Loader will be refactored"
580462524,412,devshgraphicsprogramming,2020-01-30T21:13:30Z,Tell me when done and tested.
581176726,412,AnastaZIuk,2020-02-02T20:59:55Z,"> Tell me when done and tested.

@devshgraphicsprogramming done and tested, but I had to insert some code into some switch cases, it looks awful, so I will do a small clean code refactor tomorrow and then it will be ready to merge"
581580471,412,AnastaZIuk,2020-02-03T19:34:07Z,"@devshgraphicsprogramming convertColor needed patching with default values on texels, but nut sure about alpha. Afaik there are some rules defining how to put default alpha values when inteeger or normalized etc"
581863922,412,devshgraphicsprogramming,2020-02-04T11:25:44Z,"> Afaik there are some rules defining how to put default alpha values when inteeger or normalized etc

Default value is (0,0,0,1) whatever channel is not defined, you take from that default vector."
582035253,412,devshgraphicsprogramming,2020-02-04T17:55:26Z,Are we done?
581043610,416,AnastaZIuk,2020-02-01T16:02:25Z,"@devshgraphicsprogramming so I noticed functions responsible for converting into new one version up should be moved to legacy section. Where directly? because we have a place where there are some namespaces for legacy stuff, but you have written about loader cpp as I remember

"
581393892,416,devshgraphicsprogramming,2020-02-03T12:35:57Z,you want to provide new struct definitions (patch) for `SkinnedMeshBlobV3` and `MeshBlobV3`
581400235,416,devshgraphicsprogramming,2020-02-03T12:54:19Z,"> because we have a place where there are some namespaces for legacy stuff, but you have written about loader cpp as I remember

https://github.com/buildaworldnet/IrrlichtBAW/tree/master/src/irr/asset/bawformat/legacy

This is the resting place for V2 function and struct definitions (that will not be simply typedef'ed/aliased into being V3), you can delete as much as you want (like asset instantiation) as the loader only needs the definitions to convert from V2 to V3."
581400684,416,devshgraphicsprogramming,2020-02-03T12:55:30Z,"You usually only need the V2 struct, and the conversion is done manually."
581400915,416,devshgraphicsprogramming,2020-02-03T12:56:07Z,">so I noticed functions responsible for converting into new one version up should be moved to legacy section

I'd make another .cpp file in https://github.com/buildaworldnet/IrrlichtBAW/tree/master/src/irr/asset/bawformat/legacy

Just for the implementations of the loader's file-convert-up functions"
554073855,401,devshgraphicsprogramming,2019-11-14T20:51:11Z,"@AnastaZIuk an overarching idea for .BAW format patching, we will store the EWPF_MESH_IS_RIGHT_HANDED flag (1 bit) in the MeshBufferBlobV2 (we need to bump the version).

Now if that flag is present in the .baw file's meshbuffer blob, then we know that mesh is right-handed, if its not then its left-handed (like it has been now).

If right-handed flag in blob does not match the right-handed loader parameter flag when loading the asset, then flip position and normal."
554666136,401,AnastaZIuk,2019-11-16T19:19:19Z,"Well, the result loading, writing and loading is https://imgur.com/a/nnyaEgQ
It seems to me that winding order should be changed to solve it, so simply exchange vertex1 with vertex3, but I think it **shouldn't** be applied actually, something went wrong, didn't it?

the code responsible for loading:

```
asset::IAssetLoader::SAssetLoadParams lparams(0, nullptr, irr::asset::IAssetLoader::ECF_CACHE_EVERYTHING, nullptr, irr::asset::IAssetLoader::ELPF_NONE);
auto cpumesh = core::smart_refctd_ptr_static_cast<asset::ICPUMesh>(*am->getAsset(""../../media/extrusionLogo_TEST_fixed.stl"", lparams).getContents().first);
	
asset::CBAWMeshWriter::WriteProperties bawprops;
asset::IAssetWriter::SAssetWriteParams wparams(cpumesh.get(), asset::EWF_COMPRESSED, 0.f, 0, nullptr, &bawprops, irr::asset::IAssetWriter::EWPF_WRITE_RIGHT_HANDED);
am->writeAsset(""extrusionLogo_TEST_fixed.stl"", wparams);

cpumesh = core::smart_refctd_ptr_static_cast<asset::ICPUMesh>(*am->getAsset(""extrusionLogo_TEST_fixed.stl"", lparams).getContents().first);
	
auto setMaterialTypeOnAllMaterials = [](auto* node, auto newMaterialType)
{
	auto* mesh = node->getMesh();
	for (auto i = 0u; i < mesh->getMeshBufferCount(); i++)
	{
		auto& material = mesh->getMeshBuffer(i)->getMaterial();
		material.MaterialType = newMaterialType;
	}
};

if (cpumesh)
     setMaterialTypeOnAllMaterials(smgr->addMeshSceneNode(std::move(driver->getGPUObjectsFromAssets(&cpumesh.get(), (&cpumesh.get())+1)->operator[](0))),newMaterialType);
```

Loaders assume that every resource  is loaded as input in righhanded, but the default is lefthanded, so flipping is supplied if there is no righthanded flag set while loading. I tell the writer that it has to save it as righthanded and loading it should be same as loading at begging, but winding order error occours

**EDIT**
for sure changing vertex1 with vertex3 is _valid_, because CSTLLoader changes it as well due to winding order :D

**@devshgraphicsprogramming it can be merged, I'm done and everything has been tested thoroughly**
"
554909084,401,devshgraphicsprogramming,2019-11-18T08:33:21Z,There's also a PLY writer TODO
555105925,401,AnastaZIuk,2019-11-18T16:52:42Z,"> There's also a PLY writer TODO

@devshgraphicsprogramming done and tested"
555236649,401,devshgraphicsprogramming,2019-11-18T22:21:52Z,"Builds, works and is mergable?"
555354660,401,AnastaZIuk,2019-11-19T06:28:59Z,@devshgraphicsprogramming  status: to merge
480516066,244,devshgraphicsprogramming,2019-04-06T16:09:42Z,"@Crisspl I think you've missed out on aesGladman
https://github.com/BrianGladman/aes

and furthermore does the CMakeLists script automatically update the submodules + pull the latest version of OpenSSL 1.0.2 ?"
480516346,244,Crisspl,2019-04-06T16:12:51Z,"> I think you've missed out on aesGladman

see commit message

> furthermore does the CMakeLists script automatically update the submodules + pull the latest version of OpenSSL 1.0.2 ?

just working on it, should be today"
480519253,244,devshgraphicsprogramming,2019-04-06T16:51:19Z,"> see commit message

I understand.

> just working on it, should be today

Regarding, OpenSSL can you do `#ifdef` to detect version 1.0.2 and make the code work both with 1.0.2 and 1.1.1 ?

The ver 1.0.2 branch should still be our default submodule."
480782229,244,devshgraphicsprogramming,2019-04-08T10:49:41Z,@Crisspl you're getting linker errors on the examples because the static library of OpenSSL is not linked into the project because the build cmake command is not normal (dependency and location of the static library file not picked up automatically).
480783917,244,Crisspl,2019-04-08T10:55:33Z,I'm not that stupid :P They're linked and I checked and the cmake code for this is in source/Irrlicht/CMakeLists
480789414,244,devshgraphicsprogramming,2019-04-08T11:14:50Z,but wouldn't they need to be linked to every example as well?
480790010,244,Crisspl,2019-04-08T11:16:54Z,The `INTERFACE` does that
480792397,244,devshgraphicsprogramming,2019-04-08T11:25:28Z,"hmm, ok I guess I'll shut up now"
480845013,244,devshgraphicsprogramming,2019-04-08T14:03:20Z,"@Crisspl did you add the custom command to cmake that automatically updates the submodules?

P.S. What did you have to change in OpenSSL to make it compile?"
480890527,244,Crisspl,2019-04-08T15:52:47Z,">did you add the custom command to cmake that automatically updates the submodules?

No, and won't until this shit builds.
Actually IMO it's completely useless, but ofc you'll get it if you want

>What did you have to change in OpenSSL to make it compile?

https://github.com/openssl/openssl/blob/OpenSSL_1_0_2-stable/crypto/cversion.c#L96

It gave weird errors since `OPENSSLDIR` was some windows-like path like `D:\....` and so it needed string-quotes. So something like this needed:
```
#ifdef OPENSSLDIR
#define STRINGIFY__XD(s) #s
        return ""OPENSSLDIR: \"""" STRINGIFY__XD(OPENSSLDIR) ""\"""";
#undef STRINGIFY__XD
#else
        return ""OPENSSLDIR: N/A"";
#endif
```"
480894488,244,devshgraphicsprogramming,2019-04-08T16:02:50Z,"Maybe `./configure` with `--openssldir=""NA""` or set `--openssldir` identical to `--prefix`

P.S. Then no need to modify OpenSSL source."
481031152,244,Crisspl,2019-04-08T22:27:11Z,"Actually it needs string-quotes regardless of its value, i don't why it is like that in release version of openssl code"
481038466,244,devshgraphicsprogramming,2019-04-08T23:00:48Z,Maybe submit a pull request to them ;)
481154338,244,Crisspl,2019-04-09T08:27:21Z,"well, its hard to believe that it's not my fault in some way :P"
481170954,244,devshgraphicsprogramming,2019-04-09T09:15:05Z,"> well, its hard to believe that it's not my fault in some way :P

Do it, at least they will tell you what you've done wrong."
481581780,244,devshgraphicsprogramming,2019-04-10T08:00:38Z,"About the git update submodules + git pull OpenSSL

https://stackoverflow.com/questions/15972898/cmake-how-to-run-a-add-custom-command-before-everything-else"
481588355,244,devshgraphicsprogramming,2019-04-10T08:17:42Z,"TODO:
- [ ] Submit a PR to OpenSSL project
- [ ] IrrCompileConfig as CMAKE configured headers
- [ ] GCC Warnings (or at least make it build on Linux again)
- [x] CMake update submodules target
- [x] CMake pull latest OpenSSL 1.0.2 target"
481655851,244,Crisspl,2019-04-10T11:43:00Z,">About the git update submodules + git pull OpenSSL

I think it could/should be done with [execute_process](https://cmake.org/cmake/help/v3.12/command/execute_process.html) (executes before generation of makefiles/projects). It also makes sense since all the submodules must be there before cmake starts looking for their sources."
481658519,244,devshgraphicsprogramming,2019-04-10T11:52:37Z,"ok I might do it then, I'm fixing my master branch to compile on Linux right now"
481663179,244,devshgraphicsprogramming,2019-04-10T12:07:41Z,@Crisspl do you expect this to break on MSVC if I fetch the latest libshaderc ?
481664962,244,Crisspl,2019-04-10T12:13:14Z,"No, actually I think I have latest shaderc locally but not sure now"
481665218,244,devshgraphicsprogramming,2019-04-10T12:13:57Z,"oh ok, because they fixed the `touch` thing on linux
"
481666628,244,Crisspl,2019-04-10T12:18:16Z,"oh, yea, you can just remove the line mentioning issue about this in root cmakelists.txt and that would be all I think. Anyway.. shouldn't break anything even if you'd left it"
481668905,244,devshgraphicsprogramming,2019-04-10T12:25:32Z,"BTW, I got this beauty while configuring
```
CMake Warning (dev) at cmake/add_pch.cmake:63 (GET_DIRECTORY_PROPERTY):
  Policy CMP0059 is not set: Do not treat DEFINITIONS as a built-in directory
  property.  Run ""cmake --help-policy CMP0059"" for policy details.  Use the
  cmake_policy command to set the policy and suppress this warning.
Call Stack (most recent call first):
  source/Irrlicht/CMakeLists.txt:272 (ADD_PRECOMPILED_HEADER)
This warning is for project developers.  Use -Wno-dev to suppress it.

/usr/bin/c++ -DPCHCOMPILE -O3;-DNDEBUG;;-DPNG_THREAD_UNSAFE_OK;-DPNG_NO_MMX_CODE;-DPNG_NO_MNG_FEATURES;-D_7ZIP_ST;-DSPIRV_CROSS_EXCEPTIONS_TO_ASSERTIONS;-DIRRLICHT_FAST_MATH -x c++-header -o {_output} REPOSITORY_ROOT/source/Irrlicht/pch.h
CMake Warning (dev) at cmake/add_pch.cmake:63 (GET_DIRECTORY_PROPERTY):
  Policy CMP0059 is not set: Do not treat DEFINITIONS as a built-in directory
  property.  Run ""cmake --help-policy CMP0059"" for policy details.  Use the
  cmake_policy command to set the policy and suppress this warning.
Call Stack (most recent call first):
  source/Irrlicht/CMakeLists.txt:306 (ADD_PRECOMPILED_HEADER)
This warning is for project developers.  Use -Wno-dev to suppress it.

/usr/bin/c++ -DPCHCOMPILE -O3;-DNDEBUG;;-DPNG_THREAD_UNSAFE_OK;-DPNG_NO_MMX_CODE;-DPNG_NO_MNG_FEATURES;-D_7ZIP_ST;-DSPIRV_CROSS_EXCEPTIONS_TO_ASSERTIONS;-DIRRLICHT_FAST_MATH -x c++-header -o {_output} REPOSITORY_ROOT/source/Irrlicht/pch.h
```

obvs, `REPOSITORY_ROOT` is my full filesystme path"
481898810,244,Crisspl,2019-04-10T22:59:59Z,"Just a rename DEFINITIONS->COMPILE_DEFINITIONS is needed. Apparently the pch script is a little old
https://cmake.org/cmake/help/v3.3/prop_dir/DEFINITIONS.html
https://cmake.org/cmake/help/v3.3/prop_dir/COMPILE_DEFINITIONS.html"
482027160,244,devshgraphicsprogramming,2019-04-11T08:50:01Z,"awesome, then accept my pull request and do it ;)

Also my PCH on Linux can't find headers (errors out at `#include ""aabbox3d.h""` when building the PCH) so Linux doesn't build"
636839100,499,devshgraphicsprogramming,2020-06-01T12:42:44Z,"Paste input and output results here, I need to see how this denoises"
637098547,499,AnastaZIuk,2020-06-01T20:59:11Z,"all the inputs:
https://megawrzuta.pl/download/b95513a6faa66ca6f3b5560d6802c4ed.html
and outputs:
https://megawrzuta.pl/download/40e7dc861193f89d59a71e46910f4bb9.html

"
638229611,499,AnastaZIuk,2020-06-03T14:19:37Z,"done, to merge"
673685287,524,devshgraphicsprogramming,2020-08-13T20:08:26Z,"Fixed GGX for you
https://github.com/buildaworldnet/IrrlichtBAW/commit/353afa7e0fb04c7770af8f43e4b2fa1b9232c229

Now do beckmann"
719623518,552,Hazardu,2020-10-30T15:32:51Z,"PR put on hiatus, after OptiX fixes their bugs tiled download will be added"
719981181,552,devshgraphicsprogramming,2020-10-31T20:02:37Z,@Hazardu post the link to the NVidia forum bugreport you made
719983816,552,Hazardu,2020-10-31T20:22:58Z,https://forums.developer.nvidia.com/t/optix-7-2-tiled-denoiser-errors-in-output/158274
361208591,14,devshgraphicsprogramming,2018-01-29T10:50:41Z,"Overall great, but why pack SMaterial?

I can understand SMaterialLayer as the interface is already finalized."
361209837,14,devshgraphicsprogramming,2018-01-29T10:55:36Z,"Another question, why do we create separate types for:
irr::core::Blob::E_BLOB_TYPE::EBT_ATTR_BUFFER, 
irr::core::Blob::E_BLOB_TYPE::EBT_IDX_BUFFER
????

a data buffer is a data buffer, and it should remain so without any type distinctions"
361212901,14,Crisspl,2018-01-29T11:08:16Z,"(Also STextureSamplingParams got packed). To be able to just copy object data without worrying about alignment on various compilers (mesh exported by compilation on compiler A could be not importable on compiler B compilation). Am I missing something or it''s just worthless? 

Separate blob types for index and attribute buffer - I just thought it would be useful to know what kind of buffer is it, but don't really know why yet. As for now I don't have any good reason. Remove this (leave only EBT_ATTR_BUFFER)?"
361220332,14,devshgraphicsprogramming,2018-01-29T11:41:23Z,"Ok we can try with packing (but I thought that padding and packing is specified par the C++ standard), but I need to do a code review if it won't fuck something up in BaW :)

As for EBT_ATTR_BUFFER, I'd have it as EBT_RAW_DATA_BUFFER"
361227188,14,Crisspl,2018-01-29T12:13:03Z,">but I thought that padding and packing is specified par the C++ standard
  
From what I know, padding is not standardized"
361228805,14,devshgraphicsprogramming,2018-01-29T12:19:52Z,"sorry I confused OpenGL GLSL packing (std430, etc.)

in that case we need some static_asserts to check the offset alignment of any SSE3 based members and force packing+16byte alignment on SMaterial"
361261363,14,devshgraphicsprogramming,2018-01-29T14:26:28Z,"On another note, maybe we should change  
+		enum E_BLOB_COMPRESSION_TYPE
+		{
+			EBCT_NONE = 0,
+			EBCT_LZ4,
+			EBCT_LZMA,
+			EBCT_COUNT
+		};
To
+		enum E_BLOB_CODING_TYPE
+		{
+			EBCT_RAW = 0,
+			EBCT_AES128_GCM,
+			EBCT_LZ4,
+			EBCT_LZ4_AES128_GCM,
+			EBCT_LZMA,
+			EBCT_LZMA_AES128_GCM,
+			EBCT_COUNT
+		};

For added possibility of password protection in the future.

Then obviously the bitfield ""uint64_t compressionType : 2;"" would have to be expanded to 3"
361325597,14,devshgraphicsprogramming,2018-01-29T17:42:40Z,"Another note... its not good to have private members holding data of the file to be written:
core::array<core::BlobHeader> m_headers;
core::array<uint32_t> m_offsets;

This will hamper multi-threading our asset loading, as having two or more concurrent writeMesh(...) calls will use the same private members.

Instead I'd make a CBAWMeshWriter::SSaveContext class (with no default ctors) to hold these.

P.S. Suggestion, make uint32_t genHeaders(ICPUMesh * _mesh); a template function, and add /*genAllHeaders(const std::vector<IReferenceCounted*> assetsToSave);*/ , as afterall we will use this to save more than one mesh at once and more assets than just meshes.

P.P.S. On top of that I would make the ""std::set<const core::ICPUBuffer*> countedBuffers;"" context wide!"
361342488,14,devshgraphicsprogramming,2018-01-29T18:37:05Z,"Final Note... for a IMeshBuffer to display its necessary for it to have a FormatDescriptor set.

So in genHeaders you can just do:
    if (!meshBuffer || !desc)
        continue;

Also one IMeshDataFormatDesc can be reused by multiple meshes (trust me they not only can but are in BaW) and if you're really mental you can attach a IMeshBuffer twice or more times to an IMesh.

Hence instead of an ""std::set<const core::ICPUBuffer*>"", I'd use an ""std::set<const IReferenceCounted*>"" and just keep track of EVERYTHING that way. 

Afterall a pointer is a pointer, and you will get no collisions!"
361350792,14,Crisspl,2018-01-29T19:03:50Z,"Ok, quick fix, thanks! About multithreading thing and others I will talk to you later"
375916890,49,devshgraphicsprogramming,2018-03-24T19:03:13Z,Since we're porting to C++11 then it would be useful to implement FW_GetTimestampNs() with std::chrono 
375920033,49,devshgraphicsprogramming,2018-03-24T19:50:02Z,"You've taken out SwitchToThread() / pthread_yield() from my busywait loops, need yield back.

Although you could add a for (uint32_t i=0; (!predicate)&&i<kBusySpinsBeforeYield; i++) loop of kBusySpinsBeforeYield (preferrably 1000) iterations without a yield before the while with a yield"
408365446,49,devshgraphicsprogramming,2018-07-27T09:29:08Z,"If we can merge the latest `master` into this pull request branch, fix the outstanding issues, then we could merge this pull request.

Then we could switch back and forth between legacy and c++11 implementation."
485897397,265,devshgraphicsprogramming,2019-04-23T17:24:08Z,mention #155 
485985193,265,devshgraphicsprogramming,2019-04-23T21:39:58Z,"@Crisspl nice, but we need to review that everything that needs to be configurable/installable, is so.

My worry is that some of the `-D` defines might trip up projects using irrBaW
https://github.com/buildaworldnet/IrrlichtBAW/blob/facc5d9225baba6d0056f6a60be7912e8a7ade53/CMakeLists.txt#L96"
486627449,265,devshgraphicsprogramming,2019-04-25T11:04:20Z,@Crisspl you need to merge my master PR into your master as well as cherrypick a few commits from my sRGB branch (@manhnt9's Linux fixes)
486797560,265,devshgraphicsprogramming,2019-04-25T18:59:02Z,@Crisspl anything else we need to do?
486800032,265,Crisspl,2019-04-25T19:06:17Z,">anything else we need to do?

if i remember correctly, you wanted to have `_IRR_SERVER` and `_IRR_DEBUG` as ""installables"". And i don't really know how to do this especially in multi-config IDEs. "
486818880,265,devshgraphicsprogramming,2019-04-25T20:05:57Z,does `_IRR_SERVER` influence anything on the outside?
486833780,265,devshgraphicsprogramming,2019-04-25T20:52:49Z,"@Crisspl did you add the `$(OutDir)` MSVC debug working directory CMAKE option to the make_example cmake macro/function?
https://cmake.org/cmake/help/v3.8/prop_tgt/VS_DEBUGGER_WORKING_DIRECTORY.html"
486848556,265,devshgraphicsprogramming,2019-04-25T21:42:53Z,"> if i remember correctly, you wanted to have _IRR_SERVER and _IRR_DEBUG as ""installables"". And i don't really know how to do this especially in multi-config IDEs.

I think we covered `_IRR_SERVER` in our private chat.

for different Configurations (Release vs. Debug) we obviously install to different paths/with different names.

So to refresh, recap and adjust:

Out default `CMAKE_INSTALL_PREFIX = ./install/$Platform` (double check this)

**NEW: Always add `/debug` to CMAKE_INSTALL_PREFIX if the build type is Debug**

With usual default of `/usr/local` this would evaluate to
`./install/$Platform`
and
`./install/$Platform/debug`
respectively.

Then we install as follows:
1. Headers go into `$CMAKE_INSTALL_PREFIX/include`
1. Built Libraries go into `$CMAKE_INSTALL_PREFIX/lib`

For system-wide install, this expands to 

Debug Lib -> /usr/local/debug/lib/
Debug Headers -> /usr/local/debug/include/

Release Lib -> /usr/local/lib/
Release Headers -> /usr/local/include/

I base this off the standard linux install and packaging conventions."
486849283,265,devshgraphicsprogramming,2019-04-25T21:45:38Z,"Is the following done?
https://github.com/buildaworldnet/IrrlichtBAW/issues/155#issuecomment-483610248"
486851080,265,devshgraphicsprogramming,2019-04-25T21:52:10Z,"> > if i remember correctly, you wanted to have _IRR_SERVER and _IRR_DEBUG as ""installables"". And i don't really know how to do this especially in multi-config IDEs.
> 
> I think we covered `_IRR_SERVER` in our private chat.
> 
> for different Configurations (Release vs. Debug) we obviously install to different paths/with different names.
> 
> So to refresh, recap and adjust:
> 
> Out default `CMAKE_INSTALL_PREFIX = ./install/$Platform` (double check this)
> 
> **NEW: Always add `/debug` to CMAKE_INSTALL_PREFIX if the build type is Debug**
> 
> With usual default of `/usr/local` this would evaluate to
> `./install/$Platform`
> and
> `./install/$Platform/debug`
> respectively.
> 
> Then we install as follows:
> 
> 1. Headers go into `$CMAKE_INSTALL_PREFIX/include`
> 2. Built Libraries go into `$CMAKE_INSTALL_PREFIX/lib`
> 
> For system-wide install, this expands to
> 
> Debug Lib -> /usr/local/debug/lib/
> Debug Headers -> /usr/local/debug/include/
> 
> Release Lib -> /usr/local/lib/
> Release Headers -> /usr/local/include/
> 
> I base this off the standard linux install and packaging conventions.

The final thing to think about is how this all will fit in with #91 ?

I personally think nothing changes for shared library builds except for macros for `IRRCALLCONV` and `IRRLICHT_API` in front of function definitions and declaring `IRRLICHT_EXPORTS` in build params.

Installing `_IRR_STATIC_LIB` may seem like a nice idea but the app linking the library needs to link to .a or .so (.lib or .dll) so it could just define `_IRR_STATIC_LIB` when appropriate anyway.

This only creates a new output binary and keeps headers identical."
486851960,265,Crisspl,2019-04-25T21:55:22Z,">Is the following done?

yes

Ok, so `_IRR_DEBUG` goes to config-header file as ""installable"", right? I think I finaly have an idea how to do this to be usable for devs and users"
486852569,265,devshgraphicsprogramming,2019-04-25T21:57:36Z,yes its installable.
486961224,265,devshgraphicsprogramming,2019-04-26T07:44:33Z,"> 
> 
> @Crisspl did you add the `$(OutDir)` MSVC debug working directory CMAKE option to the make_example cmake macro/function?
> https://cmake.org/cmake/help/v3.8/prop_tgt/VS_DEBUGGER_WORKING_DIRECTORY.html

friendly reminder"
596126479,428,devshgraphicsprogramming,2020-03-07T18:50:52Z,"My dear summer child, please call ex 07 something more appropriate"
600848934,428,devshgraphicsprogramming,2020-03-18T20:43:19Z,what the fuck are you doing deleting example 13?
600854703,428,devshgraphicsprogramming,2020-03-18T20:57:35Z,Don't prefix every class with `IrrlichtBaW` just put it in the `irr::ext::CEGUI` namespace
601659073,428,AnastaZIuk,2020-03-20T11:45:36Z,"Fuck this shit, we have to change the tactic"
601708158,428,manhnt9,2020-03-20T13:44:12Z,"Hey, be polite on code review. It's your company's image on the Internet that anybody could see!"
601710939,428,AnastaZIuk,2020-03-20T13:50:26Z,"Forgive me, I have done it all wrong and got angry "
601721348,428,devshgraphicsprogramming,2020-03-20T14:12:33Z,"> Hey, be polite on code review. It's your company's image on the Internet that anybody could see!

Results, meritocracy... not rhetoric ;)

As long as he gets the job done on time and on budget he can use whatever language he pleases.

Also @AnastaZIuk was referring to his own code/attempts, not yours @manhnt9  ;)"
601764936,428,manhnt9,2020-03-20T15:39:14Z,"I'm not referring to anyone's work, really. Just saw 2 f words that I thought which wasn't necessary.
One from you and one from him."
601765291,428,manhnt9,2020-03-20T15:39:53Z,"> what the f are you doing deleting example 13?

 here.
"
601767426,428,manhnt9,2020-03-20T15:44:05Z,I'm just minding for open-source culture on the Internet. You can treat however you like in your company.
601798103,428,devshgraphicsprogramming,2020-03-20T16:40:58Z,"> I'm just minding for open-source culture on the Internet. 

Yeah, its getting pretty annoying with all the ""woke-ness"""
601809488,428,manhnt9,2020-03-20T17:03:01Z,"OK, if those suggestions seems not useful to you then I have my notes here."
702283169,540,devshgraphicsprogramming,2020-10-01T17:24:45Z,Why is this PR opened against the old repo?
704990036,540,Crisspl,2020-10-07T14:51:35Z,Opened against Nabla
593304161,425,devshgraphicsprogramming,2020-03-02T09:23:39Z,"I think some of the built-in vertex shaders are exactly the same, you can cache the same asset under multiple paths."
594000985,425,AnastaZIuk,2020-03-03T15:12:51Z,done
385638535,81,devshgraphicsprogramming,2018-05-01T10:03:37Z,"Great, but the windows target also needs some of the GCC flags or equivalent, like fno-exceptions etc.

Also there should be 4 targets:
OpenGL {Release,Debug} outputs (lib)Irrlicht(.a)
Server {Release,Debug} outputs (lib)IrrlichtServer(.a)
    same as current makefile when invoked with ""make serverlib BAW_SERVER=1 NEW__MESHES_DONE=1""

c.f. with the codeblocks project file (XML) for compile options, defines and linker options under linux


Also what do we invoke CMake with and how do we compile?
What files will CMake generate/overwrite?"
385638857,81,devshgraphicsprogramming,2018-05-01T10:05:42Z,"Also forgot to mention that your CMake file should have a configurable path to the openssl includes and libraries (crypto & ssl) 
In our case we presume to be in ../../../openssl relative to ./source/Irrlicht, but it would be nice to either let it be some other path or system default."
385813180,81,numberZero,2018-05-01T22:49:21Z,"> the windows target also needs some of the GCC flags

MinGW gets the flags already, as CMake recognizes it as GCC. If you mean MSVC, well, I need to check the VC project files then as I don’t remember their flags at all.

> Also there should be 4 targets:
OpenGL {Release,Debug} outputs (lib)Irrlicht(.a)
Server {Release,Debug} outputs (lib)IrrlichtServer(.a)

Will add the Server target. Debug/release is what CMake cares of.

> Also what do we invoke CMake with and how do we compile?

Make an empty directory anywhere, enter it, call `cmake <path-to-the-source>` (that is, to the directory with the main `CMakeLists.txt` file; that should probably be the repository root and not where I put it currently), then `make`. It will build the default configuration. You can supply additional arguments to CMake like `-DCMAKE_BUILD_TYPE=Debug` or `-DFAST_MATH=OFF` to use different configuration. You can also call `cmake-gui` instead of `cmake`, if you have it; it is handy.

> What files will CMake generate/overwrite?

It works only in the folder you created for it, not changing anything outside it.

> Also forgot to mention that your CMake file should have a configurable path to the openssl includes and libraries (crypto & ssl)
In our case we presume to be in ../../../openssl relative to ./source/Irrlicht, but it would be nice to either let it be some other path or system default.

Oh, forgot that, sorry. Will add, that’s just a few lines in CMake."
385813553,81,numberZero,2018-05-01T22:51:25Z,"By the way, where is `MacOSX/CIrrDeviceMacOSX.mm` mentioned in the CodeBlocks project?"
385818472,81,devshgraphicsprogramming,2018-05-01T23:18:46Z,"There is no MacOSX target at all.

Search in COpenGLDriver.h for a nicely named structure which is comment about Apple :)"
385819099,81,devshgraphicsprogramming,2018-05-01T23:22:36Z,">  (that is, to the directory with the main CMakeLists.txt file; that should probably be the repository root and not where I put it currently)

I think its good where it is, the root should have a global CMake that would make examples too (and have test targets)"
386740351,81,numberZero,2018-05-04T21:30:21Z,"@devshgraphicsprogramming `Makefile` misses the following files:
```
CGPUTransientBuffer.cpp
COpenCLHandler.cpp
COpenGL2DTextureArray.cpp
COpenGL2DTexture.cpp
COpenGL3DTexture.cpp
COpenGLCubemapTexture.cpp
COpenGLMultisampleTextureArray.cpp
COpenGLMultisampleTexture.cpp
COpenGLOcclusionQuery.cpp
COpenGLPersistentlyMappedBuffer.cpp
COpenGLQuery.cpp
COpenGLTransformFeedback.cpp
COpenGLVAO.cpp
coreutil.cpp
CTRTextureGouraudAlpha.cpp
CTRTextureGouraudAlphaNoZ.cpp
```
but it *does* include other similar files. Is that intentional?"
387030775,81,devshgraphicsprogramming,2018-05-07T10:59:31Z,"its most probably bad that it misses
`coreutil.cpp
CGPUTransientBuffer.cpp`

but the Makefile only supports a headless server target so no OpenGL or graphics output device of any kind thats why.

What surplus files does it include?"
387123228,81,devshgraphicsprogramming,2018-05-07T16:32:18Z,"Anyhow, far off is this thing from being ready?"
387381546,81,devshgraphicsprogramming,2018-05-08T12:11:13Z,"You're missing the O3 flag, as well as linker flags (some compiler flags need to be repeated as linker flags) such as mfp-math=sse, fuse=gold, etc.

For gdb to work reliably not only does Debug build require -g but also -ggdb3

Again c.f. with codeblocks project (you can see compile and linker flags separately)

And you're missing the essential define NEW__MESHES_DONE, again .c.f. with codeblocks project"
390770579,81,numberZero,2018-05-21T20:21:50Z,"> You're missing the O3 flag, as well as linker flags (some compiler flags need to be repeated as linker flags) such as mfp-math=sse, fuse=gold, etc.

Can’t find any documentation on `mfp-math=sse` as linker flag, although it seems to be used when link-time optimization is in effect (it is disabled by default). On `fuse=gold`, is that mandatory or recommended?

> For gdb to work reliably not only does Debug build require -g but also -ggdb3

That should probably be set as default and not as required value then.

> And you're missing the essential define NEW__MESHES_DONE, again .c.f. with codeblocks project

Can’t find *any* mention of `NEW__MESHES_DONE`, where is it used? I see `NEW_MESHES` only."
390771730,81,numberZero,2018-05-21T20:26:01Z,"> What surplus files does it include?

The makefile includes, among others,

* COpenGLDriver.o
* COpenGLTexture.o
* COpenGLSLMaterialRenderer.o
* COpenGLExtensionHandler.o
* COpenGLFrameBuffer.o
* COpenGLRenderBuffer.o

what looks very strange for a headless target."
390883857,81,devshgraphicsprogramming,2018-05-22T07:00:05Z,"`fuse=gold` is mandatory, its the ""new"" multi-threaded linker in the GCC toolchain.

> That should probably be set as default and not as required value then.

You'd be surprised, unless CMake states that explicitly somewhere I'd bank on ggdb3 not being enabled (I wonder if -g is set correctly too).

> Can’t find any mention of NEW__MESHES_DONE, where is it used? I see NEW_MESHES only.

Granted, but you're still missing NEW_MESHES as a define.


On the topic of extra OpenGL files, lets leave them in for now, `NO_IRR_COMPILE_WITH_OPENGL_` takes care of not compiling in OpenGL.
(I'll open a separate issue to clean that up.


Let me know if the CMake is tested and works."
390986749,81,devshgraphicsprogramming,2018-05-22T13:19:32Z,"Please add the `NEW_MESHES` define to the CMake

If you confirm that the CMake not only builds, but that the result links with an example, then I can merge.

I can merge pull and you can add information to the Wiki
https://github.com/buildaworldnet/IrrlichtBAW/wiki/Building-The-Library"
391866349,81,numberZero,2018-05-24T21:18:52Z,"> For gdb to work reliably not only does Debug build require -g but also -ggdb3

Added it as default for GCC debug builds. Clang doesn’t support that flag AFAIK, and there are other debuggers (LLDB) out there that may better work with other configuration.

> fuse=gold is mandatory

Just realized you ask to add linking flags while linking is not done at all; static libraries (on Linux at least) are just archives consisting of object files.

On `NEW_MESHES`, sorry, forgot to mention it is defined *unconditionally* in `IrrCompileConfig.h`.

> If you confirm that the CMake not only builds, but that the result links with an example, then I can merge.

It does. Of course linking requires some flags like `-lcrypto` as dependencies are not propagated by static libraries (CMake is able to do that job, if only it is used to build the program as well; that’s not the case in this PR), but with these it works fine.

P.S. It appears my old GPU is waaay too old to use IrrlichtBAW. I plan to replace it very soon, but until then, I can only test it with altered GL version check (as Mesa exposes GL 3.3 only). Well, HelloWorld works, at least)"
391871878,81,devshgraphicsprogramming,2018-05-24T21:39:50Z,Go to town on the wiki page ;)
546690854,389,devshgraphicsprogramming,2019-10-27T12:40:38Z,how on earth were you able to merge into my master?
381088829,63,devshgraphicsprogramming,2018-04-13T10:03:36Z,"Great Stuff!!!

But we still need `transformPlane`, `transformBoxEx`, `makeInverse`, `buildRotateFromTo` and `buildAxisAlignedBillboard` as well as the `concatenatePrecisely*` family of functions using doubles in the intermediate representation of matrices

The `transform*` functions can be made members of plane<> and aabbox3d<> as it makes more sense for the matrix to not implement transforms of 50 different geometric primitives (and be aware of them, compile-wise).

Finally since we removed the standard rotation, we should have test which checks parity between matrix4x3::setRotationRadians() and matrix3x4SIMD::setRotation(quaternion::fromEuler())"
381431626,63,devshgraphicsprogramming,2018-04-15T19:28:54Z,"good, but still need to get rid of these redundant TRANSPOSEs and hadd_ps that could be replaced with add_ps (by removing a TRANSPOSE)

Also why aesGladman is now compiled in from C instead of C++ on the windows project ?"
381436143,63,Crisspl,2018-04-15T20:37:50Z,">still need to get rid of these redundant TRANSPOSEs and hadd_ps

Don't undersatnd most of your comments about this. Tomorrow..

>Also why aesGladman is now compiled in from C instead of C++ on the windows project ?

Some unpushed changes apprently.. That's how it has to be (changed about time when we were doing openssl stuff) - i.e. nothing changed now, just project file was unpushed"
552926295,400,devshgraphicsprogramming,2019-11-12T14:51:07Z,@Crisspl are you using an older revision of glew (or one not from @achalpandeyy ) in your branch?
552944302,400,devshgraphicsprogramming,2019-11-12T15:31:02Z,"> 
> 
> this applies to all the `clear` functions
> 
> Seems we need to split `GSB_PIPELINE_AND_RASTER_PARAMETERS` back into two, there's no reason for the shader to be flushed and other stuff just because we're clearing an FBO buffer XD

@Crisspl?
"
554078372,400,devshgraphicsprogramming,2019-11-14T21:03:47Z,@Crisspl looks good.
565823534,406,AnastaZIuk,2019-12-15T16:16:46Z,"If you ever had to allocate raw, don't use `new` operator, but use `_IRR_NEW`/`_IRR_NEW_ARRAY` and 
`_IRR_DELETE`/ `_IRR_DELETE_ARRAY` instead https://github.com/buildaworldnet/IrrlichtBAW/pull/406/commits/5b751316cea43adfd251a41140ba965b65e9bd08#diff-c5034cdfa9e2b85a7956da5e84f1d6bbL316"
565988137,406,devshgraphicsprogramming,2019-12-16T09:56:29Z,"Great job!

Let me know when finished."
569619180,406,devshgraphicsprogramming,2019-12-30T09:00:25Z,How is the status?
686569744,534,devshgraphicsprogramming,2020-09-03T15:27:12Z,Let me know when working/mergable.
478511094,250,devshgraphicsprogramming,2019-04-01T09:45:35Z,TGA and BMP loaders are untouched.
478758944,250,devshgraphicsprogramming,2019-04-01T21:42:57Z,"@Crisspl thanks a lot for the comments, you've saved me a great deal of time
@qbasa12 for the first time in the history of our company the commit log of a branch is so bad it needs to be either rewritten or squashed/rebased because it makes no sense.

COpenGLDriver.cpp is a mess in the diff viewer (https://github.com/buildaworldnet/IrrlichtBAW/pull/250/files ) because most probably the newlines got messed up."
616793815,473,devshgraphicsprogramming,2020-04-20T20:34:39Z,"Prefer `static_cast<T>(var)` to C-style cast `(T)var`, C-style cast will cast anything to anything pretty much !

careful with `decltype(variable)` especially with regards to ints, and similar, because `decltype(var)` on something that was declared as `T var` actually evaluates to `T&` or `const T&` (depending on current scope's access const qualifiers), and you really dont want to be casting constant literals to references (this ties into why you want to use `static_cast` and not C-style cast).

You'd actually need a std::decay for that... ask @Crisspl how to best handle"
617130980,473,AnastaZIuk,2020-04-21T11:48:20Z,"> Prefer `static_cast<T>(var)` to C-style cast `(T)var`, C-style cast will cast anything to anything pretty much !
> 
> careful with `decltype(variable)` especially with regards to ints, and similar, because `decltype(var)` on something that was declared as `T var` actually evaluates to `T&` or `const T&` (depending on current scope's access const qualifiers), and you really dont want to be casting constant literals to references (this ties into why you want to use `static_cast` and not C-style cast).
> 
> You'd actually need a std::decay for that... ask @Crisspl how to best handle

I need to change for `static_cast`, but I find it probably not true (quite) with evaluating to `T&` or `const T&`, since it depends on the way you call decltype"
617133797,473,devshgraphicsprogramming,2020-04-21T11:54:50Z,"> I need to change for static_cast, but I find it probably not true (quite) with evaluating to T& or const T&, since it depends on the way you call decltype

I think `static_cast<decltype()>` should protect us against most things"
617134190,473,AnastaZIuk,2020-04-21T11:55:40Z,"> > I need to change for static_cast, but I find it probably not true (quite) with evaluating to T& or const T&, since it depends on the way you call decltype
> 
> I think `static_cast<decltype()>` should protect us against most things

yeah, it's true"
635886702,473,devshgraphicsprogramming,2020-05-29T09:58:29Z,Update to match the HEAD of `shader_pipeline` fix my comments and I'll merge
655764131,473,devshgraphicsprogramming,2020-07-08T21:20:51Z,closing temporarily.... reopen when ready for merge
598331743,436,devshgraphicsprogramming,2020-03-12T17:46:49Z,`IImageMetadata : public IAssetMetadata`
599225786,436,AnastaZIuk,2020-03-15T15:34:49Z,moving to https://github.com/Crisspl/IrrlichtBAW/pull/30
486512715,271,manhnt9,2019-04-25T04:08:45Z,"Finished, now Linux users can build with `cmake .. -DIRR_PCH=OFF`"
486557720,271,devshgraphicsprogramming,2019-04-25T07:47:03Z,ok but does PCH work on Linux or not?
486560305,271,manhnt9,2019-04-25T07:55:37Z,"The PCH is not working, I disable PCH for now since I don't have firm experience with it."
486562503,271,devshgraphicsprogramming,2019-04-25T08:02:46Z,">The PCH is not working [on Linux], I disable PCH for now since I don't have firm experience with it.

Ok that will be @Crisspl's task."
486627116,271,devshgraphicsprogramming,2019-04-25T11:03:13Z,@manhnt9 come back with another PR for the exception throwing from `replace_invalid` in the utf8 dependency
486725688,271,manhnt9,2019-04-25T15:38:05Z,"Will keep an eye on that, hope the utf lib gets updates soon."
543787179,381,devshgraphicsprogramming,2019-10-18T15:02:55Z,Do multilayered textures and cubemaps then we merge ;)
544468510,381,devshgraphicsprogramming,2019-10-21T11:16:46Z,@achalpandeyy how's work going?
544730332,381,achalpandeyy,2019-10-21T22:13:30Z,"Thanks for the review!
Going great but incredibly busy, hopefully I will be able to make changes by the end of this week"
557317360,381,devshgraphicsprogramming,2019-11-21T23:23:09Z,"Either port this loader to `shader_pipeline` and do a PR from that branch, or let @AnastaZIuk take over."
557798723,381,achalpandeyy,2019-11-23T13:38:33Z,"Sure, @AnastaZIuk can take over."
559724016,381,devshgraphicsprogramming,2019-11-29T09:33:16Z,superseded by #402 
385639054,80,devshgraphicsprogramming,2018-05-01T10:07:00Z,will give it a look real soon :)
387209740,80,devshgraphicsprogramming,2018-05-07T21:18:16Z,"I have a feeling that 
https://github.com/Crisspl/IrrlichtBAW/blob/7c49843ece6f0f9ae170ffc990eee740b4d5027e/include/IMeshManipulator.h#L65
https://github.com/Crisspl/IrrlichtBAW/blob/7c49843ece6f0f9ae170ffc990eee740b4d5027e/include/IMeshManipulator.h#L128
Should disappear.

And also the `makePlanarTextureMapping` family of functions in CMeshManipulator.*"
387214149,80,devshgraphicsprogramming,2018-05-07T21:35:52Z,"After my most recent comments are addressed I have 3 final questions before approving the merge:
1) Are the setAttribute and getAttribute tested for parity (same results) for the attribute types that used to work?? **
2) Is the matrixSIMD3x4 skinning upgrade well tested?
3) Have you tested that the mesh optimizer not only works, but that it actually reduces the mesh memory footprint (i.e. makes .baw files or vertex sizes smaller)???


** We have code like this in BAW
```c++
        size_t totalv=0;
        for (size_t n=0;n<tmpMesh->getMeshBufferCount();n++)
        {
            scene::ICPUMeshBuffer* meshbuffer = tmpMesh->getMeshBuffer(n);
            core::vectorSIMDf outPos(0.f,0.f,0.f,1.f);
            size_t v=0;
            for (; meshbuffer->getAttribute(outPos,meshbuffer->getPositionAttributeIx(),v); v++)
            {
                outPos *= sms->_scale_transformed;
                meshbuffer->setAttribute(outPos,meshbuffer->getPositionAttributeIx(),v);
            }
			totalv += v;
            core::aabbox3df box = meshbuffer->getBoundingBox();
            box.MinEdge *= sms->_scale_transformed;
            box.MaxEdge *= sms->_scale_transformed;
            meshbuffer->setBoundingBox(box);
        }
        core::aabbox3df box = tmpMesh->getBoundingBox();
        box.MinEdge *= sms->_scale_transformed;
        box.MaxEdge *= sms->_scale_transformed;
        tmpMesh->setBoundingBox(box);
```

The position attribute is always ECT_FLOAT with ECPA_THREE or ECPA_FOUR, if it doesn't work we will be unhappy."
387417418,80,Crisspl,2018-05-08T14:16:05Z,"> Is the matrixSIMD3x4 skinning upgrade well tested?
  
Hardware skinning example works fine (but faster :D), so... I think yes.

> Have you tested that the mesh optimizer not only works, but that it actually reduces the mesh memory footprint (i.e. makes .baw files or vertex sizes smaller)???
  
Yes, but usually it's not a lot. Also it's easly ""lookable"" with `-info` option of `convert2baw`.

> Are the setAttribute and getAttribute tested for parity (same results) for the attribute types that used to work??

Actually yes, I did that while debugging some time ago.

Btw, you can have multi-line code in this fine-looking code-block-thing by encapsulating code with triple thing-below-tilde, so it looks like this:
```c++
size_t totalv=0; 
for (size_t n=0;n<tmpMesh->getMeshBufferCount();n++) 
{
   scene::ICPUMeshBuffer* meshbuffer = tmpMesh->getMeshBuffer(n);
   core::vectorSIMDf outPos(0.f,0.f,0.f,1.f);
   size_t v=0;
   for (; meshbuffer->getAttribute(outPos,meshbuffer->getPositionAttributeIx(),v); v++)
   {
      outPos *= sms->_scale_transformed;
      meshbuffer->setAttribute(outPos,meshbuffer->getPositionAttributeIx(),v);
   } 
   totalv += v;
   core::aabbox3df box = meshbuffer->getBoundingBox();
   box.MinEdge *= sms->_scale_transformed;
   box.MaxEdge *= sms->_scale_transformed;
   meshbuffer->setBoundingBox(box); 
}
core::aabbox3df box = tmpMesh->getBoundingBox();
box.MinEdge *= sms->_scale_transformed;
box.MaxEdge *= sms->_scale_transformed;
tmpMesh->setBoundingBox(box);
```"
387461017,80,devshgraphicsprogramming,2018-05-08T16:25:43Z,"can you merge with the latest commit (take care when merging IMeshBuffer.h) 
and then test that example 1,3-19 and 23-24 produce expected results?"
491493920,297,devshgraphicsprogramming,2019-05-11T09:04:48Z,"You can nuke whatever is guarded by an `#ifndef NEW_MESHES` that is to do with normals, tangents, etc."
491653060,297,Przemog1,2019-05-13T02:08:50Z,"Since we have margin of tolerance for vertex position comparison, there may be ""connected"" vertices in different cells, this problem is not resolved yet.
Also hashTableSize and cellSize parameters need to be adjusted."
491659816,297,manhnt9,2019-05-13T02:58:41Z,"A little note: this feature also presents in Assimp library, which we will revive in the future."
492289663,297,devshgraphicsprogramming,2019-05-14T15:33:47Z,"yes but:
1. ASSIMP is an extension not a core feature
2. We need to be able to do this on our own meshes (not in ASSIMP data structures)"
493737226,297,devshgraphicsprogramming,2019-05-19T08:23:40Z,"> 
> 
> I'm pretty sure it is correct.
> 
> > The way as it is now, multiple positions will be getting same hash easily
> 
> Thats the point of it, with this hash function you want to find vertices that reside in the same ""cube""

It is 100% correct, it makes integer voxel coordinates, no bit cast"
495374563,297,devshgraphicsprogramming,2019-05-23T20:33:36Z,"@Florastamine or @manhnt9 could you check out this branch and just see if it builds on Linux?
(I don't need to know whether it works)"
702173612,539,devshgraphicsprogramming,2020-10-01T14:26:53Z,can I merge or do I still need to wait on something?
702174010,539,devshgraphicsprogramming,2020-10-01T14:27:33Z,btw you havent changed the 2 submodule repos to my forks.
704988121,539,Crisspl,2020-10-07T14:48:40Z,Opened against nabla as well
705037750,539,devshgraphicsprogramming,2020-10-07T16:06:03Z,"I'll merge it here, tonight"
705678381,539,Crisspl,2020-10-08T16:20:16Z,"Our contribution got merged into spirv-cross. But we're still using our spirv-cross repo as a submodule, right? Then what should I do? Pull and set it on primary repo's `HEAD`? Obviously `2020-09-17` tag you skaded for before doesnt support subgroups."
705689584,539,Crisspl,2020-10-08T16:39:40Z,"Ran the benchmark: (RTX 2070)
```
Benchmark for case nr. 0
Result 0: 1945.325568ms.
Result 1: 1961.448320ms.
Result 2: 1970.530240ms.
Result 3: 1972.837760ms.
Result 4: 1975.484416ms.
Avg time: 1965.125366

Benchmark for case nr. 1
Result 0: 1970.074048ms.
Result 1: 1973.327872ms.
Result 2: 1980.258304ms.
Result 3: 1981.993216ms.
Result 4: 1984.545184ms.
Avg time: 1978.039673

Benchmark for case nr. 2
Result 0: 2006.147072ms.
Result 1: 2009.796608ms.
Result 2: 2010.246208ms.
Result 3: 2011.929376ms.
Result 4: 2012.337056ms.
Avg time: 2010.091187

Benchmark for case nr. 3
Result 0: 2171.191680ms.
Result 1: 2176.405504ms.
Result 2: 2176.366464ms.
Result 3: 2176.658496ms.
Result 4: 2177.943008ms.
Avg time: 2175.713135

Benchmark for case nr. 4
Result 0: 1998.852192ms.
Result 1: 2001.749440ms.
Result 2: 2003.395200ms.
Result 3: 2003.919648ms.
Result 4: 2004.760576ms.
Avg time: 2002.535400
```"
706064794,539,devshgraphicsprogramming,2020-10-09T09:06:55Z,"> Our contribution got merged into spirv-cross. But we're still using our spirv-cross repo as a submodule, right? Then what should I do? Pull and set it on primary repo's `HEAD`? Obviously `2020-09-17` tag you skaded for before doesnt support subgroups.

we will always use our own fork, we'll add more features to it."
706094407,539,devshgraphicsprogramming,2020-10-09T10:09:54Z,"Nvidia 1050 Mobile
```
Result 0: 3188.719616ms.
Result 1: 3277.758464ms.
Result 2: 2831.123456ms.
Result 3: 3004.645344ms.
Result 4: 2987.333632ms.
Avg time: 3057.916260

Benchmark for case nr. 1
Result 0: 3437.733888ms.
Result 1: 3374.459904ms.
Result 2: 2657.101824ms.
Result 3: 3049.407488ms.
Result 4: 3201.132544ms.
Avg time: 3143.967285

Benchmark for case nr. 2
Result 0: 2906.318848ms.
Result 1: 2935.910400ms.
Result 2: 2532.075520ms.
Result 3: 2534.433792ms.
Result 4: 2530.915328ms.
Avg time: 2687.930664

Benchmark for case nr. 3
Result 0: 2635.242496ms.
Result 1: 2642.153472ms.
Result 2: 2617.835520ms.
Result 3: 2631.688192ms.
Result 4: 2640.667648ms.
Avg time: 2633.517578

Benchmark for case nr. 4
Result 0: 2808.863744ms.
Result 1: 2595.141632ms.
Result 2: 2583.285760ms.
Result 3: 2639.542208ms.
Result 4: 2582.702080ms.
Avg time: 2641.906982
```"
706107883,539,Crisspl,2020-10-09T10:41:00Z,"`COALESCING_DWORDS_LOG2=5`, RTX 2070 (case 4)
```
Benchmark for case nr. 0
Result 0: 1945.659840ms.
Result 1: 1971.484864ms.
Result 2: 1981.332544ms.
Result 3: 2020.957504ms.
Result 4: 2009.023296ms.
Avg time: 1985.691650

Benchmark for case nr. 1
Result 0: 2028.918784ms.
Result 1: 2001.373184ms.
Result 2: 2107.480064ms.
Result 3: 2060.787488ms.
Result 4: 2058.666272ms.
Avg time: 2051.445068

Benchmark for case nr. 2
Result 0: 2069.369216ms.
Result 1: 2071.384064ms.
Result 2: 2073.463840ms.
Result 3: 2075.557632ms.
Result 4: 2077.211008ms.
Avg time: 2073.397217

Benchmark for case nr. 3
Result 0: 2236.676704ms.
Result 1: 2235.980352ms.
Result 2: 2238.579936ms.
Result 3: 2256.968288ms.
Result 4: 2259.242688ms.
Avg time: 2245.489990

Benchmark for case nr. 4
Result 0: 2073.350144ms.
Result 1: 2062.793280ms.
Result 2: 2061.597216ms.
Result 3: 2066.504992ms.
Result 4: 2067.678240ms.
Avg time: 2066.385010
```"
706118411,539,Crisspl,2020-10-09T11:07:12Z,"`COALESING_DWORDS_LOG2=5` and just one `restrict` buffer, RTX 2070 (case 4)
```
Benchmark for case nr. 0
Result 0: 1971.348160ms.
Result 1: 1986.811968ms.
Result 2: 2000.763232ms.
Result 3: 2056.366336ms.
Result 4: 2094.850048ms.
Avg time: 2022.027954

Benchmark for case nr. 1
Result 0: 2171.216416ms.
Result 1: 2178.971520ms.
Result 2: 2187.540608ms.
Result 3: 2182.462400ms.
Result 4: 2164.656160ms.
Avg time: 2176.969482

Benchmark for case nr. 2
Result 0: 2094.723776ms.
Result 1: 2066.329440ms.
Result 2: 2066.724864ms.
Result 3: 2065.878944ms.
Result 4: 2064.435200ms.
Avg time: 2071.618652

Benchmark for case nr. 3
Result 0: 2224.043520ms.
Result 1: 2228.813824ms.
Result 2: 2240.063488ms.
Result 3: 2227.519488ms.
Result 4: 2214.503968ms.
Avg time: 2226.989014

Benchmark for case nr. 4
Result 0: 2053.507392ms.
Result 1: 2063.912960ms.
Result 2: 2123.744768ms.
Result 3: 2061.885440ms.
Result 4: 2050.065984ms.
Avg time: 2070.623535
```"
706134884,539,Hazardu,2020-10-09T11:48:07Z,"GTX 1060 6GB
```
Benchmark for case nr. 0
Result 0: 4046.638080ms.
Result 1: 4047.713280ms.
Result 2: 4059.796480ms.
Result 3: 4154.593216ms.
Result 4: 4055.063552ms.
Avg time: 4072.760986

Benchmark for case nr. 1
Result 0: 4052.248576ms.
Result 1: 4050.157312ms.
Result 2: 4048.704512ms.
Result 3: 4051.081216ms.
Result 4: 4046.565376ms.
Avg time: 4049.751221

Benchmark for case nr. 2
Result 0: 4043.850752ms.
Result 1: 4043.276288ms.
Result 2: 4043.407360ms.
Result 3: 4069.681152ms.
Result 4: 4070.952960ms.
Avg time: 4054.233643

Benchmark for case nr. 3
Result 0: 4070.839296ms.
Result 1: 4090.315776ms.
Result 2: 4104.312832ms.
Result 3: 4100.513792ms.
Result 4: 4098.144256ms.
Avg time: 4092.824951

Benchmark for case nr. 4
Result 0: 4101.523456ms.
Result 1: 4102.410208ms.
Result 2: 4106.982400ms.
Result 3: 4101.438464ms.
Result 4: 4100.418560ms.
Avg time: 4102.554199
```"
706146862,539,devshgraphicsprogramming,2020-10-09T12:16:42Z,ok seems that subgroup tricks dont win us extra perf.
545634911,386,devshgraphicsprogramming,2019-10-23T21:01:43Z,I actually wanted these commits to be applied on top of `master` branch and a PR into `master`
685712741,530,devshgraphicsprogramming,2020-09-02T12:49:01Z,@Crisspl can you do the final reviews on this and merge this into your mitsuba megabranch?
685722282,530,Hazardu,2020-09-02T13:05:12Z,"Could you delay merging untill later today?
There are some changes to level curve extraction that I made for the purpose of sending a zip file to a client. 
I'll be home past 17:30, so the last commit should be pushed shortly after"
457156125,213,devshgraphicsprogramming,2019-01-24T10:58:09Z,A conflict on CMakeLists.txt and CZipReader.cpp preventing mergeability
463385587,213,devshgraphicsprogramming,2019-02-13T21:43:22Z,"@Crisspl Is this Merge Request ready?

I've done a number of stability/bugfix commits to master, if you can merge with them first before I press the holy green button I'd be much obliged."
489902175,295,manhnt9,2019-05-07T04:21:42Z,Thank you. Could you also take a look at this issue? https://github.com/buildaworldnet/IrrlichtBAW/issues/294 I'm trying to debug an app.
489902975,295,Crisspl,2019-05-07T04:26:18Z,"Seems like missing -lunwind, but never got this before..
Btw you can open GitHub PR (or just pull with Git) from any fork to yours any time you want yourself (so that you don't have to wait for someone to make PR)"
489903358,295,manhnt9,2019-05-07T04:28:41Z,"Have you tried `cmake .. -DCMAKE_BUILD_TYPE=Debug` on Linux? If this error is not here before it means the CMake is really not stable, I've met similar issue with zlib in irrbaw. Before it linked and after a while it doesn't."
489904301,295,Crisspl,2019-05-07T04:34:23Z,"Hm, no, I think I ran only Release builds on Linux."
490433919,295,devshgraphicsprogramming,2019-05-08T10:25:38Z,"I changed base to sRGB branch since thats what we're working on now

@manhnt9 @Florastamine this PR fixes:
- linking of libunwind Debug builds of examples on Linux
- srgb conversions in decode and encode pixels improved and fixed (At least partially)
- minor bugfixes"
490572114,295,devshgraphicsprogramming,2019-05-08T17:14:11Z,"@manhnt9 note that this moves where the pch on Linux go (build dir, not source dir) so you can remove the .gch files from gitignore that you've added"
490859856,295,Crisspl,2019-05-09T11:08:56Z,">note that this moves where the pch on Linux go (build dir, not source dir) so you can remove the .gch files from gitignore that you've added

Actually it was done in https://github.com/buildaworldnet/IrrlichtBAW/commit/3227a97354cd6893136022c526e285798e273843 , long before this PR"
491142867,295,manhnt9,2019-05-10T03:29:48Z,Updated.
552098514,398,devshgraphicsprogramming,2019-11-09T13:03:27Z,"Status according to conversation with @AnastaZIuk :
- Memory Leak in PLY or some sort of corruption leading to crash
- BAW loader does not respect the flag yet but works."
553040539,398,AnastaZIuk,2019-11-12T18:34:36Z,"@devshgraphicsprogramming  I think it can be **merged**
everything has been tested in significant detail

the plan is to do BAW later, after writer flags
here are loaders that work great with flipping dependecy"
629067824,489,Przemog1,2020-05-15T07:02:46Z,almost done
629158923,489,devshgraphicsprogramming,2020-05-15T10:26:15Z,can I merge?
629376288,489,Przemog1,2020-05-15T17:10:18Z,"not yet, I've got few more things to do"
629665257,489,devshgraphicsprogramming,2020-05-16T15:42:34Z,mergable?
629746962,489,Przemog1,2020-05-17T05:44:46Z,"yes
"
372376483,48,devshgraphicsprogramming,2018-03-12T16:39:16Z,would be nice if this pull request got split into 3 separate pull reqs
447642171,165,devshgraphicsprogramming,2018-12-16T13:09:52Z,@manhnt9 any progress on this?
447642249,165,manhnt9,2018-12-16T13:11:07Z,"@devshgraphicsprogramming not yet, I'm developing Saga3D most of the time."
465878851,165,devshgraphicsprogramming,2019-02-21T06:30:52Z,doing it by myself.
439494130,177,devshgraphicsprogramming,2018-11-16T19:04:18Z,Can you commit the CMakeLists fixups too?
459960047,219,devshgraphicsprogramming,2019-02-02T12:06:57Z,@khom-khun I'd remove `CCollisionShape` and inline pretty much every class method that isn't `virtual`
493970722,219,devshgraphicsprogramming,2019-05-20T12:42:30Z,"Its a nice PR, it be a shame if it never got merged."
496874851,219,devshgraphicsprogramming,2019-05-29T10:11:55Z,"Now basically add an option to cmake `IRR_BUILD_BULLET` (just like `IRR_BUILD_CEGUI`) that controls the building of your bullet example and the bullet dependency

Maybe merge the @manhnt9 sRGB branch into yours to access that nice `irr::ext` library building macro?"
499017979,219,devshgraphicsprogramming,2019-06-05T09:53:25Z,So I guess we're ready to merge?
543253875,378,devshgraphicsprogramming,2019-10-17T16:23:46Z,What have you done... you just broke the animatiors.
543316404,378,AnastaZIuk,2019-10-17T19:01:57Z,"> What have you done... you just broke the animatiors.

We have misunderstood each other, solved :b"
543560508,378,devshgraphicsprogramming,2019-10-18T07:13:48Z,we're done?
543755611,378,AnastaZIuk,2019-10-18T13:47:52Z,"> we're done?

done :)"
619160426,443,AnastaZIuk,2020-04-24T17:54:34Z,"something has fucked up after merging, I need to check it"
619434046,443,AnastaZIuk,2020-04-25T20:09:47Z,closing
664620011,522,devshgraphicsprogramming,2020-07-27T20:26:08Z,"If I merge this, will the denoiser break? (it needs a functional mitsuba loader to load camera XMLs)"
664670225,522,Crisspl,2020-07-27T22:28:17Z,"> If I merge this, will the denoiser break? (it needs a functional mitsuba loader to load camera XMLs)

no, it loads metadata just fine, provided shaders wont work obviously but thats it"
665162586,522,devshgraphicsprogramming,2020-07-28T17:08:21Z,"ok fix beckmann and ggx, then I'll merge ;)"
381064938,64,devshgraphicsprogramming,2018-04-13T08:33:13Z,"rather than changing all our files and requesting a massive pull...

could we get a .sh script that fixes up the line endings (into UNIX not windows) and replaces tabs by 4 spaces?

P.S. Need to fix my IDE to go into space mode, been putting it off for waaay too long."
381202110,64,numberZero,2018-04-13T17:13:02Z,"You’re definitely right) here is it:
```
find -name '*.h' -o -name '*.cpp' | xargs sed -i 's/\r$//g; s/\t/    /g'
```"
381248427,64,Crisspl,2018-04-13T20:11:01Z,">Need to fix my IDE to go into space mode, been putting it off for waaay too long.
  
Uh i'll do it too then. Code looks really crappy sometimes on github because of tabs vs spaces duel."
381310819,64,devshgraphicsprogramming,2018-04-14T07:39:33Z,"4 spaces are good, tabs are a bit bad... not as a normal shit-throwing fest of TABS vs. Spaces but simply of the Meld, TortoiseGit, CodeBlocks and Visual Studio mix that we use renders spaces to be roughly the same indent size.

@numberZero I know what the find does, but can you explain the role of the sed arguments?"
381326541,64,numberZero,2018-04-14T12:42:26Z,"@devshgraphicsprogramming 

`-i` means “edit files in-place” (by default `sed` writes everything to stdout, even when processing multiple files)

The next argument is the program, it has 2 “search-and-replace” statements in this case:
```
s/\r$//g
```
replaces `\r` that is just before line end with nothing (lines end in `\r\n` on Windows but with `\n` on UNIX). (It actually doesn’t need the trailing `g`)
 
```
s/\t/    /g
```
replaces tab with 4 spaces; `g` is a flag to make it replace each tab on the line (by default, `s` does one replace per line).

The following arguments `sed` expect are file names, `xargs` supplies them.

*P.S. Tabs are great!*"
381332103,64,devshgraphicsprogramming,2018-04-14T14:14:43Z,"Thanks for the `sed` explanation, will make a .sh script in the top directory for this.
A tested .bat file for windows would be welcome

P.S. I know `xargs` XD"
437121385,164,devshgraphicsprogramming,2018-11-08T19:15:18Z,"This is not a way to fix the issue... I think `core::` is missing from the names of the classes the OpenCL objects inherit from

As well as possibly the `irr/core/BaseClasses.h` include"
437225872,164,manhnt9,2018-11-09T02:14:45Z,I see many other classes have been commented out that same public keyword so I did the similar. Do you mind explaining what AllocationOverrideDefault is and why it's needed for this class?
437314501,164,devshgraphicsprogramming,2018-11-09T10:16:48Z,"AllocationOverrideDefault overrides the default C++ operator new and delete to make sure that when the class is `new`ed the memory its been allocated resides on a address boundary aligned to the default irrlicht alignment (now 16, but soon 32 for AVX).

All classes in irrlicht that do not inherit from a class (like `IReferenceCounted`) that is derived from `AllocationOverrideDefault` should declare inheritance from `AllocationOverrideDefault`, unless:
1. It is a packed class that needs to be packed in arrays more tighty than the default irrlicht alignment would allow (i.e. vectorSIMDf)
2. It requires alignment bigger than the defaut irrlicht alignment (but it should still inherit from `AlignedBase` )
3. Requires a specific alignment that may never change (but should still inherit from `AlignedBase`), an example here are classes for interop with GLSL like matrices, vectors so that structs containing arrays of them have the same layout as the UBO/SSBO etc. in the shader
4. Is supposed to be byte-compatible with some other struct or data declared outside of irrlicht (i.e. a meta-type that you use as an accessor to plain void* memory)"
437314699,164,devshgraphicsprogramming,2018-11-09T10:17:39Z,"> I see many other classes have been commented out that same public keyword so I did the similar.

These were the classes I could not decide on how to handle their alignment (which category they belong to)"
437579707,164,manhnt9,2018-11-10T12:13:03Z,Pushed the new fix.
437609546,164,devshgraphicsprogramming,2018-11-10T18:51:04Z,thanks a lot :D
477353440,249,devshgraphicsprogramming,2019-03-27T21:24:43Z,"@qbasa12 all loaders need to debug log their metadata about headers

Also PNG loader not done.

Writers also need doing so they export correct metadata"
478511278,249,devshgraphicsprogramming,2019-04-01T09:46:08Z,superceded by another PR
441343521,181,manhnt9,2018-11-24T04:49:07Z,Well something made this PR automatically closed ...
441343564,181,manhnt9,2018-11-24T04:50:38Z,"Ah I lost my changes, maybe I reset my branch without caring about this PR. Anyways, the code is still in my engine so will make a new PR before new week starts."
502490285,328,Przemog1,2019-06-16T22:15:16Z,"> wtf.. that will only work on MSVC ?

fixed"
502706345,328,devshgraphicsprogramming,2019-06-17T14:28:21Z,"can you make a cleaner PR that doesn't have 49 modified files when done against the `brdf_explorer` branch?

(as well as fix my comments above)"
580463758,415,devshgraphicsprogramming,2020-01-30T21:16:45Z,"cool, now change the typedef for `core::unordered_map` and similar `unordered` to parallel hashmap stuff and test the library (especially smooth normal computation)."
618916680,475,devshgraphicsprogramming,2020-04-24T09:51:58Z,"I added SDL2 submodule to 3rdparty.

Cmake will need touching up to add it as a dependency of `Irrlicht` target

Here's a list of resources on SDL2 and Vulkan:
https://docs.tizen.org/application/native/guides/graphics/vulkan
https://github.com/Z80Fan/VulkanDemos
https://sopyer.github.io/b/post/minimal-vulkan-sample/
https://www.gamedev.net/forums/topic/699117-vulkan-with-sdl2-getting-started/"
618971499,475,devshgraphicsprogramming,2020-04-24T12:09:07Z,"I also included `volk`

https://github.com/zeux/volk

no need to make it a dependency, you can use it in header-only-mode"
623941600,475,devshgraphicsprogramming,2020-05-05T09:05:11Z,"why did you copy my commit and not merge my branch, this is a recipe for conflicts when merging"
630273546,490,devshgraphicsprogramming,2020-05-18T15:52:40Z,writer?
630274213,490,AnastaZIuk,2020-05-18T15:53:42Z,I'm dealing with it right now :D
630425416,490,devshgraphicsprogramming,2020-05-18T20:44:20Z,why did you add denoised images to our repo?
630806111,490,devshgraphicsprogramming,2020-05-19T13:09:48Z,@AnastaZIuk would you mind converting the .hdri envmaps to OpenEXR?
630814564,490,AnastaZIuk,2020-05-19T13:22:58Z,"> @AnastaZIuk would you mind converting the .hdri envmaps to OpenEXR?

okay, I will do it"
440736613,186,devshgraphicsprogramming,2018-11-21T16:53:16Z,can it echo whether it found vulkan or not?
440747855,186,manhnt9,2018-11-21T17:26:27Z,"CMake will print out if it found Vulkan and the library's location.
Any custom message can be printed out using CMake command `message`."
440762337,186,devshgraphicsprogramming,2018-11-21T18:13:15Z,"Can you message ""BUILDING with Vulkan"":""NOT BUILDING with Vulkan"""
440969931,186,devshgraphicsprogramming,2018-11-22T09:38:38Z,"great work, thanks!"
441096396,187,manhnt9,2018-11-22T18:02:11Z,"Well, I think I must have replaced all my CMake knowledge with 3.12, so I made a mistake.
In modern CMake, we only need to `link` a library, `include dir` of a library is a `property` of that library, so only need to link and CMake will add `include dir` automatically.
This PR is for old CMake, everything is variable so we need to specify.

In new CMake, we have target and target can have multiple properties, that's more convenient."
441180530,187,devshgraphicsprogramming,2018-11-23T08:38:37Z,does this work with the new LunarG SDK that comes as a package from a repository ? (no more need for that pesky `VULKAN_SDK` environment variable)
441208073,187,manhnt9,2018-11-23T10:43:59Z,which package? I have libvulkan-dev installed and I don't have to set any environment variable.
441249374,187,devshgraphicsprogramming,2018-11-23T14:06:18Z,That's exactly what I wanted to hear.
663847220,462,devshgraphicsprogramming,2020-07-25T11:58:47Z,@AnastaZIuk take this over (low priority)
660250019,514,devshgraphicsprogramming,2020-07-17T17:43:49Z,could you also tackle this week's bug with the missing builtin data in this PR?
660250803,514,Hazardu,2020-07-17T17:45:21Z,"sure
"
660255590,514,Hazardu,2020-07-17T17:55:08Z,"ive merged the latest changes to this branch, yet it does not appear to skip any files in the generated .cpp file"
660257192,514,devshgraphicsprogramming,2020-07-17T17:58:31Z,@AnastaZIuk provide counter example
415484760,138,devshgraphicsprogramming,2018-08-23T16:41:30Z,"I could accept your pull request, if you revert your changes to `irrMemory.h`"
415500173,138,devshgraphicsprogramming,2018-08-23T17:22:10Z,"There is ongoing debate with the `template<>`
https://stackoverflow.com/questions/4189945/templated-class-specialization-where-template-argument-is-a-template
https://stackoverflow.com/questions/32911904/template-class-specialization-for-vector-type-different-valid-syntax

can anybody clear up the `template<>` issue?"
415521557,138,Crisspl,2018-08-23T18:28:47Z,About `template<>`: see [this](https://stackoverflow.com/questions/51991364/template-specialization-for-type-concretized-by-template-parameter/51991449#51991449)
465879456,222,devshgraphicsprogramming,2019-02-21T06:33:49Z,"@Crisspl  Briliant, but we're missing a null-allocator specialization (because null allocator will allocate nullptr and default custom allocator CPUBuffer will try to memcpy into that), that deletes the non-adopting constructor."
487809311,284,manhnt9,2019-04-30T03:09:53Z,His full name is `Nguyễn Ngọc Huy`.
487809521,284,manhnt9,2019-04-30T03:11:42Z,"And my account is manhnt9, not manhnt."
487809869,284,manhnt9,2019-04-30T03:15:02Z,"Btw since you mistyped it and @manhnt guy seems like a C++ programmer, I'd like to inform him that our company in Vietnam is hiring more developers. Hi @manhnt, you can consider this job or share the [post](https://www.facebook.com/ntmanh.net/posts/606712413138787) for us. Thanks and sorry for bothering you."
487034592,275,devshgraphicsprogramming,2019-04-26T12:09:51Z,I need to close and resolve #265 first
487034957,275,manhnt9,2019-04-26T12:11:11Z,Okay.
495407498,275,devshgraphicsprogramming,2019-05-23T22:28:02Z,could this affect/cause/interact with #299 ?
538643886,375,AnastaZIuk,2019-10-05T12:01:59Z,"@devshgraphicsprogramming I have sent you nice website that might solve our troubles with 
chemical compounds etc, because in majority of cases those chemicals are placed in such a part of ""Handbook Of Optical Constants of Solids"" that access to them is paid. Over 300$ for entire book. Check out Discord please."
539155031,375,AnastaZIuk,2019-10-07T18:56:11Z,"@devshgraphicsprogramming most of troubles solved, obtained 3 toms of Palik's book, but despite it I can't find anything about ""d-C"" :D"
539431601,375,devshgraphicsprogramming,2019-10-08T09:28:45Z,d-C is cubic diamond 

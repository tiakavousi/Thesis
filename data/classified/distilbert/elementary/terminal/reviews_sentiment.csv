id,pr_number,user,submitted_at,state,body,distilbert_sentiment_label,distilbert_confidence
180878121,330,jeremypw,2018-12-03T17:19:32Z,DISMISSED,some initial comments on the code.,0,0.9849751591682434
418595475,330,danirabbit,2020-05-26T19:14:07Z,DISMISSED,"i can't confirm that this ever shows ""open in web browser"", and it seems to also break opening in the file browser. i left some other inline comments",0,0.9484812617301941
425649804,330,danirabbit,2020-06-05T22:08:07Z,CHANGES_REQUESTED,seems to work as expected now. nice job! left some comments/questions in line,1,0.9932780861854553
667969170,584,felix-andreas,2021-05-25T15:19:34Z,APPROVED,"the code looks good to me! it solves both linked issues. and even though the callback of the `contents_changed` signal is called multiple times per second when using the terminal, i can't measure any performance differences.",1,0.9896290898323059
290621413,386,felix-andreas,2019-09-19T16:54:38Z,COMMENTED,"i think you accidentally mixed up the values of the event macros. just out of curiosity, what is the advantage to use these macros over `true/false`?",0,0.8912913799285889
414709881,505,cassidyjames,2020-05-19T18:26:52Z,CHANGES_REQUESTED,"i'm :-1: to add a new ""sync"" setting here. i think the new behavior will work how most people expect. for those who want a larger default zoom for all tabs, they can set it once and forget it. for someone who wants to zoom in and out on a specific tab, this will work for them as well.",0,0.9199957847595215
523695115,505,cassidyjames,2020-11-04T20:06:19Z,DISMISSED,behavior-wise i think this makes sense. just a couple of code style/readability things.,0,0.9712387919425964
524566641,505,cassidyjames,2020-11-05T18:52:41Z,DISMISSED,"hm, installing this on elementary os 6, it defaulted to 25% zoom the next time i opened terminal. this is reproducible by setting `/io/elementary/terminal/saved-state/tab-zooms` to the default, then re-opening terminal. i _think_ my suggested change will resolve that by defaulting to 1.0.",0,0.986855149269104
526677246,505,cassidyjames,2020-11-09T21:41:48Z,COMMENTED,i'm generally happy with this ux-wise. i would still like to get a code review from /desktop-developers though.,1,0.8719382286071777
1703785760,742,jeremypw,2023-10-30T10:42:00Z,CHANGES_REQUESTED,this is mostly working - thanks! a couple of issues: - changing the default font with ` scroll` does not change settings because at the moment the terminal widget changes the font directly. you need to change the scroll handler to activate the relevant window action instead. - i suggest you split the `save_opened_terminals` function up so that you can change the zooms and uris settings independently to save unnecessary work being done.,1,0.9826924800872803
1704740371,742,jeremypw,2023-10-30T17:39:38Z,CHANGES_REQUESTED,you seem to have repeated a lot of code in `save_open_terminals_with_zooms`? can you just call the split functions? adding another signal to the terminal widget is not the best solution - you can just activate the appropriate action in the scroll handler instead of calling `increment_size` and `decrement_size`. this can be done with code like `window.get_simple_action (mainwindow.action_zoom_font_in).activate (null);` (other examples of this pattern are already used in the code) i have made a couple of other comments inline.,0,0.9738070964813232
1708630934,742,jeremypw,2023-11-01T16:53:50Z,APPROVED,i think this is good to go now - thanks for your contribution!,1,0.9821571111679077
1708658939,742,jeremypw,2023-11-01T17:09:29Z,CHANGES_REQUESTED,"sorry, missed the fact that one of the unit tests now fails (ci was failing anyway in other prs for an unrelated reason). the error given is [code block] not immediately obvious why this pr should affect the number of tabs - i'll investigate.",-1,0.9843346476554871
487961116,542,danirabbit,2020-09-14T17:33:55Z,CHANGES_REQUESTED,"hey thanks for working on this! this is looking really good and it's definitely a highly requested feature so i appreciate you tackling it. i left some inline comments with some minor code cleanups and copy changes alignment etc. i agree that the long combobox here is pretty unweildy. perhaps instead of trying to include as many styles as we can find, it would be better to have some kind of import mechanism and stick with the same 3 default styles for now. perhaps in the interest of getting this feature merged more quickly, we should reduce the scope of this branch to only supporting a single custom style and we can expand in later follow-up branches i think a major interaction issue we have here is that if you ever switch away to another style, your custom style gets wiped. this seems like it would be pretty frustrating for someone who switches between styles. i imagine we should probably persist custom styles in gsettings. maybe with a ""styles"" child schema, even if we only support saving one custom style for now yes i think we want to maintain the behavior of a style also setting the window chrome to dark or light. the quick style switcher should make it really easy to alternate between styles without having to fiddle with individual settings every time",1,0.9867620468139648
73584841,160,jeremypw,2017-11-01T19:12:05Z,DISMISSED,"some changes are needed to make this work see comments in line. at the moment, first change of zoom factor results in a microscopic font and changes are not reflected in settings.",0,0.9838729500770569
73590468,160,jeremypw,2017-11-01T19:29:59Z,CHANGES_REQUESTED,a couple more suggestions but looking good :),1,0.9841986894607544
74283979,160,jeremypw,2017-11-05T15:17:38Z,CHANGES_REQUESTED,almost there ;-). just a couple of minor points.,1,0.5592333078384399
74288717,160,jeremypw,2017-11-05T17:55:50Z,APPROVED,looks good and works as expected :-),1,0.9900259971618652
52167871,125,donadigo,2017-07-25T19:15:45Z,CHANGES_REQUESTED,"thank you for submitting the branch! it would be ideal if you could split these 2 changes into 2 different pr's? the diff looks clean but i would still like those to be their own prs. i have commented on the diff, two small things. one is a question, you could answer in the diff itself.",1,0.9781021475791931
53084949,125,donadigo,2017-07-29T22:19:33Z,CHANGES_REQUESTED,i think the contents of this signal should be in a separate function like `handle_paste_event ()` that should return a boolean value since this code is now duplicated in two different places. then you could just replace those duplicates with: `return handle_paste_event ()`.,0,0.989791214466095
56700609,125,donadigo,2017-08-16T17:15:23Z,CHANGES_REQUESTED,3 things.,0,0.9641130566596985
65269786,125,jeremypw,2017-09-26T16:02:48Z,CHANGES_REQUESTED,"one minor code style comment, otherwise looks good.",1,0.84925776720047
65604612,125,donadigo,2017-09-27T16:23:50Z,APPROVED,looks good.,1,0.8799164891242981
2133409334,760,danirabbit,2024-06-21T20:56:07Z,DISMISSED,it looks like zoom controls are broken with this branch: ![a link],-1,0.9739984273910522
2157583050,760,Marukesu,2024-07-03T22:25:33Z,DISMISSED,"the tests look alright, the last fail is not consistent, and i believe there's no way to get the ci's coredumps to understand what happened there, sadily.",-1,0.9785672426223755
2186416884,760,danirabbit,2024-07-18T16:56:58Z,DISMISSED,lgtm :tada:,0,0.9406688213348389
1119398946,687,jeremypw,2022-09-25T10:57:32Z,CHANGES_REQUESTED,i have suggested some corrections to remaining lint.,0,0.9817302227020264
1119432156,687,jeremypw,2022-09-25T17:26:50Z,CHANGES_REQUESTED,another small bug is that if cyclic search is off and you navigate to the last found term so that the `next` button becomes insensitive and then toggle cyclic search on then the sensitivity of the `next` button does not change - it should become sensitive. a fix for this would be to emit a `search-changed` signal whenever the cyclic search is toggled.,0,0.9246788620948792
200872214,265,donadigo,2019-02-07T00:20:42Z,DISMISSED,"one comment, otherwise it's fine.",0,0.9502583742141724
257194642,265,donadigo,2019-07-02T23:16:56Z,CHANGES_REQUESTED,contains conflicts.,0,0.877623975276947
267432068,265,donadigo,2019-07-26T22:52:02Z,DISMISSED,one more comment.,0,0.9650285243988037
338922307,265,danirabbit,2020-01-06T22:00:40Z,CHANGES_REQUESTED,can you please add changes to appdata :),1,0.9425731897354126
338929633,265,donadigo,2020-01-06T22:34:41Z,DISMISSED,one change.,0,0.9782569408416748
1029031083,662,danirabbit,2022-07-05T18:10:58Z,CHANGES_REQUESTED,"two small questions, but other than that totally happy with this as an initial implementation. let's get this in and then smooth out the flow a little bit/do other features in future branches",0,0.495785653591156
1029169096,662,danirabbit,2022-07-05T20:27:22Z,CHANGES_REQUESTED,one suggestion and a comment,0,0.9822695851325989
1030479374,662,danirabbit,2022-07-06T17:39:26Z,APPROVED,yeah it's just a little bit less destructive. this looks good!,1,0.9881145358085632
372070632,486,danirabbit,2020-03-10T15:43:18Z,CHANGES_REQUESTED,"hey thanks for looking into this issue! i've left a couple of inline comments. one other thing that i noticed is that the button is always sensitive regardless of whether a process is running or not. we probably want to make sure to set the button as insensitive unless there is a running process to terminate also, this seems like a place where we should use [a link] and provide the keyboard shorcut",1,0.9441730976104736
36649023,87,cassidyjames,2017-05-06T17:47:09Z,CHANGES_REQUESTED,awaiting those changes :smile:,1,0.7569507360458374
36649429,87,cassidyjames,2017-05-06T18:05:55Z,DISMISSED,ux approval. should probably have someone more experienced in vala take a second look at the code.,0,0.9666938781738281
36650363,87,danirabbit,2017-05-06T19:14:26Z,DISMISSED,"i'm not super excited about these variable names. i think stuff like ""sb"" and ""t"" becomes very very unclear the further away you get from where they are defined",-1,0.9663083553314209
2412625317,798,jeremypw,2024-11-04T09:57:08Z,APPROVED,lets go!,1,0.6811153292655945
1821696546,743,Marukesu,2024-01-15T13:33:04Z,APPROVED,lgtm.,0,0.9832575917243958
683185846,595,danirabbit,2021-06-14T17:41:56Z,DISMISSED,one small string change :),1,0.8954355120658875
683632295,595,JoseExposito,2021-06-15T07:08:32Z,APPROVED,"the code is looking much better, good job! if everybody else is happy, i think we can merge it.",1,0.9926669001579285
279277044,397,devprabal,2019-08-24T05:49:02Z,COMMENTED,works on my system!,0,0.5404961109161377
280929192,397,Philip-Scott,2019-08-28T15:48:07Z,DISMISSED,"code wise it looks good to me, but i haven't had a chance to compile and test it (and won't be able to this week) if you can get someone else to test it as well that would be great :) but i'm removing my ""needs changes"" to not be a blocker. if no one else checks it by next week, i'll give it a look once i'm back home :)",1,0.9890081882476807
279288230,397,tintou,2019-12-02T10:22:57Z,CHANGES_REQUESTED,a few bits to change,0,0.9858700037002563
692993658,602,jeremypw,2021-06-25T16:27:18Z,CHANGES_REQUESTED,this pr causes a regression in showing the path as the window title under normal conditions. i've added suggestions as to how to fix this. i am not sure whether you need to check whether current_working_directory is something valid but it is probably safer to test this and use terminalwidget.default_label as an ultimate fallback.,0,0.9411448836326599
748279666,602,jeremypw,2021-09-07T18:27:07Z,APPROVED,allows setting window title from commandline without affecting tab labelling. thanks!,1,0.9785295724868774
393976345,504,jeremypw,2020-04-15T17:20:47Z,CHANGES_REQUESTED,"as you say, it is still a bit hacky but better than the alternative ;-) thanks. i made a couple of comments on the code.",1,0.988591730594635
560534993,556,cassidyjames,2020-12-31T19:01:12Z,CHANGES_REQUESTED,"left one copy change, but it makes me wonder: should this just be part of the unsafepastedialog? much of the copy and ui would be the same; the only difference would be the title and possibly the setting we bind to, if we want it to be a separate setting.",0,0.8425203561782837
676800855,556,jeremypw,2021-06-05T18:57:07Z,CHANGES_REQUESTED,made a few suggestions but it would be good to progress this if possible - thanks.,1,0.9041435122489929
1773781882,753,Marukesu,2023-12-09T17:59:56Z,COMMENTED,"a litte suggestion with gtk4 in mind. also, a pior art in this case is epiphany, that `pack_end()` a gtk.button that trigger the fullscreen action and is only visible when fullscreened. something like this should be simple to do here too.",0,0.9782111644744873
1833797236,753,danirabbit,2024-01-19T21:46:32Z,APPROVED,"works as expected, nice job!",1,0.9911263585090637
672748002,590,jeremypw,2021-06-01T07:45:22Z,CHANGES_REQUESTED,good cleanup. just a couple of very minor comments.,1,0.9174463152885437
675362566,590,jeremypw,2021-06-03T14:42:23Z,APPROVED,removing the gtk_menu_bar_accel override should be safe enough i guess - it isn't used elsewhere in elementary or within terminal. i guess it is to be sure that terminal programs like `htop` can be exited with it.,0,0.9865002036094666
2411206425,794,ryonakano,2024-11-02T07:08:35Z,DISMISSED,"the clipboard or dragged text are no longer pasted if we once uncheck ""show paste protection warnings"" in the unsafepastedialog.",0,0.9740784764289856
2415840615,794,ryonakano,2024-11-05T14:48:49Z,COMMENTED,"confirmed this is fixed, thank you! leaving another two tiny comments.",1,0.9688549637794495
2421105723,794,ryonakano,2024-11-07T14:14:27Z,APPROVED,code looks good and fixes the linked issue. thank you!,1,0.9869288206100464
267238797,390,danirabbit,2019-07-26T14:58:16Z,DISMISSED,don't forget to update the color buttons. at the moment this gets reverted if you change the color scheme,0,0.9774032235145569
297405365,390,jlnr,2019-10-04T11:08:57Z,COMMENTED,"works fine, but i think at least the color radio button should be updated to match.",0,0.903544545173645
297725426,390,jlnr,2019-10-04T21:25:46Z,APPROVED,"lgtm, does this need more ux discussion?",0,0.9869974851608276
195298189,349,Philip-Scott,2019-01-23T00:38:18Z,DISMISSED,"we are actually deprecating the use of granite.settings, and specially since it's just one setting you should just use glib.settings instead. also make sure you check if the schema exists to prevent crashes if things change in the future or if it's used in a different os",0,0.9746408462524414
266290658,349,cassidyjames,2019-07-24T21:15:44Z,DISMISSED,works as described. :+1:,0,0.571122407913208
162646033,299,cassidyjames,2018-10-08T21:28:28Z,CHANGES_REQUESTED,"code looks good, thanks for the contribution! i think lastly we should drop the translation changes from this pr to prevent merge conflicts with master. it also makes this diff much easier for other contributors to review. once this is merged, we can push the updated translations.",1,0.9900533556938171
162938730,299,cassidyjames,2018-10-09T14:59:28Z,APPROVED,looks good! thanks for the contribution. is this safe to merge with a string change since there was a recent release?,1,0.9915679097175598
254210876,382,jeremypw,2019-06-25T19:05:44Z,CHANGES_REQUESTED,"there is a problem if the window scaling is > 1. the menu is truncated. this affects both menu.popup_at_widget () and menu.popup_at_rect () - but does not affect menu.popup_at_pointer (). not sure why. maybe an upstream bug? if so, we will have to use popup_at_pointer for now.",0,0.9266259074211121
1498974460,699,jeremypw,2023-06-26T16:47:14Z,CHANGES_REQUESTED,found a regression: changes in font size are not restored after closing and reopening the app.,0,0.9712097644805908
1545018942,699,jeremypw,2023-07-25T09:23:14Z,APPROVED,"code looks good, no regressions or new terminal warnings seen.",1,0.6103160381317139
48514733,119,cassidyjames,2017-07-07T03:49:40Z,APPROVED,"yay! this seems to work well. tested across lodpi, hidpi, and multiple displays. i am going to request someone else spot-checks the code, but ux-wise i'm :+1:",1,0.9868266582489014
90065827,196,jeremypw,2018-01-19T10:35:36Z,DISMISSED,couple of formatting issues and some suggested simplifications.,0,0.9752207398414612
90301616,196,jeremypw,2018-01-20T11:42:42Z,COMMENTED,works ok - just one question (see inline),0,0.9779462814331055
334886778,423,danirabbit,2019-12-19T19:40:25Z,DISMISSED,"this seems to ""do the thing"". i think we can continue discussion about the custom font setting and whether to expose it or remove it in another issue :)",1,0.800700843334198
538051716,477,danirabbit,2020-11-24T23:41:31Z,COMMENTED,left a question inline :) what's the best way to test this?,1,0.9662495851516724
790761404,633,jeremypw,2021-10-27T14:51:30Z,CHANGES_REQUESTED,this only works as expected after changing the settings. this is because the settings still contain the alpha value until they are changed and these do not match the strings in code when constructing the color buttons - so the wrong color button appears active. one way round this is to test for the foreground color instead as that has not changed. also to move the test *after* you have connected the color-button clicked handlers so that the new background colors get written to settings. in the longer term it would be better to move to methodology like code where a named style-scheme is saved in settings rather than the actual colors.,0,0.9831967353820801
959437136,658,jeremypw,2022-05-02T18:58:25Z,CHANGES_REQUESTED,"the code in `action_close_terminal` results in the window closing regardless of the response to the dialog. however, there is a simpler solution. just call `close ()` on the window which will result in the `delete_event` handler running which will correctly save the state and check for foreground processes.",0,0.9883171916007996
959456673,658,SkiF12,2022-05-02T19:18:41Z,COMMENTED,make sense,0,0.9631345272064209
2528882757,836,ryonakano,2025-01-03T10:47:38Z,COMMENTED,"if we remove the unnecessary cast against `n_pages` here, we can remove the following places too ~~, excepting the cast against the result of `focus.clamp ()`~~ : [code block]",0,0.9886190891265869
2530838448,836,ryonakano,2025-01-05T07:27:34Z,APPROVED,lgtm and works as expected. thank you for your fix!,1,0.9894279837608337
86155965,185,jeremypw,2018-01-02T14:57:52Z,COMMENTED,see inline comments. some maybe without the scope of this pr.,0,0.982864260673523
168667921,262,cassidyjames,2018-10-26T04:27:48Z,DISMISSED,ux approval from me. this is a nice feature!,1,0.9911653399467468
168711960,262,tintou,2018-10-26T08:10:50Z,DISMISSED,a few things to do then it should be alright,0,0.9361762404441833
175950678,262,donadigo,2018-11-16T19:36:37Z,APPROVED,"looks clean and works nicely, an approve from me.",0,0.558174192905426
256038266,375,donadigo,2019-06-29T14:13:32Z,CHANGES_REQUESTED,i have a couple of comments.,0,0.9814463257789612
256552678,375,donadigo,2019-07-01T20:44:55Z,CHANGES_REQUESTED,one more comment.,0,0.9650285243988037
1749225842,749,jeremypw,2023-11-25T18:59:48Z,CHANGES_REQUESTED,i have left some inline comments. everything else seems ok but i'll test a but more later.,0,0.9711303114891052
1750234802,749,jeremypw,2023-11-27T11:37:43Z,CHANGES_REQUESTED,"the ""copy last output"" and ""scroll to last command"" actions are not triggered by the keyboard (but the former is triggered by the context menu option). something to do with the ""key pressed"" handler i think.",0,0.988446831703186
1753382925,749,jeremypw,2023-11-28T16:41:34Z,APPROVED,its a pity this change turned out to be less straightforward than anticipated and a somewhat non-obvious workround is required to avoid breaking some actions. however this all seems to work now. so i guess it can be merged. maybe possible to refactor simplify later?,-1,0.9772802591323853
1347545613,710,jeremypw,2023-03-19T18:22:52Z,CHANGES_REQUESTED,there seems to be a regression in that quitting with the quit action now does not save tabs. reopening just restores the home tab.,0,0.8961789011955261
1368062255,710,jeremypw,2023-04-02T10:56:48Z,CHANGES_REQUESTED,"no regressions found, but the ci is currently failing on tests",0,0.9739207029342651
2298037519,786,danirabbit,2024-09-11T17:19:07Z,CHANGES_REQUESTED,"for some reason accelerators aren't working correctly here. keypad accels work, but ctrl + and ctrl - do not",0,0.8238903880119324
2479266580,813,jeremypw,2024-12-04T16:24:28Z,APPROVED,i am going to approve this as within session functionality is still an improvement,0,0.9606232643127441
86627367,190,jeremypw,2018-01-04T13:01:35Z,CHANGES_REQUESTED,works as expected but possibly excessive calls to save tabs when nothing has changed.,0,0.9641664624214172
95244368,180,donadigo,2018-02-08T21:47:14Z,DISMISSED,"one tiny comment. can you elaborate what this change does? i mean, what internal or external effects does this have on the execution?",0,0.9762219786643982
75877992,165,donadigo,2017-11-10T20:58:30Z,CHANGES_REQUESTED,gogo.,0,0.9363754987716675
76242676,165,donadigo,2017-11-13T20:45:10Z,CHANGES_REQUESTED,one thing that could be fixed i think. the rest is fine.,0,0.9195516109466553
126140719,253,danirabbit,2018-06-05T20:32:20Z,CHANGES_REQUESTED,nice work! this mostly works but there are some warnings in terminal about: [code block] and it looks like sensitivity of these actions isn't always set correct (for example for copy),1,0.9899954795837402
126434967,253,danirabbit,2018-06-06T15:39:57Z,APPROVED,works for me!,1,0.8834253549575806
478824005,533,jeremypw,2020-08-31T17:58:17Z,APPROVED,works for me! i have not found any documented use of ` ` in bash or vte so :shrug: i am going to approve.,1,0.6365957260131836
488927525,527,cassidyjames,2020-09-15T17:52:43Z,CHANGES_REQUESTED,let's try `0 9px` for now?,0,0.9858641028404236
748206398,557,jeremypw,2021-09-07T16:56:53Z,COMMENTED,needs input from the design team as to whether the option is needed and what shortcut is appropriate,0,0.982311487197876
1292016946,701,danirabbit,2023-02-09T21:10:02Z,COMMENTED,"this mostly looks good, just a few inline comments. i think generally some of these lines are a bit harder to read compared to how they were before. having arguments separated onto different lines for some of these methods that take a bunch of arguments makes it just easier to read at a glance what's happening",0,0.74757981300354
1292130179,701,danirabbit,2023-02-09T22:43:35Z,APPROVED,looks solid. nice work!,1,0.9908610582351685
2248975805,772,danirabbit,2024-08-20T19:54:39Z,APPROVED,clean!,0,0.5087336301803589
49356087,95,donadigo,2017-07-11T23:30:36Z,CHANGES_REQUESTED,"i have one comment about connecting to the `button_press_signal`, nothing too serious. the change actually works well and fixes mentioned issues. i'm not sure if manually connecting / disconnecting is the right way to resolve this issue though.",0,0.6276625394821167
481001256,537,jeremypw,2020-09-02T16:35:36Z,CHANGES_REQUESTED,"this works, but i think we should really fix `start_terminal_with_terminal_directory (string? directory)` and/or the functions it calls so that they behave correctly with a `null` working directory. otherwise the parameter should be changed to `string directory` so that this function requires a non-null working directory.",0,0.9854486584663391
584501262,537,jeremypw,2021-02-05T16:28:44Z,CHANGES_REQUESTED,"the problem with this is that if you combine the `-w` flag with the `-n` flag, the new window reloads all the tabs from settings. this is not the desired behaviour - the new window should only have a single tab.",0,0.9468979835510254
1092167761,680,danirabbit,2022-08-31T16:19:21Z,COMMENTED,"hm, i'm not sure about the changes to the searchbar here, especially since if you've opened the searchbar it's now stuck open until the foreground process ends. it also seems like we'll get issue reports about not being able to create or switch tabs while a command is running. i wonder if we should expand the behavior of the current ""natural copy/paste"" toggle to have more of a ""cli app mode"" or have a per-tab option to disable all app shortcuts while the current tab is focused. or just generally something that feels more deliberate.",-1,0.5459116697311401
87801675,189,jeremypw,2018-01-10T11:16:35Z,APPROVED,lgtm,0,0.9795994758605957
55039162,129,artemanufrij,2017-08-08T19:06:00Z,COMMENTED,your screenshot looks more nicely than on my system. in my case it looks like checkbox has a margin. ![a link],1,0.7769985198974609
55058959,129,artemanufrij,2017-08-08T20:21:23Z,APPROVED,looks good!,1,0.9856627583503723
71605571,157,jeremypw,2017-10-24T17:31:10Z,COMMENTED,"works expected, although the app accelerators only need to be set once. files does it in the first window; however, if there are no adverse effects in repeated setting, perhaps this is unnecessary.",0,0.9871008396148682
73542709,157,jeremypw,2017-11-01T16:58:47Z,COMMENTED,"the function action_about () is no longer used. if it is not intended to reimplement this action then this function should be removed. otherwise, no regressions found.",0,0.9827494621276855
73737053,157,jeremypw,2017-11-02T10:10:06Z,APPROVED,"looks good, no regressions found.",1,0.6156044602394104
131355711,275,tintou,2018-06-22T21:43:17Z,APPROVED,wfm,0,0.9574257135391235
339989052,447,jeremypw,2020-01-08T16:32:40Z,APPROVED,lgtm. thanks!,1,0.9743313193321228
332224107,435,danirabbit,2019-12-14T17:39:16Z,APPROVED,works great and nice improvement to the zoom level label syncing!,1,0.991294801235199
530591564,547,jeremypw,2020-11-14T17:16:46Z,CHANGES_REQUESTED,this seems to break natural copy - ` c` results in `^c` appearing in the terminal. not immediately obvious why as you have implemented similar code.,0,0.9763467311859131
707678717,580,danirabbit,2021-07-15T18:09:39Z,APPROVED,nice fix :+1:,1,0.9821589589118958
672424038,589,JoseExposito,2021-05-31T15:53:29Z,COMMENTED,"i can confirm it fixes the issue, thanks!",1,0.9736979007720947
1695668432,740,danirabbit,2023-10-24T19:07:37Z,CHANGES_REQUESTED,looks good just some minor copy adjustments,0,0.547089159488678
1700268206,740,danirabbit,2023-10-26T18:17:39Z,APPROVED,looks good :rocket:,1,0.9850442409515381
88054099,193,codygarver,2018-01-11T04:18:24Z,CHANGES_REQUESTED,"disapprove. these variables don't make porting to meson more difficult, all this is just as easily accomplishable with meson using `configuration_data` and `configuration_file`.",0,0.7830138206481934
90305484,200,jeremypw,2018-01-20T14:47:40Z,DISMISSED,"since, at the moment, `application::new_window_with_coords ()` is only called with both the optional parameters ""false"", it would make sense for them to default to false. there is no need to make them optional in the window constructor since only application should create windows and take responsibility for their parameters.",0,0.986071765422821
90306530,200,jeremypw,2018-01-20T15:34:55Z,APPROVED,thanks.,0,0.5150366425514221
90758190,204,jeremypw,2018-01-23T09:41:26Z,CHANGES_REQUESTED,"this fixes the issue. you might as well fix the related issue in on_switch_page () function - again, the terminal widget should grab focus, not the tab.",0,0.9881630539894104
91606437,204,jeremypw,2018-01-25T17:33:42Z,APPROVED,"looks good now, thanks!",1,0.9842239618301392
55969387,136,matzipan,2017-08-13T15:59:36Z,APPROVED,approved after dan's response.,0,0.9791513681411743
65919451,146,donadigo,2017-09-28T16:29:22Z,CHANGES_REQUESTED,look at diff comments. please make me happy.,1,0.7262291312217712
299099220,404,cassidyjames,2019-10-08T23:12:29Z,CHANGES_REQUESTED,"i'm not able to get this to behave as described; when terminal is unfocused, i can still click on a link and it immediately opens.",0,0.5682981014251709
299580832,404,cassidyjames,2019-10-09T17:37:41Z,APPROVED,ux-wise this seems to work for me. would like input from /desktop-developers though.,0,0.6440296173095703
302251432,404,cassidyjames,2019-10-15T23:27:19Z,APPROVED,i've taken another look at the code and it seems sane to me. :+1:,1,0.913028359413147
318033518,416,jeremypw,2019-11-17T17:41:18Z,APPROVED,no regressions found when dragging tab out of window.,0,0.9831604361534119
338573835,446,jeremypw,2020-01-06T10:37:58Z,CHANGES_REQUESTED,"thanks for the contribution! this does the immediate job, but i have a couple of comments: * you should update the .desktop file ""new window"" action command line to use the new flag * the `get_last_window ()` function's name no longer reflects its actual action - it does not always return the last window, even if there is one. as it is a private function i think it would be safe enough to rename it and maybe pass the option as a parameter in case the function needs to be used to get the last window anyway. you could then create the new window in this function and return it instead of the callers having to test the result and then create a new window.",1,0.9851330518722534

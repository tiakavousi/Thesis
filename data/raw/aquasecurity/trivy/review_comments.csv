id,pr_number,user,created_at,body
1385885426,5439,knqyf263,2023-11-08T02:32:57Z,"A single package can have multiple identifiers, like CPE and PURL. It should be able to accommodate all of them. One idea is make `PkgIdentifier` an array, but it is a bit bothering to access PURL because it needs to iterate the array every time. What if simply adding identifiers as the field?

```suggestion
type PkgIdentifier struct {
	PURL string `json:"",omitempty""`
	CPE string    `json:"",omitempty""`
}
```"
1385887019,5439,knqyf263,2023-11-08T02:35:50Z,We used to need it in order to store BOM-Ref. I'm afraid that removing this field affects scanning somewhere. But we may no longer need it since we dropped some capabilities. I'll take a look.
1386479013,5439,juan131,2023-11-08T11:33:23Z,"All right, I'll adopt this approach."
1395469096,5439,juan131,2023-11-16T10:16:55Z,I marked it as deprecated at https://github.com/aquasecurity/trivy/pull/5439/commits/7d29afd668566c2cd72eff54e0affc971a522c87 instead of removing it
1396638425,5439,DmitriyLewen,2023-11-17T03:06:11Z,Why is there extra `1%3A` in this line?
1396641131,5439,DmitriyLewen,2023-11-17T03:12:15Z,"looks like purl should contain [arch qualifier](https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#rpm):
https://github.com/aquasecurity/trivy/blob/214546427e76da21bbc61a5b70ec00d5b95f6d0b/pkg/sbom/cyclonedx/marshal_test.go#L388"
1396660395,5439,DmitriyLewen,2023-11-17T03:26:09Z,"Do we need this change?
We can just add `purl.NewPackageIdentifier(fileType, newPkg)`:
```
pkgs = append(pkgs, types.Package{
			ID:        lib.ID,
			Name:      lib.Name,
			Version:   lib.Version,
			Dev:       lib.Dev,
			FilePath:  libPath,
			Indirect:  lib.Indirect,
			Licenses:  licenses,
			DependsOn: deps[lib.ID],
			Locations: locs,
			Digest:    d,
                        Identifier = purl.NewPackageIdentifier(fileType, newPkg)
		})
```"
1396669181,5439,DmitriyLewen,2023-11-17T03:41:26Z,Do we need to use pointer?
1396670327,5439,DmitriyLewen,2023-11-17T03:44:08Z,"If i understand correctly - we will remove `PkgRef` later.
But why we remove it here?"
1396673891,5439,DmitriyLewen,2023-11-17T03:53:00Z,"If we can't build purl for package - we use UUID - https://github.com/aquasecurity/trivy/pull/5448

In this case we will skip this UUID.
Perhaps we need to add UUID as in `PkgIdentifier`?"
1396682801,5439,DmitriyLewen,2023-11-17T04:07:26Z,"Previous numbers should not be changed - https://protobuf.dev/programming-guides/proto3/#assigning
```suggestion
  PkgIdentifier identifier = 19;
  string arch    = 5;
```"
1396698237,5439,DmitriyLewen,2023-11-17T04:40:39Z,"i played with your changes and found that you run `purl.NewPackageIdentifier` for each detected line.
We need to call this function after package detection is complete."
1396842552,5439,juan131,2023-11-17T08:11:20Z,"That's a good question... It might be related with some weird encoding done at the function below:

- https://pkg.go.dev/github.com/package-url/packageurl-go@v0.1.2#PackageURL.ToString"
1396846978,5439,juan131,2023-11-17T08:16:22Z,"We can include the distro & arch information by providing a valid metadata in the line below (by ensuring this function receives it as an argument):
- https://github.com/aquasecurity/trivy/blob/b70cec904aee3bd187bce30565210feca6abdbb4/pkg/purl/purl.go#L203
But I wasn't able to find the way to have that info when the function is invoked, e.g.:
- https://github.com/aquasecurity/trivy/blob/b70cec904aee3bd187bce30565210feca6abdbb4/pkg/fanal/analyzer/pkg/dpkg/dpkg.go#L275"
1396849043,5439,juan131,2023-11-17T08:18:42Z,Please note `purl.NewPackageIdentifier` receives the package as second parameter
1396852919,5439,juan131,2023-11-17T08:22:46Z,"No. To be honest, I don't have a strong opinion about this. In terms of performance it depends on the size of the structs, these two reads can add more light on this topic:

- https://medium.com/a-journey-with-go/go-should-i-use-a-pointer-instead-of-a-copy-of-my-struct-44b43b104963
- https://stackoverflow.com/questions/24452323/whats-the-difference-between-pointer-and-value-in-struct

I usually prefer pointers because it's easier to determine if something is set or not: it's easier to do `foo != nil` than `foo != customType{}`"
1396854118,5439,juan131,2023-11-17T08:24:01Z,"good catch, reverting it"
1396858663,5439,juan131,2023-11-17T08:28:38Z,"I don't think UUIDs are valid to identify known vulnerabilities, at least I mainly find references to use pURL, CPE or SWID:

- https://owasp.org/www-project-web-security-testing-guide/latest/5-Reporting/02-Naming_Schemes
- https://cyclonedx.org/use-cases/#known-vulnerabilities"
1396866884,5439,juan131,2023-11-17T08:37:06Z,"done, see https://github.com/aquasecurity/trivy/pull/5439/commits/37a098c5b5d3c1396eb6d830cf70588b8b4b219c"
1396867051,5439,juan131,2023-11-17T08:37:16Z,"done, see https://github.com/aquasecurity/trivy/pull/5439/commits/37a098c5b5d3c1396eb6d830cf70588b8b4b219c"
1396874436,5439,juan131,2023-11-17T08:44:16Z,Do you mean after `parseApkInfo` is invoked? Or even after that?
1396978395,5439,DmitriyLewen,2023-11-17T09:28:57Z,"yep. I know about this decode(https://www.w3schools.com/tags/ref_urlencode.ASP).
But i missed first `1`.

after decoding - `pkg:rpm/openssl-libs@1:1.1.1k-4.el8`

But we should to move epoch to qualifiers - https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#rpm"
1396983674,5439,DmitriyLewen,2023-11-17T09:32:29Z,"but we don't have Metadata in pkg (apk, rpm, etc.) analyzers.

Perhaps we can just remove this condition:
https://github.com/aquasecurity/trivy/blob/214546427e76da21bbc61a5b70ec00d5b95f6d0b/pkg/purl/purl.go#L204

@knqyf263 do you remember why we need this condition?"
1396985497,5439,DmitriyLewen,2023-11-17T09:33:42Z,I missed it. Thanks for showing me this.
1396997613,5439,DmitriyLewen,2023-11-17T09:43:00Z,It looks like we can just create a function `func(i PkgIdentifier) Empty() bool`.
1397002496,5439,DmitriyLewen,2023-11-17T09:47:28Z,"we don't need to change purl/cpe.
I'm worried this might get confusing
Because `Layer` and `Digest` don't use pointers.
I think we should either use pointers for each structural field (Layer, Digest, PkgIdentifier) or not use them at all.
In this case I am for the second option"
1397004799,5439,DmitriyLewen,2023-11-17T09:49:18Z,"But we also add `PkgIdentifier` for `Package` structure.
This makes sense for users using `trivy fs -f json --list-all-pkgs` command.
"
1397009114,5439,DmitriyLewen,2023-11-17T09:52:35Z,"I think we can move this logic before adding `pkg` to `pkgs`:
https://github.com/aquasecurity/trivy/blob/214546427e76da21bbc61a5b70ec00d5b95f6d0b/pkg/fanal/analyzer/pkg/apk/apk.go#L66
https://github.com/aquasecurity/trivy/blob/214546427e76da21bbc61a5b70ec00d5b95f6d0b/pkg/fanal/analyzer/pkg/apk/apk.go#L118

"
1397009657,5439,DmitriyLewen,2023-11-17T09:53:03Z,Can you also check dpkg and rpm for same problem?
1397043157,5439,juan131,2023-11-17T10:22:11Z,IMHO that condition doesn't make much sense since `parseQualifier` isn't using `metadata`. Am I missing sth?
1397043969,5439,juan131,2023-11-17T10:22:53Z,done at https://github.com/aquasecurity/trivy/pull/5439/commits/add17e817d2f79c6bb0f0543e43a03f89e165c40
1397045223,5439,juan131,2023-11-17T10:23:57Z,"This can be addressed with the change below:
```diff
diff --git a/pkg/purl/purl.go b/pkg/purl/purl.go
index 774cd443..335d0907 100644
--- a/pkg/purl/purl.go
+++ b/pkg/purl/purl.go
@@ -215,11 +215,8 @@ func NewPackageIdentifier(target ftypes.TargetType, pkg ftypes.Package) ftypes.P

 // nolint: gocyclo
 func NewPackageURL(t ftypes.TargetType, metadata types.Metadata, pkg ftypes.Package) (*PackageURL, error) {
-       var qualifiers packageurl.Qualifiers
-       if metadata.OS != nil {
-               qualifiers = parseQualifier(pkg)
-               pkg.Epoch = 0 // we moved Epoch to qualifiers so we don't need it in version
-       }
+       qualifiers := parseQualifier(pkg)
+       pkg.Epoch = 0 // we moved Epoch to qualifiers so we don't need it in version

        ptype := purlType(t)
```"
1397141529,5439,juan131,2023-11-17T11:39:53Z,done at https://github.com/aquasecurity/trivy/pull/5439/commits/0cb4631731f24cef9f39bf8c5245826de59df005
1397142473,5439,juan131,2023-11-17T11:40:18Z,Tried this at https://github.com/aquasecurity/trivy/pull/5439/commits/1a80d34ace020fa80bec3aae8697dd8db6da539b
1397142911,5439,juan131,2023-11-17T11:40:33Z,Tried this at https://github.com/aquasecurity/trivy/pull/5439/commits/1a80d34ace020fa80bec3aae8697dd8db6da539b
1398641104,5439,DmitriyLewen,2023-11-20T04:02:31Z,"I also don't see the need for this condition.
Let's take a look at this after removing this."
1398667690,5439,DmitriyLewen,2023-11-20T05:07:04Z,Looks like we need to update this test
1398670876,5439,DmitriyLewen,2023-11-20T05:14:12Z,"We need to think about `Ref` field.
Perhaps we can mark it as deprecated and upgrade logic to use `PkgIdentifier`.

But it seems that this would be better done in another PR."
1398674432,5439,DmitriyLewen,2023-11-20T05:21:21Z,"If I remember correctly, I removed all cases where we could get `pkgURL != nil && pkgURL.Type == """"`.
we can remove `pkgURL.Type == """"` check."
1398675466,5439,DmitriyLewen,2023-11-20T05:23:32Z,"This function is tested indirectly.
Can we add small unit test for it?"
1399019654,5439,juan131,2023-11-20T10:53:22Z,done at https://github.com/aquasecurity/trivy/pull/5439/commits/5e72c5a95058110fdaeac484791abac7d35a288e
1399019749,5439,juan131,2023-11-20T10:53:26Z,done at https://github.com/aquasecurity/trivy/pull/5439/commits/5e72c5a95058110fdaeac484791abac7d35a288e
1399021738,5439,juan131,2023-11-20T10:55:03Z,Yup.. I added a comment at `pkg/types/vulnerability.go` mentioning that's to be deprecated but I took no further action.
1399025164,5439,juan131,2023-11-20T10:58:02Z,done at https://github.com/aquasecurity/trivy/pull/5439/commits/59b1198b98913b617257772c5233450ffe9e3b5c
1399034290,5439,juan131,2023-11-20T11:05:50Z,"I understand the use of the UUID within the SBOM doc since you can reference it but it doesn't add much value outside it, right? I think we should omit it."
1399982691,5439,DmitriyLewen,2023-11-21T03:21:53Z,"okay, that makes sense.
If we need it, we can always add it."
1399985634,5439,DmitriyLewen,2023-11-21T03:27:59Z,"If I remember correctly, we simply copy `Ref` from `Package` to `DetectedVulnerability`.
It looks more logical to add comment for parent (I mean the first element of this chain (`Package`)).

But I think the best way is to add a comment in both places."
1399996916,5439,DmitriyLewen,2023-11-21T03:51:02Z,"It is not possible:
https://github.com/aquasecurity/trivy/blob/c866f1c4e99ba0026fe9f632fbe97fc5d89165d1/pkg/purl/purl_test.go#L183-L189
"
1400001325,5439,DmitriyLewen,2023-11-21T04:01:05Z,"I don't think this makes sense.
We already tried to create purl in `analyzer`.

For SDPX  we can remove this and leave `packageURL == nil`. In this case we simply don't include purl to SPDX package:
https://github.com/aquasecurity/trivy/blob/c866f1c4e99ba0026fe9f632fbe97fc5d89165d1/pkg/sbom/spdx/marshal_test.go#L894-L903"
1400003389,5439,DmitriyLewen,2023-11-21T04:05:11Z,"Can you check case if we just remove this?
It looks like we will create UUIDs for packages without `pkg.Identifier`."
1400003821,5439,DmitriyLewen,2023-11-21T04:06:17Z,We don't seem to expect any changes in the desired results for this test.
1400160845,5439,juan131,2023-11-21T08:02:48Z,addressed at https://github.com/aquasecurity/trivy/pull/5439/commits/cdd281e1e8fc988cf747b8a94e734e548c4ee310
1400160889,5439,juan131,2023-11-21T08:02:50Z,addressed at https://github.com/aquasecurity/trivy/pull/5439/commits/cdd281e1e8fc988cf747b8a94e734e548c4ee310
1400160970,5439,juan131,2023-11-21T08:02:54Z,addressed at https://github.com/aquasecurity/trivy/pull/5439/commits/cdd281e1e8fc988cf747b8a94e734e548c4ee310
1400161176,5439,juan131,2023-11-21T08:03:06Z,addressed at https://github.com/aquasecurity/trivy/pull/5439/commits/cdd281e1e8fc988cf747b8a94e734e548c4ee310
1400330283,5439,juan131,2023-11-21T10:08:00Z,done at https://github.com/aquasecurity/trivy/pull/5439/commits/a777f50213bbaafa92cdba195ad419c6b8916274
1401421097,5439,knqyf263,2023-11-22T02:14:17Z,"We need the file path in BOM-Ref. While BOM-Ref must be unique, PURLs can conflict. This is another example where BOM-Ref is different from PURL."
1401422155,5439,knqyf263,2023-11-22T02:16:26Z,"Looks like the PURL is now wrong. The type should be `deb`.
https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#deb"
1401643537,5439,juan131,2023-11-22T08:00:53Z,"This is sth that @DmitriyLewen pointed out on this [previous conversation](https://github.com/aquasecurity/trivy/pull/5439#discussion_r1396846978) but the problem is that we don't have the [Metadata](https://github.com/aquasecurity/trivy/blob/main/pkg/types/report.go#L26-L36) info in pkg (apk, rpm, etc.) analyzers.

After I moved the pURLs generation to the ""analysis"" part so `PkgIdentifier` is also part of the `Package` type per your suggestion, I was unable to find a way to obtain it. This is the reason why [NewPackageIdentifier](https://github.com/aquasecurity/trivy/blob/8141d33e38d8a6385d5a1eebd153749feeb8dbc6/pkg/purl/purl.go#L201-L214) isn't receiving any metadata argument.

I'd appreciate help on this because I don't really know how to achieve it."
1401676669,5439,juan131,2023-11-22T08:31:16Z,fixed at https://github.com/aquasecurity/trivy/pull/5439/commits/4a83a34af3e1ab3ade1380ee21ac74b8f59306a9
1402916545,5439,DmitriyLewen,2023-11-23T04:55:58Z,"We can move logic to creating purl's for pkg managers (dpg, rpm, apk) to [handler](https://github.com/aquasecurity/trivy/tree/main/pkg/fanal/handler).

This will allow us to create simpler code (we build purl in 1 place for all pkgs, instead of collecting purl for each package separately).
Also we will have info about OS."
1403293720,5439,juan131,2023-11-23T12:03:23Z,"@DmitriyLewen proposal implemented at https://github.com/aquasecurity/trivy/pull/5439/commits/015e9a5238f92b4afa02526bb6ab37b15e4c4812 

This proposal doesn't moves entirely the pkg identifier generation to handler but overwrites the work done by pkg managers when it's possible. This way, we also have pkg identifiers in distroless & similar images that may use pkg managers without an actual OS."
1403575496,5439,juan131,2023-11-23T16:19:31Z,I'd appreciate if you could re-generate amd64 golden images by the way.
1403919712,5439,DmitriyLewen,2023-11-24T04:08:53Z,"But this golden file still has wrong purl:
https://github.com/aquasecurity/trivy/blob/bc2e8d62c3871e2f7a7be7225d08e7c257db5197/integration/testdata/fluentd-multiple-lockfiles.cdx.json.golden#L54

Also i left some comments below"
1403919753,5439,DmitriyLewen,2023-11-24T04:08:57Z,I think it is better to use separate package.
1403920968,5439,DmitriyLewen,2023-11-24T04:12:24Z,"`result` and `blob` are pointers.
But if i remember corerctly - we only need to change `blob`
https://github.com/aquasecurity/trivy/blob/ad977a4256920d6269e84c82e4f42bbe244a2c5a/pkg/fanal/handler/sysfile/filter.go#L99-L102"
1403921750,5439,DmitriyLewen,2023-11-24T04:14:41Z,"> I'd appreciate if you could re-generate amd64 golden images by the way.

I will do that after we finish with handler logic."
1404240540,5439,juan131,2023-11-24T11:15:41Z,Is the fluentd image used to generate `trivy/integration/testdata/fluentd-multiple-lockfiles.cdx.json.golden` distroless?
1404240782,5439,juan131,2023-11-24T11:15:57Z,done at https://github.com/aquasecurity/trivy/pull/5439/commits/9a162b2d6031e362fad8a5b4ba493bbb65706984
1404240834,5439,juan131,2023-11-24T11:16:00Z,done at https://github.com/aquasecurity/trivy/pull/5439/commits/9a162b2d6031e362fad8a5b4ba493bbb65706984
1411571190,5439,DmitriyLewen,2023-12-01T03:53:46Z,"Sorry for delay.
We use `testdata/fixtures/images/fluentd-multiple-lockfiles.tar.gz` image:
https://github.com/aquasecurity/trivy/blob/b5874e3ad38e77ac86eedd7a65785b2933f3685f/integration/client_server_test.go#L409-L416"
1411572346,5439,DmitriyLewen,2023-12-01T03:56:29Z,"```suggestion
```"
1411573187,5439,DmitriyLewen,2023-12-01T03:58:34Z,"This name can be confusing.

maybe something like `ospkgid`?"
1411574928,5439,DmitriyLewen,2023-12-01T04:01:31Z,"I think we need to mode this function to new handler.
`purl` package generates purls, but it shouldn't overwrite fanal structure."
1411794899,5439,juan131,2023-12-01T08:54:25Z,"I've trying to figure out why it uses `pkg:dpkg` instead of `pkg:deb/debian`. To do so, I introduced the log below in my branch:

```diff
diff --git a/pkg/fanal/handler/ospkgid/ospkgid.go b/pkg/fanal/handler/ospkgid/ospkgid.go
index 991abadb..7beb0db1 100644
--- a/pkg/fanal/handler/ospkgid/ospkgid.go
+++ b/pkg/fanal/handler/ospkgid/ospkgid.go
@@ -27,6 +29,7 @@ func newSystemPackagesPostHandler(artifact.Option) (handler.PostHandler, error)
 // metadata info since they were generated in pkg (apk, rpm, etc.) analyzers
 func (h systemPackagesPostHandler) Handle(_ context.Context, _ *analyzer.AnalysisResult, blob *types.BlobInfo) error {
        if blob != nil && len(blob.PackageInfos) > 0 {
+               log.Logger.Info(fmt.Sprintf(""Blob with %s diff ID has OS family: %s"", blob.DiffID, blob.OS.Family))
                blob.PackageInfos = overwritePkgIdentifiers(blob.PackageInfos, blob.OS)
        }
```

As we can see below:

```bash
INFO	Blob with sha256:831c5620387fb9efec59fc82a42b948546c6be601e3ab34a87108ecf852aa15f diff ID has OS family: debian
INFO	Blob with sha256:75e43d55939745950bc3f8fad56c5834617c4339f0f54755e69a0dd5372624e9 diff ID has OS family:
```

The scanner only recognizes OS family in one of the layers containing packages info from Fluentd image. Therefore, the packages detected in the other layer are not adapted with the right PURL. I need further advice on how to address this."
1411795414,5439,juan131,2023-12-01T08:54:54Z,fixed at https://github.com/aquasecurity/trivy/pull/5439/commits/c819917d734dacb4067925fe85bfaed01b228b4c
1411795542,5439,juan131,2023-12-01T08:55:01Z,fixed at https://github.com/aquasecurity/trivy/pull/5439/commits/c819917d734dacb4067925fe85bfaed01b228b4c
1411795681,5439,juan131,2023-12-01T08:55:08Z,fixed at https://github.com/aquasecurity/trivy/pull/5439/commits/c819917d734dacb4067925fe85bfaed01b228b4c
1413471626,5439,DmitriyLewen,2023-12-04T07:39:36Z,"hm... right.

Take a look at this feature for merging packages, licenses, secrets, etc. from all layers:
https://github.com/aquasecurity/trivy/blob/aedbd85d6e3f3fa26ccf47827cfa9aacf1c7c834/pkg/fanal/applier/docker.go#L89
"
1414111787,5439,juan131,2023-12-04T15:54:43Z,Thanks @DmitriyLewen ! This inspired me to address the issue in this commit: https://github.com/aquasecurity/trivy/pull/5439/commits/052555ccc0a0d2bd9393779861ba08327dabec2e
1414880912,5439,DmitriyLewen,2023-12-05T04:58:18Z,hm... why we got new target? 
1414881571,5439,DmitriyLewen,2023-12-05T04:59:38Z,same
1414894031,5439,DmitriyLewen,2023-12-05T05:19:00Z,"I'm not sure if one layer should affect another layer before saving to cache.
I can't think of an example right now, but my intuition tells me we don't need to do this.

I think it's better to update info after we take all layers from cache.
@knqyf263 can you share your opinion if you have time?"
1414894791,5439,DmitriyLewen,2023-12-05T05:20:16Z,Perhaps this is system file and we didn't remove it.
1414991653,5439,juan131,2023-12-05T07:32:59Z,"No problem on that, we can keep pushing the original layer to the cache by adding this small change:
```diff
diff --git a/pkg/fanal/artifact/image/image.go b/pkg/fanal/artifact/image/image.go
index b9775a4d..880e42e3 100644
--- a/pkg/fanal/artifact/image/image.go
+++ b/pkg/fanal/artifact/image/image.go
@@ -241,8 +241,9 @@ func (a Artifact) inspect(ctx context.Context, missingImage string, layerKeys, b

        p2 := parallel.NewPipeline(a.artifactOption.Parallel, false, layers, func(ctx context.Context, layer Layer) (Layer, error) {
                // Call post handlers to modify layer info
-               layer.Info.OS.Merge(osFound)
-               if err := a.handlerManager.PostHandle(ctx, nil, &layer.Info); err != nil {
+               layerInfo := layer.Info
+               layerInfo.OS.Merge(osFound)
+               if err := a.handlerManager.PostHandle(ctx, nil, &layerInfo); err != nil {
                        return Layer{}, xerrors.Errorf(""post handler error: %w"", err)
                }
```"
1415046725,5439,juan131,2023-12-05T07:53:43Z,"Honestly, I don't know how this appeared here but I don't see how it can be related to my changes."
1423401825,5439,DmitriyLewen,2023-12-12T04:54:38Z,"I checked this case.
This problem seems to occur because `result` is nil:
https://github.com/aquasecurity/trivy/blob/5704a8fda1f86f7f16d18450f7849dd0c1044e28/pkg/fanal/artifact/image/image.go#L245-L247
Handlers don't work"
1423464277,5439,DmitriyLewen,2023-12-12T06:10:34Z,"I thought about this case and found 1 more way.
I made these changes in another branch (I did not update client/server mode and SBOM) – https://github.com/DmitriyLewen/trivy/commit/20a889290eeae04c2b97e681c9ede385a488401d
I think this way is easier.

We add purl for OS packages when filling out `layer` field for OS packages:
https://github.com/DmitriyLewen/trivy/blob/20a889290eeae04c2b97e681c9ede385a488401d/pkg/fanal/applier/docker.go#L218-L219  

@juan131 Can you take a look?
"
1423467929,5439,DmitriyLewen,2023-12-12T06:14:14Z,1 more possible way - https://github.com/aquasecurity/trivy/pull/5439#discussion_r1423464277
1423810140,5439,juan131,2023-12-12T10:44:03Z,done at https://github.com/aquasecurity/trivy/pull/5439/commits/d2222197d294178711b19d065aaebaf976b73b37
1423810244,5439,juan131,2023-12-12T10:44:10Z,done at https://github.com/aquasecurity/trivy/pull/5439/commits/d2222197d294178711b19d065aaebaf976b73b37
1423810431,5439,juan131,2023-12-12T10:44:20Z,applied your suggestion at https://github.com/aquasecurity/trivy/pull/5439/commits/d2222197d294178711b19d065aaebaf976b73b37
1424958004,5439,DmitriyLewen,2023-12-13T07:38:46Z,"This purl is broken. But this problem is not related to this PR.
Created #5783 to fix this."
1424986992,5439,DmitriyLewen,2023-12-13T08:09:38Z,"We do this when merge layers.
It doesn't make sense.
"
1424987858,5439,DmitriyLewen,2023-12-13T08:10:28Z,same for `dpkg` and `rpm`
1424991491,5439,DmitriyLewen,2023-12-13T08:14:10Z,Use the correct purl row here.
1424992253,5439,DmitriyLewen,2023-12-13T08:15:01Z,same for all inputs in this test file.
1424993946,5439,DmitriyLewen,2023-12-13T08:16:43Z,as for image test - correct purls in this test file.
1424994658,5439,DmitriyLewen,2023-12-13T08:17:28Z,same
1424996086,5439,DmitriyLewen,2023-12-13T08:18:53Z,same
1425010064,5439,DmitriyLewen,2023-12-13T08:31:53Z,"We need to add logic for `apk` from imgConf - https://github.com/aquasecurity/trivy/tree/main/pkg/fanal/analyzer/imgconf/apk

Let me time think about this."
1425010614,5439,DmitriyLewen,2023-12-13T08:32:21Z,Do we need these changes?
1425011501,5439,DmitriyLewen,2023-12-13T08:33:13Z,looks like these changes from previous solution.
1425013352,5439,DmitriyLewen,2023-12-13T08:34:52Z,remove this?
1425021789,5439,DmitriyLewen,2023-12-13T08:39:54Z,#5784
1425195743,5439,juan131,2023-12-13T11:03:50Z,done at https://github.com/aquasecurity/trivy/pull/5439/commits/19fbf7b6f7d528e44d1cf720f78727c2956b4e27
1425195963,5439,juan131,2023-12-13T11:04:01Z,done at https://github.com/aquasecurity/trivy/pull/5439/commits/19fbf7b6f7d528e44d1cf720f78727c2956b4e27
1425196134,5439,juan131,2023-12-13T11:04:07Z,done at https://github.com/aquasecurity/trivy/pull/5439/commits/19fbf7b6f7d528e44d1cf720f78727c2956b4e27
1425196369,5439,juan131,2023-12-13T11:04:18Z,done at https://github.com/aquasecurity/trivy/pull/5439/commits/19fbf7b6f7d528e44d1cf720f78727c2956b4e27
1425196515,5439,juan131,2023-12-13T11:04:24Z,done at https://github.com/aquasecurity/trivy/pull/5439/commits/19fbf7b6f7d528e44d1cf720f78727c2956b4e27
1425196657,5439,juan131,2023-12-13T11:04:29Z,done at https://github.com/aquasecurity/trivy/pull/5439/commits/19fbf7b6f7d528e44d1cf720f78727c2956b4e27
1425196881,5439,juan131,2023-12-13T11:04:36Z,done at https://github.com/aquasecurity/trivy/pull/5439/commits/19fbf7b6f7d528e44d1cf720f78727c2956b4e27
1425196995,5439,juan131,2023-12-13T11:04:42Z,done at https://github.com/aquasecurity/trivy/pull/5439/commits/19fbf7b6f7d528e44d1cf720f78727c2956b4e27
1425197312,5439,juan131,2023-12-13T11:04:58Z,Thanks
1425374603,5439,juan131,2023-12-13T13:43:21Z,done at https://github.com/aquasecurity/trivy/pull/5439/commits/fe4ce6cc1b58a47d6b74b31b6c108001617bd821
1426234244,5439,DmitriyLewen,2023-12-14T06:35:54Z,"All previous packages are retained.
```bash
➜  cat ./pkg/fanal/test/integration/testdata/goldens/vuln-image1.2.3.expectedpkgsfromcmds.golden | grep '""Name""\|""Version""' | sort > new.txt
➜  cat ./pkg/fanal/test/integration/testdata/goldens/vuln-image1.2.3.expectedpkgsfromcmds.golden | grep '""Name""\|""Version""' | sort > old.txt ## taken from the main branch
➜  diff new.txt old.txt
➜  echo $?
0
```"
1426351464,5439,juan131,2023-12-14T07:44:24Z,awesome!
1426351686,5439,juan131,2023-12-14T07:44:40Z,done at https://github.com/aquasecurity/trivy/pull/5439/commits/f96248bed003c2526e644eb89cc369bf3e4f0279
1821325001,7732,simar7,2024-10-29T18:07:24Z,`scanner engine but is lacking relevant security information needed to make security detections and recommendations. ` we repeat this in the air gap doc as well. Is this intentional?
1821326448,7732,simar7,2024-10-29T18:08:35Z,"```suggestion
The Checks Database registry location option does not support fallback through multiple options. This is because in case of a failure pulling the checks-db, Trivy will use the embedded checks as a fallback.
```"
1821328368,7732,simar7,2024-10-29T18:10:10Z,"I would remove specific versions from this because they will get out of date easily. Already the check-db is at default tag of 1.

```suggestion
    When pulling `trivy-db` or `trivy-java-db`, if image tag is not specified, Trivy defaults to the db schema number instead of the `latest` tag.
```"
1821331350,7732,simar7,2024-10-29T18:12:39Z,"```suggestion
Then tell Trivy to use the local VEX Repository:
```"
1821332473,7732,simar7,2024-10-29T18:13:36Z,"comma splice
```suggestion
For example, we if we scan a Java application, we copy the `trivy-db` and `trivy-java-db` databases to our local registry and tell Trivy to use them. In this case we also need to turn off Trivy's [Java scanner external service](../coverage/language/java.md) with the `--offline-scan` flag:
```"
1821342869,7732,simar7,2024-10-29T18:22:12Z,"```suggestion
!!! note
```
<img width=""737"" alt=""image"" src=""https://github.com/user-attachments/assets/7e24e9c0-1654-4af7-99d5-92828fde3150"">
"
1821356375,7732,simar7,2024-10-29T18:33:15Z,"formatting
```suggestion
Trivy is an open source project that relies on public free infrastructure. In case of extreme load, you may encounter rate limiting when Trivy attempts to update its databases. If you are facing rate-limiting issues:

```"
1821356896,7732,simar7,2024-10-29T18:33:40Z,"```suggestion
    Setting the repository location flags override the default values which include the official db locations. In case you want to preserve the default locations, you should include them in the list the you set as repository locations.
```"
1821357708,7732,simar7,2024-10-29T18:34:23Z,"```suggestion
`trivy-java-db` | `application/vnd.aquasec.trivy.javadb.layer.v1.tar+gzip` | <https://github.com/aquasecurity/trivy-java-db/pkgs/container/trivy-java-db>
```"
1821359289,7732,simar7,2024-10-29T18:35:42Z,"You can also add the checks db from https://github.com/aquasecurity/trivy-checks/pkgs/container/trivy-checks 

`""mediaType"": ""application/vnd.oci.image.manifest.v1+json""`"
1821366363,7732,simar7,2024-10-29T18:41:39Z,"fixing table borders

```suggestion
| database                                                         | location | protocol                                                                           | hosts                                                                      |
|------------------------------------------------------------------|----------|------------------------------------------------------------------------------------|----------------------------------------------------------------------------|
| `trivy-db`</li><li>`trivy-java-db`</li><li>`checks-db`</li></ul> | GHCR     | [OCI Distribution](https://github.com/opencontainers/distribution-spec) over HTTPS | <ul><li>`ghcr.io`</li><li>`pkg-containers.githubusercontent.com`</li></ul> |
| `vexhub`                                                         | GitHub   | Git over HTTPS                                                                     | <ul><li>`api.github.com`</li><li>`codeload.github.com`</li></ul>           |


```"
1821366981,7732,simar7,2024-10-29T18:42:07Z,Should we separate out the three DBs into their own rows?
1822121564,7732,itaysk,2024-10-30T08:34:35Z,I thought it's worth reintroducing the motivation since someone might be reading one doc and not the other. I you think it's unnesessary I can remove the intro from the air gap doc.
1822129367,7732,itaysk,2024-10-30T08:40:23Z,"actually I don't like adding extra spaces and dashes in markdown, it makes editing very annoying"
1824017702,7732,nikpivkin,2024-10-31T07:44:53Z,Should be `ghcr.io/aquasecurity/trivy-checks` here?
1824019171,7732,nikpivkin,2024-10-31T07:45:53Z,Why are some images with tags and some without?
1824025903,7732,nikpivkin,2024-10-31T07:51:20Z,The database will be loaded from the next repository only in case of a temporary error. (429 status and some 5xx) https://github.com/aquasecurity/trivy/pull/7605#discussion_r1780802178
1824037010,7732,itaysk,2024-10-31T08:02:58Z,"it's mentioned here generally and more detailed later in the flags documentation. but ok, added here too"
1824134670,7732,knqyf263,2024-10-31T09:23:05Z,"```suggestion
VEX Hub | `vex-hub` | VEX statements | Used only in [VEX Repository is enabled](../supply-chain/vex/repo.md) in vulnerability scanning.
```"
1824136258,7732,knqyf263,2024-10-31T09:24:24Z,"trivy-java-db is not used for POM scanning, and also needed for SBOM.

```suggestion
Java DB | `trivy-java-db` | Index of Java artifacts and their hash digest | used to identify Java artifacts only in [JAR scanning](../coverage/language/java.md)
```"
1824139112,7732,knqyf263,2024-10-31T09:26:29Z,Shouldn't we mention which one is the default?
1824141840,7732,knqyf263,2024-10-31T09:28:25Z,"I think it's more straightforward to aggregate them by artifacts so users can understand which address they can use for secondary.

- trivy-db
  - ghcr.io/aquasecurity/trivy-db (default)
  - aquasec/trivy-db
  - public.ecr.aws/aquasecurity/trivy-db
- trivy-java-db
  - ghcr.io/aquasecurity/trivy-java-db (default)
  - ...
--


<br class=""Apple-interchange-newline"">"
1824144313,7732,knqyf263,2024-10-31T09:30:22Z,"It's repeated.

```suggestion
Trivy will attempt to pull images from the official registries in the order specified. In case of a transient errors (e.g. status 429 or 5xx), Trivy will fall back to alternative registries.  
```"
1824145174,7732,knqyf263,2024-10-31T09:31:03Z,"We call it ""checks bundle"" in all other places. Do we want to rename it officially?"
1824146572,7732,knqyf263,2024-10-31T09:32:09Z,"The git protocol is not used for VEX repositories.

```suggestion
| `vexhub`| GitHub | HTTPS | <ul><li>`api.github.com`</li><li>`codeload.github.com`</li></ul>
```"
1824147744,7732,knqyf263,2024-10-31T09:33:02Z,Adding a  link to the page about self-hosting?
1824149421,7732,knqyf263,2024-10-31T09:34:28Z,"```suggestion
The flags accepts multiple values, which can be used to specify multiple alternative repository locations. See [Automatic fallback](#automatic-fallback) for details.
```"
1824151665,7732,knqyf263,2024-10-31T09:36:11Z,"A comma also works, but the repeated flags may be easier to understand the intention.

```suggestion
trivy image --db-repository my.registry.local/trivy-db --db-repository registry.gitlab.com/gitlab-org/security-products/dependencies/trivy-db alpine
```"
1824296252,7732,itaysk,2024-10-31T11:28:10Z,"I thought that the authoritative section is this one, which describes all the db flags, and the db locations section on top should point here, not the other way around. "
1824298409,7732,itaysk,2024-10-31T11:30:13Z,I'm fine with it.
1824301936,7732,itaysk,2024-10-31T11:33:46Z,"I'm fine with making the change, but just thinking users might have a mirror preference based on their infrastructure, for example an AWS customer would probably prefer ECR for all of the images."
1824304998,7732,itaysk,2024-10-31T11:36:46Z,"I thought that all official repos should be used by default, in the order specified. but I realize this is not the case."
1824314762,7732,knqyf263,2024-10-31T11:46:23Z,"@simar7 I think you named it ""checks bundle."" What do you think?"
1825163703,7732,simar7,2024-10-31T21:06:09Z,Yeah checks bundle is good with me.
1825388091,7732,knqyf263,2024-11-01T03:25:54Z,"@itaysk is calling it ""checks database"" in this PR. We should be consistent in what we call it within the project. Either is fine for me.

- Checks Bundle
- Checks Database

Note we already have a flag `--checks-bundle-repository` and need to rename it to `--checks-db-repository` if we'll go with checks database.

```
      --checks-bundle-repository string   OCI registry URL to retrieve checks bundle from (default ""ghcr.io/aquasecurity/trivy-checks:1"")
```"
1832129641,7732,knqyf263,2024-11-07T06:33:21Z,"Need a newline

![CleanShot 2024-11-07 at 10 32 44](https://github.com/user-attachments/assets/b36e563f-9827-4d55-af97-48d2533a673f)


```suggestion
The following [Trivy Databases](../configuration/db.md) are packaged as OCI images:

- `trivy-db`
- `trivy-java-db`
- `trivy-checks`
```"
1832132852,7732,knqyf263,2024-11-07T06:37:20Z,Does Docker work for this purpose?
1832133236,7732,knqyf263,2024-11-07T06:37:48Z,I'd mention [crane](https://github.com/google/go-containerregistry/blob/main/cmd/crane/doc/crane.md) as we usually use it.
1832133778,7732,knqyf263,2024-11-07T06:38:31Z,"Need to add ""Self-Hosting Trivy's Databases"""
1832136875,7732,knqyf263,2024-11-07T06:42:32Z,"This page also explains network connectivity, but it's not the main content. This document is for those who want to run Trivy under the restricted network.
The title should be ""Advanced Network Scenarios,"" ""Restricted Networks,"" or something similar."
1832138699,7732,knqyf263,2024-11-07T06:44:46Z,"It's broken now. Need a tab.

![CleanShot 2024-11-07 at 10 44 34](https://github.com/user-attachments/assets/cb022c5e-8200-4dc8-afbb-f1469a84078c)
"
1832140803,7732,knqyf263,2024-11-07T06:47:23Z,"The first section is an artifact name ""Vulnerability & Java databases"", but this section is a scanner name. We should rename ""Vulnerability & Java databases"" to ""SBOM & Vulnerabiliity scanning"" or rename this to ""IaC checks"" for consistency."
1832142944,7732,knqyf263,2024-11-07T06:49:48Z,"If we use the term ""misconfiguration database"", shouldn't it be ""Embedded misconfiguration database""?"
1832143501,7732,knqyf263,2024-11-07T06:50:18Z,"ditto

```suggestion
Misconfigurations database is embedded in the Trivy binary (at build time), and will be used as a fallback if the external database is not available. This means that you can still scan for misconfigurations in an air-gapped environment using the database from the time of the Trivy release you are using.
```"
1832146441,7732,knqyf263,2024-11-07T06:53:45Z,"It's already described in ""Trivy's Databases"". IMO, we should link to the page rather than repeat repository locations."
1832148419,7732,knqyf263,2024-11-07T06:56:09Z,I don't think we will set all of them as the default repositories shortly. We should mark which one is the default for now.
1833188766,7732,itaysk,2024-11-07T18:44:21Z,"since the intro says ""The rest of this document details each resource's connectivity requirements and relevant configuration options."" I'll go with ""Misconfiguration Checks database"""
1833193676,7732,itaysk,2024-11-07T18:48:35Z,"my implicit thought process was the checks from the misconfiguration db are embedded as a workaround to avoid loading the db, but it's very semantic and doesn't really matter."
1833201072,7732,itaysk,2024-11-07T18:54:57Z,"my implicit thought process was that the this doc discusses all the network requirements and implications, so when discussing these dbs we need to mention where they are located (in addition to other network related info). In the DBs doc, I didn't intend to dive into network requirements, but I wanted to say that we push the dbs to several registries and are able to fallback between them. So there might be slight overlap, only the name of the images is repeated, but in different context that contribute the the doc's purpose. if we are removign one in favor of the other, then I'd need to move the related content with it, for example if I take your suggestion, I would need to move the protocol, hosts, and related info to the DB docs together with the names of images."
1833842493,7732,knqyf263,2024-11-08T07:39:44Z,">if we are removign one in favor of the other, then I'd need to move the related content with it, for example if I take your suggestion, I would need to move the protocol, hosts, and related info to the DB docs together with the names of images.

Can you elaborate on that? It makes sense that the overview is on the DB page and the details are on this page, but why do we have to move everything?"
1833848784,7732,knqyf263,2024-11-08T07:45:32Z,"I think we should define terms regarding misconfigurations. What is the misconfiguration database? Is it pointing to the bundle.tar.gz? After extracting it, do we call it checks? Embedded one is not archived, so we call it checks?

I don't have an opinion, but it would be a good idea to define the terminology and share it within the project.
@simar7 @nikpivkin 
"
1834738823,7732,itaysk,2024-11-08T16:53:46Z,I think I misunderstood you earlier. I made the change that I think you suggested
1835115149,7732,simar7,2024-11-08T22:25:09Z,I'm also fine with either. 
1838780314,7732,wkoot,2024-11-12T21:13:59Z,"```suggestion
This document elaborates on the database management mechanism and its configuration options.
```"
1838781040,7732,wkoot,2024-11-12T21:14:38Z,"```suggestion
When you install Trivy, the installed artifact contains the scanner engine but is lacking relevant security information needed to make security detections and recommendations.
These so called ""databases"" are automatically fetched and maintained by Trivy as needed, so normally you shouldn't notice or worry about them.   
```"
1838783376,7732,wkoot,2024-11-12T21:16:42Z,What about the [vex-repo VEX Hub](https://aquasecurity.github.io/trivy/v0.57/docs/supply-chain/vex/repo/)?
1838785626,7732,wkoot,2024-11-12T21:18:51Z,"```suggestion
    This is not an exhaustive list of Trivy's external connectivity requirements.
    There are additional external resources which may be required by specific Trivy features.
    To learn about external connectivity requirements, see the [Advanced Network Scenarios](../advanced/air-gap.md).
```"
1838790985,7732,wkoot,2024-11-12T21:23:39Z,"This explanation is weird; ""the order"" is one single registry, while these ""alternative registries"" is not explained. If this refers to the locations named above, then it would make more sense to say that ghcr is the primary source and the other locations listed above would be attempted in case of transient errors."
1838792415,7732,wkoot,2024-11-12T21:24:51Z,"```suggestion
Note that the Misconfiguration DB registry location option does not support fallback through multiple options.
This is because in case of a failure pulling the Misconfiguration DB, Trivy will use the embedded checks as a fallback.
```"
1838794060,7732,wkoot,2024-11-12T21:26:24Z,Should VEX Repos not be treated in this section?
1838796808,7732,wkoot,2024-11-12T21:28:49Z,"It makes sense to explain what will happen in this case; explicitly state that the local registry is tried first, and if it does not respond, then the gitlab source is attempted"
1838798477,7732,wkoot,2024-11-12T21:30:28Z,"```suggestion
trivy image --skip-db-update --skip-java-db-update --skip-check-update alpine
```"
1838798566,7732,wkoot,2024-11-12T21:30:33Z,The `--offline-scan` option is not explained in this entire page
1838799188,7732,wkoot,2024-11-12T21:31:08Z,"```suggestion
You can configure Trivy to not attempt to download any or all database(s), using the flags:
```"
1838801012,7732,wkoot,2024-11-12T21:32:56Z,"The `alpine` image is used in two other examples, I think it's a nice example because it is a reasonable copy-paste tryout"
1838803284,7732,wkoot,2024-11-12T21:35:20Z,"Please explain the use case for the ""only update"" option. Does it fill a cache (if so, which cache) which can be used in a succession of scans (i.e. iterating over a set of containers without attempting updates all the time)?"
1838804730,7732,wkoot,2024-11-12T21:36:52Z,"It is strange that there is no entry for the `check` db, while the previous sections all mention it. Perhaps address the reason as to why it isn't a possible option"
1838807001,7732,wkoot,2024-11-12T21:39:05Z,"Strange that this is called `vuln-db`, but I guess it's because `db` would be too confusing. Likewise, the `checks-bundle` is always `checks` in the more lengthier parameters. Is there a separate ticket or discussion which treats the naming of these options?"
1838810564,7732,wkoot,2024-11-12T21:42:15Z,"```suggestion
##### Using ORAS
```"
1838810837,7732,wkoot,2024-11-12T21:42:31Z,"```suggestion
##### Using Trivy
```"
1838811830,7732,wkoot,2024-11-12T21:43:32Z,"Indentation below this block is probably incorrect, if so, the change should be undone"
1838812208,7732,wkoot,2024-11-12T21:43:57Z,"Indentation below this block is probably incorrect, if so, the change should be undone"
1838813678,7732,wkoot,2024-11-12T21:45:33Z,"This line makes more sense in the parent section, in an explanation around line 42 just after `surgically populate the Trivy cache directory with them.`"
1838814848,7732,wkoot,2024-11-12T21:46:41Z,"In `db.md`, this is referred to this as the `Misconfiguration DB`"
1838818073,7732,wkoot,2024-11-12T21:49:59Z,Then why is it treated in a separate section and not together with the vulnerability and java DBs?
1838819329,7732,wkoot,2024-11-12T21:51:18Z,Does the `--offline-scan` parameter affect these https requests?
1838820377,7732,wkoot,2024-11-12T21:52:28Z,"When the VEX Hub sources are overridden (e.g. with a local repo), are calls to github still made or will they be omitted?"
1838821944,7732,wkoot,2024-11-12T21:54:03Z,Is there a reference to a page that explains in which cases this might happen? It seems rather arbitrary although it would be important to know when implementing an air gapped environment
1838822965,7732,wkoot,2024-11-12T21:55:09Z,"```suggestion
The following external resources are required by Trivy for their respective features:
```"
1838826118,7732,wkoot,2024-11-12T21:58:19Z,"This seems weird to note in an air gapped or otherwise restricted network environment, it should be explained on `configuration/db.md`. Instead, it might be useful to address a restricted network environment which implements rate limiting (i.e. the local infrastructure instead of the public infrastructure)."
1850042174,7732,itaysk,2024-11-20T10:28:52Z,"I wanted to differentiate ""databases"" from ""external resources"". db is maintained by the trivy team and is fundemental to trivy operation. other external resources might be used by trivy like Maven central, which are not considered ""databases"". VEx repositories currently fall into the latter category I think"
1850043786,7732,itaysk,2024-11-20T10:30:00Z,the section was rewritten lmk if it's still unclear
1850044950,7732,itaysk,2024-11-20T10:30:48Z,see response to other similar comment 
1850136390,7732,itaysk,2024-11-20T11:19:24Z,"I think the example is self explanatory, especially since it the preceding example is exactly the same jsut with one flag, and is supposedly clear. this example just shows how specify multiple values"
1850141996,7732,itaysk,2024-11-20T11:23:47Z,"this section relates only to VEX Hub, not to custom VEX repositories. when using custom vex repositories there are no calls to GitHub, do you think that isn't clear?"
1850148317,7732,itaysk,2024-11-20T11:28:42Z,"No. I think the documentation is accurate about this, however confusing the name of offline-scan is. I have raised this issue here: https://github.com/aquasecurity/trivy/pull/7160"
1850149156,7732,itaysk,2024-11-20T11:29:25Z,the section now shows which external resource is used by which trivy feature
1850152284,7732,itaysk,2024-11-20T11:31:56Z,"the document was renamed to ""Connectivity and Network considerations"". It should be noted that all external resources can be unstable. In fact, we experienced stability issues with Maven central too in the past."
1855451208,7732,itaysk,2024-11-24T13:30:23Z,yes. updated
1855452049,7732,itaysk,2024-11-24T13:34:28Z,added. cc: @simar7 
1855452338,7732,itaysk,2024-11-24T13:36:07Z,agree. I also mention this in several previous issues (that we need to standardize the names of databases) cc @simar7 @knqyf263 . For now that state is accurate
1855452761,7732,itaysk,2024-11-24T13:38:25Z,"this moved to a new doc, but I checked that the tabs rendering works"
1855452804,7732,itaysk,2024-11-24T13:38:39Z,see other comment
1855453044,7732,itaysk,2024-11-24T13:39:53Z,I think it reads ok now in the self-hosting document
1855453417,7732,itaysk,2024-11-24T13:41:18Z,I didn't see this comment earlier but already merged them :)
1855930426,7732,knqyf263,2024-11-25T06:55:40Z,"```suggestion
Google Container Registry | <ul><li>`mirror.gcr.io`</li><li>`googlecode.l.googleusercontent.com`</li></ul> | [Google's IP addresses](https://support.google.com/a/answer/10026322?hl=en)
```"
1855930959,7732,knqyf263,2024-11-25T06:55:59Z,"```suggestion
GitHub Container Registry | <ul><li>`ghcr.io`</li><li>`pkg-containers.githubusercontent.com`</li></ul> | [GitHub's IP addresses](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/about-githubs-ip-addresses)
```"
1855931383,7732,knqyf263,2024-11-25T06:56:18Z,"They deprecated Container Registry and migrated to Artifact Registry.

```suggestion
Google Artifact Registry | <ul><li>`mirror.gcr.io`</li><li>`googlecode.l.googleusercontent.com`</li></ul> | [GitHub's IP addresses](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/about-githubs-ip-addresses)
```"
1855960786,7732,knqyf263,2024-11-25T07:19:43Z,Do you think it is self-hosting?
1856248338,7732,itaysk,2024-11-25T09:43:11Z,"yes. I initially made this doc only about OCI hosting like you suggested but I couldn't help thinking it's exactly the same use case and motivation as cache-population, just different technique, so I put them together. I also added other self-hosting advice for example for vexhub. 

so the current structure is like: 
1. Network connectivity doc - explains WHY trivy access the internet and documents ALL external resources details
2. self-hosting - explains HOW to run trivy without internet access (should address all external resources exaplained in 1)
3. DB doc - documents trivy's ""native"" databases (owned and maintained by Trivy and cruicial to it's functioning), and the flags related to DB management.

P.S I even considered making the self-hosting guide into tutorials"
1856386362,7732,knqyf263,2024-11-25T10:54:42Z,"![CleanShot 2024-11-25 at 14 45 14](https://github.com/user-attachments/assets/4d20e4f5-e3f7-4dd4-b17f-b6d1b804e454)

""Hosting"" sounds like accessing the data over the network. But I'll update it later as I want to re-add ""Air-Gapped Environment"". I saw many people using Trivy in air-gapped environments. We need a single page for them."
1856393983,7732,knqyf263,2024-11-25T10:59:45Z,"I don't think it's resolved. I want to make a decision on terminology excplicitly. Otherwise, ""check"", ""policy"" ""bundle"" and ""database"" will be mixed up in the document in the future. Also, as I mentioned, we need to rename the CLI flag of `--checks-bundle` if we change the term.
@simar7 @nikpivkin 

Also, there are several places calling it ""checks bundle"".
https://trivy.dev/v0.57/docs/scanner/misconfiguration/check/builtin/#checks-bundle
https://trivy.dev/v0.57/docs/references/modes/client-server/#architecture"
1856423997,7732,knqyf263,2024-11-25T11:14:22Z,"I discussed with AI and now would like to vote for ""bundle"" as below:

- check: Rego file
- built-in checks: Rego files from trivy-checks
- custom checks: user-defined Rego files
- checks bundle: bundle.tar.gz from trivy-checks
- embedded checks: Rego files embedded into the binary

But I just want to make them consistent in the project. Any others are also fine for me."
1856450172,7732,itaysk,2024-11-25T11:31:41Z,"I don't mind changing the name or explicitly call it ""air gapped"" but I do think hosting OCI image in private registry or manually populating the cache is 100% same use case, don't you think?"
1856468662,7732,itaysk,2024-11-25T11:45:35Z,"This terminology list makes sense to me.. But I think we already use it this way so not sure what is the change you are suggesting
1. policy -> check: was discussed before (I can find the issue)
2. built-in/custom/embedded: it only makes sense to contextualize when needed, I think we use this terminology this way already.
3. bundle: this is OPA terminology that I believe we borrowd which is fine, when applied to the distributable tar.gz.

I'm trying to clarify your feedback, is it against using the word ""database"" for checks? If so, the list doesn't address this case, what is your suggstion?"
1856507303,7732,knqyf263,2024-11-25T12:09:08Z,"Yes, I believe this is how we use terms now, but I wanted to ensure we're on the same page. And then, 

1. Do we all agree to add the term ""database""?
2. If so, how will we update the terminology?
"
1857234502,7732,simar7,2024-11-25T19:27:21Z,"@knqyf263 specially for the suggestion that you made above, I'm not sure if we need to change the terminology to use ""database"".

What you mentioned [here](https://github.com/aquasecurity/trivy/pull/7732#discussion_r1856423997) makes sense to me and is the current terminology that we agree on.

If so, is there any action item that still needs to addressed out of this?"
1857781669,7732,knqyf263,2024-11-26T05:11:50Z,"This PR introduces several new terms, like [Misconfigurations Database](https://github.com/aquasecurity/trivy/pull/7732/files#diff-f67fbe532cb6f906f5e2e056c318da6d0bc245f94c8cc1afbd7e72a61e2506b8R12), [Embedded misconfiguration database](https://github.com/aquasecurity/trivy/pull/7732/files#diff-f67fbe532cb6f906f5e2e056c318da6d0bc245f94c8cc1afbd7e72a61e2506b8R42) and [Checks Database](https://github.com/aquasecurity/trivy/pull/7732/files#diff-7ad34887030b99ec320003195c3655f39b642b88ca996022ba52ee273c075ffbR73). I want to clarify what it refers to and whether we agree on the term. If we prefer [the current terminology](https://github.com/aquasecurity/trivy/pull/7732#discussion_r1856423997), we should delete ""misconfigurations database"" or things like that from this PR."
1857884812,7732,itaysk,2024-11-26T06:39:39Z,how should we call it then?
1857938613,7732,knqyf263,2024-11-26T07:19:29Z,"I don't probably understand your suggestion. What is ""misconfigurations database""?

I thought it was trying to replace ""checks bundle"". According to the conclusion that we'd stay with the current terminology, we continue to use ""checks bundle"" instead of ""misconfigurations database"". But I'm confused with your question. Does ""misconfigurations database"" mean something new?"
1857996716,7732,itaysk,2024-11-26T08:04:35Z,"ok, I thought that we call all the Trivy's native sources of information - databases, regardless of their underlying technology or file format. I thought bundle is just a technical term we inharited from OPA to refer to the file format (specified by OPA), but we still call it Checks Database when referring to it's functionality in Trivy, so I didn't view those terms as mutually exclusive. I don't mind calling it Checks Bundle everywhere, if that's what you suggest (but I also think it's not benefiting the user experience). Do you also think we should remove it from the databases page?"
1858014322,7732,knqyf263,2024-11-26T08:16:32Z,">but we still call it Checks Database when referring to it's functionality in Trivy

Oh, I didn't know that. I thought ""Checks Database"" was introduced in this PR. Where do we use the term in Trivy? 

Since we already use ""Checks Bundle"" in the documentation and have a CLI flag ""--checks-bundle-repository"", it's user-facing. We should use either ""Checks Bundle"" or ""Checks Database"". If we go for ""Checks Database"", we should delete ""Checks Bundle"" and vice versa.

BTW, I'd propose calling the external data ""Scan Assets"" instead of ""Databases"". Then, it's natural to keep ""checks bundle"" under the page.
https://github.com/aquasecurity/trivy/pull/7996"
1858059550,7732,itaysk,2024-11-26T08:48:11Z,"> we still call it Checks Database ... Where do we use the term in Trivy?

I wrote that *I thought* we still call it Checks Database.. probably my misunderstanding

About Scan Assets, I think I went in this direction with the Connectivity considerations doc where I called these ""external resources"" to that are required by Trivy. but to clarify your intention - do you consider VEX Hub and/or maven central as scan assets? how would you refer to (for example) the VEX Hub file (not a database I suppose)?

About the Databases Page - it was originally created in order to document the relevant Trivy options. The options groups today include ""DB Options"" for just vulnerability DBs options, ""Vulnerabilities scanner"" which doesn't have any vulnerability DBs options, and ""Misconfigurations scanner"" options which includes checks and checks bundle related options. Do you suggest to change this as well? 
"
1858166226,7732,knqyf263,2024-11-26T09:55:05Z,">I wrote that I thought we still call it Checks Database.. probably my misunderstanding

Hmm. @simar7 and @nikpivkin should be more familiar with that. I've personally never seen that.

>do you consider VEX Hub and/or maven central as scan assets? how would you refer to (for example) the VEX Hub file (not a database I suppose)?

I defined ""Scan Assets"" as external data that Trivy downloads and uses during scanning.
https://github.com/aquasecurity/trivy/pull/7996/files#diff-cca74cb5f95c26518039a73ea36336112824080a13e672d69372083b5a4ad7f7R19

Therefore, VEX Hub is an asset as Trivy downloads it during scanning, but any API call, like Maven Central, is not an asset. We should also mention API calls on the network connectivity page, though.
However, I'd put this discussion aside. I'll open a follow-up PR to share my suggestion. We can discuss ""Checks Database"" or ""Checks Bundle"" here."
1858177034,7732,knqyf263,2024-11-26T10:01:38Z,"I found one use, but I think it's a mistake. I now understand why @itaysk used ""misconfiguration database"".
https://github.com/aquasecurity/trivy/blob/9169f6f37b2a0442a66e01530f7adf3086560118/docs/docs/advanced/air-gap.md#L38"
1858182061,7732,knqyf263,2024-11-26T10:04:47Z,"I thought ""misconfiguration database"" was a newly introduced term. @itaysk thought ""misconfigurations database"" was already used and just reused it.

Most pages call it a checks bundle. So, a checks bundle is the canonical term, IMO. I think we should comply with that."
1858189037,7732,itaysk,2024-11-26T10:09:19Z,"so next steps to merge this PR - 

1. change Checks DB to checks bundle
2. change Databases page to scan assets

does that make sense to you?"
1858194408,7732,knqyf263,2024-11-26T10:12:44Z,I'm fine with only the first item as the second item requires additional changes. Let me try the second one in a separate PR.
1858230301,7732,itaysk,2024-11-26T10:36:03Z,"ok. PTAL at https://github.com/aquasecurity/trivy/pull/7732/commits/b00e823fc2b15935d221cd36e3a7a22c82503816

IMO it now feels out of place in some cases in the context of other ""databases"" but if we will change the context then it might be ok."
1859110904,7732,simar7,2024-11-26T19:19:08Z,lgtm
502910984,679,knqyf263,2020-10-11T12:45:29Z,I think we can drop `errcheck`.
502911243,679,knqyf263,2020-10-11T12:48:06Z,I'm just curious which linter says this.
502911339,679,knqyf263,2020-10-11T12:49:10Z,Do we have to add `filepath.Clean` to all file-related functions? I'm feeling like it is meaningless.
502911549,679,rahul2393,2020-10-11T12:51:00Z,"@knqyf263 Read this
https://stackoverflow.com/questions/52320708/how-to-handle-gosec-linter-warning-potential-file-inclusion-via-variable
"
502911779,679,rahul2393,2020-10-11T12:52:16Z,https://stackoverflow.com/questions/59734706/how-to-resolve-consider-preallocating-prealloc-lint
502911936,679,rahul2393,2020-10-11T12:53:49Z,"I can drop it, but then we are enabling developers to ignore errors, I think we should keep it, at least the developer should log the error, it will help us if we miss errors while development. "
502912348,679,knqyf263,2020-10-11T12:57:23Z,"It is the case when we know the size in advance. In this case, we specify 0, so I think the performance is worse than before."
502912514,679,knqyf263,2020-10-11T12:59:04Z,"Yes, but in some cases, a path is hard-coded. It doesn't make sense to apply `filepath.Clean`. This should be done for user input only."
502912879,679,rahul2393,2020-10-11T13:02:11Z,"So if I don't clean it I will get linter errors, will this cause any issues?"
502913383,679,knqyf263,2020-10-11T13:06:15Z,"It is better to have it, but we have to add `// nolint: errcheck` to all `defer` and some tests. It's a bit bothering me. Do we have another way besides `nolint`?"
502922153,679,rahul2393,2020-10-11T14:23:36Z,"<img width=""1226"" alt=""Screenshot 2020-10-11 at 7 52 42 PM"" src=""https://user-images.githubusercontent.com/18293335/95681051-5672e800-0bfb-11eb-8792-8ffa5af6a563.png"">

I don't see performance difference in the Benchmark test with 1000 size, do you want me to run with bigger numbers?"
502922513,679,rahul2393,2020-10-11T14:26:43Z,"I already skipped the test and mock files in the linter config so this is not required in tests, Another way would be to have a common package for system functions and instead of calling file.Open and closing in defer we will call the custom package function to get file reader."
502927128,679,rahul2393,2020-10-11T15:03:32Z,"BTW, I checked performance with preallocating the base capacity and its better than not allocating
https://github.com/aquasecurity/trivy/pull/679/commits/179851c5c427bb6bdd187bac56ffb9ef35b3afd6
@knqyf263 "
503073155,679,knqyf263,2020-10-12T06:51:39Z,You can disable the linter. We don't have to follow all warnings from linters.
503081284,679,knqyf263,2020-10-12T07:09:50Z,"Ah, you didn't specify capacity. In that case, the performance should be the same as `var arr []int`. It means we don't have to change it. 

For example, `len(advisories)` is much greater than the length `vulns` requires. So, memory is wasted. 
https://github.com/aquasecurity/trivy/blob/179851c5c427bb6bdd187bac56ffb9ef35b3afd6/pkg/detector/library/advisory.go#L42

If the number of elements is the tens of thousands or millions and it takes a few minutes, it's better to specify the capacity beforehand. But in our case, it is only 10 or 100 and takes only in milliseconds. The performance may improve slightly, but it wastes memory (depending on the situation) and reduces readability. We don't have to think about performance for now and should keep it simple. I'm feeling like ""premature optimization is the root of all evil""."
503358102,679,rahul2393,2020-10-12T15:04:41Z,@knqyf263 I have added the exception for obvious cases and now we don't need to add nolint in general cases.
503358814,679,rahul2393,2020-10-12T15:05:50Z,"@knqyf263 Removed preallocate linter, reverted changes"
503358900,679,rahul2393,2020-10-12T15:06:00Z,@knqyf263 Done
503678709,679,knqyf263,2020-10-13T05:39:47Z,"Also, I found a warning from golangci-lint.
https://github.com/golangci/golangci-lint/blob/796a95880598d8fd0a8b6b638d2419d84418e59c/.golangci.example.yml#L272"
503685196,679,knqyf263,2020-10-13T05:59:52Z,"Can we disable only G304 as follows?
https://github.com/securego/gosec#selecting-rules"
503685782,679,rahul2393,2020-10-13T06:01:39Z,"@knqyf263 Already removed
https://github.com/aquasecurity/trivy/pull/679/files#diff-9917ddc9f1c3304218f7269265b746d997c5c0615478177b5fceecd33ef47cb5R54"
503687580,679,knqyf263,2020-10-13T06:06:52Z,"v1.29 looks a bit old.
https://github.com/golangci/golangci-lint/releases"
503688764,679,knqyf263,2020-10-13T06:10:13Z,"We've not introduced a new dependency, right? Why were some dependencies added? It's weird If you are using Go 1.15."
503689676,679,knqyf263,2020-10-13T06:12:38Z,You can exclude `integration/` for errcheck. The directory contains only test-related files.
503690284,679,knqyf263,2020-10-13T06:14:24Z,We have to ignore this error. An error always occurs the first time. This change breaks Trivy and Trivy won't launch forever. Could you add `nolint`?
503691447,679,knqyf263,2020-10-13T06:17:26Z,Is this necessary?
503692900,679,knqyf263,2020-10-13T06:21:15Z,The length of severity is only 5. We don't have to specify the capacity in advance.
503693147,679,knqyf263,2020-10-13T06:22:00Z,See a comment
503694905,679,knqyf263,2020-10-13T06:26:23Z,"Could you keep it as is? This script shows EOL dates to stdout and the error pollutes stdout. Or, it might work to show it in stderr."
503694941,679,knqyf263,2020-10-13T06:26:29Z,ditto
503696483,679,knqyf263,2020-10-13T06:30:14Z,"```suggestion
		if err := c.validate(dbType, metadata); err != nil {
			return false, err
		}
		return false, nil
```"
503696828,679,knqyf263,2020-10-13T06:31:03Z,"```suggestion
func (c Client) validate(dbType db.Type, metadata db.Metadata) error {
	if db.SchemaVersion != metadata.Version {
		log.Logger.Error(""The local DB is old and needs to be updated"")
		return xerrors.New(""--skip-update cannot be specified with the old DB"")
	} else if metadata.Type != dbType {
		if dbType == db.TypeFull {
			log.Logger.Error(""The local DB is a lightweight DB. You have to download a full DB"")
		} else {
			log.Logger.Error(""The local DB is a full DB. You have to download a lightweight DB"")
		}
		return xerrors.New(""--skip-update cannot be specified with the different schema DB"")
	}
	return nil
}
```"
503697037,679,knqyf263,2020-10-13T06:31:36Z,"```suggestion
// Download downloads the DB file
```"
503697315,679,knqyf263,2020-10-13T06:32:15Z,"```suggestion
		assert.NoError(t, err)
```"
503697879,679,knqyf263,2020-10-13T06:33:44Z,Which linter warns like this? And I'd like to know the detail.
503698462,679,knqyf263,2020-10-13T06:35:04Z,`default` must be slim in this case. This change doesn't make sense.
503700163,679,knqyf263,2020-10-13T06:39:13Z,"Could you add a comment that we can't find EOL of Photon OS?
https://github.com/vmware/photon/issues/1031"
503722380,679,knqyf263,2020-10-13T07:23:51Z,It may be unnecessary. You can remove it.
503723562,679,knqyf263,2020-10-13T07:25:49Z,What kind of error is this? Does a linter say `_` should not be used?
503724446,679,knqyf263,2020-10-13T07:27:19Z,This `filepath.Clean` is necessary.
503724502,679,knqyf263,2020-10-13T07:27:24Z,ditto
503728196,679,knqyf263,2020-10-13T07:32:43Z,"We already defined `Less`, so what if adding `Len` and `Swap` so that we can use `sort.Sort`?
https://yourbasic.org/golang/how-to-sort-in-go/#sort-custom-data-structures"
503729541,679,knqyf263,2020-10-13T07:34:58Z,"Such a change would increase the PR size. It makes review difficult. Can we disable the linter once, revert this change, add ToDo, and fix it in the dedicated PR?"
503729743,679,knqyf263,2020-10-13T07:35:20Z,ditto
503730656,679,knqyf263,2020-10-13T07:36:54Z,ditto
503730743,679,knqyf263,2020-10-13T07:37:04Z,ditto
503846645,679,rahul2393,2020-10-13T10:37:48Z,"Yes gocyclo linter was complaining about cyclomatic complexity of more than 10, I had to return to make it under 10"
503847753,679,rahul2393,2020-10-13T10:39:54Z,"Yes gocyclo linter was complaining about cyclomatic complexity of more than 10, I had to remove default and return early to make it under 10"
503848425,679,rahul2393,2020-10-13T10:41:05Z,"Yes linter says, import of types ""_"" should be defined in the main file or should contain comment."
503852778,679,rahul2393,2020-10-13T10:49:11Z,"<img width=""942"" alt=""Screenshot 2020-10-13 at 4 18 13 PM"" src=""https://user-images.githubusercontent.com/18293335/95851403-cdc98880-0d6f-11eb-8cd5-ec29304e1266.png"">
shadow: declaration of ""err"""
503885683,679,knqyf263,2020-10-13T11:48:52Z,"this shadow? if so, the module generates many false positives.
https://github.com/golang/tools/blob/065ed046f11a1059e9f135dc4d518cf34c84a53e/go/analysis/passes/shadow/shadow.go#L28-L29

It looks like this example disables `shadow`. But it's weird that `check-shadowing` is true...
https://github.com/golangci/golangci-lint/blob/796a95880598d8fd0a8b6b638d2419d84418e59c/.golangci.example.yml#L240-L241"
503892143,679,rahul2393,2020-10-13T12:00:01Z,Updated
503892247,679,rahul2393,2020-10-13T12:00:11Z,👍 
503894184,679,rahul2393,2020-10-13T12:03:24Z,"btw, I already declared fixedVersion will it work?"
503895230,679,rahul2393,2020-10-13T12:05:12Z,"<img width=""1231"" alt=""Screenshot 2020-10-13 at 5 13 53 PM"" src=""https://user-images.githubusercontent.com/18293335/95858246-695ff680-0d7a-11eb-9de9-a6b14725ff6e.png"">
"
504547886,679,knqyf263,2020-10-14T09:49:51Z,"```suggestion
    local-prefixes: github.com/aquasecurity/trivy
```"
504549521,679,knqyf263,2020-10-14T09:52:29Z,"Could you disable `shadow` and revert it? Or, can we disable `shadow` only for `err`?"
504549658,679,knqyf263,2020-10-14T09:52:41Z,ditto
504715263,679,knqyf263,2020-10-14T14:17:45Z,"Hmm... I prefer the previous one. If we follow the linter, `return xxx.NewScanner()` looks better."
505226763,679,rahul2393,2020-10-15T06:55:53Z,"It was for running the linter check in workflow here, reverted"
505234213,679,knqyf263,2020-10-15T07:01:37Z,"Doesn't it work as follow?
https://github.com/golangci/golangci-lint/blob/58234f055cd8a4ba71ce6dafb95d7fa665bc8d39/.golangci.example.yml#L242-L243"
505235826,679,knqyf263,2020-10-15T07:03:01Z,Reverted to rahul2393?
505276889,679,rahul2393,2020-10-15T07:39:14Z,"Ok, done, "
507664932,679,knqyf263,2020-10-19T11:14:47Z,"They are also `github.com/aquasecurity`, but look like a different group from L13-L18."
507666064,679,knqyf263,2020-10-19T11:16:58Z,Do we need these empty lines?
507666384,679,knqyf263,2020-10-19T11:17:35Z,"Also, I think we can merge it into the group in L12-"
507671160,679,rahul2393,2020-10-19T11:26:49Z,Done
507671231,679,rahul2393,2020-10-19T11:26:57Z,"No, removed"
508221338,679,knqyf263,2020-10-20T05:38:22Z,Could you group them?
508221422,679,knqyf263,2020-10-20T05:38:37Z,ditto
508221463,679,knqyf263,2020-10-20T05:38:47Z,ditto
508221558,679,knqyf263,2020-10-20T05:39:02Z,ditto
508221852,679,knqyf263,2020-10-20T05:39:43Z,same here
508223728,679,knqyf263,2020-10-20T05:45:37Z,"I'd like to know why `gocyclo` complains `default`. Is it only about `default`? Or, even if we remove `default` and add a new family, will `gocyclo` complain again?"
508223936,679,knqyf263,2020-10-20T05:46:09Z,grouping
508224136,679,knqyf263,2020-10-20T05:46:45Z,grouping
508224245,679,knqyf263,2020-10-20T05:47:04Z,ditto
508224332,679,knqyf263,2020-10-20T05:47:17Z,same
508233322,679,rahul2393,2020-10-20T06:13:42Z,"even if you replace the default with a different case, it will complain because by default cyclomatic complexity of 10, and for this function, default branch is adding up to 11"
508449247,679,knqyf263,2020-10-20T12:14:28Z,"So, removing `default` doesn't address the root issue. Let's consider it carefully later."
1615609126,6781,nikpivkin,2024-05-27T07:39:06Z,"```suggestion
To better understand the backporting procedure, let's walk through an example using the releases of v0.50.
```"
1624284348,6781,knqyf263,2024-06-03T11:49:10Z,I found that the backport PR title also needs to follow [the Conventional Commits](https://www.conventionalcommits.org/en/v1.0.0/) so Release Please can create release PRs. I changed the backport PR title to use the original one.
1624288868,6781,knqyf263,2024-06-03T11:53:04Z,"After testing for a while, I found it difficult to understand backported PRs without a label, so I've added one.

- PRs that we want to backport: `backport-to-release/v0.50`
- PRs created by the tool ""backport"": `backport`

CC: @simar7"
1624773827,6781,simar7,2024-06-03T16:51:29Z,"> PRs automatically backported: backport

What release would it backport to? Would it automatically pickup the patch or minor depending on (fix/chore/etc.) and (feat)?"
1625314904,6781,knqyf263,2024-06-04T04:10:20Z,"I've updated my comment. It's simple. If we label ""backport-to-release/v0.52"" to a PR, the tool ""backport"" will cherry-pick the commit from the PR in the main branch and create a new PR with label ""backport"" aginst the branch ""release/v0.52"". It's backporting from ""main"" to ""release/v0.52""."
1625568196,6781,DmitriyLewen,2024-06-04T08:17:56Z,"We will only process PRs with `backport-to-<release Branch>` tag.
This means that all necessary PRs will be caught by the `labeled` trigger, right?"
1625572751,6781,DmitriyLewen,2024-06-04T08:20:28Z,We will also see many similar errors for closed PRs - https://github.com/DmitriyLewen/trivy/actions/runs/9363126599/job/25773221826
1625586651,6781,DmitriyLewen,2024-06-04T08:29:17Z,"But we may want to use the following steps:
1. open PR
2. set `backport-to-<release Branch>` label
3. merge PR
4. run this action

In this case we will see error in p2 - https://github.com/DmitriyLewen/trivy/actions/runs/9363686619/job/25775003766"
1625592583,6781,DmitriyLewen,2024-06-04T08:32:02Z,Let's add one step before `Backport Action` to check label/`merge PR` to avoid an error (and just stop this action).
1625658299,6781,DmitriyLewen,2024-06-04T09:15:20Z,"We need to create new branch from release tag of `main` branch.
take a look the following example(https://github.com/DmitriyLewen/trivy/commits/release/v0.54/):
1. i pushed tag
2. i pushed commit (`test commit`)
3. after that i created `release/v0.54` branch. 
In this case patch will include this `test commit`."
1625667158,6781,DmitriyLewen,2024-06-04T09:21:34Z,"Is it possible to add options to return error for internal `sorenlouv/backport-github-action` errors?
e.g. we got error, but action finished successfully - https://github.com/DmitriyLewen/trivy/actions/runs/9364339038/job/25777130191#step:3:39"
1625672592,6781,DmitriyLewen,2024-06-04T09:25:25Z,"can we add note that we need to create PR for each fix?
e.g. I expected that i would mark (set label)) all needed for `patch` PRs -> backport would create one PR -> i would merge this PR"
1625725913,6781,knqyf263,2024-06-04T10:03:29Z,">We will also see many similar errors for closed PRs - https://github.com/DmitriyLewen/trivy/actions/runs/9363126599/job/25773221826

Oh, does the job fail if the PR doesn't have `backport-to-`?"
1625733376,6781,DmitriyLewen,2024-06-04T10:09:16Z,right
1625735159,6781,knqyf263,2024-06-04T10:10:32Z,"Ideally, we should create a branch here. What do you think?
https://github.com/aquasecurity/trivy/blob/8dd076a768d868599787dc644bde9380285e16c8/.github/workflows/release-please.yaml#L54-L65"
1625741201,6781,knqyf263,2024-06-04T10:15:26Z,"I didn't find such an option. But as for this specific case, we can use `commitConflicts: true`.
https://github.com/sorenlouv/backport/blob/main/docs/config-file-options.md#commitconflicts"
1625756244,6781,knqyf263,2024-06-04T10:27:07Z,"How about this?
https://github.com/aquasecurity/trivy/pull/6781/commits/824022ddea9f991a4e440709af1b6469b9dc72da"
1625761236,6781,DmitriyLewen,2024-06-04T10:29:25Z,"Yeah. It looks good to me.
We can create a branch for the next minor version in this/next step of this activity."
1625773222,6781,DmitriyLewen,2024-06-04T10:37:50Z,"It doesn't work - https://github.com/DmitriyLewen/trivy/actions/runs/9365596759
IIUC problem in `contains(github.event.pull_request.labels.*.name, 'backport-to-')` 
`github.event.pull_request.labels.*.name` will be `backport-to-release/v0.54 `
and `backport-to-release/v0.54 ` != `backport-to-`"
1625870106,6781,knqyf263,2024-06-04T11:58:17Z,Is there any way to apply `startsWith` to all labels in `if` statement?
1626866812,6781,DmitriyLewen,2024-06-05T03:20:29Z,"I didn't find way for this.

I thought we can [filter](https://docs.github.com/en/actions/learn-github-actions/expressions#object-filters) labels array (e.g. `github.event.pull_request.labels.*.name.backport-to*`, but filtering doesn't work for arrays...
https://github.com/DmitriyLewen/test-trivy-action/actions/runs/9377586782

Looks like we need to add 1 more `step` for this check."
1626953989,6781,knqyf263,2024-06-05T05:04:23Z,"Yes, I eventually added one more step.
https://github.com/aquasecurity/trivy/pull/6781/commits/ddfb29e7ca50f18034d9d593a9a555a912fcee7e

I confirmed it skipped steps.
https://github.com/knqyf263/trivy/actions/runs/9378428112/job/25821646991

Please test this change."
1626956108,6781,knqyf263,2024-06-05T05:06:33Z,I'll open another PR for that.
1626993641,6781,knqyf263,2024-06-05T05:43:29Z,Added https://github.com/aquasecurity/trivy/pull/6781/commits/72645dad3f30268d24f053ee513b322519fe1b72
1627026206,6781,knqyf263,2024-06-05T06:09:18Z,Added https://github.com/aquasecurity/trivy/pull/6781/commits/24f43ad929b98ba1382786b65df4446908ec4ea4
1627044352,6781,DmitriyLewen,2024-06-05T06:23:16Z,Looks like it works :+1:
1627055436,6781,knqyf263,2024-06-05T06:30:58Z,Thanks for confirming. I marked this conversation resolved.
1627056624,6781,DmitriyLewen,2024-06-05T06:31:51Z,"this doesn't work as we expected - https://github.com/DmitriyLewen/trivy/pull/82/files, https://github.com/DmitriyLewen/trivy/pull/85/files"
1627061385,6781,DmitriyLewen,2024-06-05T06:35:22Z,`commit Conflicts: true` includes these conflicts in code instead of returning error (https://github.com/DmitriyLewen/trivy/actions/runs/9379168342/job/25823651098)
1627091529,6781,knqyf263,2024-06-05T06:55:56Z,"Yes, it's expected."
1627092065,6781,knqyf263,2024-06-05T06:56:16Z,"You can see the document.

>When running backport on CI (aka in non-interactive mode) any commit conflicts will result in the backport being aborted. When commitConflicts: true even files with conflicts will be committed and a backport PR created. It is then up to a user to manually resolve the conflict, If auto-merge is enabled, this will be disabled for this PR specifically to avoid merging unresolved conflicts.

"
1627098106,6781,knqyf263,2024-06-05T07:00:07Z,"IMO, it's better to open a PR anyway and resolve conflicts on the PR rather than abort."
1627099542,6781,DmitriyLewen,2024-06-05T07:00:54Z,"It doesn't look very comfortable.
Can we move  table from  merge PR to the PR backport?
as here https://github.com/DmitriyLewen/trivy/pull/68#issuecomment-2146965089"
1627104838,6781,knqyf263,2024-06-05T07:04:12Z,">Backport failed because of merge conflicts

Does it show this error even with `commitConflicts: true`?"
1627109962,6781,DmitriyLewen,2024-06-05T07:07:33Z,"No. Backport just creates PR with  `<<<<< ` and `>>>>>` :
https://github.com/DmitriyLewen/trivy/actions/runs/9379290096/job/25823987233
https://github.com/DmitriyLewen/trivy/pull/85/files"
1627113723,6781,DmitriyLewen,2024-06-05T07:09:59Z,"> resolve conflicts on the PR

This makes sense, but GH doesn't mark it as `conflict` (see https://github.com/DmitriyLewen/trivy/pull/85).
We can only see the problem in `tests`.
So, to fix this: you need to pull this branch => manually update these changes => push these changes."
1627117430,6781,DmitriyLewen,2024-06-05T07:12:25Z,"before this it was better because Backport told which PR you need to merge before that PR:
https://github.com/DmitriyLewen/trivy/pull/74#issuecomment-2147003892"
1627132988,6781,knqyf263,2024-06-05T07:20:49Z,">This makes sense, but GH doesn't mark it as conflict (see https://github.com/DmitriyLewen/trivy/pull/85).

Yes, there is a risk of accidentally merging `<<<<<` and `>>>>>`, but I didn't find a good approach. Do you have any ideas? If `backport` aborts with conflicts (`commitConflicts: false`), it means we must manually create a backport PR with resolved conflicts.

- `commitConflicts: true`
    - pros:
        - No need to run `git cherry-pick` or `backport` locally
    - cons:
        - Risk of accidentally merging `>>>>>` as it is not treated as a conflict on GitHub
- `commitConflicts: false`
    - pros:
        - Low risk of accidentally merging `>>>>>` (although manual `git cherry-pick` may fail)
    - cons:
        - Need some manual work
            - `git cherry-pick` locally and resolve conflicts
            - Create a PR against `release/vX.Y`

Which is better?"
1627145906,6781,knqyf263,2024-06-05T07:28:40Z,Opened https://github.com/aquasecurity/trivy/pull/6859
1627147058,6781,DmitriyLewen,2024-06-05T07:29:18Z,"> git cherry-pick locally and resolve conflicts

Correct me if I'm wrong, but I think it's better to merge related (another) PR before  current PR to avoid conflict, no?"
1627153993,6781,knqyf263,2024-06-05T07:32:29Z,"Let's say we added big changes for feature enhancement. We cannot backport the PR. If the critical fix is based on the change, the conflict cannot be avoided, and we have to resolve it manually."
1627188521,6781,DmitriyLewen,2024-06-05T07:52:50Z,"Okay, `commitConflicts: true` looks better to me.

perhaps we can create `comment` that this PR contains a conflict?"
1627196171,6781,knqyf263,2024-06-05T07:57:23Z,">perhaps we can create comment that this PR contains a conflict?

It sounds like a good idea, but I didn't find the option.
https://github.com/sorenlouv/backport/blob/main/docs/config-file-options.md"
1627204867,6781,DmitriyLewen,2024-06-05T08:02:34Z,"Perhaps we need to check changes in the commit...

Linter should show  error about this, so let's just leave `commitConflicts: true` and get some experience with it.
If necessary, we will think about checking the commit to reduce risks"
1627208518,6781,knqyf263,2024-06-05T08:04:44Z,Hmm. It may be better to create our own backport tool.
1627221438,6781,DmitriyLewen,2024-06-05T08:12:36Z,"This takes time...

Let's try current version. `Test` workflow should protect us from mistakes"
1627527303,6781,knqyf263,2024-06-05T11:02:19Z,"I already started before seeing your comment 😄 
https://github.com/aquasecurity/trivy/pull/6781#issuecomment-2149450734"
1628771887,6781,DmitriyLewen,2024-06-06T04:51:27Z,"Can we add some ""protection"" so that only maintainers can run this workflow?"
1628772264,6781,DmitriyLewen,2024-06-06T04:52:11Z,What if we will work only with `release/vX.Y` branches?
1628778554,6781,DmitriyLewen,2024-06-06T05:03:21Z,"Do we need to upgrage this logic?
e.g. remove remote branch `$NEW_BRANCH` before creating that branch, or pull changes from `$BRANCH_NAME` if `$NEW_BRANCH` exists.

Example:

1. I merged pr1 and pr2 (with changes from pr1). (https://github.com/DmitriyLewen/trivy/pull/90 + https://github.com/DmitriyLewen/trivy/pull/91)
2. I ran the backport for pr2 by mistake and received a conflict warning. (https://github.com/DmitriyLewen/trivy/pull/92)
3. I ran backport for pr1 and merge this backport into `release/vX.Y` branch. (https://github.com/DmitriyLewen/trivy/pull/93)
4. But when i again try to run backport for pr2 - i get error - https://github.com/DmitriyLewen/trivy/actions/runs/9395256621/job/25874336185#step:5:25"
1628778966,6781,DmitriyLewen,2024-06-06T05:03:58Z,Can we use `@aqua-bot` for this comment?
1628782759,6781,knqyf263,2024-06-06T05:10:47Z,"`ORG_REPO_TOKEN` is a PAT for `aqua-bot`. The bot user will comment (I used my PAT in my fork).
https://github.com/aquasecurity/trivy/blob/84befc858fae88f4c4eafc4294f4975fb8c7d5ee/.github/workflows/backport.yaml#L37"
1628785065,6781,DmitriyLewen,2024-06-06T05:15:00Z,Got it! :+1: 
1628788710,6781,knqyf263,2024-06-06T05:20:56Z,"In that case, I think we should merge `release/vX.Y` into https://github.com/DmitriyLewen/trivy/pull/92 manually.

```
$ gh pr checkout 92
$ git merge release/vX.Y
... resolve conflicts ...
$ git merge --continue
$ git push
```

Or we can close https://github.com/DmitriyLewen/trivy/pull/92, delete the branch, and re-run backporting.

> pull changes from $BRANCH_NAME if $NEW_BRANCH exists.

I'm not sure if it's feasible. The conflicted changes are already committed. It sounds like we need to revert.

>remove remote branch $NEW_BRANCH before creating that branch

In this case, we need to force-push the branch. I'm a bit afraid of unexpected accidents (e.g. Important changes are overridden by force push)."
1628793326,6781,knqyf263,2024-06-06T05:27:01Z,done https://github.com/aquasecurity/trivy/pull/6781/commits/6f26de53abf5f232849ccf0605fa96f39a1c185d
1628799685,6781,DmitriyLewen,2024-06-06T05:35:32Z,"Okay, let's start with the manual work for cases like this.

We may update this later when we have more experience (if at all necessary)."
1628802552,6781,knqyf263,2024-06-06T05:40:01Z,Added https://github.com/aquasecurity/trivy/pull/6781/commits/4e10242800029ef4fed3a065d2e00b567f538cbe
1628803985,6781,knqyf263,2024-06-06T05:42:05Z,I'll add it to the document.
1628917806,6781,DmitriyLewen,2024-06-06T07:31:55Z,It works - https://github.com/DmitriyLewen/trivy/actions/runs/9396305676 + https://github.com/DmitriyLewen/trivy/pull/91#issuecomment-2151521072
1628919594,6781,DmitriyLewen,2024-06-06T07:33:24Z,"It works:
https://github.com/knqyf263/trivy/pull/64#issuecomment-2151574589 + https://github.com/knqyf263/trivy/actions/runs/9396727214"
1628966939,6781,knqyf263,2024-06-06T08:00:14Z,@DmitriyLewen Added https://github.com/aquasecurity/trivy/pull/6781/commits/e1820b441465da5f59710eafcd39b5087dc8cd2b. Please take another look.
1629060547,6781,DmitriyLewen,2024-06-06T08:50:56Z,lgtm
1403923925,5635,DmitriyLewen,2023-11-24T04:21:08Z,It looks like `git` didn't remove it after merging main branch.
1403924133,5635,DmitriyLewen,2023-11-24T04:21:48Z,"```suggestion
# Julia
```"
1403925032,5635,DmitriyLewen,2023-11-24T04:24:47Z,"Also you need to add this page here:
https://github.com/aquasecurity/trivy/blob/ad977a4256920d6269e84c82e4f42bbe244a2c5a/mkdocs.yml#L89-L102

Use `mage docs:serve` command to build local https://aquasecurity.github.io/trivy/"
1403925851,5635,DmitriyLewen,2023-11-24T04:26:54Z,"`[^1]` link doesn't work.
"
1403927223,5635,DmitriyLewen,2023-11-24T04:30:49Z,"We separate `pre-build` and `post-build` - https://aquasecurity.github.io/trivy/v0.47/docs/coverage/language/#supported-languages

`Manifest.toml` looks as lock file. Perhaps we can scan these files only in `fs` mode?"
1403928279,5635,DmitriyLewen,2023-11-24T04:33:36Z,"Do we need all these test cases?
We tested complex issues in go-dep-parser.
I think 4 tests will be enough:
- `Manifest.toml` + `Project.toml`
- only `Manifest.toml`
- there are no dependencies
- error "
1403929428,5635,DmitriyLewen,2023-11-24T04:36:55Z,"```suggestion
	case ftypes.Julia
```"
1403931784,5635,DmitriyLewen,2023-11-24T04:43:24Z,"i think it is better to use `pkg/fanal/analyzer/language/julia/pkgjl/pkgjl.go`
```suggestion
package pkgjl
```"
1403941514,5635,DmitriyLewen,2023-11-24T05:04:01Z,"We use only `Dependencies` field.
```suggestion
type Project struct {
	Dependencies map[string]string `toml:""deps""`
}
```"
1403941633,5635,DmitriyLewen,2023-11-24T05:04:19Z,"```suggestion
		sort.Sort(app.Libraries)
```"
1403944175,5635,DmitriyLewen,2023-11-24T05:08:19Z,"You will sort libs in PostAnalyze:
https://github.com/aquasecurity/trivy/blob/1024114621fd27472e7a3974175dbbaf697fee30/pkg/fanal/analyzer/language/julia/pkg/pkg.go#L88
```suggestion
	// Include only the packages we visited so that we don't include any deps from the [extras] section
	app.Libraries = visitedPkgs
```"
1403945535,5635,DmitriyLewen,2023-11-24T05:11:25Z,"All `go-dep-parser` tests use UUID without version for pkg.ID.
What am i missing?"
1403946030,5635,DmitriyLewen,2023-11-24T05:12:17Z,"looks like we can use `pkgIDs`
```suggestion
		// uuid is a direct dep since it's in the Project file. Search through Libraries to mark the matching one as a direct dep.
		if pkg, ok := pkgIDs[uuid]; ok {
			// Mark as a direct dependency
			pkg.Indirect = false
			visited[pkg.ID] = pkg
		}
```"
1406688537,5635,Octogonapus,2023-11-27T20:08:01Z,Sorry this was before we changed that in go-dep-parser
1406692223,5635,Octogonapus,2023-11-27T20:12:53Z,"I just copied from Rust as an example so we can change this, but why not support all modes? Manifest.toml files can appear in both source code and in build artifacts, so I think it is relevant to scan image, fs, and repo. I'm not so sure about roosfs, but other languages do it, so why not Julia as well?"
1407053342,5635,DmitriyLewen,2023-11-28T04:00:03Z,"> Manifest.toml files can appear in both source code and in build artifacts

This is what I wanted to see. Thank you.
Let's look at `Manifest.toml` in all modes."
1422016188,5635,DmitriyLewen,2023-12-11T07:11:34Z,"Do you think we need this?
If I understand correctly, pkg.ID (this is the UUID from the julia file) is always unique."
1422018674,5635,DmitriyLewen,2023-12-11T07:15:10Z,can you add testcase for this? (`TestNewPackageURL`)
1422022638,5635,DmitriyLewen,2023-12-11T07:20:41Z,">> direct dependencies

You mean removing test dependencies, right?
If so, it's best to update this comment to avoid confusion."
1422024751,5635,DmitriyLewen,2023-12-11T07:23:34Z,"We recently added `Dev` flag to `Package` (Dev dependencies are excluded from the report by default, but users can use `--include-dev-deps` to include them).

But I'm not sure that Julia's users need this feature.
What do you think? Do users need dev dependencies in reports?"
1422027383,5635,DmitriyLewen,2023-12-11T07:26:51Z,Looks like you don't use comparer
1423185969,5635,Octogonapus,2023-12-11T22:16:28Z,Sorry this was left over from an earlier version. Removed
1423186012,5635,Octogonapus,2023-12-11T22:16:32Z,Done
1423186226,5635,Octogonapus,2023-12-11T22:16:49Z,Yes. Done
1423187058,5635,Octogonapus,2023-12-11T22:17:51Z,Yes I think this will be helpful! I have tried to implement this from looking at other code and I've updated the test with some dev deps. LMK if it looks correct.
1423187142,5635,Octogonapus,2023-12-11T22:17:57Z,Removed
1423369392,5635,DmitriyLewen,2023-12-12T03:46:40Z,"```suggestion
// getProjectDeps parses project.toml and returns root and dev dependencies.
func getProjectDeps(fsys fs.FS, dir string) (map[string]string, map[string]string, error) {
```
wdyt? "
1423377864,5635,DmitriyLewen,2023-12-12T04:05:24Z,"You can simply take `Dev` from current package and remove `dev bool`.
```suggestion
		dep.Dev = rootPkg.Dev
```"
1423378696,5635,DmitriyLewen,2023-12-12T04:07:13Z,"```suggestion
			want: &analyzer.AnalysisResult{},
```"
1423379189,5635,DmitriyLewen,2023-12-12T04:08:19Z,"As you correct wrote - this is expected behavior. I think we can remove this comment.
```suggestion
			name: ""no_deps_v1.6"",
			dir:  ""testdata/no_deps_v1.6"",
			want: &analyzer.AnalysisResult{},
```"
1423394792,5635,DmitriyLewen,2023-12-12T04:40:27Z,"I think we don't need to return map here.
```suggestion
	return maps.Values(visited)
```"
1424089733,5635,Octogonapus,2023-12-12T14:39:27Z,Added
1438069005,5635,knqyf263,2023-12-29T07:28:48Z,"We parse the lock file, right? We need to update the list.
https://github.com/aquasecurity/trivy/blob/ea17387c4a419e7900ab7ee143eff1b3dfbed9f1/pkg/fanal/analyzer/const.go#L195-L212"
1438070840,5635,knqyf263,2023-12-29T07:34:36Z,I'm sorry I'm probably missing some context. Do we need to use UUID here? Can the combination `name + version` be non-unique?
1438072940,5635,DmitriyLewen,2023-12-29T07:41:06Z,We discussed about this here - https://github.com/aquasecurity/trivy/pull/5635#discussion_r1406692223
1438074039,5635,DmitriyLewen,2023-12-29T07:44:49Z,"There are cases when a file contains two dependencies with same name and version, but with different UUIDs - https://github.com/aquasecurity/trivy/pull/5635#issuecomment-1843676898
We thought it would be better to use UUIDs to separate dependencies, like Julia does."
1438076658,5635,knqyf263,2023-12-29T07:52:45Z,I'd like to see why it is allowed. Is there any document?
1438077255,5635,DmitriyLewen,2023-12-29T07:54:35Z,@Octogonapus Do you have any documents regarding this case?
1438335094,5635,Octogonapus,2023-12-29T16:52:35Z,See https://pkgdocs.julialang.org/v1/toml-files/#Multiple-packages-with-the-same-name
1454161380,5635,Octogonapus,2024-01-16T22:45:17Z,Is there still a need to update this list?
1599427388,5635,knqyf263,2024-05-14T06:04:38Z,"We [introduced the intermediate representation for SBOM](https://github.com/aquasecurity/trivy/pull/6240). We don't need tests for SPDX and CycloneDX unless Julia needs any specific handling for SBOM. Either of them is fine.
"
1600076180,5635,Octogonapus,2024-05-14T13:47:24Z,No specific handling is needed. I have removed the CycloneDX test.
914675876,2333,itaysk,2022-07-06T10:23:58Z,"since we removed this part from the docs (which is fine), wdo we want to keep the rest?"
914681335,2333,itaysk,2022-07-06T10:30:37Z,do we want to keep the grouping in this section based on content location? (presentations -> CNCF Webinar -> item vs just list of items)
914682324,2333,itaysk,2022-07-06T10:31:49Z,also add to one of tutorial index pages?
914961101,2333,AnaisUrlichs,2022-07-06T15:11:27Z,"Ah yes, good point, will include that "
914961528,2333,AnaisUrlichs,2022-07-06T15:11:50Z,"no, will rewrite it -- thanks for pointing it out"
945232931,2333,itaysk,2022-08-14T05:51:15Z,I cannot comment on the file so commenting here: we could add some context there about what is CKS and why it's in the trivy docs.
945233003,2333,itaysk,2022-08-14T05:52:14Z,"Are we sure this is a ""first party"" tutorial and not ""third party""? do we want to maintain it?"
945233294,2333,itaysk,2022-08-14T05:55:49Z,"is there a specific place for ""community tutorials"" or just anywhere in tutorials? is this what the ""tools"" are for? if so, need to refine this instruction and also rename tools. otherwise lets clarify what tools are for"
945239803,2333,knqyf263,2022-08-14T07:02:15Z,"No, we can't. The first party tutorial should be

- GitHub Actions
  - We have an official action
- CircleCI
- Travis CI
- GitLab CI
  - GitLab folks maintain our tutorial
- Bitbucket Pipelines
  - We have [an official repo](https://github.com/aquasecurity/trivy-pipe)
- (AWS CodePipeline)
  - It should be moved to third party as the blog is written by AWS, not us.
- AWS Security Hub
  - as we maintain [asff.tpl](https://aquasecurity.github.io/trivy/v0.30.4/docs/integrations/aws-security-hub/)"
945282518,2333,AnaisUrlichs,2022-08-14T12:30:44Z,"Yes, will add that"
945282598,2333,AnaisUrlichs,2022-08-14T12:31:21Z,Hmm in addition to those we need tutorials such as Deploy the `Trivy Operator through GitOps` Where do you see those?
945283059,2333,AnaisUrlichs,2022-08-14T12:33:49Z,"I would only accept tutorials here that we want to maintain e.g. installing Trivy Operator through Flux, Visualising Metrics in Grafana etc. or similar, re Trivy -- using Trivy in an air-gapped environment -- and similar -- otherwise, tutorials should be added in the additional resource section and just reference an external link. This is how I had it in mind"
945506752,2333,knqyf263,2022-08-15T08:05:37Z,"We have many Trivy-related tools such as Docker Desktop, VSCode/IntelliJ plugins, etc. Do we want to put only Trivy Operator at the top level?"
945506940,2333,knqyf263,2022-08-15T08:05:56Z,"```suggestion
              - Module: docs/references/cli/module.md
```"
945508829,2333,knqyf263,2022-08-15T08:09:11Z,"Do you have a specific reason to change the order? Do you prefer ""Quick Start"" being before ""Installation""? I thought the order was the opposite as users can start using Trivy after installation."
945509547,2333,knqyf263,2022-08-15T08:10:23Z,"In addition, I prefer the directory name is the same as the section name. It is easy to find the relevant directory.

```suggestion
      - Quick Start: getting-started/quickstart.md
      - Installation: getting-started/installation.md
```"
945513426,2333,knqyf263,2022-08-15T08:16:27Z,"First of all, `#` is not shown in the navigator bar, so we should have a single `#` per a single page.
![image](https://user-images.githubusercontent.com/2253692/184600218-30bb3051-426c-4e86-97af-7808842fdfa9.png)

And do we want to put only Operator installation here though we have many related tools such as Docker Extension?"
945544367,2333,knqyf263,2022-08-15T09:00:11Z,"""CI/CD"" section details how to run Trivy in CI/CD, but this section is how to install Trivy Operator through GitOps. I feel like this section is different from others.
Also, do we want to Trivy Operator things in the Trivy doc?"
945547001,2333,knqyf263,2022-08-15T09:03:57Z,"nit: IMO, we don't need `Trivy` everywhere like `Trivy AWS` and `Trivy CircleCI` 😆  

```suggestion
      - Kubernetes: 
```"
945548385,2333,knqyf263,2022-08-15T09:06:11Z,"`Trivy K8s` is not clear. I think we should mention what users can do with this tutorial, e.g. ""Cluster scanning"" or something like that.
"
945552123,2333,knqyf263,2022-08-15T09:11:50Z,"They are not CKS relevant, no?"
945553162,2333,knqyf263,2022-08-15T09:13:29Z,"That page contains much of our content, so it is not community tutorials.

```suggestion
          - Additional References: tutorials/other-resources/references.md
```"
945553605,2333,knqyf263,2022-08-15T09:14:10Z,There are two `#`. We need to remove this line or remove the first line.
945554150,2333,knqyf263,2022-08-15T09:15:01Z,"Most of them are our blogs, not from the community."
945581670,2333,AnaisUrlichs,2022-08-15T09:57:29Z,"hmmm Itay and I discussed this -- but good point -- maybe we could put it at the top level
Integrations -- and then reference a page that links to either the docs or the different repo e.g. the Lens Trivy Repo 
People can then easily go through it and find the integrations/tools that work for them. 
Do you prefer to name it `Tools`?"
945582581,2333,AnaisUrlichs,2022-08-15T09:58:52Z,I don't have any strong feelings about the order & agree with you on the dir name 😄 will change it
945589250,2333,AnaisUrlichs,2022-08-15T10:09:39Z,I would add the Docker Extension as a tutorial and then link here to it since it does not seem too straightforward and is more about the use rather than the installation. What do you think? 
945591582,2333,AnaisUrlichs,2022-08-15T10:13:44Z,actually made the link to Trivy Operator part of the Helm installation. That makes more sense to me (didn't change much)
945593074,2333,AnaisUrlichs,2022-08-15T10:16:18Z,"This boils down to the question -- if Trivy is marketed as the all in one security scanner, do we want to send people do one docs where they can discover all features or to different docs -- or moreover, at what point do we send people to different docs?
When Itay and I spoke, we agreed to put the tutorials first into the trivy docs and then at some point move them over to the operator docs when there are too many -- but this might be counterintuitive since links might not work like expected.

Independently, I could add the GitOps tutorial to the Kubernetes tutorial section"
945605554,2333,AnaisUrlichs,2022-08-15T10:38:09Z,yes but they are also not trivy-focused and teach people something
945605614,2333,AnaisUrlichs,2022-08-15T10:38:17Z,you have a point
945605844,2333,AnaisUrlichs,2022-08-15T10:38:42Z,removed this line :)
945606001,2333,AnaisUrlichs,2022-08-15T10:38:59Z,"yes, will add more community ones -- you have a point tho hahah "
945627153,2333,knqyf263,2022-08-15T11:16:26Z,`Integrations` and `Tools` both work for me.
945629620,2333,itaysk,2022-08-15T11:20:46Z,maybe Kubernetes scanning 
945633225,2333,knqyf263,2022-08-15T11:27:03Z,">I would add the Docker Extension as a tutorial and then link here to it since it does not seem too straightforward and is more about the use rather than the installation. What do you think?

Hmm. I thought Trivy Operator, Docker Extensions, and other tools would move to `Integrations` or `Tools`. Do we have links in the `Installation` section to all the tools?"
945638586,2333,knqyf263,2022-08-15T11:31:56Z,">When Itay and I spoke, we agreed to put the tutorials first into the trivy docs and then at some point move them over to the operator docs when there are too many -- but this might be counterintuitive since links might not work like expected.

Does it mean we will not have the same tutorial in the Trivy Operator doc? I just want to avoid duplication so that it could reduce the maintenance cost."
945641863,2333,knqyf263,2022-08-15T11:34:32Z,"So, should we move these links to somewhere else? Otherwise, it looks like these links help users pass the CKS exam."
945646387,2333,knqyf263,2022-08-15T11:39:52Z,"We may want to have two sections:
- Additional References
   - All of the contents are from Aqua (official)
- Community Tutorials
  - All of the contents are from the community (unofficial)"
945667826,2333,AnaisUrlichs,2022-08-15T12:17:29Z,"I renamed it to additional resources -- the thing is that official vs unofficial is going to be a bit scarce, and people would have to look at multiple places that have the same goal "
945668162,2333,AnaisUrlichs,2022-08-15T12:18:03Z,"Well, it is study material, that's why I wanted to include it"
945889567,2333,itaysk,2022-08-15T15:45:12Z,"I think of this more as ""installing Trivy in k8s through GitOps"" rather than ""installing Trivy Operator through GitOps"". In my mind Trivy Operator is just another face of Trivy. Does that make sense?"
945906848,2333,knqyf263,2022-08-15T16:04:59Z,"I'm ok with ""installing Trivy in k8s through GitOps"". I just wondered if we want to include all Trivy-related tools in the tutorial. For example, Docker Extension is also another face of Trivy. In that case, don't we have the same tutorial in the Trivy Operator doc? Where is the single truth of source?"
947504375,2333,itaysk,2022-08-17T06:36:45Z,"Last time we discussed documentation for integrations, we said that:

1. reference docs will live in the integration's own repo
2. we will link from the menu of trivy docs to the individual readmes/docs or other projects
3. tutorials will live in Trivy docs under dedicated tutorials sections covering different scenarios 

Examples:

1. Trivy github actions document with all possible options is in the readme of the action's repo. It is linked to from the integrations section of trivy docs. the tutorial for using trivy in github actions is in trivy docs and linked in the triby tutorials section.
2. trivy semaphore document with all possible options is in the semaphore documentation. It is linked to from the integrations section of trivy docs. the tutorial for using trivy with semaphore is in the semaphore blog and linked in the trivy tutorials section.

does this still makes sense? @knqyf263 @AnaisUrlichs "
947538751,2333,AnaisUrlichs,2022-08-17T07:20:46Z,"We planned to put a link to Trivy Operator at the top header -- this turned now into Trivy Ecosystem linking to the external repos/docs -- so you are saying that you would like to keep it as Trivy Operator in the header and link to external tools in the integration section?
We could still have the Trivy Ecosystem overview somewhere -- maybe in an overview in integrations?
"
950513415,2333,itaysk,2022-08-19T19:43:52Z,"No I didn't mean to revert anything, just wanted to answer Teppei's comment. I think (?) this model I described still works with ecosystem page"
957355819,2333,knqyf263,2022-08-29T13:43:13Z,"We moved `Tools` to `Ecosystem`. We don't need it anymore, right?"
957362028,2333,knqyf263,2022-08-29T13:48:55Z,"As for `Trivy Operator Installation` and `Docker Desktop Extension`, can we just put ""Other tools"" and say `See the `Ecosystem` tab?"
957364287,2333,knqyf263,2022-08-29T13:50:52Z,Not fixed yet?
957364619,2333,knqyf263,2022-08-29T13:51:09Z,ditto
957366303,2333,knqyf263,2022-08-29T13:52:36Z,Can we put `CI/CD` on the `Kubernetes` section? CI/CD integration is the first citizen in Trivy.
957367875,2333,knqyf263,2022-08-29T13:53:39Z,ditto
957368382,2333,knqyf263,2022-08-29T13:54:06Z,"OK, we can keep Operator tutorials then."
957371967,2333,knqyf263,2022-08-29T13:56:50Z,People might try unofficial tools first because community tools are listed first. Can we put official tools before community tools? 
960639994,2333,AnaisUrlichs,2022-09-01T13:14:19Z,Done
960640139,2333,AnaisUrlichs,2022-09-01T13:14:27Z,Removed it
960640488,2333,AnaisUrlichs,2022-09-01T13:14:47Z,What do you mean?
960640768,2333,AnaisUrlichs,2022-09-01T13:15:02Z,Done :) 
960643253,2333,AnaisUrlichs,2022-09-01T13:17:25Z,ah got it
1510354838,6234,itaysk,2024-03-03T19:09:24Z,begine -> begin
1510355300,6234,itaysk,2024-03-03T19:12:11Z,"I'm not sure this is mandatory, for example k8s. @simar7 ?"
1510355456,6234,itaysk,2024-03-03T19:13:04Z,shams -> schemas
1510355541,6234,itaysk,2024-03-03T19:13:42Z,we should clarify what's mandatory / optional
1510355718,6234,itaysk,2024-03-03T19:15:25Z,"starts with an example, better to start with explanation"
1510355898,6234,itaysk,2024-03-03T19:16:27Z,"you imply that this is optional (can), is it?"
1510355963,6234,itaysk,2024-03-03T19:16:55Z,can
1510356208,6234,itaysk,2024-03-03T19:18:10Z,"I think this is relevant only for cloud checks? also I remember saying sometime that this is overlapping with selector, did we address that?  (@simar7 ) "
1510356412,6234,itaysk,2024-03-03T19:19:08Z,"""short code is a short code"" .. can remove this part, the rest is sufficient "
1510356927,6234,itaysk,2024-03-03T19:22:13Z,This section needs rewriting IMO. need to better explain what is input and its meaning in the check. how to configure it and what structure it has. if needed expand this to a seperate section
1510357013,6234,itaysk,2024-03-03T19:22:50Z,I think this should be further up towards the beginning 
1510357115,6234,itaysk,2024-03-03T19:23:38Z,what if it's not a cloud check?
1510357614,6234,itaysk,2024-03-03T19:26:24Z,"add (about the second argument): ""you can pass any rego variable that reference reference a field of the input document."""
1510357827,6234,itaysk,2024-03-03T19:27:45Z,"since this is a doc not a tutorial, I think it needs to be clearer what is the description of how to add checks, and what is the example of the description"
1510359458,6234,itaysk,2024-03-03T19:31:07Z,"I think contributing providers/adapters is too complicated for this doc. I don't see anyone contributing a provider and if they did, this doc would probably be insufficient so I suggest to remove it"
1510361096,6234,itaysk,2024-03-03T19:33:30Z,what are those input(s)?
1510361799,6234,itaysk,2024-03-03T19:34:36Z,indentation
1510362260,6234,itaysk,2024-03-03T19:35:17Z,"again, need to draw the line that we are discussing an example"
1510363360,6234,itaysk,2024-03-03T19:37:04Z,"sentence about metadata can come first, as we're now covering the code and it comes first there"
1510364295,6234,itaysk,2024-03-03T19:38:42Z,"this is over simplification.. not sure it's helpful. what I recommend is creating this doc as an example for how to add a service to AWS, and then mention the adapters needed to update for that scenario."
1510364391,6234,itaysk,2024-03-03T19:38:51Z,"explain what, who"
1510368236,6234,itaysk,2024-03-03T19:45:02Z,"there's naturally some overlap between this and the other doc about custom checks. given the difference between them is only an extra step (do you want to contribute it or keep it to yourself), it highlights the inconsistency between the otherwise similar docs. for example, this doc basically documents how to write an AWS check, but I wouldn't think to read it if I didn't want to contribute to Trivy. If it's not too much, I would refactor the content into: 1) creating custom checks - should fully document all the guidelines related to the rego file, testing, metadata, AWS examples etc. this can be multiple docs if needed. 2) contributing a custom check to trivy - refers to the other doc and explains how to take a check you wrote (not explained here) and just contribute it."
1511287790,6234,AnaisUrlichs,2024-03-04T14:51:33Z,"ah, it looked different on VS Code, not showing the indentation"
1511291427,6234,AnaisUrlichs,2024-03-04T14:53:39Z,I rewrote it -- some components that are not relevant for anyone writing custom checks for their usage of Trivy are however a requirement when contributing the check back into Trivy
1511374499,6234,AnaisUrlichs,2024-03-04T15:44:03Z,"@simar7 I need some additional information on how people can add adapters -- i.e. what sections are required, what information should I highlight? the adapt.go file looks fairly complex"
1511375109,6234,AnaisUrlichs,2024-03-04T15:44:24Z,I cannot find where people run `make schemas` @simar7 
1511377900,6234,AnaisUrlichs,2024-03-04T15:46:16Z,@simar7 could you please provide further information on the sections that are required in the `metadata` vs that aren't? If people contribute a check back to Trivy they need the metadata defined in the check but do they need every field listed below?
1511378679,6234,AnaisUrlichs,2024-03-04T15:46:45Z,@simar7 what are subtypes?
1511588345,6234,simar7,2024-03-04T18:26:37Z,"To support cloud providers in either live cloud scanning (like trivy aws) or IaC scanning (like terraform, CloudFormation or ARM) we need to define the provider first. This is done as we build a [state](https://github.com/aquasecurity/trivy/blob/main/pkg/iac/state/state.go) locally.

As for Kubernetes scanning, it's a little different because we only need to parse the input (yaml) and make decisions on it. There's no concept of state as above. Same goes for Dockerfile scanning.

So to summarize, I think we could probably re-write this as below:

```suggestion
Every check for a cloud service references a cloud provider. The list of providers are found in the [trivy](https://github.com/aquasecurity/trivy/tree/main/pkg/iac/providers) repository. 

Before writing a new check for a cloud provider, you need to verify if the cloud provider your check targets is supported by Trivy. If it's not, you'll need to add support for it. Additionally, if the provider that you want to target exists, you need to check whether the service your policy will target is supported. As a reference you can take a look at the AWS provider [here](https://github.com/aquasecurity/trivy/blob/main/pkg/iac/providers/aws/aws.go).

???+ note
    New Kubernetes and Dockerfile checks do not require any additional provider definitions. You can find an example of a Dockerfile check [here](https://github.com/aquasecurity/trivy-policies/blob/main/checks/docker/add_instead_of_copy.rego) and a Kubernetes check [here](https://github.com/aquasecurity/trivy-policies/blob/main/checks/kubernetes/general/CPU_not_limited.rego).
```"
1511596970,6234,simar7,2024-03-04T18:34:19Z,"@AnaisUrlichs [Here's](https://github.com/simar7/custom-schemas-playground/blob/main/testing-stuff/good/testpolicy.rego#L1-L17) an example of what the simplest policy should looks like.

The input selector (and whatever fields are not here) are optional. The rest is needed to display the results. "
1511597415,6234,simar7,2024-03-04T18:34:43Z,Yes. This is optional and only needed if you want to optimize your scanning. See my comment [here](https://github.com/aquasecurity/trivy/pull/6234/files/c549765e504d59cb2ba80cb55655979a83cf8e4c#r1511596970) for what's optional and required.
1511600909,6234,simar7,2024-03-04T18:38:07Z,"We've updated to use `magefiles` as the rest of the Trivy targets. You can find them [here](https://github.com/aquasecurity/trivy/blob/main/magefiles/magefile.go#L429-L437)

So to generate the new schema it would be `mage schema:generate` and to verify it, the command will be `mage schema:verify`

You can see these targets by running `mage -l` in the Trivy repo. "
1511601669,6234,simar7,2024-03-04T18:38:44Z,Replied [here](https://github.com/aquasecurity/trivy/pull/6234#discussion_r1511596970)
1511603104,6234,simar7,2024-03-04T18:39:58Z,"Subtypes are documented [here](https://aquasecurity.github.io/trivy/v0.49/docs/scanner/misconfiguration/custom/selectors/#enabling-selectors-and-subtypes) and are only needed at this time for cloud checks.

They help us only run the checks that are needed for what's being scanned, optimizing the cloud scanning runtime a little. "
1511874451,6234,simar7,2024-03-04T22:22:49Z,"```suggestion
Rego Checks for Trivy can utilise Schemas to map the input to specific objects. The schemas available are listed [here.](https://github.com/aquasecurity/trivy/tree/main/pkg/iac/rego/schemas). 
```"
1511875715,6234,simar7,2024-03-04T22:24:20Z,"comma splice
```suggestion
The rule should return a result, which can be created using `result.new` (this function does not need to be imported, it is defined internally and provided at runtime). The first argument is the message to display and the second argument is the resource that the issue was detected on.
```"
1511885647,6234,simar7,2024-03-04T22:36:09Z,"The comments on [this](https://github.com/aquasecurity/defsec/pull/1000/files) PR should help.

As for learning about the resources themselves, I would say terraform documentation is a good place to go to. For instance [this](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance.html) is an example."
1512667284,6234,AnaisUrlichs,2024-03-05T11:28:21Z,"@simar7  could you please check this table, specifically the ""In Table"" and ""In JSON"" parts?"
1513576463,6234,simar7,2024-03-05T22:29:50Z,"```suggestion
If you are creating checks for your Trivy misconfiguration scans, some fields are optional as referenced in the table below. The `schemas` field should be used to enable policy validation using a built-in schema. The 
```"
1513584812,6234,simar7,2024-03-05T22:40:03Z,"Schema isn't required per se as it only is needed for validating the checks for functional correctness (syntax).

Furthermore, if a file has a file extension we expect scanning will still work just fine. For instance, if you try to scan argocd configs without having an argocd schema is still fine as they're treated as regular YAML files."
1513585473,6234,simar7,2024-03-05T22:40:47Z,"Can we format this a little better, this is how it renders for me in the browser.
<img width=""398"" alt=""image"" src=""https://github.com/aquasecurity/trivy/assets/1254783/3b5f7bee-7bd8-4331-aa2a-603279757717"">
"
1513588103,6234,simar7,2024-03-05T22:43:47Z,"```suggestion
The ID is based on the AVD_ID. For instance if the `avd_id` is `AVD-AWS-0176`, the ID is `ID0176`.
```"
1513590553,6234,simar7,2024-03-05T22:46:54Z,"We inform the user about policy namespaces in [this](https://aquasecurity.github.io/trivy/v0.49/docs/scanner/misconfiguration/#pass-custom-policies) part of the docs but I wonder if we can tie that in here as well because without passing a custom namespace, the custom checks will not be evaluated (trivy by default only runs in it's own namespace, unless specified by the user)."
1513599668,6234,simar7,2024-03-05T22:58:49Z,We need to update the link to `source-types` to point to [here](https://github.com/aquasecurity/trivy/blob/9361cdb7e28fd304d6fd2a1091feac64a6786672/pkg/iac/types/sources.go#L4)
1513604332,6234,simar7,2024-03-05T23:03:41Z,"TBH I don't understand what's the ""In table"" and ""JSON"" are for. Could you clarify?

The table is quite wide and not very easy to view as you can see below. Should we split into two table assuming we need all the columns? But nevertheless, we should move the ""Required"" column to the left as it's probably the most important for users to know.

<img width=""920"" alt=""image"" src=""https://github.com/aquasecurity/trivy/assets/1254783/6c6f4fb5-223c-4864-9002-983c4c93c704"">
"
1513604886,6234,simar7,2024-03-05T23:04:21Z,Use trivy hyperlinks.
1513606244,6234,simar7,2024-03-05T23:06:09Z,"Services are defined within a provider, so RDS is a service and AWS is a provider. Your link seems to point to providers directory. "
1513606682,6234,simar7,2024-03-05T23:06:54Z,Maybe we can update all defsec links to point to Trivy? That might uncover any shortcomings as well. 
1513608745,6234,simar7,2024-03-05T23:09:46Z,"comma splice 

```suggestion
A resource in this example `Project` can have a name and can optionally be encrypted. Instead of using raw string and bool types respectively, we use the trivy types `iacTypes.Metadata` and `iacTypes.BoolValue`. These types wrap the raw values and provide additional metadata about the value. For instance, whether it was set by the user and the file and line number where the resource was defined. 
```"
1514116455,6234,AnaisUrlichs,2024-03-06T09:21:55Z,"upps, I did it at other locations, missed this one"
1516039278,6234,AnaisUrlichs,2024-03-07T11:58:54Z,"@knqyf263 could you please clarify what ""in table"" and ""in json"" is as we are not sure what that means? I assume the output format but not sure how it relates to writing policies?"
1516045764,6234,AnaisUrlichs,2024-03-07T12:04:30Z,"I don't like them, it makes it more difficult to ""read"" in large documents"
1548157622,6234,knqyf263,2024-04-02T15:59:11Z,"Originally it represented which fields were displayed in JSON/table format, but as it does not appear to be maintained, it can be removed."
1549308885,6234,AnaisUrlichs,2024-04-03T09:11:23Z,"Oki, thank you"
1550642710,6234,simar7,2024-04-03T23:29:10Z,@AnaisUrlichs I saw the review request but I still see the JSON/table columns in the PR. Did you forget to push the change?
1595218153,6234,AnaisUrlichs,2024-05-09T09:37:41Z,"There is a difference between 
1. Writing/Contributing Rego Checks
2. Writing/Contributing Custom Compliance Reports

This docs is the first"
1609225729,6234,simar7,2024-05-22T03:59:08Z,"```suggestion
The contributing section provides detailed information on how to contribute custom checks to the [trivy-checks repository](../../../../community/contribute/checks/overview.md/)
```"
1609225874,6234,simar7,2024-05-22T03:59:30Z,"```suggestion
All of the checks in Trivy can be found in the [trivy-checks](https://github.com/aquasecurity/trivy-checks/tree/main) repository on GitHub. Before you begin writing a check, ensure:
```"
1609225952,6234,simar7,2024-05-22T03:59:43Z,"```suggestion
1. The check does not already exist as part of the default checks in the [trivy-checks](https://github.com/aquasecurity/trivy-checks/tree/main) repository.
```"
1609226049,6234,simar7,2024-05-22T03:59:54Z,"```suggestion
2. The pull requests in the [trivy-checks](https://github.com/aquasecurity/trivy-checks/pulls) repository to see  whether someone else is already contributing the check that you wanted to add. 
```"
1609226342,6234,simar7,2024-05-22T04:00:31Z,"```suggestion
    New Kubernetes and Dockerfile checks do not require any additional provider definitions. You can find an example of a Dockerfile check [here](https://github.com/aquasecurity/trivy-checks/blob/main/checks/docker/add_instead_of_copy.rego) and a Kubernetes check [here](https://github.com/aquasecurity/trivy-checks/blob/main/checks/kubernetes/general/CPU_not_limited.rego).
```"
1609226454,6234,simar7,2024-05-22T04:00:47Z,"```suggestion
The following directory in the trivy-checks repository contains all of our custom checks. Depending on what type of check you want to create, you will need to nest a new `.rego` file in either of the [subdirectories](https://github.com/aquasecurity/trivy-checks/tree/main/checks):
```"
1609226520,6234,simar7,2024-05-22T04:00:58Z,"```suggestion
Have a look at the existing package names in the [built in checks](https://github.com/aquasecurity/trivy-checks/tree/main/checks). 
```"
1609226607,6234,simar7,2024-05-22T04:01:10Z,"```suggestion
Every check has a custom ID that is referenced throughout the metadata of the check to uniquely identify the check. If you plan to contribue your check back into the [trivy-checks](https://github.com/aquasecurity/trivy-checks) repository, it will require a valid ID. 
```"
1609226745,6234,simar7,2024-05-22T04:01:29Z,"```suggestion
Running `make id` in the root of the trivy-checks repository will provide you with the next available _ID_ for your rule. 
```"
1609226947,6234,simar7,2024-05-22T04:01:51Z,"```suggestion
Rules are defined using _OPA Rego_. You can find a number of examples in the `checks` directory ([Link](https://github.com/aquasecurity/trivy-checks/tree/main/checks)). The [OPA documentation](https://www.openpolicyagent.org/docs/latest/policy-language/) is a great place to start learning Rego. You can also check out the [Rego Playground](https://play.openpolicyagent.org/) to experiment with Rego, and [join the OPA Slack](https://slack.openpolicyagent.org/).
```"
1609227050,6234,simar7,2024-05-22T04:02:06Z,"```suggestion
Finally, you'll want to generate documentation for your newly added rule. Please run `make docs` in the [trivy-checks](https://github.com/aquasecurity/trivy-checks) directory to generate the documentation for your new policy and submit a PR for us to take a look at.
```"
1609227152,6234,simar7,2024-05-22T04:02:18Z,"```suggestion
All Rego checks need to have tests. There are many examples of these in the `checks` directory for each check ([Link](https://github.com/aquasecurity/trivy-checks/tree/main/checks)). More information on how to write tests for Rego checks is provided in the [custom misconfiguration](../../../docs/scanner/misconfiguration/custom/testing.md) section of the docs.
```"
1609227361,6234,simar7,2024-05-22T04:02:45Z,"```suggestion
This way, they become accessible as default [checks.](https://github.com/aquasecurity/trivy-checks)
```"
1609227555,6234,simar7,2024-05-22T04:03:04Z,"```suggestion
The AVD_ID can be used to link the check to the Aqua Vulnerability Database (AVD) entry. For example, the `avd_id` `AVD-AWS-0176` is the ID of the check in the [AWS Vulnerability Database](https://avd.aquasec.com/). If you are [contributing your check to trivy-policies](../../../../community/contribute/checks/overview.md), you need to generate an ID using `make id` in the [trivy-checks](https://github.com/aquasecurity/trivy-checks) repository. The output of the command will provide you the next free IDs for the different providers in Trivy.
```"
1883484981,8080,DmitriyLewen,2024-12-13T07:32:30Z,nit: use `parse.go` name
1883489688,8080,DmitriyLewen,2024-12-13T07:37:19Z,"```suggestion
func NewParser() *Parser {
```"
1883493122,8080,DmitriyLewen,2024-12-13T07:40:26Z,Can you create `packageID` function (as in other parsers)?
1883496655,8080,DmitriyLewen,2024-12-13T07:43:26Z,"This worries me.
There are problems when there are multiple `root` packages (see #7802).

Perhaps we want to add a check for multiple root packages?"
1883498530,8080,DmitriyLewen,2024-12-13T07:45:12Z,"UUIC uv.lock contains sorted packages, but i still suggest to sort Packages, Dependencies, DependsOn"
1883524804,8080,DmitriyLewen,2024-12-13T08:09:20Z,"I don't want to do 2 cycles
what do you think about this?
```suggestion
	var walkDeps func(string)
	walkDeps = func(pkgName string) {
		// Skip already visited packages
		if _, visitedFound := visited[pkgName]; visitedFound {
			return
		}
		// Skip dependency, if package with this name doesn't exist
		pkg, packageFound := packages[pkgName]
		if !packageFound {
			return
		}
		visited[pkg.Name] = struct{}{}
		for _, dep := range pkg.Dependencies {
			walkDeps(dep.Name)
		}
	}

	walkDeps(root.Name)
```"
1883536216,8080,DmitriyLewen,2024-12-13T08:19:20Z,"UURC usually don't use nested functions, using them for similar cases (e.g. https://github.com/aquasecurity/trivy/blob/fd9ed3a330bc66e229bcbdc262dc296a3bf01f54/pkg/dependency/parser/nodejs/pnpm/parse.go#L230).
Can we move this function out?"
1883543379,8080,DmitriyLewen,2024-12-13T08:25:29Z,"Is this possible?
If we didn't find the root package in the parser - maybe we need to find it in `pyproject.toml` file in analyzer"
1883555435,8080,DmitriyLewen,2024-12-13T08:35:01Z,"Add this type to languages ​​and lock files.
Otherwise, this works for `rootfs`:
```
➜  trivy git:(feat/py-uv) ✗ ./trivy -q rootfs ./pkg/fanal/analyzer/language/python/uv/testdata/happy -f json --list-all-pkgs | jq '.Results[].Packages[].ID'
""uv-test@0.1.0""
""pluggy@1.5.0""
""requests@2.32.3""
""certifi@2024.8.30""
""charset-normalizer@3.4.0""
""colorama@0.4.6""
""idna@3.10""
""iniconfig@2.0.0""
""packaging@24.2""
""pytest@8.3.4""
""urllib3@2.2.3""

```"
1883556554,8080,DmitriyLewen,2024-12-13T08:35:46Z,debug?)
1883660569,8080,nikpivkin,2024-12-13T09:52:01Z,The suggested code does not use `devDeps`
1883678853,8080,nikpivkin,2024-12-13T10:04:06Z,root package always exists inside the lockfile. See https://github.com/astral-sh/uv/blob/f80ddf10b63c3e7b421ca4658e63f97db1e0378c/crates/uv-resolver/src/lock/mod.rs#L1048-L1051
1883687084,8080,DmitriyLewen,2024-12-13T10:08:52Z,"Sorry, I forgot to write 2nd part my suggest 😄 
we can save non-dev dependencies and check `!ok` here:
https://github.com/aquasecurity/trivy/blob/ea1ac4ae991414f3cda73d55ac230831ff8c2507/pkg/dependency/parser/python/uv/parser.go#L125-L127"
1883689263,8080,DmitriyLewen,2024-12-13T10:10:34Z,"then the case when the lock file does not have a root package is an invalid lock file.
I suggest returning an error when the root package is not found (and attach this link to the comment, please)"
1883689276,8080,nikpivkin,2024-12-13T10:10:34Z,Done https://github.com/aquasecurity/trivy/pull/8080/commits/7c1670cf27dab9eb6387b2867a0a4eb918e188cd
1883689420,8080,nikpivkin,2024-12-13T10:10:40Z,Done https://github.com/aquasecurity/trivy/pull/8080/commits/7c1670cf27dab9eb6387b2867a0a4eb918e188cd
1883689693,8080,nikpivkin,2024-12-13T10:10:53Z,Done https://github.com/aquasecurity/trivy/pull/8080/commits/0dcfaa37a1e911fa0993b738c82e945d66b8ae6e
1883690650,8080,nikpivkin,2024-12-13T10:11:36Z,lockfile cannot contain multiple root projects https://github.com/astral-sh/uv/blob/f80ddf10b63c3e7b421ca4658e63f97db1e0378c/crates/uv-resolver/src/lock/mod.rs#L1044-L1046
1883692366,8080,nikpivkin,2024-12-13T10:12:58Z,Fair enough. Done https://github.com/aquasecurity/trivy/pull/8080/commits/7530826895a7b98cfb714c349ec2b8aceeaf9422
1883692978,8080,nikpivkin,2024-12-13T10:13:27Z,Forgot about that. Done https://github.com/aquasecurity/trivy/pull/8080/commits/72a99a06cb5d320326cd90314515837531b5aabc
1883693676,8080,nikpivkin,2024-12-13T10:13:55Z,Fixed https://github.com/aquasecurity/trivy/pull/8080/commits/5f42a4e219ba02efd00b66655b6089dc6d95ecd6
1883699598,8080,nikpivkin,2024-12-13T10:18:15Z,for this `devDeps` needs to be filled in. I start a recursive traversal from the root project and its direct dependencies to get a list of all dependencies that don't belong to any group. All dependencies that are not visited during the traversal are dev.
1883711484,8080,DmitriyLewen,2024-12-13T10:27:06Z,"> All dependencies that are not visited during the traversal are dev.

You are absolutely right. Essentially, I'm suggesting that you reverse your logic:

```Go
func (l Lock) prodDeps() map[string]struct{} { // you can select another name
	root, ok := l.root()
	if !ok {
		return nil
	}

	packages := l.packages()
	visited := make(map[string]struct{})

	var walkDeps func(string)
	walkDeps = func(pkgName string) {
		// Skip already visited packages
		if _, visitedFound := visited[pkgName]; visitedFound {
			return
		}
		// Skip dependency, if package with this name doesn't exist
		pkg, packageFound := packages[pkgName]
		if !packageFound {
			return
		}
		visited[pkg.Name] = struct{}{}
		for _, dep := range pkg.Dependencies {
			walkDeps(dep.Name)
		}
	}

	walkDeps(root.Name)

	return visited
}

func (p *Parser) Parse(r xio.ReadSeekerAt) ([]ftypes.Package, []ftypes.Dependency, error) {
	var lock Lock
	if _, err := toml.NewDecoder(r).Decode(&lock); err != nil {
		return nil, nil, xerrors.Errorf(""failed to decode uv lock file: %w"", err)
	}

	packages := lock.packages()
	directDeps := lock.directDeps()
	prodDeps := lock.prodDeps()

	var (
		pkgs []ftypes.Package
		deps []ftypes.Dependency
	)

	for _, pkg := range lock.Packages {
		if _, ok := prodDeps[pkg.Name]; !ok { // See this line (`ok` changed to `!ok`)
			continue
		}
...
```"
1883713142,8080,nikpivkin,2024-12-13T10:28:20Z,Would it be a good tone to refer to the uv codebase?
1883717303,8080,DmitriyLewen,2024-12-13T10:31:44Z,"We always try to reproduce the logic of the language file application. 
`mvn` is a very clear example.

So it's quite normal."
1883754533,8080,nikpivkin,2024-12-13T10:57:29Z,"What do you think about logging this instead of returning an error? If we return an error, the analyzer will stop traversing. By the way, the same is true for other analyzers. A project may contain test data with broken files, analyzing which we stop traversing."
1886170276,8080,DmitriyLewen,2024-12-16T04:56:48Z,"Good point. Let's use logger here and return `nil`: 
https://github.com/aquasecurity/trivy/blob/3e023af90394b7deec42b168b48b01efa8940ccd/pkg/fanal/analyzer/language/python/uv/uv.go#L45"
1886218634,8080,nikpivkin,2024-12-16T05:58:26Z,That's a good idea. Done https://github.com/aquasecurity/trivy/pull/8080/commits/11c532e04813ed000346207d0e41675a5d317204
1886495826,8080,DmitriyLewen,2024-12-16T09:43:40Z,"I think it makes no sense to share the link for users.
```suggestion
	// lock file should include root package
	// cf. https://github.com/astral-sh/uv/blob/f80ddf10b63c3e7b421ca4658e63f97db1e0378c/crates/uv/src/commands/project/lock.rs#L933-L936
	if rootPackage.Name == """" {
		return nil, nil, xerrors.Errorf(""unable to find root package for uv.lock file."")
	}
```"
1886498737,8080,DmitriyLewen,2024-12-16T09:45:35Z,"```suggestion
	sort.Sort(pkgs)
	sort.Sort(deps)
```

But you need to use `Packages` and `Dependencies` here:
https://github.com/aquasecurity/trivy/blob/8ee3c36585497abe40920c01f3b38b8618e1668e/pkg/dependency/parser/python/uv/parse.go#L109-L110"
1886499540,8080,DmitriyLewen,2024-12-16T09:46:09Z,can you use `//` here?
1886502360,8080,DmitriyLewen,2024-12-16T09:47:57Z,"`Parse` may return 2 errors:
- no root package
- wrong toml file

So I think we won't get many errors and can use `Warn` here."
1886504788,8080,DmitriyLewen,2024-12-16T09:49:31Z,"Let's save one line 😄 
```suggestion
	return filepath.Base(filePath) == types.UvLock
```"
1886507549,8080,DmitriyLewen,2024-12-16T09:51:24Z,"We already found the root package above.
Let's use it here instead of re-finding the root package."
1886583819,8080,nikpivkin,2024-12-16T10:41:56Z,Then the example would be hard to copy
1886587741,8080,DmitriyLewen,2024-12-16T10:44:44Z,"Got it, then at least straighten it out"
1886626596,8080,nikpivkin,2024-12-16T11:08:53Z,I forgot to look at the sorting implementations :)
1887935031,8080,DmitriyLewen,2024-12-17T05:50:59Z,"Same as for root package.
We already got `packages` map:
https://github.com/aquasecurity/trivy/blob/e67015d91822dcf2c5839e799f348515827a2b7a/pkg/dependency/parser/python/uv/parse.go#L104
Let's use this map."
1887936774,8080,DmitriyLewen,2024-12-17T05:53:20Z,Let's check case when lock file contains 2 root package and return error for this case.
1887936897,8080,DmitriyLewen,2024-12-17T05:53:30Z,and add test case for that.
1888043465,8080,nikpivkin,2024-12-17T07:50:04Z,Wouldn't this check be unnecessary since uv doesn't support more than 1 root package?
1888148801,8080,DmitriyLewen,2024-12-17T09:07:00Z,"it's only 1 line of code.
But it shows a warning to the user if he/she has changed the file incorrectly.

We will also see the problem immediately if the following logic is changed:
https://github.com/aquasecurity/trivy/blob/e67015d91822dcf2c5839e799f348515827a2b7a/pkg/dependency/parser/python/uv/parse.go#L73"
1889979261,8080,knqyf263,2024-12-18T10:15:51Z,I don't think we need to fill in the deprecated field for the newly added package manager.
1889986712,8080,knqyf263,2024-12-18T10:20:06Z,"We used to add this kind of test when the `Package` struct was very small. Today, it has `Relationship`, `License` and many other fields, which makes it hard to maintain large test cases. Instead, we manually create small test cases to cover edge cases these days. I think we can delete `uvLarge`."
1889988461,8080,knqyf263,2024-12-18T10:21:15Z,I needed clarification on why this function could identify prod dependencies from the source code. Can you please add some comments?
1890190752,8080,nikpivkin,2024-12-18T12:53:52Z,Added https://github.com/aquasecurity/trivy/pull/8080/commits/2a4674ab1270de6aeb4acae39f23a466ac6ae7da
1890190982,8080,nikpivkin,2024-12-18T12:54:03Z,Removed https://github.com/aquasecurity/trivy/pull/8080/commits/cc079a7ab4cd9b382c2fd0dee015d048d81ba8f3
1890191318,8080,nikpivkin,2024-12-18T12:54:17Z,Done https://github.com/aquasecurity/trivy/pull/8080/commits/602a839e19dbf52fbe30f1ba8638affb73e127f6
1890606062,8080,knqyf263,2024-12-18T17:31:44Z,"Are development dependencies listed in `[package.dev-dependencies]`? If so, we need to parse them for `--include-dev-deps`."
1891199143,8080,knqyf263,2024-12-19T06:00:13Z,We will do that in a separate PR.
1891328554,8080,DmitriyLewen,2024-12-19T08:19:02Z,"> Are development dependencies listed in [package.dev-dependencies]? If so, we need to parse them for --include-dev-deps.

Users don't always need to scan development dependencies, so we don't always use  `Dev` field and just skip them.
@knqyf263  Do you have a feature request?

If not, I suggest waiting for a user request (like we did for yarn dependencies).
"
1919756905,8177,DmitriyLewen,2025-01-17T08:45:50Z,"I added info about `-` and `0` into logs:
```bash
2025-01-17T14:37:53+06:00       INFO    [report] Report Summary table contains special symbols  '-'=""Target didn't scanned"" '0'=""Target scanned, but didn't contain vulns/misconfigs/secrets/licenses""

Report Summary

┌─────────────────────────────────────────────┬──────────┬─────────────────┬─────────┐
│                   Target                    │   Type   │ Vulnerabilities │ Secrets │
├─────────────────────────────────────────────┼──────────┼─────────────────┼─────────┤


```

But we can add info before table. e.g.:
```
Report Summary

Note:
- `-`: Target didn't scanned.
- `0`: Target scanned, but didn't contain vulns/misconfigs/secrets/licenses.

┌─────────────────────────────────────────────┬──────────┬─────────────────┬─────────┐
│                   Target                    │   Type   │ Vulnerabilities │ Secrets │
├─────────────────────────────────────────────┼──────────┼─────────────────┼─────────┤
```

@aquasecurity/trivy wdyt?"
1919759949,8177,DmitriyLewen,2025-01-17T08:48:18Z,"The summary table contains aggregated targets.
Do we want to split them by `filePath` in this PR or just start working on removing the aggregation (in another PR)?
cc. @knqyf263 "
1922767474,8177,simar7,2025-01-20T18:54:34Z,"Should we elaborate on why a certain file ""didn't scan""? Is it because it was unable to get parsed, wasn't valid for the scan (then maybe we shouldn't even traverse it) or something else?"
1923076075,8177,DmitriyLewen,2025-01-21T05:05:25Z,"I think we can wait for user feedback:

In most cases `-` will be used for the case when the file is scanned by another scanner.
e.g., we scanned `Dockerfile`, and `-` will be for vulnerabilities.

In case the file is invalid (e.g. wrong lock file) - the report will not include the result with this file."
1933152414,8177,knqyf263,2025-01-29T03:07:27Z,"I prefer putting it in the footer.

```
Legend:
- `-`: Not scanned
- `0`: Clean (no security findings detected)
```"
1933191544,8177,knqyf263,2025-01-29T03:18:31Z,"I didn't split aggregated results, but, actually yes, we can split them in the table writer. I think we should do that in this PR. We will not need the logic after removing the aggregation, though."
1933339983,8177,DmitriyLewen,2025-01-29T06:44:23Z,"examples:

```
2025-01-29T12:43:10+06:00       WARN    [report] Supported files for vuln scanner(s) not found.

2025-01-29T12:43:39+06:00       WARN    [report] No results found for secret scanner(s).

2025-01-29T12:43:42+06:00       WARN    [report] Supported files for vuln/misconfig scanner(s) not found. No results found for secret scanner(s).

2025-01-29T12:43:47+06:00       WARN    [report] Scanners are not enabled.


```"
1933391082,8177,DmitriyLewen,2025-01-29T07:42:04Z,"This check is required to hide OS Package licenses from summary table.
This is necessary to avoid confusion - when we show that we were looking for licenses for OS packages, but there were no OS packages in the scanned folder.

e.g.:
```
➜ ./trivy -d fs ./cmd --scanners license

Report Summary

Legend:
- '-': Not scanned
- '0': Clean (no security findings detected)
┌───────────────────────┬──────┬──────────┐
│        Target         │ Type │ Licenses │
├───────────────────────┼──────┼──────────┤
│ OS Packages           │  -   │    0     │
└───────────────────────┴──────┴──────────┘

```

But on the other hand it will be a problem for scanning an image where we did not find OS packages.
because the user may think that we did not look for licenses for OS package files.

But the second case is more rare, so I chose this way.

Tell me - if you disagree or have other ideas"
1933392989,8177,DmitriyLewen,2025-01-29T07:44:00Z,"Similar case.

We only keep file licenses and dpkg licenses (but we remove them in `applier`) in this slice.

So the report can only include file licenses.
We don't need to show this result if the `--liecense-full` flag is not set."
1933619210,8177,knqyf263,2025-01-29T10:24:02Z,"Actually, after we introduce the summary table, I  don't think we have to show OS packages when Trivy is unable to find OS packages."
1933669365,8177,DmitriyLewen,2025-01-29T10:58:17Z,"it make sense. 
Removed in https://github.com/aquasecurity/trivy/pull/8177/commits/28ebb248359928ee4e1dd65409ec0fb17fecc4fc"
1933673301,8177,DmitriyLewen,2025-01-29T11:01:03Z,Done - https://github.com/aquasecurity/trivy/pull/8177/commits/84169b4fc9922ebb285938dc0403b16ef5680764 + https://github.com/aquasecurity/trivy/pull/8177/commits/892d6de100872ccb3e9f2019366a4555c86176c9
1933673597,8177,DmitriyLewen,2025-01-29T11:01:17Z,changed in https://github.com/aquasecurity/trivy/pull/8177/commits/e11221a1af736f987de1aa165f28d1658efdacdf
1933701726,8177,knqyf263,2025-01-29T11:21:59Z,"For example, suppose a flag has already been added for a long time, and we don't want to terminate a program for backward compatibility as it will change behavior. In that case, we have to make it a warning, but an error is basically better because the user may not see the warning message.

```suggestion
		return xerrors.New(`""--no-summary-table"" can be used only with ""--format table"".`)
```"
1933708577,8177,knqyf263,2025-01-29T11:27:16Z,"It looks like the legend is still in header, not footer."
1933744147,8177,DmitriyLewen,2025-01-29T11:51:43Z,"Sorry. Something ""stuck"" me. I don't know why I added legend before summary table.
Fixed in https://github.com/aquasecurity/trivy/pull/8177/commits/7f863b96ec4101f3bba1a6ebd4a0cf8aa07e1a4b

"
1933749871,8177,DmitriyLewen,2025-01-29T11:55:29Z,"I saw one case - we show log after summary table:
```

2025-01-29T17:51:04+06:00       INFO    Detected config files   num=0
2025-01-29T17:51:04+06:00       DEBUG   Specified ignore file does not exist    file="".trivyignore""
2025-01-29T17:51:04+06:00       DEBUG   [vex] VEX filtering is disabled

Report Summary

┌─────────────────┬──────┬─────────────────┬───────────────────┬─────────┬──────────┐
│     Target      │ Type │ Vulnerabilities │ Misconfigurations │ Secrets │ Licenses │
├─────────────────┼──────┼─────────────────┼───────────────────┼─────────┼──────────┤
│ gson-2.11.0.jar │ jar  │        2        │         -         │    -    │    -     │
└─────────────────┴──────┴─────────────────┴───────────────────┴─────────┴──────────┘
Legend:
- '-': Not scanned
- '0': Clean (no security findings detected)

2025-01-29T17:51:04+06:00       INFO    Table result includes only package filenames. Use '--format json' option to get the full path to the package file.

Java (jar)

Total: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 1, CRITICAL: 0)

┌───────────────────────────────────────────────────────┬────────────────┬──────────┬────────┬───────────────────┬───────────────────────┬─────────────────────────────────────────────────────┐
│                        Library                        │ Vulnerability  │ Severity │ Status │ Installed Version │     Fixed Version     │                        Title                        │
├───────────────────────────────────────────────────────┼────────────────┼──────────┼────────┼───────────────────┼───────────────────────┼─────────────────────────────────────────────────────┤
│ com.fasterxml.jackson.core:jackson-databind           │ CVE-2022-42003 │ HIGH     │ fixed  │ 2.13.4.1          │ 2.12.7.1, 2.13.4.2    │ jackson-databind: deep wrapper array nesting wrt    │
│ (gson-2.11.0.jar)                                     │                │          │        │                   │                       │ UNWRAP_SINGLE_VALUE_ARRAYS                          │
│                                                       │                │          │        │                   │                       │ https://avd.aquasec.com/nvd/cve-2022-42003          │
├───────────────────────────────────────────────────────┼────────────────┼──────────┤        ├───────────────────┼───────────────────────┼─────────────────────────────────────────────────────┤
│ org.apache.logging.log4j:log4j-core (gson-2.11.0.jar) │ CVE-2021-44832 │ MEDIUM   │        │ 2.17.0            │ 2.3.2, 2.12.4, 2.17.1 │ log4j-core: remote code execution via JDBC Appender │
│                                                       │                │          │        │                   │                       │ https://avd.aquasec.com/nvd/cve-2021-44832          │
└───────────────────────────────────────────────────────┴────────────────┴──────────┴────────┴───────────────────┴───────────────────────┴─────────────────────────────────────────────────────┘
```

We might want to add a header (e.g. `result tables`) before result tables (after the legend) to separate summary table from other tables.

but on the other hand I think it's redundant.
"
1940627922,8177,knqyf263,2025-02-04T07:23:54Z,"nit:

```suggestion
- Includes columns for enabled [scanners](../references/terminology.md#scanner) only.
```"
1940629370,8177,knqyf263,2025-02-04T07:25:16Z,"
```suggestion
    - `-` means that the scanner didn't scan this target.
    - `0` means that the scanner scanned this target, but found no security issues.
```"
1940701927,8177,knqyf263,2025-02-04T08:18:02Z,"nit: We can probably remove an iteration over `vulns`.

```suggestion
	// Save packages to display them in the table even if no vulnerabilities were found
	resultMap := lo.SliceToMap(result.Packages, func(pkg ftypes.Package) (string, *types.Result) {
		return rootJarFromPath(pkg.FilePath), &types.Result{
			Target: lo.Ternary(pkg.FilePath != """", pkg.FilePath, result.Target),
			Class:  result.Class,
			Type:   result.Type,
		}
	})

	for _, vuln := range result.Vulnerabilities {
		pkgPath := rootJarFromPath(vuln.PkgPath)
		resultMap[pkgPath].Vulnerabilities = append(resultMap[pkgPath].Vulnerabilities, vuln)
	}

	newResults := lo.Values(resultMap)
	sort.Slice(newResults, func(i, j int) bool {
		return newResults[i].Target < newResults[j].Target
	})
	return lo.FromSlicePtr(newResults)
```"
1940728683,8177,knqyf263,2025-02-04T08:38:08Z,"It might be time to split into functins.

```diff
diff --git a/pkg/scanner/local/scan.go b/pkg/scanner/local/scan.go
index 55178e30d..8a1e2670d 100644
--- a/pkg/scanner/local/scan.go
+++ b/pkg/scanner/local/scan.go
@@ -258,29 +258,48 @@ func (s Scanner) scanLicenses(target types.ScanTarget, options types.ScanOptions
 		return nil
 	}
 
    var results types.Results
 	scanner := licensing.NewScanner(options.LicenseCategories)
 
-	// License - OS packages
-	if len(target.Packages) > 0 {
-		var osPkgLicenses []types.DetectedLicense
-		for _, pkg := range target.Packages {
-			for _, license := range pkg.Licenses {
-				osPkgLicenses = append(osPkgLicenses, toDetectedLicense(scanner, license, pkg.Name, """"))
-			}
+	// Scan licenses for OS packages
+	if result := s.scanOSPackageLicenses(target.Packages, scanner); result != nil {
+		results = append(results, *result)
+	}
+
+	// Scan licenses for language-specific packages
+	results = append(results, s.scanApplicationLicenses(target.Applications, scanner)...)
+
+	// Scan licenses in file headers or license files
+	if result := s.scanFileLicenses(target.Licenses, scanner, options); result != nil {
+		results = append(results, *result)
+	}
+
+	return results
+}
+
+func (s Scanner) scanOSPackageLicenses(packages []ftypes.Package, scanner licensing.Scanner) *types.Result {
+	if len(packages) == 0 {
+		return nil
+	}
+
+	var licenses []types.DetectedLicense
+	for _, pkg := range packages {
+		for _, license := range pkg.Licenses {
+			licenses = append(licenses, toDetectedLicense(scanner, license, pkg.Name, """"))
 		}
-		// We only need to add result with OS package licenses if Packages were found.
-		// This is to avoid user confusion.
-		// e.g. when we didn't find packages but show that we didn't find licenses in the Packages.
-		results = append(results, types.Result{
-			Target:   ""OS Packages"",
-			Class:    types.ClassLicense,
-			Licenses: osPkgLicenses,
-		})
 	}
 
-	// License - language-specific packages
-	for _, app := range target.Applications {
+	return &types.Result{
+		Target:   ""OS Packages"",
+		Class:    types.ClassLicense,
+		Licenses: licenses,
+	}
+}
+
+func (s Scanner) scanApplicationLicenses(apps []ftypes.Application, scanner licensing.Scanner) []types.Result {
+	var results []types.Result
+
+	for _, app := range apps {
 		var langLicenses []types.DetectedLicense
 		for _, lib := range app.Packages {
 			for _, license := range lib.Licenses {
@@ -304,35 +323,34 @@ func (s Scanner) scanLicenses(target types.ScanTarget, options types.ScanOptions
 		})
 	}
 
-	// License - file header or license file
-	if options.LicenseFull {
-		var fileLicenses []types.DetectedLicense
-		for _, license := range target.Licenses {
-			for _, finding := range license.Findings {
-				category, severity := scanner.Scan(finding.Name)
-				fileLicenses = append(fileLicenses, types.DetectedLicense{
-					Severity:   severity,
-					Category:   category,
-					FilePath:   license.FilePath,
-					Name:       finding.Name,
-					Confidence: finding.Confidence,
-					Link:       finding.Link,
-				})
+	return results
+}
 
-			}
-		}
+func (s Scanner) scanFileLicenses(licenses []ftypes.LicenseFile, scanner licensing.Scanner, options types.ScanOptions) *types.Result {
+	if !options.LicenseFull {
+		return nil
+	}
 
-		// We only need to add the result with license files if the `--license-full` flag is enabled.
-		// This is to avoid user confusion.
-		// e.g. the user might think that we were looking for licenses but didn't find them.
-		results = append(results, types.Result{
-			Target:   ""Loose File License(s)"",
-			Class:    types.ClassLicenseFile,
-			Licenses: fileLicenses,
-		})
+	var detectedLicenses []types.DetectedLicense
+	for _, license := range licenses {
+		for _, finding := range license.Findings {
+			category, severity := scanner.Scan(finding.Name)
+			detectedLicenses = append(detectedLicenses, types.DetectedLicense{
+				Severity:   severity,
+				Category:   category,
+				FilePath:   license.FilePath,
+				Name:       finding.Name,
+				Confidence: finding.Confidence,
+				Link:       finding.Link,
+			})
+		}
 	}
 
-	return results
+	return &types.Result{
+		Target:   ""Loose File License(s)"",
+		Class:    types.ClassLicenseFile,
+		Licenses: detectedLicenses,
+	}
 }
 
 func toDetectedMisconfiguration(res ftypes.MisconfResult, defaultSeverity dbTypes.Severity,
```"
1940744746,8177,knqyf263,2025-02-04T08:49:47Z,"We may need to write the rendered output to a buffer and flush it later to stdout, like [we do in each renderer](https://github.com/aquasecurity/trivy/blob/2ffadaae8e9743067b1cb0035f1784f05831f07f/pkg/report/table/vulnerability.go#L49).
https://github.com/aquasecurity/trivy/blob/7f863b96ec4101f3bba1a6ebd4a0cf8aa07e1a4b/pkg/report/table/table.go#L282

"
1942330835,8177,DmitriyLewen,2025-02-05T06:51:09Z,changed in https://github.com/aquasecurity/trivy/pull/8177/commits/d37ad35f806eacc63d1a6f366207c68b770112f9
1942331074,8177,DmitriyLewen,2025-02-05T06:51:26Z,"nice catch!
Removed in https://github.com/aquasecurity/trivy/pull/8177/commits/ba8f75697d971da648ace136657f323160d9fcce"
1942331606,8177,DmitriyLewen,2025-02-05T06:52:07Z,changed in https://github.com/aquasecurity/trivy/pull/8177/commits/786e704264f691391a0130536ce4256adacd583e
1942333988,8177,DmitriyLewen,2025-02-05T06:54:54Z,"I used Renderer interface for summary table - https://github.com/aquasecurity/trivy/pull/8177/commits/878b9f4896973781af1358e6d6459cb756a20c8d

I found that we have same problem in `main` branch:
```bash

2025-02-05T12:53:12+06:00       INFO    Table result includes only package filenames. Use '--format json' option to get the full path to the package file.

Java (jar)

Total: 4 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 2, CRITICAL: 0)

┌─────────────────────────────────────────────────────────────┬────────────────┬──────────┬────────┬───────────────────┬───────────────────────┬─────────────────────────────────────────────────────┐
│                           Library                           │ Vulnerability  │ Severity │ Status │ Installed Version │     Fixed Version     │                        Title                        │
├─────────────────────────────────────────────────────────────┼────────────────┼──────────┼────────┼───────────────────┼───────────────────────┼─────────────────────────────────────────────────────┤
│ com.fasterxml.jackson.core:jackson-databind                 │ CVE-2022-42003 │ HIGH     │ fixed  │ 2.13.4.1          │ 2.12.7.1, 2.13.4.2    │ jackson-databind: deep wrapper array nesting wrt    │
│ (jackson-databind-2.13.4.1.jar)                             │                │          │        │                   │                       │ UNWRAP_SINGLE_VALUE_ARRAYS                          │
│                                                             │                │          │        │                   │                       │ https://avd.aquasec.com/nvd/cve-2022-42003          │
├─────────────────────────────────────────────────────────────┤                │          │        │                   │                       │                                                     │
│ com.fasterxml.jackson.core:jackson-databind                 │                │          │        │                   │                       │                                                     │
│ (gson-2.11.0.jar)                                           │                │          │        │                   │                       │                                                     │
│                                                             │                │          │        │                   │                       │                                                     │
├─────────────────────────────────────────────────────────────┼────────────────┼──────────┤        ├───────────────────┼───────────────────────┼─────────────────────────────────────────────────────┤
│ org.apache.logging.log4j:log4j-core (log4j-core-2.17.0.jar) │ CVE-2021-44832 │ MEDIUM   │        │ 2.17.0            │ 2.3.2, 2.12.4, 2.17.1 │ log4j-core: remote code execution via JDBC Appender │
│                                                             │                │          │        │                   │                       │ https://avd.aquasec.com/nvd/cve-2021-44832          │
├─────────────────────────────────────────────────────────────┤                │          │        │                   │                       │                                                     │
│ org.apache.logging.log4j:log4j-core (gson-2.11.0.jar)       │                │          │        │                   │                       │                                                     │
│                                                             │                │          │        │                   │                       │                                                     │
└─────────────────────────────────────────────────────────────┴────────────────┴──────────┴────────┴───────────────────┴───────────────────────┴─────────────────────────────────────────────────────┘
2025-02-05T12:53:12+06:00       INFO    Table result includes only package filenames. Use '--format json' option to get the full path to the package file.

Node.js (node-pkg)

Total: 5 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 2, CRITICAL: 1)

┌─────────────────────────────┬────────────────┬──────────┬────────┬───────────────────┬─────────────────────┬─────────────────────────────────────────────────────────────┐
│           Library           │ Vulnerability  │ Severity │ Status │ Installed Version │    Fixed Version    │                            Title                            │
├─────────────────────────────┼────────────────┼──────────┼────────┼───────────────────┼─────────────────────┼─────────────────────────────────────────────────────────────┤
│ loader-utils (package.json) │ CVE-2022-37601 │ CRITICAL │ fixed  │ 2.0.2             │ 2.0.3, 1.4.1        │ loader-utils: prototype pollution in function parseQuery in │
│                             │                │          │        │                   │                     │ parseQuery.js                                               │
│                             │                │          │        │                   │                     │ https://avd.aquasec.com/nvd/cve-2022-37601                  │
│                             ├────────────────┼──────────┤        │                   ├─────────────────────┼─────────────────────────────────────────────────────────────┤
│                             │ CVE-2022-37599 │ HIGH     │        │                   │ 1.4.2, 2.0.4, 3.2.1 │ loader-utils: regular expression denial of service in       │
│                             │                │          │        │                   │                     │ interpolateName.js                                          │
│                             │                │          │        │                   │                     │ https://avd.aquasec.com/nvd/cve-2022-37599                  │
│                             ├────────────────┤          │        │                   │                     ├─────────────────────────────────────────────────────────────┤
│                             │ CVE-2022-37603 │          │        │                   │                     │ loader-utils: Regular expression denial of service          │
│                             │                │          │        │                   │                     │ https://avd.aquasec.com/nvd/cve-2022-37603                  │
├─────────────────────────────┼────────────────┼──────────┤        ├───────────────────┼─────────────────────┼─────────────────────────────────────────────────────────────┤
│ nanoid (package.json)       │ CVE-2021-23566 │ MEDIUM   │        │ 3.1.25            │ 3.1.31              │ nanoid: Information disclosure via valueOf() function       │
│                             │                │          │        │                   │                     │ https://avd.aquasec.com/nvd/cve-2021-23566                  │
│                             ├────────────────┤          │        │                   ├─────────────────────┼─────────────────────────────────────────────────────────────┤
│                             │ CVE-2024-55565 │          │        │                   │ 5.0.9, 3.3.8        │ nanoid: nanoid mishandles non-integer values                │
│                             │                │          │        │                   │                     │ https://avd.aquasec.com/nvd/cve-2024-55565                  │
└─────────────────────────────┴────────────────┴──────────┴────────┴───────────────────┴─────────────────────┴─────────────────────────────────────────────────────────────┘

```
So i want to fix that in separate PR.
"
1942469011,8177,DmitriyLewen,2025-02-05T08:53:22Z,@knqyf263 - https://github.com/aquasecurity/trivy/pull/8357
1977038136,8177,DmitriyLewen,2025-03-03T08:04:18Z,"I thought we could just enable all scanners. But I think we need to use the same format(logic) for `convert` and other subcommands.
So i enabled `--scanners` that users can get summary table as for `table` format.
"
1977040643,8177,DmitriyLewen,2025-03-03T08:06:37Z,@knqyf263 I rebased and updated PR with updated interface
1977195799,8177,knqyf263,2025-03-03T09:50:26Z,"```suggestion
	if scanners := lo.Intersect(resultByFiles, r.scanners); len(scanners) > 0 {
		r.logger.Warn(""Supported files for scanner(s) not found."", log.Any(""scanners"", scanners))
	}
	if scanners := lo.Intersect(resultByFindings, r.scanners); len(scanners) > 0 {
		r.logger.Warn(""No issues detected with scanner(s)."", log.Any(""scanners"", scanners))
	}
```"
1977196195,8177,knqyf263,2025-03-03T09:50:40Z,"```suggestion
	scanners   []Scanner
	loggers *log.Logger
```"
1977196637,8177,knqyf263,2025-03-03T09:50:59Z,"```suggestion
		scanners:   ss,
		logger: log.WithPrefix(""report""),
```"
1977196877,8177,knqyf263,2025-03-03T09:51:10Z,"```suggestion
		r.logger..Warn(""No enabled scanners found. Summary table will not be displayed."")
```"
1977221979,8177,DmitriyLewen,2025-03-03T10:03:46Z,changed in https://github.com/aquasecurity/trivy/pull/8177/commits/67a729cd2b36e3171316c26133da2e5a15c8b9a2
1977222051,8177,DmitriyLewen,2025-03-03T10:03:49Z,changed in https://github.com/aquasecurity/trivy/pull/8177/commits/67a729cd2b36e3171316c26133da2e5a15c8b9a2
1977222130,8177,DmitriyLewen,2025-03-03T10:03:51Z,changed in https://github.com/aquasecurity/trivy/pull/8177/commits/67a729cd2b36e3171316c26133da2e5a15c8b9a2
1977222183,8177,DmitriyLewen,2025-03-03T10:03:53Z,changed in https://github.com/aquasecurity/trivy/pull/8177/commits/67a729cd2b36e3171316c26133da2e5a15c8b9a2
1977239864,8177,knqyf263,2025-03-03T10:15:35Z,"This is a major UI change, so there might be some backlash from the community. In that case, since switching from opt-out to opt-in is possible, it might be a good idea to mark it as experimental.

Also, as @simar7 [pointed out](https://github.com/aquasecurity/trivy/discussions/8446#discussioncomment-12319722), boolean flags are not very flexible. Specifying it as something like `--table summary,detail` could be an alternative option. This approach would allow us to meet future requests from users who may only want to display the summary table, and by changing the default values, it would be easy to switch between opt-in and opt-out."
1977244300,8177,DmitriyLewen,2025-03-03T10:17:47Z,hm... it make sense. I will update PR.
1977269437,8177,knqyf263,2025-03-03T10:30:53Z,"There are several options:

- --table
- --table-view
- --table-format
- --table-mode

Also,

- summary|detail
- summary|detailed
- etc.
"
1977273226,8177,nikpivkin,2025-03-03T10:33:37Z,"I think this is a good idea.
In the `trivy-aws` plugin, the report flag takes an enumeration:
> --report string specify a report format for the output (all,summary) (default “all”)"
1977275054,8177,DmitriyLewen,2025-03-03T10:34:51Z,`--table-mode` + `summary|details` (with `s` suffix) are my favorite.
1977296637,8177,knqyf263,2025-03-03T10:49:39Z,"My friend :) recommended `detailed`, but you can decide it.

---
When deciding on terminology to distinguish between a concise summary output and a more exhaustive one, many tools and UIs use the terms **“Summary”** and **“Detailed.”** While “Detail” or “Details” might seem similar at first glance, **“detailed”** is often chosen for the following reasons:

1. **Consistent Adjective Pairing**  
   - In English, it’s common to describe views or reports using adjectives. For instance, many interfaces provide a “Summary View” and a “Detailed View,” or a “Summary Report” and a “Detailed Report.” Using “detailed” as an adjective aligns naturally with “summary” in such contexts.

2. **Clear Mode Indicator**  
   - When specifying a mode in a CLI or configuration file, saying `detailed` conveys that you want the more comprehensive or in-depth version of the output. An adjective like “detailed” feels more intuitive than the noun form “details,” which might be perceived as describing the objects being displayed rather than the mode or style of display.

3. **Established Convention**  
   - Many existing tools (even if they don’t directly use the exact words “summary” and “detailed”) follow the pattern of an abbreviated or condensed output versus a more verbose output. Where explicit labels are used, it’s more common to see “Detailed” than “Details” for the extended version.

4. **Smoother Documentation**  
   - Documentation and user guides often refer to “Detailed mode” (or a “Detailed report”), making it very clear that it’s an expanded form of the output. Conversely, “Details mode” or “Details report” can sound slightly off in English usage, as it doesn’t match the typical way we describe different presentation modes.

In short, **“detailed”** pairs nicely with **“summary”** and is more recognizable to users as the counterpart for a “deep-dive” option, while “detail” or “details” tend to read more like nouns referring to the actual data rather than the presentation style."
1977298780,8177,knqyf263,2025-03-03T10:51:11Z,"`--table-mode` also looks good to me. Then, the pairing of ""summary mode"" and ""detailed mode"" may be straightforward."
1978119487,8177,simar7,2025-03-03T20:02:16Z,"In the interest of not committing bike shedding... I'll vote for `--table-mode` flag with `=detailed,summary` as values. 😆 "
1978829936,8177,knqyf263,2025-03-04T07:58:14Z,"Since it's a normal usage, we don't need to use a note, IMO.

```suggestion
You can use `--table-mode` flag to enable/disable table mode(s). 
```"
1978830105,8177,knqyf263,2025-03-04T07:58:22Z,"nit

```suggestion
|             Mode             | Enabled by default |
```"
1978832122,8177,knqyf263,2025-03-04T07:59:59Z,"nit

```suggestion
Detailed tables contain information about found security issues for each target with more detailed information (CVE-ID, severity, version, etc.).
```"
1978832892,8177,DmitriyLewen,2025-03-04T08:00:35Z,"Changed `--no-summary-table` to `--table-mode` - https://github.com/aquasecurity/trivy/pull/8177/commits/ea453d8774f327ce5b8bc802142001a7bfd36ba0

Perhaps you will have more ideas.
 "
1978923869,8177,knqyf263,2025-03-04T08:52:08Z,"I played with this PR and found that it's common that no secrets detected. Since warnings should be displayed for unexpected things, I think the info level is better here.

```suggestion
		r.logger.Info(""No issues detected with scanner(s)."", log.Any(""scanners"", scanners))
```"
1978936811,8177,knqyf263,2025-03-04T08:59:07Z,"nit: It's no big deal, but the alignment looks a bit strange when `-` is used in all columns.

```
┌────────┬──────┬─────────────────┬─────────┐
│ Target │ Type │ Vulnerabilities │ Secrets │
├────────┼──────┼─────────────────┼─────────┤
│ -      │  -   │        -        │    -    │
└────────┴──────┴─────────────────┴─────────┘
```

```suggestion
	if len(report.Results) == 0 {
		r.showEmptyResultsWarning()
		alignments[0] = table.AlignCenter
		t.SetAlignment(alignments...)
		t.AddRows(slices.Repeat([]string{""-""}, len(r.scanners)+2))
	}
```"
1978960143,8177,DmitriyLewen,2025-03-04T09:09:01Z,"Nice catch.
I somehow didn't pay attention to it.

Updated https://github.com/aquasecurity/trivy/pull/8177/commits/014e4c46277fef3903da0d388d443d4a16a0d9d2"
307968523,99,SuperSandro2000,2019-07-27T15:26:56Z,You miss a newline here.
307968594,99,SuperSandro2000,2019-07-27T15:29:54Z,Those lines are kinda useless.
307968605,99,SuperSandro2000,2019-07-27T15:30:28Z,"I would rather see the shell changed here. See https://github.com/hadolint/hadolint/wiki/DL4006
"
307968621,99,SuperSandro2000,2019-07-27T15:30:59Z,Hardcoding version numbers is nice but I would make it a little bit less strict.
307968720,99,SuperSandro2000,2019-07-27T15:33:20Z,I really dislike it when people do this. It prvents you from doing ``docker run --rm -it trivy/trivy bash``.
307973174,99,pascalandy,2019-07-27T18:12:50Z,"true, it's the way I draft my WIP stuff :)"
307973194,99,pascalandy,2019-07-27T18:13:40Z,I don't follow?
307973224,99,pascalandy,2019-07-27T18:14:59Z,"Don't know here.
All official dockerfile use this format as well"
307973266,99,pascalandy,2019-07-27T18:16:26Z,"No problem.
On my critical apps in prod, I prefer to do this as I had one nassssty bug cause but a package in the past."
307973305,99,pascalandy,2019-07-27T18:17:51Z,"Humm, this is strange. 
It should not prevent you to `docker run --rm -it trivy/trivy sh`"
307973410,99,pascalandy,2019-07-27T18:21:17Z,The beauty of this is that you can overide CMD by passing an attribute during the docker run.
307973453,99,pascalandy,2019-07-27T18:22:12Z,done
307989252,99,SuperSandro2000,2019-07-28T07:30:32Z,"GitHub told me that you miss a line break here. This breaks diffs at the end of the file.

Or you just override it and put a trivy before."
307989301,99,SuperSandro2000,2019-07-28T07:32:01Z,But you would need to repeat this in every run. Kinda pointless.
307989366,99,SuperSandro2000,2019-07-28T07:34:07Z,I think this is a mistake.
307989379,99,SuperSandro2000,2019-07-28T07:34:38Z,This would pass sh as an argument to trivy.
308003350,99,pascalandy,2019-07-28T14:06:33Z,"Well, this build runs perfectly. I don't know what to do with this."
308005711,99,SuperSandro2000,2019-07-28T15:05:39Z,You added a new line to the file in a commit somewhere. Consider this solved.
308015887,99,pascalandy,2019-07-28T20:02:43Z,No idea where this is coming from. Can you fix it?
308016381,99,fbartels,2019-07-28T20:16:58Z,"You don't need to delete this dir, when running apk with --no-cache"
308023329,99,pascalandy,2019-07-28T23:25:00Z,It's best practice when installing packages.
308023433,99,pascalandy,2019-07-28T23:27:13Z,agreed
308023774,99,pascalandy,2019-07-28T23:33:57Z,done
308091974,99,SuperSandro2000,2019-07-29T07:42:36Z,No I can't. It's your PR not mine.
308227487,99,pascalandy,2019-07-29T13:25:15Z,Fixed
308227805,99,pascalandy,2019-07-29T13:25:52Z,What do you suggest?
308438563,99,SuperSandro2000,2019-07-29T21:08:50Z,just add trviy to the CMD. If you wan't to change it you just need to write trivy in the command arg.
308463933,99,pascalandy,2019-07-29T22:28:22Z,agreed?
308463976,99,pascalandy,2019-07-29T22:28:31Z,done
308464145,99,pascalandy,2019-07-29T22:29:07Z,done
308487861,99,SuperSandro2000,2019-07-30T00:15:24Z,you are missing a new line here
308497845,99,pascalandy,2019-07-30T01:12:52Z,"This is weird. See screenshot:

![Screen Shot 2019-07-29 at 9 12 32 PM](https://user-images.githubusercontent.com/6694151/62093013-9e4f5e80-b245-11e9-8efb-431b585825b8.jpg)
"
308497864,99,pascalandy,2019-07-30T01:13:04Z,What's missing?
308627454,99,SuperSandro2000,2019-07-30T09:40:35Z,The final new line. You always add a final new line to files in the linux world.
308629588,99,pascalandy,2019-07-30T09:45:07Z,Humm didn't know it. Cheers!
363371828,99,colin-nolan,2020-01-06T16:31:29Z,"Referring to the previous discussion about this line (https://github.com/aquasecurity/trivy/pull/99#discussion_r307968720) - the change from calling `trivy` from the ENTRYPOINT to the CMD does not really make sense...

The first thing I did with the image after building it was to kick the tires:
```
docker run -it --rm -v /var/run/docker.sock:/var/run/docker.sock trivy
```
```
2020-01-06T16:02:08.635Z        ERROR   trivy requires at least 1 argument or --input option
NAME:
  trivy - A simple and comprehensive vulnerability scanner for containers
USAGE:
...
```
That's what I expected - I'd need to pass some arguments. Happily, `trivy` printed usage information telling me that I needed to state the image as the first positional argument - I can now get to work:
```
docker run -it --rm -v /var/run/docker.sock:/var/run/docker.sock trivy ubuntu:18.04
```
```
docker: Error response from daemon: OCI runtime create failed: container_linux.go:345: starting container process caused ""exec: \""ubuntu:18.04\"": executable file not found in $PATH"": unknown.
```
This is not what I expected to happen, given the usage information.

Setting the command to the application like this only makes sense if the application is a service. As `trivy` is not, the only thing that can ever happen is that it is envoked without any arguments and fails... that's not the most useful thing in the world! It would therefore be better if changed back to ENTRYPOINT (and it maintains compatibility with how the existing image works). 

> I really dislike it when people do this. It prvents you from doing `docker run --rm -it trivy/trivy bash`

@SuperSandro2000 if you want to hack around in a container when the entrypoint has been set to something that's not a shell, the way to do it is to override the entrypoint: `docker run --rm -it --entrypoint=bash trivy/trivy`."
363375129,99,colin-nolan,2020-01-06T16:38:50Z,"It would be great if `GOARCH` was based on the actual build architecture/a build variable (e.g. this builds fine for a RPI if set to `arm`). 

However, it may be better to solve this later, in a following PR.
"
363471792,99,SuperSandro2000,2020-01-06T20:37:02Z,"> This is not what I expected to happen

And I expect it to run bash cause all official images do function like this and adding ``--entrypoint`` works but it is not nice."
363472338,99,SuperSandro2000,2020-01-06T20:38:39Z,"I would love to see something like https://github.com/nodejs/docker-node/blob/master/10/buster/docker-entrypoint.sh .
Adds 116 bytes and fixes my and your problem."
363527433,99,colin-nolan,2020-01-06T23:14:46Z,"I've not reviewed what all official images do but I would comment that running a shell inside such a container is perhaps not most people's the main use case. It is interesting to note that ""distroless"" images are seemingly becoming popular now (e.g. those by Google https://github.com/GoogleContainerTools/distroless), which do not support such use case at all.

I wouldn't mind a more exotic entrypoint as you suggested.

"
363528216,99,colin-nolan,2020-01-06T23:17:43Z,These need to be populated (or removed if not relevant).
363554641,99,pascalandy,2020-01-07T01:14:56Z,"please edit them as I'm not the maintainer of this project. Or maybe remove it, and add this task in your backlog. These labels are following best practices."
365021274,99,colin-nolan,2020-01-10T00:14:29Z,I am also not the maintainer ;). I will see if any of the maintainers will get involved.
432822184,99,Johannestegner,2020-05-30T08:19:50Z,"If you are using docker buildx to build multi-arch the `$TARGETARCH` argument (auto injected but needs to be defined) contains the build arch (`amd64`, `arm64` etc). So basically:

```
ARG TARGETARCH
RUN CGO_ENABLED=0 GOOS=linux GOARCH=${TARGETARCH} go build -ldflags ...
```

should work just fine."
509840036,99,pascalandy,2020-10-22T02:20:22Z,I fixed this: https://github.com/aquasecurity/trivy/pull/99/commits/a4b74f494f38933ea597978cc7087245c094498a#diff-dd2c0eb6ea5cfc6c4bd4eac30934e2d5746747af48fef6da689e85b752f39557L45
509841355,99,pascalandy,2020-10-22T02:25:09Z,"agree

> However, it may be better to solve this later, in a following PR."
393040016,433,knqyf263,2020-03-16T13:56:55Z,"If it is vulnerabilities of libraries, we should not the severity of a vendor. We have to think about the way to display the vendor severity for os package vulnerabilities and the NVD/public database severity for library vulnerabilities."
397543183,433,simar7,2020-03-25T00:32:53Z,"Roger that. With the latest changes, this is now possible:

<img width=""1191"" alt=""Pasted Graphic 1"" src=""https://user-images.githubusercontent.com/1254783/77489507-796fb300-6df5-11ea-9dca-cd654db4cacf.png"">

This was a node vulnerability where the vendor (Node) rated it lower than NVD, so we preferred the Node vulnerability instead."
397558898,433,simar7,2020-03-25T01:29:16Z,I'm not sure if this is correct since we have to maintain `Detect` for backwards compatibility. cc @knqyf263 
397834182,433,knqyf263,2020-03-25T13:01:03Z,I think we don't have to store `VendorSeverity` in the result.
398025720,433,knqyf263,2020-03-25T17:11:23Z,"If `ok` is false, we should display the severity of NVD. I couldn't find such a process. Is there something to do it?"
398027530,433,knqyf263,2020-03-25T17:13:51Z,"Trivy is not a library for now, so I think it doesn't matter."
398028120,433,knqyf263,2020-03-25T17:14:37Z,TODO: fill ReportType
398028685,433,knqyf263,2020-03-25T17:15:20Z,"If we send a `ReportType` in a rpc request, we should use it instead of `req.OsFamily`."
398067054,433,simar7,2020-03-25T18:10:56Z,"By default, `GetVulnerability` includes a vulnerability struct that already has a `Severity` populated in it. 

You can see it here https://github.com/aquasecurity/trivy/blob/a4209368fdf3ebb76d9b99efd295993ad224eb71/pkg/vulnerability/vulnerability.go#L54

But there's another point that I think is possible, I added some tests to show that: https://github.com/aquasecurity/trivy/pull/433/commits/6037403fc4429c516bab404d5d3ba6eec6854bf3 and https://github.com/aquasecurity/trivy/pull/433/commits/9b54a4f904d5298cccd1d0940e60b973d421ba71

Good catch!"
398071479,433,simar7,2020-03-25T18:17:39Z,"Yeah, where can we get this from?"
398074207,433,simar7,2020-03-25T18:21:45Z,Could you explain this a little more?
398083639,433,simar7,2020-03-25T18:36:36Z,"Yeah currently `DetectedVulnerability ` includes `Vulnerability` which includes `VendorSeverity`. https://github.com/aquasecurity/trivy/blob/aca31dffb36328d17f6d3a3bd1184cfcd36ffc07/pkg/types/vulnerability.go#L8-L16 

Is there a way we can get rid of it in the result?"
398501249,433,knqyf263,2020-03-26T11:30:29Z,"`GetVulnerability` populates a severity which is sometimes not from NVD. 

nit: BTW, I feel it is weird `getXXX` doesn't return anything."
398502834,433,knqyf263,2020-03-26T11:33:33Z,"We have to add `Type` here.
https://github.com/aquasecurity/trivy/blob/master/rpc/detector/service.proto#L32-L37

But this API exists for backward compatibility because we switched `Detect` to `Scan` for JSON cache. I'm not sure we should maintain this function."
398502980,433,knqyf263,2020-03-26T11:33:49Z,ditto
398780652,433,simar7,2020-03-26T18:01:51Z,Also shouldn't a test be failing right now if this information is missing?
398898124,433,simar7,2020-03-26T21:16:56Z,fixed https://github.com/aquasecurity/trivy/pull/433/commits/fc2eed5def774ca6d0a6e3daa59f865d2cfa83c3
398898193,433,simar7,2020-03-26T21:17:05Z,fixed https://github.com/aquasecurity/trivy/pull/433/commits/fc2eed5def774ca6d0a6e3daa59f865d2cfa83c3
398911855,433,simar7,2020-03-26T21:45:19Z,I added source https://github.com/aquasecurity/trivy/pull/433/commits/bebd23c047d0620a1a6e6d34bb40b2fe8aa8672e and removed the VendorSeverity here https://github.com/aquasecurity/trivy/pull/433/commits/7d7d66085e388907bf5f59032b624ec849577d83
398988449,433,simar7,2020-03-27T01:39:33Z,Note to self: Change this to master once https://github.com/aquasecurity/trivy-db/pull/32 is merged.
400822525,433,knqyf263,2020-03-31T10:58:30Z,"You have to add some tests for light database instead. It may be like the following.

```
			getVulnerability: []db.GetVulnerabilityExpectation{
				{
					Args: db.GetVulnerabilityArgs{
						VulnerabilityID: ""CVE-2019-0001"",
					},
					Returns: db.GetVulnerabilityReturns{
						Vulnerability: dbTypes.Vulnerability{
							VendorSeverity: dbTypes.VendorSeverity{
								vulnerability.Nvd: dbTypes.SeverityLow,
							},
						},
					},
				},
			},
```"
400822890,433,knqyf263,2020-03-31T10:59:04Z,Is this TODO necessary? The bool seems to be already removed.
400823196,433,knqyf263,2020-03-31T10:59:41Z,Note: remove this TODO.
401176841,433,simar7,2020-03-31T19:57:31Z,Added https://github.com/aquasecurity/trivy/pull/433/commits/384e3f36222573bad3151cb07c296e94d6ae2231
406705331,433,knqyf263,2020-04-10T10:43:46Z,"It should point to this commit.
https://github.com/aquasecurity/trivy-db/commit/0a25a37ec16f2e47d37d11129041719ced792275

In addition, you need `go mod tidy`"
406733146,433,knqyf263,2020-04-10T12:20:09Z,Why is the only first one used?
406734729,433,knqyf263,2020-04-10T12:25:06Z,cruft?
406737051,433,knqyf263,2020-04-10T12:32:32Z,"Didn't you fix them, yet?"
406737686,433,knqyf263,2020-04-10T12:34:15Z,I'd like to know why this result doesn't contain `Type`.
406738345,433,knqyf263,2020-04-10T12:36:25Z,This error should be just after line 49.
406739721,433,knqyf263,2020-04-10T12:40:20Z,"nit:
```suggestion
		var source string
		switch reportType {
		case vulnerability.Ubuntu, vulnerability.Alpine, vulnerability.RedHat, vulnerability.RedHatOVAL, vulnerability.Debian, vulnerability.DebianOVAL, vulnerability.CentOS, vulnerability.Fedora, vulnerability.Amazon, vulnerability.OracleOVAL, vulnerability.SuseCVRF, vulnerability.OpenSuseCVRF, vulnerability.Photon:
			source = reportType
		case ""npm"", ""yarn"":
			source = vulnerability.NodejsSecurityWg
		case ""pipenv"", ""poetry"":
			source = vulnerability.PythonSafetyDB
		case ""bundler"":
			source = vulnerability.RubySec
		case ""cargo"":
			source = vulnerability.RustSec
		case ""composer"":
			source = vulnerability.PhpSecurityAdvisories
		c.getVendorSeverity(&vulns[i], source)
```
```"
406740257,433,knqyf263,2020-04-10T12:42:00Z,Did you apply `make fmt`? It's a bit weird compared to `target`.
406740905,433,knqyf263,2020-04-10T12:43:50Z,nit: I think we don't have to change the import order like this.
406741450,433,knqyf263,2020-04-10T12:45:21Z,Is there any reason not to use `result.Type`?
406741761,433,knqyf263,2020-04-10T12:46:22Z,"`rpcResults` has `Type` in the struct, right? Why does it need `resultType` as an argument?"
406741919,433,knqyf263,2020-04-10T12:46:52Z,"Can't we do like the following?
```suggestion
			Type:            result.Type,
```"
407705406,433,simar7,2020-04-13T20:36:17Z,"Si, I just forget to take the commented section out. I've fixed it."
407715249,433,simar7,2020-04-13T20:54:39Z,"The mock was missing it, I added it."
407720566,433,simar7,2020-04-13T21:04:49Z,I think adding the temporal variable of source doesn't really help with duplication. I'd like to leave it as is unless I missed a point.
407723126,433,simar7,2020-04-13T21:09:59Z,Yes I ran `make fmt`
407724806,433,simar7,2020-04-13T21:13:25Z,It's my IDE that thinks this is the right order. I can revert back. I don't think it's a big deal though.
407742030,433,knqyf263,2020-04-13T21:50:18Z,"OK. But I want to know why it doesn't help. If the signature of getVendorSeverity is changed, we have to fix all of them."
407749218,433,simar7,2020-04-13T22:08:04Z,Ah good catch.
407752596,433,simar7,2020-04-13T22:17:02Z,"You are right. I don't recall why I added this, maybe it was prior to introducing the `Type` type. I have removed it now. Thanks!"
407752681,433,simar7,2020-04-13T22:17:16Z,Fixed.
407753494,433,simar7,2020-04-13T22:19:31Z,But it does https://github.com/aquasecurity/trivy/blob/9c2be3d10340427634fa74c4193cc06961b995ef/go.mod#L8 Is that not right?
407756849,433,simar7,2020-04-13T22:28:21Z,"Fair enough, I refactored it."
409507789,433,knqyf263,2020-04-16T12:14:57Z,OK.
409508406,433,knqyf263,2020-04-16T12:16:01Z,"Ah, I see. I saw the only first one. After `go mod tidy`, they will be removed."
1168657039,4058,knqyf263,2023-04-17T13:01:07Z,"I think we can change it to `[]*spdx.Package`.

```suggestion
	packages := []*spdx.Package
```"
1168661125,4058,knqyf263,2023-04-17T13:04:23Z,I think they are no longer needed after changing packages to slice.
1168663024,4058,knqyf263,2023-04-17T13:05:29Z,I'm curious why we need go-cmp here. Doesn't `assert.Equal` work?
1168665222,4058,knqyf263,2023-04-17T13:07:13Z,`Creators` is a slice. Do we need to sort it?
1168666272,4058,knqyf263,2023-04-17T13:07:57Z,I believe we will not need that.
1168667531,4058,knqyf263,2023-04-17T13:08:51Z,Is the order of files inconsistent?
1168709377,4058,FrimIdan,2023-04-17T13:37:05Z,"I kept it in order to remove duplications, i've used `[]*spdx.Package` before but then I've got multiple Packages with the same `ElementID`."
1168713516,4058,FrimIdan,2023-04-17T13:39:39Z,"oops, I'll remove it :)
"
1168714778,4058,FrimIdan,2023-04-17T13:40:16Z,since the map is used to remove duplications I still needed it.
1168721221,4058,FrimIdan,2023-04-17T13:43:48Z,"I've done it to be on the safe side, so the goldan file will not need to be changed to the exact order.
I can remove it if you like."
1168722707,4058,FrimIdan,2023-04-17T13:44:12Z,same as in https://github.com/aquasecurity/trivy/pull/4058#discussion_r1168714778
1168724934,4058,FrimIdan,2023-04-17T13:45:03Z,"same as https://github.com/aquasecurity/trivy/pull/4058#discussion_r1168721221
should I remove it?"
1168725788,4058,knqyf263,2023-04-17T13:45:35Z,Could you share an example where you saw the duplications?
1168727277,4058,knqyf263,2023-04-17T13:46:39Z,"Yes, it is relevant to this discussion.
https://github.com/aquasecurity/trivy/pull/4058#discussion_r1168709377"
1168732581,4058,knqyf263,2023-04-17T13:50:04Z,"IMO, the golden file should be sorted in the exact order. We can remove it.
It would be great if `bom.CreationInfo.Creators` implements [sort.Interface](https://pkg.go.dev/sort#Interface), though."
1168748901,4058,FrimIdan,2023-04-17T14:01:10Z,"@knqyf263 Sure, I've got it from the unit test `TestMarshaler_Marshal - happy path for container scan`, `actionpack` define in `Target: ""app/subproject/Gemfile.lock"",` and in `Target: ""app/Gemfile.lock"",`
```
=== RUN   TestMarshaler_Marshal/happy_path_for_container_scan
    marshal_test.go:770: Marshal mismatch (-want +got):
          &v2_3.Document{
          	... // 6 identical fields
          	DocumentComment: """",
          	CreationInfo:    &{Creators: {{Creator: ""aquasecurity"", CreatorType: ""Organization""}, {Creator: ""trivy-0.38.1"", CreatorType: ""Tool""}}, Created: ""2021-08-25T12:20:30Z""},
          	Packages: []*v2_3.Package{
          		... // 3 identical elements
          		&{PackageName: ""centos"", PackageSPDXIdentifier: ""OperatingSystem-197f9a00ebcb51f0"", PackageVersion: ""8.3.2011"", PackageDownloadLocation: ""NONE"", ...},
          		&{PackageName: ""actionpack"", PackageSPDXIdentifier: ""Package-826226d056ff30c0"", PackageVersion: ""7.0.1"", PackageDownloadLocation: ""NONE"", ...},
        + 		&{
        + 			PackageName:             ""actionpack"",
        + 			PackageSPDXIdentifier:   ""Package-826226d056ff30c0"",
        + 			PackageVersion:          ""7.0.1"",
        + 			PackageDownloadLocation: ""NONE"",
        + 			PackageLicenseConcluded: ""NONE"",
        + 			PackageLicenseDeclared:  ""NONE"",
        + 			PackageExternalReferences: []*v2_3.PackageExternalReference{
        + 				&{
        + 					Category: ""PACKAGE-MANAGER"",
        + 					RefType:  ""purl"",
        + 					Locator:  ""pkg:gem/actionpack@7.0.1"",
        + 				},
        + 			},
        + 		},
          		&{PackageName: ""actioncontroller"", PackageSPDXIdentifier: ""Package-eb0263038c3b445b"", PackageVersion: ""7.0.1"", PackageDownloadLocation: ""NONE"", ...},
          		&{PackageName: ""binutils"", PackageSPDXIdentifier: ""Package-fd0dc3cf913d5bc3"", PackageVersion: ""2.30-93.el8"", PackageDownloadLocation: ""NONE"", ...},
          	},
          	Files:         nil,
          	OtherLicenses: nil,
          	... // 4 identical fields
```

"
1168758194,4058,FrimIdan,2023-04-17T14:08:13Z,done
1168758437,4058,FrimIdan,2023-04-17T14:08:22Z,removed
1168758676,4058,FrimIdan,2023-04-17T14:08:32Z,removed
1168810267,4058,knqyf263,2023-04-17T14:33:18Z,"Thanks. That is what I expected, and I wanted to confirm it. I want to change it to have both files, but it can be done in another PR. We can leave it as is."
1168815167,4058,knqyf263,2023-04-17T14:35:39Z,"```suggestion
	ret := maps.Values(packages)
	sort.Slice(ret, func(){...}
	return ret
```"
1168815927,4058,knqyf263,2023-04-17T14:36:14Z,"I'd sort packages when marshaling rather than in tests.
https://github.com/aquasecurity/trivy/pull/4058#discussion_r1168815167"
1168859942,4058,FrimIdan,2023-04-17T15:01:14Z,done
1168860294,4058,FrimIdan,2023-04-17T15:01:28Z,done
453951381,542,simar7,2020-07-13T21:44:31Z,Please avoid use of global constants. You should make these as part of the server config struct that's available here https://github.com/aquasecurity/trivy/blob/1218e111ef8064bb2913ba7f6467745b5acbf6b4/internal/server/config/config.go#L8-L15 and initialize them here https://github.com/aquasecurity/trivy/blob/1218e111ef8064bb2913ba7f6467745b5acbf6b4/internal/server/config/config.go#L17-L29 
453952226,542,simar7,2020-07-13T21:45:57Z,DRY: Have one function that can take the current args and in addition have another arg for the appropriate action.
453953246,542,simar7,2020-07-13T21:47:20Z,"What's the difference between the two? Running them locally they are the same: 

```
curl localhost:4954/metrics
# HELP trivy Gauge Metrics associated with trivy - Last DB Update, Last DB Update Attempt ...
# TYPE trivy gauge
trivy{action=""last_db_update""} 1.594642327e+09
trivy{action=""last_db_update_attempt""} 1.594642327e+09
```"
453953487,542,simar7,2020-07-13T21:47:38Z,inline
453957307,542,simar7,2020-07-13T21:53:33Z,"This will panic. Logger will only log the error that happens but it will not prevent it from getting used in the future.

A simple way to reproduce this is to pass in `nil` for `GaugeMetric` which would signal that it was not initialized. "
453958135,542,simar7,2020-07-13T21:54:49Z,Should validate if the input args are sane or not. See previous comment on how this will be part of a panic.
453962378,542,simar7,2020-07-13T22:00:51Z,I think we should probably set a sane `timeout` as not setting one will keep connections open indefinitely. See here https://github.com/prometheus/client_golang/blob/master/prometheus/promhttp/http.go#L333-L342
453995476,542,yashvardhan-kukreja,2020-07-13T23:02:33Z,"So, last DB Update corresponds to the timestamp of last successful DB update.
But last DB update attempt corresponds to the timestamp of last DB update attempt made no matter if it failed or succeeded."
459072487,542,yashvardhan-kukreja,2020-07-22T20:45:39Z,"So @simar7 , if such kind of situation happens, then should I programme the code to panic and exit with status 1. Or should I just programme it to log in the terminal ""GaugeMetric not initialised"" but still **not** make the code exit and hence, allow the user to use the existing session for other functionalities, if they want?"
462742417,542,simar7,2020-07-30T05:24:01Z,The latter. This shouldn't panic and exit as it's an optional component. We should log it and carry on as usual with ensuring that nothing else panics down the road.
465967091,542,simar7,2020-08-05T19:55:07Z,I think you're fine with just having `prometheus gauge found to be nil` as `wantErr`.
465967902,542,simar7,2020-08-05T19:56:35Z,"Lowercase the returned error. `prometheus gauge found to be nil`

 See https://github.com/golang/go/wiki/Errors"
465968288,542,simar7,2020-08-05T19:57:22Z,These comments are not necessary. The code is self documenting.
465968366,542,simar7,2020-08-05T19:57:31Z,remove as well
465969987,542,simar7,2020-08-05T20:00:16Z,This is not needed. In go by default the value will be `nil`. You've added a check before using it in functions where it's used and that's sufficient. 
469803825,542,knqyf263,2020-08-13T09:00:09Z,`Config` is for CLI options. Could you move it to the server package?
469807381,542,knqyf263,2020-08-13T09:06:05Z,"```suggestion
		return xerrors.Errorf(""error initialising the metrics for prometheus endpoint: %w"", err)
```"
469814253,542,knqyf263,2020-08-13T09:17:01Z,I'm just curious why you need `last_db_update_attempt`. Is there any example in other OSS?
469815896,542,knqyf263,2020-08-13T09:19:47Z,`time.Now()` doesn't match with the date when DB is updated. We have to use metadata instead of `time.Now`
469816091,542,knqyf263,2020-08-13T09:20:05Z,Would you wrap this error with some context?
469843833,542,yashvardhan-kukreja,2020-08-13T10:08:24Z,"Actually, the issue mentioned it as one of the requirements, so moved on with that :)
"
485199465,542,yashvardhan-kukreja,2020-09-08T21:13:46Z,"actually, it was an old piece of code which I forgot to refactor. I'll deal with it."
491199141,542,simar7,2020-09-18T21:29:21Z,remove
491199283,542,simar7,2020-09-18T21:29:47Z,remove
513553726,709,knqyf263,2020-10-28T15:47:11Z,"This change increases the possibility of breaking table format on a terminal.

![image](https://user-images.githubusercontent.com/2253692/97459914-ef686980-1944-11eb-88e3-1bf9dff35323.png)

We need to break a line in the middle or get the width of the terminal to dynamically change the output. If the terminal is wide enough, it displays AVD links. Or, we can disable it in the table, add a new key in JSON like `AVDLink`, and put the link into it."
513554157,709,knqyf263,2020-10-28T15:47:41Z,What's going to happen if `VulnerabilityID` is not CVE-ID?
513554329,709,knqyf263,2020-10-28T15:47:55Z,ditto
513554391,709,knqyf263,2020-10-28T15:48:00Z,ditto
513772441,709,simar7,2020-10-28T21:29:03Z,Is that a possibility? If so what could it be? I was assuming it never would be. But in that case today it will just be a 404.
513779194,709,simar7,2020-10-28T21:42:23Z,">We need to break a line in the middle or get the width of the terminal to dynamically change the output. 

Could you expand on what you meant by break a line in the middle?

> If the terminal is wide enough, it displays AVD links.

How wide is wide enough? >80px? Anything under 80px is presented with no links? Is that the idea?

> Or, we can disable it in the table, add a new key in JSON like AVDLink, and put the link into it.

The problem with JSON is highlighted here https://github.com/aquasecurity/trivy/pull/709#issuecomment-714818419

"
513970932,709,knqyf263,2020-10-29T05:00:09Z,There are many vulnerability IDs other than CVE-ID. Most of the vulnerabilities for programming language library are not CVE-ID assigned.  Do you think 404 is acceptable?
513980468,709,knqyf263,2020-10-29T05:20:13Z,">Could you expand on what you meant by break a line in the middle?

I meant something like the following. It does make it harder to copy the link, though.
```
+--------------------------+
|          AVD             |
+--------------------------+
| https://avd.aquasec.com/ |
| nvd/cve-2020-8164        |
+--------------------------+
```

>How wide is wide enough? >80px? Anything under 80px is presented with no links? Is that the idea?

You can calculate it. The width is the total length of package name + vulnerability id + ... + AVD link. Or, you can also output the table to a variable to determine the length of each row.

>I was going to but then realized that adding to JSON means we will need to add it to everywhere (including client/server) in order to keep parity (recall the case with VendorVectors and CWE?).

You said `everywhere`, but AFAIK, we have only artifact and client/server, two places, right? Also, a server doesn't need to return an AVD link because a client is able to generate it. What's the big deal?"
514645251,709,simar7,2020-10-30T00:43:15Z,"Oh! see. Yeah that's not acceptable to be left in like that. I have added a filter to remove such links here https://github.com/aquasecurity/trivy/pull/709/commits/8059cce100230e33e4d1041ef2078a304eb32548
"
514645370,709,simar7,2020-10-30T00:43:42Z,diito^2
514645383,709,simar7,2020-10-30T00:43:46Z,diito^2
515392597,709,simar7,2020-10-30T21:33:35Z,"> You said everywhere, but AFAIK, we have only artifact and client/server, two places, right? Also, a server doesn't need to return an AVD link because a client is able to generate it. What's the big deal?

Fair point. I added it in https://github.com/aquasecurity/trivy/pull/709/commits/554fff31e95edacc0442dfacfbe5b1a130c6440e "
515395659,709,simar7,2020-10-30T21:42:34Z,"How about the following?
<img width=""303"" alt=""image"" src=""https://user-images.githubusercontent.com/1254783/97759276-f36bc700-1abd-11eb-9c96-e9e069bbb3fb.png"">
It can still be resolved and clicked upon (at least in most modern terminal emulators like iTerm) and saves us 8 extra characters. 
"
516425959,709,knqyf263,2020-11-03T04:45:28Z,"OK, let's see how users react. If a lot of users complain about it, we'll remove it from the table."
517020637,709,simar7,2020-11-03T23:46:42Z,OK. I added https://github.com/aquasecurity/trivy/pull/709/commits/ace92e39c7d648e679b5c3569656d5b6d88a1bd4
517483779,709,knqyf263,2020-11-04T16:46:02Z,"Is there any reason that we don't generate an AVD link in `FillInfo`?
https://github.com/aquasecurity/trivy/blob/793a1aa3c83f7a77355e454a12d034964bfa0088/pkg/vulnerability/vulnerability.go#L52-L83"
517484099,709,knqyf263,2020-11-04T16:46:31Z,ditto
517484178,709,knqyf263,2020-11-04T16:46:38Z,ditto
517484289,709,knqyf263,2020-11-04T16:46:46Z,ditto
517484608,709,knqyf263,2020-11-04T16:47:11Z,ditto
517484652,709,knqyf263,2020-11-04T16:47:16Z,ditto
517485082,709,knqyf263,2020-11-04T16:47:54Z,ditto
517485552,709,knqyf263,2020-11-04T16:48:35Z,ditto
517485650,709,knqyf263,2020-11-04T16:48:44Z,ditto
517485857,709,knqyf263,2020-11-04T16:49:02Z,"```suggestion
	header := []string{""Library"", ""Vulnerability ID"", ""Severity"", ""Installed Version"", ""Fixed Version"", ""URL""}
```

`AVD` is not a word users will be familiar with. We probably should use a more generic word such as `URL`, `Reference`, and `Link`. Also, we might be able to display a link other than AVD in the future.

"
517674519,709,simar7,2020-11-04T22:42:48Z,No reason - what's argument in favour?
517680395,709,simar7,2020-11-04T22:57:12Z,"One argument I have against adding it is that in that case we have to solely rely on integration tests far more than we can on unit tests. AFAICT `FillInfo` cannot be easily unit tested and it isn't today.

Nothing against integration testing - just the shorter feedback loop unit testing is something I see enough of a reason to stick with it."
519952262,709,knqyf263,2020-11-09T16:39:50Z,"`dbc` can be injected, so we can write unit tests now, right? If we change the AVD link a little, we have to fix all places now."
520218120,709,simar7,2020-11-10T00:59:57Z,OK. I did it here https://github.com/aquasecurity/trivy/pull/709/commits/934f993f7e0cf5cfd3c6313c8af42e6e2f9904ba
520229269,709,simar7,2020-11-10T01:32:58Z,OK updated  https://github.com/aquasecurity/trivy/pull/709/commits/d1b3bcb5f5760c0b006b40bc05a687738e6c6936
523769837,709,knqyf263,2020-11-15T14:55:57Z,Craft?
523770187,709,knqyf263,2020-11-15T14:59:29Z,Necessary?
523770544,709,knqyf263,2020-11-15T15:02:31Z,"There are 3 places to generate AVD links. Should we define a function? If we change the URL path, we have to fix 3 places."
523770557,709,knqyf263,2020-11-15T15:02:46Z,Here
523770621,709,knqyf263,2020-11-15T15:03:28Z,And here
523770873,709,knqyf263,2020-11-15T15:05:17Z,"I think it's better to put the URL on the rightmost side. We need to add ""URL"" after ""Title""."
525652775,709,simar7,2020-11-18T02:16:38Z,"yes, fixed."
525653011,709,simar7,2020-11-18T02:16:53Z,OK fixed
525664353,709,simar7,2020-11-18T02:29:19Z,OK I refactored into a function: https://github.com/aquasecurity/trivy/pull/709/commits/f36239af4b55d256f63bed147b710059f75b3aa0
525694265,709,simar7,2020-11-18T03:01:03Z,I'm unable to run the linter locally but in the past when I pushed it up it started to complain. I think it's too aggressive as I find this function to have a reasonable cyclomatic complexity.
526318099,709,knqyf263,2020-11-18T18:16:58Z,You can easily run it. `$ golangci-lint run`.
526321246,709,knqyf263,2020-11-18T18:21:55Z,Where is this file used?
526325654,709,knqyf263,2020-11-18T18:28:56Z,"We already have `References`. Can we add an AVD link to the field?
https://github.com/aquasecurity/trivy-db/blob/master/pkg/types/types.go#L126

In that case, we may not need to generate AVD links in `convert.go` because a server calls `FillInfo` and `References` should have the AVD link. We can just filter and extract the AVD link from `References` in `writer.go`."
526326543,709,knqyf263,2020-11-18T18:30:15Z,"Also, it may not be necessary. If there is an AVD link in `References`, we'll extract it, but if we don't find it, we can return the first element of `References`."
526327411,709,knqyf263,2020-11-18T18:31:39Z,"So, this should be kind of like `GetPrimaryLink`, `FilterForPrimaryLink`, or something like that."
526328404,709,knqyf263,2020-11-18T18:33:24Z,"Also, we can just call `GetPrimaryLink` here. In that case, the URL will not be empty, an AVD link or another link."
526454144,709,simar7,2020-11-18T22:05:58Z,"It's part of a missing test case that was added here https://github.com/aquasecurity/trivy/pull/709/commits/336917b5f2040bbb724c0c75b87c69a0a6864515#diff-fb318d27d837f7ff34aaab41eb90af4ef9f7359bd6dc8a0d23e5718ea5ef608aR50-R66

"
1505401543,6217,DmitriyLewen,2024-02-28T05:57:51Z,"IIUC this is only required for the test.
What if we just created a new test for the `determineRegion` function?"
1505403197,6217,DmitriyLewen,2024-02-28T06:00:20Z,Is https://github.com/boto/botocore/blob/1b6648509bead576aa0bbd433c57b32540c9313a/botocore/data/endpoints.json same file?
1505407336,6217,DmitriyLewen,2024-02-28T06:06:16Z,You can use https://pkg.go.dev/github.com/stretchr/testify/require#Equal here
1505407499,6217,DmitriyLewen,2024-02-28T06:06:31Z,Do we need pointer here?
1506022234,6217,knrc,2024-02-28T14:07:57Z,"That's correct, I'll look at it today."
1506028442,6217,knrc,2024-02-28T14:12:14Z,"It looks to be, and appears to be newer than the version I have installed in the aws cli.  I can change the comment to refer to this instead."
1506032116,6217,knrc,2024-02-28T14:14:44Z,"I chose to use a pointer to distinguish between not matching the regexp and returning a match, but I can return a boolean instead if that's your preference."
1506053103,6217,knrc,2024-02-28T14:27:42Z,"I've removed the function from that interface and created a test interface instead, I wanted to ensure the client has the appropriate region set."
1506053526,6217,knrc,2024-02-28T14:27:54Z,Replaced with a link to the tagged file
1506053714,6217,knrc,2024-02-28T14:28:00Z,Done
1506965415,6217,DmitriyLewen,2024-02-29T04:03:43Z,"You can simply compare with empty string.
 ```
...
region := determineRegion(domain)
	if region == """" {
		return xerrors.Errorf(""ECR : %w"", types.InvalidURLPattern)
	}
...
func determineRegion(domain string) string {
	matches := ecrEndpointMatch.FindStringSubmatch(domain)
	if matches != nil {
		return matches[1]
	}
	return """"
}
```
"
1507031403,6217,knrc,2024-02-29T05:28:06Z,"Technically yes, but not something I'm a fan of to be honest.  I prefer to be explicit."
1507065595,6217,DmitriyLewen,2024-02-29T06:17:59Z,"Typically we use comparison logic with an empty string.
I think it's best to stick to one code style.
It may also make this part of the code difficult to maintain.
Because over time, maintainer must remember why we are using a pointer here."
1507596340,6217,knrc,2024-02-29T13:36:58Z,"If that's your coding style I'll use it, even though I find this pattern is more likely to introduce problems for callers who now need to remember and check for special case returns.  This tends to be clearer with pointer/boolean."
1508445484,6217,DmitriyLewen,2024-03-01T03:44:06Z,"@knrc I found 1 interesting case:
if `AWS_REGION` env != region from domain:
Should we use AWS_REGION (we are overwriting this value now)?

IIUC this case is user mistake (wrong`AWS_REGION`). But perhaps it make sense to show warning log message about this."
1508503562,6217,knrc,2024-03-01T05:36:59Z,"@DmitriyLewen The point of the PR is to override the AWS_REGION setting, if we don't do that then we end up with an authentication token for one region and have no visibility of containers hosted in other regions.

Our use case is multiple private repositories in multiple regions."
1508547564,6217,DmitriyLewen,2024-03-01T06:49:34Z,"I meant that we need to tell the user that region from AWS_REGION != region from domain.
Something like that:
```go
func getSession(region string, option types.RegistryOptions) (aws.Config, error) {
	// create custom credential information if option is valid
	if option.AWSSecretKey != """" && option.AWSAccessKey != """" && option.AWSRegion != """" {
		if region != option.AWSRegion {
			log.Logger.Warnf(""The region from AWS_REGION (%s) is incorrect. The region from domain (%s) was used."", option.AWSRegion, region)
		}
		return config.LoadDefaultConfig(
			context.TODO(),
			config.WithRegion(region),
			config.WithCredentialsProvider(credentials.NewStaticCredentialsProvider(option.AWSAccessKey, option.AWSSecretKey, option.AWSSessionToken)),
		)
	}
	return config.LoadDefaultConfig(context.TODO(), config.WithRegion(region))
}
```

Also i am worried about asff template. We [use](https://github.com/aquasecurity/trivy/blob/6ccc0a554b07b05fd049f882a1825a0e1e0aabe1/contrib/asff.tpl#L27) AWS_REGION env for this template. Perhaps we need to set `AWS_REGION` env when we have overwritten the region."
1509063130,6217,knrc,2024-03-01T14:09:22Z,"@DmitriyLewen Ah gotcha.  We can certainly add a message, although I'm not sure it would make much sense as it is likely to have been set by the webhook to match the EKS installation.  If you consider our use case, with multiple private repositories in different regions, then it would be impossible for the user to set the region appropriately so it would be defaulted to the webhook's view.

I can take a look at the template today, I didn't consider that, and can certainly pass the parameter through to getSession as that seems cleaner than rewriting it."
1509087418,6217,knrc,2024-03-01T14:28:23Z,"I've pushed the changes for getSession and the warning, looking at the template."
1509128357,6217,knrc,2024-03-01T15:02:19Z,"@DmitriyLewen I've reviewed the template but don't see anything which would concern me about the region parameter, I think we may be able to leave it as-is.  I'm spinning up a cluster to double-check."
1509255397,6217,knrc,2024-03-01T16:48:07Z,"@DmitriyLewen I created the cluster and private repos to double-check, then ran the old/new versions of trivy against the repo from my local machine.  The reports from both were identical, except for timestamps.

Interestingly enough my change doesn't appear to be required when running locally with my access key/secret access key, however within the EKS cluster, using an assigned role, it does.

The command was
```./trivy --debug image --format template --template ""@contrib/asff.tpl"" -o report.asff 127647282379.dkr.ecr.sa-east-1.amazonaws.com/undistro-test-image:1.25.3```

with `AWS_REGION` set to `us-east-1`"
1509258420,6217,knrc,2024-03-01T16:50:56Z,"An excerpt
```
        {
            ""SchemaVersion"": ""2018-10-08"",
            ""Id"": ""127647282379.dkr.ecr.sa-east-1.amazonaws.com/undistro-test-image:1.25.3 (debian 12.5)/CVE-2011-3374"",
            ""ProductArn"": ""arn:aws:securityhub:us-east-1::product/aquasecurity/aquasecurity"",
            ""GeneratorId"": ""Trivy/CVE-2011-3374"",
            ""AwsAccountId"": """",
            ""Types"": [ ""Software and Configuration Checks/Vulnerabilities/CVE"" ],
            ""CreatedAt"": ""2024-03-01T08:39:05.467636-08:00"",
            ""UpdatedAt"": ""2024-03-01T08:39:05.467661-08:00"",
            ""Severity"": {
                ""Label"": ""LOW""
            },
            ""Title"": ""Trivy found a vulnerability to CVE-2011-3374 in container 127647282379.dkr.ecr.sa-east-1.amazonaws.com/undistro-test-image:1.25.3 (debian 12.5), related to apt"",
            ""Description"": ""It was found that apt-key in apt, all versions, do not correctly validate gpg keys with the master keyring, leading to a potential man-in-the-middle attack."",
            ""Remediation"": {
                ""Recommendation"": {
                    ""Text"": ""More information on this vulnerability is provided in the hyperlink"",
                    ""Url"": ""https://avd.aquasec.com/nvd/cve-2011-3374""
                }
            },
            ""ProductFields"": { ""Product Name"": ""Trivy"" },
            ""Resources"": [
                {
                    ""Type"": ""Container"",
                    ""Id"": ""127647282379.dkr.ecr.sa-east-1.amazonaws.com/undistro-test-image:1.25.3 (debian 12.5)"",
                    ""Partition"": ""aws"",
                    ""Region"": ""us-east-1"",
                    ""Details"": {
                        ""Container"": { ""ImageName"": ""127647282379.dkr.ecr.sa-east-1.amazonaws.com/undistro-test-image:1.25.3 (debian 12.5)"" },
                        ""Other"": {
                            ""CVE ID"": ""CVE-2011-3374"",
                            ""CVE Title"": ""It was found that apt-key in apt, all versions, do not correctly valid ..."",
                            ""PkgName"": ""apt"",
                            ""Installed Package"": ""2.6.1"",
                            ""Patched Package"": """",
                            ""NvdCvssScoreV3"": ""3.7"",
                            ""NvdCvssVectorV3"": ""CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N"",
                            ""NvdCvssScoreV2"": ""4.3"",
                            ""NvdCvssVectorV2"": ""AV:N/AC:M/Au:N/C:N/I:P/A:N""
                        }
                    }
                }
            ],
            ""RecordState"": ""ACTIVE""
        },
```"
1510599327,6217,DmitriyLewen,2024-03-04T05:18:43Z,"Hello @knrc 
Thanks for your extensive research!

i am worried about this:
```
                    ""Id"": ""127647282379.dkr.ecr.sa-east-1.amazonaws.com/undistro-test-image:1.25.3 (debian 12.5)"",
                    ""Partition"": ""aws"",
                    ""Region"": ""us-east-1"",
```

region from `Id` != region from `Region`.

We can change `AWS_REGION` only to run Trivy.
`os.SetEnv` changes ENV only while the program is running.
<details>
  <summary>I created small example</summary>
  
  ```bash
➜  cat main.go     

import (
        ""fmt""
        ""os""
)

func main() {
        fmt.Println(os.Getenv(""TESTENV""))
        err := os.Setenv(""TESTENV"", ""test"")
        if err != nil {
                panic(err)
        }
        fmt.Println(os.Getenv(""TESTENV""))
}
➜  go build -o testEnv ./main.go

➜  printenv TESTENV
123

➜  ./testEnv
123
test

➜  printenv TESTENV
123

  ```
  
</details>

So we can add `os.Setenv(""AWS_REGION"",  region)` in https://github.com/aquasecurity/trivy/blob/a8f52b114bc6c5bda0b677ae5c5a7053b686e960/pkg/fanal/image/registry/ecr/ecr.go#L31
wdyt? Can you check this solution?"
1511137614,6217,knrc,2024-03-04T13:08:32Z,"@DmitriyLewen This output is the same as we would currently get, if running from the command line.  The region is only used to obtain the correct authentication credentials for accessing the repository, nothing more.

I'm not sure `os.SetEnv` would make sense in our use case, since it involves different private repositories in different regions, but I can take a look."
1511547707,6217,knrc,2024-03-04T17:50:14Z,"@DmitriyLewen I cannot find any mention of the region that would impact the scanning we are doing.

One place I did find, in the asff template, is the ProductArn which is registered with AWS Security Hub.  Since this needs to be registered, and the asff templated report doesn't change with this fix in place, I think it is safer to leave this change only for generating the credentials and we shouldn't set the env variable.

"
1511554193,6217,knrc,2024-03-04T17:55:11Z,"I should also add that I don't know enough about the AWS Security Hub integration to know whether the current report is broken in its use of AWS_REGION
- should `Region` match the image region?
- Is it wrong to assume `ProductArn` matches `Region`?

I think those questions should be answered separately, since this PR is not modifying that behaviour."
1512152571,6217,DmitriyLewen,2024-03-05T05:29:03Z,"> should Region match the image region?

AWS docs(https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_AwsSecurityFinding.html#securityhub-Type-AwsSecurityFinding-ProductArn) say: 
```
Region

    The Region from which the finding was generated.
``` "
1512153358,6217,DmitriyLewen,2024-03-05T05:30:27Z,"But it looks like when using `asff` template, users will have `AWS_REGION` set. In addition, we display a warning.
We can start with these changes.

If problems arise, we will think about fixing them (as another solution, we can add your regex to `asff.tpl`)."
1512891454,6217,knrc,2024-03-05T14:12:26Z,"> > should Region match the image region?
> 
> AWS docs(https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_AwsSecurityFinding.html#securityhub-Type-AwsSecurityFinding-ProductArn) say:
> 
> ```
> Region
> 
>     The Region from which the finding was generated.
> ```

+1, in my view Arn and Region are not related but the template assumes they are.
"
1512894476,6217,knrc,2024-03-05T14:14:08Z,"> But it looks like when using `asff` template, users will have `AWS_REGION` set. In addition, we display a warning. We can start with these changes.
> 
> If problems arise, we will think about fixing them (as another solution, we can add your regex to `asff.tpl`).

Yes, since the output doesn't change with this PR we are no worse off.  I do think there is change needed for the template but that should be a separate issue."
1513753867,6217,DmitriyLewen,2024-03-06T03:02:03Z,"> AWS docs(https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_AwsSecurityFinding.html#securityhub-Type-AwsSecurityFinding-ProductArn) say:

oh... i sent the wrong link.
You can see ARN formats here:
https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-custom-providers.html
https://docs.aws.amazon.com/IAM/latest/UserGuide/reference-arns.html"
1514996167,6217,knrc,2024-03-06T18:56:52Z,@DmitriyLewen I don't think those other links change anything for this PR.
1570028030,6217,DmitriyLewen,2024-04-18T05:52:58Z,IIUC we should compare `GoogleRegistryClient`.
1570767823,6217,knrc,2024-04-18T13:34:26Z,"@DmitriyLewen Should be good now, thanks for catching this"
763560397,1437,knqyf263,2021-12-07T01:33:07Z,"```suggestion
	""io""

	""github.com/owenrumney/go-sarif/sarif""
)
```"
763561214,1437,knqyf263,2021-12-07T01:35:24Z,"Looks like we have to pass the tool version.
https://github.com/owenrumney/go-sarif/blob/91aa28321332bab3e989f2446fbcb6dcf80ae95e/sarif/tool.go#L16"
764597147,1437,afdesk,2021-12-08T07:06:38Z,changed.
764597195,1437,afdesk,2021-12-08T07:06:45Z,"ok, sure"
772488636,1437,knqyf263,2021-12-20T16:07:18Z,"```suggestion
		if filepath.Base(option.OutputTemplate) == ""sarif.tpl"" {
```"
772489595,1437,knqyf263,2021-12-20T16:08:32Z,"```suggestion
			log.Logger.Warn(""Using `--template sarif.tpl` is deprecated. Please migrate to `--report sarif`."")
```"
772492613,1437,knqyf263,2021-12-20T16:12:30Z,Would you leave a comment that we will remove this warning after a while?
772839133,1437,knqyf263,2021-12-21T05:30:43Z,PkgPath can be used in case of individual packages.
772840287,1437,knqyf263,2021-12-21T05:31:47Z,Can we use consts?
772840705,1437,knqyf263,2021-12-21T05:32:15Z,"```suggestion
		return ""LanguageSpecificPackageVulnerability""
```"
772840910,1437,knqyf263,2021-12-21T05:32:51Z,wrap error
773107394,1437,afdesk,2021-12-21T12:47:35Z,"explicitly it didn't work, because `vuln.Path` is empty sometimes.
added a check:
```go
path := vuln.PkgPath
if path == """" {
	path = res.Target
}
```"
773110444,1437,afdesk,2021-12-21T12:52:13Z,"should i change all strings to consts? (""npm"", ""yarn"", ""nuget"", ""pipenv"", ""poetry"", ""bundler"", ""cargo"", ""composer"")"
773994202,1437,knqyf263,2021-12-22T15:55:59Z,Yes. We have those consts anywhere.
774000342,1437,knqyf263,2021-12-22T16:04:27Z,"Any reason we cannot use this struct?
https://github.com/owenrumney/go-sarif/blob/b94bb5ae9ee751a86f9ef2cbc44b1113bc2993de/v2/sarif/sarif.go#L21-L28"
774554630,1437,afdesk,2021-12-23T12:58:54Z,"I wanted to create test data with required fields, but `omitempty` allows to skip (forget) it in tests. 
also some of required fields maybe don't exist in `go-sarif`. we'd reveal it.
but if this isn't important, I'll use specified structure "
774894057,1437,knqyf263,2021-12-24T06:31:41Z,">I wanted to create test data with required fields, but omitempty allows to skip (forget) it in tests.

I think it is OK if we are careful about expected data.

>also some of required fields maybe don't exist in go-sarif

Do you mean we cannot use `go-sarif` to generate the SARIF report if it is missing some required fields?"
774903418,1437,afdesk,2021-12-24T07:07:35Z,"I mean that we can detect missing fields and ask @owenrumney to add them. 
ok, i'll use `go-sarif`'s structs for tests."
774904396,1437,afdesk,2021-12-24T07:10:51Z,ok
774905546,1437,knqyf263,2021-12-24T07:15:05Z,">I mean that we can detect missing fields and ask @owenrumney to add them.

I understand. I think it should be done aside from unit tests."
774937098,1437,knqyf263,2021-12-24T08:56:21Z,"I guess this is not vulnerability type, but target type. This comes from report.Result.Type, right? If it is the case, these consts should be them.
https://github.com/aquasecurity/fanal/blob/102e2bce224028a9736a5a0d53e9ff20a2c00cc1/analyzer/os/const.go#L5-L57"
774938001,1437,knqyf263,2021-12-24T08:59:08Z,"Should we put severity to `properties.security-severity`?
https://docs.github.com/en/code-security/code-scanning/integrating-with-code-scanning/sarif-support-for-code-scanning#reportingdescriptor-object"
774940385,1437,knqyf263,2021-12-24T09:06:14Z,Seems to be missing many types such as `GemSpec` and `GoMod`.
774940774,1437,knqyf263,2021-12-24T09:07:34Z,We may be able to use `report.Result.Class`.
774941295,1437,knqyf263,2021-12-24T09:09:01Z,"Also, what about misconfigurations?"
774946501,1437,afdesk,2021-12-24T09:24:17Z,"sure, I'll add this fiels, but we have to exclude `severity` from `tags`?
I'd leave `tags` unchanged"
774965201,1437,knqyf263,2021-12-24T10:19:36Z,"Yes, it would be better to keep it since `tags` can be used for filtering."
775055758,1437,afdesk,2021-12-24T17:02:38Z,"yes, you're right. It seems that is target type. changed. "
775056603,1437,afdesk,2021-12-24T17:09:21Z,"yes, I've added this field. but i'd like you review for mapping severity to the level of severity (between 0.0 and 10.0)."
775057496,1437,afdesk,2021-12-24T17:16:23Z,"yes, I've added all types and added config files too"
775058646,1437,afdesk,2021-12-24T17:26:04Z,"also I removed several tests from here, because there is no os with `-oval` suffix (`oracle-oval`, `debian-oval`, `redhat-oval` etc).
https://github.com/aquasecurity/trivy/blob/76249bdcf0905fb25e74033bd9044f54eb4c1256/pkg/report/writer_internal_test.go#L10-L102"
775058872,1437,afdesk,2021-12-24T17:27:59Z,`suse-cvrf` and `opensuse-cvrf` were removed too
775059217,1437,afdesk,2021-12-24T17:31:29Z,"yes, added config files."
775068805,1437,knqyf263,2021-12-24T19:07:54Z,"I meant this switch can be simplified

```suggestion
func toSarifRuleName(class string) string {
	switch class {
	case ClassOSPkg:
		return sarifOsPackageVulnerability
	case ClassLangPkg:
		return sarifLanguageSpecificVulnerability
	case ClassConfig:
		return sarifConfigFiles
	default:
		return sarifOtherVulnerability
	}
}
```"
775069064,1437,knqyf263,2021-12-24T19:10:04Z,"It should be descriptive enough.

```suggestion
	sarifConfigFiles                   = ""Misconfiguration""
```"
775069149,1437,knqyf263,2021-12-24T19:10:50Z,"It should not be reached here.

```suggestion
	sarifUnknownIssue            = ""UnknownIssue""
```"
775071951,1437,afdesk,2021-12-24T19:41:56Z,"oh, ok. changed"
779486088,1437,knqyf263,2022-01-06T11:35:54Z,I don't think this test is needed.
779486886,1437,knqyf263,2022-01-06T11:37:23Z,"We don't keep the template as we remove, but we keep it working as is."
779487165,1437,knqyf263,2022-01-06T11:37:57Z,Can we use CVSS score?
780408523,1437,jplimack,2022-01-07T17:16:53Z,"If you could put the CVSS score into a tag, that would make it filterable in the github security dashboard"
781788154,1437,afdesk,2022-01-11T06:24:51Z,removed.
781790431,1437,afdesk,2022-01-11T06:30:47Z,changed this comment.
781794067,1437,afdesk,2022-01-11T06:39:54Z,"> Can we use CVSS score?

I can't find CVSS score for misconfigurations..."
781795430,1437,knqyf263,2022-01-11T06:43:22Z,"Oh, you're right. We need this conversion for misconfigurations. Can we use CVSS only for vulnerabilities?"
782137657,1437,knqyf263,2022-01-11T13:22:16Z,"We can use `SeveritySource` to take the vendor CVSS score. I feel we should not use the NVD score. It is possible that the severity is Low and the score is 9.5. The score depends on the severity source for consistency.

The priority is
1. Vendor score (it would be ok if it is NVD)
2. Mapping score"
1244838784,4652,DmitriyLewen,2023-06-28T08:00:18Z,"```suggestion
	fileName := filepath.Base(filePath)
	dirs := strings.Split(path.Dir(filePath), ""/"")
```
wdyt?"
1244864039,4652,DmitriyLewen,2023-06-28T08:22:11Z,You are using `defer` in a loop. Can we move this logic into a separate function to close each file?
1244890681,4652,DmitriyLewen,2023-06-28T08:42:11Z,"I think about 1 case when `node_modules` and `.yarn` folders exist.
E.g. User updated project to yarn v2.
Does `node_modules` folder still exist or will `yarn` remove this folder?

@nikpivkin wdyt? Perhaps we need to check `.yarn` folder first (as latest implementation) or(and) add debug message that 2 folder were found."
1244895415,4652,DmitriyLewen,2023-06-28T08:46:01Z,"I think we can remove the fields we don't need.
as for a `happy` test:
https://github.com/aquasecurity/trivy/blob/main/pkg/fanal/analyzer/language/nodejs/yarn/testdata/happy/package.json"
1245298216,4652,nikpivkin,2023-06-28T14:23:09Z,"@DmitriyLewen then user should delete `node_modules`)
In fact, if the yarn [nodeLinker](https://yarnpkg.com/configuration/yarnrc#nodeLinker) is set as `node_modules`, then the packages will be installed in` node_modules`, but the folder `.yarn` can also exist, because it stores not only packages."
1245303458,4652,nikpivkin,2023-06-28T14:26:02Z,"Yes, you're right"
1245336050,4652,nikpivkin,2023-06-28T14:39:03Z,Great catch! Done.
1245336249,4652,nikpivkin,2023-06-28T14:39:10Z,Done.
1245336669,4652,nikpivkin,2023-06-28T14:39:24Z,done
1246097840,4652,DmitriyLewen,2023-06-29T04:47:41Z,"Thanks for information.

I also played with `yarn`:
After updating `yarn` and adding/updating package -> `yarn` moves packages from `node_modules` to `.yarn` folder.
Some example:
```
➜  docker run --rm -it node@sha256:2d5e8a8a51bc341fd5f2eed6d91455c3a3d147e91a14298fc564b5dc519c1666 sh

/ # mkdir test && cd ""$_""

/test # yarn set version 1.22.19
Resolving 1.22.19 to a url...
Downloading https://github.com/yarnpkg/yarn/releases/download/v1.22.19/yarn-1.22.19.js...
Saving it into /test/.yarn/releases/yarn-1.22.19.cjs...
Updating /test/.yarnrc...
Done!

/test # yarn add is-callable@1.2.7
...

/test # ls -hl node_modules/  
drwxr-xr-x    4 root     root        4.0K Jun 29 04:40 is-callable

/test # ls -hl ./.yarn
drwxr-xr-x    2 root     root        4.0K Jun 29 04:40 releases

/test # yarn set version 3.4.1
...

/test # yarn add is-odd@3.0.1
...

/test # ls -hl node_modules/
ls: node_modules/: No such file or directory

/test # ls -hl .yarn
drwxr-xr-x    2 root     root        4.0K Jun 29 04:41 cache
-rw-r--r--    1 root     root        1.5K Jun 29 04:41 install-state.gz
drwxr-xr-x    2 root     root        4.0K Jun 29 04:41 releases

/test # ls -hl .yarn/cache
total 28K    
-rw-r--r--    1 root     root       12.3K Jun 29 04:41 is-callable-npm-1.2.7-808a303e61-61fd57d03b.zip
-rw-r--r--    1 root     root        4.2K Jun 29 04:41 is-number-npm-6.0.0-30881e83e6-f73bfced02.zip
-rw-r--r--    1 root     root        3.6K Jun 29 04:41 is-odd-npm-3.0.1-93c3c3f41b-4e2b20764d.zip

```"
1246111610,4652,DmitriyLewen,2023-06-29T05:11:07Z,"We use new function to only parse `package.json` **from zip file**. 
The name `parsePackageJson` can be confusing (I mean you might think that this function for any `package.json`).
What if we use `parsePackageJsonFromZip` name? "
1246131215,4652,nikpivkin,2023-06-29T05:38:59Z,done
1271898881,4652,knqyf263,2023-07-24T08:09:48Z,"Do we need this complex logic?

>or in the package tests in node_modules - then not.

Do you mean dummy package.json?

My question is why we cannot simply check if the file name matches `package.json`."
1271902187,4652,nikpivkin,2023-07-24T08:12:49Z,@knqyf263 It can be a dummy file for tests.
1271915628,4652,knqyf263,2023-07-24T08:24:48Z,"Does the dummy file have a valid package name and license, and can it lead to false detection? I guess it is unlikely to happen, no?"
1272260923,4652,nikpivkin,2023-07-24T13:25:07Z,"Yes, I agree"
1286545380,4652,DmitriyLewen,2023-08-08T02:55:36Z,"```suggestion
Trivy analyzes `.yarn` (Yarn 2+) or `node_modules` (Yarn Classic) folder next to the yarn.lock file to detect licenses.
```"
1286549136,4652,DmitriyLewen,2023-08-08T03:05:16Z,Looks like we can make this function non-exportable.
1286554372,4652,DmitriyLewen,2023-08-08T03:18:56Z,"```suggestion
				log.Logger.Debugf(""The license file %q was not found or the license could not be classified"", licenseFilePath)
```"
1286555271,4652,DmitriyLewen,2023-08-08T03:21:12Z,Can you add comment why we use `LICENSE` here?
1286557902,4652,DmitriyLewen,2023-08-08T03:27:45Z,Can you add comments why you use these conditions?
1286559728,4652,DmitriyLewen,2023-08-08T03:32:24Z,"if I understand correctly - any license file name is possible:
https://github.com/aquasecurity/trivy/blob/ba38c06c32db1c091d9bb26fa43a742cecbd94c1/pkg/fanal/analyzer/language/nodejs/license.go#L79-L86
Perhaps we need to save `node_modules`/`.yarn` folder?"
1286560970,4652,DmitriyLewen,2023-08-08T03:35:35Z,"`npm` also finds licenses in `node_modules/<package-name>/package.json` file.
Maybe we can use this function? or will these changes be in another PR?
"
1286561460,4652,DmitriyLewen,2023-08-08T03:36:50Z,what if use `utils` file name for this file?
1286928751,4652,nikpivkin,2023-08-08T10:32:03Z,The cache folder can be large.
1286930329,4652,nikpivkin,2023-08-08T10:33:40Z,How about making these changes in another PR?
1286932906,4652,nikpivkin,2023-08-08T10:36:18Z,done
1286933022,4652,nikpivkin,2023-08-08T10:36:25Z,done
1286933141,4652,nikpivkin,2023-08-08T10:36:32Z,done
1286933230,4652,nikpivkin,2023-08-08T10:36:38Z,done
1286933297,4652,nikpivkin,2023-08-08T10:36:42Z,done
1286933424,4652,nikpivkin,2023-08-08T10:36:50Z,done
1287883514,4652,DmitriyLewen,2023-08-09T03:12:40Z,"I assumed that...
Okay. I think in most cases license file name contains `license`. 
Let's wait for feedback from users.
If users say that there are files with other names - we will return to this question."
1287887278,4652,DmitriyLewen,2023-08-09T03:21:53Z,Okay. I created #4964 for this task.
1287891032,4652,DmitriyLewen,2023-08-09T03:29:55Z,Golden file doesn't contain license.
1287892423,4652,DmitriyLewen,2023-08-09T03:33:26Z,"This is second time I am thinking of moving this file to `nodejs/license` folder, but I'm not sure about it.
@knqyf263 wdyt?"
1287894727,4652,DmitriyLewen,2023-08-09T03:38:38Z,"Can you add a test case with a missing license?
I am referring to case where license field in `package.json` is missing and `LICENSE` file doesn't exist."
1289714055,4652,nikpivkin,2023-08-10T07:51:31Z,Good trick! I forgot to move this file after renaming fs to repo.
1289723532,4652,nikpivkin,2023-08-10T07:59:11Z,done
1289723633,4652,nikpivkin,2023-08-10T07:59:16Z,done
1289726122,4652,nikpivkin,2023-08-10T08:01:19Z,"sounds good, I'll wait for @knqyf263  answer"
1289730642,4652,knqyf263,2023-08-10T08:05:13Z,Sounds good
1290881331,4652,DmitriyLewen,2023-08-11T04:27:26Z,"I understood that it can confused - users can think that we only parse `LICENSE` file.
```suggestion
			log.Logger.Debugf(""License names are missing in %q, an attempt to find them in the%q file"", pkgJsonPath, licenseFileName)
```"
1291208227,4652,nikpivkin,2023-08-11T11:04:14Z,fixed
1574109921,6524,DmitriyLewen,2024-04-22T04:30:38Z,`go-dep-parser` in Trivy now - https://github.com/aquasecurity/trivy/tree/main/pkg/dependency/parser
1574125031,6524,DmitriyLewen,2024-04-22T04:57:07Z,What about `windows` and `macos` formats?
1574125792,6524,DmitriyLewen,2024-04-22T04:58:27Z,Can you add a comment with a link where you get this regex?
1574126445,6524,DmitriyLewen,2024-04-22T04:59:31Z,"You use `dependent.ID` once. So you can just use it here.
```suggestion
		ID: dependency.ID(ftypes.PythonGeneric, name, version),
```"
1574131572,6524,DmitriyLewen,2024-04-22T05:08:31Z,"Is there a way to determine package name?
Looks like it might be confusing if all detected binaries are named ""python"""
1574132610,6524,DmitriyLewen,2024-04-22T05:10:13Z,you can use `require.ErrorContains`
1574135481,6524,DmitriyLewen,2024-04-22T05:14:46Z,"Looks like we can use 1 file and change names, permissions, etc. in test. 
Then we can reduce the number of copies of test files."
1574137589,6524,DmitriyLewen,2024-04-22T05:18:06Z,Looks like we don't need this change.
1574155254,6524,DmitriyLewen,2024-04-22T05:44:33Z,It looks like Go 1.22 doesn't have this file. Can you please update the link and double check - we may need to add some changes.
1574175455,6524,DmitriyLewen,2024-04-22T06:10:58Z,will be great if you add some comment about these regex (e.g. link to docs)
1574176783,6524,DmitriyLewen,2024-04-22T06:12:36Z,looks like we can use [executable](https://github.com/aquasecurity/trivy/blob/d4da83c633a46ad4a61844d8d5502d87b99465a0/pkg/fanal/analyzer/const.go#L99) for new binaries
1624132180,6524,kovacs-levent,2024-06-03T09:44:18Z,"I removed the go-dep-parser as a dependency, it only uses the internal package now"
1624135520,6524,kovacs-levent,2024-06-03T09:46:50Z,"It's from syft... Should I link that? All the regexes I used, I mostly copied them from syft. For example python regex:
https://github.com/anchore/syft/blob/b04bc0fbfe5742a970aa3f06594b1e82c87eb4a5/syft/pkg/cataloger/binary/classifiers.go#L495"
1624136786,6524,kovacs-levent,2024-06-03T09:47:43Z,Removed the packageID function from all parsers and replaced with dependency.ID call only
1624138057,6524,kovacs-levent,2024-06-03T09:48:33Z,"I don't think so unfortunately, if there was additional package information, the standalone binary detection would not be needed. But  I will look into it if it's obtainable from some metadata."
1624138781,6524,kovacs-levent,2024-06-03T09:49:03Z,Changed the tests according to this.
1624139241,6524,kovacs-levent,2024-06-03T09:49:24Z,"Yeah, I'll rework the tests for fanal in an upcoming commit."
1624140809,6524,kovacs-levent,2024-06-03T09:50:36Z,"Hmm, not sure why I did it, but I'll remove it in next commit, it's just some ""automatic"" line deletion I did I guess :)"
1624143055,6524,kovacs-levent,2024-06-03T09:52:21Z,I unfortunately didn't find this in Go 1.22 either. I'll take a look into this in next commit.
1624143998,6524,kovacs-levent,2024-06-03T09:53:07Z,"Same as for the other regexes, it's from Syft, should I link that?
https://github.com/anchore/syft/blob/b04bc0fbfe5742a970aa3f06594b1e82c87eb4a5/syft/pkg/cataloger/binary/classifiers.go#L495"
1624144515,6524,kovacs-levent,2024-06-03T09:53:30Z,"Change all the types to become ""TypeXExecutable""."
1624151809,6524,kovacs-levent,2024-06-03T09:58:59Z,Haven't thought about that yet. Will have to check on those.
1624640434,6524,kovacs-levent,2024-06-03T15:18:45Z,Fanal test cases were reworked. It uses the common logic of executable tests. Added test cases for Python/Node/PHP binaries.
1624640712,6524,kovacs-levent,2024-06-03T15:18:56Z,Removed.
1624651297,6524,kovacs-levent,2024-06-03T15:25:57Z,"I understand what you meant here now, that all the new binaries could be TypeExecutable.

I use the language specific types in fanal executable.go, to figure out which binary type was detected in case of ""detectable"" binary. It can be localized to executable.go instead and use the common type for the ""outside"" return types."
1626285516,6524,kovacs-levent,2024-06-04T16:14:03Z,"I tried testing with Windows PEs, the interface can be implemented for `exe` and `OpenExe`, but the regex based detection methods don't work on the PE files I tried (I did manual testing to confirm). I honestly don't have any experience with macos binaries 🫤 So not sure if I can implement the interface for those. I also tried to obtain files to test with, but failed, since now I don't have access to a macos system. Any idea if regex based detection would work on those?

If not, I'd rather not bother with implementing this for those binaries, even though you could implement the interface and `executableAnalyzer` would still run on those, the binary version detection won't give package in the `AnalysisResult`."
1626302610,6524,kovacs-levent,2024-06-04T16:27:55Z,"I added them as a separate, new group of variables instead in this same file."
1626328528,6524,kovacs-levent,2024-06-04T16:50:12Z,"I have updated the link and also the implementation was changed.

It's not a 1on1 port, since they repurposed it for capturing Go main module version, but we need to read whole executable file, but I used the same ideas. It also contains interfaces for other binaries (didn't put those in, only elf)."
1627258993,6524,kovacs-levent,2024-06-05T08:34:24Z,"There's a way to try detect it with OS package managers, but they don't necessarily yield results unfortunately. I think if these were in package manager, then OS pkg analyzer would be scanning these, so probably also not the right way to go about it.

I wasn't able to find any way to figure out more concrete package name from the standalone binaries."
1879433683,8077,DmitriyLewen,2024-12-11T06:43:44Z,"I wanted to override the `expression.NormalizeForSPDX` function, but we use `With` as a delimiter to parse licenses:
https://github.com/aquasecurity/trivy/blob/6472e3c9da2a8e7ba41598a45c80df8f18e57d4c/pkg/licensing/expression/parser.go.y#L14
So there are problems with overwriting licenses with the wrong exception"
1881116688,8077,goneall,2024-12-11T22:48:01Z,"```suggestion
```
I would always include the license as the license name - not just when the text is present"
1881121449,8077,goneall,2024-12-11T22:54:20Z,"Second thought, this may be appropriate if the license text is the actual text of the license.  In most cases, the metadata for packages includes text that are supposed to be a license name or identifier in which case it should also be in the name.  If we know the license text is really the text, then the existing code is OK.

If, however, the license text is what is found in the package metadata files and they are not the actual text, I would add the same field as the name PLUS add a LicenseComment to explain - something like `otherLicense.LicenseComment = ""The license text represents text found in package metadata and may not represent the full text of the license""

"
1881127536,8077,goneall,2024-12-11T22:59:40Z,"This comment may deserve to be a separate suggestion, but in reading the code I would recommend building the license and exception IDs from the J[SON files maintained by the SPDX legal team](https://github.com/spdx/license-list-data/tree/main/json).  The license list is updated every 3 months with new IDs and maintaining these in code can be a challenge to keep up and maintain.  What I do in the code I maintain is attempt to access the current JSON files on the website https://spdx.org/licenses/licenses.json and https://spdx.org/licenses/exceptions.json.  If I can not access the website or if the user specified not to use the online version, I'll use a cached version of the file."
1881135551,8077,goneall,2024-12-11T23:02:48Z,"Minor suggestion - you could simplify this by including the ""-"" in the LicenseRefPrefix definition and just use `LicenseRefPrefix + licenseID`  The string ""LicenseRef"" will likely never be used without the trailing ""-""."
1881469620,8077,DmitriyLewen,2024-12-12T06:42:32Z,This is our internal decision - we don't use `-` suffixes in constants :)
1881484240,8077,DmitriyLewen,2024-12-12T06:56:24Z,"There are cases when users run multiple times.
Downloading these files for each run is not good.
But we can save `licenses.json` and `exceptions.json` files in the cache dir and use them.
The files contain `releaseDate` field, so we can update this file only when `releaseDate + 3 months` has expired.

> The license list is updated every 3 months

How strictly is this rule followed?

Anyway let's move this discussion into another issue/pr.

___ 

> What I do in the code I maintain is attempt to access the current JSON files on the website https://spdx.org/licenses/licenses.json and https://spdx.org/licenses/exceptions.json

I found that https://spdx.org/licenses/exceptions.json and https://github.com/spdx/license-list-data/blob/592c2dcb8497c6fe829eea604045f77d3bce770b/json/exceptions.json are different (see `harbour-exception`).
Which file would be more correct to use?"
1881510091,8077,DmitriyLewen,2024-12-12T07:22:59Z,"There are cases (e.g. `license` field from python METADATA files) when we can't understand that license is name/id/text.
We tried to detect `text` of license:
https://github.com/aquasecurity/trivy/blob/f6acdf713991f8ffdbe765178fcb8a9cde433cba/pkg/licensing/normalize.go#L596-L617

So Trivy split license name/id and license text(`text://` prefix).
That is why i used both `LicenseName` and `ExtractedText` fields:
https://github.com/DmitriyLewen/trivy/blob/f851f9bb18411db838fc65e0c6c4351b04953f8f/pkg/sbom/spdx/marshal_private_test.go#L92-L112

Another question - i used `NOASSERTION` for `LicenseName` and `ExtractedText` fields (see link above), because these fields are mandatory (https://github.com/spdx/tools-golang/blob/f6e45fdb9e4e0c993105f798bee5f8aa8ea70f84/spdx/v2/v2_3/other_license.go#L12-L20).
Is this correct?"
1881515390,8077,DmitriyLewen,2024-12-12T07:27:48Z,"> add a LicenseComment to explain - something like `otherLicense.LicenseComment = ""The license text represents text found in package metadata and may not represent the full text of the license""

I liked this idea 👍 
Added in https://github.com/aquasecurity/trivy/pull/8077/commits/041ab214c353a9d27dcdd4ef9672555840ec5cca"
1882642397,8077,goneall,2024-12-12T17:57:25Z,"> How strictly is this rule followed?

Not very strictly.  There is, however, a license list version field which is reliably incremented on release.

> I found that https://spdx.org/licenses/exceptions.json and https://github.com/spdx/license-list-data/blob/592c2dcb8497c6fe829eea604045f77d3bce770b/json/exceptions.json are different (see harbour-exception).
Which file would be more correct to use?

The lists at https://spdx.org/licenses - these will always be the latest _released_ version.  The github repo master will have the latest in development version which may not be stable.  The github repo is tagged with release versions, so if you go to the tag for the latest release in github, it will match what is on the website."
1882658352,8077,goneall,2024-12-12T18:07:12Z,"> So Trivy split license name/id and license text(text:// prefix).
> That is why i used both LicenseName and ExtractedText fields

Makes sense - I wasn't sure how the text was captured.  Since you are capturing the text and name distinctly, your approach should work.  BTW, it's a bit tricky to find the start and end of the license text and even trickier to match it to know licenses - something we've been working on in the SPDX java libraries for about 10 years and still don't have it perfected ;).

> i used NOASSERTION for LicenseName and ExtractedText fields (see link above), because these fields are mandatory (https://github.com/spdx/tools-golang/blob/f6e45fdb9e4e0c993105f798bee5f8aa8ea70f84/spdx/v2/v2_3/other_license.go#L12-L20).
Is this correct?

For the license name, this is OK.  The spec isn't very clear on how these should be treated, so many people make up a name based on the text.  Unlike other parts of the spec, NOASSERTION is not required if you don't know - but in this case I think it would be fine to use NOASSERTION - for the name.

For the text, I would put in whatever string was actually found - even if it is the name.  The definition of the field is the license text found - so if someone puts in ""This software is licensed under mylicense"" - you can put that exact string in the text field even though it is not technically the text of ""mylicense"".  I wouldn't use ""NOASSERTION"" for the text field."
1883358808,8077,DmitriyLewen,2024-12-13T06:18:26Z,"Got it! Thanks for your opinion!
Updated text field in https://github.com/aquasecurity/trivy/pull/8077/commits/659f992f9eccbfec55ea65fe7b2bdc973d892c8e"
1883359954,8077,DmitriyLewen,2024-12-13T06:19:11Z,"Okay, update exception list in https://github.com/aquasecurity/trivy/pull/8077/commits/659f992f9eccbfec55ea65fe7b2bdc973d892c8e"
1887959748,8077,knqyf263,2024-12-17T06:23:29Z,"Since we need to keep it up-to-date, it should be done by `mage spdx` or something like that. I think we should create a separate file for the list and add 
```
// Code generated by ""mage spdx"", DO NOT EDIT.
// source: https://spdx.org/licenses/exceptions.json
```

to the header."
1887968896,8077,DmitriyLewen,2024-12-17T06:34:23Z,"Do you want to check `exceptions.json` file in tests?
I mean the same as for [mage docs:generate](https://github.com/aquasecurity/trivy/blob/17827db6a963232f3d5c759065518de6fdb591c3/.github/workflows/test.yaml#L61C1-L68C55)


This will help keep the file up-to-date, but can be noisy for PRs when a new version of file is released.
On the other hand, we can add a separate action to check the file's relevance once a week."
1887975653,8077,knqyf263,2024-12-17T06:41:05Z,"Using `curl` and `awk` through `go generate` is the easiest way, but some environments don't have `curl`, and CLI flags might be different. Ideally, we should do that in Go."
1887976600,8077,knqyf263,2024-12-17T06:41:57Z,">Do you want to check exceptions.json file in tests?

No, we don't need it for now. We can update the file when we notice that."
1887978206,8077,DmitriyLewen,2024-12-17T06:43:12Z,"yes, that's what i planned
this command (using `awk` and other commands) is just a quick way to get all exceptions"
1887978614,8077,knqyf263,2024-12-17T06:43:36Z,">we can add a separate action to check the file's relevance once a week.

This sounds better. Also, we don't need to fail the test. We can notify it on Microsoft Teams."
1888362141,8077,DmitriyLewen,2024-12-17T11:30:13Z,"I updated PR. 
Take a look, when you have time, please."
1919731265,8077,knqyf263,2025-01-17T08:24:33Z,nit: IsValidSPDXLicense or ValidateSPDXLicense are more aligned with the naming style in Trivy.
1919732799,8077,knqyf263,2025-01-17T08:25:49Z,"Looks like we can just call this function as nil is checked at the beginning of the function.
```suggestion
	initSpdxLicenses()
```"
1919732953,8077,knqyf263,2025-01-17T08:25:57Z,ditto
1919735245,8077,knqyf263,2025-01-17T08:27:52Z,"After merging https://github.com/aquasecurity/trivy/pull/8149 into this branch, you can use set.Set.

```suggestion
var spdxLicenses set.Set[string]
```"
1919735404,8077,knqyf263,2025-01-17T08:27:59Z,ditto
1919745274,8077,knqyf263,2025-01-17T08:36:36Z,"nit: I tried to make the nest less, but it's just my preference. You can decide it.

```suggestionfalse
    id, exception, hasException := strings.Cut(license, "" WITH "")
    if !spdxLicenses.Contains(id) {
        return false
    }
    if !hasException {
        return true
    }
	if !spdxExceptions.Contains(strings.ToUpper(exception)) {
			return false
	}
	return true
```"
1919747712,8077,knqyf263,2025-01-17T08:38:39Z,"nit: The current prefix is always lowercase.
https://github.com/aquasecurity/trivy/blob/a2ebc32f7172961f8081af2a99f1467d67e568ec/pkg/log/logger.go/#L20-L27


```suggestion
		logger:     log.WithPrefix(""spdx""),
```
"
1919748215,8077,knqyf263,2025-01-17T08:39:06Z,We might want to define a const for SPDX as it's used in several places.
1922023119,8077,knqyf263,2025-01-20T08:58:05Z,"What do you think about my approach?
https://github.com/aquasecurity/trivy/pull/8257

It would be as below. I just wrote a PoC, so it doesn't work as is, of course, but I hope you'll get my point.

```go
otherLicenses := map[string]*spdx.OtherLicense{}
replaceOtherLicenses := func(expr expression.Expression) expression.Expression {
    var licenseName string
    switch e := expr.(type) {
    case expression.SimpleExpression:
        if expression.ValidSpdxLicense(e.License) {
            return license
        }
        licenseName = e.License
    case expression.CompoundExpression:
        if e.Conjunction() != expression.TokenWith {
            return expr
        }
        if expression.ValidSpdxLicense(e.Left().String()) && expression.ValidSpdxLicense(e.Right().String()) {
            return expr
        }
        licenseName = e.String()
    }

    license := newOtherLicense(licenseName, false)
    if license == nil {
        ...
    }
    otherLicenses[license.LicenseIdentifier] = license
    return expression.SimpleExpr{License: license.LicenseIdentifier}
}

normalizedLicense, err := expression.Normalize(license, licensing.NormalizeLicense, expression.NormalizeForSPDX, replaceOtherLicenses)"
1923157257,8077,DmitriyLewen,2025-01-21T06:52:17Z,"```go
    case expression.CompoundExpression:
        if e.Conjunction() != expression.TokenWith {
            return expr
        }
        if expression.ValidSpdxLicense(e.Left().String()) && expression.ValidSpdxLicense(e.Right().String()) {
            return expression.SimpleExpr{License: expr.String()}
        }
        licenseName = e.String()
```

It looks like we need to return `SimpleExpr` to a valid SPDX license to avoid a separate license and exception checking, but overall your approach should work!"
1923202087,8077,knqyf263,2025-01-21T07:38:01Z,">It looks like we need to return SimpleExpr to a valid SPDX license to avoid a separate license and exception checking

It's just a waste of time as it will validate the same licenses and exceptions twice, but it doesn't cause any bugs, right?"
1923302735,8077,DmitriyLewen,2025-01-21T08:50:08Z,"won't we get something like duplicates?
I mean `license with exception`, `license` and `separate exception`.
But maybe I'm wrong - I'll check and let you know"
1923386053,8077,knqyf263,2025-01-21T09:43:41Z,"I believe not, but let's see."
1923581765,8077,DmitriyLewen,2025-01-21T11:51:13Z,"we use otherLicense for exception.
e.g. for `happy path with WITH operator` test:
```
-AFL-2.0 AND AFL-3.0 WITH Autoconf-exception-3.0
+AFL-2.0 AND AFL-3.0 WITH LicenseRef-ab9a5d8bfe1416c4
```

So i saved license with exception as SimpleExp."
1923581881,8077,DmitriyLewen,2025-01-21T11:51:18Z,updated in https://github.com/aquasecurity/trivy/pull/8077/commits/a8a85adf9900f1d7c9ac98d2fdc70ee5b7e1c1f6
1923582515,8077,DmitriyLewen,2025-01-21T11:51:49Z,added in https://github.com/aquasecurity/trivy/pull/8077/commits/b38b6eb7eaa2355d76ed938c22f0d3cf910b9209
1923582626,8077,DmitriyLewen,2025-01-21T11:51:55Z,changed in https://github.com/aquasecurity/trivy/pull/8077/commits/b38b6eb7eaa2355d76ed938c22f0d3cf910b9209
1923583338,8077,DmitriyLewen,2025-01-21T11:52:27Z,I separated this logic in https://github.com/aquasecurity/trivy/pull/8077/commits/a8a85adf9900f1d7c9ac98d2fdc70ee5b7e1c1f6
1923583991,8077,DmitriyLewen,2025-01-21T11:52:58Z,updated in https://github.com/aquasecurity/trivy/pull/8077/commits/82a52f13cef319bfe95513af2edbb2b091ef0c28
1923584097,8077,DmitriyLewen,2025-01-21T11:53:03Z,updated in https://github.com/aquasecurity/trivy/pull/8077/commits/82a52f13cef319bfe95513af2edbb2b091ef0c28
1923584507,8077,DmitriyLewen,2025-01-21T11:53:24Z,removed in https://github.com/aquasecurity/trivy/pull/8077/commits/8a96a8b71b35be36a0f5379abb4206c818b4f391
1923584615,8077,DmitriyLewen,2025-01-21T11:53:26Z,removed in https://github.com/aquasecurity/trivy/pull/8077/commits/8a96a8b71b35be36a0f5379abb4206c818b4f391
1923584929,8077,DmitriyLewen,2025-01-21T11:53:40Z,renamed in https://github.com/aquasecurity/trivy/pull/8077/commits/48a46b86f18b4459cfa53090f8f046edcf47f86f
1923587638,8077,DmitriyLewen,2025-01-21T11:55:37Z,"I save and check exceptions in uppercase because we don't have normalization for exceptions like we do for licenses.

I suggest waiting for user feedback.
Maybe we need to update this logic (e.g. check in uppercase but save in original (from this file) case)."
1924466797,8077,goneall,2025-01-21T22:58:59Z,"> Maybe we need to update this logic (e.g. check in uppercase but save in original (from this file) case).

In the SPDX tools I maintain, I take the approach of saving in the original case but comparing ignoring case"
1924768762,8077,DmitriyLewen,2025-01-22T06:36:20Z,"Thanks @goneall 

i updated logic in https://github.com/aquasecurity/trivy/pull/8077/commits/d4e67dcd7893706f7975cf65fbf76c44452fb7be + https://github.com/aquasecurity/trivy/pull/8077/commits/5d0f7e1c9eaa4423b6486691b4f57fede374f1c6"
1928555225,8077,knqyf263,2025-01-24T11:42:32Z,"I think the `happy path with WITH operator` test is failing just because the exception validation is missing. The following code should pass the test.

```diff
diff --git a/pkg/sbom/spdx/marshal.go b/pkg/sbom/spdx/marshal.go
index 8c570d869..b99e28a0f 100644
--- a/pkg/sbom/spdx/marshal.go
+++ b/pkg/sbom/spdx/marshal.go
@@ -432,7 +432,7 @@ func (m *Marshaler) normalizeLicenses(licenses []string) (string, []*spdx.OtherL
                                e.License = strings.TrimPrefix(e.License, ""text:--"")
                        }

-                       if expression.ValidateSPDXLicense(e.License) {
+                       if expression.ValidateSPDXLicense(e.License) || expression.ValidateSPDXException(e.License) {
                                return e
                        }

@@ -447,7 +447,7 @@ func (m *Marshaler) normalizeLicenses(licenses []string) (string, []*spdx.OtherL
                        if expression.ValidateSPDXLicense(e.Left().String()) && expression.ValidateSPDXException(e.Right().String()) {
                                // Use SimpleExpr for a valid SPDX license with an exception,
                                // to avoid parsing the license and exception separately.
-                               return expression.SimpleExpr{License: e.String()}
+                               return e
                        }

                        licenseName = e.String()
```"
1930061433,8077,DmitriyLewen,2025-01-27T07:07:13Z,"Thanks for ""fresh"" look. It looks better.
Fixed in https://github.com/aquasecurity/trivy/pull/8077/commits/a9d0c6458308392c5282bc757ef972bcc3336aef"
342460128,253,danielpacak,2019-11-05T09:35:34Z,"I think we should elaborate that the light mode is faster with DB downloads, but the downside of it is lack of CVE title/description in the output report."
342463176,253,danielpacak,2019-11-05T09:41:38Z,I'd be more specific what version we're talking about. Version of DB or trivy binary? Without looking into code the user might be confused.
342465157,253,danielpacak,2019-11-05T09:45:35Z,"For troubleshooting we might want to add expected and actual DB schema version to the error message.
Also lowercase the error message."
342466942,253,danielpacak,2019-11-05T09:49:08Z,I'm wondering whether `c.dbc.GetMetadata()` should return error. Anyway you ignore it. And my IDE warns me that the `metadata` variable might be nil when you compare versions.
342468435,253,danielpacak,2019-11-05T09:52:02Z,Log debug that we're skipping DB download. For troubleshooting.
342469407,253,danielpacak,2019-11-05T09:53:48Z,Reopen -> Reopening ?
342474697,253,danielpacak,2019-11-05T10:03:44Z,"I think you could `require.NoError(t, err)` here"
342478355,253,danielpacak,2019-11-05T10:11:38Z,We can possibly make this error message shorter without loosing the meaning & root cause.
342479041,253,danielpacak,2019-11-05T10:13:07Z,"I'd keep it shorter, e.g. `xerrors.New(""opening new DB: invalid database"")`"
342479736,253,danielpacak,2019-11-05T10:14:40Z,Maybe it's better to use `require.NoError` here. If it fails at this state it probably doesn't make sense to check subsequent assertions.
342481703,253,danielpacak,2019-11-05T10:18:51Z,Do we really need this token? Or is it just a workaround for tirvy-db being a private repo?
342490575,253,danielpacak,2019-11-05T10:37:35Z,"NIT: You can make this private, i.e. name it `repository` and shorten `RepositoryInterface` to simply `Repository`"
342492177,253,danielpacak,2019-11-05T10:40:53Z,Add some message to the logger. Log it as error?
342493119,253,danielpacak,2019-11-05T10:43:02Z,"Give some context to the log message, e.g. `log.Logger.Debugf(""Inspecting GitHub release: %s"", release.GetName())`"
342496016,253,danielpacak,2019-11-05T10:49:14Z,"`require.NoError(t, err, ""Init logger failed"")`"
342499018,253,danielpacak,2019-11-05T10:55:59Z,Do you really need this for testing with mocks?
342512126,253,danielpacak,2019-11-05T11:28:09Z,"Formatting, break it into lines"
342512649,253,danielpacak,2019-11-05T11:29:23Z,What if err != nil?
342512959,253,danielpacak,2019-11-05T11:30:09Z,Which error are you checking here?
343169886,253,knqyf263,2019-11-06T15:45:44Z,"I got it. By the way, I'm not sure `light` is a proper name. Do you have any other idea? e.g. `fast`, `no-detail`, and so on."
343170841,253,knqyf263,2019-11-06T15:47:16Z,I fixed it.
343174519,253,knqyf263,2019-11-06T15:53:20Z,I fixed it.
343180015,253,knqyf263,2019-11-06T16:01:54Z,"If the db is not in the local machine, GetMetadata will return err. But `metadata` is a struct, not a pointer. A default value is stored.
https://play.golang.org/p/dL0hUqHYi2D

But my editor also warns me. I fixed it."
343181490,253,knqyf263,2019-11-06T16:04:25Z,Nice. I fixed it.
343186727,253,knqyf263,2019-11-06T16:13:13Z,Fixed
343188044,253,knqyf263,2019-11-06T16:15:23Z,Fixed.
343188671,253,knqyf263,2019-11-06T16:16:26Z,"Do you mean we should make expectedError shorter? Or, should we avoid wrapping error many times?"
343189352,253,knqyf263,2019-11-06T16:17:37Z,You're right.
343276264,253,simar7,2019-11-06T19:11:47Z,I'm curious as to why is `getMetadata` a slice of `getMetadataOutput`? Can there ever be more than one behaviour at a time for `getMetadata` in a single invocation? It also looks like all the test cases here only have a single element anyway.
343280851,253,simar7,2019-11-06T19:21:25Z,Are there some changes that haven't been pushed yet @knqyf263? I don't see this fixed in the latest HEAD of the branch.
343281740,253,simar7,2019-11-06T19:23:10Z,This would be an example of a situation where testing what's logged would be useful. 
343298550,253,simar7,2019-11-06T19:58:24Z,"This will panic if releases is not empty but doesn't have all the elements inside of it, in particular `PublishedAt`. For example:
```
{
  ID:   github.Int64(1),
  Name: github.String(""xyzfoo1-2020123123""),
}
```

Should we explicitly check for that before proceeding to be safe?"
343318718,253,simar7,2019-11-06T20:46:42Z,The name `Write` is confusing in this context where there's an interface `Writer` and a method within that interface also called `Write`. Maybe we should rename this to something else like `WriteOutput` for the lack of a better name?
343319066,253,simar7,2019-11-06T20:47:29Z,I like `light`!
343335368,253,knqyf263,2019-11-06T21:25:07Z,"I'm sorry. I was interrupted at the end of today, so I couldn't push the commits. I pushed just before."
344493282,253,knqyf263,2019-11-10T13:51:47Z,I fixed it.
344493412,253,knqyf263,2019-11-10T13:54:08Z,"Yes, GitHub Release API sometimes returns a redirect URL. In that case, Trivy uses http client to fetch pre-built db. This mock is for the http client.
https://github.com/aquasecurity/trivy/pull/253/files#diff-3d9f295fc7f6a4f31449fdf24e118fdaR114"
344494559,253,knqyf263,2019-11-10T14:16:48Z,Fixed
344495191,253,knqyf263,2019-11-10T14:28:42Z,"In that case, the error is handled by line 46 - 49. The error would be displayed, but it wouldn't stop the loop."
344495332,253,knqyf263,2019-11-10T14:30:52Z,"When `--light` is enabled, the error from line 41. When `--light` is disabled, the error from line 44. They are almost the same, so I made those error handling common.

```
		if light {
			severity, err = c.dbc.GetSeverity(vuln.VulnerabilityID)
			if err != nil {
				log.Logger.Warn(err)
				continue
			}
			vulnerability.Severity = severity.String()
		} else {
			vulnerability, err = c.dbc.GetVulnerability(vuln.VulnerabilityID)
			if err != nil {
				log.Logger.Warn(err)
				continue
			}
		}
```
We can write as the above."
344495649,253,knqyf263,2019-11-10T14:36:53Z,"I assumed a case where `getMetadata` was not called. In that case, I need to avoid calling `Mock.On().Return()`. This is because we use `AssertExpectations`. If the slice is empty, we can skip the `for` loop. But for now, `getMetadata` is always called once. We can change from a slice to an object."
344495854,253,knqyf263,2019-11-10T14:40:55Z,Fixed.
344496134,253,knqyf263,2019-11-10T14:46:48Z,Great point. We should have used `GetPublishedAt`. This is safety for nil.
344496551,253,knqyf263,2019-11-10T14:53:43Z,Fixed
344496648,253,knqyf263,2019-11-10T14:55:30Z,"Actually, I didn't feel that this name is good, but I couldn't come up with a good name. I will change Write to WriteOutput. Thanks."
344496738,253,knqyf263,2019-11-10T14:57:05Z,I used WriteResults
345415939,253,knqyf263,2019-11-12T20:01:03Z,I added the description for light mode.
999448744,3015,liamg,2022-10-19T13:28:29Z,I think we should be pointed to this one now: https://github.com/aquasecurity/defsec/pkgs/container/defsec
999449222,3015,liamg,2022-10-19T13:28:51Z,"(that said, i'm not sure it's been pushed with the v0.80.1 tag as expected, I'll check it out)"
999459237,3015,liamg,2022-10-19T13:36:27Z,I fixed the bundle tag issue here: https://github.com/aquasecurity/defsec/pull/1023 - will tag and release a good bundle shortly.
999486468,3015,liamg,2022-10-19T13:51:52Z,"Fixed, `0`, `0.80` and `0.80.2` are now synonymous with `latest` :partying_face: "
1000014921,3015,simar7,2022-10-19T23:28:30Z,awesomesauce.gif
1000015537,3015,simar7,2022-10-19T23:30:07Z,"> I think we should be pointed to this one now: https://github.com/aquasecurity/defsec/pkgs/container/defsec

updated here https://github.com/aquasecurity/trivy/pull/3015/commits/f2e1fbaeae68c0bfbed3410b23f8992c98077491"
1035766953,3015,knqyf263,2022-11-30T10:03:08Z,"I'm just curious about why `<=` is better than `==` here. That value cannot be negative, right?

```suggestion
	if !option.SkipPolicyUpdate && len(option.RegoOptions.PolicyPaths) == 0 {
```"
1035770876,3015,knqyf263,2022-11-30T10:06:52Z,"BTW, Trivy will not use the downloaded policy if `--skip-policy-update` is specified. Am I correct?

I imagined as below:

```
$ trivy aws // download the policy
$ trivy aws --skip-policy-update // not download the policy, but use the downloaded policy
```

The above two commands should return the same result as the first command already downloads the policy."
1035773997,3015,knqyf263,2022-11-30T10:09:54Z,"Same here. When `--skip-policy-update` is specified, it always falls back into embedded policies. It looks weird to me.

1. `--skip-policy-update` is specified at the first run => use embedded policy
2. `--skip-policy-update` is specified when the policy is already downloaded => use the downloaded policy

I might be missing something, as I've not been involved in the discussion."
1036596592,3015,simar7,2022-12-01T01:09:05Z,"Yes you're correct. Actually it's been too long for me to remember why I did this way as well 🤣. But yes I understand, it makes sense. 

I changed the behaviour as such here https://github.com/aquasecurity/trivy/pull/3015/commits/bb64aff7014c3fdd03ed4680e53afc83c70d8cce
"
1043101968,3015,knqyf263,2022-12-08T09:14:12Z,"I might be mistaken, but does it mean we will not use built-in policies if the user passes `--config-policy`? I thought built-in policies are loaded anyway, and custom policies are loaded in addition to that."
1043957152,3015,simar7,2022-12-09T00:44:44Z,"Yes this is correct. There is a good reason for this however and that is the fact that if we do load embedded policies when a user specifies a custom policy of their own, we risk the chance of getting rego namespace collisions. 

A more detailed explanation with an example: A user loads a custom policy that they've written that uses rego helper functions from an aqua library, like this: https://github.com/aquasecurity/defsec/blob/master/internal/rules/policies/kubernetes/lib/kubernetes.rego - in this case there's a chance that their code is using a version of the helper library (kubernetes.rego) that is out of date or different from the latest embedded helper library (kubernetes.rego). This would cause their custom policy to fail. They would also not be able to load their own helper either because of rego namespace collision (redeclaring the same functions).

So in short, if a user loads a custom policy, it is on them to supply all necessary helper libraries as well for the policy to work properly. This eliminates any confusion or mismatch as described above."
1044860517,3015,knqyf263,2022-12-09T21:38:17Z,"It makes sense that we don't want to load helper functions when custom policies are passed.
But if I understand correctly, the current version loads custom policies in addition to built-in policies, right? Will we change the behavior to disable all built-in policies when custom policies are specified? Isn't this a breaking change?"
1044930996,3015,simar7,2022-12-10T00:45:11Z,"Hm yeah that is a good point. Although the breakage is limited to those custom policies that use any Rego helpers we provide. 

Do you have any proposal on how we can if possible, avoid this breaking change?"
1045193433,3015,knqyf263,2022-12-11T08:38:49Z,"It is inconvenient if the built-in policies are disabled and not intuitive as users assume custom policies are add-on. I think we can accept the risk of out-of-date helper functions. We should warn it in our doc though. 
@simar7 Did you already see any issue from the version mismatch of the helper library?
@itaysk Any thoughts? "
1045206344,3015,itaysk,2022-12-11T10:14:07Z,"Thanks for catching this @knqyf263 I agree, I don't think it's reasonable to expect the user to provide helpers for Trivy's built-in policies, and moreover to make sure not to break any existing policy. Agree with your recommendation."
1045207473,3015,itaysk,2022-12-11T10:21:10Z,"in addition (another PR) WDYT about changing the namespace of built-in helpers for example to `lib.trivy.kubernetes` (instead of `lib.kubernetes` which is a popular existing library), this way it's clear that this is a trivy component, and if someone is using a custom/another kubernetes lib in custom policy, it would not conflict with Trivy's."
1045228247,3015,knqyf263,2022-12-11T12:48:25Z,"Changing the namespace of our helpers sounds good to me. It could be a breaking change, so we can announce that along with the embedded policy retirement."
1046405755,3015,simar7,2022-12-12T21:26:00Z,"Actually I might have missed a thing here as it's been a while I made this PR. So I tested out the current set of changes and it is in fact loading both embedded policies and custom policies (if any are specified). 

IOW loading custom policies does not disable embedded policies (current behaviour is maintained).

Also if a custom policy uses a helper, it will use the one that the embedding policies have (also current behaviour).

See below for an example. Note there are 4 results as the ""custom"" policy I'm loading is just a copy of an embedded policy, DS005.

```shell
rm -rf  /Users/simar/Library/Caches/trivy/policy  &&  ./trivy --debug conf --skip-policy-update /Users/simar/repos/defsec/test/testdata/dockerfile/DS005 --config-policy=/Users/simar/repos/defsec-policies-testing



2022-12-12T13:22:47.745-0800    DEBUG   Severities: [""UNKNOWN"" ""LOW"" ""MEDIUM"" ""HIGH"" ""CRITICAL""]
2022-12-12T13:22:47.800-0800    DEBUG   cache dir:  /Users/simar/Library/Caches/trivy
>>> policy paths [/Users/simar/repos/defsec-policies-testing]
2022-12-12T13:22:47.800-0800    INFO    Misconfiguration scanning is enabled
2022-12-12T13:22:47.800-0800    DEBUG   Walk the file tree rooted at '/Users/simar/repos/defsec/test/testdata/dockerfile/DS005' in parallel
2022-12-12T13:22:48.254-0800    DEBUG   OS is not detected.
2022-12-12T13:22:48.254-0800    INFO    Detected config files: 2
2022-12-12T13:22:48.254-0800    DEBUG   Scanned config file: Dockerfile.allowed
2022-12-12T13:22:48.254-0800    DEBUG   Scanned config file: Dockerfile.denied

Dockerfile.denied (dockerfile)

Tests: 25 (SUCCESSES: 21, FAILURES: 4, EXCEPTIONS: 0)
Failures: 4 (UNKNOWN: 0, LOW: 4, MEDIUM: 0, HIGH: 0, CRITICAL: 0)

LOW: CUSTOM Consider using 'COPY ""/target/app.jar"" ""app.jar""' command instead of 'ADD ""/target/app.jar"" ""app.jar""'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
You should use COPY instead of ADD unless you want to extract a tar file. Note that an ADD command will extract a tar file, which adds the risk of Zip-based vulnerabilities. Accordingly, it is advised to use a COPY command, which does not extract tar files.

See https://avd.aquasec.com/misconfig/ds005
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Dockerfile.denied:4
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
   4 [ ADD ""/target/app.jar"" ""app.jar""
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


LOW: CUSTOM Consider using 'COPY ""/target/app.jar"" ""app.jar""' command instead of 'ADD ""/target/app.jar"" ""app.jar""'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
You should use COPY instead of ADD unless you want to extract a tar file. Note that an ADD command will extract a tar file, which adds the risk of Zip-based vulnerabilities. Accordingly, it is advised to use a COPY command, which does not extract tar files.

See https://avd.aquasec.com/misconfig/ds005
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Dockerfile.denied:4
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
   4 [ ADD ""/target/app.jar"" ""app.jar""
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


LOW: Consider using 'COPY ""/target/app.jar"" ""app.jar""' command instead of 'ADD ""/target/app.jar"" ""app.jar""'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
You should use COPY instead of ADD unless you want to extract a tar file. Note that an ADD command will extract a tar file, which adds the risk of Zip-based vulnerabilities. Accordingly, it is advised to use a COPY command, which does not extract tar files.

See https://avd.aquasec.com/misconfig/ds005
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Dockerfile.denied:4
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
   4 [ ADD ""/target/app.jar"" ""app.jar""
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


LOW: Consider using 'COPY ""/target/app.jar"" ""app.jar""' command instead of 'ADD ""/target/app.jar"" ""app.jar""'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
You should use COPY instead of ADD unless you want to extract a tar file. Note that an ADD command will extract a tar file, which adds the risk of Zip-based vulnerabilities. Accordingly, it is advised to use a COPY command, which does not extract tar files.

See https://avd.aquasec.com/misconfig/ds005
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Dockerfile.denied:4
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
   4 [ ADD ""/target/app.jar"" ""app.jar""
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

```

Policy can be found here: https://github.com/aquasecurity/defsec/blob/master/internal/rules/policies/docker/policies/add_instead_of_copy.rego"
1046756540,3015,itaysk,2022-12-13T07:44:12Z,"If this is the actually behavior (not sure since Teppei spotted the behavior in the code) then it sounds like a good one to me. To summarize:

1. Built-in policies are downloaded by default
  1.1 can be disabled `--skip-policy-update`
2. Built-in policies are loaded by default
  2.1 can not be disabled (right?)
3. Custom policies, if provided `--config-policy`, are loaded in addition to built-in
3. Built-in helpers are always loaded and available for built-in and custom policies
  3.1 if built-in policies bundle was not downloaded, built-in helpers are not available for custom policy author (correct? might want to fix it in the future)
  3.2 TODO: namespace built-in helpers"
1046802966,3015,knqyf263,2022-12-13T08:37:48Z,">IOW loading custom policies does not disable embedded policies (current behaviour is maintained).

Oh, seems like we don't use downloaded polices like I pointed out, but use embedded policies. If custom policies are passed, we switch downloaded policies to embedded policies. This is why I said embedded policies complicate the logic.

For example,

- The latest downloaded policies: Policy A, B, C (C was added to defsec recently)
- The embedded policies: Policy A, B
- The user custom policy: Policy D

In this case, `trivy config /path/to/dir` detects A, B and C, but `trivy config --config-policy ./my-policy /path/to/dir` will detect A, B and D, not detect C anymore. I don't think it is expected behavior."
1046815279,3015,itaysk,2022-12-13T08:47:49Z,"so if we consider the typical hierarchy:
1. embedded
2. downloaded
3. custom

it should be loaded in this order, meaning 3 overrides 2 overrides 1

currently we miss step 2 if custom if provided.
correct?"
1046815363,3015,knqyf263,2022-12-13T08:47:53Z,"IIUC, this PR behaves as below:

1. Built-in policies are downloaded by default
    1.1 can be disabled --skip-policy-update
1. Built-in policies are loaded by default
    2.1 can not be disabled (can be ignored by using exception policies though)
1. Custom policies, if provided --config-policy, are loaded in addition to **embedded built-in** policies
    3.1 Regardless of whether built-in policies are downloaded
1. Built-in helpers are always loaded and available for built-in and custom policies

It should be like:

1. Built-in policies are downloaded by default
    1.1 can be disabled --skip-policy-update
1. Built-in policies are loaded by default
    2.1 can not be disabled (can be ignored by using exception policies though)
1. Custom policies, if provided --config-policy, are loaded in addition to built-in policies
    3.1 Use downloaded policies if present
    3.2 Use embedded policies if there are no downloaded policies in local
1. Built-in helpers are always loaded and available for built-in and custom policies

Please correct me if I'm wrong."
1046819871,3015,knqyf263,2022-12-13T08:51:51Z,"1. built-in
    1.1. embedded
    1.2. downloaded (if present)
1. custom

`1.2` should override `1.1`. `2` should not override `1`. Enabling `2` should not affect `1`. `1.1` or `1.2` should be selected regardless of `2`."
1063944917,3015,simar7,2023-01-07T03:19:11Z,"Thanks for the positive discussion from you both, I've read through it and I think I have an idea of what's desired.

> 1. built-in
>    1.1. embedded
>    1.2. downloaded (if present)
> 2. custom
> 
> `1.2` should override `1.1`. `2` should not override `1`. Enabling `2` should not affect `1`. `1.1` or `1.2` should be selected regardless of `2`.

Just to recap, I'm going by this as it's the most succinct and clear definition so far.


Here's a few results, please point out any logical flaws if you see any:

1. No cache, `--skip-policy-update` enabled and No custom policy passed:
```shell
rm -rf  /Users/simar/Library/Caches/trivy/policy  &&  ./trivy --skip-policy-update --debug  conf /Users/simar/repos/defsec-policies-testing
2023-01-06T19:05:33.343-0800	DEBUG	Severities: [""UNKNOWN"" ""LOW"" ""MEDIUM"" ""HIGH"" ""CRITICAL""]
2023-01-06T19:05:33.385-0800	DEBUG	cache dir:  /Users/simar/Library/Caches/trivy
2023-01-06T19:05:33.385-0800	INFO	No downloadable policies were loaded as --skip-policy-update is enabled
2023-01-06T19:05:33.386-0800	DEBUG	Falling back to embedded policies: No downloadable policies were loaded as --skip-policy-update is enabled
2023-01-06T19:05:33.386-0800	INFO	Misconfiguration scanning is enabled
2023-01-06T19:05:33.386-0800	DEBUG	Walk the file tree rooted at '/Users/simar/repos/defsec-policies-testing' in parallel
2023-01-06T19:05:33.950-0800	DEBUG	OS is not detected.
2023-01-06T19:05:33.951-0800	INFO	Detected config files: 1
2023-01-06T19:05:33.951-0800	DEBUG	Scanned config file: Dockerfile.denied

Dockerfile.denied (dockerfile)

Tests: 22 (SUCCESSES: 21, FAILURES: 1, EXCEPTIONS: 0)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

CRITICAL: 'COPY --from' should not mention current alias 'dep' since it is impossible to copy from itself
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
COPY '--from' should not mention the current FROM alias, since it is impossible to copy from itself.

See https://avd.aquasec.com/misconfig/ds006
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Dockerfile.denied:2
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
   2 [ COPY --from=dep /binary /
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
```

**Result: Only embedded policy is used.**

2. No cache, `--skip-policy-update` enabled and ONE custom policy passed:
```shell
rm -rf  /Users/simar/Library/Caches/trivy/policy  &&  ./trivy --skip-policy-update --debug  conf /Users/simar/repos/defsec-policies-testing --config-policy=/Users/simar/repos/defsec-policies-testing
2023-01-06T19:04:26.421-0800	DEBUG	Severities: [""UNKNOWN"" ""LOW"" ""MEDIUM"" ""HIGH"" ""CRITICAL""]
2023-01-06T19:04:26.480-0800	DEBUG	cache dir:  /Users/simar/Library/Caches/trivy
2023-01-06T19:04:26.480-0800	INFO	No downloadable policies were loaded as --skip-policy-update is enabled
2023-01-06T19:04:26.480-0800	DEBUG	Falling back to embedded policies: No downloadable policies were loaded as --skip-policy-update is enabled
2023-01-06T19:04:26.480-0800	INFO	Misconfiguration scanning is enabled
2023-01-06T19:04:26.480-0800	DEBUG	Walk the file tree rooted at '/Users/simar/repos/defsec-policies-testing' in parallel
2023-01-06T19:04:27.007-0800	DEBUG	OS is not detected.
2023-01-06T19:04:27.007-0800	INFO	Detected config files: 1
2023-01-06T19:04:27.007-0800	DEBUG	Scanned config file: Dockerfile.denied

Dockerfile.denied (dockerfile)

Tests: 23 (SUCCESSES: 21, FAILURES: 2, EXCEPTIONS: 0)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 2)

CRITICAL: 'COPY --from' should not mention current alias 'dep' since it is impossible to copy from itself
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
COPY '--from' should not mention the current FROM alias, since it is impossible to copy from itself.

See https://avd.aquasec.com/misconfig/ds006
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Dockerfile.denied:2
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
   2 [ COPY --from=dep /binary /
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


CRITICAL: My amazing new custom policy
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
CUSTOM POLICY: My amazing new custom policy.

See https://avd.aquasec.com/misconfig/ds999
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Dockerfile.denied:2
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
   2 [ COPY --from=dep /binary /
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
```
**Result: Observe that custom policy was scanned in addition to the embedded policy as desired by: `2 should not override 1. Enabling 2 should not affect 1. 1.1 or 1.2 should be selected regardless of 2.`**

3. No cache, policy update is successful, No custom policy:
```shell
rm -rf  /Users/simar/Library/Caches/trivy/policy  &&  ./trivy  --debug  conf /Users/simar/repos/defsec-policies-testing
2023-01-06T19:09:15.973-0800	DEBUG	Severities: [""UNKNOWN"" ""LOW"" ""MEDIUM"" ""HIGH"" ""CRITICAL""]
2023-01-06T19:09:16.027-0800	DEBUG	cache dir:  /Users/simar/Library/Caches/trivy
2023-01-06T19:09:16.027-0800	DEBUG	Failed to open the policy metadata: open /Users/simar/Library/Caches/trivy/policy/metadata.json: no such file or directory
2023-01-06T19:09:16.027-0800	INFO	Need to update the built-in policies
2023-01-06T19:09:16.027-0800	INFO	Downloading the built-in policies...
30.72 KiB / 30.72 KiB [------------------------------------------------------------------------------------] 100.00% ? p/s 0s
2023-01-06T19:09:16.208-0800	DEBUG	Digest of the built-in policies: sha256:e089eac12028c59cdbdc9ae21653ab5e0600d146fe5cc1fad1535f3446118802
2023-01-06T19:09:16.209-0800	DEBUG	Policies successfully loaded from disk
2023-01-06T19:09:16.209-0800	INFO	Misconfiguration scanning is enabled
2023-01-06T19:09:16.209-0800	DEBUG	Walk the file tree rooted at '/Users/simar/repos/defsec-policies-testing' in parallel
2023-01-06T19:09:16.757-0800	DEBUG	OS is not detected.
2023-01-06T19:09:16.757-0800	INFO	Detected config files: 1
2023-01-06T19:09:16.757-0800	DEBUG	Scanned config file: Dockerfile.denied

Dockerfile.denied (dockerfile)

Tests: 22 (SUCCESSES: 21, FAILURES: 1, EXCEPTIONS: 0)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

CRITICAL: 'COPY --from' should not mention current alias 'dep' since it is impossible to copy from itself
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
DOWNLOADED POLICY: COPY '--from' should not mention the current FROM alias, since it is impossible to copy from itself.

See https://avd.aquasec.com/misconfig/ds006
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Dockerfile.denied:2
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
   2 [ COPY --from=dep /binary /
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
```

**Result: Only newer downloaded policy is used.**

4. No cache, policy update is successful, ONE custom policy:
```shell
rm -rf  /Users/simar/Library/Caches/trivy/policy  &&  ./trivy --debug  conf /Users/simar/repos/defsec-policies-testing --config-policy=/Users/simar/repos/defsec-policies-testing
2023-01-06T19:10:45.034-0800	DEBUG	Severities: [""UNKNOWN"" ""LOW"" ""MEDIUM"" ""HIGH"" ""CRITICAL""]
2023-01-06T19:10:45.088-0800	DEBUG	cache dir:  /Users/simar/Library/Caches/trivy
2023-01-06T19:10:45.088-0800	DEBUG	Failed to open the policy metadata: open /Users/simar/Library/Caches/trivy/policy/metadata.json: no such file or directory
2023-01-06T19:10:45.088-0800	INFO	Need to update the built-in policies
2023-01-06T19:10:45.088-0800	INFO	Downloading the built-in policies...
30.72 KiB / 30.72 KiB [------------------------------------------------------------------------------------] 100.00% ? p/s 0s
2023-01-06T19:10:45.263-0800	DEBUG	Digest of the built-in policies: sha256:e089eac12028c59cdbdc9ae21653ab5e0600d146fe5cc1fad1535f3446118802
2023-01-06T19:10:45.263-0800	DEBUG	Policies successfully loaded from disk
2023-01-06T19:10:45.263-0800	INFO	Misconfiguration scanning is enabled
2023-01-06T19:10:45.264-0800	DEBUG	Walk the file tree rooted at '/Users/simar/repos/defsec-policies-testing' in parallel
2023-01-06T19:10:45.867-0800	DEBUG	OS is not detected.
2023-01-06T19:10:45.867-0800	INFO	Detected config files: 1
2023-01-06T19:10:45.867-0800	DEBUG	Scanned config file: Dockerfile.denied

Dockerfile.denied (dockerfile)

Tests: 23 (SUCCESSES: 21, FAILURES: 2, EXCEPTIONS: 0)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 2)

CRITICAL: 'COPY --from' should not mention current alias 'dep' since it is impossible to copy from itself
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
DOWNLOADED POLICY: COPY '--from' should not mention the current FROM alias, since it is impossible to copy from itself.

See https://avd.aquasec.com/misconfig/ds006
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Dockerfile.denied:2
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
   2 [ COPY --from=dep /binary /
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


CRITICAL: My amazing new custom policy
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
CUSTOM POLICY: My amazing new custom policy.

See https://avd.aquasec.com/misconfig/ds999
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Dockerfile.denied:2
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
   2 [ COPY --from=dep /binary /
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
```
**Result: Observe that again Custom policy is scanned in addition but this time it is the NEWER downloaded policy. This is as per: `1.2 should override 1.1`.**

5. No cache, policy update fails, NO custom policy
```shell
rm -rf  /Users/simar/Library/Caches/trivy/policy  &&  ./trivy --debug  conf /Users/simar/repos/defsec-policies-testing
2023-01-06T19:12:51.734-0800	DEBUG	Severities: [""UNKNOWN"" ""LOW"" ""MEDIUM"" ""HIGH"" ""CRITICAL""]
2023-01-06T19:12:51.790-0800	DEBUG	cache dir:  /Users/simar/Library/Caches/trivy
2023-01-06T19:12:51.790-0800	DEBUG	Failed to open the policy metadata: open /Users/simar/Library/Caches/trivy/policy/metadata.json: no such file or directory
2023-01-06T19:12:51.790-0800	INFO	Need to update the built-in policies
2023-01-06T19:12:51.790-0800	INFO	Downloading the built-in policies...
2023-01-06T19:12:51.931-0800	DEBUG	Falling back to embedded policies: failed to download built-in policies: OPA bundle error: OCI artifact error: OCI repository error: Get ""https://localhost:5000/v2/"": dial tcp [::1]:5000: connect: connection refused; Get ""http://localhost:5000/v2/"": dial tcp [::1]:5000: connect: connection refused
2023-01-06T19:12:51.931-0800	INFO	Misconfiguration scanning is enabled
2023-01-06T19:12:51.932-0800	DEBUG	Walk the file tree rooted at '/Users/simar/repos/defsec-policies-testing' in parallel
2023-01-06T19:12:52.445-0800	DEBUG	OS is not detected.
2023-01-06T19:12:52.445-0800	INFO	Detected config files: 1
2023-01-06T19:12:52.445-0800	DEBUG	Scanned config file: Dockerfile.denied

Dockerfile.denied (dockerfile)

Tests: 22 (SUCCESSES: 21, FAILURES: 1, EXCEPTIONS: 0)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

CRITICAL: 'COPY --from' should not mention current alias 'dep' since it is impossible to copy from itself
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
COPY '--from' should not mention the current FROM alias, since it is impossible to copy from itself.

See https://avd.aquasec.com/misconfig/ds006
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Dockerfile.denied:2
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
   2 [ COPY --from=dep /binary /
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
```

**Result: Observe in this case the embedded policy is used as no new policies were downloaded.**

6. No cache, policy update fails, ONE custom policy:
```shell
rm -rf  /Users/simar/Library/Caches/trivy/policy  &&  ./trivy --debug  conf /Users/simar/repos/defsec-policies-testing --config-policy=/Users/simar/repos/defsec-policies-testing
2023-01-06T19:11:57.546-0800	DEBUG	Severities: [""UNKNOWN"" ""LOW"" ""MEDIUM"" ""HIGH"" ""CRITICAL""]
2023-01-06T19:11:57.602-0800	DEBUG	cache dir:  /Users/simar/Library/Caches/trivy
2023-01-06T19:11:57.602-0800	DEBUG	Failed to open the policy metadata: open /Users/simar/Library/Caches/trivy/policy/metadata.json: no such file or directory
2023-01-06T19:11:57.602-0800	INFO	Need to update the built-in policies
2023-01-06T19:11:57.602-0800	INFO	Downloading the built-in policies...
2023-01-06T19:11:57.738-0800	DEBUG	Falling back to embedded policies: failed to download built-in policies: OPA bundle error: OCI artifact error: OCI repository error: Get ""https://localhost:5000/v2/"": dial tcp [::1]:5000: connect: connection refused; Get ""http://localhost:5000/v2/"": dial tcp [::1]:5000: connect: connection refused
2023-01-06T19:11:57.738-0800	INFO	Misconfiguration scanning is enabled
2023-01-06T19:11:57.738-0800	DEBUG	Walk the file tree rooted at '/Users/simar/repos/defsec-policies-testing' in parallel
2023-01-06T19:11:58.306-0800	DEBUG	OS is not detected.
2023-01-06T19:11:58.306-0800	INFO	Detected config files: 1
2023-01-06T19:11:58.306-0800	DEBUG	Scanned config file: Dockerfile.denied

Dockerfile.denied (dockerfile)

Tests: 23 (SUCCESSES: 21, FAILURES: 2, EXCEPTIONS: 0)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 2)

CRITICAL: 'COPY --from' should not mention current alias 'dep' since it is impossible to copy from itself
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
COPY '--from' should not mention the current FROM alias, since it is impossible to copy from itself.

See https://avd.aquasec.com/misconfig/ds006
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Dockerfile.denied:2
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
   2 [ COPY --from=dep /binary /
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


CRITICAL: My amazing new custom policy
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
CUSTOM POLICY: My amazing new custom policy.

See https://avd.aquasec.com/misconfig/ds999
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 Dockerfile.denied:2
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
   2 [ COPY --from=dep /binary /
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
```

**Result: Observe again in this case embedded policy is used (in addition to custom policy).**
"
1063945063,3015,simar7,2023-01-07T03:20:10Z,The changes to implement above are minimal but I want to confirm if the expectation is as desired before proceeding.
1064160833,3015,knqyf263,2023-01-08T15:25:20Z,"Thanks for sorting out. It looks perfect to me! There is one note about no.5. We should show the fallback message as an error so that users can be aware embedded policies are used.
If there is no embedded policy, the logic can be much simplified, though. We may want to announce the retirement of embedded policies shortly."
1065571076,3015,knqyf263,2023-01-10T10:00:33Z,"We need to close the file. Otherwise, it fails tests on Windows."
1065571197,3015,knqyf263,2023-01-10T10:00:40Z,ditto
1066335505,3015,simar7,2023-01-10T20:59:43Z,ah... thanks for catching this!
1066949223,3015,knqyf263,2023-01-11T12:45:25Z,"It shows this error even when `--skip-policy-update` is specified on the first run.

```
$ trivy config --skip-policy-update .
2023-01-11T14:33:20.119+0200    INFO    No downloadable policies were loaded as --skip-policy-update is enabled
2023-01-11T14:33:20.119+0200    ERROR   Falling back to embedded policies: No downloadable policies were loaded as --skip-policy-update is enabled
```

I think only unexpected things should be shown as an error. If policies cannot be pulled due to network or storage issues, it should be an error. What do you think? 
If you don't think embedded policies should be used even with `--skip-policy-update`, which means they should have downloaded policies locally, the error is ok because using embedded policies is unexpected."
1066950000,3015,knqyf263,2023-01-11T12:46:18Z,Forgot to remove?
1066951769,3015,knqyf263,2023-01-11T12:48:08Z,Shouldn't it be aligned with config scanning? Seems like AWS scanning will not download policies if custom policies are passed.
1067557480,3015,simar7,2023-01-11T23:22:13Z,"Right, I think the former is better (only error in unexpected situations). I think that's easy to check with err != nil and false skip update, that should signal that user intended to download new policies but failed to do so. 

I added that check in: https://github.com/aquasecurity/trivy/pull/3015/commits/ac1eef6ef4f49022e736583da54c715f55b9d2f2"
1067570946,3015,simar7,2023-01-11T23:45:37Z,good catch - fixed that here https://github.com/aquasecurity/trivy/pull/3015/commits/6565583a44934bf10b1e799ae289d8e909eac541
531792712,751,danielpacak,2020-11-27T21:46:26Z,"The `--create-namespace` flag is pretty handy if he namespace does not exist:

```suggestion
$ helm install trivy . --namespace trivy --create-namespace
```"
531796570,751,danielpacak,2020-11-27T22:10:28Z,"IIRC Trivy does not recognize the `LOG_LEVEL` env, only TRIVY_DEBUG. Am I right @knqyf263 ? If yes we can remove this setting and the logLevel value."
531800193,751,danielpacak,2020-11-27T22:36:26Z,"Trivy server does not use the `TRIVY_REPORTS_DIR` env. It was only relevant for the Harbor scanner adapter, which is storing vulnerability reports in temporary files."
531801091,751,danielpacak,2020-11-27T22:43:28Z,"I'm not sure it makes sense to expose cacheDir value to Helm users. This is somehow implementation detail of this chart, which does not have any impact on scan results. What's more, I can imagine someone misconfiguring it."
531803758,751,danielpacak,2020-11-27T23:03:10Z,"We need to double check, but I played with Trivy server run in the cluster and I had to specify `0.0.0.0:8080` to accept connection from client pods. See https://github.com/aquasecurity/starboard/blob/master/deploy/trivy-server/03-trivy-server.deployment.yaml#L32"
531804496,751,danielpacak,2020-11-27T23:09:12Z,"That's the name of env recognized by Trivy:

```suggestion
            - name: ""TRIVY_DEBUG""
```"
531806262,751,danielpacak,2020-11-27T23:24:20Z,I'd not expose it as Helm value. See my previous comment where this value is used.
531806319,751,danielpacak,2020-11-27T23:24:40Z,Does not take effect
531806553,751,danielpacak,2020-11-27T23:26:33Z,I'd use the default port of trivy server 4954
531806636,751,danielpacak,2020-11-27T23:27:24Z,"```suggestion
  - trivy
```"
531806702,751,danielpacak,2020-11-27T23:28:01Z,scanner adapter -> Trivy server
531806738,751,danielpacak,2020-11-27T23:28:33Z,Takes no effect
531806770,751,danielpacak,2020-11-27T23:28:49Z,Not used by Trivy server
531806842,751,danielpacak,2020-11-27T23:29:22Z,I'd use 4954 instead of 8080 to be consistent with trivy CLI
531807031,751,danielpacak,2020-11-27T23:30:48Z,"```suggestion
You should be able to access Trivy server installation within
```"
531807384,751,danielpacak,2020-11-27T23:34:14Z,"Did you consider using Deployment with emptyDir volumes? I know that you're inspired by aquasecurity/harbor-scanner-trivy, but Harbor adapter is using Trivy in standalone mode. That was the reason to use StatefulSets, but in case of client-server mode we may probably use Deployment."
531807876,751,danielpacak,2020-11-27T23:38:39Z,For aquasecrity/harbor-scanner-trivy image we created user scanner(id=1000). It's not the case for Trivy image. So maybe you can use nobody(id=65534) as Trivy image is based on Alpine.
531807983,751,danielpacak,2020-11-27T23:39:29Z,I think we don't use this anywhere. The server is not pulling image layers.
531808006,751,danielpacak,2020-11-27T23:39:50Z,Not used.
531808114,751,danielpacak,2020-11-27T23:40:37Z,"Actually, I've just tested it and it works fine!"
532153173,751,knqyf263,2020-11-29T04:23:50Z,"Yes, Trivy recognizes only `TRIVY_DEBUG`."
532153517,751,knqyf263,2020-11-29T04:27:03Z,"As @danielpacak said, the server doesn't communicate with a registry."
532364934,751,czunker,2020-11-30T06:06:04Z,"I understood the comments in a way, that Trivy would pull the database from github.
With the PVC and statefulset I wanted to prevent a pull for the database on every POD restart."
532665290,751,danielpacak,2020-11-30T15:06:58Z,"@czunker Okey so in case you want to reuse downloaded DB files by configuring the storage class that has the reclaim policy set to `Retain`, having StatefulSet makes sense.  (AFAIK This is not possible with Deployments and the only way is indeed `PersistenceVolumeClaimTemplate`.)

On the other hand we can change the default `podManagementPolicy` of the StatefulSet from `OrderedReady` to `Paraller`, so pods are spun up independently rather than one after the other. There's no reason to wait in case of Trivy server. Pods can run and scale up or down independently.

"
532690416,751,danielpacak,2020-11-30T15:39:30Z,Add `trivy.ignoreUnfixed` to values.yaml with short description
532690697,751,danielpacak,2020-11-30T15:39:55Z,Add `trivy.skipUpdate` to values.yaml with short description
533091301,751,czunker,2020-12-01T06:01:09Z,I changed the `podManagementPolicy` and added a short note in the Readme.
533705015,751,danielpacak,2020-12-01T20:36:15Z,"Even though we do not expose cache directory as Helm value, we have to set it as ENV here. When I tested it pods were failing because we're running Trivy server as non root user (`nobody`), but it's trying to read and write to the `/.cache` directory.

```yaml
env:
  - name: ""TRIVY_CACHE_DIR""
    value: ""/home/scanner/.cache/trivy""
```"
533706281,751,danielpacak,2020-12-01T20:38:43Z,"I think we're missing description of the `gitHubToken` property, which is referred to by the Secret."
533712186,751,danielpacak,2020-12-01T20:49:29Z,"By default this service has `spec.sessionAffinity: None`, which might cause inconsistency errors when we scale up StatefulSet replicas. I was actually able to see such errors in my env after scaling to 3 replicas.

Basically we have to make sure that all requests related to scanning a particular image are routed to the same pod, which has its own file system cache (PVC -> PV).

The following sketch diagram depicts the problem that I'm trying to describe.

![trivy-server-session-affinity](https://user-images.githubusercontent.com/1322923/100794800-5edae880-341e-11eb-80ad-6d915ced84cf.png)

One way to fix it is to change `spec.sessionAffinity: None` to `spec.sessionAffinity: ClientIP`, but we have to double check how does that impact scalability. /cc @knqyf263 "
533977070,751,czunker,2020-12-02T08:25:55Z,"I think I missed to delete. In another comment mentioned the github token isn't needed to pull the database.

https://github.com/aquasecurity/trivy/pull/751#discussion_r531807983

Or did I misunderstand this comment?"
533977338,751,czunker,2020-12-02T08:26:23Z,Added this.
533979574,751,czunker,2020-12-02T08:30:11Z,Added
534024746,751,danielpacak,2020-12-02T09:39:45Z,Sorry for that @czunker You're right. I saw the Secret referring to the GH token and I mixed up things. Indeed we don't need the Secret and the GH token for Trivy client-server
537014840,751,knqyf263,2020-12-06T11:06:32Z,"I've supported Redis and it will address this issue.
https://github.com/aquasecurity/fanal/pull/143

Should we wait for the Redis support? Or, can we merge this PR once and replace PV with Redis in separate PR? What do you think, @danielpacak?"
537017420,751,knqyf263,2020-12-06T11:21:13Z,It will be done in the subsequent PR.
537220048,751,knqyf263,2020-12-07T04:18:19Z,"I overlooked this conversation, but I was talking about `insecure`, not `githubToken`. I meant `insecure` was unnecessary, but  `githubToken` was necessary for GitHub rate limiting. Even though a server doesn't pull the database from GitHub so often (every 12 hours), a user might face the rate-limiting."
537234424,751,czunker,2020-12-07T05:07:54Z,Fixed this in PR #769
537521630,751,danielpacak,2020-12-07T13:52:35Z,Absolutely. I mixed up pulling layers from registry server by client (does not require GH token) and downloading Trivy DB from GH which is subject to rate limit and we should be able to configure GH token.
667435479,1101,itaysk,2021-07-11T07:19:14Z,"IIUC, this section is not about scanning OCI *Image* but about OCI *Image Layout Directory*. saying image might confuse with a built image?"
667436313,1101,itaysk,2021-07-11T07:26:31Z,"perhaps ""more blogs"", ""external blogs"", or ""what others are saying"""
667436924,1101,itaysk,2021-07-11T07:31:14Z,"""Comprehensive vulnerability detection""
(otherwise it means the vulnerabilities are comprehensive, not Trivy)"
667437236,1101,itaysk,2021-07-11T07:33:49Z,"maybe merge these into:

```
- A wide variety of [built-in policies][builtin] are provided **Out of the box**:
    - Kubernetes
    - Docker  
    - Terraform
    - more coming soon
```"
667437922,1101,itaysk,2021-07-11T07:39:06Z,"how does this affect the license of Trivy? the license file simply says Apache 2, is that correct?"
667438306,1101,itaysk,2021-07-11T07:42:05Z,"""Scan Image for vulnerabilities"""
667438364,1101,itaysk,2021-07-11T07:42:27Z,"""Scan directory for misconfigurations"""
667438964,1101,itaysk,2021-07-11T07:47:54Z,"""Trivy's usually scans each configuration file individually. Sometimes it might be useful to compare values from different configuration files."""
667439389,1101,itaysk,2021-07-11T07:51:11Z,"```suggestion
In ""combine"" mode, the `input` document becomes an array, where each element is an object with two fields:
- `""path"": ""path/to/file""`: the relative file path of the respective file
- `""contents"": ...`: the parsed content of the respective file
```"
667439981,1101,itaysk,2021-07-11T07:55:56Z,"this was already said, can remove"
667441063,1101,itaysk,2021-07-11T08:04:55Z,"```suggestion
In ""combine"" mode, the `deny` entrypoint must return an object with two keys
```"
667441361,1101,itaysk,2021-07-11T08:07:33Z,"```suggestion
Exceptions lets you to specify cases where you allow policy violations. Trivy supports two types of exceptions.
```"
667446856,1101,itaysk,2021-07-11T08:51:29Z,"suggestion:

```
There are some cases where you need more flexibility and granularity in defining which cases to exempt. Rule-based exceptions lets you granularly choose which individual rules to exempt, while also declaring under which conditions to exempt them.

To use rule-based exceptions, create a Rego rule with the name `exception` that returns the rules name prefix to exempt (for example, returning `deny` will exempt `deny_foo`). The rule can make any other assertion, for example, on the input or data documents. This is useful to specify the exemption for a specific case.
... continue with the examples
```"
667446987,1101,itaysk,2021-07-11T08:52:34Z,I think it's better to put this first
667447120,1101,itaysk,2021-07-11T08:53:25Z,"if you accept my suggestion for rule-based, can rewrite this in the same style"
667447165,1101,itaysk,2021-07-11T08:53:50Z,"```suggestion
It is highly recommended to write tests for your policies.
```"
667447761,1101,itaysk,2021-07-11T08:58:36Z,broken link
667448104,1101,itaysk,2021-07-11T09:01:50Z,"what do you mean by ""allowed values"" the entire purpose of this flag is to supply my own custom value no?"
667448439,1101,itaysk,2021-07-11T09:04:38Z,"wdym ""as a virtual machine""?"
667449481,1101,itaysk,2021-07-11T09:12:08Z,"I think the details of how the policy db works is unnecessary for the quick start

```suggestion
Trivy will automatically fetch the latest policy database and will keep it up-to-date in future scans.
```"
667449698,1101,itaysk,2021-07-11T09:13:58Z,"please add ""for suggestions or issues regarding policy content, please open an issue under ""Appshield"" or ""tfsec"" repository."
667452900,1101,itaysk,2021-07-11T09:40:32Z,"maybe just to distinguish this list from the previous list, call the previous one ""file formats"" and this one ""configuration languages"""
667453071,1101,itaysk,2021-07-11T09:41:51Z,"""policy structure""?"
667453543,1101,itaysk,2021-07-11T09:45:52Z,"""metadata helps enrich Trivy's scan results with useful information"""
667453715,1101,itaysk,2021-07-11T09:47:18Z,"```suggestion
    `type` accepts `kubernetes`, `dockerfile`, `ansible`, `cloudformation`, `json`, `yaml`, `toml`, or `hcl`.
```"
667454130,1101,itaysk,2021-07-11T09:50:45Z,"maybe instead of this ""note"", add to the selector description above, that it's not just selecting which files to pass to the policy, but also affects how they will be parsed"
667465740,1101,knqyf263,2021-07-11T11:21:49Z,"Add ""Layout"" in accordance with [go-containerregistry](https://pkg.go.dev/github.com/google/go-containerregistry/pkg/v1/layout#Path.Image)
https://github.com/aquasecurity/trivy/pull/1101/commits/930da72ac95e24a568e7e5bb2701c917cc20cdc8"
667465826,1101,knqyf263,2021-07-11T11:22:22Z,done https://github.com/aquasecurity/trivy/pull/1101/commits/9d315e0c03aefee8b1d28cc8f1055275b249cce7
667465879,1101,knqyf263,2021-07-11T11:22:50Z,done https://github.com/aquasecurity/trivy/pull/1101/commits/ff262faf011088d23f33b4eef6099a45b489c2eb
667465887,1101,knqyf263,2021-07-11T11:22:56Z,done https://github.com/aquasecurity/trivy/pull/1101/commits/ff262faf011088d23f33b4eef6099a45b489c2eb
667470347,1101,knqyf263,2021-07-11T11:57:39Z,done https://github.com/aquasecurity/trivy/pull/1101/commits/f3ec1597ad1a9f26c0d7ab7f3f80b27bdd5de2f2
667470381,1101,knqyf263,2021-07-11T11:57:57Z,done https://github.com/aquasecurity/trivy/pull/1101/commits/f3ec1597ad1a9f26c0d7ab7f3f80b27bdd5de2f2
667470458,1101,knqyf263,2021-07-11T11:58:38Z,"`--file-pattern` does affect how files are parsed, but `selector` doesn't affect."
667470554,1101,knqyf263,2021-07-11T11:59:41Z,done https://github.com/aquasecurity/trivy/commit/f3ec1597ad1a9f26c0d7ab7f3f80b27bdd5de2f2
667470627,1101,knqyf263,2021-07-11T12:00:14Z,done https://github.com/aquasecurity/trivy/pull/1101/commits/bbaf804473891b843c92efbf969d3261279db0cd
667470704,1101,knqyf263,2021-07-11T12:00:34Z,done https://github.com/aquasecurity/trivy/pull/1101/commits/1c9fddb847c89159918743f11c9eec3817f32901
667471282,1101,knqyf263,2021-07-11T12:04:55Z,"No, it controls how Trivy looks for config files. Trivy looks for config files according to file name and extension. When a user might have Dockerfile not named ""Dockerfile"" and have different name conventions such as `webapp.docker` and `db.docker`, Trivy will not handle the file as Dockerfile. In that case, a user can specify `--file-patterns dockerfile:.*.docker`."
667471405,1101,knqyf263,2021-07-11T12:06:01Z,"Looks it is working. Still broken?
https://aquasecurity.github.io/trivy/dev/misconfiguration/advanced/testing/"
667471425,1101,knqyf263,2021-07-11T12:06:22Z,done https://github.com/aquasecurity/trivy/pull/1101/commits/b327fd5b9bc54845cf2a5f266ad9a57c0094877f
667471458,1101,knqyf263,2021-07-11T12:06:49Z,"I rewrote, but could you review it again?
https://github.com/aquasecurity/trivy/pull/1101/commits/75146d4cc3b91253316d6658842a5467a2a99fa3"
667471467,1101,knqyf263,2021-07-11T12:06:55Z,done https://github.com/aquasecurity/trivy/pull/1101/commits/75146d4cc3b91253316d6658842a5467a2a99fa3
667471491,1101,knqyf263,2021-07-11T12:07:04Z,done https://github.com/aquasecurity/trivy/pull/1101/commits/75146d4cc3b91253316d6658842a5467a2a99fa3
667471518,1101,knqyf263,2021-07-11T12:07:16Z,done https://github.com/aquasecurity/trivy/pull/1101/commits/75146d4cc3b91253316d6658842a5467a2a99fa3
667471625,1101,knqyf263,2021-07-11T12:08:01Z,done https://github.com/aquasecurity/trivy/pull/1101/commits/04902f44f293d1a134a812181a96688d5036fa39
667471651,1101,knqyf263,2021-07-11T12:08:16Z,done https://github.com/aquasecurity/trivy/pull/1101/commits/04902f44f293d1a134a812181a96688d5036fa39
667471710,1101,knqyf263,2021-07-11T12:08:44Z,done https://github.com/aquasecurity/trivy/pull/1101/commits/71541052a311494f41747b2345312d5c9d3b2117
667471739,1101,knqyf263,2021-07-11T12:08:49Z,done https://github.com/aquasecurity/trivy/pull/1101/commits/71541052a311494f41747b2345312d5c9d3b2117
862448633,2065,chen-keinan,2022-05-01T09:34:21Z,"```suggestion
		return errors.Errorf (""failed to instantiate trivik8s object : %w"", err)
```"
862458214,2065,chen-keinan,2022-05-01T11:03:00Z, `defer` in a loop might cause resource leak
862458831,2065,chen-keinan,2022-05-01T11:09:02Z,"```suggestion
	defer func() {
		err := os.RemoveAll(tmpdir)
		if err != nil {
			log.Logger.Errorf(""failed to delete folder %s:%w:"", tmpdir, err)
		}
	}()
```"
862477449,2065,chen-keinan,2022-05-01T13:45:56Z,"Maybe the logic for persisting files on fs should be done in `trivy-kubernetes`, shouldn't trivy accept only root file folder path  and walk it? "
862477609,2065,chen-keinan,2022-05-01T13:46:46Z,"we are calling k8s scan for each file path, shouldn't we call it once for folder path? "
862607748,2065,knqyf263,2022-05-02T06:10:07Z,"If there is no validation, we don't have to have `Init()`."
862609896,2065,knqyf263,2022-05-02T06:16:30Z,"Could you point to the existing commit in remote so that reviewers can run this PR easily? Like `go get -u github.com/aquasecurity/trivy-kubernetes@fcfb51c0e4ebb6941377f1a4e732de54a318847f`. After merging https://github.com/aquasecurity/trivy-kubernetes/pull/6, we will update go.mod again to point to the main branch. I don't mean you should not use `replace` directive. You can use `replace` in local, but it would be helpful if you use the actual commit when pushing commits to GitHub."
863937295,2065,knqyf263,2022-05-03T16:03:29Z,ioutil is deprecated
863953556,2065,josedonizetti,2022-05-03T16:22:13Z,"I can change the replace to point to my fork for now, as the branch exists on my fork I don't think go mod can pull it from the aquasecurity while the PR is not merged."
863958151,2065,knqyf263,2022-05-03T16:27:25Z,"Please try
```
replace github.com/aquasecurity/trivy-kubernetes =>  https://github.com/josedonizetti/trivy-kubernetes@ fcfb51c0e4ebb6941377f1a4e732de54a318847f
```"
868947758,2065,chen-keinan,2022-05-10T08:11:35Z,"This condition is redundant as there is a check already in `trivy-kubernetes` :
https://github.com/aquasecurity/trivy-kubernetes/blob/14575687ba8c20fc5281154b944f268e105637ab/pkg/trivyk8s/trivyk8s.go#L54"
868971373,2065,chen-keinan,2022-05-10T08:35:38Z,`file handle` remains open if it fails on `yaml.Marshal`
868972219,2065,chen-keinan,2022-05-10T08:36:21Z,`file handle` remains open if it fails on `file.Write`
868978647,2065,chen-keinan,2022-05-10T08:42:50Z,"Resource config file removal should be deferred right after its creation (L195)  , as if `k8sScan` fails, the file will remains on the disk"
869298921,2065,knqyf263,2022-05-10T14:17:54Z,This is an example. We don't have to put the entire JSON. Can we shorten it?
869524931,2065,knqyf263,2022-05-10T17:46:24Z,Any reason we don't support timeout?
869531891,2065,knqyf263,2022-05-10T17:54:58Z,"What do you think we put all k8s-related definitions into `pkg/k8s`? `Report` and `Writer` are much different from other artifacts. It makes it easy to find source code regarding K8s.

Another benefit is we can put CODEOWNERS in `pkg/k8s`, then you can do whatever you want under the directory.
https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-code-owners"
869539653,2065,knqyf263,2022-05-10T18:04:25Z,"This verb can be used only in 'fmt.Errorf' calls (%w).

```suggestion
			log.Logger.Errorf(""failed to delete temp file %s: %s"", fileName, err)
```"
869540875,2065,knqyf263,2022-05-10T18:05:58Z,"This `defer` should be put after the error handling. If it fails to create a temp file, it also fails to remove the file.
```suggestion
	if err != nil {
		return types.Report{}, xerrors.Errorf(""scan error: %w"", err)
	}
	defer func() {
		if err := os.Remove(fileName); err != nil {
			log.Logger.Errorf(""failed to delete temp file %s:%w:"", fileName, err)
		}
	}()
```"
870559536,2065,josedonizetti,2022-05-11T17:10:44Z,Yup. As we spoke we are doing it after getting this PR in.
870683673,2065,knqyf263,2022-05-11T19:40:11Z,Looks like PRs are already in the upstream (trivy-kubernetes). Do we still need the `replace`?
870685294,2065,knqyf263,2022-05-11T19:42:29Z,"I think ""scan kubernetes images and configurations"" or ""scan kubernetes vulnerabilities and misconfigurations"" are better since `image` is an artifact and `misconfigurations` is a security issue."
870687375,2065,knqyf263,2022-05-11T19:45:27Z,The version 0 looks weird. Is this because this feature is still experimental?
870688242,2065,knqyf263,2022-05-11T19:46:41Z,"Can we mention this is experimental here as below?
http://localhost:8000/trivy/docs/vulnerability/examples/filter/#by-open-policy-agent"
870692224,2065,knqyf263,2022-05-11T19:52:09Z,"Any reason this is a debug message? I understand the error will be included in the report, but I feel like we should notify it in terminal."
870693170,2065,knqyf263,2022-05-11T19:53:35Z,"Looks like this issue is remaining.
https://github.com/aquasecurity/trivy/pull/2065#discussion_r869539653"
870695707,2065,josedonizetti,2022-05-11T19:56:17Z,"Yes, I'm waiting for a last merge -> https://github.com/aquasecurity/trivy-kubernetes/pull/12"
870696255,2065,josedonizetti,2022-05-11T19:57:04Z,"That was the idea, but I can change it to 1 if you think it makes more sense."
870696428,2065,knqyf263,2022-05-11T19:57:17Z,"OK, let's wait for it then."
870697150,2065,knqyf263,2022-05-11T19:58:12Z,It is ok then. I agree the schema is not fixed yet. I'm sure we will fix the schema soon.
870700026,2065,josedonizetti,2022-05-11T20:02:05Z,"I asked a few friends to try it on their cluster with several resources (500-1000 resources), several resources were deployed with private images, and `trivy` was not configured to access the registry, the output becomes terrible, lots and lots of error logs, seems like everything is not working, and they cancelled the command, without waiting to generate a report , even to check at least the misconfigurations as the images were not reachable."
871002699,2065,knqyf263,2022-05-12T06:43:00Z,"Interesting. We probably should notify users if it is an authentication error like ""To scan private images, please consider setting appropriate credentials."" Let's keep it in our mind as a future enhancement."
871092188,2065,owenrumney,2022-05-12T08:25:27Z,"```suggestion
This feature might change without preserving backwards compatibility.
```"
871092465,2065,owenrumney,2022-05-12T08:25:46Z,"```suggestion
!!! :warning: ""EXPERIMENTAL""
```"
871093129,2065,owenrumney,2022-05-12T08:26:25Z,"```suggestion
Scan a specific namespace:
```"
871093649,2065,owenrumney,2022-05-12T08:26:56Z,"```suggestion
Trivy uses your local kubectl configuration to access the API server to list artifacts.
```"
871094283,2065,owenrumney,2022-05-12T08:27:33Z,"```suggestion
At this time, JSON is the only supported output and is intended to be used for automation, other reports will be implemented soon.
```"
871095436,2065,owenrumney,2022-05-12T08:28:34Z,"```suggestion
		Usage:   ""specify a namespace to scan"",
```"
871095945,2065,owenrumney,2022-05-12T08:29:03Z,Remove commented code and readd when required?
1673374571,7131,DmitriyLewen,2024-07-11T04:11:06Z,"I think we can omit this test.
I think we'll just ask contributors to add new licenses to the `tests`.

Can you remove this test and revert `Mapping` to `mapping`"
1673677586,7131,pbaumard,2024-07-11T09:09:37Z,"`mapping `is back to private.

I also removed additional ""+"", ""-only"" and ""-or-later"" suffixes from https://spdx.dev/learn/handling-license-info/"
1673692269,7131,DmitriyLewen,2024-07-11T09:19:58Z,"> mapping is back to private.

Thanks!

> I also removed additional ""+"", ""-only"" and ""-or-later"" suffixes from https://spdx.dev/learn/handling-license-info/

SPDX differentiates between `GPL-1.0-only` and `GPL-1.0-or-later` (see https://spdx.org/licenses/).
So I'm not sure we need to do this."
1673952511,7131,pbaumard,2024-07-11T12:46:09Z,"1. There is no change in behavior, for example `GPL-2.0-ONLY` and `GPL-2.0-OR-LATER` are already mapped to GPL20 in current trivy mapping
2. `GPL-1.0-only` and `GPL-1.0-or-later` are not in current [category.go](https://github.com/aquasecurity/trivy/blob/4dc507028ea75a8e1ed319b4df5d865e9e5d2b54/pkg/licensing/category.go), and it is probably not necessary to add them because of next point:
3. The main purpose of the normalization is to classify licenses into categories in [category.go](https://github.com/aquasecurity/trivy/blob/4dc507028ea75a8e1ed319b4df5d865e9e5d2b54/pkg/licensing/category.go). `GPL-1.0-only`, `GPL-1.0-or-later` and `GPL-1.0` would have the same category."
1675069355,7131,DmitriyLewen,2024-07-12T03:18:06Z,"Sorry, i missed that `licenseclassifier` uses same license for `GPL-2.0-ONLY` and `GPL-2.0-OR-LATER`. 
Thank you for the clarification!"
1675075638,7131,DmitriyLewen,2024-07-12T03:21:25Z,"let's add a new variable for the updated license name to avoid renaming the license if we don't find that license in the `mapping`
```suggestion
	license := strings.TrimSpace(name)
```

See https://github.com/aquasecurity/trivy/actions/runs/9888626513/job/27317191927?pr=7131#step:9:2387"
1675875705,7131,pbaumard,2024-07-12T13:14:53Z,"I also performed additional space and spelling normalizations and added many new mappings from [oss-review-toolkit](https://github.com/oss-review-toolkit/ort/tree/fc5389c2cfd9c8b009794c8a11f5c91321b7a730/utils/spdx/src/main/resources)

I need to fix integration tests."
1677271669,7131,DmitriyLewen,2024-07-15T02:48:26Z,"> I need to fix integration tests.

You can use `mage test:updateGolden` command."
1689473152,7131,DmitriyLewen,2024-07-24T09:44:39Z,can you add comment about this case?
1689473463,7131,DmitriyLewen,2024-07-24T09:44:49Z,same
1689477916,7131,DmitriyLewen,2024-07-24T09:48:01Z,"IIUC licenses are already normalized.
Do we need this?"
1689514703,7131,DmitriyLewen,2024-07-24T10:11:23Z,"Can we use this function here?
https://github.com/aquasecurity/trivy/blob/907683d5554ade0458d67180baeb5f51b2ba8de6/pkg/licensing/normalize.go#L735-L737"
1689516782,7131,DmitriyLewen,2024-07-24T10:12:56Z,I didn't find why we use `*-only` and `*-or-later` licenses here 
1689546604,7131,DmitriyLewen,2024-07-24T10:36:50Z,"We do not check all fields for OS packages:
https://github.com/aquasecurity/trivy/blob/051ac3901fee8136f54c6fc9b1a541240a44e8aa/pkg/fanal/test/integration/library_test.go#L321-L324

Therefore, there is no point in updating the OS packages for the files `pkg/fanal/test/integration/testdata/goldens/packages/*.json.golden`."
1690147476,7131,pbaumard,2024-07-24T16:56:12Z,I added a comment.
1690147917,7131,pbaumard,2024-07-24T16:56:32Z,I also added a comment.
1690151711,7131,pbaumard,2024-07-24T16:59:46Z,"The `license` from `normalizeKeyAndSuffix` is only used for the following assertion with the `panic` error.

I added some comemnts to make it more explicit.

The check could be made in unit test but it means having `mapping` public."
1690155105,7131,pbaumard,2024-07-24T17:02:32Z,"I removed the CycloneDX normalization from this PR to reduce the scope.

From [cycloneDX spec](https://github.com/CycloneDX/specification/blob/1.6/schema/bom-1.6.schema.json) that would ideally mean having :
- Id: ""A valid SPDX license ID""
- Name: ""If SPDX does not define the license used, this field may be used to provide the license name"","
1690157124,7131,pbaumard,2024-07-24T17:04:27Z,"This is explained in https://github.com/aquasecurity/trivy/blob/85b878105b23c8c03b7721667f1fe92fb438a2de/pkg/fanal/analyzer/pkg/dpkg/copyright_test.go#L69 where the `apt` copyright has both:

- License: GPLv2+ interpreted as GPL-2.0-or-later
- /usr/share/common-licenses/GPL-2 interpreted as GPL-2.0-only"
1690157389,7131,pbaumard,2024-07-24T17:04:40Z,I reverted those changes.
1690732621,7131,DmitriyLewen,2024-07-25T03:24:40Z,"I think I understand your idea - you want to check the newly added licenses (from another PR later).

I think we don't need to do this check every time we start Trivy.

> The test can be done in a unit test, but this means that the mapping will be public.

You have added so many licenses, so I am not sure that many licenses will be added later.
Maybe a comment before `mapping` to the instructions for the new licenses will be enough. wdyt?"
1690732943,7131,DmitriyLewen,2024-07-25T03:25:23Z,Got it! Thanks
1690785165,7131,DmitriyLewen,2024-07-25T04:33:58Z,"Sorry, I confused you a little.
`containerd` tests use full files.
I have updated these golden files in https://github.com/aquasecurity/trivy/pull/7131/commits/39f796ee60a4ce3cceddcea39e63ccad16074beb."
1690785882,7131,DmitriyLewen,2024-07-25T04:34:45Z,@pbaumard can you take a look?
1693338523,7131,pbaumard,2024-07-26T16:43:12Z,Fixed in latest commit.
1693342194,7131,pbaumard,2024-07-26T16:47:01Z,"Especially with latest commit with the version regular expression, it's becoming quite difficult to make sure to only add standardized keys.

I added an `InvalidMappingKeys` used in test and which might also be used later if adding new mappings from CLI or other mean becomes possible."
1698132425,7131,DmitriyLewen,2024-07-31T08:43:18Z,looks like we don't need this function anymore and we can just put everything in the map right away
1698170491,7131,DmitriyLewen,2024-07-31T09:06:52Z,"I'm not sure I understand where we need this.
Can you add an example in the comment?"
1698173097,7131,DmitriyLewen,2024-07-31T09:08:16Z,"```suggestion
	assert.Empty(t, licensing.InvalidMappingKeys(nil))
```"
1698178116,7131,DmitriyLewen,2024-07-31T09:11:17Z,"I think this is a redundant test.
We see this function working in `TestParseApkInfo`."
1698186399,7131,DmitriyLewen,2024-07-31T09:16:34Z,"What if we move this function to the test.
To get `mapping`, we can create a function like [GetBuiltinRules()](https://github.com/aquasecurity/trivy/blob/70245721372720027b7089bd61c693df48add865/pkg/fanal/secret/builtin-rules.go#L86-L88) for secrets."
1698190502,7131,DmitriyLewen,2024-07-31T09:19:08Z,"I tried to avoid using regex if possible.
Maybe we can avoid using this regex here"
1699888251,7131,pbaumard,2024-08-01T10:07:18Z,InvalidMappingKeys no more used in latest commit.
1699888746,7131,pbaumard,2024-08-01T10:07:44Z,TestLaxSplitLicense was moved to normalize_test in latest commit.
1699889829,7131,pbaumard,2024-08-01T10:08:33Z,normalize_test is now in package licensing to use internal mapping and functions.
1699900800,7131,pbaumard,2024-08-01T10:16:38Z,"The many version variations are in normalize_test.

Most of the mappings in current trivy version or in [oss-review-toolkit/ort](https://github.com/oss-review-toolkit/ort/blob/fc5389c2cfd9c8b009794c8a11f5c91321b7a730/utils/spdx/src/main/resources/declared-license-mapping.yml) are because of slight variations in the way the version is declared in the license.

So this regexp allows to:
1. greatly limit the number of mappings
2. avoid missing version mappings

This regexp is strict by checking only version suffixes."
1699958786,7131,pbaumard,2024-08-01T11:04:21Z,"Done in latest commit, even if I am not sure it is more readable that way."
1722843523,7131,DmitriyLewen,2024-08-20T07:44:00Z,"Can you add field names for better readability in these tests?
e.g.:
```suggestion
			licenses: []string{
				""Apache+"",
			},
			normalized:    ""Apache-2.0+"",
			normalizedKey: ""Apache-2.0"",
```"
1741052287,7131,pbaumard,2024-09-02T15:10:47Z,Field names have been added in last commit.
918865031,2490,DmitriyLewen,2022-07-12T11:36:15Z,"`pre-commit ` is developer helper, like `golangci-lint`.
I am not sure that we need to add instruction to docs. "
918867169,2490,DmitriyLewen,2022-07-12T11:39:11Z,"`Trivy` repository has many test files with vulnerabilities.
Scan result will always return exit code 1 for these files.
I think we can only select 1 file."
918933284,2490,mxab,2022-07-12T12:53:40Z,"Not sure if there is misunderstanding.
This does not scan the trivy repo itself. (`.pre-commit-hooks.yaml` is not the same as the `.pre-commit-config.yaml`)
It is the hook definition other users can reference in their pre-commit hook config for their repo.

One ""less opinionated"" way might be to drop the `.` and let user specify this in the users hook config in the `args` block when the reference the `trivyfs` hook


> I think we can only select 1 file.

Can you explain what you mean by that


"
918933337,2490,mxab,2022-07-12T12:53:44Z,"I thought as developer if I wanted to know on how to get started integrating trivy as a pre-commit hook I would look in the ""getting started / installation"" section"
919637146,2490,DmitriyLewen,2022-07-13T04:31:24Z,"Sorry for misleading you.
Yesterday I made a mistake with the logic of using `pre-commit`.
Thanks for help me understand.

"
919637269,2490,DmitriyLewen,2022-07-13T04:31:41Z,Now i understand. You're right. This is a good place for it.
919655668,2490,DmitriyLewen,2022-07-13T05:14:58Z,"Do we need this hook? I think users will only use `trivyfs` hook. What do you think?
P.S. I tried to use this hook but can't set `PATH` to `args`. I got  errors.
e.g.:
`FATAL   multiple targets cannot be specified` when:
```
    hooks:
    - id: trivy
      args:
        - fs
        - .
 ```
`FATAL   unknown command ""fs ."" for ""trivy""` when:
```
    hooks:
    - id: trivy
      args:
        - 'fs .'
```
"
919660559,2490,DmitriyLewen,2022-07-13T05:25:45Z,"what if we add information about the possibility of using [Trivy flags](https://aquasecurity.github.io/trivy/v0.29.2/docs/references/cli/fs/)?
for example:
```
      args:
        - --severity=CRITICAL
        - --skip-dirs=./test       
```"
919756075,2490,mxab,2022-07-13T07:46:13Z,"Yeah, I also misread something in the pre-commit docs, the reason why it works for the `trivyfs` hook but not the `trivy` one is that I configured `trivyfs` with [pass_filenames](https://pre-commit.com/#hooks-pass_filenames) `: false`

pre-commit per default will not check all the files but only the staged one, therefore I think you got the error `FATAL multiple targets cannot be specified` because pre-commit executed trivy like this:
`trivy fs . staged-file1.txt  staged-file2.txt`


I'll remove the ""plain hook"" for now as it makes only sense if you can execute a command allows the appending of multiple files to check"
921055595,2490,DmitriyLewen,2022-07-14T11:35:07Z,"```suggestion
You can use [trivy fs flags](../../docs/references/cli/fs/) to configure Trivy.
Insert the required flags in the `args` field.

```"
921057037,2490,DmitriyLewen,2022-07-14T11:36:55Z,I think it should be said that all flags work.
1728448015,7336,DmitriyLewen,2024-08-23T06:39:43Z,We need to add info when we use `CUSTOM License` in docs and `license Name`/`log message`
1728449415,7336,DmitriyLewen,2024-08-23T06:40:55Z,Add new field in `rpc` package.
1728452246,7336,DmitriyLewen,2024-08-23T06:43:25Z,"We use `file://` prefix in Python.
What if we create constants for these prefixes?"
1728453667,7336,DmitriyLewen,2024-08-23T06:44:47Z,We might want to add the first few words of the license text to the `name`.
1728500105,7336,afdesk,2024-08-23T07:23:12Z,"> We might want to add the first few words of the license text to the `name`.

if @knqyf263 agrees too, I'll add it.
I thought about filtering by `CUSTOM License`, but maybe it doesn't matter"
1730884092,7336,afdesk,2024-08-26T08:23:40Z,"done
"
1730884287,7336,afdesk,2024-08-26T08:23:49Z,I hope I done it
1730884865,7336,afdesk,2024-08-26T08:24:07Z,"@DmitriyLewen  ))
![изображение](https://github.com/user-attachments/assets/a2a75022-4b2c-4024-b145-7a213693a8e4)
"
1731078380,7336,DmitriyLewen,2024-08-26T11:02:40Z,looks like we can skip this change
1731096814,7336,afdesk,2024-08-26T11:20:13Z,this change results the versions of `protoc-gen-go` for `cache/` and `common` to the same version.  it was build automatically 
1731102208,7336,afdesk,2024-08-26T11:25:40Z,removed this update for this PR) 
1731109957,7336,DmitriyLewen,2024-08-26T11:32:48Z,"I thought about `CUSTOM License` again. This may not be clear to users.
What if we use the name `Incomparable License`/`Unmatched License`
This means that we can't compare license text with known Trivy licenses and therefore store license as text.
cc. @knqyf263 "
1741735478,7336,knqyf263,2024-09-03T09:26:23Z,"I saw some places calling them ""custom licenses"", so I don't think it's that bad.

>Custom licenses are strongly disfavored and should be used only in extraordinary circumstances. An Agency ought to adopt a license approved by the Open Source Initiative (OSI) at opensource.org. 

https://opensource.org/authority

>If you are using a license that hasn't been assigned an SPDX identifier, or if you are using a custom license, use a string value like this one:

https://docs.npmjs.com/cli/v10/configuring-npm/package-json#license

>Alternatively, you can use a LicenseRef- custom license identifier to refer to a license that is not on the SPDX License List, such as the following:

https://spdx.github.io/spdx-spec/v2.3/using-SPDX-short-identifiers-in-source-files/

Or ""non-standard"" or something like that.

`Incomparable License`/`Unmatched License` are also unclear what these did not match."
1743122000,7336,knqyf263,2024-09-04T06:05:47Z,"nit: Since this is ""DetectedLicense"", `Text` looks enough.

```suggestion
	Text string
```"
1743122111,7336,knqyf263,2024-09-04T06:05:53Z,ditto
1743353772,7336,afdesk,2024-09-04T09:05:25Z,done
1743353908,7336,afdesk,2024-09-04T09:05:30Z,done
1650330692,6993,DmitriyLewen,2024-06-24T04:51:57Z,"for beauty and sameness: maybe we can move this log to the ""Clear"" function (like for ""vuln-db"", ""java-db"" and ""checkBundle"")"
1650334045,6993,DmitriyLewen,2024-06-24T04:58:02Z,"```suggestion
			return xerrors.Errorf(""vuln db clean error: %w"", err)
```"
1650340528,6993,DmitriyLewen,2024-06-24T05:06:51Z,Perhaps we can mark this flag as `Removed`?
1650368366,6993,DmitriyLewen,2024-06-24T05:33:12Z,"What do you think about short name? 
```suggestion
	CleanAll = Flag[bool]{
		Name:       ""all"",
		ConfigName: ""clean.all"",
		Usage:      ""remove all caches"",
	}
```"
1650374283,6993,DmitriyLewen,2024-06-24T05:40:09Z,"We say about removing cache**s**. I think it is better to use `-all` flag here.
```suggestion
$ trivy clean --all
```"
1650374581,6993,DmitriyLewen,2024-06-24T05:40:36Z,"```suggestion
2024-06-21T21:58:21+04:00       INFO    Removing scan cache...
```"
1650374857,6993,DmitriyLewen,2024-06-24T05:41:01Z,"If you will use `-all` flag.
```suggestion
2024-06-21T21:58:21+04:00       INFO    Removing all caches...
```"
1650376355,6993,DmitriyLewen,2024-06-24T05:43:16Z,"We can use separate flags to remove DBs:
```suggestion
$ trivy clean --vuln-db --java-db
2024-06-24T11:42:31+06:00       INFO    Removing vulnerability database...
2024-06-24T11:42:31+06:00       INFO    Removing Java database...
```"
1650381999,6993,DmitriyLewen,2024-06-24T05:50:47Z,"I'm not sure I understand why this was necessary.
Would removing this break GitLab integration?"
1650411084,6993,knqyf263,2024-06-24T06:22:09Z,"Now, `--clear-cache` is actually just removing fanal cache (scan cashe) and not equivalent to `--all`. That's one of the reasons I want to delete `--clear-cache`."
1650412054,6993,knqyf263,2024-06-24T06:23:24Z,"Similar to https://github.com/aquasecurity/trivy/pull/6993#discussion_r1650411084, `--reset` is not just removing databases, but removing all caches now. It's equivalent to `--all`."
1650414824,6993,knqyf263,2024-06-24T06:26:14Z,"The cache is based on image ID and will not be used even when the same tag is used for different images, like the comment says. In other words, the comment is wrong and I believe we don't need `--clear-cache` here."
1650419223,6993,knqyf263,2024-06-24T06:31:14Z,Fixed in https://github.com/aquasecurity/trivy/pull/6993/commits/361db194a15948ccd9a94b676d85b17431ca168b
1650419449,6993,knqyf263,2024-06-24T06:31:31Z,"I also added `--all`.
https://github.com/aquasecurity/trivy/pull/6993/commits/361db194a15948ccd9a94b676d85b17431ca168b"
1650420363,6993,knqyf263,2024-06-24T06:32:36Z,What is your suggestion? `Suggested change` looks identical to me. Do you mean `-a` or something similar?
1650422488,6993,knqyf263,2024-06-24T06:34:45Z,It will be a breaking change as a command with `--light` will abort. I want to remove it separately. We probably need another announcement for the breaking change.
1650430010,6993,knqyf263,2024-06-24T06:41:46Z,"Agree. I think log messages are more of a user interface feature, so I moved them under `commands/clear`.
https://github.com/aquasecurity/trivy/pull/6993/commits/c394d83da6c882e57e854827faf3e6381fbaa096"
1650432123,6993,DmitriyLewen,2024-06-24T06:44:07Z,Got it!
1650437739,6993,DmitriyLewen,2024-06-24T06:48:20Z,"hm... looks like i saved suggestion incorrectly.

 > . Do you mean -a or something similar?

Yes. `-a` is usual shorthand for `--all` flag"
1650442880,6993,DmitriyLewen,2024-06-24T06:52:52Z,"> The cache is based on image ID and will not be used even when the same tag is used for different images, like the comment says

yeah. I know this, but I doubted correctness of comment.
Thanks that clarified this for me.
"
1650448625,6993,DmitriyLewen,2024-06-24T06:57:54Z,"right. But this is DB page.
I think  this page should say how to remove only DBs (instead of removing all caches)."
1650452814,6993,knqyf263,2024-06-24T07:01:14Z,Added https://github.com/aquasecurity/trivy/pull/6993/commits/ba53b672d65d191557f3a6a288d839fd3af550a7
1650454586,6993,knqyf263,2024-06-24T07:02:48Z,"Oh, yes. You're right. I just replaced the existing flag (`--reset`) with the equivalent one (`--all`), but we now have better flags to remove DBs. Thanks."
1650551153,6993,DmitriyLewen,2024-06-24T08:16:28Z,"Add new page to `mkdocs.yml`, please"
1650556998,6993,DmitriyLewen,2024-06-24T08:20:13Z,"nit:
```suggestion
	// '--clear-cache' (removed), '--download-db-only' (removed), '--download-java-db-only', '--reset' (removed),
```"
1650559947,6993,DmitriyLewen,2024-06-24T08:22:05Z,Looks like it should be before `reset` flag.
1650675420,6993,knqyf263,2024-06-24T09:29:18Z,Added https://github.com/aquasecurity/trivy/pull/6993/commits/b50895b9b5162b8372972338a5c6238e5e3f06f5
1650675866,6993,knqyf263,2024-06-24T09:29:39Z,Thanks. I was confused. Fixed in https://github.com/aquasecurity/trivy/pull/6993/commits/01f901c93fc30009d0b57ac28908b6aa0442885e
1650675995,6993,knqyf263,2024-06-24T09:29:44Z,Fixed in https://github.com/aquasecurity/trivy/pull/6993/commits/01f901c93fc30009d0b57ac28908b6aa0442885e
1764465601,7526,DmitriyLewen,2024-09-18T06:21:31Z,"just to make sure I understand correctly - `closed` is needed to check `github.event.pull_request.merged`?
https://github.com/aquasecurity/trivy/blob/ea1ba74603772aca11e1b9b853c1e7e4717be2aa/.github/workflows/publish-chart.yaml#L79"
1764483171,7526,DmitriyLewen,2024-09-18T06:38:16Z,"I think we need to say about `helm` in branch name, eg:
```suggestion
NEW_BRANCH=""ci/bump-helm-trivy-to-$VERSION""
```"
1764486203,7526,DmitriyLewen,2024-09-18T06:41:06Z,"Can we add a comment about this case?
IIUC this work will be started after pushing a new tag, right?"
1764486720,7526,DmitriyLewen,2024-09-18T06:41:38Z,"Will be great to add comments for other jobs.
this will make it easier to understand this workflow"
1764598161,7526,afdesk,2024-09-18T08:10:47Z,"> just to make sure I understand correctly - `closed` is needed to check `github.event.pull_request.merged`?
> 
> https://github.com/aquasecurity/trivy/blob/ea1ba74603772aca11e1b9b853c1e7e4717be2aa/.github/workflows/publish-chart.yaml#L79

yes, I keep the default types and add `closed` for PR merged"
1764615213,7526,afdesk,2024-09-18T08:23:06Z,done [09b27ec](https://github.com/aquasecurity/trivy/pull/7526/commits/09b27ec355bc2a78775216ff4c7069efe13a6702)
1764615797,7526,afdesk,2024-09-18T08:23:31Z,done [5023312](https://github.com/aquasecurity/trivy/pull/7526/commits/5023312fdf5e3fa97ac5bd17d2760bd8d77b57e9)
1805881744,7526,DmitriyLewen,2024-10-18T05:28:43Z,"What do you think about using https://github.com/aquasecurity/go-version/blob/main/pkg/semver/version.go?
you can get [minor and patch parts](https://github.com/aquasecurity/go-version/blob/cf8a8d29271d2ecb1495127879994507b75099f0/pkg/semver/version.go#L172-L180)
also you can [increment version part](https://github.com/aquasecurity/go-version/blob/cf8a8d29271d2ecb1495127879994507b75099f0/pkg/semver/version.go#L122-L139) "
1805882991,7526,DmitriyLewen,2024-10-18T05:30:39Z,"nit:
```suggestion
	yamlData := map[string]interface{}{}
```"
1805884457,7526,DmitriyLewen,2024-10-18T05:32:53Z,"It seems like overwriting the versions in `jsonData` and writing this yaml would be more reliable.
wdyt?"
1805886332,7526,DmitriyLewen,2024-10-18T05:35:34Z,It might make sense to write about change in `helm` version as well.
1805888348,7526,DmitriyLewen,2024-10-18T05:38:11Z,"`version` and `appVersion` are default fields - https://helm.sh/docs/topics/charts/#the-chartyaml-file
let's create struct. something like that:
```
type chart struct {
	version    string
	appVersion string
}
```"
1805891682,7526,DmitriyLewen,2024-10-18T05:42:47Z,"I may be wrong, but I remember that the events for merging a PR by default and merging using `merge queue` may be different. 
Does this work correctly?"
1810000231,7526,afdesk,2024-10-22T06:02:25Z,done https://github.com/aquasecurity/trivy/pull/7526/commits/5a43735fabd3d5b22cff4f3b6923ebb72edb9e8e
1810000668,7526,afdesk,2024-10-22T06:02:55Z,"> nit:

done https://github.com/aquasecurity/trivy/pull/7526/commits/5a43735fabd3d5b22cff4f3b6923ebb72edb9e8e"
1810036710,7526,afdesk,2024-10-22T06:38:32Z,done https://github.com/aquasecurity/trivy/pull/7526/commits/1e4b16cb756eaaff325c0fa90e81283d81300a32
1810247129,7526,afdesk,2024-10-22T08:39:13Z,"> `version` and `appVersion` are default fields - https://helm.sh/docs/topics/charts/#the-chartyaml-file let's create struct. something like that:
> 
> ```
> type chart struct {
> 	version    string
> 	appVersion string
> }
> ```

added https://github.com/aquasecurity/trivy/pull/7526/commits/8d5a183e0c3e9a7ae247e8b9877f660d7a8b3639"
1810292777,7526,afdesk,2024-10-22T09:02:04Z,"I tried several ways to overwriting `Chart.yaml`. 
Martshaling/Unmarshaling doesn't allow to keep order of unknown fields.
If we create a custom struct we can miss something in the future.

using a specific library (https://pkg.go.dev/helm.sh/helm/v3/pkg/chart) doesn't allow to save only `Chart.yaml`, it creates all helm files.

so `sed` is the simplest way to update the yaml file.
wdyt?"
1810467204,7526,DmitriyLewen,2024-10-22T10:33:56Z,"Thanks for checking this out.
Then let's use `sed`, I don't mind 👍"
1811205774,7526,afdesk,2024-10-22T18:35:05Z,"yep, it works: https://github.com/aquasecurity/trivy-test/actions/runs/11459077665/job/31882927605
for the simplest job: https://github.com/aquasecurity/trivy-test/pull/18/files"
1811866365,7526,DmitriyLewen,2024-10-23T05:13:23Z,"Just for info:
You can use `t.TempDir()` to avoid having to do `defer os.Remove(tempFile.Name())`."
1811869348,7526,DmitriyLewen,2024-10-23T05:14:06Z,"`ioutil` is deprecated - https://pkg.go.dev/io/ioutil
use `os.WriteFile`"
1811878575,7526,DmitriyLewen,2024-10-23T05:18:46Z,Should helm tests be started if this workflow has been changed?
1811882551,7526,DmitriyLewen,2024-10-23T05:21:31Z,I don't think we need to start testing if the PR has been merged.
1811886043,7526,DmitriyLewen,2024-10-23T05:23:48Z,"ubuntu-24.04 is currently `latest` version of `ubuntu` runner.
Can we bump runner version (maybe in another PR)"
1814186768,7526,afdesk,2024-10-24T03:29:10Z,done https://github.com/aquasecurity/trivy/pull/7526/commits/f309ab182ba4fae53c0801d81634df88f8909d6b
1814187511,7526,afdesk,2024-10-24T03:30:37Z,done https://github.com/aquasecurity/trivy/pull/7526/commits/adbfad31578931c5aa330a3d76f594442c6f4da4
1814189960,7526,afdesk,2024-10-24T03:35:11Z,"I thought that yes.
Trivy Helm chart depends on Trivy image with a specific tag. If this image is removed, we shouldn't publish a new chart.
Does it wrong point?"
1814194186,7526,afdesk,2024-10-24T03:40:34Z,"done https://github.com/aquasecurity/trivy/pull/7526/commits/649987e42e78d12af52eacfa65272e8b73fa64c7
I've updated it here, because another actions already are bumped os version up (or using `-latest`)."
1814244028,7526,afdesk,2024-10-24T04:49:03Z,I'm unsure about it. in any case we can see the result for created PR.
1814489243,7526,DmitriyLewen,2024-10-24T08:08:48Z,"hm... i forgot about this case.
Thanks for reminding me!"
1308799708,5062,knqyf263,2023-08-29T13:13:03Z,"SPDX mixes multiple types. In the example below, tye type of `elasticsearch` is `bitnami`, while the type of `apm-agent` is `maven`. If we force it to `bitnami`, it will not detect vulnerabilities in the Java dependencies.

```
$ docker run --rm bitnami/elasticsearch cat /opt/bitnami/elasticsearch/.spdx-
[
  {
    ""SPDXID"": ""SPDXRef-elasticsearch"",
    ""name"": ""Elasticsearch"",
    ""versionInfo"": ""8.9.1"",
    ""downloadLocation"": ""https://github.com/elastic/elasticsearch/archive/v8.9.1.tar.gz"",
    ""licenseConcluded"": ""Elastic-2.0"",
    ""licenseDeclared"": ""Elastic-2.0"",
    ""filesAnalyzed"": false,
    ""externalRefs"": [
      {
        ""referenceCategory"": ""SECURITY"",
        ""referenceType"": ""cpe23Type"",
        ""referenceLocator"": ""cpe:2.3:*:elastic:elasticsearch:8.9.1:*:*:*:*:*:*:*""
      },
      {
        ""referenceCategory"": ""PACKAGE_MANAGER"",
        ""referenceType"": ""purl"",
        ""referenceLocator"": ""pkg:bitnami/elasticsearch@8.9.1?arch=arm64""
      }
    ],
    ""copyrightText"": ""NOASSERTION""
  },
  {
    ""name"": ""co.elastic.apm:apm-agent"",
    ""SPDXID"": ""SPDXRef-Package-f0db45781e6813a1"",
    ""versionInfo"": ""1.36.0"",
    ""supplier"": ""NOASSERTION"",
    ""downloadLocation"": ""NONE"",
    ""licenseConcluded"": ""NONE"",
    ""licenseDeclared"": ""NONE"",
    ""copyrightText"": ""NOASSERTION"",
    ""externalRefs"": [
      {
        ""referenceCategory"": ""PACKAGE_MANAGER"",
        ""referenceType"": ""purl"",
        ""referenceLocator"": ""pkg:maven/co.elastic.apm/apm-agent@1.36.0""
      }
    ],
    ""filesAnalyzed"": false
  }
]
```

The easiest approach is splitting an application into two applications, `bitnami` and other types. I'm thinking about where and how we should do that.
"
1308889950,5062,juan131,2023-08-29T14:13:37Z,"We're just forcing it for the main application, right? I mean, we're not overwriting the type for all the associated libraries."
1309770274,5062,knqyf263,2023-08-30T06:52:48Z,"No, it overwrites all packages included in SPDX besides the main package like elasticsearch.
![image](https://github.com/aquasecurity/trivy/assets/2253692/0b914c9f-b498-4090-b0b9-033327ba4b80)
"
1310027602,5062,juan131,2023-08-30T10:06:47Z,"I see.. To be honest I don't know how we should parse relationships such as these ones...
```json
  ""packages"": [
    {
      ""name"": ""Elasticsearch"",
      ""SPDXID"": ""SPDXRef-elasticsearch"",
      (...)
    },
    {
      ""name"": ""jar"",
      ""SPDXID"": ""SPDXRef-Application-150e605f5f17224d"",
      (...)
    },
    {
      ""name"": ""co.elastic.apm:apm-agent"",
      ""SPDXID"": ""SPDXRef-Package-f0db45781e6813a1"",
      (...)
    }
    (...)
  ],
  ""relationships"": [
    {
      ""spdxElementId"": ""SPDXRef-elasticsearch"",
      ""relationshipType"": ""CONTAINS"",
      ""relatedSpdxElement"": ""SPDXRef-Application-150e605f5f17224d""
    },
    {
      ""spdxElementId"": ""SPDXRef-Application-150e605f5f17224d"",
      ""relatedSpdxElement"": ""SPDXRef-Package-f0db45781e6813a1"",
      ""relationshipType"": ""CONTAINS""
    },
  ]
```
... where it basically says ""_elasticsearch_ contains _jar_ which contains _co.elastic.apm:apm-agent_"".

- Should we consider both _elasticsearch_ & _jar_ applications?
- Should we _jar_ a library package of _elasticsearch_?
- Is _co.elastic.apm:apm-agent_ a library package of _elasticsearch_ or _jar_?"
1310464588,5062,knqyf263,2023-08-30T15:32:43Z,">Should we consider both elasticsearch & jar applications?

Yes, the bitnami package and the Java packages are different from the PURL perspective.

I opened a PR. Could you take a look? It works in my local environment. If you don't mind I can directly push the commits to your branch.
https://github.com/juan131/trivy/pull/1
"
1311141663,5062,juan131,2023-08-31T06:16:04Z,"Thanks so much! I just merged! I'll continue my work based on that, I really appreciate it"
1311292800,5062,DmitriyLewen,2023-08-31T08:38:01Z,Looks like we can remove that.
1311295376,5062,DmitriyLewen,2023-08-31T08:40:09Z,"```suggestion
	// SPDX files are located under the /opt/bitnami/<component> directory
```"
1311297737,5062,DmitriyLewen,2023-08-31T08:42:03Z,What if we move this into [Anazyle function](https://github.com/aquasecurity/trivy/blob/aa4f0f8aebd91f0a3d51beb5b83cd4ef25bee051/pkg/fanal/analyzer/sbom/sbom.go#L72)
1311313453,5062,DmitriyLewen,2023-08-31T08:54:10Z,"We [skip](https://github.com/aquasecurity/trivy/blob/aa4f0f8aebd91f0a3d51beb5b83cd4ef25bee051/pkg/sbom/spdx/unmarshal.go#L120-L122) `root package => application` case. But looks like we also need to remove tihs `Application` from `orphanPkgs`.
Correct me, if i have missed something."
1311339790,5062,juan131,2023-08-31T09:14:09Z,done at https://github.com/aquasecurity/trivy/pull/5062/commits/8b8efacb47dce40701e54f03c6d8e5a5891b6350
1311341243,5062,juan131,2023-08-31T09:15:20Z,No cons on my side
1311341317,5062,juan131,2023-08-31T09:15:23Z,@knqyf263 could you address this?
1311345270,5062,knqyf263,2023-08-31T09:18:35Z,"Sure, I'll take care."
1311379992,5062,DmitriyLewen,2023-08-31T09:46:42Z,"@knqyf263 we use `createPackageSPDXIdentifierMap` function 2 times:
- https://github.com/aquasecurity/trivy/blob/8b8efacb47dce40701e54f03c6d8e5a5891b6350/pkg/sbom/spdx/unmarshal.go#L74
- https://github.com/aquasecurity/trivy/blob/8b8efacb47dce40701e54f03c6d8e5a5891b6350/pkg/sbom/spdx/unmarshal.go#L78

maybe we can only use `packageSPDXIdentifierMap`."
1311431593,5062,knqyf263,2023-08-31T10:30:59Z,"They are for different purposes. We need to hold a whole mapping between SPDX ids and packages since the same SPDX id appears repeatedly, while orphan packages will be deleted gradually. Any ideas on merging them?"
1311439551,5062,knqyf263,2023-08-31T10:39:00Z,"The analysis result is sorted later, so we don't have to do that in each analyzer.
https://github.com/aquasecurity/trivy/blob/aa4f0f8aebd91f0a3d51beb5b83cd4ef25bee051/pkg/fanal/artifact/image/image.go#L315-L316

But then I just remember we could use `Sort()`. Fixed in https://github.com/aquasecurity/trivy/pull/5062/commits/404cb55b19149eb6fb9e95cc178ea7d42a67ef22."
1311442682,5062,knqyf263,2023-08-31T10:42:16Z,I've removed `Application` only when it has dependencies. https://github.com/aquasecurity/trivy/pull/5062/commits/1fc886d215ea2ff23848eb7edcfb4c331d540b54
1311445492,5062,DmitriyLewen,2023-08-31T10:45:13Z,oh... right. We need list of all SPDX IDs. Sorry for confusing.
1311511353,5062,knqyf263,2023-08-31T11:49:24Z,"We need file paths. Otherwise, users cannot understand where the package comes from. I remember the Bitnami SBOM used to include file paths. @juan131 Any reasons for removing file paths from SBOM?"
1311612499,5062,knqyf263,2023-08-31T13:15:18Z,"I've set the component path. It is much better than empty. We can talk about it later.
https://github.com/aquasecurity/trivy/pull/5062/commits/ffe9c42472feee3dff5e77ba38fe5d31a451ae5a"
1311699709,5062,juan131,2023-08-31T14:11:29Z,"@knqyf263 it seems the main reason why we removed the `packages[].files[]` array is that we found issues validating the generated SPDX files using the SPDX validator below:

- https://tools.spdx.org/app/validate

The error was:

```
The following warning(s) were raised: [object instance has properties which are not allowed by the schema: [""files""] for {""pointer"":""/packages/1""}, object instance has properties which are not allowed by the schema: [""files""] for {""pointer"":""/packages/2""}]
```

I'm trying to figure out why we were including the files information under `packages[].files[]` instead of `files[]` as it is done in this official example:

- https://github.com/spdx/spdx-spec/blob/development/v2.3.1/examples/SPDXJSONExample-v2.3.spdx.json

I'll let you know when I collect more information."
1311701586,5062,juan131,2023-08-31T14:12:48Z,Apparently this is sth that was already discussed at https://github.com/aquasecurity/trivy/discussions/4507
1311707990,5062,juan131,2023-08-31T14:17:23Z,"Why this continue? I mean, why not iterating through `app.Libraries` when type is `bitnami`?"
1311732198,5062,knqyf263,2023-08-31T14:34:45Z,"Yes, SPDX added a breaking change, and we fixed that. Thus, I think you can include files in SPDX.
https://github.com/aquasecurity/trivy/pull/4058
https://github.com/aquasecurity/trivy/pull/4513"
1311754093,5062,juan131,2023-08-31T14:49:47Z,"Yes, after the fix we continued facing issues with the validator. It complained about `filesAnalyzed` being set to `true` while missing the package verification code:
```
The following warning(s) were raised: [Relationship error: Relationship error: Relationship error: Missing required package verification code for package co.elastic.apm:apm-agent in jar in jar in Elasticsearch in Elasticsearch in SPDX document for Elasticsearch 8.9.1]
```

See:

- https://spdx.github.io/spdx-spec/v2.3/package-information/#79-package-verification-code-field
- https://github.com/spdx/tools-golang/blob/main/utils/verification.go#L19

And.. if we force `filesAnalyzed` to `false` we find the error below:

```
The following warning(s) were raised: [Relationship error: Relationship error: Relationship error: Warning: Found analyzed files for package co.elastic.apm:apm-agent when analyzedFiles is set to false. in jar in jar in Elasticsearch in Elasticsearch in SPDX document for Elasticsearch 8.9.1]
```

Spec: https://spdx.github.io/spdx-spec/v2.3/package-information/#78-files-analyzed-field"
1311785223,5062,juan131,2023-08-31T15:10:00Z,"If you apply these changes to the `elasticsearch.spdx.json`, you'll have a SPDX file that's considered valid by https://tools.spdx.org/app/validate:
```diff
b/pkg/fanal/analyzer/sbom/testdata/elasticsearch.spdx.json
index 155d7de9..466af572 100644
--- a/pkg/fanal/analyzer/sbom/testdata/elasticsearch.spdx.json
+++ b/pkg/fanal/analyzer/sbom/testdata/elasticsearch.spdx.json
@@ -62,7 +62,13 @@
           ""referenceLocator"": ""pkg:maven/co.elastic.apm/apm-agent@1.36.0""
         }
       ],
-      ""filesAnalyzed"": false
+      ""filesAnalyzed"": true,
+      ""hasFiles"": [
+        ""SPDXRef-File-51bb5f929ef68877""
+      ],
+      ""packageVerificationCode"" : {
+        ""packageVerificationCodeValue"" : ""ac924b375119c81c1f08c3e2722044bfbbdcd3dc""
+      }
     },
     {
       ""name"": ""co.elastic.apm:apm-agent-cached-lookup-key"",
@@ -119,7 +125,20 @@
       ""filesAnalyzed"": false
     }
   ],
-  ""files"": [],
+  ""files"": [
+    {
+      ""fileName"":""modules/apm/elastic-apm-agent-1.36.0.jar"",
+      ""SPDXID"": ""SPDXRef-File-51bb5f929ef68877"",
+      ""checksums"": [
+        {
+          ""algorithm"": ""SHA1"",
+          ""checksumValue"": ""d2a9ad9b159eb650d25add9395c4f4198f200066""
+        }
+      ],
+      ""copyrightText"": ""foo"",
+      ""licenseConcluded"": ""NONE""
+    }
+  ],
   ""relationships"": [
     {
       ""spdxElementId"": ""SPDXRef-elasticsearch"",
```

> Note: These values aren't valid ones (I just added random values that work): `SPDXRef-File-51bb5f929ef68877`, `ac924b375119c81c1f08c3e2722044bfbbdcd3dc` or `d2a9ad9b159eb650d25add9395c4f4198f200066`"
1311828269,5062,knqyf263,2023-08-31T15:38:16Z,"Added a comment.
https://github.com/aquasecurity/trivy/pull/5062/commits/1f68bd51cd6472d7b0d0fddd8d2651c5869091b7

`Application` in Trivy represents a group of packages, such as package-lock.json, like a project. It doesn't make sense to set file paths to all the packages in package-lock.json. Bitnami SPDX aggregates packages and doesn't have the respective file paths now. Then, we just set file paths to the application level.

However, artifacts like JAR files are located in the image separately. They all have different file paths, and those file paths are set to `Application.Libraries[].FilePath` in Trivy.

In short,

- Application.FilePath: a file path for aggregated packages
- Application.Libraries[].FilePath: a file path for artifacts

Ideally, we should determine that from `Application.Type`, but I put that in our backlog. I know the design is not straightforward now, so I'm planning to refactor it.

It is in its early stages. We can improve this feature step by step."
1311833784,5062,knqyf263,2023-08-31T15:42:16Z,Thanks for the information. We'll look into it.
1312521092,5062,knqyf263,2023-09-01T04:18:45Z,"@DmitriyLewen Can you please take a look? If we confirm the problem, we should create an issue and fix it."
1312584601,5062,DmitriyLewen,2023-09-01T05:29:48Z,"I checked our implementation:
we don't use `filesAnalyzed` (always `false`) and `packageVerificationCode` fields.
We add files to [Files](https://spdx.github.io/spdx-spec/v2.3/file-information/) and use them in [relationships](https://spdx.github.io/spdx-spec/v2.3/relationships-between-SPDX-elements/).
That is why we have valid format.

But perhaps it looks more correct to use `fileAnalyzed`. Perhaps we need to consider using this field."
1312628585,5062,knqyf263,2023-09-01T06:35:26Z,">Yes, after the fix we continued facing issues with the validator.

@juan131 Our SPDX is valid. I guess you build SBOM on top of our SBOM, right?"
1312953979,5062,juan131,2023-09-01T12:16:31Z,"> Our SPDX is valid

We obtain warnings in the [SPDX validator](https://tools.spdx.org/app/validate/) such as the ones below with your SPDX:

```
Missing required package verification code for package XXX in YYY
(...)
Invalid license id 'Artistic'. Must start with 'LicenseRef-' and made up of the characters from the set 'a'-'z', 'A'-'Z', '0'-'9', '+', '_', '.', and '-'
```

> I guess you build SBOM on top of our SBOM, right?

Yes, we use your SBOM to build our SPDX files."
1502164957,6176,DmitriyLewen,2024-02-26T07:53:53Z,"nit:
table has `Plan JSON` -> `Plan Snapshot` order.
But below `Plan Snapshot` -> `Plan JSON` order.

it's a little difficult to read"
1502168097,6176,DmitriyLewen,2024-02-26T07:56:26Z,This is broken link.
1502171493,6176,DmitriyLewen,2024-02-26T07:58:49Z,"We have similar info in `coverage/iac/terraform/`.
Maybe we can just add link here?"
1502213991,6176,DmitriyLewen,2024-02-26T08:33:45Z,"Correct me if i am wrong.
```suggestion
		if err := os.RemoveAll(path); err != nil && !errors.Is(err, os.ErrNotExist) {
```"
1502218397,6176,DmitriyLewen,2024-02-26T08:37:32Z,"IIUC this function is needed to re-generate tfplan files.
Can you add a comment on this?

This will make this code easier to maintain"
1502269309,6176,nikpivkin,2024-02-26T09:16:06Z,"That's right, I couldn't find the link to which it should be changed to"
1502307734,6176,DmitriyLewen,2024-02-26T09:43:46Z,"I was sure we had moved them.
But it seems I am wrong - https://github.com/aquasecurity/trivy/pull/3977#discussion_r1187979724

@knqyf263 Do you remember why we removed these examples? Perhaps defsec (or another repo) contains these examples?"
1503672143,6176,simar7,2024-02-27T05:50:25Z,"Is it easier if we simply parse the input within Trivy and decide if the user has passed in a Plan JSON or a Plan Snapshot?

 I feel having to know which kind of Terraform Plan scanner to use is a little overwhelming for the user as compared to just  ""scanning the plan"" and letting Trivy decide what the input is.

Another example would be: today we scan terraform, without the user telling us if it's HCL v1 or v2.

WDYT?"
1503674958,6176,simar7,2024-02-27T05:54:41Z,"I wasn't able to run this target. See below for details:

```shell
Error: failed to generate Terraform Plan: failed to run Plan cmd: exit status 1

Error: Invalid provider configuration

Provider ""registry.terraform.io/hashicorp/aws"" requires explicit
configuration. Add a provider block to the root module and configure the
provider's required arguments as described in the provider documentation.


Error: No valid credential sources found

  with provider[""registry.terraform.io/hashicorp/aws""],
  on <empty> line 0:
  (source code not available)

Please see https://registry.terraform.io/providers/hashicorp/aws
for more information about providing credentials.

Error: failed to refresh cached credentials, no EC2 IMDS role found,
operation error ec2imds: GetMetadata, exceeded maximum number of attempts, 3,
request send failed, Get
""http://169.254.169.254/latest/meta-data/iam/security-credentials/"": dial tcp
169.254.169.254:80: connect: host is down

```"
1503700173,6176,simar7,2024-02-27T06:26:44Z,"It seems we need to know the size as `zip.NewReader` expects it, what if we use [`NewReadSeekerAt()`](https://github.com/aquasecurity/trivy/blob/main/pkg/x/io/io.go#L20)  and get the size via something like the following?

```suggestion
       size, _ := io.Copy(io.Discard, r)
	f, _ := iox.NewReadSeekerAt(r)
	zr, err := zip.NewReader(f, size)
	if err != nil {
		return false
	}
```


Just trying to see if we can avoid reading the entire plan snapshot into memory."
1503717871,6176,simar7,2024-02-27T06:48:55Z,Another idea is if we can write a new function that like the `NewReadSeekerAt()` but also returns the size as well. 
1504533119,6176,nikpivkin,2024-02-27T16:10:09Z,"[NewReadSeekerAt](https://github.com/aquasecurity/trivy/blob/main/pkg/x/io/io.go#L20) copies the data from `io.Reader` to a buffer, so there is no way to avoid reading the file completely, or am I wrong?"
1504537176,6176,nikpivkin,2024-02-27T16:12:32Z,"Trivy automatically detects the type of configuration, so the user does not need to worry about selecting the type of scanner. This page describes the Trivy coverage."
1504548240,6176,nikpivkin,2024-02-27T16:19:22Z,Done https://github.com/aquasecurity/trivy/pull/6176/commits/ef8e82bf7df53daf82c6fab935dae38584413b42
1504550139,6176,nikpivkin,2024-02-27T16:20:07Z,I've updated the link to `coverage`. https://github.com/aquasecurity/trivy/pull/6176/commits/ef8e82bf7df53daf82c6fab935dae38584413b42
1504553854,6176,nikpivkin,2024-02-27T16:21:36Z,"Thank you, fixed https://github.com/aquasecurity/trivy/pull/6176/commits/5722384658fb0ff995ad4fb68267aa0a0651da26"
1504556651,6176,nikpivkin,2024-02-27T16:23:15Z,@simar7 I have AWS set to localstack by default. Fixed it https://github.com/aquasecurity/trivy/pull/6176/commits/5722384658fb0ff995ad4fb68267aa0a0651da26
1504673197,6176,nikpivkin,2024-02-27T17:24:48Z,Done https://github.com/aquasecurity/trivy/commit/ef8e82bf7df53daf82c6fab935dae38584413b42
1505234552,6176,simar7,2024-02-28T01:56:42Z,"It's a little better in my testing:

```shell
$ benchstat old.txt new.txt                                
goos: darwin
goarch: arm64
pkg: github.com/simar7/readseekr-bench
          │   old.txt   │              new.txt               │
          │   sec/op    │   sec/op     vs base               │
Normal-10   8.700µ ± 3%   8.311µ ± 5%  -4.47% (p=0.009 n=10)

          │   old.txt    │               new.txt                │
          │     B/op     │     B/op      vs base                │
Normal-10   9.039Ki ± 0%   6.256Ki ± 0%  -30.79% (p=0.000 n=10)

          │  old.txt   │              new.txt               │
          │ allocs/op  │ allocs/op   vs base                │
Normal-10   25.00 ± 0%   21.00 ± 0%  -16.00% (p=0.000 n=10)
```

You can find the results and the benchmark here: https://github.com/simar7/zip-reader-bench"
1505307375,6176,simar7,2024-02-28T03:27:49Z,Sorry I misread this. It makes sense now.
1505518591,6176,DmitriyLewen,2024-02-28T08:08:38Z,"You don't disable `RYUK` for this test now. 
Is this expected?
"
1505522526,6176,DmitriyLewen,2024-02-28T08:12:10Z,I'm not sure: do we need to return `AWS_ENDPOINT_URL` value after this function completes?
1505525845,6176,DmitriyLewen,2024-02-28T08:15:16Z,What if we take this outside of the function?
1505543786,6176,nikpivkin,2024-02-28T08:30:29Z,Environment variable values are valid only within the current process and are not saved after the process is terminated
1505552031,6176,nikpivkin,2024-02-28T08:36:46Z,I don't think this list will be used outside of this function
1505653024,6176,DmitriyLewen,2024-02-28T09:41:59Z,hm... I didn't check this. Thanks for new information for me 😄
1505654213,6176,nikpivkin,2024-02-28T09:42:35Z,Fixed https://github.com/aquasecurity/trivy/pull/6176/commits/686d2275aa9c72248587ba16475f6121abbaaa39
1505678721,6176,nikpivkin,2024-02-28T09:57:12Z,Thanks for the research!  I found an even more effective way https://github.com/aquasecurity/trivy/pull/6176/commits/557177b20a8aacc96a7e2b9e38ad8075389cbf0d
1506901886,6176,simar7,2024-02-29T01:58:01Z,"can we rename this to tfjson to avoid confusion with the stdlib package?
```suggestion
package tfjson
```"
1506934388,6176,simar7,2024-02-29T02:59:42Z,"how about reusing `dir` and `name` vars to reduce test code, since they are called the same anyway. "
1507088111,6176,nikpivkin,2024-02-29T06:47:07Z,Wouldn't this cause confusion with the JSON configuration syntax? https://developer.hashicorp.com/terraform/language/syntax/json
1507282427,6176,nikpivkin,2024-02-29T09:37:02Z,"Checking the path of a remote module is not reliable, as the result may depend on the order in which the tests are executed. If the module is not in the cache, the path is a reference to the git, otherwise the path to the module is in the cache."
1509554546,6176,simar7,2024-03-01T21:22:52Z,"I wasn't able to make this test fail, is it flaky? Is there any way to test without the effects of the cache?"
1510860391,6176,nikpivkin,2024-03-04T09:31:59Z,"1. clear the cache `rm -rf $TMPDIR/.aqua`.
2. comment out the first two test cases so that the test with the remote module is the first.
3. run test:
```bash
Error:      Not equal: 
            expected: ""terraform-aws-modules/s3-bucket/aws/main.tf""
            actual  : ""git::https:/github.com/terraform-aws-modules/terraform-aws-s3-bucket?ref=3a1c80b29fdf8fc682d2749456ec36ecbaf4ce14/main.tf""
```"
1510863181,6176,nikpivkin,2024-03-04T09:33:48Z,"Since only the remote module is used in this test case, we only need to verify that the check detected misconfig. I'll update the test"
1510872667,6176,nikpivkin,2024-03-04T09:39:14Z,"I created an issue in defsec asking to add the ability to skip cache to avoid fluky tests, but the issues are now closed. Can we move this issue to Trivy?"
1510890224,6176,nikpivkin,2024-03-04T09:51:20Z,done
1510890641,6176,nikpivkin,2024-03-04T09:51:39Z,fixed https://github.com/aquasecurity/trivy/pull/6176/commits/dd0d5685aea1f89354d27e7ed8d2cae7354ef36e
1511857379,6176,simar7,2024-03-04T22:05:46Z,"> I created an issue in defsec asking to add the ability to skip cache to avoid fluky tests, but the issues are now closed. Can we move this issue to Trivy?

Yes please, if it's a small change you can just make a PR without the need to track with an issue. "
286617045,50,DanCech,2019-05-22T18:03:44Z,"Rather than relying on the global in utils, would it make sense to define a `ScanOptions` struct that could include the vuln types (for now, maybe more options later) and pass that as a parameter to `scanner.ScanImage` and `library.Scan`?"
286800910,50,Mallear,2019-05-23T06:59:40Z,I moved vulnType var and related functions in `pkg/types/scanoptions.go` file
290612276,50,knqyf263,2019-06-05T07:36:59Z,"This space is necessary for new line in markdown.
"
290612377,50,knqyf263,2019-06-05T07:37:20Z,Same as above
290625149,50,knqyf263,2019-06-05T08:14:48Z,"This doesn't make much sense. It is not decided where each lock file is located.
e.g. `/myapp/package-lock.json`

`xxx-app` is the specific case in my example.
https://github.com/knqyf263/trivy-ci-test/blob/master/Dockerfile"
291030667,50,Mallear,2019-06-06T06:04:15Z,Fixed it with a `\`
291030701,50,Mallear,2019-06-06T06:04:24Z,Fixed it with a `\` too
291030812,50,Mallear,2019-06-06T06:05:00Z,I have deleted this block
291123118,50,knqyf263,2019-06-06T10:40:08Z,"`\` does not seem to work.
![image](https://user-images.githubusercontent.com/2253692/59027035-d57f4000-8892-11e9-9114-ca2bc9374ddb.png)
"
291123411,50,knqyf263,2019-06-06T10:41:03Z,"This should also be fixed (os,library)."
291123521,50,knqyf263,2019-06-06T10:41:25Z,Same as above
291124084,50,knqyf263,2019-06-06T10:43:13Z,"How about `os,library` instead of `all`?"
291124784,50,knqyf263,2019-06-06T10:45:24Z,"```suggestion
	if utils.StringInSlice(""library"", scanOptions.VulnType) {
```
"
291124898,50,knqyf263,2019-06-06T10:45:45Z,Same as above
291428715,50,knqyf263,2019-06-07T01:41:39Z,"`s/(os, library)/(os,library)/`
The space between ""os"" and ""library"" should be removed because the later code doesn't trim a space.
"
291428741,50,knqyf263,2019-06-07T01:41:52Z,Same as above
291428836,50,knqyf263,2019-06-07T01:42:32Z,unnecessary?
291429249,50,knqyf263,2019-06-07T01:45:29Z,"I think that IsVulnTypeSelected is unnecessary because this function is the same with `utils.StringInSlice`. Is there a reason to need this function?
"
291455458,50,Mallear,2019-06-07T05:23:19Z,"I have build errors when keeping this line : 
```$ go build cmd/trivy/main.go 
# github.com/knqyf263/trivy/pkg/scanner
pkg/scanner/scan.go:20:6: err declared and not used``` 
I forgot to un-comment before commit"
291455658,50,Mallear,2019-06-07T05:25:05Z,"Did not know about `utils.StringInSlice`, I will delete IsVulnTypeSelected.
"
291457228,50,Mallear,2019-06-07T05:35:10Z,I have uncommented it
291457262,50,Mallear,2019-06-07T05:35:21Z,Done
291524889,50,knqyf263,2019-06-07T09:49:49Z,You can remove this line.
291526134,50,knqyf263,2019-06-07T09:53:28Z,"You used `if` block, so the scope has been changed. As a result, this line is already unnecessary."
291549931,50,Mallear,2019-06-07T11:16:21Z,Done
1465503759,5999,Maxim-Durand,2024-01-24T20:31:11Z,Using `report.ArtifactName` instead of `report.Metadata.RepoTags` would miss the image tag.
1465849215,5999,DmitriyLewen,2024-01-25T05:10:26Z,"We aggregate some packages to 1 result - https://github.com/aquasecurity/trivy/blob/fb36c4ed09efc3fc241d02713c4cc864b6c6a2c8/pkg/fanal/applier/docker.go#L263-L291

But we can find path from Results.Packages.FilePath:
```
{
      ""Target"": ""Python"",
      ""Class"": ""lang-pkgs"",
      ""Type"": ""python-pkg"",
      ""Packages"": [
        {
          ""Name"": ""pip"",
          ""Version"": ""23.2.1"",
          ""Licenses"": [
            ""MIT""
          ],
          ""Layer"": {
            ""DiffID"": ""sha256:a7d483b6066e2ed6c9cd1d5890a93326e3f192ef6e537c046296053fa547a844""
          },
          ""FilePath"": ""usr/local/lib/python3.12/site-packages/pip-23.2.1.dist-info/METADATA""
        },
```

Maybe we just use FilePath for these packages?
"
1465849765,5999,DmitriyLewen,2024-01-25T05:11:41Z,"```suggestion
			if report.ArtifactType == ftypes.ArtifactContainerImage {
```"
1466138693,5999,Maxim-Durand,2024-01-25T10:11:49Z,"Although I agree with you it's an interesting change as it would make the manifest more precise.

Nonetheless, I think the full `FilePath` would be too much to render in Github Dependency and would bloat the UI.
I can do a test with that change if you want and show the results here ?

Otherwise we could try to extract important values from the `FilePath` and adding them to `result.Target`, but that seems complex and prone to errors."
1467215241,5999,DmitriyLewen,2024-01-26T04:38:01Z,"For other languages we already use filePath (filePath is stored in `target`):
```bash
➜  5999 trivy -d fs -f github .  | jq .manifests
...
{
  ""foo/bar/requirements.txt"": {
    ""name"": ""pip"",
    ""file"": {
      ""source_location"": ""foo/bar/requirements.txt""
    },
    ""resolved"": {
      ""click"": {
        ""package_url"": ""pkg:pypi/click@8.0.0"",
        ""relationship"": ""direct"",
        ""scope"": ""runtime""
      }
    }
  }
}
```
And we didn't get issues about UI.

> I can do a test with that change if you want and show the results here ?

Yes please. If you have time, check it out.
"
1468095610,5999,Maxim-Durand,2024-01-26T20:04:54Z,"So I have a few things to report:

1. As you pointed out trivy aggregates multiple packages in the same ""App"" (for instance `Python` or `Node`) into one result.
The issue is that in the sbom format, the `source_location` is set at the `manifest` level not at the package level (`resolved` key in sbom format). Meaning, if we keep the default trivy aggregation then we have to use only one of all the packages `FilePath`. How to define that value is either arbitrary, or we need some sort of heuristic ?

2. In terms of UI it isn't as bloated as I expected, so I think you're right and it's ok to use.
![Screenshot_20240126_150104](https://github.com/aquasecurity/trivy/assets/72691393/5e4c37a3-bdbb-46c2-8d3b-1a06ea99566b)
The `source_location` used in the above screenshot is simply the `FilePath` of the last package in `result.Packages` so it's not even correct.


3. In the case trivy is scanning an image I think it's still pretty useless to replace the `manifest`'s `source_location` with this `FilePath` value and we should instead reference the image's name and tag."
1469105434,5999,DmitriyLewen,2024-01-29T05:53:06Z,"> Meaning, if we keep the default trivy aggregation then we have to use only one of all the packages FilePath. How to define that value is either arbitrary, or we need some sort of heuristic ?

We have already seen cases where it is necessary to remove aggregation, but this requires large changes and we are not sure about it.
I created a small function to get filePath for each package - https://github.com/DmitriyLewen/trivy/commit/84316646c3c4d75f6b79fc885e5a93811b87525e
Can you take a look?

> In the case trivy is scanning an image I think it's still pretty useless to replace the manifest's source_location with this FilePath value and we should instead reference the image's name and tag.

This makes sense for UI. But what worries me is case where user only knows that image contains vulnerable package, but doesn't have filePath to find and update that package. It would be great to add filePath somehow.
e.g. we can use `<image_name>:<tag> - <filePath>` format for [manifest map key](https://github.com/aquasecurity/trivy/blob/4df9363890ca7268d5c262a5916da0374921148b/pkg/report/github/github.go#L130). Is it possible to see `gsbom` file after uploading to GitHub?"
1469441742,5999,Maxim-Durand,2024-01-29T11:16:07Z,"> I created a small function to get filePath for each package - https://github.com/DmitriyLewen/trivy/commit/84316646c3c4d75f6b79fc885e5a93811b87525e
Can you take a look?

Just had a look, so from the trivy `Results` there is still aggregation but the sbom `Manifest` is not keeping this aggregation. Meaning each package is its own result with its own `source_location`, that seems like a good compromise to me.

> But what worries me is case where user only knows that image contains vulnerable package, but doesn't have filePath to find and update that package.

My assumption is that most people scanning images are in charge of maintaining those, meaning they know what's installed on them and how, so knowing the exact `FilePath` of a dependency won't change much.

But it's true we could always do `<image_name>:<tag> - <filePath>` although it's going to be super long and I'm not sure how github manifest filter will react to it.

I feel like maybe we should ask a broader audience then just the 2 of us for the direction to go, but unsure how and where to ask.

> Is it possible to see gsbom file after uploading to GitHub?

Yes. From my testing it's not exactly the same SBOM file trivy sends to github, but [you can still export your SBOM report from github. ](https://docs.github.com/en/code-security/supply-chain-security/understanding-your-software-supply-chain/exporting-a-software-bill-of-materials-for-your-repository#exporting-a-software-bill-of-material-for-your-repository-from-the-ui)

"
1469477171,5999,DmitriyLewen,2024-01-29T11:49:03Z,"Hello @knqyf263 
Can you take part in this discussion?
Perhaps you'll see another idea."
1474473178,5999,RichardoC,2024-02-01T13:30:19Z,"Could we use ""RepoDigests"" instead, as that included both the tag and digest? That would address the comment I just put on the PR discussion?"
1476125770,5999,Maxim-Durand,2024-02-02T14:26:14Z,"Just to confirm using `RepoDigests` would work I did some testing and it seems to be working fine.

Each time you scan your image with a new sha it will close all the previously open alerts for that image and only keep the latest version open. 
But you're still able to see the previously closed alerts by simply using the `is:closed` filter and searching for a specific manifest works fine too."
1476156309,5999,Maxim-Durand,2024-02-02T14:49:41Z,"A mix of suggestion at https://github.com/aquasecurity/trivy/pull/5999#discussion_r1469105434 and yours would give us the longest form possible storing all information:
 
 `<image_registry>/<image_name>:<tag>@sha256:<image_hash> - <filePath_to_package>`
 
![Screenshot_20240202_094700](https://github.com/aquasecurity/trivy/assets/72691393/a2de2962-39a2-408b-8aa1-58f299d7a449)

I tested it and although it's very long, filtering seems to work too (the `image_hash` is fake).

> [!IMPORTANT]
> One big drawback of using https://github.com/DmitriyLewen/trivy/commit/84316646c3c4d75f6b79fc885e5a93811b87525e is that since each vulnerable package has its own `source_location` set using its `FilePath`, it means there is no more grouping in Github.
> So, if you scan an image with 10 vulnerable packages, Github will show 10 different manifest instead of 1. 
To me this defeats the purpose, and that's why I would advise to only use `<image_registry>/<image_name>:<tag>@sha256:<image_hash>`.

"
1477059064,5999,Maxim-Durand,2024-02-03T12:31:21Z,"See https://github.com/aquasecurity/trivy/pull/5999#discussion_r1476156309

I think the drawback of https://github.com/DmitriyLewen/trivy/commit/84316646c3c4d75f6b79fc885e5a93811b87525e (each package becoming it's own manifest) would ruin the basic usage of Github Dependency as it would make filtering by manifest very complex.

So I went ahead and pushed the change to use `<image_registry>/<image_name>:<tag>@sha256:<image_hash>`, until we find a better solution."
1477075020,5999,RichardoC,2024-02-03T14:37:22Z,"Yeah, showing the package location (while having those disadvantages) will help with investigations about what actually needs to be fixed/updated"
1477075118,5999,RichardoC,2024-02-03T14:38:20Z,Why are you doing this rather than just using RepoDigests directly? Mind adding a comment?
1477604636,5999,knqyf263,2024-02-05T02:42:41Z,">My assumption is that most people scanning images are in charge of maintaining those, meaning they know what's installed on them and how, so knowing the exact FilePath of a dependency won't change much.

Unfortunately, it is not true. We've been seeing a lot of issues with people being confused about where a package is installed. This is because our table format doesn't include the full path. Therefore, we always point out that the package path is included in the JSON report and that they should check the path.

I might not be following the conversation., but what if adding file paths in `metadata`? 
https://github.com/aquasecurity/trivy/blob/b65ef00bca9e25a558222868f26de0641e9341e3/pkg/report/github/github.go#L160-L169"
1477656287,5999,DmitriyLewen,2024-02-05T04:34:32Z,Do you mean to get format like https://github.com/aquasecurity/trivy/pull/5999#discussion_r1476156309?
1477774823,5999,knqyf263,2024-02-05T07:44:00Z,"IIUC, it just puts a file path to a key. I'm suggesting we put file paths under the metadata of packages. BTW, the line I shared above was wrong.
https://github.com/aquasecurity/trivy/blob/b65ef00bca9e25a558222868f26de0641e9341e3/pkg/report/github/github.go#L32

Or I may not understand the problem correctly. I just answered this question.

>But what worries me is case where user only knows that image contains vulnerable package, but doesn't have filePath to find and update that package. It would be great to add filePath somehow.

https://docs.github.com/en/rest/dependency-graph/dependency-submission?apiVersion=2022-11-28"
1477922786,5999,Maxim-Durand,2024-02-05T09:53:40Z,"`RepoDigests` looks like `<registry>/<image_name>@sha256:<image_hash>`.
Whereas `RepoTag` looks like looks like `<registry>/<image_name>:<image_tag>`.

So if only using `RepoDigests` it means loosing the `<image_tag>`.

Good question, I added a comment."
1479587202,5999,Maxim-Durand,2024-02-06T11:00:29Z,"I just tested and adding a `metadata` at the package level package:
```
""Pillow"": {
  ""package_url"": ""pkg:pypi/pillow@10.1.0"",
  ""relationship"": ""direct"",
  ""scope"": ""runtime"",
  ""metadata"": {
    ""source_location"": ""usr/local/lib/python3.12/site-packages/pillow-10.1.0.dist-info/METADATA""
  }
},
```
doesn't change anything in Github Dependency UI.

But I agree at least the user would be able to find the path for each package by parsing the JSON."
1480964695,5999,knqyf263,2024-02-07T06:42:59Z,Interesting. Isn't the metadata shown anywhere?
1482849686,5999,Maxim-Durand,2024-02-08T11:55:53Z,"Not that I can see in Github Dependency UI no, see screenshot below to see how it looks.

![Screenshot_20240208_065410](https://github.com/aquasecurity/trivy/assets/72691393/99749d6c-bc60-422c-8d3f-85a467027daa)
"
1483840624,5999,DmitriyLewen,2024-02-09T04:09:15Z,"So user can only get package metadata when [taking snapshot](https://docs.github.com/en/rest/dependency-graph/dependency-submission?apiVersion=2022-11-28#create-a-snapshot-of-dependencies-for-a-repository), right?"
1484010653,5999,Maxim-Durand,2024-02-09T08:33:37Z,"If they use trivy then there's no issue as the user will now be able to find the file path for each package by parsing the JSON report before sending it to GitHub.

But if they use trivy-action then the report is sent automatically and the user doesn't have access to the original report hence he wouldn't be able to parse it.
Maybe if the user then export it from GitHub, the metadata tag with each package file path will still be there, I'll test that."
1484092505,5999,Maxim-Durand,2024-02-09T09:49:53Z,"This is what I got from github export to SBOM for the same package as in https://github.com/aquasecurity/trivy/pull/5999#discussion_r1479587202:
```
{
      ""SPDXID"": ""SPDXRef-pip-pillow-10.1.0"",
      ""name"": ""pip:pillow"",
      ""versionInfo"": ""10.1.0"",
      ""downloadLocation"": ""NOASSERTION"",
      ""filesAnalyzed"": false,
      ""licenseConcluded"": ""CAL-1.0"",
      ""supplier"": ""NOASSERTION"",
      ""externalRefs"": [
        {
          ""referenceCategory"": ""PACKAGE-MANAGER"",
          ""referenceLocator"": ""pkg:pypi/pillow@10.1.0"",
          ""referenceType"": ""purl""
        }
      ]
    },
```

As you can see the `metadata` tag doesn't show up in the exported SBOM.

> [!IMPORTANT] 
> Conclusion: users of `trivy-action` would currently have no way of finding out the `filePath` of each package when using the `github` format.

As this issue only involves `trivy-action` and not `trivy` itself anymore, I think we  should continue this discussion once this PR is merged to find a solution for `trivy-action` users at https://github.com/aquasecurity/trivy-action/issues/286
(I would recommend to add an option for [upload as an artifact](https://docs.github.com/en/actions/using-workflows/storing-workflow-data-as-artifacts) so that user can easily fetch the report)."
1487836399,5999,Maxim-Durand,2024-02-13T13:19:12Z,"I created https://github.com/aquasecurity/trivy-action/pull/307 to make sure users of `trivy-action` will know where to find the missing details from Github Dependency.

@DmitriyLewen and @knqyf263 do you agree with this compromise ?
If so, can you review this PR code ?
"
1494250609,5999,DmitriyLewen,2024-02-19T09:30:17Z,"```suggestion
			name: ""pypi from image"",
```"
1494254313,5999,DmitriyLewen,2024-02-19T09:32:46Z,"https://go.dev/blog/package-names#package-names
```suggestion
				imageReference := strings.Join(report.Metadata.RepoTags, "", "")
```"
1494263085,5999,DmitriyLewen,2024-02-19T09:36:23Z,"Also it might make sense to use the separator `,` (without space) to get a string without spaces."
1495210457,5999,DmitriyLewen,2024-02-20T03:44:41Z,Can you also update other variables that use `_`?
1495210628,5999,DmitriyLewen,2024-02-20T03:45:09Z,"> Also it might make sense to use the separator , (without space) to get a string without spaces.

@Maxim-Durand wdyt about this? Does it make sense? "
1497453510,5999,Maxim-Durand,2024-02-21T12:32:35Z,"> Can you also update other variables that use _?

Already done in https://github.com/aquasecurity/trivy/pull/5999/commits/fc53d372906b988e1ca60c82ac637df406791d96

> > Also it might make sense to use the separator , (without space) to get a string without spaces.
> 
> @Maxim-Durand wdyt about this? Does it make sense?

I honestly have no opinion on this as having a space there shouldn't break anything, so I left it as it was (but I'm totally ok changing it).

Is there a particular reason you want to remove the space ? If not, I'd say ""if it ain't broke, don't fix it"".
"
1498704671,5999,DmitriyLewen,2024-02-22T06:20:09Z,"> Already done in https://github.com/aquasecurity/trivy/commit/fc53d372906b988e1ca60c82ac637df406791d96

Thanks!

> I honestly have no opinion on this as having a space there shouldn't break anything, so I left it as it was (but I'm totally ok changing it).
Is there a particular reason you want to remove the space ? If not, I'd say ""if it ain't broke, don't fix it"".

I was worried that this might break something in GitHub and make it harder to parse that string (I'm not sure of the use case or if this would be needed).
But if you were told that this is normal, let these spaces remain."
1558858755,6476,nikpivkin,2024-04-10T05:21:03Z,"Is it possible to remove the old flag and add it as an alias to the new flag? Then you don't have to worry about handling two flags
```suggestion
	ResetChecksBundleFlag = Flag[bool]{
		Name:       ""reset-checks-bundle"",
		ConfigName: ""misconfiguration.reset-checks-bundle"",
		Usage:      ""remove checks bundle"",
		Aliases: []Alias{
			{
				Name:       ""reset-policy-bundle"",
				ConfigName: ""misconfiguration.reset-policy-bundle"",
				Deprecated: true,
			},
		},
	}
```"
1559170800,6476,nikpivkin,2024-04-10T09:56:17Z,The link should be changed to the Trivy repo.
1560394150,6476,simar7,2024-04-11T03:34:24Z,Nice! Yeah that's much simpler to implement.
1571843448,6476,DmitriyLewen,2024-04-19T05:52:09Z,"Does Go always use commit for `github.com/aquasecurity/trivy-checks`? 
Also [v0.10.4](https://github.com/aquasecurity/trivy-checks/releases/tag/v0.10.4) released.  Maybe we can use it right away"
1571847109,6476,DmitriyLewen,2024-04-19T05:54:54Z,"```suggestion
[ksv012]: https://github.com/aquasecurity/trivy-checks/blob/f36a5b732c4b1293a720c40baab0a7c106ea455e/checks/kubernetes/pss/restricted/3_runs_as_root.rego
```"
1571851917,6476,DmitriyLewen,2024-04-19T05:58:15Z,"use commit instead of `main` to avoid breaking the link after an update.

also looks like `checks/kubernetes/policies` and `rules/docker/policies` don't exist."
1571855545,6476,DmitriyLewen,2024-04-19T06:01:44Z,looks like we missed `--reset-checks-bundle` here.
1571866731,6476,DmitriyLewen,2024-04-19T06:12:06Z,"We've added logic for the trivy-db and trivy-java-db tags - #6410.
I think users will expect the same logic for ""checks""."
1571871357,6476,DmitriyLewen,2024-04-19T06:16:23Z,"Also i think we can rename link names
```suggestion
[kubernetes-checks]: https://github.com/aquasecurity/trivy-checks/tree/main/rules/kubernetes/policies
[docker-checks]: https://github.com/aquasecurity/trivy-checks/tree/main/rules/docker/policies
```"
1576905564,6476,simar7,2024-04-23T21:18:21Z,"@DmitriyLewen If I understand correctly, you are referring to versioning the bundles? If so, we already have that for checks: https://github.com/aquasecurity/trivy/blob/8c555939b6b243ef860cd4611791e69d38e7d734/pkg/policy/policy.go#L21-L24

If not, could you explain your idea?"
1577186723,6476,DmitriyLewen,2024-04-24T03:19:59Z,"I meant similar logic - https://github.com/aquasecurity/trivy/pull/6219#pullrequestreview-1914419291

But we do that for backward compatibility:
https://github.com/aquasecurity/trivy/blob/7c2017fa7ad43b310ce487072ace269ed72e8c4a/pkg/flag/db_flags.go#L152-L162

I thought about using the same logic for similar flags, but it looks like you were only adding tag (""BundleVersion"") for default repository, so those changes might break user's scanning.

"
1578586484,6476,simar7,2024-04-24T22:18:33Z,OK can we make that change (if needed) in a separate PR? This PR is purely for renaming everything that's a policy into a check. 
1578797914,6476,DmitriyLewen,2024-04-25T03:17:27Z,"To be honest, I already doubt the need for these changes. We made them for backward compatibility and will probably remove them soon.
So let's leave it to your decision. We can always add this if users ask about it."
1580417920,6476,DmitriyLewen,2024-04-26T02:42:26Z,"perhaps we want to rename `policy` folder?
`docs/docs/scanner/misconfiguration/policy/builtin.md` -> `docs/docs/scanner/misconfiguration/check/builtin.md`"
1580418054,6476,DmitriyLewen,2024-04-26T02:42:48Z,"```suggestion
## Check Distribution
```"
1580418439,6476,DmitriyLewen,2024-04-26T02:43:39Z,"```suggestion
You can get the package names in the [trivy-checks repository][trivy-checks] or the JSON output from Trivy.
```"
1580418572,6476,DmitriyLewen,2024-04-26T02:44:01Z,"```suggestion
This exception is applied to [KSV012][ksv012] in trivy-checks.
```"
1580419345,6476,DmitriyLewen,2024-04-26T02:45:46Z,"Hmm... what version of Go are you using on your local PC?
Why was this removed?"
1580420870,6476,DmitriyLewen,2024-04-26T02:49:04Z,Do you know why the order was changed?
1580422868,6476,DmitriyLewen,2024-04-26T02:53:47Z,"let's try to always use the same name (e.g. https://github.com/aquasecurity/trivy/blob/6b3d219ba4a28ed04b598fa909500b9bdd3eff67/pkg/iac/rego/embed.go#L11)
```suggestion
	checks ""github.com/aquasecurity/trivy-checks""
```"
1580451542,6476,simar7,2024-04-26T04:00:50Z,"I'm not sure to be honest. Maybe it's redundant to specify toolchain when the go version is the same? https://go.dev/ref/mod#go-mod-file-toolchain

I run the following:

```shell
$ go version
go version go1.22.0 darwin/arm64
```

If you get rid of the patch version from the go directive within go.mod, I get this error:

```shell
$ go mod tidy
go: downloading go1.22 (darwin/arm64)
go: download go1.22 for darwin/arm64: toolchain not available
```

Running `go mod tidy` on the version in main automatically removes the `toolchain` directive and replaces it with this change."
1580484468,6476,simar7,2024-04-26T05:06:02Z,It seems we didn't sort them so the order changed over go versions. I added sorted results now. https://github.com/aquasecurity/trivy/pull/6476/commits/df442dbebcef2d8442b0db479a45073b7fb629df
1580484807,6476,simar7,2024-04-26T05:06:46Z,Yes fixed a bunch of more places as well. Thanks!
1580496453,6476,DmitriyLewen,2024-04-26T05:28:33Z,"hm... this is strange...
my Go doesn't remove `toolchain` 😄 :
```bash
➜  trivy git:(main) git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean
➜  trivy git:(main) go mod tidy
➜  trivy git:(main) go version
go version go1.22.2 darwin/arm64
```"
1580497736,6476,DmitriyLewen,2024-04-26T05:31:02Z,"https://github.com/aquasecurity/trivy/blob/fc59844068dcf09db1356d8911d0ca7a6bc70908/pkg/cloud/aws/commands/run_test.go#L1283
is this debug strings? 😄 "
1580516775,6476,simar7,2024-04-26T06:02:14Z,Hmm I'm taking a look again to see what's going on. I will upgrade to Go 1.22.2 as you and try again.
1582020667,6476,simar7,2024-04-28T05:38:40Z,"@DmitriyLewen I don't have a good answer but after updating to go 1.22.2, go removed the toolchain directive for me but added a patch version to the go version https://github.com/aquasecurity/trivy/pull/6476/files#diff-33ef32bf6c23acb95f5902d7097b7a1d5128ca061167ec0716715b0b9eeaa5f6R3

I personally think since our go version and toolchain are same, this behavior is normal and expected as specifying the same version for the toolchain and go version are redundant. But I'm not sure why I'm not able to replicate the behavior you see on your end.

Could you try the following?
1. Restore the go version from the main branch into my branch
2. Try running `go mod tidy`"
1582593900,6476,knqyf263,2024-04-29T06:32:37Z,"Go also applies [MVS](https://research.swtch.com/vgo-mvs) to the Go version. Since `trivy-checks` uses `go 1.22.0` now, Go chooses 1.22.0 rather than 1.22.
https://github.com/aquasecurity/trivy-checks/blob/55f3883e2b99a9a48a31c9db17270ab0af5b38f0/go.mod#L3

I'd suggest removing the patch version in trivy-checks. Otherwise, we need to bump the patch version every time (1.22.0 => 1.22.1 => 1.22.2...).

```
diff --git a/go.mod b/go.mod
index 2cf4c04..6352ca5 100644
--- a/go.mod
+++ b/go.mod
@@ -1,6 +1,6 @@
 module github.com/aquasecurity/trivy-checks

-go 1.22.0
+go 1.22

 require (
        github.com/aquasecurity/trivy v0.50.2
```"
1584133357,6476,simar7,2024-04-30T04:56:47Z,"Thanks @knqyf263 for that info. I had a hunch it could be that but didn't get to it. Good to know about MVS!

I've updated trivy-checks repo and also used it within Trivy [here](https://github.com/aquasecurity/trivy/pull/6476/commits/78e0ca28407f3c32c7f0bb2f849029d74d7989a1)"
1590807259,6633,DmitriyLewen,2024-05-06T10:17:19Z,"```suggestion
		pkg, err := toPackage(node.Ref, node.StartLine, node.EndLine)
```"
1590807729,6633,DmitriyLewen,2024-05-06T10:17:51Z,"```suggestion
		pkg := p.toPackage(dep)
```"
1590814841,6633,DmitriyLewen,2024-05-06T10:26:11Z,"```suggestion
	uniquePkgs := make(map[string]string)
```"
1590848870,6633,DmitriyLewen,2024-05-06T11:01:05Z,looks like we can use sort.Sort
1590854905,6633,DmitriyLewen,2024-05-06T11:02:46Z,same
1590866185,6633,DmitriyLewen,2024-05-06T11:10:28Z,"```suggestion
			gotPkgs, gotDeps, err := NewParser().Parse(f)
```"
1590866691,6633,DmitriyLewen,2024-05-06T11:11:02Z,"```suggestion
	pkgs := make(map[string]ftypes.Package, len(packages)-1)
```"
1590866896,6633,DmitriyLewen,2024-05-06T11:11:17Z,"```suggestion
		if savedPkgs, ok := libs[pkgID]; ok {
```"
1590867594,6633,DmitriyLewen,2024-05-06T11:12:00Z,"```suggestion
		pkg := ftypes.Package{
```"
1590870008,6633,DmitriyLewen,2024-05-06T11:14:17Z,"```suggestion
	npmV1Pkgs = []ftypes.Package{
```"
1590870150,6633,DmitriyLewen,2024-05-06T11:14:23Z,same for other
1590879159,6633,DmitriyLewen,2024-05-06T11:21:11Z,we can use sort.Sort()
1590879271,6633,DmitriyLewen,2024-05-06T11:21:17Z,same
1590881446,6633,DmitriyLewen,2024-05-06T11:23:00Z,same
1590881844,6633,DmitriyLewen,2024-05-06T11:23:21Z,"```suggestion
		pkg := ftypes.Package{
```"
1590885460,6633,DmitriyLewen,2024-05-06T11:26:01Z,"```suggestion
	composerPkgs = []ftypes.Package{
```"
1590885895,6633,DmitriyLewen,2024-05-06T11:26:22Z,"```suggestion
		wantPkgs []ftypes.Package
```"
1590887590,6633,DmitriyLewen,2024-05-06T11:27:38Z,"```suggestion
		wantPkgs []ftypes.Package
```"
1592065741,6633,DmitriyLewen,2024-05-07T08:52:52Z,"```suggestion
func (p *Parser) Parse(r xio.ReadSeekerAt) (pkgs []ftypes.Package, deps []ftypes.Dependency, err error) {
```"
1592066940,6633,DmitriyLewen,2024-05-07T08:53:42Z,"```suggestion
	pkgs = []ftypes.Package{
```"
1592069023,6633,DmitriyLewen,2024-05-07T08:55:10Z,"```suggestion
		wantPkgs  []ftypes.Package
```"
1592070035,6633,DmitriyLewen,2024-05-07T08:55:53Z,"```suggestion
func pkgName(pin Pin, lockVersion int) string {
```"
1592070996,6633,DmitriyLewen,2024-05-07T08:56:32Z,"```suggestion
		pkgs     []ftypes.Package
		wantPkgs []ftypes.Package
```"
1592071487,6633,DmitriyLewen,2024-05-07T08:56:54Z,"```suggestion
			for _, pkg := range app.Packages {
```"
1592080417,6633,DmitriyLewen,2024-05-07T09:03:30Z,"```suggestion
	for i, pkg := range app.Packages {
```"
1592080765,6633,DmitriyLewen,2024-05-07T09:03:45Z,"```suggestion
	for i, pkg := range app.Packages {
```"
1592081187,6633,DmitriyLewen,2024-05-07T09:04:05Z,"```suggestion
	for i, pkg := range app.Packages {
```"
1592082556,6633,DmitriyLewen,2024-05-07T09:05:08Z,"```suggestion
		for i, pkg := range app.Packages {
```"
1592088782,6633,DmitriyLewen,2024-05-07T09:09:56Z,"IIRC it's better to use new number, even if we just rename the field."
1592158317,6633,knqyf263,2024-05-07T09:59:02Z,"Renaming should be ok as protobuf internally uses number, not name. I'll check it just in case."
1592162166,6633,knqyf263,2024-05-07T10:01:49Z,"Thanks.
https://github.com/aquasecurity/trivy/pull/6633/commits/020e3b54d4cdfde91cf5f8b0cf75d9c5adbd6ffc"
1592180518,6633,knqyf263,2024-05-07T10:16:52Z,"done
https://github.com/aquasecurity/trivy/pull/6633/commits/fee8c55012789d1ed7827d680af84de4a3bd192a"
1592180810,6633,knqyf263,2024-05-07T10:17:08Z,"done
https://github.com/aquasecurity/trivy/pull/6633/commits/d284d0157f1377199ae7e2fa3c3ea3f037341a32"
1592181297,6633,knqyf263,2024-05-07T10:17:32Z,"done
https://github.com/aquasecurity/trivy/pull/6633/commits/5f436522cc06897b8277e4320b394013694f3fd2"
1677279320,7160,knqyf263,2024-07-15T03:15:57Z,"Authentication is not only for an air-gapped environment. I think we should leave it [here](https://github.com/aquasecurity/trivy/blob/88a1c0bc73f725b4b22167eb8be16b2405f49cc5/docs/docs/scanner/vulnerability.md#databases) or move it [here](https://github.com/aquasecurity/trivy/blob/88a1c0bc73f725b4b22167eb8be16b2405f49cc5/docs/docs/configuration/db.md), and reference it in this page."
1677319315,7160,knqyf263,2024-07-15T05:15:00Z,"The original document was incorrect. The vulnerability DB and Java DB work the same, and it supports only `docker login` now."
1677320300,7160,knqyf263,2024-07-15T05:17:16Z,We no longer need it and can delete it for now. But @DmitriyLewen suggested re-implementing sonatype API. We'll add it back after that.
1677320902,7160,knqyf263,2024-07-15T05:18:41Z,"Also, users suggested that `--offline` enables all needed flags for air-gapped environments."
1677791755,7160,itaysk,2024-07-15T13:00:20Z,"I agree, I also thought about the allowlist and private access not belonging to the airgap document, but also didn't want to leave them in a vulnerability specific document since they are shared to misconfig and maybe other things in the future.
WDYT about renaming the air-gap document to ""advanced database scenarios""? then it makes more sense why the network requirements, authentication, and offline settings are there. 
It does sounds similar to the existing ""configuration/db.md"" doc that you linked, but I thought that the entire ""configuration"" section is purely CLI flags reference (and I thought it's auto-generated)"
1677809744,7160,nikpivkin,2024-07-15T13:14:07Z,"@knqyf263 Why does Java DB only support authentication via docker login?  When an artifact is loaded, [this](https://github.com/aquasecurity/trivy/blob/main/pkg/oci/artifact.go#L73) method is called, which loads the image with authentication. "
1677831545,7160,knqyf263,2024-07-15T13:27:05Z,">WDYT about renaming the air-gap document to ""advanced database scenarios""? then it makes more sense why the network requirements, authentication, and offline settings are there.

Yes, It makes more sense, but since we also have checks bundle, advanced ""database"" scenarios might be misleading."
1677834315,7160,knqyf263,2024-07-15T13:28:47Z,It's my bad. I was using an old laptop today and referring to an old commit.
1677851876,7160,itaysk,2024-07-15T13:40:34Z,"so just to confirm, vuln db, java db, checks db all support the same authentication, and that is the same as trivy's ""private registry"" support. right?"
1678059326,7160,itaysk,2024-07-15T15:54:26Z,https://github.com/aquasecurity/trivy/pull/7160/commits/4695eebf7a876ff18c9a56f07e4ef4c141dc7e10
1678059665,7160,itaysk,2024-07-15T15:54:39Z,https://github.com/aquasecurity/trivy/pull/7160/commits/4695eebf7a876ff18c9a56f07e4ef4c141dc7e10
1678059904,7160,itaysk,2024-07-15T15:54:49Z,https://github.com/aquasecurity/trivy/pull/7160/commits/4695eebf7a876ff18c9a56f07e4ef4c141dc7e10
1678620740,7160,simar7,2024-07-16T00:58:24Z,"Formatting needs a fix

<img width=""858"" alt=""image"" src=""https://github.com/user-attachments/assets/fa70a072-de69-484d-aa8c-69636527e7a5"">
"
1678635312,7160,simar7,2024-07-16T01:25:29Z,"```suggestion
When performing a misconfiguration scan, Trivy will automatically download the relevant Checks bundle. The bundle is cached locally and Trivy will reuse it for subsequent scans on the same machine. Trivy takes care of updating the cache automatically, so the user can normally can be oblivious to it.
```"
1678637305,7160,simar7,2024-07-16T01:27:49Z,Yes
1679558804,7160,nikpivkin,2024-07-16T14:49:35Z,Database? It's a page about checks.
1680384337,7160,simar7,2024-07-17T04:21:48Z,"```suggestion
You can load check files or directories including your custom checks through `--config-check` flag.
```"
1680385527,7160,simar7,2024-07-17T04:24:10Z,It is a nit but I like to use `trivy config` instead of `trivy conf` as it is more descriptive.
1680385874,7160,simar7,2024-07-17T04:24:46Z,"```suggestion
Once you finish writing custom checks, you can pass the check files or the directory where those checks are stored with --config-check` option.
```"
1706936119,7160,knqyf263,2024-08-07T12:44:28Z,"nit
```suggestion
### OCI Databases
```"
1706939668,7160,knqyf263,2024-08-07T12:46:59Z,"```suggestion
1. Add your internal VEX Hub repository as a [custom repository](../supply-chain/vex/repo/#custom-repositories) with the URL pointing to your local server (e.g `url: https://server.local`).
```"
1707097085,7160,knqyf263,2024-08-07T14:18:48Z,"Do we call the checks bundle ""database""?"
1707685518,7160,itaysk,2024-08-07T18:55:29Z,"I have some thoughts about this, but don't want to delay this PR with them so I'll do change it"
1709224695,7160,knqyf263,2024-08-08T11:00:41Z,"I have an idea about re-structuring this page, but we can do that in another PR."
1777890940,7605,simar7,2024-09-27T01:01:36Z,Should we also have a debug log to say where the DB was downloaded from?
1777978632,7605,nikpivkin,2024-09-27T04:01:59Z,It's logged https://github.com/aquasecurity/trivy/pull/7605/files#diff-5da3684806835246d262230050593f460b12b6c0e3966df174e6061be0e9e575R235
1778452598,7605,DmitriyLewen,2024-09-27T11:10:20Z,"Looks like we can delete this log since we will show it later:
https://github.com/aquasecurity/trivy/blob/95df470087ce12b6554403058329b4c89082caab/pkg/db/db.go#L236"
1778461333,7605,DmitriyLewen,2024-09-27T11:18:19Z,"Do we need this?
We do same in initOCIArtifact:
https://github.com/aquasecurity/trivy/blob/95df470087ce12b6554403058329b4c89082caab/pkg/db/db.go#L202-L204
+
https://github.com/aquasecurity/trivy/blob/95df470087ce12b6554403058329b4c89082caab/pkg/db/db.go#L237-L239"
1778463774,7605,DmitriyLewen,2024-09-27T11:20:43Z,I think we can say that we keep order when trying to download the db (as for `--image-src`).
1778513642,7605,nikpivkin,2024-09-27T12:06:29Z,"If we already have one artifact initialized with a repository via `WithOCIArtifact`, there is no point in looping through repositories."
1778521996,7605,nikpivkin,2024-09-27T12:13:56Z,Done https://github.com/aquasecurity/trivy/pull/7605/commits/0c5ad869df3ef6b618783e9ed19df1f1894b7a16
1778522419,7605,nikpivkin,2024-09-27T12:14:19Z,Updated https://github.com/aquasecurity/trivy/pull/7605/commits/c9aff65dec321a37d24fff9776f176f1670ce08f
1779363608,7605,simar7,2024-09-28T04:45:16Z,"I meant to say log the success of the DB. Something along the lines of ""Successfully download from ... "" as a debug print. But it's just a nit."
1779455881,7605,nikpivkin,2024-09-28T09:53:56Z,"Got it now, I added https://github.com/aquasecurity/trivy/pull/7605/commits/d75a5846290a44af6afe462b386efe179a298343"
1780378136,7605,DmitriyLewen,2024-09-30T04:18:51Z,"Maybe I didn't make it clear.

You have duplicate code.
Can we keep `c.artifact != nil` check and `a.Download` function in just one place?

https://github.com/aquasecurity/trivy/blob/95df470087ce12b6554403058329b4c89082caab/pkg/db/db.go#L226-L228
https://github.com/aquasecurity/trivy/blob/95df470087ce12b6554403058329b4c89082caab/pkg/db/db.go#L202-L204

and 

https://github.com/aquasecurity/trivy/blob/95df470087ce12b6554403058329b4c89082caab/pkg/db/db.go#L227
https://github.com/aquasecurity/trivy/blob/95df470087ce12b6554403058329b4c89082caab/pkg/db/db.go#L237"
1780449016,7605,nikpivkin,2024-09-30T05:17:43Z,"@DmitriyLewen If the artifact already exists (manually created), then we don't need to create it [here](https://github.com/aquasecurity/trivy/pull/7605/files#diff-5da3684806835246d262230050593f460b12b6c0e3966df174e6061be0e9e575R230-R234) and we can just download it instead of trying to load it from possible repositories."
1780480301,7605,nikpivkin,2024-09-30T06:02:43Z,@DmitriyLewen Done https://github.com/aquasecurity/trivy/pull/7605/commits/b08004ab47c824c5de7cb04011ccfcdfd2e20365
1780802178,7605,knqyf263,2024-09-30T10:07:23Z,"We should try the next repository only when the error is 429 or 5xx, like [this](https://github.com/hashicorp/go-retryablehttp/blob/40b0cad1633fd521cee5884724fcf03d039aaf3f/client.go#L526-L539). Can we extract status code by using [transport.Error](https://github.com/google/go-containerregistry/blob/a07d1cab8700a9875699d2e7052f47acec30399d/pkg/v1/remote/transport/error.go#L27-L40) with [errors.As](https://github.com/aquasecurity/trivy/blob/b08004ab47c824c5de7cb04011ccfcdfd2e20365/pkg/db/db.go#L205-L206)? [Temporary](https://github.com/google/go-containerregistry/blob/a07d1cab8700a9875699d2e7052f47acec30399d/pkg/v1/remote/transport/error.go#L76-L92) may help.
"
1780832555,7605,knqyf263,2024-09-30T10:30:37Z,"All OCI artifacts are always initialized now, even if the primary registry works correctly. It means we waste HTTP calls. What if delaying initialization when needed? Please let me know if I'm missing something.

```
diff --git a/pkg/db/db.go b/pkg/db/db.go
index 46c2a0584..716dd5d71 100644
--- a/pkg/db/db.go
+++ b/pkg/db/db.go
@@ -42,7 +42,7 @@ var (
 )

 type options struct {
-       artifact       *oci.Artifact
+       artifact       *oci.Artifact // For testing purpose only
        dbRepositories []name.Reference
 }

@@ -199,6 +199,10 @@ func (c *Client) updateDownloadedAt(ctx context.Context, dbDir string) error {
 }

 func (c *Client) initOCIArtifact(repository name.Reference, opt types.RegistryOptions) (*oci.Artifact, error) {
+       if c.artifact != nil {
+               return c.artifact, nil // For unit tests
+       }
+
        art, err := oci.NewArtifact(repository.String(), c.quiet, opt)
        // TODO: NewArtifact never returns an error
        if err != nil {
@@ -218,30 +222,12 @@ func (c *Client) initOCIArtifact(repository name.Reference, opt types.RegistryOp
        return art, nil
 }

-func (c *Client) initArtifacts(opt types.RegistryOptions) ([]*oci.Artifact, error) {
-       if c.artifact != nil {
-               return []*oci.Artifact{c.artifact}, nil
-       }
-
-       artifacts := make([]*oci.Artifact, 0, len(c.dbRepositories))
-
-       for _, repo := range c.dbRepositories {
-               a, err := c.initOCIArtifact(repo, opt)
+func (c *Client) downloadDB(ctx context.Context, opt types.RegistryOptions, dst string) error {
+       for i, repo := range c.dbRepositories {
+               art, err := c.initOCIArtifact(repo, opt)
                if err != nil {
-                       return nil, err
+                       return xerrors.Errorf(""failed to initialize OCI artifact: %w"", err)
                }
-               artifacts = append(artifacts, a)
-       }
-       return artifacts, nil
-}
-
-func (c *Client) downloadDB(ctx context.Context, opt types.RegistryOptions, dst string) error {
-       arts, err := c.initArtifacts(opt)
-       if err != nil {
-               return err
-       }
-
-       for i, art := range arts {
                log.Info(""Downloading vulnerability DB..."", log.String(""repo"", art.Repository()))
                if err := art.Download(ctx, dst, oci.DownloadOption{MediaType: dbMediaType}); err != nil {
                        log.Error(""Failed to download DB"", log.String(""repo"", art.Repository()), log.Err(err))
```"
1780837076,7605,knqyf263,2024-09-30T10:34:19Z,"`Client.artifact` is for testing purposes only. We don't need to expand it to a slice. It means it's okay to return the same instance, but we can change it if we really need it."
1780852963,7605,nikpivkin,2024-09-30T10:39:24Z,"@knqyf263 Artifact initialization does not cause http requests and never returns an error. https://github.com/aquasecurity/trivy/blob/main/pkg/oci/artifact.go#L60-L70 If necessary, I can do some refactoring in this PR."
1780875479,7605,knqyf263,2024-09-30T10:43:43Z,Hmm. We forgot to fix the error handling. I'll open a PR now.
1780876963,7605,nikpivkin,2024-09-30T10:44:07Z,"artifact can be passed through the [WithOCIArtifact](https://github.com/aquasecurity/trivy/blob/main/pkg/db/db.go#L47-L51) option, which is public. Can anyone use it? "
1780884481,7605,nikpivkin,2024-09-30T10:48:15Z,"Agreed, I think we can move [this](https://github.com/aquasecurity/trivy/blob/main/pkg/db/db.go#L203-L215) error handling when downloading an artifact. "
1780894143,7605,knqyf263,2024-09-30T10:55:06Z,Opened https://github.com/aquasecurity/trivy/pull/7615
1780936922,7605,knqyf263,2024-09-30T11:30:05Z,"We're unsure how the free tier in ECR Public works, so we should probably avoid adding ECR for now. Instead, we'll document how to use ECR Public in another PR."
1780969271,7605,knqyf263,2024-09-30T11:48:20Z,Merged. https://github.com/aquasecurity/trivy/pull/7615
1781152758,7605,nikpivkin,2024-09-30T13:38:29Z,"> artifact can be passed through the [WithOCIArtifact](https://github.com/aquasecurity/trivy/blob/main/pkg/db/db.go#L47-L51) option, which is public. Can anyone use it?

@knqyf263 "
1782299725,7605,knqyf263,2024-10-01T08:05:48Z,"@nikpivkin Yes, anybody can use it, and it's actually used in several places.
https://github.com/aquasecurity/trivy/blob/fc6b3a760b646bb4ff0d4065fc5cd0058b70ca39/pkg/db/db_test.go#L175
https://github.com/aquasecurity/trivy/blob/4c6e8ca9cc9591799907cc73075f2d740e303b8f/pkg/rpc/server/listen_test.go#L97"
1782586057,7605,knqyf263,2024-10-01T11:17:32Z,"I'm curious why it's always set to true.

```suggestion
	if err = art.Download(ctx, dst, oci.DownloadOption{MediaType: mediaType, Quiet: quiet}); err != nil {
```"
1782614600,7605,knqyf263,2024-10-01T11:38:24Z,"nit: To get aligned with `Artifact.Download`, what if defining `Artifacts []*Artifact` and `Artifacts.Download()`?

```suggestion
type Artifacts []*Artifact

// NewArtifacts returns a slice of artifacts
func NewArtifacts(repos []string, registryOpt types.RegistryOptions, opts ...Option) Artifacts {
	return lo.Map(repos, func(r string, _ int) *Artifact {
		return NewArtifact(r, registryOpt, opts...)
	})
}
func (artifacts Artifacts) Download(ctx context.Context, dst string, opt DownloadOption) error {
	for i, art := range artifacts {
```"
1782668172,7605,nikpivkin,2024-10-01T12:20:39Z,"That's a typo, [fixed](https://github.com/aquasecurity/trivy/pull/7605/commits/8a960b3a826d3617d88692a8247b81f6bf0ee82b). "
1782668389,7605,nikpivkin,2024-10-01T12:20:49Z,Done https://github.com/aquasecurity/trivy/pull/7605/commits/8a960b3a826d3617d88692a8247b81f6bf0ee82b
1790070873,7605,beltran-rubo,2024-10-07T11:47:00Z,"The 2nd default repository is wrong, it should be ""public.ecr.aws/aquasecurity/trivy-db:2"""
1930230615,8294,DmitriyLewen,2025-01-27T09:41:15Z,"It's weird, but my IDE complains 😄 
![изображение](https://github.com/user-attachments/assets/1201caae-6e82-4631-8381-8a68ae186c17)
"
1930242413,8294,DmitriyLewen,2025-01-27T09:49:07Z,can we use? https://github.com/aquasecurity/trivy/blob/dd15a36483dc938b65a91c4a9a3dfbd46e1a6d88/pkg/fanal/artifact/image/image.go#L222-L228
1930246942,8294,DmitriyLewen,2025-01-27T09:52:10Z,"I seem to be missing something
Why are we using an existing image archive (e.g. `vuln-image.tar.gz`)?"
1930255865,8294,DmitriyLewen,2025-01-27T09:58:01Z,"Can I add a comment here?
Because we might forget why we need to calculate size later if sum of layer sizes is already greater than `MaxImageSize`"
1930276635,8294,nikpivkin,2025-01-27T10:12:30Z,"GoLand? I think the static analyzer should not show the warning because 4.1*MB is an integer. 
https://go.dev/play/p/M1aB0vKfVl1"
1930277921,8294,nikpivkin,2025-01-27T10:13:29Z,"In this case, we don't know the size of the entire image."
1930280178,8294,nikpivkin,2025-01-27T10:15:03Z,I created image2 as it is convenient for testing because it contains two 2mb layers.
1930280746,8294,DmitriyLewen,2025-01-27T10:15:27Z,"Yeah, i agree with you. 
Just wanted to share 😄 "
1930283571,8294,nikpivkin,2025-01-27T10:17:30Z,"Strange that the behavior is different from vscode, I think they use the same lsp."
1930285976,8294,nikpivkin,2025-01-27T10:19:08Z,"Sure, add it."
1930287468,8294,DmitriyLewen,2025-01-27T10:20:12Z,"But we only test 2 cases:
- 1st layer size > `MaxImageSize`.
- Image size > `MaxImageSize`.

Why do we need the 2nd layer?

We just don't want to add extra test files (there are too many of them anyway)"
1930290676,8294,DmitriyLewen,2025-01-27T10:22:37Z,"maybe we can update this function to use it in both cases?

I think it's handy to have errors collected in one place"
1930297105,8294,nikpivkin,2025-01-27T10:26:55Z,"The layers are processed in parallel and if a small layer is processed first, we will not check the first case."
1930313378,8294,DmitriyLewen,2025-01-27T10:38:37Z,"I'm not sure if this makes sense for this test, but okay, let's keep this file."
1930319220,8294,nikpivkin,2025-01-27T10:42:53Z,Done https://github.com/aquasecurity/trivy/pull/8294/commits/8d164f0da5262050dc3d78b1ed988f6a5f01a0d7
1930417896,8294,knqyf263,2025-01-27T12:02:52Z,"Can't we test it as below? As Dmitriy said, we want to avoid adding more testing images in a git repository. I regret committing test binaries 😔 

We've recently switched to [downloading test artifacts when running unit tests](https://github.com/aquasecurity/trivy/blob/b5062f3ae20044d1452bf293f210a24cd1d419b3/pkg/fanal/analyzer/pkg/rpm/testdata/fixture.go) ([another example](https://github.com/aquasecurity/trivy/blob/b5062f3ae20044d1452bf293f210a24cd1d419b3/internal/gittest/testdata/fixture.go)). If we really need a real tar file, we can go for this approach.

```diff
diff --git a/pkg/fanal/artifact/image/image_test.go b/pkg/fanal/artifact/image/image_test.go
index e2fdf1417..9ef8174b3 100644
--- a/pkg/fanal/artifact/image/image_test.go
+++ b/pkg/fanal/artifact/image/image_test.go
@@ -3,11 +3,13 @@ package image_test
 import (
 	""context""
 	""errors""
+	""math/rand""
 	""testing""
 	""time""
 
 	""github.com/docker/go-units""
 	v1 ""github.com/google/go-containerregistry/pkg/v1""
+	""github.com/google/go-containerregistry/pkg/v1/random""
 	""github.com/stretchr/testify/assert""
 	""github.com/stretchr/testify/require""
 	""golang.org/x/xerrors""
@@ -2287,3 +2289,42 @@ func TestArtifact_Inspect(t *testing.T) {
 		})
 	}
 }
+
+func TestArtifact_InspectWithMaxImageSize(t *testing.T) {
+	randomImage, err := random.Image(1000, 2, random.WithSource(rand.NewSource(0)))
+	require.NoError(t, err)
+
+	img := &fakeImage{Image: randomImage}
+	mockCache := new(cache.MockArtifactCache)
+
+	tests := []struct {
+		name        string
+		artifactOpt artifact.Option
+		wantErr     string
+	}{
+		{
+			name: ""compressed image size is larger than the maximum"",
+			artifactOpt: artifact.Option{
+				ImageOption: types.ImageOptions{MaxImageSize: units.KB * 1},
+			},
+			wantErr: ""compressed image size 2.44kB exceeds maximum allowed size 1kB"",
+		},
+		{
+			name: ""uncompressed image size is larger than the maximum"",
+			artifactOpt: artifact.Option{
+				ImageOption: types.ImageOptions{MaxImageSize: units.KB * 3},
+			},
+			wantErr: ""uncompressed image size 5.12kB exceeds maximum allowed size 3kB"",
+		},
+	}
+
+	for _, tt := range tests {
+		t.Run(tt.name, func(t *testing.T) {
+			artifact, err := image2.NewArtifact(img, mockCache, tt.artifactOpt)
+			require.NoError(t, err)
+
+			_, err = artifact.Inspect(context.Background())
+			require.ErrorContains(t, err, tt.wantErr)
+		})
+	}
+}
diff --git a/pkg/fanal/artifact/image/remote_sbom_test.go b/pkg/fanal/artifact/image/remote_sbom_test.go
index 1999d732a..c8059071f 100644
--- a/pkg/fanal/artifact/image/remote_sbom_test.go
+++ b/pkg/fanal/artifact/image/remote_sbom_test.go
@@ -31,7 +31,7 @@ func TestMain(m *testing.M) {
 type fakeImage struct {
 	name        string
 	repoDigests []string
-	*fakei.FakeImage
+	v1.Image
 	types.ImageExtension
 }
 
@@ -160,7 +160,7 @@ func TestArtifact_InspectRekorAttestation(t *testing.T) {
 			img := &fakeImage{
 				name:        tt.fields.imageName,
 				repoDigests: tt.fields.repoDigests,
-				FakeImage:   fi,
+				Image:       fi,
 			}
 			a, err := image2.NewArtifact(img, mockCache, tt.artifactOpt)
 			require.NoError(t, err)
@@ -304,7 +304,7 @@ func TestArtifact_inspectOCIReferrerSBOM(t *testing.T) {
 			img := &fakeImage{
 				name:        tt.fields.imageName,
 				repoDigests: tt.fields.repoDigests,
-				FakeImage:   fi,
+				Image:       fi,
 			}
 			a, err := image2.NewArtifact(img, mockCache, tt.artifactOpt)
 			require.NoError(t, err)
```"
1930419101,8294,knqyf263,2025-01-27T12:03:51Z,2.44kB and 5.12kB may differ. We might want to get the values dynamically or exclude them from `ErrorContains` somehow.
1930419828,8294,knqyf263,2025-01-27T12:04:27Z,"BTW, why is it `kB`, not `KB`?"
1930482001,8294,nikpivkin,2025-01-27T12:53:11Z,"Thanks, I didn't know about the `github.com/google/go-containerregistry/pkg/v1/random` package. Fixed https://github.com/aquasecurity/trivy/pull/8294/commits/e9ce12d52db6085080bdfff3b09b3bf8285fa972"
1930484675,8294,nikpivkin,2025-01-27T12:55:10Z,The decimal prefix kilo is written with a small letter https://en.wikipedia.org/wiki/Binary_prefix
1930495174,8294,nikpivkin,2025-01-27T13:03:18Z,Done https://github.com/aquasecurity/trivy/pull/8294/commits/b857a6a52e0d66e96dc02b7cfed87dc4f5eadcab
1930516863,8294,knqyf263,2025-01-27T13:19:35Z,"I thought [by convention](https://en.wikipedia.org/wiki/Binary_prefix#Ambiguous_standards) KB in software meant KiB (I know it's not strict), but do you know how it's handled in other software (e.g. Docker)? The size shown in `docker images` is `MB`, not `MiB`?

For example, I'm sure Docker Hub uses `MB` as `MiB`. It shows 3.47MB.
<img width=""519"" alt=""image"" src=""https://github.com/user-attachments/assets/efc6843b-e690-4882-a71a-52154fe752e7"" />

But the actual size is 3641715. 3641715 / 1024**2 is 3.47.

```
$ crane manifest alpine@sha256:56fa17d2a7e7f168a043a2712e63aed1f8543aeafdcee47c58dcffe38ed51099 --platform linux/amd64 | jq '.layers[0].size'
3641715
```

Given this fact, I thought `MB` usually meant `MiB` (I'm lazy and sometimes use 1,000 as KiB if it doesn't have to be strict)."
1931627349,8294,DmitriyLewen,2025-01-28T07:00:49Z,"I'm a bit confused.

We use `totalSize` for the following check:
https://github.com/aquasecurity/trivy/blob/b857a6a52e0d66e96dc02b7cfed87dc4f5eadcab/pkg/fanal/artifact/image/image.go#L256-L258

IIUC we can remove `completedLayers != len(diffIDs)` and see this error here.
parallelism shouldn't be a problem - we'll get this error on the last layer.
What am I missing?"
1931634508,8294,nikpivkin,2025-01-28T07:09:08Z,Should we distinguish that the image is fully loaded or not?
1931642298,8294,DmitriyLewen,2025-01-28T07:18:05Z,"It seems to be a rare case (when we get error on image size because of last layer).

But if you want - you can handle this case.
But I think it makes more sense to do it here (so that all errors for uncompressed sizes (layers or image) are in one place)"
1932266908,8294,nikpivkin,2025-01-28T14:25:59Z,Agreed. I simplified the size check https://github.com/aquasecurity/trivy/pull/8294/commits/71da46a419b5d90f6056c2298d07d24621982696
1933302423,8294,knqyf263,2025-01-29T05:54:53Z,"Interesting...

```
$ docker images alpine:3.19
REPOSITORY   TAG       IMAGE ID       CREATED         SIZE
alpine       3.19      ace17d5d883e   12 months ago   7.73MB

$ docker inspect alpine:3.19 | jq '.[].Size'
7728534
"
1933303296,8294,knqyf263,2025-01-29T05:56:04Z,"Docker: Decimal prefixes (1000)
Docker Hub: Binary prefixes (1024)"
1933309618,8294,knqyf263,2025-01-29T06:04:28Z,"For me, the most significant difference between markdown and mkdocs is that a newline is required before bullet points.

```suggestion
An error is returned in the following cases:

- if the compressed image size exceeds the limit,
```

It's broken now.

![CleanShot 2025-01-29 at 10 04 09](https://github.com/user-attachments/assets/0c302a48-8c23-4b38-9537-68ee250d13b5)
"
1933310381,8294,knqyf263,2025-01-29T06:05:45Z,"```suggestion
- if the total size of the uncompressed layers exceeds the specified limit during their pulling,
```"
1933486583,8294,knqyf263,2025-01-29T08:54:31Z,"@nikpivkin It may be worth documenting. Otherwise, users who check the size on Docker Hub may complain about it."
1933765018,8294,nikpivkin,2025-01-29T12:07:39Z,BTW I found an open issue https://github.com/docker/cli/issues/4630
1933848614,8294,nikpivkin,2025-01-29T13:08:01Z,"> Docker: Decimal prefixes (1000) 
Docker Hub: Binary prefixes (1024)

Doesn't the Docker CLI display the actual binary size but uses decimal prefixes like Docker Hub?"
1933867173,8294,nikpivkin,2025-01-29T13:19:37Z,Done https://github.com/aquasecurity/trivy/commit/92888b60a2d106526637e2d267ca904cabac12be
1933867298,8294,nikpivkin,2025-01-29T13:19:42Z,Fixed https://github.com/aquasecurity/trivy/commit/92888b60a2d106526637e2d267ca904cabac12be
1934089774,8294,nikpivkin,2025-01-29T15:21:15Z,Added https://github.com/aquasecurity/trivy/pull/8294/commits/e5574ca4e051e040a9f530646d58757f2bd56975
613624020,935,simar7,2021-04-14T22:21:24Z,"```suggestion
		ruleName = ""OS Package Vulnerability ""
```"
613625137,935,simar7,2021-04-14T22:24:05Z,"```suggestion
	return fmt.Sprintf(""%s (%s)"", ruleName, strings.Title(vulnerabilityType))
```"
613625422,935,simar7,2021-04-14T22:24:50Z,"I'm not familiar with this, could you explain its use and purpose?"
613626870,935,simar7,2021-04-14T22:27:59Z,"```suggestion
	case ""LOW"", ""UNKNOWN"":
```

See https://github.com/aquasecurity/trivy-db/blob/68e2a005ae7900d27c14738599541c8e082d4bc3/pkg/types/types.go#L38 for all the possible severity levels."
613627593,935,simar7,2021-04-14T22:29:42Z,"inline 
```suggestion
			assert.Equal(t, tc.sarifErrorLevel, toSarifErrorLevel(tc.severity), tc.severity)
```"
613627750,935,simar7,2021-04-14T22:30:05Z,"inline
```suggestion
			assert.Equal(t, tc.sarifRuleName, toSarifRuleName(tc.vulnerabilityType), tc.vulnerabilityType)
```"
613628177,935,simar7,2021-04-14T22:31:08Z,"Instead of using a local variable, you just do the return within each of the case statements."
613629141,935,eddynaka,2021-04-14T22:33:44Z,"It avoids path repetition between the physical paths.
For example,
c:\folder1\folder2\folder3\filename.txt
ant this c:\folder1\folder2\folder3 keeps repeating.

With that, we can create a variable and re-use it."
613633264,935,simar7,2021-04-14T22:44:11Z,"Just taking this to illustrate an example, is this change sufficient enough for the GitHub Security tab to display the vulnerability information in the Web UI? I was just trying to run it through the online validator and noticed this:
<img width=""963"" alt=""image"" src=""https://user-images.githubusercontent.com/1254783/114789530-1c180e00-9d38-11eb-993a-43c73c403922.png"">

I tried with a different image: `knqyf263/vuln-image`. 

You can see this by running: `trivy -q image -format=template -t=@contrib/sarif.tpl knqyf263/vuln-image `"
613639778,935,simar7,2021-04-14T23:01:16Z,Should this be a valid URI? https://docs.oasis-open.org/sarif/sarif/v2.1.0/os/sarif-v2.1.0-os.html#_Toc34317430
613795901,935,yongyan-gh,2021-04-15T06:41:45Z,"@simar7  since the region information is not available so far, we removed the region properties. @eddynaka what do you think about this Github rule warning?"
613802133,935,yongyan-gh,2021-04-15T06:53:37Z,"this is value from .Target field, in reality is it possible the value of .Target will have this kind of suffix other than path? if yes we may need a logic to handle this case?

I also tried to analyze image knqyf263/vuln-image, and from the result I see some of path are in format of file path, not Uri path, e.g. ""rust-app\Cargo.lock"". 
The backslash needs to be escaped to `""\\""` so it won't break the Json format.
We may need convert this path to Uri format? e.g."" rust-app/Cargo.lock""

cc @eddynaka @simar7 "
613806347,935,yongyan-gh,2021-04-15T07:01:07Z,Fixed
613806447,935,yongyan-gh,2021-04-15T07:01:20Z,fixed
613806707,935,yongyan-gh,2021-04-15T07:01:54Z,fixed
613807530,935,yongyan-gh,2021-04-15T07:03:36Z,fixed
613807632,935,yongyan-gh,2021-04-15T07:03:47Z,done
613937125,935,eddynaka,2021-04-15T10:05:40Z,"We should ignore this. It's better to have an absent region than having  wrong information in it (hardcoding to startLine=1, for example)."
613938454,935,eddynaka,2021-04-15T10:07:38Z,"@yongyan-gh, I think we would just need to escape it. That would work.
We can't have the `(alpine version)` in the uri.

Generate with backslash and try to validate in the online validator"
614283120,935,yongyan-gh,2021-04-15T18:01:25Z,"yes I compiled local version escaped the back slash, it caused below warning in the validator:

SARIF1002: runs[0].results[0].locations[0].physicalLocation.artifactLocation.uri: The string 'node-app\package-lock.json' is not a valid URI reference. URIs must conform to [RFC 3986](https://tools.ietf.org/html/rfc3986)."
614286897,935,simar7,2021-04-15T18:07:49Z,"> We should ignore this. It's better to have an absent region than having wrong information in it (hardcoding to startLine=1, for example).

I agree with you but I was curious if we don't have this information, will it still show the vulnerability in the Github Security tab? It's one of the reasons we added startLine=1 as at the time GitHub Security tab had a requirement on this to be able to show the vulnerability information."
614289053,935,eddynaka,2021-04-15T18:11:25Z,got it. I asked some github guys. will try to update ASAP.
614289644,935,eddynaka,2021-04-15T18:12:25Z,Got it...
614364071,935,eddynaka,2021-04-15T20:16:46Z,"We can remove. Github adds it when we dont provide Region. But, its something we should re-add later to prevent some information that isn't right."
614497077,935,yongyan-gh,2021-04-16T01:32:10Z,"@simar7, we found some results location Uri path contains some extra strings in the end, e.g. ""testdata/fixtures/alpine-310.tar.gz (alpine 3.10.2)"". do you know if this is expected or its just test data? any suggestion how to extract file path from .Target field? maybe split by space/bracket?

Also we may need to convert the path to uri path if its file path e.g. ""node-app\package-lock.json"" need to be ""node-app/package-lock.json"", simply replace ""\"" with ""/"". pls lets know if any concern."
615083869,935,simar7,2021-04-16T19:40:10Z,"> @simar7, we found some results location Uri path contains some extra strings in the end, e.g. ""testdata/fixtures/alpine-310.tar.gz (alpine 3.10.2)"". do you know if this is expected or its just test data? 
Trivy also supports scanning of tar files individually. In that case it will look very similar to this.

> any suggestion how to extract file path from .Target field? maybe split by space/bracket?
> 
Let me try to understand it better as it's not clear to me. Are you saying how to get: `alpine-310.tar.gz` from the .Target which is `testdata/fixtures/alpine-310.tar.gz`? If so, you could do a string split as you described.

Depending on what's being scanned, `.Target` will vary. In the case of a programming library vulnerabilities, it will be a lock file (e.g. node-app/package-lock.json, etc.). In the case of OS package vulnerability, it will be the distro:version (e.g. alpine:3.11) and finally in the case of a tarball scan, it will what you described above.

> Also we may need to convert the path to uri path if its file path e.g. ""node-app\package-lock.json"" need to be ""node-app/package-lock.json"", simply replace """" with ""/"". pls lets know if any concern.

Why is this needed? Backslash is a Windows only file path convention, correct? Are you suggesting to replace all ""\"" with ""/"" in the final output?

"
615089011,935,simar7,2021-04-16T19:50:42Z,Thanks for confirming. I just tested it out and it seems to work.
615090068,935,eddynaka,2021-04-16T19:53:09Z,"@simar7 , the issue is not windows or linux. The issue here is that the field uri is actually an uri. With that, it must use ""/"".
so, one alternative is to replace all \ for /.
"
615092452,935,simar7,2021-04-16T19:58:12Z,"Right, that works for me. "
615141920,935,simar7,2021-04-16T21:58:46Z,@yongyan-gh let me know if you have any further questions. Once we resolve this I think it's good to merge.
615166167,935,yongyan-gh,2021-04-16T23:27:45Z,@simar7 thanks for clarification. Will add fix for location Uri conversion soon.
794415292,1638,AndreyLevchenko,2022-01-28T11:17:50Z,why `amd` is missed here
794425570,1638,AndreyLevchenko,2022-01-28T11:30:39Z,though I see same in release files
803690553,1638,knqyf263,2022-02-10T13:47:17Z,Where is this used?
903717207,1638,knqyf263,2022-06-22T13:04:36Z,"It's been a while, so I forgot the reason why we can't use multiple paths. Could you explain it again?
https://github.com/actions/upload-artifact#upload-using-multiple-paths-and-exclusions"
904619764,1638,DmitriyLewen,2022-06-23T06:17:14Z,"all files will be saved in 1 archive when we use multiple paths for one step `actions/upload-artifact`.
In this case, we will save 4 Trivy bins in 1 archive."
904637206,1638,knqyf263,2022-06-23T06:43:51Z,"Oh, yes, I just remember it. Thanks for explaining it again!"
908105603,1638,knqyf263,2022-06-28T06:57:17Z,nit: goreleaser_config
908105870,1638,knqyf263,2022-06-28T06:57:37Z,ditto
908106970,1638,knqyf263,2022-06-28T06:58:54Z,We can use newer ubuntu as this workflow doesn't use createrepo.
908111475,1638,knqyf263,2022-06-28T07:04:28Z,"It restores modules from cache, right? Looks like we don't cache anywhere. What if we remove it?"
908113215,1638,knqyf263,2022-06-28T07:06:20Z,"For consistency, name should be capitalized, Build binaries"
908113578,1638,knqyf263,2022-06-28T07:06:48Z,ditto. And no hyphen.
908114322,1638,knqyf263,2022-06-28T07:07:47Z,ditto
908115183,1638,knqyf263,2022-06-28T07:08:58Z,Deploy rpm/deb packages
908116088,1638,knqyf263,2022-06-28T07:10:06Z,"You mean ""after""?"
908120517,1638,knqyf263,2022-06-28T07:14:50Z,"Did this workflow work? I thought we needed to checkout Trivy. Otherwise, ci/deploy-rpm.sh doesn't exist."
908208499,1638,DmitriyLewen,2022-06-28T08:44:03Z,"if I understand correctly: we either restore cache (if cache for this key was found) or save go modules to  cache (if cache is not found).
Cache is stored for 7 days (https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows#usage-limits-and-eviction-policy)
I think we can use this action to avoid loading go modules every run(if `go.sum` file hasn't been changed)."
908237932,1638,DmitriyLewen,2022-06-28T09:11:35Z,"Yes, my mistake, thanks."
908238126,1638,DmitriyLewen,2022-06-28T09:11:47Z,Done
908238218,1638,DmitriyLewen,2022-06-28T09:11:52Z,Done
908238303,1638,DmitriyLewen,2022-06-28T09:11:58Z,Done
908238440,1638,DmitriyLewen,2022-06-28T09:12:07Z,Done
908239940,1638,DmitriyLewen,2022-06-28T09:13:40Z,Done
908240115,1638,DmitriyLewen,2022-06-28T09:13:49Z,Done
908240432,1638,DmitriyLewen,2022-06-28T09:14:00Z,Done
908273960,1638,DmitriyLewen,2022-06-28T09:44:14Z,I missed that. Thanks a lot! Checkout has been added.
908297134,1638,knqyf263,2022-06-28T10:07:51Z,But we don't have modules here as it will be downloaded by GoReleaser. Looks like we always cache an empty dir.
908298164,1638,knqyf263,2022-06-28T10:08:59Z,Could you test it in your forked trivy-repo? We may miss something else.
908299995,1638,DmitriyLewen,2022-06-28T10:10:55Z,hm... i didn't think about GoReleaser. I will remove it.
908304433,1638,DmitriyLewen,2022-06-28T10:15:48Z,"I already checked this: https://github.com/DmitriyLewen/trivy/runs/7089906348?check_suite_focus=true
new rpm file has been added: https://github.com/DmitriyLewen/trivy-repo/blob/main/rpm/releases/8/x86_64/trivy-0.22.6.el8.x86_64.rpm.
I forgot to add `GPG_KEY`. But `deploy-rpm.sh` worked correctly, so `deploy-deb.sh` will also work correctly.

Also successfully running canary build: https://github.com/DmitriyLewen/trivy/actions/runs/2575174982"
908415438,1638,knqyf263,2022-06-28T12:25:18Z,Could you import a dummy GPG key you generate and make sure it works in your fork?
909677670,1638,DmitriyLewen,2022-06-29T14:03:42Z,i checked. It works correctly : https://github.com/DmitriyLewen/trivy/actions/runs/2582486781
1342297113,5285,DmitriyLewen,2023-10-02T05:45:35Z,"I think we can make this function as separate function.

Also we can return only dependencies and slice of members:

```go
func tomlDependencies(path string) (Dependencies, []string, error) {
```"
1342297916,5285,DmitriyLewen,2023-10-02T05:47:59Z,"Are there cases where the found `members` contain other `members`?

I mean `pkg1 => pkg2=> pkg3 etc`

If yes => we need to use a queue or recursion to check all nested elements."
1342298155,5285,DmitriyLewen,2023-10-02T05:48:40Z,Can you add comment with link to docs about `Members`?
1342299044,5285,DmitriyLewen,2023-10-02T05:51:10Z,"Can you check case where path from ""Members"" does not exist?
Does Rust return an error in this case? Or do we need to check this path for existence?"
1347201831,5285,anfedotoff,2023-10-05T10:31:37Z,"I made a test:
```
.
└── workspace
    ├── Cargo.toml
    ├── test1
    │   ├── Cargo.toml
    │   └── src
    │       └── main.rs
    └── workspace2
        ├── Cargo.toml
        ├── test2
        │   ├── Cargo.toml
        │   └── src
        │       └── main.rs
        └── test3
            ├── Cargo.toml
            └── src
                └── main.rs
```
Calling cargo build from the root workspace cause such error:

```
  cargo build
error: multiple workspace roots found in the same workspace:
  /home/fedotoff/test-cargo-workspace/workspace/workspace2
  /home/fedotoff/test-cargo-workspace/workspace
```
So, I think workspace could be the one and only:)."
1347310952,5285,anfedotoff,2023-10-05T12:01:07Z,"I think, it's better to check or not to check;). Btw, I'm not so familiar with Go. What is the right way to check file for existence? I found this way:
```Go
if _, err := os.Stat(""/path/to/whatever""); errors.Is(err, os.ErrNotExist) {
  // path/to/whatever does not exist
}
```
But I suppose, I should use `fs.FS` for that?"
1348252896,5285,DmitriyLewen,2023-10-06T05:17:14Z,"Great! Thanks for this investigation. 
It would be nice if you could add comment that Cargo doesn't support nested members."
1348257827,5285,DmitriyLewen,2023-10-06T05:27:13Z,"You already have the main Cargo.toml file checked:
https://github.com/aquasecurity/trivy/blob/ced54aced1b31230e9b73f64760a873ef94e6cb2/pkg/fanal/analyzer/language/rust/cargo/cargo.go#L108-L110

You can use same logic."
1369620754,5285,DmitriyLewen,2023-10-24T04:34:45Z,"`ErrNotExist` error can't exist here, because you are handling it in `tomlDependities`.
Or did I miss something?"
1369631387,5285,DmitriyLewen,2023-10-24T05:00:30Z,"this comment for `dependencies`:
https://github.com/aquasecurity/trivy/blob/326c64ef2c46b74d8618fc8cfb9bb010b7bfc5b4/pkg/fanal/analyzer/language/rust/cargo/cargo.go#L180
"
1369631664,5285,DmitriyLewen,2023-10-24T05:01:07Z,"```suggestion
	deps := make(map[string]string)
```"
1369635414,5285,DmitriyLewen,2023-10-24T05:07:45Z,"We've already shown log message (`debug` is enough because `Cargo.toml` is helper file for `Cargo.lock`).
```suggestion
		return nil, nil, nil
```"
1384816873,5285,anfedotoff,2023-11-07T12:09:15Z,"Yes, exactly..."
1385145087,5285,anfedotoff,2023-11-07T15:48:04Z,Hm... tests are failing without this hack. Trying to find a better solution...
1385184119,5285,anfedotoff,2023-11-07T16:13:28Z,"I have question: do we need this check at all?

https://github.com/anfedotoff/trivy/blob/a0819b644715abed1505f0a3b7558d41f80b80db/pkg/fanal/analyzer/language/rust/cargo/cargo.go#L168-L170

I think, we will log this here:
https://github.com/anfedotoff/trivy/blob/a0819b644715abed1505f0a3b7558d41f80b80db/pkg/fanal/analyzer/language/rust/cargo/cargo.go#L71-L73"
1386083721,5285,DmitriyLewen,2023-11-08T06:47:33Z,"If one of members doesn't exist, we continue to check the remaining members.
Without this check you will stop parsing remaining toml files.

Correct me, if i am wrong."
1387944046,5285,anfedotoff,2023-11-09T12:39:00Z,"> If one of members doesn't exist, we continue to check the remaining members. Without this check you will stop parsing remaining toml files.
> 
> Correct me, if i am wrong.

Yes, you are right. But I think we should do the following:

1.  Stop if it is not possible to parse the root (workspace) Cargo.toml
2. Continue if it is not possible to parse member Cargo.toml

I pushed some changes. Warnings in logs LGTM (I malformed some member field):

```
2023-11-09T15:03:03.345+0300	DEBUG	Walk the file tree rooted at '/home/fedotoff/casr' in parallel
2023-11-09T15:03:03.415+0300	WARN	Unable to parse ""ibcasr/Cargo.toml"": file open error: open ibcasr/Cargo.toml: file does not exist
```

P.S. Sorry, for being so slow. I'm changing work, trying to find some time for open source:).
"
1388911978,5285,DmitriyLewen,2023-11-10T05:11:28Z,"> Stop if it is not possible to parse the root (workspace) Cargo.toml

You can't continue parsing because in this case you don't have any members to parse 😄

But you are right. I like this logic.
"
1388914662,5285,DmitriyLewen,2023-11-10T05:16:41Z,"But I'm not sure if we should show warning if the root `Cargo.toml` file doesn't exist.
This can confuse users if they only scan the `cargo.lock` file.

I think we need to revert previous logic for root `cargo.toml` file (with debug message)."
1388944854,5285,DmitriyLewen,2023-11-10T05:59:20Z,"I don't have a lot of exp with Cargo, can you help me understand:
i have played with `cargo tree` command.
And it looks like `cargo` builds separate tree for each members:
```bash
root@e5d322bb6f9e:/app2/casr# cargo tree

casr v2.9.0 (/app2/casr/casr)
├── anyhow v1.0.75
├── chrono v0.4.31
│   ├── iana-time-zone v0.1.58
...
libcasr v2.9.0 (/app2/casr/libcasr) (*)
```


Perhaps we need to add members as libs or mark all dependencies from members as Indirect? 
"
1390935453,5285,anfedotoff,2023-11-13T10:38:32Z,"According to [cargo docs](https://doc.rust-lang.org/book/ch14-03-cargo-workspaces.html#creating-a-workspace):

```
A workspace is a set of packages that share the same Cargo.lock and output directory. 
```

So, workspace is not a package, it couldn't be a dependency. For example CASR workspace has to crates (packages):
casr: [crates.io/crates/casr](https://crates.io/crates/casr)
libcasr: [crates.io/crates/libcasr](https://crates.io/crates/libcasr)
They are considered as separate crates. The same picture I see for LibAFL [github.com/AFLplusplus/LibAFL](https://github.com/AFLplusplus/LibAFL).
I think, the way we process members is right, they are Direct dependencies"
1392022614,5285,DmitriyLewen,2023-11-14T06:00:43Z,"Okay, thanks for the explanation!"
1467477719,5285,knqyf263,2024-01-26T10:34:48Z,Shouldn't it be false (meaning a direct dependency)? It is defined in Cargo.toml.
1467486166,5285,knqyf263,2024-01-26T10:41:11Z,"IIUC, `workspace.dependencies` is overridden by mistake here and then loses the version constraint."
1467568535,5285,DmitriyLewen,2024-01-26T11:52:21Z,"You are right.
Thanks!
Fixed in https://github.com/aquasecurity/trivy/pull/5285/commits/7b319754bbe713004b5d45979e514f2b1e9464ea"
1467568552,5285,DmitriyLewen,2024-01-26T11:52:22Z,Fixed.
1969749660,8254,knqyf263,2025-02-25T13:07:33Z,It will probably not be rendered correctly. Can you please test it with `mage docs:serve`?
1969754532,8254,knqyf263,2025-02-25T13:10:51Z,"Did you take the name somewhere? If not, we would go for `VEX`
https://go.dev/wiki/CodeReviewComments#initialisms

```suggestion
	ExternalReferenceVEX ExternalReferenceType = ""external_reference_vex""
```"
1969793632,8254,knqyf263,2025-02-25T13:33:32Z,"Since unmarshalReferenceType doesn't return an error, most references have empty types. Is it intended?"
1969802707,8254,knqyf263,2025-02-25T13:38:54Z,"nit

```suggestion
		return nil, xerrors.Errorf(""did not receive 2xx status code: %w"", res.StatusCode)
```"
1969809179,8254,knqyf263,2025-02-25T13:42:31Z,Do we need to check if `v` is nil?
1969811319,8254,knqyf263,2025-02-25T13:43:42Z,Do we need to export this function and some other functions?
1969815234,8254,knqyf263,2025-02-25T13:46:03Z,Is it possible `v` is nil?
1970032386,8254,RingoDev,2025-02-25T15:36:26Z,"Fixed: 
![Screenshot 2025-02-25 163420](https://github.com/user-attachments/assets/8296b07f-7213-4713-afba-eceecc39c374)
"
1970041022,8254,RingoDev,2025-02-25T15:41:07Z,Refactored
1970069723,8254,RingoDev,2025-02-25T15:55:11Z,"Good catch, that is very unintuitive.

Adapted `unmarshalReferenceType` to return an `UnsupportedExternalReference` error similar to the `UnsupportedType` error that already existed.

Filtering out external references that returned error - only ""exploitability-statement"" external ref types should now be added to the BOM"
1970088354,8254,RingoDev,2025-02-25T16:04:40Z,Was a weird decision on my part to not return an error from the `decodeVex` function. Fixed
1970105261,8254,RingoDev,2025-02-25T16:13:48Z,Made them private by lowercasing
1970119914,8254,RingoDev,2025-02-25T16:21:50Z,"actually not, but same holds true for the `TypeOCI` case above where I mirrored this of.

Removed check for both."
1970128707,8254,RingoDev,2025-02-25T16:26:31Z,"NVM rolled back change for `NewOCI`. There it makes sense to explicitly check for `nil`, because it is not able to return an empty set like the TypeRepository and the TypeSBOMReference"
1971051256,8254,knqyf263,2025-02-26T07:10:25Z,"I don't think we need to define `ErrUnsupportedExternalReference`.Since `ErrUnsupportedType` is handled by the upstream caller, other types of errors may also be returned, so `ErrUnsupportedType` was necessary to ensure accurate identification of the error type. However, in this case, that is not necessary, so I think it is sufficient to simply return an error and continue if it is not nil. It can be defined at that time if it becomes necessary in the future.

```suggestion
		return """", xerrors.New(""unsupported external reference type"")
```
"
1971053046,8254,knqyf263,2025-02-26T07:12:15Z,"nitpick

```suggestion
	v, errs := decodeVEX(f, filePath, report)
	if errs != nil {
		return nil, xerrors.Errorf(""unable to load VEX from file: %w"", err)
	}
	return v, nil
```"
1971053752,8254,knqyf263,2025-02-26T07:13:00Z,"nit

```suggestion
	VEXes []VEX
```"
1971056754,8254,knqyf263,2025-02-26T07:15:54Z,"nit: We basically use the snake case for log parameters.

```suggestion
	logger := log.WithPrefix(""vex"").With(log.String(""type"", ""external_reference""))
```"
1971056905,8254,knqyf263,2025-02-26T07:16:01Z,ditto
1971062472,8254,knqyf263,2025-02-26T07:21:14Z,"If no valid VEX documents are found, `v` will be nil, and in that case, it seems acceptable to also set SBOMReferenceSet to nil and skip it. I wasn't sure whether a nil check was needed for the return value of `NewSBOMReferenceSet()`, but after making this change, it is necessary.

```suggestion
	v, err := retrieveExternalVEXDocuments(urls, report)
	if err != nil {
		return nil, xerrors.Errorf(""failed to fetch external VEX document: %w"", err)
	} else if v == nil {
		return nil, nil
	}
```"
1971073552,8254,knqyf263,2025-02-26T07:31:42Z,"Scans should ideally produce consistent results even when run multiple times. In this case, if the server hosting the VEX documents is down or if network instability causes a download failure, vulnerabilities that should normally be excluded might be detected. 

Since users currently expect VEX to be applied by explicitly specifying `--vex sbom-ref`, it would be better to return an error to notify users that the expectation is unmet. While it might be worth fine-tuning certain aspects, such as allowing authentication failures, as an experimental feature, it’s acceptable to implement it such that an error is returned if VEX cannot be retrieved."
1971074634,8254,knqyf263,2025-02-26T07:32:42Z,"Now, we should handle nil :)

```suggestion
			v, err = NewSBOMReferenceSet(report)
			if err != nil {
				return nil, xerrors.Errorf(""failed to create set of external VEX documents: %w"", err)
			} else if v == nil {
				continue
			}
```"
1971381170,8254,RingoDev,2025-02-26T10:56:53Z,"My thinking here was to make it ""easy"" to adopt the flag, without worrying about external factors breaking CLI runs.
But as you said, as an experimental feature that might make sense to be more verbose about.

Will propagate such errors"
1971400020,8254,RingoDev,2025-02-26T11:10:40Z,Done
1971401214,8254,RingoDev,2025-02-26T11:11:35Z,"Is that a general suggestion?

I saw that pattern in multiple parts of the code I believe. Nevertheless changed it with your suggestion"
1971401461,8254,RingoDev,2025-02-26T11:11:46Z,Done
1971401835,8254,RingoDev,2025-02-26T11:12:05Z,Done
1971423885,8254,RingoDev,2025-02-26T11:29:48Z,"This now raises a question for me. If this is an experimental feature and somebody explicitly scans an SBOM with `--vex sbom-ref` shouldn't trivy throw an error if it finds no valid external references in the scanned SBOM?

Similar to how it is now throwing an error if e.g. a server responds with 404."
1972764312,8254,knqyf263,2025-02-27T03:19:16Z,">This now raises a question for me. If this is an experimental feature and somebody explicitly scans an SBOM with --vex sbom-ref shouldn't trivy throw an error if it finds no valid external references in the scanned SBOM?

Good question. The `--vex sbom-ref` flag tells Trivy that it should use any VEX reference found within the SBOM. Therefore, enabling it even if it's not yet clear whether external VEX references exist in the SBOM is expected behavior. Conversely, it would be unexpected if external references were silently ignored even when present.

Similarly, the `-vex oci` flag is designed to use any available VEX attestations. If no attestation is found, it [doesn't trigger an error](https://github.com/aquasecurity/trivy/blob/052afbe26a7e48bfcda044b20bbcfd2c76ca55d7/pkg/vex/oci.go/#L45-L48); however, if attestation is found but contains issues, an error will be returned.

That said, as you mentioned, if it is essential that external references are reliably loaded, returning an error might be more appropriate. This is something we can reconsider based on future community feedback. At the very least, it would be advisable to display a log message that no vex references are found for now."
1169469499,4047,DmitriyLewen,2023-04-18T04:14:48Z,"`types2` is a bit confusing. We usually use `ftypes` for `fanal/types`.
```suggestion
	ftypes ""github.com/aquasecurity/trivy/pkg/fanal/types""
	""github.com/aquasecurity/trivy/pkg/types""
```"
1169489268,4047,DmitriyLewen,2023-04-18T04:59:31Z,"i have idea for setting priority.
What if we will use functions for options.
something like that:
```suggestion
type Option func(imageName string, ref name.Reference) (ftypes.Image, func(), error)

var runtimeFuncs = map[types.Runtime]Option{
	types.DockerRuntime: func(imageName string, ref name.Reference) (ftypes.Image, func(), error) {
		return tryDockerDaemon(imageName, ref)
	},
}

func SelectRuntime(runtimes types.Runtimes) []Option {
	var opts []Option
	for _, runtime := range runtimes {
		opts = append(opts, runtimeFuncs[runtime])
	}

	return opts
}

func NewContainerImage(ctx context.Context, imageName string, opt ftypes.RemoteOptions, opts ...Option) (ftypes.Image, func(), error) {
	var errs error
	var nameOpts []name.Option
	if opt.Insecure {
		nameOpts = append(nameOpts, name.Insecure)
	}
	ref, err := name.ParseReference(imageName, nameOpts...)
	if err != nil {
		return nil, func() {}, xerrors.Errorf(""failed to parse the image name: %w"", err)
	}

	for _, opt := range opts {
		img, cleanup, err := opt(imageName, ref)
		if err == nil {
			// Return v1.Image if the image is found in Docker Engine
			return img, cleanup, nil
		}
		errs = multierror.Append(errs, err)
	}

	return nil, func() {}, errs
}
```"
1169953631,4047,pmengelbert,2023-04-18T12:22:39Z,Thanks for the suggestions! I implemented them with some slight changes. Please let me know what you think and hit resolve if no further comments
1172095155,4047,DmitriyLewen,2023-04-20T05:26:08Z,"we need this option only for `image` mode.
You can disable flag for other modes.
https://github.com/aquasecurity/trivy/blob/cc18f92cf39534a2220883722fb26dc1a9e27fda/pkg/commands/app.go#L299"
1172095743,4047,DmitriyLewen,2023-04-20T05:27:18Z,"```suggestion
      --runtime strings                Runtime(s) to use (docker,containerd,podman,remote) (default priority [docker,containerd,podman,remote])
```"
1172101226,4047,DmitriyLewen,2023-04-20T05:37:44Z,"wdyt?
```suggestion
func NewContainerImage(ctx context.Context, imageName string, opt types.RemoteOptions, runtimes []RuntimeFunc) (types.Image, func(), error) {
```"
1172103270,4047,DmitriyLewen,2023-04-20T05:41:01Z,It is integration test. Don't need to remove this.
1172105334,4047,DmitriyLewen,2023-04-20T05:44:33Z,"We can set multiple runtimes
```suggestion
      --runtimes strings                Runtime(s) to use (docker,containerd,podman,remote) (default [docker,containerd,podman,remote])
```"
1172109467,4047,DmitriyLewen,2023-04-20T05:52:01Z,"if I understand correctly - if you return this, then broken test will be fixed."
1172110917,4047,DmitriyLewen,2023-04-20T05:54:33Z,Nice work!
1172568859,4047,pmengelbert,2023-04-20T13:12:26Z,"I moved this flag over to the `image` group, and regenerated the docs."
1172571643,4047,pmengelbert,2023-04-20T13:14:22Z,"Both of these are taken care of.

The format `(default <...>)` in the CLI help is unalterable. To keep docs consistent with the CLI help, I have the following:
```
Runtime(s) to use, in priority order (docker,containerd,podman,remote) (default [docker,containerd,podman,remote])
```
"
1172571844,4047,pmengelbert,2023-04-20T13:14:31Z,Done
1172572527,4047,pmengelbert,2023-04-20T13:15:04Z,"I restored this, but the same test is failing when I run `mage test:unit`. Actually, it's failing for me (locally) even on the `main` branch."
1173283994,4047,DmitriyLewen,2023-04-21T04:09:11Z,It make sense. Good solution.
1173287736,4047,DmitriyLewen,2023-04-21T04:17:33Z,"It should help with broken test
```suggestion
			runtimes, err := WithRuntimes(types.AllRuntimes)
			assert.NoError(t, err)
			img, cleanup, err := NewContainerImage(context.Background(), tt.args.imageName, tt.args.option, runtimes)
```"
1176185339,4047,knqyf263,2023-04-25T08:30:51Z,"It should be defined under ImageOptions.
https://github.com/aquasecurity/trivy/blob/9bc326909fce6f5a591eaded17a26a0560d4ad8d/pkg/fanal/types/image.go#L17-L22
"
1176185511,4047,knqyf263,2023-04-25T08:30:59Z,"It should be defined under ImageOptions.
https://github.com/aquasecurity/trivy/blob/9bc326909fce6f5a591eaded17a26a0560d4ad8d/pkg/fanal/types/image.go#L17-L22
"
1176192158,4047,knqyf263,2023-04-25T08:36:33Z,I think it can be done in NewContainerImage. Is there any benefit in exporting this function?
1176625369,4047,pmengelbert,2023-04-25T14:43:25Z,"Unit tests are passing now, thanks!"
1176627258,4047,pmengelbert,2023-04-25T14:44:45Z,"I moved this to `NewContainerImage`, and made the function private. The function was also renamed"
1176627394,4047,pmengelbert,2023-04-25T14:44:50Z,done
1176627527,4047,pmengelbert,2023-04-25T14:44:55Z,done
1718139700,7340,knqyf263,2024-08-15T08:50:25Z,"We don't include file paths in PURL anymore. If it remains somewhere, it should be deleted."
1718280189,7340,afdesk,2024-08-15T11:22:48Z,"ok, I'm removing it"
1724303576,7340,knqyf263,2024-08-21T03:10:06Z,"Can we re-use the existing json, `fluentd-multiple-lockfiles-cyclonedx.json`? You can change this file to use UUID in BOM-Ref."
1726337578,7340,afdesk,2024-08-22T04:53:57Z,"the testcase is updated `fluentd-multiple-lockfiles-cyclonedx.json`. 
I wanted to use `fluentd-multiple-lockfiles.cdx.json.golden` also, but this cdx result is a large, because it's result for `fluentd-multiple-lockfiles.tar.gz`. `fluentd-multiple-lockfiles-cyclonedx.json` is shorter. 
so I've created a new golden file."
1728471863,7340,DmitriyLewen,2024-08-23T07:00:09Z,"input and output bomrefs for OS are not equial:
https://github.com/aquasecurity/trivy/blob/bfdf5cfc305c6617e1030ea16b5632c9137c916e/integration/testdata/fixtures/sbom/fluentd-multiple-lockfiles-cyclonedx.json#L107-L110"
1738268849,7340,DmitriyLewen,2024-08-30T09:09:45Z,Looks like we can remove this
1738277102,7340,DmitriyLewen,2024-08-30T09:14:55Z,"IIRC we correctly store BomRefs for the `Root` component and packages.
Do we need this check for all types? maybe we can do this check only for `Application` and `OperatingSystem` types?"
1738368938,7340,afdesk,2024-08-30T10:13:46Z,"it seems that no, we have to allocate memory "
1738387834,7340,afdesk,2024-08-30T10:30:38Z,done
1738411842,7340,afdesk,2024-08-30T10:51:01Z,updated
1760537861,7340,DmitriyLewen,2024-09-16T05:07:57Z,"It doesn't work for SPDX.

I thought about using SPDX-ID as bom-ref (see https://github.com/aquasecurity/trivy/pull/6907#discussion_r1665155622)."
1760542383,7340,DmitriyLewen,2024-09-16T05:15:27Z,"It looks like we only use fakeUUID for `serialNumber`:
https://github.com/aquasecurity/trivy/blob/8b333099c454c1aa11296c0c910a15317814adb6/integration/testdata/fluentd-multiple-lockfiles-reused.cdx.json.golden#L5

This might be confusing (that we don't overwrite other UUID's).
Maybe we just don't check `serialNumber`?
@knqyf263 @afdesk wdyt?"
1760544255,7340,DmitriyLewen,2024-09-16T05:18:43Z,"nit:
`AddVulnerability` and `AddVulnerabilities` use slightly different logic:
- AddVulnerability adds vulnerability to slice of existing vulnerabilities.
- AddVulnerabilities preserves vulnerabilities if component doesn't contain vulnerabilities. This behavior is more similar to `SetVulnerabilities`."
1760553931,7340,DmitriyLewen,2024-09-16T05:35:18Z,"also I realized that there might be issues with non-Trivy CycloneDX reports:
`Bom-Ref` is an optional field - https://cyclonedx.org/docs/1.6/json/#components_items_bom-ref
So there might be a case where `bom-ref` doesn't exist - so we won't add vulnerabilities for these components."
1760567568,7340,knqyf263,2024-09-16T05:56:20Z,Agree. Fixed in https://github.com/aquasecurity/trivy/pull/7340/commits/67961d7e7488e8292f43a5a1fabc41ad93aa7fad
1760571481,7340,knqyf263,2024-09-16T06:00:39Z,">Bom-Ref is an optional field - https://cyclonedx.org/docs/1.6/json/#components_items_bom-ref

It's interesting. I was not aware of that. However, `vulnerabilities.affects.ref` must be BOM-Ref. Do you think we should generate BOM-Refs in this case?
https://cyclonedx.org/docs/1.6/json/#vulnerabilities_items_affects_items_ref"
1760573910,7340,knqyf263,2024-09-16T06:03:56Z,">It doesn't work for SPDX.

Hmm. I didn't think SPDX supports vulnerabilities, but I just remember we added support. I'll think about it.
https://github.com/aquasecurity/trivy/pull/7213"
1760587277,7340,DmitriyLewen,2024-09-16T06:20:35Z,"> However, vulnerabilities.affects.ref must be BOM-Re

This is a weird case. I still don't understand why `Bom-ref` is not a required field.

Looks like we need to separate the possible cases:
- sbom result without vulnerabilities
- `vuln` scanner is disabled - we can skip adding bom-ref to preserve the scanned sbom file as much as possible.
- Trivy found no vulnerabilities - I'm not sure what we should do. I'm more inclined to think that we still need to add bom-refs (use the same logic when `vuln` scanner is enabled)
- sbom result with vulnerabilities - `vulnerabilities.affects.ref` is a required field => we need to populate this field => we need to use the same `bom-ref` for the linked component."
1760594478,7340,knqyf263,2024-09-16T06:29:07Z,"Yes, I agree BOM-Ref should be required. 

>Looks like we need to separate the possible cases:

To keep things simple, IMO, it is better to generate a BOM-Ref if it's missing in CycloneDX that Trivy is scanning."
1760598184,7340,DmitriyLewen,2024-09-16T06:33:17Z,"since I don't have statistics on how often CycloneDX files without bom-refs are used - it's hard for me to make a choice.
I'm not against your decision. Let's do it this way and get feedback from users."
1760682671,7340,knqyf263,2024-09-16T07:49:26Z,"I wanted to reuse the SBOM of the input as much as possible, but I found that my implementation did not work well when using `--pkg-relationships` or `--pkg-types` with `trivy sbom`."
1764836395,7340,knqyf263,2024-09-18T10:48:23Z,The serial number is generated by UUID. I think it's better to confirm it is generated as expected rather than ignoring it.
1480971294,6072,DmitriyLewen,2024-02-07T06:52:03Z,"Let's stay `vuln` scanner as default for SBOM.
```suggestion
	scanners.Values = xstrings.ToStringSlice(types.Scanners{
		types.VulnerabilityScanner,
		types.LicenseScanner,
	})
	scanners.Default = xstrings.ToStringSlice(types.Scanners{
		types.VulnerabilityScanner,
	})
```"
1480971622,6072,DmitriyLewen,2024-02-07T06:52:31Z,use `mage docs:generate` to update docs.
1493833622,6072,bedla,2024-02-18T19:54:41Z,"this change is here because of `\` and `/` differences between Linux and Windows filesystems. Otherwise tests were failing because of wrong path generated.
Do you think that its change is ok?"
1494002905,6072,DmitriyLewen,2024-02-19T04:47:57Z,Version `1.5` is currently latest.
1494004402,6072,DmitriyLewen,2024-02-19T04:49:45Z,We use SBOM files generated with Trivy for testdata.
1494008510,6072,DmitriyLewen,2024-02-19T04:54:31Z,"hmm... This PR doesn't change related code.
What test failed?"
1494011317,6072,DmitriyLewen,2024-02-19T05:00:26Z,mistake?
1494011899,6072,DmitriyLewen,2024-02-19T05:01:45Z,"It should be `cyclonedx`, right?
```suggestion
				artifactType: ftypes.ArtifactType(""cyclonedx""),
```"
1494944304,6072,bedla,2024-02-19T19:14:00Z,"hmm, interesting I am not aware of it ... let me check and fix it."
1494952606,6072,bedla,2024-02-19T19:27:55Z,"Test I am udpating `sbom_test.go` is failing without that change, because of Windows filesystem.

<img width=""444"" alt=""image"" src=""https://github.com/aquasecurity/trivy/assets/457542/13c02f0e-be2f-4978-9bc2-12033124a74f"">
"
1495224827,6072,DmitriyLewen,2024-02-20T04:17:25Z,We run `integration` tests only for linux system - https://github.com/aquasecurity/trivy/blob/74dc5b6804c9285acc86e334add5383ac144725d/.github/workflows/test.yaml#L69
1496840483,6072,DmitriyLewen,2024-02-21T03:23:17Z,"I think there is no need for so many dependencies for this test.
3-4 will be enough"
1519400651,6072,DmitriyLewen,2024-03-11T09:33:58Z,looks like you added this by accident
1519401844,6072,DmitriyLewen,2024-03-11T09:34:41Z,just reminding you about this
1519426315,6072,bedla,2024-03-11T09:48:19Z,I will remove it ... I use GoLand and probably it was added by it / I do not know which action fired it.
1517222192,6275,knqyf263,2024-03-08T06:36:23Z,"The ""Contribution"" section is more generic, like how to open PRs. This specific documentation should be located under ""Compliance"" or something similar.
https://aquasecurity.github.io/trivy/v0.49/docs/compliance/compliance/"
1546241927,6275,itaysk,2024-04-01T11:41:34Z,"maybe instead of this, we ask the submitter to refer to the spec definition in the PR description, and we can decide if it's good for us or not when reviewing"
1546254900,6275,itaysk,2024-04-01T12:02:52Z,"it's a good idea to define a naming convention. 
""provider-resource"" not sure this is the best terminology, also very cloud specific (and the compliance feature is not). I think in this case the entire ""aws-eks"" is the subject and there's no need to specify it's components in the generic template. another example there will be CIS specs for specific k8s flavor (like open shift), which this needs to appear in the name but I don't think in the template. 
so I would suggest to simplify the template as `subject-spec.yaml` which means: specify the subject of the compliance (what are we evaluating?). if it's a cloud service or another example of a subcomponent, include the parent too, for example `aws-eks`. if the spec is specific to a version, optionally include it after the subject, e.g `k8s-1.21`. spec is a short name for the compliance framework that people can identify, e.g `cis`. if the spec is versioned, include the version too `cis-1.1`. wdyt?"
1546257421,6275,itaysk,2024-04-01T12:06:40Z,"IMO there's too much duplication with the general compliance documentation, this should be about how to upstream a compliance, not the complete guide to write a compliance."
1546259247,6275,itaysk,2024-04-01T12:08:49Z,compliance are not specific to k8s. fine to include an example just generalize the language please
1546260902,6275,itaysk,2024-04-01T12:10:32Z,there's more to say about vulnerability checks and node checks
1548022484,6275,AnaisUrlichs,2024-04-02T14:38:03Z,but then they would have already put the work into creating the compliance spec and we might potentially tell them we don't want it in Trivy?
1548032842,6275,AnaisUrlichs,2024-04-02T14:44:17Z,"What do you mean with this sentence:
> which this needs to appear in the name but I don't think in the template.

""provider-resource-spectype-version.yaml"" the reasoning here was is that we call it provider and resource/service in other parts of the source code and docs 

> if it's a cloud service or another example of a subcomponent, include the parent too, for example aws-eks

The spec type is specific to a benchmark version e.g. CIS, I don't think it makes much sense to include the K8s version as that won't tell people more about the compliance scan and in some cases CIS 
specs correspond to different k8s versions @chen-keinan thoughts?

recent CIS specs for reference 
<img width=""481"" alt=""Screenshot 2024-04-02 at 15 42 58"" src=""https://github.com/aquasecurity/trivy/assets/33576047/065546b4-8284-4ff7-8db0-b285c3dd1a35"">"
1548035264,6275,AnaisUrlichs,2024-04-02T14:44:59Z,Does this relate to line 19 or to the minimum spec structure?
1548036605,6275,AnaisUrlichs,2024-04-02T14:45:23Z,"ah yes, of course "
1548072069,6275,AnaisUrlichs,2024-04-02T15:03:53Z,"I have moved some to the normal compliance documentation but I am thinking about the following instead:
- divide the compliance docs into the following two separate sections in the table of content: built-in compliance and custom compliance. The custom compliance would then also detail how to contribute the custom compliance check to Trivy "
1548072723,6275,AnaisUrlichs,2024-04-02T15:04:20Z,@chen-keinan  I need your help here
1551318753,6275,itaysk,2024-04-04T09:26:44Z,"> What do you mean with this sentence

For example, that opehshift needs to appear in the file name, but doesn't have to have a placeholder in the naming convention template. we can ignore this sentence :)

> we call it provider and resource/service in other parts of the source code and docs

I think this is true only to cloud. for example, I wrote a k8s compliance (PSS) and didn't have to know about service/provider in trivy and didn't use it in the name

> I don't think it makes much sense to include the K8s version

OK, makes sense. but just to clarify, this isn't what text you quoted says ""include the parent too, for example aws-eks"""
1551321288,6275,itaysk,2024-04-04T09:28:33Z,"> Does this relate to line 19 or to the minimum spec structure?

Minimum spec structure (and what follows)"
1551324032,6275,itaysk,2024-04-04T09:30:23Z,"> table of content: built-in compliance and custom compliance

not sure I understand how your suggestion is different than existing?
<img width=""149"" alt=""image"" src=""https://github.com/aquasecurity/trivy/assets/1161307/d803d18f-459e-4b2c-b9cf-c729f1083e24"">
"
1595202797,6275,AnaisUrlichs,2024-05-09T09:25:17Z,@chen-keinan :) help
1595295766,6275,chen-keinan,2024-05-09T10:54:11Z,"Terminology could be confusing, could be `Custom Compliance Specs` is more accurate ?   "
1595296296,6275,chen-keinan,2024-05-09T10:54:41Z,"```suggestion
Trivy supports several different compliance specs. The details on compliance scanning with Trivy are provided in the [compliance documentation](../../docs/compliance/compliance.md).
```"
1595314100,6275,chen-keinan,2024-05-09T11:14:40Z,"`trivy-policies` repo on github name has been changed to `trivy-checks`, change should apply to all references in doc"
1595331145,6275,chen-keinan,2024-05-09T11:34:10Z,in example I would put (Manual) as there is no check (nil)
1603561683,6275,AnaisUrlichs,2024-05-16T15:09:04Z,But people are writing a Rego Check and we referred to Rego files as Checks? What would be the difference then between the Spec and the Rego Check? 🤔 
1606762860,6275,chen-keinan,2024-05-20T13:11:19Z,"```suggestion
The existing compliance specs in Trivy are located under the `trivy-checks/specs/compliance/` directory ([Link](https://github.com/aquasecurity/trivy-checks/tree/main/specs/compliance)).
```"
1606763327,6275,chen-keinan,2024-05-20T13:11:44Z,"```suggestion
Create a new file under `trivy-checks/specs/compliance/` and name the file in the format of ""provider-resource-spectype-version.yaml"". For example, the file name for AWS CIS Benchmarks for EKS version 1.4 is: `aws-eks-cis-1.4.yaml`. Note that if the compliance spec is not specific to a provider, the `provider` field can be ignored.
```"
1606763740,6275,chen-keinan,2024-05-20T13:12:07Z,"```suggestion
1. The check is available in Trivy, as part of the `trivy-checks` and can be referenced in the Compliance Spec
```"
1606764081,6275,chen-keinan,2024-05-20T13:12:27Z,"```suggestion
Trivy has a comprehensive list of checks as part of its misconfiguration scanning. These can be found in the `trivy-policies/checks` directory ([Link](https://github.com/aquasecurity/trivy-checks/tree/main/checks)). If the check is present, the `AVD_ID` and other information from the check has to be used.
```"
1606764348,6275,chen-keinan,2024-05-20T13:12:42Z,"```suggestion
Note: Take a look at the more generic compliance specs that are already available in Trivy. If you are adding new compliance spec to Kubernetes e.g. AWS EKS CIS Benchmarks, chances are high that the check you would like to add to the new spec has already been defined in the general `k8s-ci-v.000.yaml` compliance spec. The same applies for creating specific Cloud Provider Compliance Specs and the [generic compliance specs](https://github.com/aquasecurity/trivy-checks/tree/main/specs/compliance) available. 
```"
1606764671,6275,chen-keinan,2024-05-20T13:12:58Z,"```suggestion
This check can be found in the general K8s CIS Compliance Benchmark: `k8s-cis-1.23.yaml` ([Link](https://github.com/aquasecurity/trivy-checks/blob/31e779916f3863dd74a28cee869ea24fdc4ca8c2/specs/compliance/k8s-cis-1.23.yaml#L480))
```"
1606764859,6275,chen-keinan,2024-05-20T13:13:09Z,"```suggestion
If the check does not already exist in the [Aqua Vulnerability Database](https://avd.aquasec.com/) (AVD) and is not part of the trivy-checks, the fields in the compliance spec for the check have to be populated manually. This is done by referencing the information in the official compliance specification.
```"
1606765077,6275,chen-keinan,2024-05-20T13:13:19Z,"```suggestion
- The `checks` is in this case `null` as the check is not currently present in the AVD and does not have a check in the [trivy policies](https://github.com/aquasecurity/trivy-checks/tree/main/checks) repository
```"
1606765297,6275,chen-keinan,2024-05-20T13:13:30Z,"```suggestion
#### Contributing new checks to trivy-checks
```"
1606765587,6275,chen-keinan,2024-05-20T13:13:45Z,"```suggestion
- The `checks` is in this case `null` as the check is not currently present in the AVD and does not have a check in the [trivy policies](https://github.com/aquasecurity/trivy-checks/tree/main/checks) repository
```"
1606766120,6275,chen-keinan,2024-05-20T13:14:10Z,"```suggestion
All of the Compliance Specs currently available in Trivy can be found in the `trivy-checks/specs/compliance/` directory ([Link](https://github.com/aquasecurity/trivy-checks/tree/main/specs/compliance)).
```"
1597896405,6674,DmitriyLewen,2024-05-13T05:31:58Z,"This description is confusing.
My first thought is that this command updates the plugin.
My second thought is that this command downloads the `trivy-plugins-index` repository in its entirety.

We need to come up with the most clear description possible to avoid confusion with `upgrade` command
It’s also worth pointing out that we are only updating the `cachedir/trivy/plugin/index.yaml` file.


"
1597899114,6674,DmitriyLewen,2024-05-13T05:36:52Z,"You use slice of args:
https://github.com/aquasecurity/trivy/blob/b69a5a819786baee3a2844c8e44fadad3412a63f/pkg/plugin/manager.go#L76
Therefore we must support more than 1 argument.
"
1597900599,6674,DmitriyLewen,2024-05-13T05:39:31Z,"```suggestion
```"
1597901119,6674,DmitriyLewen,2024-05-13T05:40:18Z,I thought it might be worth mentioning that we search by plugin names and descriptions.
1597903692,6674,DmitriyLewen,2024-05-13T05:44:09Z,"line 786:
`			Use:                   ""run NAME | URL | FILE_PATH"",`"
1597906236,6674,DmitriyLewen,2024-05-13T05:48:00Z,"```suggestion
			Args:                  cobra.NoArgs,
```"
1597909227,6674,DmitriyLewen,2024-05-13T05:52:16Z,Can we use multiple words for searching?
1598028398,6674,knqyf263,2024-05-13T07:52:49Z,It should be ok as people are familiar with `apt-get update`.
1598029478,6674,knqyf263,2024-05-13T07:53:37Z,">It’s also worth pointing out that we are only updating the cachedir/trivy/plugin/index.yaml file.

This is mentioned.

> Update the local copy of the plugin index"
1598068993,6674,knqyf263,2024-05-13T08:23:13Z,"Not only `apt`, but also [brew](https://docs.brew.sh/Manpage#update-options), [krew](https://krew.sigs.k8s.io/docs/user-guide/quickstart/), and many other tools. But we can still update it if it confuses users."
1598122115,6674,DmitriyLewen,2024-05-13T09:01:00Z,"my concern is that we will change the logic for `update`.
these changes may confuse users who currently use plugins.
 "
1598215188,6674,knqyf263,2024-05-13T10:04:09Z,"No, I just passed through the CLI arguments, but it looks better to pass one argument for clarity. Fixed in https://github.com/aquasecurity/trivy/pull/6674/commits/d2f2e963c3bb63993da8cfb922fb1a5c9cf1261b."
1598215809,6674,knqyf263,2024-05-13T10:04:44Z,You're right. Thanks. Deleted https://github.com/aquasecurity/trivy/pull/6674/commits/2fcd08ba92d89ad24f6ced49adc8c32f20fff731
1598223396,6674,knqyf263,2024-05-13T10:11:05Z,Added https://github.com/aquasecurity/trivy/pull/6674/commits/39ce40e6b5b6eee60bda488f10585a8aa06fba12
1599358608,6674,DmitriyLewen,2024-05-14T04:22:43Z,Let's also add log about the removal of plugin.
1599369387,6674,DmitriyLewen,2024-05-14T04:39:20Z,"IIUC we need to add `SilenceUsage` to all plugin flags to avoid printing usage information in case of error.
e.g.:
```
➜  ./trivy plugin search            
2024-05-14T10:30:21+06:00       ERROR   [plugin] The plugin index is not found. Please run 'trivy plugin update' to download the index.
Usage:
  trivy plugin search [KEYWORD]

Flags:
  -h, --help   help for search

Global Flags:
      --cache-dir string          cache directory (default ""/Users/work/Library/Caches/trivy"")
  -c, --config string             config path (default ""trivy.yaml"")
  -d, --debug                     debug mode
      --generate-default-config   write the default config to trivy-default.yaml
      --insecure                  allow insecure server connections
  -q, --quiet                     suppress progress bar and log output
      --timeout duration          timeout (default 5m0s)
  -v, --version                   show version

2024-05-14T10:30:21+06:00       FATAL   Fatal error     plugin index not found: unable to open the index file: open /Users/work/Library/Caches/trivy/plugin/index.yaml: no such file or directory

```"
1599382174,6674,DmitriyLewen,2024-05-14T05:01:43Z,"```suggestion
	m.logger.InfoContext(ctx, ""Upgrading plugin..."", log.String(""name"", name))
```"
1599388437,6674,DmitriyLewen,2024-05-14T05:11:30Z,Add this page to [config file](https://github.com/aquasecurity/trivy/blob/150a77313e980cd63797a89a03afcbc97b285f38/mkdocs.yml#L158-L164) please.
1599388488,6674,DmitriyLewen,2024-05-14T05:11:36Z,Add this page to [config file](https://github.com/aquasecurity/trivy/blob/150a77313e980cd63797a89a03afcbc97b285f38/mkdocs.yml#L158-L164) please.
1599392277,6674,DmitriyLewen,2024-05-14T05:17:41Z,"numbering is broken.
```suggestion
    ```bash
    $ trivy plugin update
    ```

2. Discover Trivy plugins available on the plugin index:

    ```bash
    $ trivy plugin search
    NAME                 DESCRIPTION                                                  MAINTAINER           OUTPUT
    aqua                 A plugin for integration with Aqua Security SaaS platform    aquasecurity
    kubectl              A plugin scanning the images of a kubernetes resource        aquasecurity
    referrer             A plugin for OCI referrers                                   aquasecurity           ✓
    [...]
    ```

3. Choose a plugin from the list and install it:

    ```bash
    $ trivy plugin install referrer
    ```

4. Use the installed plugin:

    ```bash
    $ trivy referrer --help
    ```

5. Keep your plugins up-to-date:

    ```bash
    $ trivy plugin upgrade
    ```

6. Uninstall a plugin you no longer use:

    ```bash
    trivy plugin uninstall referrer
    ``` 
```"
1599396241,6674,DmitriyLewen,2024-05-14T05:23:58Z,"```suggestion
```"
1599423327,6674,knqyf263,2024-05-14T05:59:59Z,Thanks!
1599436625,6674,knqyf263,2024-05-14T06:15:40Z,Added https://github.com/aquasecurity/trivy/pull/6674/commits/2fe4f21ad27392e63b0115413a8d83484737a19d
1599436789,6674,knqyf263,2024-05-14T06:15:52Z,Added https://github.com/aquasecurity/trivy/pull/6674/commits/1835268ff46527a693fb3635c2fb65067e5f4725
1599437009,6674,knqyf263,2024-05-14T06:16:05Z,Fixed https://github.com/aquasecurity/trivy/pull/6674/commits/60f4848f546f7e9de9ccd58f96762faebac4b8b2
1599437275,6674,knqyf263,2024-05-14T06:16:24Z,Grouped plugin subcommands https://github.com/aquasecurity/trivy/pull/6674/commits/a240e5268c8b8040be13dd5624c9acdb8dbad2f1
1599437321,6674,knqyf263,2024-05-14T06:16:28Z,Grouped plugin subcommands https://github.com/aquasecurity/trivy/pull/6674/commits/a240e5268c8b8040be13dd5624c9acdb8dbad2f1
1898281725,8178,knqyf263,2024-12-27T05:58:28Z,"Each artifact must have `Clean()` method so that the caller can be responsible for cleanup. What if moving that to `Clean()`? It might help in case `Inspect()` is called several times (we don't assume such usage, though)."
1898282403,8178,knqyf263,2024-12-27T06:00:17Z,"nit: Trivy already has several kinds of cache, like scan cache, cache assets, etc. `cacheDir` looks like the root directory of the cache directory controlled by `--cache-dir`. I'd rename it to the explicit name.

```suggestion
	layerCacheDir string
```"
1898373753,8178,DmitriyLewen,2024-12-27T08:57:28Z,"currently:
```
2024-12-27T14:56:40+06:00       DEBUG   [image] Detected diff ID        diff_ids=[sha256:16113d51b7181f20135f51e8ffbaead20a7671cd783017601f198748ce8a8ebf]
Error: uncompressed image size 9.11MB exceeds maximum allowed size 1MB

```
let's use log.logger "
1898374447,8178,DmitriyLewen,2024-12-27T08:58:57Z,"We can wait for feedback from users.
But perhaps some users will want to set custom exit code."
1898375950,8178,DmitriyLewen,2024-12-27T09:01:40Z,"I think it's better to use `trivy` in the cache directory name. This is necessary so that users can understand what directory it is and delete it (if necessary)
```suggestion
	layerCacheDir, err := os.MkdirTemp("""", ""Trivy-layers-cache"")
```"
1898376044,8178,DmitriyLewen,2024-12-27T09:01:52Z,"```suggestion
		return nil, xerrors.Errorf(""failed to create a cache layers temp dir: %w"", err)
```"
1898379811,8178,DmitriyLewen,2024-12-27T09:09:17Z,"Correct me if I'm wrong:

If layerCacheDir already contains a layer file - we'll still save the layer to that file (again):
https://github.com/aquasecurity/trivy/blob/bba405b6f2efce6e051aa02e0bb8d477961a1307/pkg/fanal/artifact/image/image.go#L446-L449"
1898390075,8178,nikpivkin,2024-12-27T09:24:51Z,we always delete it in case of an error or a successful scan.
1898477892,8178,nikpivkin,2024-12-27T12:15:11Z,Done https://github.com/aquasecurity/trivy/pull/8178/commits/bba405b6f2efce6e051aa02e0bb8d477961a1307
1898478019,8178,nikpivkin,2024-12-27T12:15:28Z,Done https://github.com/aquasecurity/trivy/pull/8178/commits/bba405b6f2efce6e051aa02e0bb8d477961a1307
1898482603,8178,nikpivkin,2024-12-27T12:24:31Z,This is a temporary cache that is removed in the case of an error or when the scan completes
1898536002,8178,nikpivkin,2024-12-27T14:16:01Z,Done https://github.com/aquasecurity/trivy/pull/8178/commits/e3a827b343e775ed0485002eb37b667b53b3ed1a
1898536151,8178,nikpivkin,2024-12-27T14:16:19Z,Done https://github.com/aquasecurity/trivy/pull/8178/commits/e3a827b343e775ed0485002eb37b667b53b3ed1a
1919686134,8178,knqyf263,2025-01-17T07:41:52Z,"We can delete the cache directory if `checkImageSize` returns an error, but how about other errors? If I understand correctly, `Artifact.Clean()` will not be called.

So, should we call the defer function before handling the error?
https://github.com/aquasecurity/trivy/blob/ec124bd7be504700f386af0136fa977abc0a9d21/pkg/scanner/scan.go#L160-L165"
1919816753,8178,nikpivkin,2025-01-17T09:32:00Z,"`Clean` takes artifactInfo, and if we call it before the error is checked, the artifactInfo will not be valid. Maybe we should clear the cache inside `Inspect` if any error occurred?

```go
	defer func() {
		if err != nil {
			if rerr := os.RemoveAll(a.layerCacheDir); rerr != nil {
				log.Error(""Failed to remove layer cache"", log.Err(rerr))
			}
		}
	}()
```"
1919825398,8178,knqyf263,2025-01-17T09:38:31Z,"I thought using `Clean()` is more straightforward, but you're actually right. We don't need this cache after `Inspect` is complete. It makes more sense to delete it in the method."
1923444051,8178,knqyf263,2025-01-21T10:16:51Z,"Aqua is still checking their logic to calculate the image size, so the flag behavior is subject to change. I would mark it as experimental."
1923800104,8178,nikpivkin,2025-01-21T14:11:31Z,Done https://github.com/aquasecurity/trivy/pull/8178/commits/9c46e08db4dfee8d89a93ab2263541ac7e270048
959273897,2589,chen-keinan,2022-08-31T07:56:37Z,"would it make sense to replace this multiple (will be much clear) `if` and `continue` with `switch case` ,  example :
```
switch {
		case slices.Contains(securityChecks, types.SecurityCheckRbac) && rbacResource(misConfig):
			rbacAssessment = append(rbacAssessment, misConfig)
		case infraResource(misConfig) :
			workload, infra := splitInfraAndWorkloadResources(misConfig)
			if slices.Contains(securityChecks, types.SecurityCheckK8SInfra) {
				infraMisconfig = append(infraMisconfig, infra)
			}
			if slices.Contains(securityChecks, types.SecurityCheckConfig) {
				workloadMisconfig = append(workloadMisconfig, workload)
			}
		case slices.Contains(securityChecks, types.SecurityCheckConfig) && !rbacResource(misConfig) :
			workloadMisconfig = append(workloadMisconfig, misConfig)
		}
``` "
959284806,2589,chen-keinan,2022-08-31T08:07:55Z,"nit:
```suggestion
			if strings.HasPrefix(m.ID, ""KCV"") {
				infraMisconfigs = append(infraMisconfigs, m)
				continue
			} 
			workloadMisconfigs = append(workloadMisconfigs, m)
			
```"
959287957,2589,chen-keinan,2022-08-31T08:11:06Z,"I'm using rancher desktop and did not got infra result at all , hope our checks take  under consideration these use cases"
960098891,2589,josedonizetti,2022-08-31T23:22:51Z,"what do you see when you do `kubectl get pods -n kube-system` on rancher? (rancher is not working on my computer not sure why, but kind/minikube/kops/k3 are all based on kubeadm, which will have all k8s components under `kube-system`)"
960478978,2589,chen-keinan,2022-09-01T10:24:24Z,"```
NAME                                      READY   STATUS    RESTARTS   AGE
coredns-7448499f4d-4bsnw                  1/1     Running   3          11d
metrics-server-86cbb8457f-xtfv7           1/1     Running   3          11d
local-path-provisioner-5ff76fc89d-wzw7x   1/1     Running   5          11d
```"
960500624,2589,josedonizetti,2022-09-01T10:51:00Z,So rancher doesn’t expose the apiserver? Controller manager? Or it is in another ns?
991946695,2589,chen-keinan,2022-10-11T08:01:32Z,"nit:
```suggestion
func shouldScanVulnsOrSecrets(securityChecks []string) bool {
```"
991950830,2589,chen-keinan,2022-10-11T08:02:53Z,"nit:
```suggestion
func ShouldScanMisconfigOrRbac(securityChecks []string) bool {
```"
1002721946,2589,knqyf263,2022-10-23T14:44:46Z,nit: There are `by default` twice.
934118812,2607,DmitriyLewen,2022-08-01T03:55:49Z,"I'm not sure if commit suffix needs to be trimmed here.
Versions made from tag and another commit must have different version numbers.
This can be confusing.

I think we can trim this suffix in the check:
https://github.com/aquasecurity/trivy/blob/3c9eed53031efa7fa5448ba307df8ba38c53f2cc/pkg/commands/artifact/run.go#L471-L476"
934220481,2607,knqyf263,2022-08-01T07:31:49Z,">Versions made from tag and another commit must have different version numbers.

Could you elaborate on that?"
934228926,2607,Moulick,2022-08-01T07:42:32Z,"`subst` will remove any `v` in the tag. That would break if we have `v` elsewhere in the version like `v0.40v.6` for some reason. I'll try to change so it trims only the prefix

> It's no big deal, but it looks weird to me. v means version,so it is like Version: version 0.29.1.

We can't really trim it in the code as @knqyf263 suggested that the version during the compile itself should not have the `v`, otherwise it becomes `Version: version 0.29.1`. "
934240206,2607,Moulick,2022-08-01T07:56:15Z,"we can do `VERSION := $(patsubst v%,%,$(shell git describe --tags --abbrev=0))`

This will convert `v0.36v.0v` into `0.36v.0v`. Aka stripping `v` only from prefix."
934242250,2607,Moulick,2022-08-01T07:58:33Z,"Oh, I see what you mean now. I'll trim in the check."
934244806,2607,DmitriyLewen,2022-08-01T08:01:31Z,"> Could you elaborate on that?

I only talked about the `--abbrev=0` flag.
At the moment when I build the binary I get `v<tag><commit number>` like this: `Version: v0.30.4-11-g44d53bed`
after the changes, we will only get the tag number in version for all commits between tags (for example, `Version: v0.30.4` for the actual commit in the main branch).

I think we only need to remove  `v` prefix.
"
934263645,2607,knqyf263,2022-08-01T08:22:53Z,It makes sense. Good catch. Thanks.
934366696,2607,Moulick,2022-08-01T10:14:13Z,"Please check now with the latest commit

| Case | Build                                                                                                  | versions                          | Output url                                                                                                                    |
| ---- | ------------------------------------------------------------------------------------------------------ | --------------------------------- | ----------------------------------------------------------------------------------------------------------------------------- |
| 1    | go build -ldflags ""-s -w -X=main.version=v0.30.4"" ./cmd/trivy/main.go                                  | Version: v0.30.4                  | Please see also https://aquasecurity.github.io/trivy/v0.30.4/docs/secret/scanning/#recommendation for faster secret detection |
| 2    | go build -ldflags ""-s -w -X=main.version=0.30.4"" ./cmd/trivy/main.go                                   | Version: 0.30.4                   | Please see also https://aquasecurity.github.io/trivy/v0.30.4/docs/secret/scanning/#recommendation for faster secret detection |
| 3    | go build ./cmd/trivy/main.go                                                                           | Version: dev                      | Please see also https://aquasecurity.github.io/trivy/dev/docs/secret/scanning/#recommendation for faster secret detection     |
| 4    | goreleaser check && goreleaser release --snapshot --rm-dist --skip-publish --skip-docker --skip-before | Version: 0.30.4-SNAPSHOT-f2b17e3c | Please see also https://aquasecurity.github.io/trivy/v0.30.4/docs/secret/scanning/#recommendation for faster secret detection |
| 5    | make build                                                                                             | Version: 0.30.4-6-gf2b17e3c       | Please see also https://aquasecurity.github.io/trivy/v0.30.4/docs/secret/scanning/#recommendation for faster secret detection |
"
934432999,2607,DmitriyLewen,2022-08-01T11:40:13Z,"i think we can not use regex:
@Moulick what do you think of something like this?
```
	s := strings.TrimLeft(opts.AppVersion, ""v"")
	r := strings.Split(s, ""-"")[0]
```"
934436521,2607,DmitriyLewen,2022-08-01T11:44:41Z,@knqyf263 what about pre-release versions (e.g. `0.30.5-alpha`). Should this be considered?
934450979,2607,knqyf263,2022-08-01T12:03:08Z,I think we can just replace them with `dev` or accept the invalid URL.
934481864,2607,Moulick,2022-08-01T12:40:22Z,I was in favour of the regex as that would cover other cases for semver like if we had `v0.36.0+snapshot-1` or like `0.36.0-beta+exp.sha.5114f85`. wdyt?
935087988,2607,DmitriyLewen,2022-08-02T03:48:00Z,"I agree with you. `v0.36.0+snapshot-1` requires a regex, but as @knqyf263 said, we can return the invalid URL for pre-release versions and versions with build metadata.
@knqyf263 wdyt? What is preferable?"
935179306,2607,Moulick,2022-08-02T06:52:56Z,"We can replace it with `dev`, but the question is again about detecting it's not a release version but a snapshot or pre-release or something, that again falls back to regex. I am the last person to want to use regex but also then I do want to produce valid URLs as much as possible"
936372886,2607,knqyf263,2022-08-03T08:17:12Z,"In development, I don't mind even if an invalid URL is produced. If we want to make it valid as much as possible, we can use [go-version](https://github.com/aquasecurity/go-version/tree/main/pkg/semver).

```
ver := opts.AppVersion
if ver != ""dev"" {
    v, err := semver.Parse(opts.AppVersion)
    if err != nil {...}
   
    // Replace pre-release with ""dev""
    // e.g. v0.36.0+snapshot-1
    if v.IsPreRelease || v.Metadata != """" {
        ver = ""dev""
    } else {
        // Add ""v"" prefix, ""0.31.0"" => ""v0.31.0""
        ver = ""v"" + ver
}
```"
936446809,2607,Moulick,2022-08-03T09:31:04Z,"Sure, I'll switch to `go-version`."
945125252,2607,Moulick,2022-08-13T10:48:54Z,resolved
945621081,2607,knqyf263,2022-08-15T11:05:30Z,"As mentioned earlier, we want to use our go-version, not hashicorp/go-version.
https://github.com/aquasecurity/trivy/pull/2607#discussion_r936372886"
1219701931,4557,AnaisUrlichs,2023-06-06T13:54:16Z,"Maybe dividing it into two lines?

#### Kubernetes sbom i.e. kbom
Kubernetes sbom referred to as `kbom`, produces the k8s core components (Control Plane Components, Node Components and Addons) bill of material
"
1225902699,4557,itaysk,2023-06-11T19:20:37Z,"```suggestion
## KBOM
KBOM, Kubernetes Bill of Materials, is a manifest of all the important components that make up your Kubernetes cluster – Control plane components, Node Components, and Addons, including their versions and images. Which “api-server” version are you currently running? Which flavor of “kubelet” is running on each node? What kind of etcd or storage are you currently using? And most importantly – are there any vulnerabilities known to affect these components? These are all questions that KBOM can help you answer.

Trivy can generate KBOM in CycloneDX format:

```sh
trivy k8s cluster --format cyclonedx
```

```"
1225903357,4557,itaysk,2023-06-11T19:21:39Z,I think this is not needed here if you accept the other suggestion
1225903602,4557,itaysk,2023-06-11T19:22:33Z,"needs some more documentation if we have it: examples, supported platforms, limitation, etc."
1227477526,4557,knqyf263,2023-06-13T03:18:23Z,I don't want to add MarshalKbom here. Kubernetes should directly call core.Marshal.
1227479038,4557,knqyf263,2023-06-13T03:22:06Z,It is kubernetes-specific. I think it should be located under `pkg/k8s/report`.
1227479072,4557,knqyf263,2023-06-13T03:22:11Z,It is kubernetes-specific. I think it should be located under `pkg/k8s/report`.
1227482035,4557,knqyf263,2023-06-13T03:29:29Z,"I don't think we need to call `MarshalReport` here. You can directly construct core.Component.

```
podComp := core.Component {
	Type: cdx.Container,
	Name: comp.Name,
        ...
	Properties: comp.Properties,
}
```"
1227521124,4557,chen-keinan,2023-06-13T04:36:36Z,"we might need to replace it with  this method instead :
```
func (w Writer) WriteComponent(component core.Component) {
	bom:=w.marshaler.core.Marshal(component)
	return encodeBom(bom)
}
```
the other option is to expose(public) `marshaler` and `Marshaler.core`
what do you prefer?"
1227521193,4557,chen-keinan,2023-06-13T04:36:43Z,"we might need to replace it with this method :
```
func (e *Marshaler) MarshalComponent(component *core.Component) (*cdx.BOM, error) {
	return e.core.Marshal(component), nil
}
```
the other option is to expose (public)  `Marshaler.core`

what do you prefer?"
1229389669,4557,knqyf263,2023-06-14T10:36:54Z,"I'm not sure, but do we want to remove all `v` occurrences? Doesn't `strings.TrimPrefix(version, ""v"")` work?"
1229391104,4557,knqyf263,2023-06-14T10:38:17Z,"Please use our library.
https://github.com/aquasecurity/go-version/tree/main/pkg/semver"
1229393395,4557,knqyf263,2023-06-14T10:40:26Z,"You can use this const. Other places as well
https://github.com/aquasecurity/trivy/blob/08b76f1dedd6c4236e79761f625c090a5fef3395/pkg/sbom/cyclonedx/marshal.go#LL33C1-L33C1"
1229393427,4557,knqyf263,2023-06-14T10:40:28Z,"ditto
https://github.com/aquasecurity/trivy/blob/08b76f1dedd6c4236e79761f625c090a5fef3395/pkg/sbom/cyclonedx/marshal.go#L34"
1229393546,4557,knqyf263,2023-06-14T10:40:35Z,ditto
1229393628,4557,knqyf263,2023-06-14T10:40:40Z,ditto
1229393766,4557,knqyf263,2023-06-14T10:40:48Z,ditto
1229399119,4557,knqyf263,2023-06-14T10:45:57Z,"We can use the constructor.
https://github.com/aquasecurity/trivy/blob/08b76f1dedd6c4236e79761f625c090a5fef3395/pkg/purl/purl.go#L190"
1229399647,4557,knqyf263,2023-06-14T10:46:28Z,"nit

```suggestion
			coreComponents = append(coreComponents, nodeComponent(nf))
```"
1229436416,4557,knqyf263,2023-06-14T11:21:30Z,"I think we can leverage the existing function.

```suggestion
				imagePURL, err := purl.NewPackageURL(purl.TypeOCI, types.Metadata{
					RepoDigests: []string{fmt.Sprintf(""%s@%s"", name, cDigest)},
				}, ftypes.Package{})
				if err != nil {
					return nil, xerrors.Errorf(""failed to create PURL: %w"", err)
				}
```"
1229439749,4557,knqyf263,2023-06-14T11:25:02Z,"If you just want to sort by name, you don't need the new type implementing `sort.Interface`.

```suggestion
	sort.Slice(nodeComp.Components, func(i, j int) bool {
		return nodeComp.Components[i].Name < nodeComp.Components[j].Name
	})
```"
1229454438,4557,knqyf263,2023-06-14T11:37:25Z,"I aim to keep `pkg/report` and `pkg/k8s/report` independent. Can we add a tiny writer in `pkg/k8s/report/cyclonedx.go`?

```
// Writer implements types.Writer
type Writer struct {
	encoder cdx.BOMEncoder
	marshaler *cyclonedx.Marshaler
}

func NewWriter(output io.Writer, appVersion string) Writer {
	encoder := cdx.NewBOMEncoder(w.output, w.format)
	encoder.SetPretty(true)
	return Writer {
		encoder: encoder,
		marshaler: core.NewCycloneDX(appVersion),
	}
}

func (w Writer) Write(component *core.Component) error {
	bom, err := w.marshaler.Marshal(report)
	if err != nil {
		return xerrors.Errorf(""CycloneDX marshal error: %w"", err)
	}
	return w.encoder.Encode(bom)
}
```"
1230374158,4557,knqyf263,2023-06-15T03:16:59Z,"For PURL, we should use canonical names, `k8s.io/kubelet`.
https://github.com/kubernetes/kubelet/blob/e70f2e547c08910ba3c82c34dbfa0108cb1631eb/go.mod#L3"
1230374917,4557,knqyf263,2023-06-15T03:18:36Z,"Other components as well, like `k8s.io/apiserver`. You can see the list here.
https://github.com/kubernetes/kubernetes/tree/e56002ab0495de16a5c55463c4591f9c4320705b/staging"
1230709462,4557,knqyf263,2023-06-15T09:17:28Z,"Do we need to replace it? If it is a helm error, we can bump the helm version in defsec.

```
# helm.sh/helm/v3/pkg/kube
../../../../pkg/mod/helm.sh/helm/v3@v3.11.1/pkg/kube/client.go:97:12: cannot use cmdutil.NewFactory(getter) (value of type ""k8s.io/kubectl/pkg/cmd/util"".Factory) as Factory value in struct literal: ""k8s.io/kubectl/pkg/cmd/util"".Factory does not implement Factory (missing method OpenAPIGetter)
```

>update kubernetes dependencies from v0.27.0 to v0.27.1 

https://github.com/helm/helm/releases/tag/v3.12.1"
1230886541,4557,chen-keinan,2023-06-15T11:44:16Z,"sure, created [PR](https://github.com/aquasecurity/defsec/pull/1345) for defsec
"
1231452134,4557,chen-keinan,2023-06-15T19:30:25Z,"@knqyf263 I have replaced `defsec` with `helm v3.12.1` still getting error as result from dependency issue , see my comments on `go.mod` file, could be replacing kubectl is the best option until latest `github.com/docker/docker` can be used, wdyt?
"
1233212787,4557,knqyf263,2023-06-18T07:03:14Z,"Replacing `oras-go` helps. It works in my local env.
https://github.com/helm/helm/issues/11821#issuecomment-1587424133"
1701256436,7261,DmitriyLewen,2024-08-02T04:51:00Z,"We expected an array here.
But now it's a string.
I think ` custom-headers: []` would be better."
1701262745,7261,DmitriyLewen,2024-08-02T05:00:44Z,"```suggestion
		// We need to split the config name on `.` to make the indentations needed in yaml.
		parts := strings.Split(flg.GetConfigName(), ""."")
```"
1701264410,7261,DmitriyLewen,2024-08-02T05:01:15Z,"```suggestion

			// We need to add a comment and example values only for the last part of the config name.
			isLastPart := (len(parts)-1 == i)
			if isLastPart {
				// Some `Flags` don't support flag for CLI. (e.g.`LicenseForbidden`).
```"
1701274069,7261,DmitriyLewen,2024-08-02T05:08:20Z,"We duplicate default values ​​in comment and values.

Maybe we can set a limit on values ​​(like 2 values) to avoid such a big page
e.g.:
```suggestion
# Default is UNKNOWN, LOW, MEDIUM, HIGH, CRITICAL
severity:
 - UNKNOWN
 - LOW
```"
1701277665,7261,DmitriyLewen,2024-08-02T05:12:34Z,"I think it's not convenient to work with such a large number of values ​​(GH pages use horizontal scrolling)
I don't like hardcoding, but maybe we should override default values with GH links (as is done now)?"
1701278759,7261,DmitriyLewen,2024-08-02T05:14:21Z,"I think `Client/Server` flags are not most popular.
Perhaps we can move them to the end of the array or just lower in the list."
1701281809,7261,DmitriyLewen,2024-08-02T05:19:19Z,"```suggestion
	// Sort flags to avoid duplicates of non-last parts of config file
	slices.SortFunc(flags, func(a, b flag.Flagger) int {
```"
1701287765,7261,DmitriyLewen,2024-08-02T05:27:47Z,"We can remove case for `string`.
`default` also works correctly for `string`
We get extra space after `:` for empty strings, but this is still valid `yaml`.
```suggestion
	default:
		fmt.Fprintf(w, "" %v\n"", v)
	}
```"
1701529020,7261,afdesk,2024-08-02T08:54:11Z,sure. It's a mistake
1701529136,7261,afdesk,2024-08-02T08:54:17Z,done
1701530267,7261,afdesk,2024-08-02T08:54:59Z,done
1701531364,7261,afdesk,2024-08-02T08:55:46Z,"ok, done"
1701533471,7261,afdesk,2024-08-02T08:56:14Z,done
1701537110,7261,afdesk,2024-08-02T08:58:10Z,"I'm not sure about it. 
usually the content is searched in alphabetical order"
1701555804,7261,afdesk,2024-08-02T09:10:11Z,"as we told offline, my thought about usecases is next:
it's convenient to copy/paste default values from docs and then to customize it.
maybe I'm wrong. 

I thought the hardcoded link was added to show actual state for default values.
Now the actual state is added automatically."
1701557999,7261,afdesk,2024-08-02T09:11:45Z,"There are AWS options is in the end. 
I'm not sure, that we should add these flags now."
1701563671,7261,afdesk,2024-08-02T09:14:38Z,"> I think `Client/Server` flags are not most popular. Perhaps we can move them to the end of the array or just lower in the list.

Client/Server flags are reordered now "
1701648301,7261,DmitriyLewen,2024-08-02T10:15:54Z,"If we use all default values ​​in `yaml` struct - it will be easier for users to get default values ​​from `yaml` struct than to copy them from comment.
I suggested limiting the number of default values ​​[here](https://github.com/aquasecurity/trivy/pull/7261#discussion_r1701274069).

But maybe a better way is to remove `Default is ...` comment, but use all default values ​​in the `yaml` struct.
especially since now the structure clearly shows the type:
- `addr: `. we can add `""""` for empty string to get `addr: """"`
- `custom-headers: []`
- `download-java-only: false`
- etc."
1701658983,7261,DmitriyLewen,2024-08-02T10:25:51Z,"> usually the content is searched in alphabetical order

Yes. You are right.
Overall, the alphabetical order suits me.

> I'm not sure, that we should add these flags now.

Why?"
1701660622,7261,afdesk,2024-08-02T10:27:22Z,"> Why?

```sh
$ trivy aws
Trivy AWS is now available as an optional plugin. See github.com/aquasecurity/trivy-aws for details.
```"
1701662595,7261,afdesk,2024-08-02T10:29:21Z,"ok, let's try.
removed default values. "
1701662841,7261,DmitriyLewen,2024-08-02T10:29:34Z,"oh... right! I forgot about that.
So we don't need to include `aws` flags."
1701666501,7261,DmitriyLewen,2024-08-02T10:33:30Z,"Let's add information before `Global Options` - that `yaml` files below contain default values.

and the user can find possible values `./cli/trivy.md`"
1701666511,7261,afdesk,2024-08-02T10:33:30Z,AWS flags removed
1701674975,7261,afdesk,2024-08-02T10:39:09Z,done
1701677940,7261,DmitriyLewen,2024-08-02T10:42:12Z,Great. Thanks!
1794896945,7679,DmitriyLewen,2024-10-10T07:48:01Z,"24 hours is incorrect.
We publish trivy-db every 6 hours, but update interval is 24 hours.
for trivy-java-db: publish every 24 hours, update interval is 3 days.
"
1843430664,7679,DmitriyLewen,2024-11-15T09:11:17Z,"```suggestion
	DefaultECRRepository = fmt.Sprintf(""%s:%d"", ""public.ecr.aws/aquasecurity/trivy-java-db"", SchemaVersion)
```"
1843431133,7679,DmitriyLewen,2024-11-15T09:11:36Z,Thanks @benji78 !
1846010600,7679,knqyf263,2024-11-18T07:32:36Z,"If I understand correctly, there is no chance that `mirror.gcr.io` requires authentication. We should skip `mirror.gcr.io` here.
https://github.com/aquasecurity/trivy/blob/94791f83431c02a566f73e4e3f00557d3e90aef5/pkg/fanal/image/registry/google/google.go#L32"
1846024172,7679,DmitriyLewen,2024-11-18T07:44:37Z,"yeah, you're probably right, I didn't think about it
Changed in https://github.com/aquasecurity/trivy/pull/7679/commits/99e96bbd53777740fc0957211438ae336fff72d3"
1846051406,7679,knqyf263,2024-11-18T08:08:36Z,It's not correct. GHCR doesn't respect the GitHub token now.
1846052955,7679,knqyf263,2024-11-18T08:09:55Z,"nit

```suggestion
	// GCR mirrors
```"
1846063989,7679,DmitriyLewen,2024-11-18T08:19:11Z,"But some users wrote that GH token helps them.
Do you think that for GHCR it makes no difference at all whether the user is authorized or not when downloading the image?"
1846071453,7679,knqyf263,2024-11-18T08:24:56Z,">But some users wrote that GH token helps them.

Trivy has [a bug](https://github.com/aquasecurity/trivy/pull/7580) that doesn't reflect `GITHUB_TOKEN` now, so I'm sure those users luckily didn't see rate limit errors.

I saw [the same rate limit error](https://github.com/aquasecurity/trivy/pull/7580#issuecomment-2370624673) when I set the token, so I believe it has no effect on GHCR. If we confirm it helps, we can add it back."
1846075640,7679,DmitriyLewen,2024-11-18T08:27:57Z,"Got it!
Removed info about GHCR in https://github.com/aquasecurity/trivy/pull/7679/commits/c18a51169c103016f73c8ce61a86a9c191109fb8"
1846075840,7679,DmitriyLewen,2024-11-18T08:28:06Z,thanks! fixed in https://github.com/aquasecurity/trivy/pull/7679/commits/272b1a04ff23dcba2874d2835a4c2cc8b1ab3e15
1846101109,7679,benji78,2024-11-18T08:46:52Z,Is Amazon ECR still relevant here if it has been replaced by GCR?
1846116036,7679,benji78,2024-11-18T08:56:58Z,There is an extra `c` in `Once` which should be `One example of this …`
1846149737,7679,DmitriyLewen,2024-11-18T09:18:13Z,"We still push trivy-db and trivy-java-db into ECR.
So this is still relevant for users using ECR."
1846150204,7679,DmitriyLewen,2024-11-18T09:18:29Z,Thanks! We will fix that in another PR.
1846178253,7679,DmitriyLewen,2024-11-18T09:36:52Z,@benji78 - #7942
355468898,303,danielpacak,2019-12-09T14:09:49Z,I'd rather log or return error. Having both we might see duplicate error messages in the error log
355471029,303,danielpacak,2019-12-09T14:14:03Z,Missing call to `mockVulnClient.AssertExpectations(t)` ?
355471947,303,danielpacak,2019-12-09T14:15:39Z,I'd skip this log and stick to the rule; either log or propagate error to avoid duplicates
355474428,303,danielpacak,2019-12-09T14:20:30Z,"Here and in previous test you have a very similar strucs to hold input and return args passed to mocks. You can consider having a generic structure to describe an expected behaviour of the given mock, see https://github.com/aquasecurity/harbor-scanner-trivy/blob/master/pkg/mock/expectation.go

```
// Expectation represents an expectation of a method being called and its return values.
type Expectation struct {
	Method     string
	Args       []interface{}
	ReturnArgs []interface{}
}

// ApplyExpectation applies the specified expectations on a given mock.
func ApplyExpectations(t *testing.T, mock interface{}, expectations ...*Expectation) {
}
```

This might improve readability of the test cases."
355475670,303,danielpacak,2019-12-09T14:22:56Z,Add assert expectations for `MockVulnClient`
355477539,303,danielpacak,2019-12-09T14:26:21Z,Log with debug or trace?
355479877,303,danielpacak,2019-12-09T14:30:34Z,Add some context message why it failed unless err contains all the details to facilitate troubleshooting.
355481644,303,danielpacak,2019-12-09T14:33:45Z,Add some context message to the error. I assume we continue running the server without error because in 10 seconds there's a retry. Is that correct?
355499917,303,danielpacak,2019-12-09T15:04:36Z,What's actually asserted in theses tests?
355501764,303,danielpacak,2019-12-09T15:07:45Z,Add message unless err contains all info to figure out what's wrong in case of error.
355512416,303,danielpacak,2019-12-09T15:25:55Z,"Shouldn't it depend on wire install goal? It fails on my local

```
wire gen ./...
make: wire: No such file or directory
make: *** [wire] Error 1
```"
355522737,303,knqyf263,2019-12-09T15:44:05Z,I'm so sorry... I fixed it. Would you try it again?
355524524,303,knqyf263,2019-12-09T15:47:03Z,"This is a function in a server side. So, if a server returns an error, the error will be displayed only in a client side. The error will not be duplicated in the server side. Or, do you mean the server should not display an error?"
355527497,303,knqyf263,2019-12-09T15:52:15Z,"It was intended because I thought the test failed due to a lack of calling vulnClient in some test cases. But it was misunderstood. I added AssertExpectations https://github.com/aquasecurity/trivy/pull/303/commits/38affbb23ec7cd942a57aa7d3968b4d4a370910f
Thanks."
355528022,303,knqyf263,2019-12-09T15:53:07Z,"It is the same reason. If it is confusing, we can add a comment.
https://github.com/aquasecurity/trivy/pull/303#discussion_r355524524"
355529175,303,knqyf263,2019-12-09T15:55:02Z,I fixed it. https://github.com/aquasecurity/trivy/pull/303/commits/a52863920b8b52bb1780674f3f6401ad8e516413
355530488,303,knqyf263,2019-12-09T15:57:19Z,"Absolutely😭  Thanks.
https://github.com/aquasecurity/trivy/pull/303/commits/7870c6246e201f69c92ef97170cedf988e836dc9"
355536106,303,danielpacak,2019-12-09T16:06:53Z,"Yup, it works now"
355536183,303,knqyf263,2019-12-09T16:07:01Z,"`tt.want` is a `Config` type which has many fields, but `context` is a pointer. So, I wanted to do `assert.Equal(t, tt.want, c, tt.name)` except for `tt.want.context` and `tt.want.logger`. I had no idea to do it, so I copied the value (ctx) to the wanted value (tt.want.context). 
Do you have any idea to compare an actual value and an expected value if they contain a pointer?"
355639434,303,danielpacak,2019-12-09T19:28:18Z,My concern was that it's logged twice on the server side. Here and where `Detect()` with error handling.
355648575,303,danielpacak,2019-12-09T19:47:12Z,"I wish we had such utility in Golang which I used a lot in my Java days -> https://joel-costigliola.github.io/assertj/assertj-core-features-highlight.html#field-by-field-ignoring

We can improve it later on though. Just remember to add assert which refers to `tt.want`. I don't see it, so even if you set the `context` we don't actually do asserts."
355946286,303,knqyf263,2019-12-10T10:07:17Z,"I see. `Detect()` is a method called internally via HTTP server.
https://github.com/aquasecurity/trivy/pull/303/files#diff-09f894f3b8925177d261b36dc04e31b9R56

 This error will be handled on a client side. It will not be logged twice on the server side."
355953146,303,knqyf263,2019-12-10T10:20:56Z,It's true. I will add more context message.
355954577,303,knqyf263,2019-12-10T10:23:42Z,"In this case, the error has enough information. But I will add more information just in case."
355957759,303,knqyf263,2019-12-10T10:30:14Z,I fixed it https://github.com/aquasecurity/trivy/pull/303/commits/52ebb2c0a8a22c13a70f26ebf6da286d08dcb386
355958560,303,knqyf263,2019-12-10T10:31:54Z,I fixed it. 52ebb2c
355958646,303,knqyf263,2019-12-10T10:32:04Z,I fixed it. 52ebb2c
355968546,303,danielpacak,2019-12-10T10:52:34Z,Got it!
356224760,303,knqyf263,2019-12-10T19:11:16Z,"Your approach looks so cool, but I'd like to keep named args. I refactored here. Let me know your thought, please. If it looks fine, I will try to refactor other places.
https://github.com/aquasecurity/trivy/pull/303/commits/99ef6ecd434c1fd2fcae8af377ff92490c096b65"
356233812,303,knqyf263,2019-12-10T19:29:52Z,"Yes, that is exactly what I want. I didn't find it in testify/assert.

That was my fault. I added the assertion.
https://github.com/aquasecurity/trivy/pull/303/commits/303bf698c13b7acd83d43d9316effea680230395"
356506888,303,danielpacak,2019-12-11T10:09:40Z,I like having a struct for mock expectations as you did in `detector_mock.go`. Also setting the expectations in the `NewMockDetector` is a great place to do so.
356518248,303,danielpacak,2019-12-11T10:32:52Z,NIT: You can use varargs in NewMockDetector constructor to shorten this line
1324009775,5154,nikpivkin,2023-09-13T06:01:52Z,This comment is no longer needed
1324013976,5154,nikpivkin,2023-09-13T06:08:18Z,Why this comment? It almost duplicates the variable name
1324014585,5154,nikpivkin,2023-09-13T06:09:11Z,"

```suggestion
	return fmt.Sprintf(""%s:%s"", group, nameWOVersion)
```"
1324052211,5154,j1nka,2023-09-13T06:49:37Z,Thanks! Done.
1324052564,5154,j1nka,2023-09-13T06:49:55Z,Agreed! Done.
1324052874,5154,j1nka,2023-09-13T06:50:15Z,Thanks again :) Done
1328232217,5154,DmitriyLewen,2023-09-18T04:05:10Z,"What if we handle all possible ways?
Something like that:
```suggestion
func convertMavenPackage(component cdx.Component) string {
// By default, Jar uses `Group` field for `GroupID`
// Use original `ArtifactID` and `GroupID`
	if component.Group != """" {
		return fmt.Sprintf(""%s:%s"", component.Group, component.Name)

	}
	// if `Name` and `Group` fields don't exist - unmarshal purl
	if component.Name == """" {
		// Split the package into its parts
		parts := strings.Split(component.PackageURL, ""/"")

		group := parts[1]

		// Get FullName with Version
		nameWithVersion := parts[len(parts)-1]

		// Remove the Version from the package
		nameWOVersion := strings.Split(nameWithVersion, ""@"")[0]

		return fmt.Sprintf(""%s:%s"", group, nameWOVersion)
	}
	// in some cases `GroupID:ArtifactID` is stored in `Name`
	return component.Name
}
```"
1328236753,5154,nikpivkin,2023-09-18T04:22:39Z,"According to the [specification](https://cyclonedx.org/docs/1.5/json/#components_items_name), name is a required field."
1328238855,5154,DmitriyLewen,2023-09-18T04:27:16Z,"oh... right. Thanks!
Then, we can check that the ""Name"" field contains ""GroupID""."
1328319300,5154,j1nka,2023-09-18T07:12:01Z,"@nikpivkin @DmitriyLewen thanks for your advices! Added some more checks. Main idea is to catch smth like:
1st Version of SBOM (we don't have Group and that's why we can get empty list of vulners):
```
{
      ""bom-ref"": """",
      ""name"": """",
      ""purl"": """",
      ""scope"": """",
      ""type"": """",
      ""version"": """"
}
```
2nd Version of SBOM (we have both - Group and Name):
```
{
      ""group"" : """",
      ""name"" : """",
      ""version"" : """",
      ""cpe"" : """",
      ""purl"" : """",
      ""externalReferences"" : [
        {
          ""type"" : """",
          ""url"" : """"
        }
      ],
      ""type"" : """",
      ""bom-ref"" : """"
}
```"
1328324015,5154,DmitriyLewen,2023-09-18T07:17:58Z,"your examples are not valid. 
e.g. `Name` is required field."
1328327972,5154,DmitriyLewen,2023-09-18T07:22:31Z,"Also there is problem in next case:
`purl` field is not required - https://cyclonedx.org/docs/1.5/json/#components_items_purl
If `purl` and `group` are empty  - we miss package name.

I understand that this is strange case, but we need to check all possible cases."
1328341431,5154,j1nka,2023-09-18T07:37:34Z,"> your examples are not valid. e.g. `Name` is required field.

Hm, i removed all data in this two examples just to show fields. In both cases we have `name`, but in first we don't have `group`. Maybe i didn't understand you comment abiut ""`name` is required"".

Yes if `purl` and `group` are missing we miss the package. In last commit I've added checks like you told me - check the `group`. You want me to add some checks to identify if `purl` is present? Because at the moment I don't check if `purl` is present and trying to parse it."
1328362770,5154,DmitriyLewen,2023-09-18T07:57:30Z,"oh... i didn't understand that you removed all values from these fields ( i thought these field are empty).

> You want me to add some checks to identify if purl is present

I think we need to add that. 
`group` and `purl` can be omitted. So in this case we need to get package name from `name` field.
It is strange, but it is possible: 
```
{
      ""bom-ref"": """",
      ""name"": """",
      ""scope"": """",
      ""type"": """",
      ""version"": """"
}
```

I "
1328381231,5154,j1nka,2023-09-18T08:15:08Z,Ok! Will do it. But if we don't have `group` or `purl` what we need in return? In case of Java only `name` will be not enough to get vulnerability data
1328386990,5154,DmitriyLewen,2023-09-18T08:20:34Z,"Use `name` field. It is better than nothing. 
It is also possible that `name` will use `<GroupID>:<ArtifactID>` format. 
e.g. we used this format in `name` before #4674.

"
1328401576,5154,j1nka,2023-09-18T08:33:58Z,Hope i get it right :) Added checks and `name` as default behavior if there is no `group` or `purl`
1328419975,5154,DmitriyLewen,2023-09-18T08:48:50Z,"We already parsed `purl` here - https://github.com/aquasecurity/trivy/blob/14d3f0242d3ab2a24e8982ab0f818524c263b1a1/pkg/sbom/cyclonedx/unmarshal.go#L347

We can use this."
1328482182,5154,j1nka,2023-09-18T09:46:34Z,"> We already parsed `purl` here -
> 
> https://github.com/aquasecurity/trivy/blob/14d3f0242d3ab2a24e8982ab0f818524c263b1a1/pkg/sbom/cyclonedx/unmarshal.go#L347
> 
> We can use this.

Great idea, thanks! Made some changes"
1329768061,5154,DmitriyLewen,2023-09-19T08:33:55Z,"i rechecked code before this line and found that we don't parse CycloneDX without `purl` - https://github.com/aquasecurity/trivy/blob/eea3320d83c240f7e7bf9e4cece4197e39b868ff/pkg/sbom/cyclonedx/unmarshal.go#L337-L340

So we can remove this check (sorry for confusing you).

I think we can remove `purl == """"` check and move logic to  `getPackageName` and use [parsed package name](https://github.com/aquasecurity/trivy/blob/eea3320d83c240f7e7bf9e4cece4197e39b868ff/pkg/purl/purl.go#L84-L90) ([pkg.Name = getPackageName(p.Type, pkg.Name, component)](https://github.com/aquasecurity/trivy/blob/eea3320d83c240f7e7bf9e4cece4197e39b868ff/pkg/sbom/cyclonedx/unmarshal.go#L349)). Something like that:

```suggestion
func getPackageName(typ, pkgNameFromPurl string, component cdx.Component) string {
	if typ == packageurl.TypeMaven {
	        // Jar uses `Group` field for `GroupID`
		if component.Group != """" {
			return fmt.Sprintf(""%s:%s"", component.Group, component.Name)
		} else {
		        // use name derived from purl if `Group` doesn't exist
			return pkgNameFromPurl
		}
	}
	return component.Name
}
```"
1331142614,5154,j1nka,2023-09-20T07:36:49Z,Wow :) Great idea! Thanks a lot! Done :)
1062487767,3391,itaysk,2023-01-05T13:43:47Z,I think we want the company to be the title. Otherwise what do we expect the title to be?
1062490005,3391,itaysk,2023-01-05T13:46:20Z,you probably didn't mean to add this as a label right?
1062492302,3391,itaysk,2023-01-05T13:48:50Z,"```suggestion
  - type: markdown
```"
1062493470,3391,itaysk,2023-01-05T13:50:06Z,"
```suggestion
title: ""<company or project name>""
```"
1062494202,3391,itaysk,2023-01-05T13:50:43Z,"```suggestion
labels: [""adopters""]
```"
1062494976,3391,itaysk,2023-01-05T13:51:24Z,so in other words I think we should remove this field
1062496935,3391,itaysk,2023-01-05T13:53:25Z,🧐
1062500164,3391,itaysk,2023-01-05T13:56:46Z,"not sure if this is valuable info to collect, but also - the state oss today isn't easy to define, for example gitlab using trivy - oss or not? we need to make sure the form is frictionless to fill"
1062501105,3391,itaysk,2023-01-05T13:57:43Z,"```suggestion
    id: links
```"
1062501285,3391,itaysk,2023-01-05T13:57:55Z,just to match the description you gave
1062502626,3391,itaysk,2023-01-05T13:59:23Z,"as much as this is super valuable to us, I think all the fields should be optional. if someone wants to just put their name and leave, they should be able to. wdyt?"
1062506936,3391,itaysk,2023-01-05T14:03:59Z,(see my other comment about company name for why this suggestion)
1071477358,3391,AnaisUrlichs,2023-01-16T17:47:38Z,"People will not know that they should put as title the company -- so I would rather ask explicitly. 
In the discussion YAML itself on the first line, the title has to be ""Show and tell"" so the form shows up when people select show and tell"
1071478457,3391,AnaisUrlichs,2023-01-16T17:49:32Z,In the GH documentation on creating a discussion form they explicitly said that the title of the YAML for the form has to match the selection name in the GH discussions of your project -- I think this does not mean that people cannot set a title for their discussion (?)
1071478643,3391,AnaisUrlichs,2023-01-16T17:49:51Z,oki
1071479286,3391,AnaisUrlichs,2023-01-16T17:50:57Z,hmm you have a point 
1071486962,3391,itaysk,2023-01-16T18:03:56Z,"I think you might have confused name of file with title of form?

> You can create custom discussion category forms by adding a YAML form definition file ... The name must correspond with the slug for one of your discussion categories. For example, the template for the ""Announcements"" category should be .github/DISCUSSION_TEMPLATE/announcements.yml."
1071874318,3391,AnaisUrlichs,2023-01-17T08:04:56Z,Would you like the type to be markdown?
1071894208,3391,itaysk,2023-01-17T08:24:25Z,That's also not desired (will render as markdown codeblock). Just remove it
1804399827,7690,nikpivkin,2024-10-17T09:08:36Z,nit: we have `log.FilePath` to log the path https://github.com/aquasecurity/trivy/pull/7080
1804419866,7690,nikpivkin,2024-10-17T09:22:19Z,What if we put the loop body in a separate function for readability? Then the error will only need to be logged once
1804527046,7690,afdesk,2024-10-17T10:36:07Z,done https://github.com/aquasecurity/trivy/pull/7690/commits/c941d62f3a84567117268e95dbd9d7a9a42f140f
1804527416,7690,afdesk,2024-10-17T10:36:21Z,"oh, thanks. I didn't know it
done https://github.com/aquasecurity/trivy/pull/7690/commits/c941d62f3a84567117268e95dbd9d7a9a42f140f"
1805653721,7690,simar7,2024-10-18T00:37:27Z,"Is there any benefit of defining this of fixed length? Why not simplify like so

```suggestion
	var resources []report.Resource
```"
1805663259,7690,simar7,2024-10-18T00:43:32Z,"It seems that this file is a little short on test coverage, maybe we can improve that a bit?"
1805667700,7690,simar7,2024-10-18T00:47:27Z,"```suggestion
var r = regexp.MustCompile(""[\\\\/:*?<>]"")
```"
1805701768,7690,simar7,2024-10-18T01:40:27Z,"Just a thought, would they be also cleaned when we run `trivy clean`?"
1805871852,7690,afdesk,2024-10-18T05:12:47Z,"these temporary files remove after the k8s scan.
so I don't think we should use `trivy clean` here "
1805895164,7690,afdesk,2024-10-18T05:47:44Z,"try to avoid a few copy operations and memory allocations by grabbing it all up front.  (it's a quota  )).
I'm not sure it makes sense, so we can change this one.

do you think we should use a simple construction?"
1805939056,7690,simar7,2024-10-18T06:28:25Z,"I'm just thinking of the case when trivy exits unexpectedly and files are not cleaned up. I think the `defer` should take care of it, but just a thought. "
1805940667,7690,afdesk,2024-10-18T06:30:06Z,"yes, you're right. we should improve test cases"
1805957463,7690,afdesk,2024-10-18T06:44:03Z,"Trivy creates these files inside temporary folder, so I think OS can take care of it.
or do i miss something? thanks"
1806964208,7690,afdesk,2024-10-18T19:59:55Z,done https://github.com/aquasecurity/trivy/pull/7690/commits/67cadae09c4818a10c168f3fd0ff7f999c5c0207
1807125559,7690,simar7,2024-10-19T00:45:56Z,I haven't benchmarked this so I can't say for sure but I would assume the Go runtime can grow the slice as needed without much of an overhead.
1807127247,7690,simar7,2024-10-19T00:49:42Z,Fair enough 👍
1807138197,7690,simar7,2024-10-19T01:26:42Z,"OK - Since this PR also fixes a critical bug for k8s scanning, we can merge it first. 

I opened https://github.com/aquasecurity/trivy/issues/7768 to track improving the test coverage."
1808394990,7690,knqyf263,2024-10-21T09:13:59Z,"`make` is faster than `var`, so if we know the length beforehand, we should use `make` for performance reasons.
https://sampath04.hashnode.dev/make-your-go-code-efficient-using-make-when-creating-slices

If the length of the slice is small enough, I personally prefer `var` because it's easier to read. In this case, k8s resources can be a lot. It makes sense to use `make`."
1808401992,7690,knqyf263,2024-10-21T09:18:39Z,"nit: I think `directory` is more common than `folder` in UNIX. This function actually calls `MkdirTemp`, not `MkfolderTemp`."
1808457127,7690,afdesk,2024-10-21T09:53:52Z,rename https://github.com/aquasecurity/trivy/pull/7690/commits/84cacc5dc531c09ccce443271b6f0f37bcf05b58
747469261,1230,afdesk,2021-11-11T12:45:13Z,"[sarif validator](https://sarifweb.azurewebsites.net/Validation) shows an error:
```
SARIF1009: runs[0].results[0]: This 'result' object contains a property 'ruleIndex' with value 1,
but 'runs[0].tool.driver.rules' has fewer than 2 elements. 
An index-valued properties must be valid for the array that it refers to.
```
it seems that we should remove `+1`, right?"
747542161,1230,simon-engledew,2021-11-11T14:25:02Z,"Ah yes, my bad! 😓"
747660560,1230,afdesk,2021-11-11T16:48:21Z,the trailing comma is wrong
1002710944,2951,josedonizetti,2022-10-23T13:30:05Z,@chen-keinan wouldn't this be better under the `Kubernetes` section? It is very specific to k8s. 
1002711289,2951,josedonizetti,2022-10-23T13:32:30Z,"both word as plural doesn't read correct, maybe simplify as `results` only? "
1002711309,2951,josedonizetti,2022-10-23T13:32:38Z,same
1002746268,2951,knqyf263,2022-10-23T17:54:29Z,+1
1002746550,2951,knqyf263,2022-10-23T17:57:03Z,I don't think we can keep maintaining this test data as it is quite large. Can we make it small?
1002746686,2951,knqyf263,2022-10-23T17:57:50Z,ditto
1002746817,2951,knqyf263,2022-10-23T17:58:32Z,"If we need a test using actual data, we can do that in integration tests rather than unit tests."
1002747042,2951,knqyf263,2022-10-23T18:00:42Z,ditto
1002747088,2951,knqyf263,2022-10-23T18:01:04Z,ditto
1002748823,2951,chen-keinan,2022-10-23T18:16:32Z,@knqyf263 @josedonizetti but we will have to move it later again as we are planning to add `aws cis compliance spec` as well so kubernetes  section will not match.
1003218853,2951,knqyf263,2022-10-24T11:46:30Z,"I think we can have NSA under Kubernetes and CIS under AWS respectively. `trivy k8s` users may not be interested in AWS CIS. We can also have a dedicated page for compliance, but the page just contains links to each page."
1003226976,2951,knqyf263,2022-10-24T11:56:10Z,Shouldn't it be under report flags?
1003277343,2951,knqyf263,2022-10-24T12:52:46Z,Does `ID` mean the control ID?
1004320936,2951,knqyf263,2022-10-25T10:47:47Z,"Can we add a reference to the NSA hardening guidance? This one?
https://media.defense.gov/2022/Aug/29/2003066362/-1/-1/0/CTR_KUBERNETES_HARDENING_GUIDANCE_1.2_20220829.PDF"
1004321551,2951,knqyf263,2022-10-25T10:48:19Z,Can we add a description of what the percentage describes? Non-root containers: 89.89% might not be clear.
1004328661,2951,chen-keinan,2022-10-25T10:54:08Z,"@knqyf263 not sure, as it trigger scanning behind the scene , so it invoke scan process"
1004332925,2951,chen-keinan,2022-10-25T10:57:24Z,its scan checks ID --> `map[AVD-124-1234]types.Results`
1004354152,2951,knqyf263,2022-10-25T11:13:07Z,"Yes, it also affects scanning, but it is mainly for reporting, no?"
1004361819,2951,knqyf263,2022-10-25T11:21:29Z,"For example, `--format cyclonedx` also affects scanning since SBOM doens't need vulnerabilities, misconfigurations and secrets, but it is under report flags as it is mainly for reporting."
1004414707,2951,knqyf263,2022-10-25T12:20:14Z,Do we need to override UnmarshalYAML? I wonder if we can validate scanners after unmarshaling.
1004419527,2951,chen-keinan,2022-10-25T12:25:05Z,sure can be done afterwards
1004451162,2951,chen-keinan,2022-10-25T12:55:39Z,fixed
1211063681,4210,knqyf263,2023-05-31T04:05:00Z,I'm not too fond of this approach. @DmitriyLewen Any ideas?
1211272672,4210,DmitriyLewen,2023-05-31T08:19:25Z,"What if we will add flag (folder names) insted of this hardcode? 
Flag will show that we need to get packages from sbom instead of language files for those folders.
For `fs,` image`, etc..  `opt/bitnami` will be default value. 

Therefore, users can use this flag for other folders."
1212499257,4210,knqyf263,2023-06-01T02:35:08Z,"In the case of Bitnami, SBOM and executable files are located under `opt/bitnami`, but I'm not sure about other cases. I'm afraid the flag is very Bitnami specific."
1212502296,4210,DmitriyLewen,2023-06-01T02:42:29Z,"what if we parse both files (I mean jar + sbom), merge packages and add logic to exclude duplicates?
e.g.
if we found packages from sbom files - we need to check these packages in the found language files and skip the duplicate"
1212510043,4210,knqyf263,2023-06-01T02:54:36Z,"Yeah, that is what I was thinking first. But for example, JAR scanning is quite expensive (download trivy-java-db, etc.). If there is SBOM, we should skip analyzing."
1212511246,4210,DmitriyLewen,2023-06-01T02:57:36Z,we can scan sbom first(pre-analyzer) and add check for language analyzers - if filepath from sbom == language package filepath => skip analyze 
1212514428,4210,knqyf263,2023-06-01T03:04:15Z,"Interesting, but how? `io.Reader` for image layer tarballs is read only once. We cannot iterate twice.
https://github.com/aquasecurity/trivy/blob/48b2e15c2383241963f7bf749d7e4416c33bd4f7/pkg/fanal/walker/tar.go#L40-L94"
1212518384,4210,DmitriyLewen,2023-06-01T03:14:12Z,"most expensive language packages use post-analyzers ( or we can move them to post-analyzer).
We will add check for filePath from sbom into start of `PostAnalyze` func.
e.g. for jar:
we will add check before downloading trivy-java-db
if bom contains all jar files - we will not download java-db

Correct me, if i am wrong
 "
1212700615,4210,knqyf263,2023-06-01T07:19:05Z,"It was impossible since a single SBOM includes several files, and Trivy didn't store those file paths. But it may be possible now after [this change](https://github.com/aquasecurity/go-dep-parser/pull/202/files#diff-8e49337a1417a39a62ebf427e84fb2faa566c96e37ae627ac484c05dbe65c483R15). Trivy has file paths of nested dependencies. I'll give it a shot. Thanks!"
1212919052,4210,DmitriyLewen,2023-06-01T10:11:29Z,"```suggestion
	relationships := lo.Filter(spdxDocument.Relationships, func(rel *spdx.Relationship, _ int) bool {
```

this does not work?"
1212919705,4210,DmitriyLewen,2023-06-01T10:12:05Z,Can you add testcase for this?
1212935872,4210,DmitriyLewen,2023-06-01T10:22:18Z,"if spdx doesn't have application - we think that all packages are from 1 application, i understand correctly?"
1212937973,4210,DmitriyLewen,2023-06-01T10:24:22Z,Also perhaps we want to use `initApplication`?
1212955004,4210,DmitriyLewen,2023-06-01T10:37:38Z,"Maybe we need to add generic logic for other folders.

But we can do it after user questions."
1212957767,4210,DmitriyLewen,2023-06-01T10:39:17Z,"Maybe we need to add testcase for cyclonedx or are testcases from `sbom` package enough?
wdyt?"
1212968100,4210,DmitriyLewen,2023-06-01T10:49:21Z,"```suggestion
var requiredSuffixes = []string{
	"".spdx"",
	"".spdx.json"",
	"".cdx"",
	"".cdx.json"",
}
```"
1213127298,4210,knqyf263,2023-06-01T13:07:01Z,">if spdx doesn't have application - we think that all packages are from 1 application, i understand correctly?

True.

>Also perhaps we want to use initApplication?

This can be used for the case where an application exists in SBOM."
1213129065,4210,knqyf263,2023-06-01T13:08:03Z,"Yes, agree. But I guess there is no standard for this."
1213144528,4210,knqyf263,2023-06-01T13:19:43Z,Added in https://github.com/aquasecurity/trivy/pull/4210/commits/db18245b16dbc1d6bd77445c79674f7628d34f96
1213145252,4210,knqyf263,2023-06-01T13:20:19Z,"Done
https://github.com/aquasecurity/trivy/pull/4210/commits/9e237b9883785a9b0a8eae8f3a2e61e0b8811486"
1213145674,4210,knqyf263,2023-06-01T13:20:36Z,"Done
https://github.com/aquasecurity/trivy/pull/4210/commits/f6934d53a31937dbcc15b11079b3710c50f23863"
1213147719,4210,knqyf263,2023-06-01T13:22:08Z,"Added
https://github.com/aquasecurity/trivy/pull/4210/commits/c6c2727cee57448abcb4ef823be9ddc642ec3343"
1213958051,4210,DmitriyLewen,2023-06-02T06:01:21Z,`filepath.Ext` doesn't work from `.spdx.json`
1213968541,4210,DmitriyLewen,2023-06-02T06:19:02Z,fixed in 0b9daa2441e7c583046563ca3ecfa4e634a6a1fe
1214166071,4210,ChristianCiach,2023-06-02T09:51:05Z,"I think it should be clarified that this currently **only** works for Bitnami images.

I came here from reading the release notes that just state:

```
 9ef0113 feat: add SBOM analyzer (#​4210)
```

This got me excited, because we could use this for our own images, but unfortunately this currently only works for this hardcoded directory."
1214196932,4210,knqyf263,2023-06-02T10:23:52Z,Why do you think it works with the hardcoded directory?
1214260007,4210,ChristianCiach,2023-06-02T11:33:27Z,"I am referring to this discussion: https://github.com/aquasecurity/trivy/pull/4210/files#r1212955004

Even in current `main`, the `sbom.go` only checks the hardcoded path `/opt/bitnami` for spdx-SBOMs:

```go
// For Bitnami images
if strings.HasPrefix(input.FilePath, ""opt/bitnami/"") {
```

Or am I reading this wrong and other paths/formats are somehow implicitly supported?"
1214350563,4210,knqyf263,2023-06-02T13:05:25Z,"No, it is just rewriting file paths for Bitnami. SBOM itself is analyzed anyway."
1687482593,7206,DmitriyLewen,2024-07-23T06:16:13Z,"I am not sure about this. Perhaps we want don't use aliase for `vex`.
```suggestion
		Aliases:       []string{""v""},
```"
1687486893,7206,DmitriyLewen,2024-07-23T06:21:06Z,"Do we need this?

Also looks like it doesn't work:
```bash
➜  ./trivy vex repo --help
Manage VEX repositories

Usage:
  trivy vex repo [command]

Examples:
  # Initialize the configuration file
  $ trivy vex repo init


Available Commands:
  download    Download the VEX repositories
  init        Initialize a configuration file
  list        List VEX repositories

```"
1687486971,7206,DmitriyLewen,2024-07-23T06:21:12Z,same for other `list` and `download`
1687505448,7206,DmitriyLewen,2024-07-23T06:39:35Z,"```suggestion
		Example: `  # Initialize the configuration file
  $ trivy vex repo
```"
1687508537,7206,DmitriyLewen,2024-07-23T06:42:24Z,"```suggestion
		return xerrors.Errorf(""failed to download vex repositories: %w"", err)
```"
1687523463,7206,DmitriyLewen,2024-07-23T06:55:57Z,let's add info about cache dir with repositories in [cache page](https://aquasecurity.github.io/trivy/v0.53/docs/configuration/cache/)
1687553911,7206,DmitriyLewen,2024-07-23T07:20:06Z,"Do you think we don't need this anymore?
it saves resources for SPDX and CycloneDX formats."
1687577325,7206,DmitriyLewen,2024-07-23T07:37:53Z,"Can you add comment here?
We can add link to vexhub (https://github.com/aquasecurity/vexhub?tab=readme-ov-file#directory-structure) or vex-repo-spec (https://github.com/aquasecurity/vex-repo-spec/blob/e5d9fcbcbcc57181b212ee01935c40cbb2a15b3a/index.schema.json#L18)
BTW - `vex-repo-spec` doesn't say about `Subpath`
"
1687602553,7206,DmitriyLewen,2024-07-23T07:56:12Z,"Perhaps we need to add more context:
- user can write names of repositories for downloading
- we only download enabled repositories (maybe we should download user repo, even repo is disabled)"
1687610285,7206,DmitriyLewen,2024-07-23T08:01:42Z,"Perhaps we need to add flag to disable vex repositories (remove `repository.yaml` or disable all repos).

At a minimum we should write in docs how to stop using vex repos"
1687642912,7206,DmitriyLewen,2024-07-23T08:24:20Z,vex-repo-spec doesn't contain this field- https://github.com/aquasecurity/vex-repo-spec/blob/main/vex-repository.schema.json
1687653792,7206,DmitriyLewen,2024-07-23T08:31:16Z,is this debug line?
1687686809,7206,DmitriyLewen,2024-07-23T08:53:16Z,"```suggestion
// Manager manages the repositories
```"
1690911858,7206,knqyf263,2024-07-25T06:56:04Z,"It was a mistake. deleted.
https://github.com/aquasecurity/trivy/pull/7206/commits/fca16cb6ddb64f28c37793176f59d6017bfa8fb8"
1690912106,7206,knqyf263,2024-07-25T06:56:17Z,We don't need it. Deleted. https://github.com/aquasecurity/trivy/pull/7206/commits/fca16cb6ddb64f28c37793176f59d6017bfa8fb8
1690912362,7206,knqyf263,2024-07-25T06:56:29Z,`init` is needed. Added more examples. https://github.com/aquasecurity/trivy/pull/7206/commits/fca16cb6ddb64f28c37793176f59d6017bfa8fb8
1690948822,7206,knqyf263,2024-07-25T07:21:12Z,"Currently, our SBOM scanning process involves several steps:

1. [Decoding the SBOM to create a `core.SBOM`](https://github.com/aquasecurity/trivy/blob/0e286f074f5bc584b05132f5b4652858da35df17/pkg/sbom/cyclonedx/unmarshal.go#L25)
2. [Converting this `core.SBOM` to a `types.SBOM`](https://github.com/aquasecurity/trivy/blob/0e286f074f5bc584b05132f5b4652858da35df17/pkg/sbom/io/decode.go#L50C59-L50C63)
3. For certain operations (e.g., VEX application), [re-encoding the `types.Report` back to a `core.SBOM`](https://github.com/aquasecurity/trivy/blob/0e286f074f5bc584b05132f5b4652858da35df17/pkg/result/filter.go#L91)

We've identified that this process, particularly the decoding and re-encoding between `core.SBOM` and `types.Report`, is not as efficient as it could be. Ideally, we should reuse the decoded SBOM instead of re-encoding it.

One key challenge I've encountered is that during the initial SBOM decoding, we can't always determine whether ""parents"" will be needed later in the process (applying VEX or not). Given this uncertainty, I decided to always generate the parents.

I attempted to implement the reuse of the decoded SBOM, but found that it required more extensive modifications to our codebase than I initially anticipated. As a result, I've reverted these changes for now to maintain code stability and manageability.

Looking ahead, I still plan to remove the parent field in question to facilitate this optimization in the future. However, I'm keeping the option open to reintroduce this field if needed in the short term.

Reverted in https://github.com/aquasecurity/trivy/pull/7206/commits/9881b0fd3b43455f1c2cc22458aa95eb0420817c"
1690950426,7206,knqyf263,2024-07-25T07:21:57Z,Thanks. Added in https://github.com/aquasecurity/trivy/pull/7206/commits/642f2d9c751070a089ed8227cf4254bd7cfab655. Please let me know if you think we should describe it more.
1690983567,7206,knqyf263,2024-07-25T07:36:40Z,"Opened a PR.
https://github.com/aquasecurity/vex-repo-spec/pull/4"
1690985516,7206,knqyf263,2024-07-25T07:37:47Z,"Added a comment
https://github.com/aquasecurity/trivy/pull/7206/commits/19e60ba844060396e7f0f2bad942d44899d4c1ab"
1691005869,7206,knqyf263,2024-07-25T07:54:01Z,"Added https://github.com/aquasecurity/trivy/pull/7206/commits/e02af76134f093186328e0af42088d8b761e8460

I think it's okay to download only enabled repositories. I'm open to changing it if the community requests it."
1691006919,7206,knqyf263,2024-07-25T07:54:48Z,It's activated only when `--vex repo` is passed. They can just remove the flag to stop using VEX repos.
1691007956,7206,knqyf263,2024-07-25T07:55:34Z,Thanks. Deleted https://github.com/aquasecurity/trivy/pull/7206/commits/424759ed76d159674b319282498f02c59fac3c81
1691009476,7206,knqyf263,2024-07-25T07:56:36Z,Absolutely. Deleted in https://github.com/aquasecurity/trivy/pull/7206/commits/07ba807deee3ea5c323ec02b51536406d13e9e84
1691079511,7206,DmitriyLewen,2024-07-25T08:47:22Z,exactly! I didn't think about this.
1691143758,7206,DmitriyLewen,2024-07-25T09:32:47Z,"Perhaps we don't need this.
We show list all non-suppressed vulns:
```
2024-07-25T14:29:35+05:00       DEBUG   [vex] VEX found, but affected   vulnerability=""CVE-2024-4741"" package=""pkg:oci/trivy?repository_url=index.docker.io%2Faquasec%2Ftrivy"" repo=""defaultss"" repo_url=""https://github.com/aquasecurity/vexhub""
2024-07-25T14:29:35+05:00       DEBUG   [vex] VEX found, but affected   vulnerability=""CVE-2024-5535"" package=""pkg:oci/trivy?repository_url=index.docker.io%2Faquasec%2Ftrivy"" repo=""defaultss"" repo_url=""https://github.com/aquasecurity/vexhub""
2024-07-25T14:29:35+05:00       DEBUG   [vex] VEX found, but affected   vulnerability=""CVE-2024-6197"" package=""pkg:oci/trivy?repository_url=index.docker.io%2Faquasec%2Ftrivy"" repo=""defaultss"" repo_url=""https://github.com/aquasecurity/vexhub""
2024-07-25T14:29:35+05:00       DEBUG   [vex] VEX found, but affected   vulnerability=""CVE-2024-6874"" package=""pkg:oci/trivy?repository_url=index.docker.io%2Faquasec%2Ftrivy"" repo=""defaultss"" repo_url=""https://github.com/aquasecurity/vexhub""
2024-07-25T14:29:35+05:00       DEBUG   [vex] VEX found, but affected   vulnerability=""CVE-2024-4741"" package=""pkg:oci/trivy?repository_url=index.docker.io%2Faquasec%2Ftrivy"" repo=""defaultss"" repo_url=""https://github.com/aquasecurity/vexhub""
2024-07-25T14:29:35+05:00       DEBUG   [vex] VEX found, but affected   vulnerability=""CVE-2024-5535"" package=""pkg:oci/trivy?repository_url=index.docker.io%2Faquasec%2Ftrivy"" repo=""defaultss"" repo_url=""https://github.com/aquasecurity/vexhub""
2024-07-25T14:29:35+05:00       DEBUG   [vex] VEX found, but affected   vulnerability=""GHSA-xr7q-jx4m-x55m"" package=""pkg:golang/github.com/aquasecurity/trivy"" repo=""defaultss"" repo_url=""https://github.com/aquasecurity/vexhub""
2024-07-25T14:29:35+05:00       DEBUG   [vex] VEX found, but affected   vulnerability=""GHSA-xr7q-jx4m-x55m"" package=""pkg:oci/trivy?repository_url=index.docker.io%2Faquasec%2Ftrivy"" repo=""defaultss"" repo_url=""https://github.com/aquasecurity/vexhub""
2024-07-25T14:29:35+05:00       DEBUG   [vex] VEX found, but affected   vulnerability=""CVE-2024-24791"" package=""pkg:golang/github.com/aquasecurity/trivy"" repo=""defaultss"" repo_url=""https://github.com/aquasecurity/vexhub""
2024-07-25T14:29:35+05:00       DEBUG   [vex] VEX found, but affected   vulnerability=""CVE-2024-24791"" package=""pkg:oci/trivy?repository_url=index.docker.io%2Faquasec%2Ftrivy"" repo=""defaultss"" repo_url=""https://github.com/aquasecurity/vexhub""


```"
1691320681,7206,knqyf263,2024-07-25T11:57:08Z,"I have changed it to be shown once per package. https://github.com/aquasecurity/trivy/pull/7206/commits/1479468b79c3847527537d08f30db2e4c58a45cc

```
$ trivy image ghcr.io/aquasecurity/trivy:0.52.0 --scanners vuln --vex repo -d
...
2024-07-25T15:56:00+04:00       DEBUG   [vex] Reading the repository index...   repo=""default"" file_path=""/Users/teppei/Library/Caches/trivy/vex/repositories/default/0.1/index.json""
2024-07-25T15:56:00+04:00       DEBUG   [vex] VEX found in the repository       package=""pkg:oci/trivy?repository_url=ghcr.io%2Faquasecurity%2Ftrivy"" repo=""default"" repo_url=""https://github.com/aquasecurity/vexhub"" file_path=""pkg/oci/ghcr.io/aquasecurity/trivy/oci.openvex.json""
2024-07-25T15:56:00+04:00       DEBUG   [vex] VEX found in the repository       package=""pkg:golang/github.com/aquasecurity/trivy"" repo=""default"" repo_url=""https://github.com/aquasecurity/vexhub"" file_path=""pkg/golang/github.com/aquasecurity/trivy/trivy.openvex.json""
2024-07-25T15:56:00+04:00       INFO    Some vulnerabilities have been ignored/suppressed. Use the ""--show-suppressed"" flag to display them.
```"
1691321927,7206,DmitriyLewen,2024-07-25T11:58:15Z,Cool 👍 
1680436648,7163,knqyf263,2024-07-17T05:43:05Z,"Since Go uses `go` line if `toolchain` is omitted, we probably need to check the `go` line as well.

> If the toolchain line is omitted, the module or workspace is considered to have an implicit toolchain goV line, where V is the Go version from the go line.

https://go.dev/doc/toolchain

But we need to consider how to treat a go line omitting a patch version, like `go 1.22`. I think we can skip stdlib in this case."
1682103665,7163,DmitriyLewen,2024-07-18T04:35:16Z,"> I think we can skip stdlib in this case. 

If module uses version without patch (and child modules don't use patch and `toolchain`) - `go` doesn't add patch/toolchain:
```bash
➜ cat ../greetings/go.mod 
module github.com/greetings

go 1.22
➜ cat go.mod
module example.com/hello

go 1.22

replace example.com/greetings => ../greetings

require example.com/greetings v0.0.0-00010101000000-000000000000
➜ go version
go version go1.22.0 darwin/arm64
```

since we say we use `minimum required version` for `stdlib` - we can say that `v1.x.0` (`v1.21.0` for this example) is the minimum required version, no?
I think I'm missing something, but I can't figure out what 😄"
1682109503,7163,DmitriyLewen,2024-07-18T04:46:01Z,"or do you mean that if `go` version doesn't contain patch - that means it is not a situation where `toolchan` is omitted?
and we don't need to check for cases where `toolchain` is not used (or omitted).

But it doesn't work for `v1.19` or early: `The standard Go toolchains are named goV where V is a Go version denoting a beta release, release candidate, or release. For example, go1.21rc1 and go1.21.0 are toolchain names; go1.21 and go1.22 are not (the initial releases are go1.21.0 and go1.22.0), but go1.20 and go1.19 are.`"
1682120681,7163,DmitriyLewen,2024-07-18T05:04:03Z,">  we can say that v1.x.0 (v1.21.0 for this example) is the minimum required version, no?

I found answer - `1.21` != `1.21.0`:
`For example, 1.21 < 1.21rc1 < 1.21rc2 < 1.21.0 < 1.21.1 < 1.21.2.`"
1682389909,7163,DmitriyLewen,2024-07-18T08:01:22Z,"@knqyf263 I updated this PR:
- if toolchain is omitted - check `go` line
  - check go version (take only >= 1.21)
  - check patch
  - check `rc` releases
"
1682424315,7163,knqyf263,2024-07-18T08:22:56Z,"I'd like to clarify my understanding of the `go` and `toolchain` lines in go.mod files, as it's pretty complex:

1. Prior to Go 1.20, the `go` line was **NOT** a minimum required version. This is a common misconception. For details, see: https://go.googlesource.com/proposal/+/master/design/57001-gotoolchain.md
    - From Go 1.21 onwards, it can be considered a minimum required version, aligning with the common misconception.
2. The meaning of v1.M changed before/after Go 1.20. Previously, versions were Go 1.20, 1.20.1, 1.20.2, etc. From 1.21, it's Go 1.21.0, 1.21.1, 1.21.2, etc., for clarity.

Given that Go currently supports the latest two versions, 1.21 and 1.22, we can focus on the behavior from 1.21 onwards.

It was unclear to me how Go behaves when go.mod contains `go 1.21`, as 1.21 ≠ 1.21.0 as you pointed out. As described in the proposal, Cloud Native Buildpacks and [setup-go](https://github.com/actions/setup-go/blob/0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32/README.md#getting-go-version-from-the-gomod-file) use the latest patch version if a patch version is omitted, meaning `go 1.21` would use 1.21.12 (current latest patch).

Therefore, I conducted some tests.

## Go Version Behavior Test Results

All tests were conducted using Go 1.21.12.
Note that the output of `go version` reflects the toolchain selection.

### Base Environment

```
$ docker run --rm -it golang:1.21-alpine sh
/go/test # GOTOOLCHAIN=local go version
go version go1.21.12 linux/arm64
```

### Test Cases

#### Case 1: `go 1.22` (Patch version omitted, newer than local)
Result: 1.22.0 is downloaded and used. No changes to `go` or `toolchain` lines.

```
/go/test # cat go.mod
module example.com

go 1.22

/go/test # go mod tidy
go: downloading go1.22.0 (linux/arm64)

/go/test # go version
go version go1.22.0 linux/arm64
```

#### Case 2: `go 1.21` (Patch version omitted, older than local)
Result: Local version 1.21.12 is used.

```
/go/test # cat go.mod
module example.com

go 1.21

/go/test # go version
go version go1.21.12 linux/arm64
```

#### Case 3: `go 1.21.3` (Patch version specified, older than local)
Result: Local version 1.21.12 is used.

```
/go/test # cat go.mod
module example.com

go 1.21.3

/go/test # go version
go version go1.21.12 linux/arm64
```

#### Case 4: `go 1.22.3` (Patch version specified, newer than local)
Result: 1.22.3 is downloaded and used.

```
/go/test # cat go.mod
module example.com

go 1.22.3

/go/test # go version
go: downloading go1.22.3 (linux/arm64)
go version go1.22.3 linux/arm64
```

#### Case 5: `toolchain go1.21.3` (toolchain specified, older than local)
Result: Local version 1.21.12 is used.

```
/go/test # cat go.mod
module example.com

go 1.21

toolchain go1.21.4

/go/test # go version
go version go1.21.12 linux/arm64
```

#### Case 6: `toolchain go1.22.0` (toolchain specified, newer than local)
Result: 1.22.0 is downloaded and used.

```
/go/test # cat go.mod
module example.com

go 1.21

toolchain go1.22.0

/go/test # go version
go: downloading go1.22.0 (linux/arm64)
go version go1.22.0 linux/arm64
```

From these tests, we can conclude:

- The versions specified in `go` or `toolchain` lines aren't always used (if the local version is newer).
- If `toolchain` is omitted, `go` is referenced.
- `go 1.21` is treated as `go 1.21.0`.

For Trivy to detect vulnerabilities based on the minimum required version:

- Ignore the local Go version (for reproducibility from go.mod).
- Use the `toolchain` version if specified.
- Use the `go` version if `toolchain` is omitted.
- Treat versions without patch numbers (e.g., `go 1.21`) as the first patch version (1.21.0).

This approach should provide consistent vulnerability detection based on the go.mod file. We don't have to mention the Trivy policy that doesn't run the local Go binary. It is better to explain that it is for reproducible scan results."
1682491004,7163,DmitriyLewen,2024-07-18T09:08:34Z,"> For Trivy to detect vulnerabilities based on the minimum required version:

This is only for `Go` 1.21 or higher.

> (e.g., go 1.21) as the first patch version (1.21.0).

I think we can return `1.21.0` instead of `1.21` to reduce the number of questions from users."
1682500818,7163,DmitriyLewen,2024-07-18T09:15:48Z,"After your tests I began to doubt the need for these changes.
Case with the version of `Go` used is already quite complicated.
If we exclude the local version of `Go`, this may confuse users even more and users will have more questions than answers.
Also, some users don't read (or don't read carefully) docs and will think that the version detected by Trivy is the version of `Go` they are using.

might be better off asking users to scan binaries - this would be a significantly more reliable option for detecting `Go` version.
wdyt?"
1682586784,7163,DmitriyLewen,2024-07-18T10:13:10Z,"anyway i updated logic related to your tests  - https://github.com/aquasecurity/trivy/pull/7163/commits/fe248fc548db1792001e31be34f93ef64655df37
And updated docs - https://github.com/aquasecurity/trivy/pull/7163/commits/4c0d49c27695de8d3832ca63f83f3d81315fc6b2"
1682644253,7163,knqyf263,2024-07-18T10:58:36Z,"Honestly, the current Go seems to behave differently from the proposal (and I expected).

>In contrast to the older/newer distinction with the go line, the toolchain line always applies: if Go 1.30 sees a go.mod that says toolchain go1.20rc1, then it downloads Go 1.20 rc1

https://go.googlesource.com/proposal/+/master/design/57001-gotoolchain.md

From my tests, `toolchain` also sees older/newer distinctions. I expected Case 5 to return 1.21.4. I thought the `toolchain` version is always used regardless of the local Go version.

I didn't find that statement [here](https://go.dev/doc/toolchain).

>If the go.work or go.mod file has a toolchain <tname> line and <tname> is newer than the default Go toolchain, then the go command runs <tname> instead.

This is talking about the other way around, but it probably means the default Go toolchain is used if it is newer than `toolchain <tname>`.

In summary, even `toolchain` is not deterministic. As you said, it can confuse users. I agree. I'm not sure if we should add this feature.

Having said that, I think we can mitigate confusion with log messages. Also, ecosystems will probably use `toolchain` for Go version selection (e.g., https://github.com/actions/setup-go/issues/457, it's still open, though). I guess the `toolchain` version will likely be used in CI/CD. It's not that bad that Trivy relies on it.

But perhaps it should be possible to pass different versions from the `toolchain` line in some way. For example, `TRIVY_GOTOOLCHAIN=$(go version | awk ‘{print $3}’`)."
1683759995,7163,DmitriyLewen,2024-07-19T04:17:03Z,"> I didn't find that statement [here](https://go.dev/doc/toolchain).

` For example, when using the go command bundled with Go 1.21.3 in a main module that says go 1.21.0, the go command uses Go 1.21.3.` 

UUIC this is related with `go` and `toolchain` lines

> Having said that, I think we can mitigate confusion with log messages 

I will try to add as accurate logs as possible for this.

> TRIVY_GOTOOLCHAIN=$(go version | awk ‘{print $3}’

This is good option. But i see 2 moments:
- it will work only for 1 repository. User can't set this env for modules (from different dirs) with different `Go` versions.
- Users can try using logic as for `GOTOOLCHAIN` with `+` and `auto` (e.g. `GOTOOLCHAIN=go1.21.3+auto`). We will need to add info to docs and add warning for this case.
  But it can still be confusing for users...

The rest looks good. In our case this is a good workaround.

I will update this PR. Perhaps at this time we will find more ideas on how to improve this."
1683928533,7163,knqyf263,2024-07-19T07:17:22Z,">TRIVY_GOTOOLCHAIN=$(go version | awk ‘{print $3}’

I was just thinking out loud, but It may be too much. We can just recommend scanning Go binaries if they want to detect stdlib vulnerabilities."
1686095128,7163,DmitriyLewen,2024-07-22T07:32:07Z,"i thought about this today with clear head and i think we don't need to add this at the moment.

We try to do Trivy simple and working from the box.
But this future adds a lot of nuanses:
1. Users should understand how works Go toolchains (even we spent time to understand/check that)
2. Users should check local Go version (in some cases developers don't know about Go version using in CD/CD (e.g. because devops works with CI/CD).
3. If we will add `TRIVY_GOTOOLCHAIN` user need to set this env or skip vulns if you know that local Go version is not vulnerable.


Let's also add here that users don't always read logs and documentation well, and sometimes they hide logs altogether and don't read documentation.
This will lead to users mistakenly thinking that there is a vulnerability in their application, and even worse if they think that there is no vulnerability (this is a rare but possible case)"
1686099377,7163,knqyf263,2024-07-22T07:35:38Z,How about enabling it with `--vuln-detection-level=lax`?
1686105975,7163,DmitriyLewen,2024-07-22T07:41:02Z,"hm... I like this solution.

This flag will force users to carefully read docs and investigate result of Trivy."
1686136546,7163,knqyf263,2024-07-22T08:02:40Z,"Detection using the minimum version may be better enabled when this flag is used. For example, `django>=3.0.0` in requirements.txt, we can take `3.0.0` as the version even if the project may use newer than 3.0.0. The toolchain version is the same. From `toolchain go1.21.4` in go.mod, we consider it Go 1.21.4 even if the project may actually use Go 1.21.5."
1686151399,7163,DmitriyLewen,2024-07-22T08:13:53Z,"> Detection using the minimum version may be better enabled when this flag is used. 

Agree with you."
1686155628,7163,knqyf263,2024-07-22T08:17:02Z,"OK, I've converted this PR to draft. Let's finalize [this proposal](https://github.com/aquasecurity/trivy/discussions/7198#discussioncomment-10112017) first and come back here."
1686156081,7163,DmitriyLewen,2024-07-22T08:17:24Z,"> django>=3.0.0 in requirements.txt, we can take 3.0.0 as the version even if the project may use newer than 3.0.0


this is good idea 👍 "
1738167679,7163,DmitriyLewen,2024-08-30T08:08:37Z,"@knqyf263 I updated this PR using `--detection-priority` flag.
Take a look, when you have time, please."
1740651841,7163,knqyf263,2024-09-02T10:02:38Z,What is this for?
1740652896,7163,knqyf263,2024-09-02T10:03:31Z,"nit: It's no big deal, but if `useMinVersion == false`, we don't need to get the toolchain version. We may want to evaluate `useMinVersion` first before getting the toolchain version."
1740671014,7163,DmitriyLewen,2024-09-02T10:18:46Z,"hm... Maybe I checked something and didn't remove it.
Thanks for showing me this.
Removed in https://github.com/aquasecurity/trivy/pull/7163/commits/e6411c054e1c8bcf2fdf4175c0a7b522698d3f91"
1740671318,7163,DmitriyLewen,2024-09-02T10:19:01Z,"It make sense.
Updated in https://github.com/aquasecurity/trivy/pull/7163/commits/e6411c054e1c8bcf2fdf4175c0a7b522698d3f91"
1745307526,7444,afdesk,2024-09-05T11:40:30Z,"can we update `Resource`? I think it's a bit hard to keep 2 similar structs.
"
1745312113,7444,afdesk,2024-09-05T11:44:11Z,also there are no tests for this case. 
1746837564,7444,smtan-gl,2024-09-06T09:37:50Z,"Thanks for the feedback, I'm not sure why I assumed the `Resource` struct was used by other packages in Trivy, but it doesn't seem to be the case. I'll work on updating the `Resource` struct accordingly.

> also there are no tests for this case.

Regarding the tests, I wanted to get feedback on the approach before proceeding. I'll focus on adding the tests next."
1764780167,7444,afdesk,2024-09-18T10:04:04Z,the test uses `assert.Equal`. Is it possible don't use `reflect`?
1764782128,7444,afdesk,2024-09-18T10:05:31Z,do you really need a separated test instead of `TestReport_consolidate`?
1766236681,7444,smtan-gl,2024-09-19T06:34:00Z,@afdesk that's possible. I've [updated the code](https://github.com/aquasecurity/trivy/pull/7444/commits/ed599f1ae16da89793bc0c0a172a81706e0b6c85) to use `assert.Equal` and consolidated it in `TestReport_consolidate`.
1766237138,7444,smtan-gl,2024-09-19T06:34:30Z,@afdesk that's possible. I've made the change [here](https://github.com/aquasecurity/trivy/pull/7444/commits/ed599f1ae16da89793bc0c0a172a81706e0b6c85).
1766350295,7444,afdesk,2024-09-19T07:57:25Z,great! thanks!
1308934349,5059,chen-keinan,2023-08-29T14:34:28Z,maybe replace the wording `object` with `resource`
1308938646,5059,chen-keinan,2023-08-29T14:37:39Z,"nit:
```suggestion
		trivyk = trivyk8s.New(cluster, log.Logger, trivyk8s.WithExcludeOwned(opts.ExcludeOwned)
```"
1309004405,5059,thapabishwa,2023-08-29T15:23:42Z,Done.
1309004605,5059,thapabishwa,2023-08-29T15:23:52Z,Done
1311321092,5059,knqyf263,2023-08-31T09:00:12Z,We have a lot of flags now and want to assign shorthand to frequently used flags.
1311365921,5059,thapabishwa,2023-08-31T09:34:49Z,Removed the shorthand for `--exclude-owned` flag.
1537340243,6357,DmitriyLewen,2024-03-25T10:05:48Z,"We can simply add `Requires` to `LockFile`.
```go
type LockFile struct {
	GraphLock GraphLock `json:""graph_lock""`
	Requires  []string  `json:""requires""`
}

```
In this case we will unmarshal file once."
1537355933,6357,DmitriyLewen,2024-03-25T10:18:55Z,"IIUC we can add line numbers:
```go
type LockFile struct {
	GraphLock GraphLock `json:""graph_lock""`
	Requires  Requires  `json:""requires""`
}

type Requires []Require

type Require struct {
	Dep       string
	StartLine int
	EndLine   int
}

// UnmarshalJSONWithMetadata needed to detect start and end lines of deps
func (r *Require) UnmarshalJSONWithMetadata(node jfather.Node) error {
	var dep string
	if err := node.Decode(&dep); err != nil {
		return err
	}
	r.Dep = dep
	r.StartLine = node.Range().Start.Line
	r.EndLine = node.Range().End.Line
	return nil
}

```"
1537358707,6357,DmitriyLewen,2024-03-25T10:21:15Z,"```suggestion
func parseV1(lock LockFileV1) ([]types.Library, []types.Dependency, error) {
```"
1537365419,6357,DmitriyLewen,2024-03-25T10:26:51Z,"one functions for:
- v1 : `lib, err := toLibrary(node.Ref, node.StartLine, node.EndLine)`
- v2 : `lib, err := toLibrary(req.Dep, req.StartLine, req.EndLine)`
```suggestion
func toLibrary(pkg string, startLine, endLine int) (types.Library, error) {
	name, version, err := parsePackage(pkg)
	if err != nil {
		return types.Library{}, err
	}
	return types.Library{
		ID:      dependency.ID(ftypes.Conan, name, version),
		Name:    name,
		Version: version,
		Locations: []types.Location{
			{
				StartLine: startLine,
				EndLine:   endLine,
			},
		},
	}, nil
}
```"
1537366115,6357,DmitriyLewen,2024-03-25T10:27:25Z,"handle error, please."
1537368571,6357,DmitriyLewen,2024-03-25T10:29:31Z,"```suggestion
func parseV2(lock LockFile) ([]types.Library, []types.Dependency, error) {
```"
1550461330,6357,dus7eh,2024-04-03T20:47:49Z,I can try to put this info. Not sure if that's useful tho - it's going to point to a single line :)
1550593409,6357,dus7eh,2024-04-03T22:23:23Z,fixed
1550593603,6357,dus7eh,2024-04-03T22:23:35Z,Added line info
1550593752,6357,dus7eh,2024-04-03T22:23:43Z,fixed
1550593975,6357,dus7eh,2024-04-03T22:23:54Z,refactored
1550594126,6357,dus7eh,2024-04-03T22:24:06Z,fixed
1550594245,6357,dus7eh,2024-04-03T22:24:14Z,fixed
1565342165,6357,DmitriyLewen,2024-04-15T08:04:06Z,"Dependency graph is only supported for version v1. Add note please
```suggestion
| Conan           | conan.lock[^1] |            ✓ [^2]       |     Excluded     |                  ✓[^3]                   |    ✓     |
```"
1568001160,6357,dus7eh,2024-04-16T22:25:37Z,fixes applied
1577369532,6357,knqyf263,2024-04-24T06:52:46Z,"Can we split a line?

```suggestion
| Conan (lockfile v1)          | conan.lock[^1] |            ✓       |     Excluded     |                  ✓ [^3]              |    ✓     |
| Conan (lockfile v2)          | conan.lock[^1] |            ✓ [^2]       |     Excluded     |                  -              |    ✓     |
```"
1579260496,6357,dus7eh,2024-04-25T10:41:31Z,Updated and rebased to resolve conflicts
1718022223,7339,nikpivkin,2024-08-15T06:31:17Z,"Should only those finds that exactly match the start and end of the lines be ignored? Or is it better to ignore everything between the passed position? For example, I want to ignore a misconfig that is found inside a Terraform block, but I want to specify the position of the block."
1718022716,7339,nikpivkin,2024-08-15T06:32:02Z,You can log the start and end separately
1718026943,7339,nikpivkin,2024-08-15T06:38:44Z,id already exists in FindingsResults.
1718470689,7339,michael-a-shelton,2024-08-15T14:20:31Z,I went back and forth here and thought it made more sense to be explicit to match the lines of the finding itself instead of a range.
1718471594,7339,michael-a-shelton,2024-08-15T14:21:16Z,Fair enough. I can make that adjustment.
1718477201,7339,michael-a-shelton,2024-08-15T14:24:40Z,"I also debated on this quite a bit. The only scanner passing multiple IDs is the misconf scanner. I decided to avoid refactoring all the other scanner functions up the stack to support a slice of strings for IDs, when they only had one, and instead just pass the single string down. 

I could just as well refactor those and move the for loop from the misconf method into the Match method, but felt that a bit clunky to put a for loop over all other scanners, when only one uses it (even though it would just be one iteration for the others).

I'm open to making that change if we want to make the method signature friendlier. Open to feedback here."
1735377618,7339,simar7,2024-08-28T23:05:03Z,@michael-a-shelton could you give an example of why passing a range isn't ideal? Just trying to understand. To me it feels passing an explicit range would have more flexibility. 
1735378187,7339,simar7,2024-08-28T23:06:21Z,"I guess to me this log line would change if the results are ignored in a range (start:end, would be one line like you currently have) but if not probably best to log separately. "
1737422736,7339,michael-a-shelton,2024-08-29T23:04:46Z,"For instance, someone typos the ""end_line"" in their ignore file. Maybe they meant to do:
```yaml
start_line: 5
end_line: 10
```

but instead, fat-fingered the number on end_line so it was something like:
```yaml
start_line: 5
end_line: 100
```

This would still pass if using a range, but should actually instead fail as now you're ignoring more than intended.

The start and end line numbers are actually how the finding itself is captured as well, so those fields are there mirroring the CauseMetadata struct for the misconf: https://github.com/aquasecurity/trivy/blob/main/pkg/fanal/types/misconf.go#L37-L38"
1747185727,7339,michael-a-shelton,2024-09-06T14:07:04Z,Updated!
1747665266,7339,simar7,2024-09-06T20:13:24Z,Shouldn't this be zero inclusive? What if start or end are actually 0?
1747977786,7339,michael-a-shelton,2024-09-07T06:43:15Z,"The only place I found references to a possible usage of 0 in a test for either start or end line were here: https://github.com/aquasecurity/trivy/blob/main/pkg/report/table/misconfig_test.go#L75-L76. In this scenario the start and end line checks would be skipped.

There are also references to `>0` here: https://github.com/aquasecurity/trivy/blob/main/pkg/report/table/misconfig.go#L161

I am trying to think of a scenario where there is a line 0 in a finding, but can't come up with one. It should always start with 1, no?"
1750842107,7339,simar7,2024-09-09T19:49:12Z,You're right. 
1917828923,8244,knqyf263,2025-01-16T06:44:24Z,"nit
```suggestion
## Mirror Registries
```"
1917832664,8244,knqyf263,2025-01-16T06:46:15Z,I think we should explain how it works with some examples. How about orders? When does Trivy fall back into the next mirror? Is the original registry used? And so on.
1917835281,8244,knqyf263,2025-01-16T06:48:52Z,"Currently, this page shows the default values. I'm wondering if it confuses users. Since the document describes an example, isn't it enough?"
1917836986,8244,knqyf263,2025-01-16T06:51:02Z,I'm impressed it works!
1917837638,8244,knqyf263,2025-01-16T06:51:51Z,Smart 👏
1917841243,8244,knqyf263,2025-01-16T06:55:38Z,"Instead of nesting it, I prefer adding another method, like `tryRef`, `tryImage` or something like that."
1917853320,8244,knqyf263,2025-01-16T07:09:02Z,"nit: I thought `ctx` would be used later in the function, but actually just used to get a registry string. IMO, it's better not to define a new variable here to reduce confusion. But it's no big deal. You can decide it. 

```suggestion
	reg := hostRef.Context().RegistryStr()
```"
1917855326,8244,knqyf263,2025-01-16T07:11:17Z,This means users specified the wrong registry. I think we should return an error to notify users. What do you think?
1917857819,8244,knqyf263,2025-01-16T07:14:11Z,"I want to make sure that container runtimes work in the same way. Even if it fails due to an authentication error, do they try the next mirror?"
1919543753,8244,DmitriyLewen,2025-01-17T04:41:27Z,"We are not adding flags support, so we need to include something in the config file docs.
But honestly, I added this example because I could come up with good lines for an empty `map[string][]string`

This is a yaml file, and the `go` (`map[string][]string`) syntax can be confusing to users.

I can use `<..>` in the example. eg:
```yaml
mirrors:
  <origin_registry>:
    - <first_mirror>
    - <second_mirror>
```

let me know if you have another idea."
1919613741,8244,DmitriyLewen,2025-01-17T06:14:08Z,"added testcase - https://github.com/aquasecurity/trivy/pull/8244/commits/d7a1b7d93f307aba295f5245940c6ca3c5c2ddf4

full error trace:
```bash
Messages:   	6 errors occurred:
* GET http://127.0.0.1:52934/token?scope=repository%3Alibrary%2Falpine%3Apull&service=: unexpected status code 401 Unauthorized: {""message"":""invalid username/password""}

* GET http://127.0.0.1:52934/token?scope=repository%3Alibrary%2Falpine%3Apull&service=: unexpected status code 401 Unauthorized: {""message"":""invalid Authorization header""}

* GET http://127.0.0.1:52934/token?scope=repository%3Alibrary%2Falpine%3Apull&service=: unexpected status code 401 Unauthorized: {""message"":""invalid username/password""}

* GET http://127.0.0.1:52934/token?scope=repository%3Alibrary%2Falpine%3Apull&service=: unexpected status code 401 Unauthorized: {""message"":""invalid Authorization header""}

* GET http://127.0.0.1:52934/token?scope=repository%3Alibrary%2Falpine%3Apull&service=: unexpected status code 401 Unauthorized: {""message"":""invalid username/password""}

* GET http://127.0.0.1:52934/token?scope=repository%3Alibrary%2Falpine%3Apull&service=: unexpected status code 401 Unauthorized: {""message"":""invalid Authorization header""}
```"
1919614368,8244,DmitriyLewen,2025-01-17T06:15:08Z,"It make sense. Thanks!
Updated in https://github.com/aquasecurity/trivy/pull/8244/commits/8d269d2f412c4a55cda3ccbd8e4f6efb57867d72"
1919614544,8244,DmitriyLewen,2025-01-17T06:15:24Z,updated in https://github.com/aquasecurity/trivy/pull/8244/commits/ad56617b57d41905cdb6797e062df06fcf420ed8
1919614730,8244,DmitriyLewen,2025-01-17T06:15:41Z,added order and example - https://github.com/aquasecurity/trivy/pull/8244/commits/d0825918f087443ad03f443da72fb3c83d5addab + https://github.com/aquasecurity/trivy/pull/8244/commits/f3247f157a54cc050d66db7627164326b0dae607
1919700914,8244,knqyf263,2025-01-17T07:56:48Z,"This document well describes how the configuration should look.
https://github.com/aquasecurity/trivy/blob/f3247f157a54cc050d66db7627164326b0dae607/docs/docs/configuration/others.md#mirror-registries

IMHO, `config-file.md` can be simply `mirros:` because it's the default value.

```
  mirrors:
```

But your approach also looks good.

```
mirrors:
  <origin_registry>:
    - <first_mirror>
    - <second_mirror>
```

In that case, we may want to [add a new field](https://github.com/aquasecurity/trivy/blob/89308fc496991d1bd8b0f33b2a1c66cbe911aa94/pkg/flag/options.go/#L36-L82) for examples and generate `config-file.md` from them rather than [defining specific examples in magefiles](https://github.com/aquasecurity/trivy/blob/f3247f157a54cc050d66db7627164326b0dae607/magefiles/docs.go#L165-L170)"
1919704167,8244,knqyf263,2025-01-17T07:59:54Z,">I want to make sure that container runtimes work in the same way.

I just wanted to ask if Docker, containerd or other runtimes also fall back into the next mirror with authentication errors. I'm asking this because I was wondering if they might try the next one only with 404 error."
1919786594,8244,DmitriyLewen,2025-01-17T09:09:54Z,"I misunderstood you.
I will check it and write to you"
1919803756,8244,DmitriyLewen,2025-01-17T09:23:05Z,"Looks like you are right - we can use `mirrors: ` value.

also, frankly, i don't want to introduce a new flag field to use it only for one flag (given that we can get by with documentation).

so i chose your option - https://github.com/aquasecurity/trivy/pull/8244/commits/04f1bc56779961b9671409ac2fbea7c6e77cefc3

> In that case, we may want to [add a new field](https://github.com/aquasecurity/trivy/blob/89308fc496991d1bd8b0f33b2a1c66cbe911aa94/pkg/flag/options.go/#L36-L82) for examples and generate config-file.md from them rather than [defining specific examples in magefiles](https://github.com/aquasecurity/trivy/blob/f3247f157a54cc050d66db7627164326b0dae607/magefiles/docs.go#L165-L170)

I think about it too. We will think about it - if we need examples somewhere else."
1919827515,8244,knqyf263,2025-01-17T09:40:05Z,"Agree. If we need to generate more examples, we can implement it."
1919828423,8244,knqyf263,2025-01-17T09:40:44Z,I'm sorry I should have explained to you more clearly.
1919863651,8244,DmitriyLewen,2025-01-17T10:06:04Z,"no problem 👍

I started local Docker registry with authentication, configured it as mirror in `docker`, and tried to pull an image.
I can confirm that `docker` checks the original registry if the mirrors return a `401` error."
1919885431,8244,knqyf263,2025-01-17T10:22:52Z,Thanks for confirming!
1920208464,8244,nikpivkin,2025-01-17T13:40:34Z,It's always false :)
1920209696,8244,nikpivkin,2025-01-17T13:41:30Z,same as above
1921820497,8244,DmitriyLewen,2025-01-20T05:34:57Z,"Nice catch!
I missed that when created tryImage and tryGet functions.
Fixed in https://github.com/aquasecurity/trivy/pull/8244/commits/7102e4567206bc14fb7e76a1340ff5961feb51e4"
1921820538,8244,DmitriyLewen,2025-01-20T05:35:01Z,Fixed in https://github.com/aquasecurity/trivy/pull/8244/commits/7102e4567206bc14fb7e76a1340ff5961feb51e4
767215378,1287,knqyf263,2021-12-12T02:46:18Z,"What if we define a new http transport?

```suggestion
	httpTransport := &http.Transport{
	        TLSClientConfig: &tls.Config{InsecureSkipVerify: true},
	}
```"
767215590,1287,knqyf263,2021-12-12T02:49:39Z,ditto
767216057,1287,knqyf263,2021-12-12T02:57:17Z,"I think looking up env in many places makes maintenance hard. We might want to add `-insecure` here.
https://github.com/aquasecurity/trivy/blob/c275a841fd0ef0429684185a76bc85a5e72fa843/pkg/commands/app.go"
767697522,1287,czunker,2021-12-13T12:07:19Z,"Thanks for the pointer.
Will have a look at how to rewrite this."
767697559,1287,czunker,2021-12-13T12:07:22Z,"With a new `Transport` we would lose the defaults for the other settings:
```
var DefaultTransport RoundTripper = &Transport{
	Proxy: ProxyFromEnvironment,
	DialContext: (&net.Dialer{
		Timeout:   30 * time.Second,
		KeepAlive: 30 * time.Second,
	}).DialContext,
	ForceAttemptHTTP2:     true,
	MaxIdleConns:          100,
	IdleConnTimeout:       90 * time.Second,
	TLSHandshakeTimeout:   10 * time.Second,
	ExpectContinueTimeout: 1 * time.Second,
}
```
https://go.dev/src/net/http/transport.go"
767804349,1287,czunker,2021-12-13T14:25:57Z,"I hope, I found all the needed pieces.

Please have a look."
803392653,1287,knqyf263,2022-02-10T08:01:10Z,"What if we define the HTTP client directly?

```
	client := &http.Client{
		Transport: &http.Transport{
			TLSClientConfig: &tls.Config{
				InsecureSkipVerify: true,
			},
		},
	}"
803394405,1287,knqyf263,2022-02-10T08:03:38Z,Why do we need to return an error?
803394804,1287,knqyf263,2022-02-10T08:04:13Z,We should add a test with an insecure HTTPS server.
803395862,1287,knqyf263,2022-02-10T08:05:50Z,the same as the cache client
803396233,1287,knqyf263,2022-02-10T08:06:23Z,Looks like these cases don't test anything since the error is always nil.
803599986,1287,czunker,2022-02-10T11:58:17Z,"Good catch. Thanks.

That's a left over from some other implementation I tried."
803600192,1287,czunker,2022-02-10T11:58:33Z,"Good catch. Thanks.

That's a left over from some other implementation I tried."
803601880,1287,czunker,2022-02-10T12:00:47Z,"This way, we would lose the other defaults of `http.Transport`.

When I clone the default, I only change the `InsecureSkipVerify` setting."
803656306,1287,knqyf263,2022-02-10T13:07:51Z,I think it will be the case when we use `http.DefaultClient`. `&http.Client{}` should not cause any issues.
804382357,1287,czunker,2022-02-11T06:21:35Z,Changed that in the latest commits.
804382478,1287,czunker,2022-02-11T06:22:04Z,Re-wrote the tests in the latest commits.
804382611,1287,czunker,2022-02-11T06:22:30Z,Re-wrote the tests in the latest commits to connect against an insecure TLS server.
1657367758,7039,ericstj,2024-06-27T15:43:59Z,"Packages which don't contribute runtime assets to the application cannot contribute to a runtime vulnerability since nothing from the package persists at runtime.  Runtime assets can be identified by examining the targets section since that's what the host uses to probe for those.

There are lots of ways packages might be referenced by an app and excluded from runtime.

The package might be referenced with `ExcludeAssets=""Runtime""`, the package might have been superseded by the .NET runtime itself and excluded but the build, or the package might have overlapping assets with another package that is preferred.  In all cases - if it's bits don't make it to the final app it cannot be a source of a vulnerability in that app."
1658107400,7039,DmitriyLewen,2024-06-28T03:54:24Z,"in general I think the same way.
thank you for detailing this :+1:

> In all cases - if it's bits don't make it to the final app it cannot be a source of a vulnerability in that app.

There are times when users want to see dependencies that are not used at runtime (we encountered this in nodejs).
That's why we've added options to allow users to see all dependencies (we hide them by default). for example, this may be needed not for scanning vulnerabilities, but for generating a SBOM
"
1658108175,7039,DmitriyLewen,2024-06-28T03:55:23Z,"> The package might be referenced with ExcludeAssets=""Runtime""

Do we need to check this case?
Can you write more info about this?

[docs](https://github.com/dotnet/sdk/blob/529132850841a6bcfce96799262ce688e3851875/documentation/specs/runtime-configuration-file.md#targets-section-depsjson) don't have info about `ExcludeAssets` field."
1658126726,7039,knqyf263,2024-06-28T04:32:26Z,"> in general I think the same way.
> 
> thank you for detailing this :+1:
> 
> 
> 
> > In all cases - if it's bits don't make it to the final app it cannot be a source of a vulnerability in that app.
> 
> 
> 
> There are times when users want to see dependencies that are not used at runtime (we encountered this in nodejs).
> 
> That's why we've added options to allow users to see all dependencies (we hide them by default). for example, this may be needed not for scanning vulnerabilities, but for generating a SBOM
> 
> 

I would add more contexts. As interest in supply chain security grows, there is a demand to understand vulnerabilities in packages that are used for CI/CD and other purposes, even if they are not included in production applications and are used only for development.

If the library is not used at all, even for development purposes, there is no need to include it."
1660640315,7039,knqyf263,2024-07-01T08:06:12Z,"@ericstj Since we're unfamiliar with .NET Core, we need your input. Given the above context, do you think we don't have to save these libraries?"
1669027855,7039,ericstj,2024-07-08T17:31:35Z,"> [docs](https://github.com/dotnet/sdk/blob/529132850841a6bcfce96799262ce688e3851875/documentation/specs/runtime-configuration-file.md#targets-section-depsjson) don't have info about ExcludeAssets field.

You can find the docs on ExcludeAssets [here](https://learn.microsoft.com/en-us/nuget/consume-packages/package-references-in-project-files).

> do you think we don't have to save these libraries?

They may be interesting for informational purposes, but for the actual CVE which apply to runtime libraries (the vast majority of CVEs) they are not interesting.  

There could be a case where a package only provides development time assets.  For instance - a build target that inserts code into the binary.  That package might appear without any runtime assets, however such a package is not the norm.  Such a package could also remove all traces from the deps.json if it wanted to, so trying to use that for detecting it isn't a legitimate use case.  The deps.json isn't a manifest of the things used when building the project - it's a manifest to be used by the runtime to determine what it can load. "
1669587056,7039,DmitriyLewen,2024-07-09T02:55:13Z,"> You can find the docs on ExcludeAssets [here](https://learn.microsoft.com/en-us/nuget/consume-packages/package-references-in-project-files).

.NET uses so many files that it can get confusing... 
IIUC `PackageReference` field is related with `packages.config` and `*Packages.props` files (`xml` format).
Can this field be used for *.deps.json files?

> They may be interesting for informational purposes, but for the actual CVE which apply to runtime libraries (the vast majority of CVEs) they are not interesting.

If there are cases when non-runtime dependencies might be needed - i think we need to hide them (instead of remove them). As [@knqyf263 correctly said](https://github.com/aquasecurity/trivy/pull/7039#discussion_r1658126726) DevOps engineers may need to check these packages, for example in pipelines.
"
1669640170,7039,knqyf263,2024-07-09T03:49:53Z,"@ericstj In other ecosystems, it is common to include test assertion libraries as development libraries. And while these libraries are not used at runtime, their vulnerability is important.

>For instance - a build target that inserts code into the binary. That package might appear without any runtime assets, however such a package is not the norm. .

This example you gave is certainly not legitimate, but are libraries used for development purposes in general use such as the one I gave not included in deps.json?"
1674566823,7039,ericstj,2024-07-11T19:36:37Z,"`deps.json` isn't the file to see all dependencies that might be used at development time.  It's used for loading binaries at runtime. 

At development time projects use `PackageReference` (direct references) in the project, which gets computed to the full package graph in `project.assets.json`.  The old format `packages.config` had a flattened graph in the single file and was really just a log for the package modifications that were made to the project file separately.  These two files are better for identifying development dependencies - and are used by component governance for that purpose.  They are present on the build machine / source control.  There's also the new SBOM infrastructure which is better suited as a catch all.

> This example you gave is certainly not legitimate, but are libraries used for development purposes in general use such as the one I gave not included in deps.json?

They may or may not be included, it depends on the type of package and how its referenced.  `deps.json` is only used for telling the runtime what to load.  When a library is present you can be certain it's used - so if that library/package is vulnerable it should be flagged.  If the package is listed in the deps file, you can be certain it was at least referenced - but it may have been eliminated by the build and not loadable at runtime - so it should not be flagged.  You can't assume that a package being absent means it wasn't used at dev time since the deps.json doesn't list all development time dependencies.

"
1675043052,7039,DmitriyLewen,2024-07-12T02:53:02Z,"hm.. It looks like that we can remove non-runtime dependencies.
Also we need to write in docs that Trivy only detects runtime deps from `*.deps.json`"
1675404379,7039,knqyf263,2024-07-12T06:56:41Z,"Thanks for your explanation. It might be similar to Go binary scanning. It doesn't have any development modules, while go.mod includes it.

@DmitriyLewen We can just delete non-runtime dependencies and improve it later if we see any feedback."
1677268895,7039,DmitriyLewen,2024-07-15T02:38:16Z,"Done :+1: 
@knqyf263 @ericstj can you review this PR?"
1679654555,7039,ericstj,2024-07-16T15:38:48Z,"Looks to me like it checks if they are not empty.
```suggestion
	// Check that `runtime`, `runtimeTarget` and `native` sections are not empty
```"
1679657918,7039,ericstj,2024-07-16T15:41:03Z,"```suggestion
// isRuntimeLibrary returns true if library contains `runtime`, `runtimeTarget` or `native` sections, or if the library is missing from `targetLibs`.
```
I think this function returns true if the library **contains** one of these sections, or if the library is completely missing from the section.  The behavior looks correct, just the comment seems inverted."
1679808424,7039,ericstj,2024-07-16T17:39:10Z,"Would it be possible to add another testcase that references some of the commonly reported false positives and proves that those aren't flagged?  For example - a deps file listing a vulnerable version of `System.Net.Http` etc.  Here's a sample deps file: 
[testRuntimeDeps.deps.json](https://github.com/user-attachments/files/16254592/testRuntimeDeps.deps.json)

This was created with 
```
dotnet new console -f net6.0
dotnet add package NETStandard.Library --version 1.6.0
dotnet build
```

This shows that all the old packages (some vulnerable) making up the NETStandard surface area are all excluded when targeting the latest frameworks which provide inbox support for all those package.
"
1680569587,7039,DmitriyLewen,2024-07-17T07:34:38Z,"I updated this function, but forgot to update comment.
Thanks!
Fixed in https://github.com/aquasecurity/trivy/pull/7039/commits/afe12b40e146d9b92c663eeeac14e46168a2286c"
1680569724,7039,DmitriyLewen,2024-07-17T07:34:44Z,fixed in https://github.com/aquasecurity/trivy/pull/7039/commits/afe12b40e146d9b92c663eeeac14e46168a2286c
1680571841,7039,DmitriyLewen,2024-07-17T07:36:19Z,"Your test file is too large.
So I only inserted `System.Net.Http` and `NETStandard.Library` libraries into test file. - https://github.com/aquasecurity/trivy/pull/7039/commits/ca87c122ef3df052866a9e05c62d53251ee651b7"
392549075,435,simar7,2020-03-14T02:33:25Z,Note to self: Change this to master once https://github.com/aquasecurity/trivy-db/pull/34 is merged.
392698543,435,knqyf263,2020-03-15T18:15:43Z,"If metadata.NextUpdate is nil, it causes panic."
392699105,435,knqyf263,2020-03-15T18:22:17Z,"I feel the default output should be human-readable. When we receive `-f json`, we should display it as a json format."
392699197,435,knqyf263,2020-03-15T18:23:19Z,We need to take `-cache-dir` option.
392699352,435,knqyf263,2020-03-15T18:25:26Z,"It sometimes returns an error. Even if we don't handle it, it might be better to display a warning/error message. "
392700058,435,knqyf263,2020-03-15T18:34:07Z,"Type in db.Metadata is just int. If we display it, should we convert it to string such as ""light""."
392700359,435,knqyf263,2020-03-15T18:37:49Z,"```suggestion
	VulnerabilityDB db.Metadata `json:"",omitempty""`
```
I feel `Version` is not necessary here."
392700990,435,knqyf263,2020-03-15T18:46:09Z,"If db isn't in a local file system, this shows like the following. Is it intended?
```
{""TrivyVersion"":""dev"",""VulnerabilityDBVersion"":{}}
```"
393244644,435,knqyf263,2020-03-16T18:54:58Z,`c.App.Version` may be better here
393341202,435,simar7,2020-03-16T22:21:02Z,Yeah like we discussed it has been switched now: https://github.com/aquasecurity/trivy-db/commit/64db1801514c32bb0a0413bbb9cc45d2f2a36969
393346569,435,simar7,2020-03-16T22:31:59Z,"This isn't the case today. The output is the same regardless of the `-f` option specified. 

```
$ ./trivy -v -f=json
trivy version v0.5.2-6-gede778f
$ ./trivy -v        
trivy version v0.5.2-6-gede778f
```
~~I'm not aware of a way where we can parse the `-f` flag at initialization time with this CLI framework. I also think this output is simple enough to be human readable even in JSON format and we could avoid logic complexity.~~

There is actually a way, using `c.String(""format"")`. I can switch to using that.
"
393354836,435,simar7,2020-03-16T22:57:25Z,Fixed 0952d709b17878654fad853c46de616984c4b2a5
393371806,435,simar7,2020-03-16T23:48:03Z,Yes good point. Addressed here https://github.com/aquasecurity/trivy/pull/435/commits/e197eb99aef0614dbca420f7705398218299c7a5
393372340,435,simar7,2020-03-16T23:50:05Z,Fixed here https://github.com/aquasecurity/trivy/pull/435/commits/3b753943b594da309ab74dafff74c8aa13cab62b
393376339,435,simar7,2020-03-17T00:04:39Z,type names fixed here: https://github.com/aquasecurity/trivy/pull/435/commits/ea67f8c0e77508a6df4b22bde08b6d9a4faf9694
393377493,435,simar7,2020-03-17T00:08:47Z,"If we handle the error like this https://github.com/aquasecurity/trivy/pull/435/files#diff-15cf00305be231c6aa506ff45d63ba69R252-R255 then we would have something like: `unable to display current version: unexpected end of JSON input`

What do you prefer? I have no strong opinions."
393377552,435,simar7,2020-03-17T00:09:02Z,Fixed.
393715025,435,knqyf263,2020-03-17T14:21:30Z,"Ah, I meant `VulnerabilityDBVersion` is empty here. We should show a version of Trivy anyway even if DB is not there.

You tried not to show NextUpdate and UpdatedAt if they are zero value, but you didn't do anything for `VulnerabilityDBVersion`. I just imagined you wanted to display something like this 😄 
```
{""TrivyVersion"":""dev""}
```

Never mind. It doesn't matter even if empty `VulnerabilityDBVersion` is displayed."
394582343,435,knqyf263,2020-03-18T19:15:51Z,"```suggestion
		showVersion(c.String(""cache-dir""), c.String(""format""), c.App.Version, c.App.Writer)
```"
394582691,435,knqyf263,2020-03-18T19:16:31Z,"```suggestion
			Trivy: c.App.Version,
```
You have to pass c.App.Version to this function."
394587156,435,knqyf263,2020-03-18T19:24:51Z,"I'm sorry I didn't mean a table format, but a plain text. Also, the current table is not easy to see.

```
+--------------------+--------------------------------+
|     COMPONENT      |            VERSION             |
+--------------------+--------------------------------+
| Trivy              | dev                            |
| VulnDB Type        | Light                          |
| VulnDB Version     |                              1 |
| VulnDB Updated At  | 2020-03-17 12:08:34.013998914  |
|                    | +0000 UTC                      |
| VulnDB Next Update | 2020-03-18 00:08:34.013998514  |
|                    | +0000 UTC                      |
+--------------------+--------------------------------+
```

I think `docker version` is preferred here.

```
Version: v0.5.2
Vulnerability DB:
  Type: Light
  Version: 1
  UpdatedAt: 2020-03-17 12:08:34.013998914 +0000 UTC
  NextUpdate: 2020-03-18 00:08:34.013998514 +0000 UTC 
```

I know the default value of `-format` is `table`, but I think we can ignore it in this case."
394687439,435,simar7,2020-03-18T23:01:24Z,Fixed here https://github.com/aquasecurity/trivy/pull/435/commits/bf954a77e4f4627887a0ecc2c7c0a7c849bb2ec4
394687723,435,simar7,2020-03-18T23:02:17Z,I already do this https://github.com/aquasecurity/trivy/pull/435/files#diff-15cf00305be231c6aa506ff45d63ba69R187 what's missing?
394693291,435,simar7,2020-03-18T23:19:40Z,"Fixed here https://github.com/aquasecurity/trivy/pull/435/commits/6e4f2db837deb3ce456cf6a2776d8c01128ae60d

"
394852461,435,knqyf263,2020-03-19T08:14:46Z,"Sorry, I didn't notice."
394853324,435,knqyf263,2020-03-19T08:16:28Z,`library.go` is the file for the programming language library. It is better to put this struct in another file.
395391778,435,simar7,2020-03-20T00:34:02Z,I moved it out to `app.go` in favour of temporal locality https://github.com/aquasecurity/trivy/pull/435/commits/de09a7fabd68652ef5bc54032e337c1967a3bdfd
820263761,1799,knqyf263,2022-03-06T17:30:11Z,Looks like `sbom` doesn't need `--exit-code` since this option makes the job fail when critical vulnerabilities are found.
820264159,1799,knqyf263,2022-03-06T17:33:09Z,"```suggestion
	// e.g docker:ubuntu, dir:/path/to/express
```"
820265288,1799,knqyf263,2022-03-06T17:43:22Z,"I'd like to return an error in this case. Like ""invalid artifact type, ""docker:"", ""dir:"" or ""artifact:"" are allowed"" or something like that."
820266420,1799,knqyf263,2022-03-06T17:54:22Z,"In addition to usage, we may want to add a description since this subcommand is a bit complex.

```suggestion
		ArgsUsage: ""ARTIFACT"",
		Usage:     ""generate sbom for an artifact"",
		Description: fmt.Sprintf(`""ARTIFACT"" uses a ""transport"":""details"" format.

Supported transports:
  %s
`, artifact.ArtifactTypes.String()),
```"
820266688,1799,knqyf263,2022-03-06T17:56:48Z,"Trivy also supports Podman and we're trying to add support for Containerd. How about `image`?

```suggestion
	ContainerImageArtifact   ArtifactType = ""image""
```
"
820494933,1799,tamirkiviti13,2022-03-07T08:56:44Z,"I don't want the artifact type prefix to be mandatory.
One of the goals of `trivy sbom` as a dedicated subcommand is to be able to determine the artifact type by itself.
I added the artifact type prefix for edge cases (for example if you want sbom for ubuntu image, but also have a local ubuntu directory, so you can specify exactly what you want trivy to generate sbom for)"
820644836,1799,knqyf263,2022-03-07T12:09:46Z,`table` and `template` don't make sense. We should restrict formats that can be specified.
820649136,1799,knqyf263,2022-03-07T12:16:08Z,"I think it is confusing and makes debugging harder for users. Filesystem scanning also supports a single file, so we don't know if it is an image archive or a dependency file. And if your local filesystem accidentally has the same file name as an image name you want to scan, the scanning will fail. I'm sure users will get confused.

Users must know what kind of artifact they want to scan. Adding a prefix is not a big effort. I feel that the disadvantages of the confusion without prefixes would be greater."
820794843,1799,tamirkiviti13,2022-03-07T15:06:06Z,"I completely understand this point of view. However, I believe the user experience here is more important than the specific edge case. We can reflect the process better with dedicated logs, something like - 

""Searching for artifact <artifact_path>…”
“Generating sbom for image “<artifact_path>:latest” 
OR
“Generating sbom for package “<artifact_path>”
…

Plus, to expect Trivy users to figure out the right flag to use might be confusing on its own.

I think that the main goal of the dedicated sbom command is to let the user to simply generate them on a result of a build process. Without inferring the resulting artifact type.

I think we should consider keeping the artifact type detection by trivy"
820827884,1799,knqyf263,2022-03-07T15:38:31Z,"What is the benefit of removing prefixes for users? Do you think adding prefixes is a big effort? I think it is no big deal, so it is better to reduce confusion."
821046662,1799,tamirkiviti13,2022-03-07T19:46:14Z,"I don't think that we need to remove the prefixes, just to make it optional 😁

I think that not requiring the prefixes simplifies the command for the users. In my opinion, this is a very important advantage, and the main goal of creating a dedicated subcommand for SBOM generation.

Another benefit of the ""auto-detection"", is that it makes the command generic, the user doesn't need to use different commands for different types, he has one unified command.
Then, if you use it in a CI pipeline for example, you can make it generic and you don't have to customize the command for each pipeline.

The use of a flag in a cli is to let the user customize the configuration of the command execution, like the SBOM format or quite mode. The artifact type is not up to the user to decide, it is a given thing. The user can't say that a directory is an image (for example).
The only reason I added the prefix option is to handle the spoken edge case - the user can use the prefixes to overcome it, but we want that by default he won't need it.

We want to let the user to generate SBOM in minimum effort, and I think the prefixes add unnecessary effort. "
821426279,1799,knqyf263,2022-03-08T08:26:05Z,">I don't think that we need to remove the prefixes, just to make it optional 😁

No, I mean users can remove prefixes (optional) and how important it is for users.

>In my opinion, this is a very important advantage

I'd like to know why it is very important.

>the main goal of creating a dedicated subcommand for SBOM generation.

As far as I understand, the main goal is generating multiple SBOM formats for multiple formats. The ""auto-detection"" sounds like another thing.

>Another benefit of the ""auto-detection"", is that it makes the command generic, the user doesn't need to use different commands for different types, he has one unified command.

I don't say we should not have `sbom` subcommand. We have one unified command regardless of prefixes.

>We want to let the user to generate SBOM in minimum effort, and I think the prefixes add unnecessary effort.

I'm asking how big the effort is. If users don't know what they want to scan, I agree we should detect it automatically. But they must know it. How hard do they specify it? I feel like the optional prefixes reduce very small effort and bring confusion. If you can tell me how hard it is, I'll be convinced🤔

Another idea is that the artifact type will be a container image by default and they can overwrite it with `fs` or others with the prefix."
821585478,1799,tamirkiviti13,2022-03-08T11:45:29Z,"I don't think that container image as default is a good idea, it is more confusing.

I removed the auto-detection and updated the documentation - now it returns error when the artifact type prefix is unknown (or empty)"
822384544,1799,knqyf263,2022-03-09T08:12:46Z,"I'm not saying the optional prefix is a bad idea, but we should sort out the pros and cons. Actually, I know it is optional in some tools, while required in other tools. We should discuss the trade-off. I'm curious why you think it is very important and we can make it optional if it makes sense."
830578785,1799,knqyf263,2022-03-20T08:32:56Z,"This tab is required.
https://squidfunk.github.io/mkdocs-material/reference/admonitions/#usage"
830578896,1799,knqyf263,2022-03-20T08:33:44Z,"nit
```suggestion
# SBOM
```"
830578953,1799,knqyf263,2022-03-20T08:34:05Z,"```suggestion
              - SBOM: getting-started/cli/sbom.md
```"
830579306,1799,knqyf263,2022-03-20T08:37:09Z,"We can define this flag under SBOM flags at 546-553 line since this flag is unique for SBOM subcommand. Also, we should have another validation for SBOM."
830579382,1799,knqyf263,2022-03-20T08:37:45Z,This description looks stale. We don't have a prefix now.
830579575,1799,knqyf263,2022-03-20T08:39:01Z,We have to check if this type is valid.
830579663,1799,knqyf263,2022-03-20T08:39:53Z,"Also, we need to support git repositories."
830579788,1799,knqyf263,2022-03-20T08:40:49Z,"Also, we can put it under `NewSbomCommand`."
830853531,1799,tamirkiviti13,2022-03-21T08:29:15Z,"> we should have another validation for SBOM.
> 
What do you mean in validation for SBOM?"
830897429,1799,knqyf263,2022-03-21T09:26:51Z,"I mean the same as below.
https://github.com/aquasecurity/trivy/pull/1799#discussion_r820644836"
826896713,1832,knqyf263,2022-03-15T12:05:08Z,"The path is wrong. It would be like

```
/srv/app1/vendor/bundle/ruby/3.0.0/specifications/dotenv-2.7.6.gemspec
```

I'm not sure about nokogiri. Please make the path look correct."
826899565,1832,knqyf263,2022-03-15T12:08:52Z,"If it is not a requirement from CycloneDX, I think we should not sort vulns by ID so that vulns can keep the same order as Trivy's other results such as JSON."
826916933,1832,knqyf263,2022-03-15T12:29:46Z,Just a question. Is `cdx.Advisory` exported as `externalReferences`?
826917733,1832,knqyf263,2022-03-15T12:30:44Z,What if we remove these lines and return an empty slice? Is it problematic?
826918407,1832,knqyf263,2022-03-15T12:31:28Z,"Looks like `%s` is fine in this case.

```suggestion
			log.Logger.Debugf(""cwe id parse error: %s"", err)
```"
826918862,1832,knqyf263,2022-03-15T12:32:01Z,"nit

```suggestion
	for _, cweID := range cweIDs {
```"
826919161,1832,knqyf263,2022-03-15T12:32:19Z,`i` looks like an index.
826932156,1832,knqyf263,2022-03-15T12:47:11Z,"If the data source has severity, Rating will be duplicated?"
826934671,1832,knqyf263,2022-03-15T12:49:59Z,"We probably should not remove VendorSeverity from our result. Then, we can use it for this field.
https://github.com/aquasecurity/trivy/blob/11f4f811236ca05cfb30827e25f312eec45ca097/pkg/result/result.go#L89"
826937172,1832,knqyf263,2022-03-15T12:52:44Z,"Looks like we don't need to convert string to types.Severity.

```suggestion
	case dtypes.SeverityLow.String():
```"
826943342,1832,knqyf263,2022-03-15T12:59:31Z,"Also, specVersion should be updated."
826964143,1832,masahiro331,2022-03-15T13:20:55Z,"In the future, when outputting file hash values as CycloneDX, the processing results must always be equal."
826966406,1832,masahiro331,2022-03-15T13:23:07Z,Thank you I will fix.
826971282,1832,masahiro331,2022-03-15T13:27:39Z,"I may not have understood the question correctly.
I think that Vulnerability advisories and external references are different things.

https://cyclonedx.org/docs/1.4/json/#vulnerabilities_items_advisories"
826981147,1832,masahiro331,2022-03-15T13:37:04Z,"Because Vendor Advisory does not always return the CWE-IDs, I returned nil. 

Although not explicitly stated in the documentation 
probably, by returning an empty array, the absence of a CWE-ID is clearly expressed.
"
826983416,1832,masahiro331,2022-03-15T13:39:08Z,Thank you I will fix that.
826983505,1832,masahiro331,2022-03-15T13:39:13Z,Thank you I will fix that.
826984222,1832,masahiro331,2022-03-15T13:39:54Z,Thank you I will fix that.
826991806,1832,masahiro331,2022-03-15T13:46:34Z,"Thank you !!! 
I forgot about it."
826992085,1832,masahiro331,2022-03-15T13:46:49Z,Thank you I will fix that.
827000368,1832,masahiro331,2022-03-15T13:54:06Z,"I understood. 
I remove that line. Then, use that rather than calculating from Score."
827029081,1832,masahiro331,2022-03-15T14:19:25Z,"The process was incorrect.
Processing in the case of no CVSS has been added."
830583399,1832,knqyf263,2022-03-20T09:09:33Z,"I mean the result is already sorted.
https://github.com/aquasecurity/trivy/blob/3ff3b3792502c77b7f28bfd2015508069f190e04/pkg/result/result.go#L148"
830583648,1832,knqyf263,2022-03-20T09:11:22Z,"You can see `type: advisories` in `externalReferences` here. What is the difference between `advisories` and `externalReferences`?
https://cyclonedx.org/use-cases/#security-advisories"
830584759,1832,knqyf263,2022-03-20T09:19:59Z,"I suggested as below.
https://go.dev/play/p/KFrouKaN4HV"
830585737,1832,masahiro331,2022-03-20T09:27:18Z,Thank you! Understood... 
830900506,1832,masahiro331,2022-03-21T09:30:31Z,"https://github.com/aquasecurity/trivy/pull/1832/files/a2087706990bf1bb2e11a0c2deab44098072cc1f#diff-eb986b7942f46092bdf10342cb7ff4d7f5fea423af72f725d9994596e1eb425aR242-R245

vulns are temporarily unsorted by MAP."
928206854,2567,knqyf263,2022-07-24T06:58:36Z,Do we need to bump the version?
928206858,2567,knqyf263,2022-07-24T06:58:41Z,ditto
928210175,2567,otms61,2022-07-24T07:26:17Z,"No, we don't.
I updated go.mod unintentionally. I checked again, and go.mod needs no modifications."
928210322,2567,otms61,2022-07-24T07:27:11Z,"same
https://github.com/aquasecurity/trivy/pull/2567#discussion_r928210175"
928778103,2567,knqyf263,2022-07-25T11:31:18Z,"Add this link, please.
https://github.com/sigstore/cosign/pull/2096"
928780009,2567,knqyf263,2022-07-25T11:33:34Z,Do we need it?
928781804,2567,knqyf263,2022-07-25T11:35:51Z,"It is a nitpick, but we're recently trying to comply with the same convention.
https://github.com/aquasecurity/trivy/blob/d93a9978005889638472ff198c4af6ef56b1246c/pkg/licensing/classifier_test.go#L16

```suggestion
	tests := []struct {
```"
928781972,2567,knqyf263,2022-07-25T11:36:06Z,"nit: ditto

```suggestion
	for _, tt := range testCases {
```"
928783046,2567,knqyf263,2022-07-25T11:37:22Z,"nit: IMHO, `require` is better here as all the subsequent assertions will fail anyway when it returns an error.

```suggestion
			require.NoError(t, err)
```"
928783225,2567,knqyf263,2022-07-25T11:37:35Z,ditto
928785472,2567,knqyf263,2022-07-25T11:40:19Z,Can we add a keyless section?
928786826,2567,knqyf263,2022-07-25T11:41:55Z,"```suggestion
Trivy generates reports in the [Cosign vulnerability predicate format][vuln-attest-spec]
```

And put it at the bottom.

```
[vuln-attest-spec]: https://github.com/sigstore/cosign/blob/95b74db89941e8ec85e768f639efd4d948db06cd/specs/COSIGN_VULN_ATTESTATION_SPEC.md
```"
929424443,2567,otms61,2022-07-26T00:31:53Z,Alright. I've added the link.
929424938,2567,otms61,2022-07-26T00:33:15Z,"Sorry, I forgot to remove it."
929425199,2567,otms61,2022-07-26T00:33:59Z,I've fixed it.
929425239,2567,otms61,2022-07-26T00:34:07Z,I've fixed it.
929425548,2567,otms61,2022-07-26T00:35:03Z,It makes sense. I've fixed it.
929425664,2567,otms61,2022-07-26T00:35:24Z,I've fixed it.
929425925,2567,otms61,2022-07-26T00:36:11Z,Alright. I've added a keyless signing section.
929425980,2567,otms61,2022-07-26T00:36:20Z,I've fixed it.
930748561,2567,knqyf263,2022-07-27T08:05:12Z,"To align with their doc.

>Cosign Vulnerability Scan Record Attestation Specification

https://github.com/sigstore/cosign/blob/main/specs/COSIGN_VULN_ATTESTATION_SPEC.md

```suggestion
          - Cosign Vulnerability Scan Record: docs/attestation/vuln.md
```"
930750159,2567,knqyf263,2022-07-27T08:06:54Z,"We may have more predicates in the future.

```suggestion
type VulnWriter struct {
```"
930750549,2567,knqyf263,2022-07-27T08:07:17Z,"```suggestion
func NewVulnWriter(output io.Writer, version string) Writer {
```"
930755264,2567,knqyf263,2022-07-27T08:12:02Z,This PR got merged. But we can keep our own structs so that we won't depend on cosign only for those small structs.
931082952,2567,otms61,2022-07-27T13:45:14Z,Done
931083181,2567,otms61,2022-07-27T13:45:25Z,Done
931083299,2567,otms61,2022-07-27T13:45:31Z,Done
931086854,2567,otms61,2022-07-27T13:48:39Z,I have added comments on the background and references.
1104440430,3599,AndreyLevchenko,2023-02-13T12:59:54Z,remote mode should support `DockerHost` properly
1104452845,3599,AndreyLevchenko,2023-02-13T13:11:53Z,it's better to pass all options here. See `tryRemote(...)`
1104466056,3599,AndreyLevchenko,2023-02-13T13:24:09Z,"```golang
    opts:=[]client.Opt{client.FromEnv, client.WithAPIVersionNegotiation()} 
    if host != """" {
	// adding host parameter to the last assuming it will pickup more preference
	opts=append(opts, client.WithHost(host))
    }

    c, err:= client.NewClientWithOpts(opts...)
```"
1104883374,3599,aswath-s-tw,2023-02-13T18:41:15Z,"not sure how `DockerHost` will be an option to scan a remote docker repository like dockerhub etc. i guess leaving it as `""""` (empty) is fine. Please do correct me if I'm wrong."
1104883643,3599,aswath-s-tw,2023-02-13T18:41:32Z,✅
1104883745,3599,aswath-s-tw,2023-02-13T18:41:38Z,✅
1105716879,3599,AndreyLevchenko,2023-02-14T12:02:47Z,"ah right, I mixed it up with client server mode.
Sorry for confusion "
1105718544,3599,aswath-s-tw,2023-02-14T12:04:23Z,marking this as resolved !
1791246889,7664,DmitriyLewen,2024-10-08T06:02:15Z,"```suggestion
		Usage:      ""password from stdin. Comma-separated passwords are not supported"",
```"
1791250259,7664,DmitriyLewen,2024-10-08T06:06:11Z,"```suggestion
		if len(passwords) != 0 {
			log.Warnf(""Using `--password` and `--password-stdin` at the same time is not supported. The password from `--password-stdin` is used."")
		}
		contents, err := io.ReadAll(os.Stdin)
```"
1791265605,7664,DmitriyLewen,2024-10-08T06:22:23Z,"`--password-stdin` doesn't support `Comma-separated`. But we can use `user` and `password`.
If we don't want use a multiple credentials - we need to say about that in docs:


 https://github.com/aquasecurity/trivy/blob/a69a936c37fa15bc28469fdb1e494ba5e549be3e/docs/docs/advanced/private-registries/index.md?plain=1#L41-L54"
1791266850,7664,DmitriyLewen,2024-10-08T06:23:43Z,add new pages in `mkdocs.yml`
1791277373,7664,DmitriyLewen,2024-10-08T06:34:23Z,What if we also add the username here?
1791295835,7664,DmitriyLewen,2024-10-08T06:50:40Z,"`docker login` checks credentials:
```bash
➜ cat pass.txt | docker login --username foo --password-stdin ghcr.io

Error response from daemon: Get ""https://ghcr.io/v2/"": denied: denied
```
We don't do that:
```bash
➜ cat pass.txt | ./trivy auth login --username foo --password-stdin ghcr.io

2024-10-08T12:50:55+06:00	INFO	Logged in	file_path=""config/config.json""
```
Users will expect the same behavior.
We need to add this check (if possible) or write in the docs that Trivy just records the credentials without checking."
1791306309,7664,DmitriyLewen,2024-10-08T06:58:49Z,"nit:
`docker logic` can be used without registry (default `docker.index.io` is used in this case).
I guess we are not docker, so we don't need to use the same logic.

But maybe we want to write in docs that default registry for `docker` is `docker.index.io` (because I never thought about it and checked `docker/cli` to find it 😄 )."
1791361048,7664,knqyf263,2024-10-08T07:39:36Z,"There are several tools supporting authentication nowadays. Most of them don't have the default registry.

```
$ oras login
Error: ""oras login"" requires exactly 1 argument but got 0
Usage: oras login [flags] <registry>
Please specify exactly 1 argument as the registry to log in to. Run ""oras login -h"" for more options and examples
```

```
$ crane auth login
Error: accepts 1 arg(s), received 0
```

```
$ podman login
Error: no registries found in registries.conf, a registry must be provided
```

```
$ trivy auth login
2024-10-08T11:38:31+04:00       FATAL   Fatal error     accepts 1 arg(s), received 0
```

I don't think we need to mention `docker login` here. It's well described.

```
$ trivy auth login -h
Log in to a registry

Usage:
  trivy auth login SERVER [flags]

Examples:
  # Log in to reg.example.com
  cat ~/my_password.txt | trivy auth login --username foo --password-stdin reg.example.com
```

If we see users who get confused, we can update the doc."
1791367916,7664,knqyf263,2024-10-08T07:44:22Z,Added https://github.com/aquasecurity/trivy/pull/7664/commits/36f8cd74d88d6106b6ff8794723536d3540e50a0
1791374085,7664,knqyf263,2024-10-08T07:48:33Z,"Thanks. I always forget to update it. We probably need to automate it...
https://github.com/aquasecurity/trivy/pull/7664/commits/679e3d9198852c642362b2cefd0f6d44eaf95bdc"
1791382759,7664,knqyf263,2024-10-08T07:54:33Z,Nice catch. It's better to exit in that case. Fixed in https://github.com/aquasecurity/trivy/pull/7664/commits/5a4f9cb88e711a209fea51a5e889d64b92ca28ab
1791401840,7664,knqyf263,2024-10-08T08:07:47Z,Added https://github.com/aquasecurity/trivy/pull/7664/commits/6c44acd3ed50e1d8dcfd170b209b74ae79772376
1791490447,7664,knqyf263,2024-10-08T08:59:50Z,"I was aware of the difference, but `crane auth login` doesn't validate the credential, and I complied with it. However, it's better to do that in terms of UX, as you said. Added https://github.com/aquasecurity/trivy/pull/7664/commits/b5be50fa81ae9d88573270a75cd17b8caf366944."
1791517198,7664,DmitriyLewen,2024-10-08T09:17:27Z,"I think we don't need to split `--password-stdin` with `,` here:
https://github.com/aquasecurity/trivy/blob/b5be50fa81ae9d88573270a75cd17b8caf366944/pkg/flag/registry_flags.go#L86-L87
Without `strings.Split` we will immediately return an error on the number of users/passwords."
1791679623,7664,DmitriyLewen,2024-10-08T11:13:09Z,@knqyf263 ^
1791706418,7664,knqyf263,2024-10-08T11:33:20Z,Thanks. I tested it locally and forgot to revert. https://github.com/aquasecurity/trivy/pull/7664/commits/85d0b67265dab2d37102900308ceb2874cd6bae2
1005340280,3037,knqyf263,2022-10-26T07:54:05Z,"What if using `matrix`?
https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs

We can have different installation steps respectively.
https://github.com/actions/setup-go/blob/dcb4ec94ce957a5303565555e54f942163d41ed8/.github/workflows/workflow.yml#L39"
1005341231,3037,knqyf263,2022-10-26T07:55:03Z,What is this file for?
1005341805,3037,knqyf263,2022-10-26T07:55:37Z,Doesn't Rego work on Windows?
1005343510,3037,knqyf263,2022-10-26T07:57:12Z,Analyzing OS doesn't work on Windows?
1005360831,3037,knqyf263,2022-10-26T08:14:26Z,"It always seems to get skipped. Am I missing something? 
Also, this package is essential for scanning Alpine Linux. I think we need to run the test even on Windows."
1005364772,3037,knqyf263,2022-10-26T08:18:14Z,"Don't we need `testing.Short()`?

```suggestion
	if testing.Short() {
		t.Skip(""skipping test in short mode."")
	}
```"
1005371515,3037,knqyf263,2022-10-26T08:24:43Z,"We might be able to leverage `unix`.

```suggestion
//go:build unix
```
https://tip.golang.org/doc/go1.19#go-unix"
1005378728,3037,knqyf263,2022-10-26T08:31:13Z,"Seems like it already skips Windows. Do we need these lines?
https://github.com/aquasecurity/trivy/blob/0c056195650e38aa166c360412ebfe1b013f4510/pkg/fanal/handler/misconf/misconf_test.go#L75-L77"
1005379999,3037,knqyf263,2022-10-26T08:32:24Z,"Do we need the if-statement as only windows reaches here?
https://github.com/aquasecurity/trivy/blob/0c056195650e38aa166c360412ebfe1b013f4510/pkg/fanal/handler/misconf/misconf_test.go#L165-L167"
1005380691,3037,knqyf263,2022-10-26T08:33:03Z,"Looks like it skips anytime.

```suggestion
	if runtime.GOOS == ""windows"" {
		t.Skip(""podman.sock is not available for Windows CI"")
	}
```"
1005382374,3037,knqyf263,2022-10-26T08:34:29Z,This test is essential for container image scanning. Is it hard to run tests on Windows?
1005384192,3037,knqyf263,2022-10-26T08:36:06Z,"What if using maps.Keys?
https://pkg.go.dev/golang.org/x/exp/maps#Keys"
1005386120,3037,knqyf263,2022-10-26T08:37:50Z,"I'd like to know the reason we should check the key existence. Doesn't the following work?

```suggestion
		findingsMap[finding] = true
```"
1005387092,3037,knqyf263,2022-10-26T08:38:44Z,"Please correct me if I'm wrong.

```suggestion
	if runtime.GOOS == ""windows"" {
		t.Skip(""Test satisfied adequately by Linux tests"")
	}
```"
1005387658,3037,knqyf263,2022-10-26T08:39:13Z,ditto
1014072347,3037,owenrumney,2022-11-04T14:14:52Z,It didn't but I've found the issue in defsec so its resolved.
1014155115,3037,owenrumney,2022-11-04T15:16:36Z,fixed
1014155262,3037,owenrumney,2022-11-04T15:16:45Z,fixed in all the places
1014155327,3037,owenrumney,2022-11-04T15:16:49Z,"no reason, it works fine. changed"
1014155363,3037,owenrumney,2022-11-04T15:16:50Z,"yup, good good"
1014155386,3037,owenrumney,2022-11-04T15:16:52Z,test working now
1014155413,3037,owenrumney,2022-11-04T15:16:53Z,this is passing the tests now
1014155434,3037,owenrumney,2022-11-04T15:16:55Z,Fixed this - removed the requirement for `skipWindows`
1014155498,3037,owenrumney,2022-11-04T15:16:58Z,removed
1014157069,3037,owenrumney,2022-11-04T15:18:21Z,"I'll have another look at this. I did it in a single file initially, but it was very ugly with so many conditions"
1015208148,3037,owenrumney,2022-11-07T09:47:06Z,"Okay - done, not as ugly as I was worried it would be"
1045229164,3215,knqyf263,2022-12-11T12:54:30Z,"Does Wolfi provide advisories for unfixed vulnerabilities? If no, we can remove these lines."
1045229390,3215,knqyf263,2022-12-11T12:55:44Z,"This is because Wolfi doesn't have releases and EOL, right? Could you write it down why it always returns true?"
1045229576,3215,knqyf263,2022-12-11T12:57:02Z,This test case is for Alpine Linux. We can remove.
1045229755,3215,knqyf263,2022-12-11T12:58:05Z,It is not used anywhere.
1045273802,3215,luhring,2022-12-11T18:00:56Z,"Okay, thanks! Removed in 40c4eb3f"
1045273846,3215,luhring,2022-12-11T18:01:14Z,"Yes, correct. Added a comment to clarify in 0dfe8322"
1045273861,3215,luhring,2022-12-11T18:01:27Z,Removed in a9f359ff
1045273885,3215,luhring,2022-12-11T18:01:39Z,Removed in 5dee0a29
1510211377,6240,chen-keinan,2024-03-03T08:21:26Z,"nit: 
keep function call consist, in some cases   `dependency.ID` called directly in some cases it has a wrapper `packageID` in another case there is a wrapper [ID](https://github.com/aquasecurity/trivy/blob/7da791118775e8185098c438934851271f75f80e/pkg/dependency/parser/nodejs/pnpm/parse.go#L45)"
1510214121,6240,chen-keinan,2024-03-03T08:36:07Z,remove commented struct
1510220115,6240,chen-keinan,2024-03-03T09:11:18Z,is this test should be removed ? 
1510225235,6240,chen-keinan,2024-03-03T09:41:50Z,"nit:
```suggestion

if pkg.SrcEpoch, err = strconv.Atoi(prop.Value); err != nil {
        return nil, xerrors.Errorf(""invalid src epoch: %w"", err)
}
```"
1510226305,6240,chen-keinan,2024-03-03T09:48:07Z,is this case is needed ? as later `if c.Type == core.TypeLibrary || c.PkgID.PURL != nil {` will catch it
1510227049,6240,chen-keinan,2024-03-03T09:53:03Z,"nit:
```suggestion
			if s.Metadata.Size, err = strconv.ParseInt(prop.Value, 10, 64);  err != nil {
				return xerrors.Errorf(""failed to convert size: %w"", err)
			}
```"
1510685986,6240,DmitriyLewen,2024-03-04T07:22:38Z,"Do you want to store this package in root dir of dependency package (`pkg/dependency`)?
Maybe it make sense to use value familiar to `utils` or `type` dir?"
1510703170,6240,DmitriyLewen,2024-03-04T07:42:00Z,"Some language types still don't use `ID` field (e.g. gobinary - https://github.com/aquasecurity/trivy/blob/c1d26ec3342ec776346c308b30e3a64d90effef1/pkg/fanal/analyzer/language/golang/binary/binary_test.go#L33-L34).
We may need to add ID for them (we can do this in another PR) to avoid reporting differences."
1510913861,6240,DmitriyLewen,2024-03-04T10:09:18Z,"```suggestion
	log.Logger.Debug(""Unmarshalling CycloneDX JSON..."")
```"
1517532485,6240,knqyf263,2024-03-08T10:24:58Z,"Yes, we should do that in another PR. This PR is already large."
1517537563,6240,knqyf263,2024-03-08T10:29:29Z,"It generates an ID for dependencies. I don't think it's terrible to put it under `pkg/dependency.`
The name `utils` should be used as little as possible, as it does not express anything. We only use it when we can't come up with a good package name, no matter how much we think about it. I would like to delete `utils` in the future."
1517548110,6240,knqyf263,2024-03-08T10:39:53Z,"If it is called once, I'd call `dependency.ID` directly. If it is called several times. I defined `packageID`. As you said, `ID` and `packageID` should be aligned. Fixed in https://github.com/aquasecurity/trivy/pull/6240/commits/0e025f96b486d462cb984914d32003a8ec3c9d1a. Thanks!"
1517552091,6240,knqyf263,2024-03-08T10:43:42Z,my bad. thanks. removed in https://github.com/aquasecurity/trivy/pull/6240/commits/ffef67bb40ea0bc38fc0168e412ab36bf66f6a8d
1517552637,6240,knqyf263,2024-03-08T10:44:11Z,fixed in https://github.com/aquasecurity/trivy/pull/6240/commits/d3de909fa6eb8fba4f501fafdd98c8aefb8531d2
1517552746,6240,knqyf263,2024-03-08T10:44:19Z,fixed in https://github.com/aquasecurity/trivy/pull/6240/commits/d3de909fa6eb8fba4f501fafdd98c8aefb8531d2
1517552956,6240,knqyf263,2024-03-08T10:44:29Z,deleted https://github.com/aquasecurity/trivy/pull/6240/commits/d3de909fa6eb8fba4f501fafdd98c8aefb8531d2
1519151902,6240,DmitriyLewen,2024-03-11T04:44:19Z,Got it.
1519159075,6240,DmitriyLewen,2024-03-11T05:00:36Z,"Can you help me understand why we can't just always use `dependency.ID`?

___

>  If it is called once, I'd call dependency.ID directly. If it is called several times. I defined packageID

Add `packageID`:
-  pkg/dependency/parser/java/pom/parse.go

Use `dependency.ID`:
- pkg/dependency/parser/swift/swift/parse.go"
1519173149,6240,knqyf263,2024-03-11T05:29:20Z,I'll update the test.
1519246418,6240,knqyf263,2024-03-11T07:22:20Z,Added https://github.com/aquasecurity/trivy/pull/6240/commits/dda7d7dd4fcb6cc5f2844906c28bda75d6a02e7c
1519248336,6240,DmitriyLewen,2024-03-11T07:24:39Z,@knqyf263 take a look comment above.
1520898747,6240,knqyf263,2024-03-12T06:02:38Z,"Fixed. But it is not that strict policy. It won't end the world even if we don't follow it.
https://github.com/aquasecurity/trivy/pull/6240/commits/1057d92588b7b9acbabcb650edc8f487aec7d82c
https://github.com/aquasecurity/trivy/pull/6240/commits/5bfb04ccaade0637272a49b9eef1be2e07b29ee4"
1574524190,6329,knqyf263,2024-04-22T10:29:52Z,"I found this example in [the doc](https://docs.conan.io/1/reference/conanfile/attributes.html#name).

```
from conan import ConanFile

class MyAndroidNDKRecipe(ConanFile):

  name=""my_android_ndk""
  version=""1.0""

  def package_info(self):
      self.conf_info.define(""tools.android:ndk_path"", ""bar"")
```

We probably need a regexp like ``name\s*=\s*""([^""]+)""``. I want to avoid using regular expressions wherever possible, though."
1574541454,6329,knqyf263,2024-04-22T10:43:29Z,"In addition, if a conanfile.py is small enough, applying regexp to the file content might be simpler and faster.

```
    var (
        namePattern = regexp.MustCompile(`^\s*name\s*=\s*""(?P<name>[^""]+)""$`)
        licensePattern = regexp.MustCompile(`^\s*license\s*=\s*""(?P<license>[^""]+)""$`)
    )
    ...

    content, err := io.ReadAll(r)
    if err != nil {...}

    // Find name
    if match := namePattern.FindSubmatch(content); len(match) > 0 {
        name = string(match[namePattern.SubexpIndex(""name"")])
    }

    // Find license
    if match := licensePattern.FindSubmatch(content); if len(match) > 0 {
        license = string(match[licensePattern.SubexpIndex(""version"")])
    }
```

I am not 100% sure which is faster as I have not compared it with processing one line at a time. I was just thinking out loud, and it's not a performance critical process. You can decide."
1574547143,6329,knqyf263,2024-04-22T10:47:00Z,We also need to parse the version as the license can be different depending on the version. 
1575905222,6329,DmitriyLewen,2024-04-23T09:01:07Z,"if i understand correctly - `conan` uses same file for each version:
repository:
```bash
➜  conan wget -q https://github.com/conan-io/conan-center-index/raw/master/recipes/zlib/all/conanfile.py
➜  conan shasum conanfile.py
2a864cb78aacb2d27818be9c109e4f3fc1293b3a  conanfile.py
```
cache dir:
```bassh
root@3bc66c3cd5d8:/examples2/tutorial/consuming_packages/simple_cmake_project# sha1sum /root/.conan2/p/zlib2cad50ee1214e/e/conanfile.py
2a864cb78aacb2d27818be9c109e4f3fc1293b3a  /root/.conan2/p/zlib2cad50ee1214e/e/conanfile.py
root@3bc66c3cd5d8:/examples2/tutorial/consuming_packages/simple_cmake_project# sha1sum /root/.conan2/p/zlib345774da50bf7/e/conanfile.py
2a864cb78aacb2d27818be9c109e4f3fc1293b3a  /root/.conan2/p/zlib345774da50bf7/e/conanfile.py
```

Repository also contains 1 conanfile.py file for all versions. Look at `conandata.yaml` file - https://github.com/conan-io/conan-center-index/blob/master/recipes/zlib/all/conandata.yml.
 
I was thinking about the case where different versions use different licenses. But I didn't find an example for this.

So I think we can define licenses by package name first.
If we have any problems, we will update this logic."
1575913464,6329,DmitriyLewen,2024-04-23T09:07:05Z,">   name=""my_android_ndk""

It looks as bug, but we can also parse this case.

> We probably need a regexp like name\s*=\s*""([^""]+)"". I want to avoid using regular expressions wherever possible, though.

I also don't trust regexp and try not to use them.
I think we can just remove all the spaces.

> I am not 100% sure which is faster as I have not compared it with processing one line at a time. 

In the files that I checked, `name` and `license` fields are placed in first 20-30 lines.
So I think we won't gain much time by doing this.

> if a conanfile.py is small enough, applying regexp to the file content might be simpler and faster.

675 lines - https://github.com/aquasecurity/trivy/blob/61af875ec3120ca1fcbae2a7e684173b40ca71b5/pkg/fanal/analyzer/language/c/conan/testdata/cacheDir/.conan/data/openssl/3.0.5/_/_/export/conanfile.py"
1575923228,6329,DmitriyLewen,2024-04-23T09:13:16Z,I added removing extra spaces - https://github.com/aquasecurity/trivy/pull/6329/commits/89003d66e95c433cd42bf98926b47a7deeb22dd5
1575927775,6329,knqyf263,2024-04-23T09:16:07Z,">Repository also contains 1 conanfile.py file for all versions. Look at conandata.yaml file - https://github.com/conan-io/conan-center-index/blob/master/recipes/zlib/all/conandata.yml.

Where is the `conanfile.py` file defined in `conandata.yaml`? I found URLs, but didn't find `conanfile.py`."
1575932561,6329,DmitriyLewen,2024-04-23T09:19:18Z,if i understand correctly here it is  -https://github.com/conan-io/conan-center-index/blob/master/recipes/zlib/all/conanfile.py
1575934409,6329,knqyf263,2024-04-23T09:20:38Z,"I probably got you. There is only one file stored in the repository.
https://github.com/conan-io/conan-center-index/blob/258419698ea54b9bfd86a10f786e72759af647c2/recipes/zlib/all/conanfile.py

It seems like conan is unable to define different licenses. We can go with you implementation."
1575937103,6329,knqyf263,2024-04-23T09:22:41Z,">It looks as bug, but we can also parse this case.

Why is it a bug? It does not break the Python semantics."
1575942257,6329,knqyf263,2024-04-23T09:26:27Z,"It introduces another bug with `license = ""Apache or MIT""."
1575942803,6329,DmitriyLewen,2024-04-23T09:26:52Z,"I haven't seen such cases. Also, all test cases use the format `name = ""foo""`. Therefore, I assumed that this was a bug or maybe just a typo in the documentation. 

In any case, this is easy to solve."
1575945349,6329,knqyf263,2024-04-23T09:28:49Z,"It should be more strict. Otherwise, it matches other than the license line. That's why I suggested regexp this time.
https://github.com/conan-io/conan-center-index/blob/55703762e2ca0560fd44d9008e00e61a0a64b23c/recipes/zlib/all/conanfile.py#L90"
1575946343,6329,knqyf263,2024-04-23T09:29:36Z,ditto
1575949465,6329,knqyf263,2024-04-23T09:31:50Z,"Conanfile is written by hand, so any format is possible, isn't it? I think there is a customary preferred format, but it is legitimate."
1575952956,6329,DmitriyLewen,2024-04-23T09:34:11Z,"> I think there is a customary preferred format, but it is legitimate.

You are right 👍 "
1575954488,6329,DmitriyLewen,2024-04-23T09:35:23Z,it looks like we can't avoid using regexp...
1575956519,6329,knqyf263,2024-04-23T09:36:56Z,"If possible, I don't want to use regexp. I'm still considering a way to parse the license line without regexp, but..."
1575957435,6329,knqyf263,2024-04-23T09:37:35Z,Isn't `conanfile.txt` used?
1575983179,6329,DmitriyLewen,2024-04-23T09:54:38Z,take a look this -https://go.dev/play/p/yWIioLCblQ9
1575989355,6329,knqyf263,2024-04-23T09:59:08Z,"Yes, it's better."
1576005273,6329,DmitriyLewen,2024-04-23T10:11:45Z,"cache dir contains only `conanfile.py` files:
```
root@3fcddc7fe2e5:/app# find /root/.conan -name ""conanfile.*""
/root/.conan/data/zlib/1.3.1/_/_/export/conanfile.py
```"
1576043924,6329,DmitriyLewen,2024-04-23T10:45:53Z,used `strings.Cut` - https://github.com/aquasecurity/trivy/pull/6329/commits/9b5d8cea1e38fc7311fae4c7a8bfd40dad7dbbf8 + https://github.com/aquasecurity/trivy/pull/6329/commits/7bedafbbdd9f7979e2f62e0dfdcbe2c742ad83db
1576575948,6329,knqyf263,2024-04-23T16:49:28Z,Is `conanfile.py` required? I'm wondering if we just don't find a project using `conanfile.txt` as most projects use `conanfile.py`. But we can handle `conanfile.txt` if we find such a case.
1576580660,6329,knqyf263,2024-04-23T16:53:41Z,"[strings.Trim](https://pkg.go.dev/strings#Trim) seems better.

```suggestion
		return strings.Trim(attr, `""`)
```

"
1577167446,6329,DmitriyLewen,2024-04-24T02:50:38Z,"IIUC only `conanfile.py` contains [attributes](https://docs.conan.io/2/reference/conanfile/attributes.html) - https://docs.conan.io/2/reference/conanfile_txt.html#conanfile-txt

Therefore, we can't detect package name/license from `conanfile.txt` files.
Then we don't need to parse the conanfile.txt files."
1577187870,6329,DmitriyLewen,2024-04-24T03:22:25Z,Changed in https://github.com/aquasecurity/trivy/pull/6329/commits/0d679665b864cbbe04ac8a3bd4610ea4e85d285b
1632652139,6882,knqyf263,2024-06-10T06:34:50Z,"The code base doesn't seem to support the dependency graph. It needs which package depends on which package. It returns nil here.
https://github.com/aquasecurity/trivy/blob/5bb0789e1bbc44d4961542f87de4a1cd52d1fe9f/pkg/dependency/parser/sbt/lockfile/parse.go#L65"
1633113184,6882,stringbean,2024-06-10T11:45:51Z,"Sorry, corrected that."
1633640906,6882,knqyf263,2024-06-10T18:01:26Z,"Seems like it's not used anywhere. We can delete it.
```suggestion
```"
1634210107,6882,DmitriyLewen,2024-06-11T05:27:14Z,"```suggestion
	sort.Sort(libraries)
	return libraries, nil, nil
```
- use `var libraries ftypes.Packages` for this.
- you can remove this after that: https://github.com/aquasecurity/trivy/blob/1890227545bb7bb1f2cd31a85285a6465ba11a72/pkg/dependency/parser/sbt/lockfile/parse_test.go#L82-L90
"
1634211331,6882,DmitriyLewen,2024-06-11T05:29:03Z,"```suggestion
// lockfile format defined at: https://stringbean.github.io/sbt-dependency-lock/file-formats/version-1.html
type sbtLockfile struct {
	Version      int                     `json:""lockVersion""`
	Dependencies []sbtLockfileDependency `json:""dependencies""`
}

type sbtLockfileDependency struct {
	Organization   string   `json:""org""`
	Name           string   `json:""name""`
	Version        string   `json:""version""`
	Configurations []string `json:""configurations""`
	StartLine      int
	EndLine        int
}
```

I think we can avoid unmarshalling unused fields."
1634215090,6882,DmitriyLewen,2024-06-11T05:34:04Z,"We don't need to parse other files (we only need lock file)
So I think it's better to use https://github.com/aquasecurity/trivy/blob/6e7f62d2debbb4acbeb7ad58ecd8ac7379f19e40/pkg/fanal/analyzer/analyzer.go#L71-L76"
1634217926,6882,DmitriyLewen,2024-06-11T05:38:18Z,"Correct me, if i am wrong.

UUIC default name is `build.sbt.lock`.
But you can use any name with https://stringbean.github.io/sbt-dependency-lock/settings.html#dependencylockfile 

I think in this case we can compare file names with `build.sbt.lock`. For other names user can use https://aquasecurity.github.io/trivy/v0.52/docs/configuration/skipping/#file-patterns

Or do users often use the names `*.sbt.lock`?"
1634219116,6882,DmitriyLewen,2024-06-11T05:39:54Z,"We don't add empty apps.
e.g.:
https://github.com/aquasecurity/trivy/blob/6e7f62d2debbb4acbeb7ad58ecd8ac7379f19e40/pkg/fanal/analyzer/language/java/gradle/lockfile.go#L63-L65"
1634221350,6882,DmitriyLewen,2024-06-11T05:42:57Z,"nit:
we try to use tests with results first (`v1 lockfile` -> `empty lockfile` in your case)."
1634224322,6882,DmitriyLewen,2024-06-11T05:46:42Z,"We include only `runtime` and `compile` scopes for `pom.xml` files:
https://github.com/aquasecurity/trivy/blob/6e7f62d2debbb4acbeb7ad58ecd8ac7379f19e40/pkg/dependency/parser/java/pom/parse.go#L396-L398

I think we need to use same logic here."
1634231302,6882,knqyf263,2024-06-11T05:52:01Z,I thought we would parse other files in the future. Let's ask the future plan of sbt-dependency-lock. @stringbean 
1634399680,6882,stringbean,2024-06-11T08:10:18Z,"Future improvements to sbt-dependency-lock will be added to the existing `*.sbt.lock` files.

Is it still possible to walk the directory in an `analyzer`? It is common to have multiple sub-projects in sbt and each of these would generate their own `build.sbt.lock` file."
1634404418,6882,stringbean,2024-06-11T08:13:15Z,I'm not aware of anyone overriding the default filename (`build.sbt.lock`) but I'm sure someone is using it! I'll change it over to use the default.
1634561891,6882,knqyf263,2024-06-11T09:54:23Z,"What is the sub-project? Does it belong to the main project? Or are they separate projects? If you need to process those files at the same time, you need to use `PostAnalyzer`. If you only need to parse them individually, `Analyzer` is more efficient.
For example, Trivy needs both `package.json` and `package-lock.json` for npm projects and uses `PostAnalyzer` in this case."
1635171999,6882,stringbean,2024-06-11T16:26:53Z,"sbt supports having multiple projects within a single parent project. Generally each sub-project will generate its own artifacts (JARs/WARs/GraalVM binaries etc) and will be in a sub-directory of the parent project.

Configuration for sub-projects (including dependencies) is _extremely_ flexible and can be defined in any of the following locations (or a combination):

- `build.sbt` in the sub-project dir.
- inherited from the root `build.sbt`.
- configured from the `project` directory of the root project.

The sbt-dependency-lock plugin will generate a separate `build.sbt.lock` file in each of the sub-projects that will contain all the dependencies of that sub-project.
"
1635878021,6882,knqyf263,2024-06-12T06:24:07Z,"Do you want to process `build.sbt.lock` separately or together? When processed together, all dependent packages are shown as root `build.sbt.lock`. If not, they are just different lock files and show dependencies respectively."
1644077229,6882,stringbean,2024-06-18T08:41:29Z,After thinking about it I reckon that processing them separately is probably better for the majority of sbt users.
1645517121,6882,knqyf263,2024-06-19T06:58:23Z,Thanks for your insight. We can use the analyzer for now and switch to the post-analyzer when we need to combine those files.
1645536087,6882,DmitriyLewen,2024-06-19T07:09:14Z,"`input.FilePath` is enough.

```suggestion
	filePath := filepath.Join(input.Dir, input.FilePath)
	parser := lockfile.NewParser()

	res, err := language.Analyze(types.Sbt, filePath, input.Content, parser)
```"
1645537953,6882,DmitriyLewen,2024-06-19T07:10:54Z,"nit:
```suggestion
			name := dep.Organization + "":"" + dep.Name
			libraries = append(libraries, ftypes.Package{
				ID:        dependency.ID(ftypes.Sbt, name, dep.Version),
				Name:      name,
```"
1645713823,6882,knqyf263,2024-06-19T08:46:04Z,Done https://github.com/aquasecurity/trivy/pull/6882/commits/3b43605b80c2a442e9a2bcf9f39f22cad2f3db19
1645714079,6882,knqyf263,2024-06-19T08:46:16Z,Done https://github.com/aquasecurity/trivy/pull/6882/commits/23ce7e672b2d25fbdad9a3bfd4e2c8cb5a2c71f8
1528302220,6333,DmitriyLewen,2024-03-18T10:43:42Z,"`Package` already contains location - https://github.com/aquasecurity/trivy/blob/317792433e4e961441f772c6bd22d63873a8c986/pkg/fanal/types/artifact.go#L101

what if we just add location when creating a new vulnerability?
https://github.com/aquasecurity/trivy/blob/317792433e4e961441f772c6bd22d63873a8c986/pkg/detector/library/detect.go#L33-L37"
1528303861,6333,DmitriyLewen,2024-03-18T10:44:46Z,IIRC OS packages don't have locations
1528305951,6333,DmitriyLewen,2024-03-18T10:46:21Z,location from package is different- https://github.com/aquasecurity/trivy/blob/80bdd63cf850e7abc8e1101f12cfced798a4dd78/pkg/report/sarif_test.go#L46-L55
1529457109,6333,parvez0,2024-03-18T23:33:34Z,"> Package already contains location -
> 
> [trivy/pkg/fanal/types/artifact.go](https://github.com/aquasecurity/trivy/blob/317792433e4e961441f772c6bd22d63873a8c986/pkg/fanal/types/artifact.go#L101)
> 
> Line 101 in [3177924](https://github.com/aquasecurity/trivy/commit/317792433e4e961441f772c6bd22d63873a8c986)
> 
>  Locations []Location `json:"",omitempty""`

Not clear on this should I create a new type for Locations in fanal/types for both packages and VulnerabilityDetected?"
1529612673,6333,parvez0,2024-03-19T02:45:19Z,"Not sure, I copied the first test case and used it, it has location fields in packages but if you want I change it as well. Also it will be great if you can point out any relevant reading materials that I can go through. "
1529795148,6333,DmitriyLewen,2024-03-19T06:25:53Z,"You can see the packet parser [here](https://github.com/aquasecurity/trivy/tree/main/pkg/fanal/analyzer/pkg).

You can see the language files that support places [here](https://aquasecurity.github.io/trivy/v0.50/docs/coverage/language/)"
1529797106,6333,DmitriyLewen,2024-03-19T06:27:29Z,"> I copied the first test case and used it,

I think it's better to add language package (like yarn.lock or pom.xml) to avoid confusion when we support this code later."
1529801791,6333,DmitriyLewen,2024-03-19T06:30:59Z,"No. You can use `ftypes.Location` in `VulnerabilityDetected`.

You have already chosen right solution:
https://github.com/aquasecurity/trivy/blob/d1945dd4e3fe8355621ed2aea65d411efd7fc71e/pkg/types/vulnerability.go#L22"
1529822410,6333,DmitriyLewen,2024-03-19T06:53:23Z,"We don't need location cache and package check now.

What do you thin about this update for this function:

```go
func getLocations(vulnLocations []ftypes.Location) []location {
	if len(vulnLocations) == 0 {
		return nil
	}

	var locs []location
	for _, loc := range vulnLocations {
		locs = append(locs, location{
			startLine: loc.StartLine,
			endLine:   loc.EndLine,
		})
	}
	return locs
}
```"
1529824039,6333,DmitriyLewen,2024-03-19T06:55:08Z,"You need to add locations in both places:
- Package
- DetectVulnerability
But these must be the same line numbers."
1531330925,6333,parvez0,2024-03-20T00:36:11Z,"@DmitriyLewen Initially, I considered this approach. However, I decided that implementing backward compatible changes would be beneficial as some other code might be using this. If you're confident that this won't impact the approach, I'll proceed with updating it to match the example you provided."
1531461911,6333,DmitriyLewen,2024-03-20T02:57:44Z,"If another app generates `Report` using Trivy packages - these changes will have no effect.
But if this app creates `Report` on its own, it will need to simply copy `Location` from `Package` to `Vulnerabilities Detected`.

So I think these changes won't be a problem."
1531469041,6333,parvez0,2024-03-20T03:16:35Z,"It appears there might be referring to wrong test case in the comment. My changes actually begin from line 544. Nevertheless, I've refactored the test case for a package vulnerability as per your suggestion."
1531469354,6333,parvez0,2024-03-20T03:17:19Z,I have added a YARN vulnerability as a test case replacing the previous OSDependency
1887990776,8106,DmitriyLewen,2024-12-17T06:55:54Z,"wdyt about moving this function to `pkg/dependency/parser/python/utils.go`
This is the logic described in `pep`, so we can say that it is a common function for python"
1887995355,8106,DmitriyLewen,2024-12-17T07:01:29Z,Is this used anywhere?
1888000403,8106,DmitriyLewen,2024-12-17T07:07:11Z,"UUIC we use only map keys
We still create `UnmarshalTOML` function for dependencies.
Perhaps we want to use map[string]struct{}."
1888116108,8106,DmitriyLewen,2024-12-17T08:43:49Z,"wdyt?
```suggestion
func removeDevDeps(project pyproject.PyProject, app *types.Application) map[string]struct{} {
	packages := lo.SliceToMap(app.Packages, func(pkg types.Package) (string, types.Package) {
		return pkg.ID, pkg
	})

	visited := make(map[string]struct{})
	deps := project.Tool.Poetry.Dependencies
	for groupName, groupDeps := range project.Tool.Poetry.Groups {
		if groupName != ""dev"" {
			lo.Assign(deps, groupDeps.Dependencies)
		}
	}

	for _, pkg := range packages {
		if _, prodDep := deps[pkg.Name]; !prodDep {
			continue
		}
		for _, depID := range pkg.DependsOn {
			walkIndirectDependencies(depID, ...) // like in yarn package
		}

	}
	return visited
}
```"
1888227283,8106,nikpivkin,2024-12-17T09:57:45Z,Done https://github.com/aquasecurity/trivy/pull/8106/commits/e2eb795085415e2240b70c3f9ca9dba591edb51e
1888227412,8106,nikpivkin,2024-12-17T09:57:50Z,Deleted
1888227744,8106,nikpivkin,2024-12-17T09:58:02Z,Done https://github.com/aquasecurity/trivy/pull/8106/commits/a515a32a05037b199885ecb04553ad590797ecc2
1888229004,8106,nikpivkin,2024-12-17T09:58:59Z,"Got the idea, used the package id https://github.com/aquasecurity/trivy/pull/8106/commits/81d513f62096b06816190cb91ede86470081b451"
1889644139,8106,DmitriyLewen,2024-12-18T05:38:34Z,"Do we need to check if a package with `pkgID` exists before adding it to `visited`?
IIUC we check for this case in the parser:
https://github.com/aquasecurity/trivy/blob/faa9d92cfeb8d924deda2dac583b6c97099c08d9/pkg/dependency/parser/python/poetry/parse.go#L109-L112
but I would still prefer to leave the ""correct"" order of actions

wdyt?
"
1889648220,8106,DmitriyLewen,2024-12-18T05:44:04Z,"I am thinking about moving logic into `getProdDeps` and renaming  function to `filterDevDeps`.
wdyt?"
1889903224,8106,nikpivkin,2024-12-18T09:26:01Z,"Should we be strict when checking? A package can only be missing in 1 case if `pyproject.toml` is manually updated and a new dependency is added and no dependency locking is performed, but the `lockfile` is still considered valid."
1889910582,8106,nikpivkin,2024-12-18T09:30:41Z,"OK, but I think it's more correct to call it `filterProdPackages`, since `filderDev` stands for dependency filtering and dev extraction."
1890085511,8106,DmitriyLewen,2024-12-18T11:33:28Z,">A package can only be missing in 1 case if pyproject.toml is manually updated and a new dependency is added and no dependency locking is performed, but the lockfile is still considered valid.

let's stay this check for this case. 
sometimes users forget to update the lock file after updating the ""main"" file
this check will remove ambiguities"
1890220463,8106,nikpivkin,2024-12-18T13:15:33Z,"I was a little mistaken. With recursive traversal, the packet is guaranteed to exist. It can only be missing [here](https://github.com/aquasecurity/trivy/pull/8106/files#diff-299990016b1ff5e9d6606f989344ae472ca4f05f4d74a4f577478d3800586f6bR136-R138) for two reasons: the user removed the package manually from `pyproject.toml` or the package is not a direct dependency, but we cannot determine the exact reason."
1891206050,8106,DmitriyLewen,2024-12-19T06:10:27Z,"okay, then we can remove this check.
"
1893539721,8106,knqyf263,2024-12-20T06:48:55Z,"nit: for consistency and stacktrace
```suggestion
		return xerrors.Errorf(""dependencies must be map, but got: %T"", data)
```"
1893546580,8106,knqyf263,2024-12-20T06:58:27Z,"We should flag [the Dev field](https://github.com/aquasecurity/trivy/blob/d622ca2b1fe40a0eb588478ba9e15d3bd8471a78/pkg/fanal/types/package.go#L187) instead of filtering for `--include-dev-deps`, but if you want to keep the original behavior in this PR, we can add the change in a separate PR."
1893549458,8106,DmitriyLewen,2024-12-20T07:02:31Z,"@knqyf263 as i wrote in https://github.com/aquasecurity/trivy/pull/8080#discussion_r1891328554 - are you sure that we want to add dev deps under `Dev` field?
Previously we only did this upon request from users.

I have yet to meet a python user who needs to scan for dev dependencies
"
1893964745,8106,knqyf263,2024-12-20T13:50:47Z,"Hmm. It sounds reasonable, but we should add a new column showing if --include-dev-deps is supported."
1893978531,8106,knqyf263,2024-12-20T14:03:49Z,"But if the implementation cost is not so different, it's better to mark dev dependencies."
1894593920,8106,nikpivkin,2024-12-21T09:49:34Z,Fixed https://github.com/aquasecurity/trivy/pull/8106/commits/d1e2450c7b1c887a54b3592e402af0861f1af121
1894593985,8106,nikpivkin,2024-12-21T09:50:05Z,I'll open another PR for this one
369567830,376,knqyf263,2020-01-22T13:48:15Z,"Would you replace these lines with an install script?
https://github.com/aquasecurity/trivy-ci-test/blob/bc965f9a1939ab932e6882e64bad990cffbc17d2/.circleci/config.yml#L15"
369569261,376,knqyf263,2020-01-22T13:51:00Z,Does the scan without this line fail? Trivy is supposed to fetch an image from Docker Registry automatically after docker finishes `docker login` equivalent.
369569834,376,knqyf263,2020-01-22T13:52:02Z,Are these lines required?
369580874,376,knqyf263,2020-01-22T14:11:53Z,"It seems to work.
https://gitlab.com/knqyf263/trivy-ci-test/-/jobs/411534871"
369581851,376,knqyf263,2020-01-22T14:13:43Z,"I tested it here.
https://gitlab.com/knqyf263/trivy-ci-test/commit/9338315bb03dace4a14c5d4b97a4e40011ac9866#587d266bb27a4dc3022bbed44dfa19849df3044c_0_32"
369900026,376,tnir,2020-01-23T01:57:15Z,Fix it in d4e0cc9.
369900262,376,tnir,2020-01-23T01:58:20Z,Nice improvement! Fix it in d4e0cc9.
369901724,376,tnir,2020-01-23T02:04:10Z,"As these indicates only that this is ready for the integration with GitLab Container Scanning feature, we can remove them."
369901992,376,tnir,2020-01-23T02:05:08Z,Let's remove them. Did it in df726fe.
369907124,376,tnir,2020-01-23T02:29:52Z,`contrib/gitlab.tpl` is missing now while the install script was improved.
369915412,376,tnir,2020-01-23T03:15:16Z,@knqyf263 Could you help me find out what is wrong? It is confirmed that template exists and the command arguments look correct: https://gitlab.com/tnir/trivy-ci-test/-/jobs/412246842
369992895,376,knqyf263,2020-01-23T08:52:25Z,"I'm sorry the install script fetches the latest version of Trivy, but the latest version doesn't support a file template yet. I'll release it soon."
370020991,376,knqyf263,2020-01-23T09:52:18Z,I've released v0.4.3. Would you try it again?
370222792,376,mrueg,2020-01-23T16:28:40Z,want to make this alpine:3.11 or :latest to be explicit?
370288531,376,mrueg,2020-01-23T18:40:10Z,"is there a way we could not fetch this from master? If the template changes and the downloaded binary does not support it, this could cause incompatibilities.

Maybe we can parse $(trivy --version) and pull from the tag instead?"
370648894,376,tnir,2020-01-24T14:04:50Z,"Thanks. It works now! :smile: https://gitlab.com/tnir/trivy-ci-test/-/jobs/414121133

Script will be updated when other matters are addressed."
370649209,376,tnir,2020-01-24T14:05:25Z,Let use use `3.11` 👍 
370650813,376,tnir,2020-01-24T14:08:41Z,"You are right. We should use environment variables to fix. With environment variables with the default value of Trivy version, (GitLab CI) users can inject arbitrary version of (Trivy-GitLab) template, which will reduce regression and be helpful for users of non-latest version GitLab."
370758058,376,mrueg,2020-01-24T17:42:07Z,"we could call the trivy binary after fetching and installing.

`TRIVY_VERSION=${TRIVY_VERSION:-$(/usr/local/bin/trivy --version | sed -e ""s/trivy version //"")}`"
370988378,376,tnir,2020-01-26T10:31:19Z,"@mrueg Thanks for your suggestion. On reflection, we do not have to get version from Trivy binary 😄 

I prefer pinning the Trivy version to make users' DevOps robust as much as possible."
1242182155,4706,knqyf263,2023-06-26T13:19:47Z,"```suggestion
	SystemInstalledFiles []string `json:"",omitempty`
```"
1242182829,4706,knqyf263,2023-06-26T13:20:17Z,Why do we need this field?
1242230945,4706,AliDatadog,2023-06-26T13:52:12Z,Good catch! It was added by mistake. It will be fixed along with the other comment in the next commit.
1246185175,4706,knqyf263,2023-06-29T06:47:59Z,Seems like this file doesn't have to be updated
1246185261,4706,knqyf263,2023-06-29T06:48:05Z,ditto
1246185383,4706,knqyf263,2023-06-29T06:48:12Z,ditto
1246187576,4706,knqyf263,2023-06-29T06:50:25Z,Is it needed? `pkg` seems to be already reset above.
1246188282,4706,knqyf263,2023-06-29T06:51:12Z,"Looks like an absolute path, no?"
1246190456,4706,knqyf263,2023-06-29T06:53:26Z,"`KeepSystemInstalledFiles` shouldn't always be true. We should pass the value for each test case. Otherwise, we cannot test the case where `KeepSystemInstalledFiles` is false. "
1273380077,4706,AliDatadog,2023-07-25T11:15:32Z,"Indeed, I changed it"
1273380313,4706,AliDatadog,2023-07-25T11:15:46Z,It should be removed as well
1275905618,4706,AnaisUrlichs,2023-07-27T08:18:13Z,do we need to further document the usage of the flag?
1291202935,4706,AliDatadog,2023-08-11T10:58:15Z,"Thanks for the comment !
I changed it to`--retain-system-installed-files     retains the files installed by each package in the analysis output when set to true.`
Do we need to add anything ?"
1299318597,4706,knqyf263,2023-08-20T07:14:45Z,"nit: This field is located under `Package`, so we can simply call it `InstalledFiles`.
```suggestion
	InstalledFiles []string `json:"",omitempty""`
```"
1299318944,4706,knqyf263,2023-08-20T07:17:07Z,"This mistake is not from your change, but we should close this file.

```suggestion
			f, err := os.Open(tt.path)
			defer f.Close()
```"
1299319355,4706,knqyf263,2023-08-20T07:20:22Z,"Does `pkg` make more sense?

```suggestion
		Name:       ""retain-pkg-installed-files"",
```"
1299319799,4706,knqyf263,2023-08-20T07:23:35Z,We should merge these two values since `SystemInstalledFiles` is now just a collection of installed files for all packages. It doesn't make sense to have them differently. But we can refactor that after merging the PR.
884273557,2186,chen-keinan,2022-05-29T13:42:56Z,"```suggestion
$ trivy k8s cluster --report=summary
```"
884273615,2186,chen-keinan,2022-05-29T13:43:13Z,"```suggestion
$ trivy k8s cluster --severity=CRITICAL --report=all
```"
884273654,2186,chen-keinan,2022-05-29T13:43:37Z,"```suggestion
$ trivy k8s all -n kube-system --report=summary
```"
884273707,2186,chen-keinan,2022-05-29T13:43:52Z,"```suggestion
$ trivy k8s cluster --format json -o results.json
```"
884273727,2186,chen-keinan,2022-05-29T13:44:05Z,"```suggestion
      $ trivy k8s cluster --report summary
```"
884273757,2186,chen-keinan,2022-05-29T13:44:18Z,"```suggestion
      $ trivy k8s all -n kube-system --report summary
```"
895115443,2186,knqyf263,2022-06-12T06:20:42Z,Does k8s subcommand accept multiple commands?
895170758,2186,chen-keinan,2022-06-12T12:56:57Z,does all and cluster subcommands should appear at the end
895175527,2186,chen-keinan,2022-06-12T13:33:54Z,"I would put more informative error msg , so the user will know what to do to fix it "
895175563,2186,chen-keinan,2022-06-12T13:34:01Z,"I would put more informative error msg, so the user will know what to do to fix it "
895180402,2186,chen-keinan,2022-06-12T14:06:57Z,"```suggestion
		return xerrors.Errorf(""failed getting k8s cluster: %w"", err)
```"
895184465,2186,josedonizetti,2022-06-12T14:25:00Z,"The idea is supporting resources scanning like kubectl:

eg: 

```
trivy k8s pod pi
trivy k8s deploy orion
...
```"
895184684,2186,josedonizetti,2022-06-12T14:26:12Z,"Yes, `all` and `cluster` should be at the end, as they are `targets`. Like we do for other trivy commands.
`trivy image --security-checks=config alpine:latest`"
897638998,2186,knqyf263,2022-06-15T07:38:34Z,We can change it after we move to cobra.
897639802,2186,knqyf263,2022-06-15T07:39:25Z,Thanks. It makes sense.
919955456,2494,knqyf263,2022-07-13T11:13:21Z,Can you tell me the reason you removed this line? I thought it would be helpful even when we fetch only a single branch.
919956088,2494,knqyf263,2022-07-13T11:14:13Z,debug code?
919956925,2494,knqyf263,2022-07-13T11:15:20Z,"Why don't you use NewBranchReferenceName?

```suggestion
		cloneOptions.ReferenceName = plumbing.NewBranchReferenceName(artifactOpt.FetchBranch)
```"
919957213,2494,knqyf263,2022-07-13T11:15:43Z,"same
```suggestion
		cloneOptions.ReferenceName = plumbing.NewTagReferenceName(artifactOpt.FetchTag)
```"
919959791,2494,knqyf263,2022-07-13T11:19:07Z,"nit
```suggestion
		ConfigName: ""repository.branch"",
```"
919959917,2494,knqyf263,2022-07-13T11:19:15Z,"```suggestion
		ConfigName: ""repository.commit"",
```"
919960042,2494,knqyf263,2022-07-13T11:19:25Z,"```suggestion
		ConfigName: ""repository.tag"",
```"
919961084,2494,knqyf263,2022-07-13T11:20:51Z,"These fields require a prefix as this struct is embedded into `Options`.

```suggestion
	RepoBranch string
	RepoCommit string
	RepoTag    string
```"
919961303,2494,knqyf263,2022-07-13T11:21:10Z,"```suggestion
	return ""Repository""
```"
919994915,2494,ShubhamPalriwala,2022-07-13T12:02:09Z,"So this now, by default, stays removed because a user might pass the `--commit` argument for which we would need the entire commit history.

And for cases when its not a `--commit`, we set it back to `1` [here](https://github.com/aquasecurity/trivy/pull/2494/files#diff-1e3db99af526dcac318c7ae2da42c97f906ffbef448a9b8f34a6814f566f021fR56)"
919995352,2494,ShubhamPalriwala,2022-07-13T12:02:42Z,"Sorry my bad, forgot to remove the debugs here."
919997449,2494,ShubhamPalriwala,2022-07-13T12:05:16Z,"Woah, did not notice this function at all. Thanks a lot, implementing this for tags as well as branches both!"
919997676,2494,ShubhamPalriwala,2022-07-13T12:05:32Z,Implementing the change
920028675,2494,knqyf263,2022-07-13T12:39:22Z,It makes sense. Thanks.
920834595,2494,knqyf263,2022-07-14T07:20:04Z,"We don't depend on the Internet in unit tests. Please think about the use of a dummy server.
https://github.com/aquasecurity/trivy/blob/11073799102054f2a8340a2c1e8e126501c9d6f8/pkg/fanal/artifact/remote/git_test.go#L17-L30"
920835141,2494,knqyf263,2022-07-14T07:20:42Z,"```suggestion
	// Repository options
	RepoBranch       string
	RepoCommit       string
	RepoTag          string
```"
920905871,2494,ShubhamPalriwala,2022-07-14T08:40:24Z,Could not find much of documentation about this :/ Can you help me out here if possible?
920906165,2494,ShubhamPalriwala,2022-07-14T08:40:43Z,Made and pushed these changes
921104179,2494,knqyf263,2022-07-14T12:34:57Z,"We have a bare git repository in `testdata`.

```
$ cd testdata
$ git clone -l ./test.git ./test
$ cd test
$ git tag v1.0.0
$ git push
```
I hope it works."
921203543,2494,ShubhamPalriwala,2022-07-14T14:12:13Z,"Thank you for this, was able to do it (I hope) correctly!"
1029003601,3130,chen-keinan,2022-11-22T08:23:17Z,it will be more informative to put more info and the cis checks and link to spec
1029019282,3130,chen-keinan,2022-11-22T08:38:09Z,wonder if there is a way to override it so it will not show `cis` for `trivy k8s` and `nsa` for  `trivy aws` sub command as it is not supported and throw an error if used by users
1029955078,3130,simar7,2022-11-23T01:30:39Z,thanks added
1029955793,3130,simar7,2022-11-23T01:32:46Z,"We could leave the specs out of the help text to make it more generic. 
```suggestion
		Usage:      ""compliance report to generate"",
```"
1031337964,3130,chen-keinan,2022-11-24T10:20:34Z,"The compliance framework also provide data when `opt.ReportFormat == ""all""` not just `summary` and also support json and table view.

so in total you can produce four types of output:
- table with report == summary
- table with report == all
- json with report == summary
- json with report == all"
1031766881,3130,simar7,2022-11-24T18:31:51Z,"`--format=json --report=summary`: https://github.com/aquasecurity/trivy/pull/3130/files#diff-cccb8f0a54933d9201a68010d9f686e9f61bd16677fb5e8d21c9c8b3ff6bf2ddR139-R161

`--format=json --report=all`: 
```json
{
  ""ArtifactName"": ""<redacted>"",
  ""ArtifactType"": ""aws_account"",
  ""Metadata"": {
    ""ImageConfig"": {
      ""architecture"": """",
      ""created"": ""0001-01-01T00:00:00Z"",
      ""os"": """",
      ""rootfs"": {
        ""type"": """",
        ""diff_ids"": null
      },
      ""config"": {}
    }
  },
  ""Results"": [
    {
      ""Target"": ""arn:aws:iam::<redacted>:user/AzureADRoleManager"",
      ""Class"": ""config"",
      ""Type"": ""cloud"",
      ""MisconfSummary"": {
        ""Successes"": 0,
        ""Failures"": 4,
        ""Exceptions"": 0
      },
      ""Misconfigurations"": [
        {
          ""Type"": ""AWS"",
          ""ID"": ""AVD-AWS-0144"",
          ""Title"": ""Credentials which are no longer used should be disabled."",
          ""Description"": ""CIS recommends that you remove or deactivate all credentials that have been unused in 90 days or more. Disabling or removing unnecessary credentials reduces the window of opportunity for credentials associated with a compromised or abandoned account to be used."",
          ""Message"": ""User access key '<redacted>' has not been used in \u003e90 days"",
          ""Resolution"": ""Disable credentials which are no longer used."",
          ""Severity"": ""MEDIUM"",
          ""PrimaryURL"": ""https://avd.aquasec.com/misconfig/avd-aws-0144"",
          ""References"": [
            ""https://avd.aquasec.com/misconfig/avd-aws-0144""
          ],
          ""Status"": ""FAIL"",
          ""Layer"": {},
          ""CauseMetadata"": {
            ""Resource"": ""arn:aws:iam::<redacted>:user/AzureADRoleManager"",
            ""Provider"": ""aws"",
            ""Service"": ""iam"",
            ""Code"": {
              ""Lines"": null
            }
          }
        },
      <snip>..
    }
  ]
}
```

`--format=table --report=summary`: https://github.com/aquasecurity/trivy/pull/3130/files#diff-fe969e5428e7e462874a674a3116c74787735b8a6d25f113cd3c06653433eb38

`--format=table --report=all`: https://github.com/aquasecurity/trivy/pull/3130/files#diff-7f47b6c95941e5b66cd6ccd4350bce2bf414042f8ae7d25b8157c298e96dc282 (this combination today doesn't actually return a table in trivy k8s FYI).


Please let me know if I've missed something."
1031817236,3130,chen-keinan,2022-11-24T20:52:31Z,"@simar7 do we want to produce report for `opt.ReportFormat == all`? 
maybe the condition `opt.ReportFormat == ""summary""`  can be removed?"
1031865188,3130,simar7,2022-11-24T21:33:19Z,"Yes I agree, that makes sense. Updated here https://github.com/aquasecurity/trivy/pull/3130/commits/feb12ccc0f921188150279759d034802990c29d4"
1037011394,3130,knqyf263,2022-12-01T11:43:49Z,"We can override usage like https://github.com/aquasecurity/trivy/pull/3130/commits/10ad755a29b1a51c5788ef3ff3bc2be55292698e, but should the value `cis`? I thought it should be `awscis1.2` and `awscis1.4`. Please correct me if I'm missing something.
BTW, even though we can override the accepted values, do we still need the `aws` prefix? I mean `cis1.2` vs `awscis1.2`."
1037066649,3130,knqyf263,2022-12-01T12:45:59Z,I prefer text-based as it is easy to update. Do you have any reason you want to use an image here?
1037072638,3130,knqyf263,2022-12-01T12:52:23Z,"This page is not included in mkdocs.yml.

```
INFO     -  The following pages exist in the docs directory, but are not included in the ""nav"" configuration:
  - docs/cloud/aws/compliance.md
```"
1037073328,3130,knqyf263,2022-12-01T12:53:09Z,"And the page is broken.
<img width=""1223"" alt=""image"" src=""https://user-images.githubusercontent.com/2253692/205057766-792a98fd-35e5-4aa6-8054-56c5c718a3cd.png"">

You can build the doc and test it locally with `make mkdocs-serve`."
1038500488,3130,simar7,2022-12-02T20:15:55Z,ah sorry thanks I forgot about this - I fixed it.
1038501011,3130,simar7,2022-12-02T20:16:47Z,"It was an image in the k8s compliance markdown so I decided to go that route. I changed it to text, no problem."
1038922017,3130,knqyf263,2022-12-04T07:31:46Z,"I think you need spaces or tabs here.

<img width=""697"" alt=""image"" src=""https://user-images.githubusercontent.com/2253692/205479504-3ca06263-f60d-431f-9c10-a9205a2f6885.png"">
"
1038924752,3130,knqyf263,2022-12-04T07:54:46Z,"Fixed in https://github.com/aquasecurity/trivy/pull/3130/commits/813d6e9e997acf4c656462688321bcdd23b84869

"
1038925007,3130,knqyf263,2022-12-04T07:56:44Z,"@simar7 Please review my change. Also, do we support CIS 1.4 too? Don't we mention that in the doc? Looks like the current doc mentions CIS 1.2 only."
1041589724,3130,simar7,2022-12-06T23:44:34Z,thanks for catching that!
1041691766,3130,simar7,2022-12-07T02:36:15Z,"Your change looks good, thanks I learnt something new!

I updated the docs to include 1.4 as well.

As for the prefixes, I think we should include them. CIS publishes many benchmarks and we should be clear that its the AWS version of the CIS benchmarks."
1042574403,3130,knqyf263,2022-12-07T18:59:08Z,">As for the prefixes, I think we should include them. CIS publishes many benchmarks and we should be clear that its the AWS version of the CIS benchmarks.

Got it 👍 "
1307167178,5037,knqyf263,2023-08-28T09:14:56Z,"Is there any specific logic for the combination of CycloneDX and CocoaPods besides PURL? If not, we don't need to test the same thing again here as we test the PURL logic in the `purl` package enough. "
1307182321,5037,DmitriyLewen,2023-08-28T09:28:23Z,"We don't test [Package()](https://github.com/aquasecurity/trivy/blob/9345a98ed1125d022e057d2c4066df0e17662cf1/pkg/purl/purl.go#L41) function in `purl` package.
I only found 1 my mistake with `subpath` when testing SBOM manually.
That is why i added tests in SBOM.
"
1307335724,5037,knqyf263,2023-08-28T12:03:23Z,"Oh, we should add `TestPackage` then."
1308153298,5037,DmitriyLewen,2023-08-29T03:25:51Z,Removed added test for SBOM and added `TestPackage`.
1308246386,5037,knqyf263,2023-08-29T05:53:41Z,We should mention the limitation that all modules are detected under the same git URL.
1308246578,5037,knqyf263,2023-08-29T05:53:58Z,"```suggestion
|    CocoaPods    | Podfile.lock     |            ✓            |     Included     |                  ✓                   |    -     |
```"
1308246773,5037,knqyf263,2023-08-29T05:54:12Z,"```suggestion
## Swift
```"
1308246882,5037,knqyf263,2023-08-29T05:54:21Z,"```suggestion
## CocoaPods
```"
1308247406,5037,knqyf263,2023-08-29T05:55:05Z,The link should be permanent. The main branch can be updated.
1308247761,5037,knqyf263,2023-08-29T05:55:40Z,"```suggestion
CocoaPods uses package names in `PodFile.lock`, but [GitHub Advisory Database][ghsa] uses git links. 
```"
1308249387,5037,knqyf263,2023-08-29T05:58:00Z,Isn't the subpath `#Twitter` in the example of `pkg:cocoapods/ShareKit@2.0#Twitter`?
1308263842,5037,DmitriyLewen,2023-08-29T06:18:55Z,Done
1308263890,5037,DmitriyLewen,2023-08-29T06:18:58Z,Done
1308263946,5037,DmitriyLewen,2023-08-29T06:19:03Z,Done
1308265062,5037,DmitriyLewen,2023-08-29T06:20:32Z,Done
1308265141,5037,DmitriyLewen,2023-08-29T06:20:37Z,Done
1308265207,5037,DmitriyLewen,2023-08-29T06:20:42Z,Done
1308268479,5037,DmitriyLewen,2023-08-29T06:24:58Z,"I'm not sure I understand what you mean.
`Twitter` is subpath for `pkg:cocoapods/ShareKit@2.0#Twitter`
`NSData+zlib`is subpath for `pkg:cocoapods/GoogleUtilities@7.5.2#NSData+zlib`"
1308279744,5037,knqyf263,2023-08-29T06:38:31Z,"So, why do you join name and subpath with `/`?"
1308285401,5037,DmitriyLewen,2023-08-29T06:45:11Z,"`CocoaPods` uses `<ModuleName>/<SubmoduleName>` format.
e.g for `GoogleUtilities`:
```
➜  cat Podfile.lock 
PODS:
  - GoogleUtilities (7.5.2):
    - GoogleUtilities/AppDelegateSwizzler (= 7.5.2)
    - GoogleUtilities/Environment (= 7.5.2)
    - GoogleUtilities/ISASwizzler (= 7.5.2)
    - GoogleUtilities/Logger (= 7.5.2)
    - GoogleUtilities/MethodSwizzler (= 7.5.2)
    - GoogleUtilities/Network (= 7.5.2)
    - ""GoogleUtilities/NSData+zlib (= 7.5.2)""
...
```
I join `module` and `submodule` with `/` to reproduce this format."
1308287858,5037,DmitriyLewen,2023-08-29T06:47:57Z,I will add comment for this
1308290197,5037,knqyf263,2023-08-29T06:50:22Z, Got it. Thanks.
1308297712,5037,DmitriyLewen,2023-08-29T06:57:53Z,Added in 775a6c39af9f14214fdf1c08f322b50c12194760
1308437127,5037,knqyf263,2023-08-29T08:49:56Z,"Thanks! BTW, is `GoogleUtilities` a pod name, a module name or a spec name? Is `GoogleUtilities/AppDelegateSwizzler` a subpod, submodule or subspec? ""Module might be used in Swift, but not used in CocoaPods. I just want to make sure of the official name.
https://guides.cocoapods.org/syntax/podspec.html"
1308543679,5037,DmitriyLewen,2023-08-29T10:15:45Z,"I'm not sure we can choose ""right"" name.
`CocoaPods` uses:
- [Pod](https://guides.cocoapods.org/syntax/podspec.html#name) 
- [Library](https://guides.cocoapods.org/syntax/podspec.html#specification)
- [Module](https://guides.cocoapods.org/syntax/podspec.html#module_name)
- [Spec/SubSpec/sub-specifications](https://guides.cocoapods.org/syntax/podspec.html#subspec)"
1308720833,5037,knqyf263,2023-08-29T12:12:07Z,"We'll go with ""module"" and fix it later if needed."
778715326,1539,AndreyLevchenko,2022-01-05T10:37:49Z,seems hint is not required if you are using `_`
778761481,1539,AndreyLevchenko,2022-01-05T11:54:41Z,why is it separate method? It's never called without `Download()` 
778821171,1539,AndreyLevchenko,2022-01-05T13:34:38Z,"why don't use `Decompress()` method? It would be at least more clear
https://github.com/hashicorp/go-getter/blob/main/decompress_tar.go#L132"
778832600,1539,AndreyLevchenko,2022-01-05T13:51:35Z,it's just a question: Is order of `defer` important?
778846045,1539,AndreyLevchenko,2022-01-05T14:10:18Z,"it doesn't work well if customer reverts to previous trivy version (Like 0.21.3). It's a cache anyway, why doesn't just override it with version supported by current `trivy` binary?"
778849620,1539,AndreyLevchenko,2022-01-05T14:15:02Z,actually I think it may be useful to stop use of outdated db. But in this case missed scenario is: Version is not updated anymore but user keep using old binary. This may lead to false negatives as db will be outdated
778853921,1539,AndreyLevchenko,2022-01-05T14:20:40Z,I think this is ok long term. But for now it will break processing for everyone who is using `--skip-update`  option (until they update db using `oras`)
778857778,1539,AndreyLevchenko,2022-01-05T14:25:34Z,"one of option to fix that add check like
```Now().After(meta.NextUpdate)```
meaning: ""expected update has not happen"""
778942660,1539,knqyf263,2022-01-05T16:05:24Z,"Do you mean if `defer` should be called after the error handling? When it fails to create a temp file, we don't need to close and remove it."
778946881,1539,knqyf263,2022-01-05T16:10:53Z,"We added breaking change to Trivy DB, so the newer Trivy doesn't work with an old database. `--skip-update` should not work with the old DB. In other words, the following case should fail:

- Trivy: v0.24.0
- Trivy DB: v1"
778949966,1539,knqyf263,2022-01-05T16:14:47Z,">one of option to fix that add check like
>Now().After(meta.NextUpdate)
>meaning: ""expected update has not happen""

Yes, but we need to add the check to the older binary, right? It doesn't make sense to add the check to the new version. If you are talking about future migration like v2 to v3, you are right."
778951635,1539,knqyf263,2022-01-05T16:16:57Z,"> It's a cache anyway, why doesn't just override it with version supported by current trivy binary?

We want to encourage users to update to the latest version. We can download the v1 DB when they use an old binary, but the v1 database will be outdated and lead to false negatives as you said."
778952573,1539,knqyf263,2022-01-05T16:18:11Z,"For those who revert the binary to an old version, they need to clear the new database once and download the old database explicitly."
778954775,1539,knqyf263,2022-01-05T16:21:14Z,"It failed in my environment.

```
pkg/commands/app.go:401:8: Error return value of `mc.Get` is not checked (errcheck)
        meta, _ := mc.Get()
              ^
```"
778983960,1539,knqyf263,2022-01-05T16:58:48Z,"That is because `UpdateDownloadedAt()` is always called with `Download()`, but `Download()` may not be called with `UpdateDownlodedAt()` in client/server mode. But I updated it according to your suggestion.
https://github.com/aquasecurity/trivy/pull/1539/commits/70677288ac3b9b51cb097b292dd7618a55558334"
778985797,1539,knqyf263,2022-01-05T17:01:08Z,"The benefit of `go-getter` can take a variety of input formats and users don't have to care about it. In this case, the input is a local compressed file, but we can use the same function `Download()`.
https://github.com/hashicorp/go-getter#supported-protocols-and-detectors"
779433789,1539,AndreyLevchenko,2022-01-06T10:04:37Z,Should it be documented somewhere?
779438646,1539,AndreyLevchenko,2022-01-06T10:12:50Z,I can understand it will work correctly but question is about code readability. It may be unexpected for someone that method called `Download()` used to decompress file.
779447352,1539,AndreyLevchenko,2022-01-06T10:27:36Z,I think the check I suggested is required (or something else). Just to notify users (eventually) that db with old schema version is not updated anymore. (if they stick to old binary version for some reasons). I can create separate issue if required.
779463512,1539,knqyf263,2022-01-06T10:53:12Z,OK. We can do that in a dedicated PR.
779464225,1539,knqyf263,2022-01-06T10:54:25Z,"Is the error not enough? If you feel so, we can document it."
779469038,1539,knqyf263,2022-01-06T11:03:07Z,"First of all, my answer is to your question. We don't need to use `Decompress()` since `Get()` in `go-getter` can do the same thing.

> why don't use Decompress() method?

From the perspective of readability, ""download"" may be confusing as you said. Should we rename `Download()` to `Get()` to be aligned with `go-getter`? Or, we can define aliases like:

```
func Download(ctx context.Context, src, dst, pwd string) error {
    return get(ctx, src, dst, pwd)
}

func Decompress(ctx context.Context, src, dst, pwd string) error {
    return get(ctx, src, dst, pwd)
}


func get(ctx context.Context, src, dst, pwd string) error {
...
}
```

What do you think?"
779484181,1539,AndreyLevchenko,2022-01-06T11:32:03Z,let's better keep it as is
779489363,1539,AndreyLevchenko,2022-01-06T11:42:06Z,"I checked and seems there is no good place to document it. Change log has reference to this PR. And it's good enough
But I would change message to mention ""schema"". Like ""Local DB has schema version which is not supported anymore.  It needs to be updated"". Just to distigush that it's not regular db update is required."
779558561,1539,knqyf263,2022-01-06T13:49:19Z,"Thanks. I've updated. Also, I mentioned it in the trouble shooting doc.
https://github.com/aquasecurity/trivy/pull/1539/commits/576a35457926692cc7530d33658d2453125d6be8"
872937564,2111,itaysk,2022-05-14T06:08:30Z,"we left compliance out of this release, so remove this"
872937930,2111,itaysk,2022-05-14T06:12:20Z,remove reference of CIS benchmarks
872937966,2111,itaysk,2022-05-14T06:12:38Z,remove reference of compliance
872938131,2111,itaysk,2022-05-14T06:14:49Z,remove
872938531,2111,itaysk,2022-05-14T06:18:59Z,remove this
872938860,2111,itaysk,2022-05-14T06:22:38Z,remove
872946195,2111,owenrumney,2022-05-14T07:33:48Z,Removed
872946203,2111,owenrumney,2022-05-14T07:33:53Z,Removed
872946207,2111,owenrumney,2022-05-14T07:33:56Z,Removed
872946211,2111,owenrumney,2022-05-14T07:33:59Z,Removed
872946230,2111,owenrumney,2022-05-14T07:34:05Z,Removed
872946235,2111,owenrumney,2022-05-14T07:34:09Z,Removed
873115020,2111,chen-keinan,2022-05-15T06:10:19Z,"This probably should be Trivy related version, or I assume this section can be removed if it wasn't exist before"
873629884,2111,chen-keinan,2022-05-16T11:47:18Z,remove the kube hunter line : `kubectl delete crd kubehunterreports.aquasecurity.github.io`
873632138,2111,owenrumney,2022-05-16T11:50:00Z,"should the one above it also be removed?
"
1020907600,2910,knqyf263,2022-11-13T13:58:03Z,"nit: move it under `k8s`.

https://github.com/aquasecurity/trivy/blob/6d4ed60390460b22149b4a2902fec9a03d1b5c0f/.github/workflows/semantic-pr.yaml#L44"
1020907968,2910,knqyf263,2022-11-13T14:01:09Z,What is this for?
1020908401,2910,knqyf263,2022-11-13T14:04:04Z,Can't we use t.TempDir()?
1020908688,2910,knqyf263,2022-11-13T14:05:27Z,It is not obvious what it looks for. Please add comments here.
1020908886,2910,knqyf263,2022-11-13T14:06:52Z,`--dependency-tree` should work with the VM scanning
1020910090,2910,knqyf263,2022-11-13T14:14:32Z,I think it is better to just configure the default value to 30 mins. I'll update AWS scanning later.
1020919930,2910,knqyf263,2022-11-13T15:20:08Z,"```suggestion
func NewFile(cache vm.Cache) *File {
```"
1020921747,2910,knqyf263,2022-11-13T15:31:42Z,Do we need `VM` here? What if just returning `io.SectionReader`?
1020921961,2910,knqyf263,2022-11-13T15:32:49Z,Why don't you call that in `Clean()`?
1020922405,2910,knqyf263,2022-11-13T15:35:39Z,"Cannot use snapshot ID as is for the cache key. The cache key should be re-calculated according to analyzer versions, options, etc."
1020939741,2910,knqyf263,2022-11-13T17:41:27Z,I'm not sure it works properly.
1022957892,2910,masahiro331,2022-11-15T15:44:47Z,"Need to this test.
https://github.com/aquasecurity/trivy/pull/2910/files#diff-eb8f95b8fc1867f2df1333116b8f9ede34a9582967ae444836e1d4fc84659994R26-R54"
1022960175,2910,masahiro331,2022-11-15T15:46:38Z,"Because Target is include directory path. 


https://github.com/aquasecurity/trivy/pull/2910/files#diff-ba9f452540511ba6049047aea1faaeba2a76cbfec9d81b8c25d86de998f88fe3R23"
1022979766,2910,masahiro331,2022-11-15T16:02:23Z,"Because it is no longer needed when Inspect method is finished.
There is no need to keep it until Clean is called."
1025281688,2910,masahiro331,2022-11-17T14:39:57Z,"https://github.com/masahiro331/go-xfs-filesystem/blob/main/xfs/xfs.go#L420-L422

Now, the Mode function returns the mode stored in the xfs or ext4 inode."
1652143214,6861,knqyf263,2024-06-25T07:26:21Z,Is it breaking because of this change?
1652144820,6861,nikpivkin,2024-06-25T07:27:35Z,"```suggestion
## Contribute a Built-in Compliance Report
```"
1652144884,6861,chen-keinan,2024-06-25T07:27:37Z,I know thats why I put `feat(k8s)!` in title
1652145824,6861,nikpivkin,2024-06-25T07:28:17Z,"```suggestion
### Define a Compliance spec, based on CIS benchmark or other specs
```"
1652146601,6861,nikpivkin,2024-06-25T07:28:58Z,"```suggestion
Here is an example for CIS compliance report:
```"
1652147802,6861,nikpivkin,2024-06-25T07:29:54Z,"```suggestion
ID field is the name used to execute the compliance scan via trivy
```"
1652148448,6861,nikpivkin,2024-06-25T07:30:21Z,"```suggestion
ID naming convention: {platform}-{type}-{version}
```"
1652153071,6861,nikpivkin,2024-06-25T07:33:57Z,"```suggestion
Supported platforms:
```"
1652153107,6861,knqyf263,2024-06-25T07:33:58Z,"Yes, I was wondering how it is breaking. Are you going to announce?"
1652154297,6861,chen-keinan,2024-06-25T07:34:52Z,"yes, but also for k8s compliance report naming, all compliance report include version now (except of aws which has it before) , that way it breaking unless you don't think it should be announce as breaking"
1652161598,6861,nikpivkin,2024-06-25T07:39:36Z,"```suggestion
The list of platforms that support this command. Name should be taken from this list [Platforms](#compliance-platform)
```"
1652164463,6861,nikpivkin,2024-06-25T07:41:44Z,"```suggestion
Currently checks files location are :`https://github.com/aquasecurity/trivy-checks/tree/main/checks`
```"
1652165365,6861,nikpivkin,2024-06-25T07:42:02Z,"```suggestion
Proposed command files location: `https://github.com/aquasecurity/trivy-checks/tree/main/commands`
```"
1652284693,6861,knqyf263,2024-06-25T08:47:45Z,I think all naming updates should be announced as it will break user commands.
1652329951,6861,nikpivkin,2024-06-25T09:15:54Z,Became curious about how embedded files are loaded and found that `trivy-kubernetes` [creates collector ](https://github.com/aquasecurity/trivy-kubernetes/blob/main/pkg/trivyk8s/trivyk8s.go#L339-L350) without command filesystems and node configs. Apparently that was missed in this [PR](https://github.com/aquasecurity/trivy-kubernetes/commit/8ec8ffe291651258578ac3b60cc1f8a1e76b1799#diff-5c7e91c63090e6f2204db71ef633664806449dbe37db6fbdb3b3d45b120fc4a0)?
1652378664,6861,chen-keinan,2024-06-25T09:43:36Z,Logic can be found [here](https://github.com/aquasecurity/trivy-kubernetes/blob/main/pkg/jobs/collector.go#L393)
1652420892,6861,nikpivkin,2024-06-25T10:03:50Z,"I see it, but file systems are not passed to the collector."
1652496218,6861,chen-keinan,2024-06-25T10:30:06Z,"Thanks for catch up, fixed with https://github.com/aquasecurity/trivy-kubernetes/pull/368 , PR is updated with latest trivy-kubernetes"
1653462200,6861,simar7,2024-06-25T19:42:18Z,"```suggestion
***Note:*** This field is not mandatory, it is relevant to k8s compliance report when node-collector is in use
```"
1653463386,6861,simar7,2024-06-25T19:42:56Z,"```suggestion
Specify here the shell command to be used please make sure to add error supression (2>/dev/null)
```"
1667955986,6965,DmitriyLewen,2024-07-08T04:03:22Z,"```suggestion
      pairs:
        - key: ""openSUSE-SU-2024:13065-1""
          value:
            FixedVersion: 3.1.1-3.1
```"
1667968107,6965,DmitriyLewen,2024-07-08T04:12:48Z,"Let's update `FixedVersion` to show vulnerability for `opensuse-tumbleweed.tar.gz`
```suggestion
            FixedVersion: 3.1.5-9.1 # changed for test
```

After these changes you will need to update the gold file."
1667969748,6965,DmitriyLewen,2024-07-08T04:16:40Z,Do we need this?
1667971386,6965,DmitriyLewen,2024-07-08T04:20:15Z,"It would be great to add advisory details to `vulnerability.yaml`.

I took this from database:
```json
{
    ""Title"": ""libopenssl-3-devel-3.1.1-3.1 on GA media"",
    ""Description"": ""These are all security issues fixed in the libopenssl-3-devel-3.1.1-3.1 package on the GA media of openSUSE Tumbleweed."",
    ""Severity"": ""MEDIUM"",
    ""VendorSeverity"": {
        ""suse-cvrf"": 2
    },
    ""References"": [
        ""https://www.suse.com/security/cve/CVE-2023-2975/"",
        ""https://www.suse.com/security/cve/CVE-2023-3446/"",
        ""https://www.suse.com/support/security/rating/""
    ]
}
```"
1667975837,6965,DmitriyLewen,2024-07-08T04:28:18Z,"We check only `Name` and `Version` of Package:
https://github.com/aquasecurity/trivy/blob/a7a304d53e1ce230f881c28c4f35885774cf3b9a/pkg/fanal/test/integration/library_test.go#L313-L314

Let's remove `Installed Files` arrays to reduce the file length."
1668301849,6965,msmeissn,2024-07-08T09:26:25Z,"vulnerability.yaml is per CVE indexed, should i add the two CVEs? or can I add the openSUSE identified to vulnerability.yaml?"
1668304693,6965,msmeissn,2024-07-08T09:28:07Z,should i do this manually or how?
1668306207,6965,msmeissn,2024-07-08T09:29:09Z,removed it for now
1668330358,6965,DmitriyLewen,2024-07-08T09:46:52Z,`jq 'del(.[].InstalledFiles)'` should work
1668333605,6965,DmitriyLewen,2024-07-08T09:49:17Z,"You need to add `openSUSE-SU-2024:13065-1` with `Title`, `Description`, etc. fields into `vulnerability.yaml` file. "
1668335310,6965,DmitriyLewen,2024-07-08T09:50:36Z,We use this file to fill `vulnerability` bucket in test db 
1668712222,6965,msmeissn,2024-07-08T14:09:38Z,i did so
1668712638,6965,msmeissn,2024-07-08T14:09:53Z,"added it, it seems to fill it into golden now"
1669652072,6965,DmitriyLewen,2024-07-09T04:04:30Z,"I found a problem with this and have already created #7122 to fix it.

I added advisory details here - https://github.com/aquasecurity/trivy/pull/6965/commits/4ed8ca3633aa7f0e6b31fd31e54fd4f5890d1c86"
1891587643,8134,knqyf263,2024-12-19T10:39:06Z,"I don't remember why this page doesn't mention `--include-dev-deps` like [Node.js](https://github.com/aquasecurity/trivy/blob/3ce2c3cf5cca0be7bbefbbddacf20ad20dbe0e9e/docs/docs/coverage/language/nodejs.md?plain=1#L53), but we should."
1895298075,8134,knqyf263,2024-12-23T06:16:45Z,This package is not marked as a development dependency. Is it correct? I'm concerned transitive dependencies introduced by direct development dependencies are not marked correctly.
1895379898,8134,nikpivkin,2024-12-23T07:58:30Z,`httpx` is not a development dependency: `uv add httpx==0.28.1 --extra socks`
1896386930,8134,knqyf263,2024-12-24T04:54:59Z,Why did we newly introduce this dependency? I thought the test case was updated for optional or development dependencies.
1896389872,8134,knqyf263,2024-12-24T05:00:30Z,Did we need it to test extra packages?
1896394274,8134,nikpivkin,2024-12-24T05:06:47Z,"Ah, I should have added about test cases in the description. Yes, I added some more test cases:
- An optional dependency in the root package
- Direct dependency with an extra dependency that is optional"
1896419807,8134,knqyf263,2024-12-24T05:47:27Z,"OK, thanks."
1896422468,8134,DmitriyLewen,2024-12-24T05:51:27Z,Can use link for `Include` as in [nodejs page](https://trivy.dev/latest/docs/coverage/language/nodejs/)?
1896423864,8134,DmitriyLewen,2024-12-24T05:53:36Z,Trivy doesn't support `--include-dev-deps` flag for `pip`
1896425241,8134,DmitriyLewen,2024-12-24T05:55:27Z,same
1896436805,8134,nikpivkin,2024-12-24T06:12:35Z,Fixed https://github.com/aquasecurity/trivy/pull/8134/commits/55fb02f3be0c5a663afc943eb822a0b0a1872ac8
1896436880,8134,nikpivkin,2024-12-24T06:12:40Z,Fixed https://github.com/aquasecurity/trivy/pull/8134/commits/55fb02f3be0c5a663afc943eb822a0b0a1872ac8
1896440080,8134,nikpivkin,2024-12-24T06:17:57Z,"> Can use link for Include as in [nodejs page](https://trivy.dev/latest/docs/coverage/language/nodejs/)?

By the way, why are `include/exclude` used to link the table and sections and not the package manager names from the first column?"
1896454937,8134,DmitriyLewen,2024-12-24T06:39:20Z,"By default, we don't show Dev dependencies. 
This link is intended to draw users attention to this and direct them to the section about the file, where they can see that `--include-dev-deps` flag needs to be used."
1896528121,8134,DmitriyLewen,2024-12-24T08:18:15Z,you only need to add links if the `--include-dev-deps` flag is used for the file
1896532162,8134,nikpivkin,2024-12-24T08:23:35Z,In nodejs all package managers have links. I think the documentation should be consistent.
1896533822,8134,nikpivkin,2024-12-24T08:25:42Z,Then we should update the nodejs documentation
1896552621,8134,nikpivkin,2024-12-24T08:48:25Z,Fixed 
1896569428,8134,DmitriyLewen,2024-12-24T09:07:40Z,"> In nodejs all package managers have links. I think the documentation should be consistent.

I missed that a link was added for `Bun`. We can remove the link for that.
But for other files - `yarn`, `npm` and `pnpm` support `--include-dev-deps`. That's why they have links.

"
1896686174,8134,knqyf263,2024-12-24T11:52:05Z,"I think we should write the default behavior, like [Node.js](https://github.com/aquasecurity/trivy/blob/03647db96f36b2aba766f65fb0c213dbf937ae62/docs/docs/coverage/language/nodejs.md). Or am I missing something?

```suggestion
| uv              | uv.lock          |            ✓            |     Exclude      |                  ✓                   |    -     |                Not needed                |
```"
1896687051,8134,nikpivkin,2024-12-24T11:53:27Z,"OK, I'll open a PR for that."
1896688612,8134,nikpivkin,2024-12-24T11:55:29Z,Fixed https://github.com/aquasecurity/trivy/pull/8134/commits/5d65e2f6c6dd6776667728a230866f1dd0dd14b5
335128890,201,simar7,2019-10-15T19:11:45Z,Why is the file closed here?
335129447,201,simar7,2019-10-15T19:13:11Z,Does it make sense to keep this method inside of `tar_input_test.go` as it's purely for testing and nothing else at the moment?
335138939,201,knqyf263,2019-10-15T19:36:46Z,"I need just a temp file. The result of Trivy is exported to this file through pseudo CLI (`app.Run`) like this. `trivy --output /path/to/tempfile`
In short, `app.Run` writes the result to this file. We don't use this file descriptor directly. If the file is left open, an error occurs when Trivy (= `app.Run`) tries to open it."
335140279,201,knqyf263,2019-10-15T19:40:17Z,"I separated the file so I can add more tests later. As you said, it doesn't make sense for now. I can merge this function to `tar_input_test.go`."
335142461,201,simar7,2019-10-15T19:45:45Z,Gotcha. Thank you for the explanation!
335183238,201,simar7,2019-10-15T21:20:31Z,"I couldn't reason out why this was being changed to a `[]*Result`. Would it make sense to change it back to `[]Result` unless I've missed a reason not to, in order to keep things simple?"
335631443,201,simar7,2019-10-16T18:09:31Z,One thought: https://github.com/golang/go/wiki/CodeReviewComments#pass-values
335750238,201,simar7,2019-10-16T23:15:53Z,This function doesn't seem to be used anywhere. Should this be removed?
335835163,201,knqyf263,2019-10-17T06:55:32Z,"Yes, but this function is used by a different tool.
https://github.com/knqyf263/remic/blob/master/remic.go#L69

Before, I'd like to develop a different tool to scan lock files. I suspend to develop it now, but I'm supposed to resume it in the future. Let me keep this function."
336205615,201,simar7,2019-10-17T20:15:50Z,"Should an `Unknown` severity be ranked higher than a known `Low` one, if the `Low` Vulnerability has a `PkgName` set? I see this is the current behaviour but I'm just probing to see if it is what we want. You can see a test that demonstrates this here: https://github.com/aquasecurity/trivy/pull/201/commits/895b7312075eb8358a06ac5b5cea50dffbc1e49f "
336212310,201,simar7,2019-10-17T20:31:42Z,Tests like these which use the `rpm` command fail for me (because I didn't have the `rpm` tool installed). Should we ensure that wherever these tests will get run (e.g. CI) we have the `rpm` binary installed so the tests don't fail out as a result?
336215135,201,simar7,2019-10-17T20:38:16Z,"Based on our conversation offline, I've switched it back to `[]Result` in this commit https://github.com/aquasecurity/trivy/pull/201/commits/ea7f9e058c83b8683e5596736832cc506fe1bb69"
336223761,201,simar7,2019-10-17T20:58:29Z,Would you have an example of an acceptable input template that the user can pass in?
336226202,201,simar7,2019-10-17T21:04:22Z,I'm not sure why this isn't coming out in the diff but it looks like `getIgnoredIDs()` no longer takes in an argument for `ignoreFile`. Is that a flag we're going to deprecate? Would that break backwards compatibility with existing usage of the flag?
336226757,201,simar7,2019-10-17T21:05:45Z,"<img width=""1072"" alt=""image"" src=""https://user-images.githubusercontent.com/1254783/67047455-317e8e80-f0e7-11e9-9f9b-0fb817b40c20.png"">
"
336591533,201,knqyf263,2019-10-18T17:14:10Z,"Like this
```
{{ range . }}{{ range .Vulnerabilities}}{{ println .VulnerabilityID .Severity }}{{ end }}{{ end }}
```"
336592103,201,knqyf263,2019-10-18T17:15:37Z,"`getIgnoreIDs()` takes an argument in `master` branch. I'll fix this conflict.
https://github.com/aquasecurity/trivy/pull/175"
336593195,201,knqyf263,2019-10-18T17:18:25Z,"Exactly. We need to install `rpm` in CI. Besides, we probably should prepare Makefile and ensure `rpm` will be installed on the test environment."
336604386,201,knqyf263,2019-10-18T17:45:42Z,I fixed it.
336668805,201,knqyf263,2019-10-18T20:43:11Z,"Basically, all vulnerabilities have PkgName. I'd like to display vulnerabilities sorted by a package name. 
Why do you expect `hogepkg`? This package doesn't seem to be defined.
https://github.com/aquasecurity/trivy/commit/895b7312075eb8358a06ac5b5cea50dffbc1e49f#diff-bc5f6ed1d12bdab4d1aeca18ca3003d3R90"
336670519,201,simar7,2019-10-18T20:48:43Z,Makes sense if PkgName takes preference!
336671568,201,simar7,2019-10-18T20:51:58Z,I addressed this. Moved it back to `tar_input_test.go` for now until we have the need for a separate file.
450081986,552,knqyf263,2020-07-06T08:59:56Z,"Would you make sure some corner cases work, such as `^` and `~`.
https://github.com/nodejs/security-wg/blob/master/vuln/npm/495.json#L18

Node.js has some special constraints.
https://docs.npmjs.com/files/package.json
https://docs.npmjs.com/misc/semver

If it doesn't work, we need to define `MatchVersions` for each language."
450284106,552,rahul2393,2020-07-06T15:02:07Z,"@knqyf263 I used https://github.com/Masterminds/semver, It passed all constraints reported in issue, also it will work with all possible node.js special constraints, please take a look at tests now."
450862120,552,rahul2393,2020-07-07T13:26:19Z,@knqyf263 please check
452036174,552,knqyf263,2020-07-09T08:02:09Z,"What is `a`? It is ok if the short name is clear what it means like `for _, m := range msgs {`, but in this case, it is difficult to understand what `a` indicates."
452048205,552,knqyf263,2020-07-09T08:23:28Z,"`assert` goes through even if it doesn't satisfy the condition.

```suggestion
			require.NoError(t, err)
```"
452049007,552,knqyf263,2020-07-09T08:24:46Z,"Is there any reason that you need the suffix 2?

```suggestion
func TestMatchVersions(t *testing.T) {
```"
452053528,552,knqyf263,2020-07-09T08:32:27Z,Thanks!
452056617,552,knqyf263,2020-07-09T08:37:53Z,"Do you think `-java` is pre-release? It looks just a kind to me.
https://rubygems.org/gems/ffi/versions

I meant we might need to change the comment. I think we don't need to change the logic."
452060367,552,knqyf263,2020-07-09T08:44:17Z,"I know this change affects all `advisory.go` for each language, but `go-version` is no longer necessary. So, I feel it is the right way to replace `go-version` with `semver` in all places.

```suggestion
func MatchVersions(currentVersion *semver.Version, rangeVersions []string) bool {
```"
453202257,552,rahul2393,2020-07-11T14:51:13Z,Fixed
453202311,552,rahul2393,2020-07-11T14:51:59Z,"It was committed mistakenly, was comparing the older/new version for correctness, fixed"
453202325,552,rahul2393,2020-07-11T14:52:07Z,Done
453202331,552,rahul2393,2020-07-11T14:52:14Z,Done
455631799,552,knqyf263,2020-07-16T08:55:59Z,"I found this version was old. You have to import `semver` as follows.

```
import ""github.com/Masterminds/semver/v3""
```"
455634508,552,knqyf263,2020-07-16T09:00:20Z,"I think there is no reason to overwrite `rangeVersions` and it sometimes introduces a bug, so `for _, v := range rangeVersions {` looks enough in this case."
455636048,552,knqyf263,2020-07-16T09:02:56Z,"Could you define this process as another function?
"
455641568,552,knqyf263,2020-07-16T09:11:41Z,"I think it doesn't work with a patch version including a dot such as `1.2.3-beta.1.
https://github.com/Masterminds/semver#working-with-prerelease-versions

It might work even if we replace valid dots, but I think we should keep the version in its original form as much as possible to avoid an unexpected bug.

The best way I think of at the moment is 

```
1.2.3-beta -> 1.2.3-beta
1.2.3-beta.1 -> 1.2.3-beta.1
1.2.3.4 -> 1.2.3-4
1.2.3.4.5 -> 1.2.3-4.5
1.2.3.4-5 -> 1.2.3-4-5
```

Let me know your thought."
455740860,552,rahul2393,2020-07-16T12:14:55Z,"Updated, as suggested, I think you are right, let's see if we get any other issues later
@knqyf263 "
456914894,552,knqyf263,2020-07-19T14:23:00Z,"nit: it is wide, so what if we split the line?

```suggestion
				v2, err := semver.NewVersion(fmt.Sprintf(""%v.%v.%v"", 
					currentVersion.Major(), currentVersion.Minor(), currentVersion.Patch()))
				if err == nil {
```"
456915196,552,knqyf263,2020-07-19T14:25:37Z,"This `msgs` will not be used, right? Or, does it affect the loop variable at line 37? If it is not used, we should make it easy to understand.

```suggestion
					valid, _ = c.Validate(v2)
```"
456917103,552,rahul2393,2020-07-19T14:42:39Z,@knqyf263  Done
661300783,1081,nscuro,2021-06-30T09:43:46Z,This is now possible as of cyclonedx-go [v0.4.0](https://github.com/CycloneDX/cyclonedx-go/releases/tag/v0.4.0)
686729502,1081,masahiro331,2021-08-11T11:10:30Z,"@nscuro 
Thank you!!! Deep respect. 

I have a few question. 
Does CycloneDX-go have any plans to support Vulnerability?

I want to use this struct.
https://cyclonedx.org/use-cases/#vulnerability-disclosure"
686779511,1081,nscuro,2021-08-11T12:24:48Z,"No plans currently, as the vulnerability extension is only supported for XML. Working with XML (and especially namespacing in XML) in Go is a pain, which is why I didn't bother implementing it yet.

I see you've asked a similar question in the CDX Slack already. I think @stevespringett or @coderpatros may be able to give some insights in how vulnerabilities are supposed to be or will be handled in CycloneDX going forward.

If the proposed solutions don't help your case with trivy, you could consider using XML output instead, and I'll see how I can integrate the vulnerability extension into cyclonedx-go."
686905904,1081,stevespringett,2021-08-11T14:48:47Z,"@masahiro331 Refer to CycloneDX support for [Vulnerability Disclosure](https://cyclonedx.org/use-cases/#vulnerability-disclosure) and [Security Advisories](https://cyclonedx.org/use-cases/#security-advisories). 

Disclosing vulnerabilities in an SBOM is currently only supported in XML. That will be changing in a big way with v1.4 of the spec. So in terms of design, I would plan for the eventual support for JSON, but it will be changing from its current format."
687106753,1081,masahiro331,2021-08-11T19:17:11Z,"@nscuro @stevespringett
Thank for reply. 

I understood perfectly. I will wait for cyclonedx 1.4 to be released.
In this Pull Request, I will implement to create SBOMs for package information, etc."
776674414,1081,knqyf263,2021-12-30T10:55:33Z,"Is there any reason why we cannot this version?
https://github.com/aquasecurity/trivy/blob/1b66b77f691f2249a63c284056afcad704c0e15f/pkg/commands/option/global.go#L16"
804526880,1081,nscuro,2022-02-11T10:31:15Z,@masahiro331 CycloneDX v1.4 including support for vulnerabilities is now available in [cyclonedx-go v0.5.0](https://github.com/CycloneDX/cyclonedx-go/releases/tag/v0.5.0).
805610994,1081,knqyf263,2022-02-14T08:42:41Z,Any reason you moved it here?
805618552,1081,knqyf263,2022-02-14T08:51:58Z,"```suggestion
	if c.Format == ""cyclonedx"" && !c.ListAllPkgs {
		logger.Debugf(""'--format cyclonedx' must be specified with '--list-all-pkgs'. Forces the '--list-all-pkgs' option to be enabled."")
		c.ListAllPkgs = true
```"
805619074,1081,knqyf263,2022-02-14T08:52:39Z,"```suggestion
			logger.Warn(""'--format template' is ignored because '--template' is not specified. Specify '--template' option when you use '--format template'."")
```"
805622542,1081,knqyf263,2022-02-14T08:56:50Z,We may want to assert `dependsOn` as well.
805623085,1081,knqyf263,2022-02-14T08:57:27Z,"```suggestion
// Writer implements report.Writer
```"
806024103,1081,masahiro331,2022-02-14T16:31:12Z,"If we don't separate the function, gocyclo's checks will cause it to fail.

```
cyclomatic complexity 11 of func `(*ReportOption).Init` is high (> 10) (gocyclo)
```

I separated the functions because I think there will be more cases in the future where list-all-pkg needs to be enforced.
"
797970584,1668,knqyf263,2022-02-02T20:05:05Z,Is there any reason to remove ECR?
797970745,1668,knqyf263,2022-02-02T20:05:20Z,ditto
797971273,1668,knqyf263,2022-02-02T20:06:04Z,"We cannot use the default token since this action pushes commits to another repository. If you need additional permission, please let me know."
797971532,1668,knqyf263,2022-02-02T20:06:24Z,devops?
797971703,1668,knqyf263,2022-02-02T20:06:39Z,Looks like it is your account.
797984599,1668,developer-guy,2022-02-02T20:25:17Z,"so sorry about that, I forgot to revert the changes that I've been made for testing purposes."
797984830,1668,developer-guy,2022-02-02T20:25:38Z,"to be able to use sign feature, I need to update the latest version of GoReleaser"
797984867,1668,developer-guy,2022-02-02T20:25:42Z,"so sorry about that, I forgot to revert the changes that I've been made for testing purposes."
797984914,1668,developer-guy,2022-02-02T20:25:46Z,"so sorry about that, I forgot to revert the changes that I've been made for testing purposes."
797984952,1668,developer-guy,2022-02-02T20:25:49Z,"so sorry about that, I forgot to revert the changes that I've been made for testing purposes."
798273087,1668,knqyf263,2022-02-03T07:06:02Z,"I got it. Please pin the version then. Otherwise, we have a concern about supply chain attacks and may face an unexpected error."
798977279,1668,developer-guy,2022-02-03T21:19:20Z,"gotcha! fixed right now, thanks"
799777864,1668,knqyf263,2022-02-04T20:07:08Z,"According to the document, what we need looks like `docker_signs`. `sign-blob` is a subcommand for signing artifacts such as binaries and packages.
https://goreleaser.com/customization/docker_sign/

Am I missing something?"
799813395,1668,developer-guy,2022-02-04T21:11:24Z,"Ah yes, you are totally right, this was my mistake, I'll fix that ASAP, really good catch, thank you for watching my back 🙋🏻‍♂️😍"
799856683,1668,knqyf263,2022-02-04T22:29:55Z,But we want to sign our binaries and packages as well as container images in another PR😉
800360160,1668,developer-guy,2022-02-07T06:59:13Z,"thank you, it should be fixed right now. "
805186506,1668,naveensrinivasan,2022-02-12T17:50:42Z,I would recommend pin-by-SHA https://github.com/ossf/scorecard/blob/main/docs/checks.md#pinned-dependencies
807242437,1668,developer-guy,2022-02-15T19:35:53Z,"fixed, thank you"
825440735,1668,knqyf263,2022-03-13T12:26:27Z,"I think we need more permissions since it disables other permissions.

>If you specify the access for any of these scopes, all of those that are not specified are set to none.

https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions

I'll take it."

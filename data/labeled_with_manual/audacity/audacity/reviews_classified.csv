repository,file_type,id,pr_number,body,distilbert_sentiment_label,codebert_sentiment_label,deberta_sentiment_label,distilbert_confidence,codebert_confidence,deberta_confidence,majority_label,final_decision,decision_reason,manual_label
audacity/audacity,reviews,654164597,835,"indeed iâ€™d suggest a different service for that than feeding google with even more data. i did not check whether they have libraries for local analysis, but [a link] and [a link] are great open-source analytic tools, which you can also self-host. more [a link]. also, for crashes there are ways you can just let the user send the report via mail (at least for android there are tools that can even collect these reports etc.)",1,0,1,0.5704132318496704,0.9020609259605408,0.532305896282196,1.0,accept,majority_agreement,2
audacity/audacity,reviews,655027290,835,"several issues with nih. also various code formatting/indentation issues. but by far the greatest issue is the various non-compliance issues with privacy laws and regulations. the used providers are nowhere to be found and even in builds without telemetry (local source builds) this leaves tons of code included, that simply bloats the application senselessly and even may create attack surface and security issues. while the pr claims this telemetry is anonymous, it's pseudonymous at best, and given the used providers are google and yandex, you can nearly be certain it will be personalized. this is especially true given the telemetry generates a unique client id, that is large enough to be unlikely to collide even if every human on earth used the tracking-poisoned version. best action forward is to scrap this pr, as this wont give you any useful information for your stated objectives. instead this creates unnecessary surveillance of the user of your software and thus limit the user's freedoms.",-1,0,-1,0.6166061162948608,0.7586191296577454,0.689858078956604,-1.0,accept,majority_agreement,2
audacity/audacity,reviews,655079811,835,"apart from what others have already said, the added tracking and, some interesting choices of variable names in conditions, it seems alright.",0,0,0,0.8929079174995422,0.9744137525558472,0.5081362724304199,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,722521377,1384,i've just quickly run through :) as an addition to other comments - there are some files without an empty line at the end of the file.,1,1,1,0.9502851366996764,0.9957828521728516,0.9938651919364928,1.0,accept,unanimous_agreement,2
audacity/audacity,reviews,727258285,1384,"also, quite a few files still miss new line in the end of file",0,0,0,0.964760720729828,0.979250431060791,0.9609293937683104,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,732733699,1384,what should be improved: * consistent use of `const` and `final` * i would preffer having *ptr instead of *holder * translatable strings should have hints for translators * error handling should be more consistent. important context information should not be lost * != instead of !(=) whenver possible * in most cases - it is advised to have separate h/cpp for a class. exceptions are ok to be groupped whith the class that throws it,0,0,0,0.9621272087097168,0.9874514937400818,0.9536099433898926,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,845176290,1384,doxygen comments for methods are not extracted to pages,0,0,0,0.9840033650398254,0.9855600595474244,0.9939945340156556,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,846719333,1384,cmake mistake,-1,-1,-1,0.7354121804237366,0.8004068732261658,0.9731112122535706,-1.0,accept,unanimous_agreement,2
audacity/audacity,reviews,846920930,1384,thread safety!,0,0,0,0.6924653649330139,0.4730855524539947,0.902253270149231,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,847204261,1384,thread safety and window lifetime problems,0,0,0,0.9153769612312316,0.9491260051727296,0.6113871335983276,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1343733960,4414,error in projectfilemanager.cpp -- needlessly removing the setting of bandwidth selection format,-1,0,0,0.5516667366027832,0.96457177400589,0.983876407146454,0.0,accept,majority_agreement,2
audacity/audacity,reviews,1366857605,4414,odysseus has returned to ithaca.,0,0,0,0.956043303012848,0.9703904390335084,0.9531546235084534,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,880140271,2295,raii still not right,-1,-1,-1,0.562972903251648,0.5520415306091309,0.5683728456497192,-1.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1805988865,5791,"good enough to move on to qa! i understand there will be other later issues to fix the undo problem, improve quality and performance, and add unit tests. i would prefer a bit of squashing before merge of course.",1,1,1,0.9594355821609496,0.9813069105148317,0.9884196519851683,1.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1812213495,5791,-licameli i copied over the comments you wrote on the fork you made of this branch. i think this completes the migration of your review work. please let's continue the discussion here from now on.,0,0,0,0.910750150680542,0.8048236966133118,0.7543973922729492,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1593909275,5043,please complete the fixes for exception safety.,0,0,0,0.9830998182296752,0.9826512932777404,0.992623805999756,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1659494402,5043,regression in exception safety should be fixed,0,0,0,0.984606385231018,0.9832831621170044,0.9886151552200316,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1578367653,4881,exception safety isn't right yet,0,0,0,0.9392993450164796,0.7678476572036743,0.9432799220085144,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1032781392,3176,"see previous comment. ""something must be done"" so that output metering works. that isn't very specific of me, but i do have ideas about how to do it. i think it will require some major changes of approach, and abandonment of many of these proposed changes. i may develop a first commit that a revised branch can be based on. but the changes for track list events are so far an approved, necessary part of the fix.",0,0,0,0.9507251381874084,0.9466713070869446,0.973934531211853,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1054733450,3176,avoid compilation dependency cycle,0,0,0,0.9677096009254456,0.9204635620117188,0.9877601265907288,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1068119162,3176,unnecessary `#include`,0,0,0,0.959688663482666,0.976815938949585,0.9686959981918336,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1071309143,3176,"approved, at last! today's comments include some suggestions about names and comments and a fix for tracklist events, but none of that should block this. i will open some other issues about possible further bug fixes.",0,0,1,0.8961673974990845,0.5959115624427795,0.9655961394309998,0.0,accept,majority_agreement,2
audacity/audacity,reviews,1072455470,3176,"formally re-approved now. just make one more behavior change, the minor fix for the reset message.",0,0,0,0.9838293194770812,0.9869027137756348,0.9912925362586976,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1590553692,5041,one doubtful thing,0,-1,-1,0.7419079542160034,0.9630082845687866,0.5066108107566833,-1.0,accept,majority_agreement,2
audacity/audacity,reviews,1590564748,5041,preserve behavior in presence of exceptions thrown from db layer,0,0,0,0.9859543442726136,0.9914660453796388,0.9928991794586182,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1591360486,5041,satisfy my doubt,0,0,0,0.939458191394806,0.8216045498847961,0.9027865529060364,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1591443391,5041,mistake,-1,-1,-1,0.8481780290603638,0.7587538361549377,0.8691160082817078,-1.0,accept,unanimous_agreement,2
audacity/audacity,reviews,704754527,1207,"i made many suggestions, and would like this big commit broken into several smaller ones as i detail elsewhere. i have not yet reviewed anything related to labels. all of those should also be at least one other separate commit.",0,0,0,0.902551531791687,0.927450716495514,0.9800445437431335,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,712959537,1207,"just matters of code and commit comments, and a variable name.",0,0,0,0.9690657258033752,0.9918535351753236,0.9864858388900756,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,807357878,2121,overflow detection is insufficient,0,0,0,0.8634949326515198,0.8686897158622742,0.9750270247459412,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,808440477,2121,end of stream checks were implemented in bufferedstreamreader but are ignored where it is used,0,0,0,0.9888940453529358,0.9945607781410216,0.9940245747566224,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,808481841,2121,end of stream checks were implemented in bufferedstreamreader but are ignored where it is used,0,0,0,0.9888940453529358,0.9945607781410216,0.9940245747566224,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,809823843,2121,"please squash the history a little, and be sure the long pr comment is copied when the merge button gives you the entry window for it. let's go! i am glad to see the known silliness of the in-memory tempoary xml corrected.",1,1,1,0.980707824230194,0.9904204607009888,0.9856810569763184,1.0,accept,unanimous_agreement,2
audacity/audacity,reviews,679476876,836,i18n details,0,0,0,0.9873961806297302,0.97278892993927,0.9898284673690796,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,679896621,836,a few more translation issues,0,0,0,0.9804831743240356,0.9488739967346193,0.9766327142715454,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,680029731,836,still more translation details.,0,0,0,0.9802975654602052,0.9701350927352904,0.9727784395217896,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1501541995,4797,"i'm done! build fixes for linux are the only must-do. read my more recent comments. i trust you with minor modifications to comments as you see fit, and also the suggested changes to fix the builds of intermediate commits.",1,1,1,0.9608070254325868,0.9615768790245056,0.9893798232078552,1.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1615763447,5138,please consider the comments i left before merging.,0,0,0,0.9823563694953918,0.9861120581626892,0.994899570941925,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1054589742,3278,"this still isn't right and the fault is partly mine for not stating the steps in the issue clearly enough. please carefully re-read the updated steps 4 and 5. for step 4: processfinalize must also move into the instance. the effect stops inheriting statefulpertrackeffect but inherits two bases instead: pertrackeffect and statefuleffectbase (which are also the direct bases of statefulpertrackeffect). just squash all the 4.x steps into one; do not define processblock in the wrapper because you don't need to shared it with the effect. do not move callprocessreplacing into the wrapper. for step 5: it is here that the effect loses its other base class statefuleffectbase, and other virtual functions of the effect for realtime move into the instance.",0,0,-1,0.8072476387023926,0.9607778191566468,0.5435400605201721,0.0,accept,majority_agreement,2
audacity/audacity,reviews,1082101753,3278,steps 4.x and 5.x might be squashed into just two commits before merging. all else looks good now.,1,1,0,0.8542755246162415,0.9348240494728088,0.6370252966880798,1.0,accept,majority_agreement,2
audacity/audacity,reviews,957195387,2867,window needs rebuilding for change of language or undo and redo; changes of the effect list need to push new undo history states.,0,0,0,0.986755073070526,0.9900221228599548,0.9886900782585144,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,957209220,2867,"one more undo history push is needed, and we also need to force the realtime effect dialogs to be modal",0,0,0,0.9848304986953736,0.987590193748474,0.9875888228416444,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,985259994,2867,"all concerns i raised are either addressed, or are remaining problems for me. let's merge it! (after a rebase to latest master of course)",0,0,1,0.5255903601646423,0.5695362091064453,0.71340411901474,0.0,accept,majority_agreement,2
audacity/audacity,reviews,1094159213,3432,"one lock_guard is needed, i think, but all else is good and resolves all my questions",1,1,1,0.6145686507225037,0.5914161801338196,0.9298956394195556,1.0,accept,unanimous_agreement,2
audacity/audacity,reviews,725903809,1193,more comments to come,0,0,0,0.9687399864196776,0.9790384769439696,0.900557816028595,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1010507095,2224,"when i export from audacity - the resulting file seems to be missing some metadata: vlc does not show the file length and does not allow seeking. everything works fine, if i generate wv file using the official cli. looks like you miss `wavpackupdatenumsamples` call in the end. this concludes the review of the exportwavpack.cpp, review for the importer will follow.",0,0,0,0.972039759159088,0.9881023168563844,0.9470314979553224,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1010767091,2224,"when i export from audacity - the resulting file seems to be missing some metadata: vlc does not show the file length and does not allow seeking. everything works fine, if i generate wv file using the official cli. looks like you miss `wavpackupdatenumsamples` call in the end. this concludes the review of the exportwavpack.cpp, review for the importer will follow.",0,0,0,0.972039759159088,0.9881023168563844,0.9470314979553224,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1013398778,2224,"export looks fine now, i will review import now!",1,1,1,0.8122982382774353,0.8382194638252258,0.9807975888252258,1.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1013401337,2224,decoding loop need some love :-) and some minor are changes will be welcome!,1,1,1,0.9911593794822692,0.9958081245422364,0.9909780025482178,1.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1016642096,2224,"great work! just a few more issue, but i think that they are easy to resolve.",1,1,1,0.9931259155273438,0.9954623579978944,0.9970484375953674,1.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1018381566,2224,a one very minor step left!,0,1,-1,0.6165247559547424,0.9773043394088744,0.7513081431388855,,review,no_majority_disagreement,0
audacity/audacity,reviews,1467161618,4746,"haven't absorbed everything, but made progress.",0,0,0,0.8611900806427002,0.9451191425323486,0.8188178539276123,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1471781436,4746,finished for this iteration.,0,0,0,0.9797765612602234,0.9792476892471312,0.8996743559837341,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1474566759,4746,"nice work, looking forward to the benefits for my own work, thank you!",1,1,1,0.9892191290855408,0.9953939914703368,0.9967865943908693,1.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1488216771,4746,afaict this commit is introducing an undesired change of behavior.,0,-1,-1,0.9514095783233644,0.5273616313934326,0.7943102717399597,-1.0,accept,majority_agreement,2
audacity/audacity,reviews,1931723513,6068,"i have two issues with this pr * formantshifterlogger is responsible for handling configuration. * you define it using and interface too, and i don't see why. the only place it is used - it is used directly. * i think we should keep process_hop simd ready. i expect that the fix will be very simple. there are some minor comments as well, but i will not block the pr because of them.",0,0,0,0.9201865196228028,0.8138079643249512,0.8650893568992615,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1938637525,6068,i don't see any pressing issues left,0,0,0,0.9599050283432008,0.60285484790802,0.8268700838088989,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1945655593,6068,i don't see blocking issues with this pr,0,0,0,0.9606621861457824,0.8770133256912231,0.978918731212616,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1452639267,4668,"i don't see blockers; just a few comments to sum up: 1. some exporters do not provide the rates list. we should carefully review them. 2. ui code is hard to read and understand. 3. this needs to be rebased carefully on the recent master, especially after merging the mixer pr. for this reason, i don't press approve exactly now, but i would like to start checking the builds from this pr (please, coordinate with ). given that we are code review limited for now and this task's complexity, we can make an exception and start verifying it before completing and formal approval.",0,0,0,0.8744041919708252,0.9351004958152772,0.9037434458732604,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1540958981,4668,"i finished this round, i am quite concerned about loosing stereo in mp3 export",-1,0,-1,0.9628732800483704,0.5824735164642334,0.963886857032776,-1.0,accept,majority_agreement,2
audacity/audacity,reviews,1540985255,4668,"rebasing is needed, and there are some conflicts",0,0,0,0.9705244898796082,0.9724540114402772,0.9614964127540588,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1453827713,4701,"i don't have much comments about the code left, so it's time to brush up the history a bit. that's it - squash all the ""fixing build"" and ""addressing review"" commits",0,0,0,0.6849699020385742,0.8824019432067871,0.9759460687637328,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1633703529,5042,"i'm still not really satisfied about the two uses of `as_size_t()`. i'm dissatisfied now about the first, because, `(effectiveend - effectivestart)` is bounded above by a `size_t` but there still isn't proof it is bounded below by 0 -- not negative. you should first assign `effectiveend = std::max(effectivestart, effectiveend);` i am not persuaded either by the argument about the other `as_size_t()` and would rather see the `limitsamplebuffersize`. i think then that without the other easy code changes, the function is still relying about on assumptions about its arguments so it has an incompletely stated contract. i'd rather be deductive than argue that it works in practice so far. but this pr was waited long enough. i'm approving it, but with a protest.",-1,-1,0,0.9134588837623596,0.83333820104599,0.6325693130493164,-1.0,accept,majority_agreement,2
audacity/audacity,reviews,673733342,830,"i'll complete this first review for now, but i need to examine acolor.cpp more closely, and consider whether there might be another fix for the sync lock tiles.",0,0,0,0.9818968772888184,0.9850988388061525,0.9807021021842957,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,680275893,830,changes to user-visible strings because of string freeze,0,0,0,0.9777325391769408,0.99171781539917,0.9817190766334534,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,679967402,966,"this pr has a too-complicated commit history, including merging of two branches with different upstream commits. the commits are not in one simple sequence. this makes it too difficult to review, and to verify that each commit in the sequence builds and runs. please merge your work with recent master, then do `git reset audacity/master` (or whatever remote name you have for master) and then add and commit files again, so that there are fewer commits (maybe one). then force-push it. there should not be commits, in a final form of the branch, for small corrections like indentation. there may be multiple commits to show how the project can be done in logical stages, to aid review. but the branch should not keep a history of correction of errors, unless you still mark it as a draft.",0,0,0,0.8354002237319946,0.8666760921478271,0.8691893219947815,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,680012999,966,further reconsideration of lifetime problems.,0,0,0,0.9463622570037842,0.8649884462356567,0.9642575979232788,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,681300514,966,i am satisfied that you addressed all points in my last review. thank you for the simpler commit history. this next review covers some points about naming and translation. i have not reviewed everything yet.,1,1,1,0.925987958908081,0.990540623664856,0.9832282066345216,1.0,accept,unanimous_agreement,2
audacity/audacity,reviews,681307422,966,some more points about parent window pointers and lifetimes.,0,0,0,0.9828754663467408,0.9855868816375732,0.9902520179748536,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,685834583,966,"the one incorrect static variable is the only mildly important thing in this review that isn't just style. it's wrong in principle, but even so isn't likely to cause an error in practice because of the long update interval, longer perhaps than most user sessions with audacity. besides that, the commit history must be cleaned up, without merge commits, before i approve. overall i'm pleased with this branch.",1,1,1,0.954472541809082,0.9846093654632568,0.9488001465797424,1.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1007356641,2941,"approved! please rebased onto latest master, force-push, and merge with a merge commit.",0,1,0,0.8895381689071655,0.5322428941726685,0.9029306769371032,0.0,accept,majority_agreement,2
audacity/audacity,reviews,1080560068,3396,"i would like you to make one last interactive rebase that fixes the commit that doesn't build because it refers to a member of `vst3effectsettings` that doesn't exist. also fix commit comments. otherwise, i'm convinced you fixed two out of the three major problems i mentioned. but i think there will be remaining problems with use of factory presets or imported presets. these can be described in a new issue that we can fix later.",0,0,0,0.9372616410255432,0.9730259776115416,0.8902670741081238,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,2045093402,6359,"haven't finished yet the review, but stumbled on a potential crash.",-1,0,0,0.661592960357666,0.9499682188034058,0.599534273147583,0.0,accept,majority_agreement,2
audacity/audacity,reviews,2045384112,6359,"finished reviewing the first commit (the audio part) ; nothing major besides that crash, but hopefully this is an easy fix. please remove the dead code ; i don't see why it should be kept, and it's noisy and sometimes confusing.",0,-1,0,0.7224233746528625,0.8294299244880676,0.5409151315689087,0.0,accept,majority_agreement,2
audacity/audacity,reviews,2049392101,6359,"not requesting changes because i'm not certain of my analysis, but i think there is another bug, already present in the first commit but that i missed before.",0,0,0,0.6562461256980896,0.9196425676345824,0.9632436633110046,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,2060116139,6359,following up on [a link] vitaly and i had a conversation and he helped me understand the bigger picture. this seems like a good change to me.,1,1,1,0.9701177477836608,0.9723146557807922,0.9717982411384584,1.0,accept,unanimous_agreement,2
audacity/audacity,reviews,746704840,1614,"i raise questions about the new event passing. i think the new event type is unnecessary and should not be added. another implementation can be done with existing events. this is not a complete review, but you can begin with these reqeusted changes.",0,0,0,0.9117480516433716,0.9283502101898192,0.8891716599464417,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,746713134,1614,"more code reuse, less duplication?",0,0,0,0.9789632558822632,0.9819246530532836,0.9865538477897644,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,746716420,1614,"more code reuse, less duplication?",0,0,0,0.9789632558822632,0.9819246530532836,0.9865538477897644,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,746731892,1614,advice about file structure and non-inline virtual destructor.,0,0,0,0.9828102588653564,0.9700520038604736,0.9946134686470032,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,758101056,1679,i found a bug in updating of envelopes.,0,0,0,0.6834610104560852,0.7659628987312317,0.9437959790229796,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,765316601,1679,some observations about inconsistent use of append buffer length and possible off by one errors and rounding. but i'm not recommending changes. there may be a lot of subtle problems like this already existing and we might leave it until stabilization to study and try to fix them.,0,0,0,0.7934730052947998,0.5525042414665222,0.9583932161331176,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,767757446,1679,i think there are errors in one of the paths through pasting of waveclip,0,0,0,0.9572276473045348,0.9643037915229796,0.9740189909934998,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,770137258,1679,"explanation at least in comments, if you can prove there isn't a mistake.",0,0,0,0.977291703224182,0.9850122928619384,0.9880638718605042,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,2006991066,5818,all good,1,1,1,0.9273792505264282,0.9738343358039856,0.9065300822257996,1.0,accept,unanimous_agreement,2
audacity/audacity,reviews,761529713,1623,raising questions about some assignments of fields of the format context that were not preserved.,0,0,0,0.8824224472045898,0.9508038759231568,0.9173153638839722,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,761553744,1623,"doubts about too long lifetimes of some things, though they don't ultimately leak.",-1,0,-1,0.6084156036376953,0.7538023591041565,0.5762828588485718,-1.0,accept,majority_agreement,2
audacity/audacity,reviews,762575634,1623,some doubts,0,-1,0,0.8919726610183716,0.6418733596801758,0.5284841656684875,0.0,accept,majority_agreement,2
audacity/audacity,reviews,1039270506,3183,"i see the latest round of changes. one thing i'm still unsatisfied with: the commit ""6.2 rewritten loadsettings / savesettings..."" needs an update of the commit comment, and `savesettings` and `loadsettings` should remain as in the previous iterations of the branch: don't iterate maeffect, don't do the side effects of `constcalldispatcher` or `callsetparameter`. do: iterate over the map in `const effectsettings` or over the key/value pairs in `const commandparameters`.",-1,0,0,0.673767626285553,0.9898086190223694,0.870145857334137,0.0,accept,majority_agreement,2
audacity/audacity,reviews,1011952069,3088,"eximining other uses of `datadir` it can be observed, that some cases need to use `configdir` and some the state dir (which is not introduced). for example, i feel that `ffmpeg_presets.xml` is a config file, not data file. this is not critical, however. what is more important, it seems that `configdir` and `datadir` are sharing large amount of code. i think we should have some internal function like this [code block]",0,0,0,0.9600805640220642,0.9750951528549194,0.978586971759796,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1013199020,3088,glib is included and used unconditionally which is definitely a blocker. some other issues as well.,0,0,0,0.9774632453918456,0.9913526177406312,0.8920918107032776,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1016676197,3088,a small suggested rewrite :-),1,1,0,0.8856034874916077,0.9862425327301024,0.9686138033866882,1.0,accept,majority_agreement,2
audacity/audacity,reviews,944683566,2831,closed-endedness and magic string literals are problems. see previous comment.,0,0,0,0.9183287620544434,0.9257802963256836,0.9063252210617064,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1002110629,2831,i approve the changes. i suggest one more commit to define a sort comparator for translatablestring in just one place. i suggest should open another issue for what he observed in the case that multiple versions of audacity are installed.,0,0,0,0.9755932092666626,0.9528217315673828,0.8767986297607422,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1615675490,5139,reversion of my changes to audiosegmentsampleview is questionable,-1,0,0,0.6348878741264343,0.6119615435600281,0.8336272239685059,0.0,accept,majority_agreement,2
audacity/audacity,reviews,1736827152,5570,"approved, though would be nice to see this pr squashed into fewer amount of commits",0,0,0,0.8435041308403015,0.900974452495575,0.96085125207901,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1747998680,5570,"there are compilation issues that need to be addressed. pr has few commits that undo or redo something, would be nice if they are gone",0,0,0,0.957449197769165,0.9744584560394288,0.9816693663597108,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1919958714,6094,"reviewed up to ""widechannelgroupinterval's constructor takes number of channels"" inclusively. there's a crash that's very easy to reproduce - see comment.",0,0,0,0.9735782146453856,0.9723968505859376,0.9913191199302672,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1927569476,6094,done with this iteration. some questions that i'd like answered before i approve - which i look forward to!,1,1,1,0.9489530324935912,0.7940605878829956,0.9935945868492126,1.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1930718571,6094,"there's a stack overflow, at least on windows - see comment. (not requesting changes because it's a pain to remove afterwards.)",-1,-1,0,0.8828903436660767,0.9628255367279052,0.5544242858886719,-1.0,accept,majority_agreement,2
audacity/audacity,reviews,1085196766,3229,"in my opinion the regression above is the one suggestion i made that should be fixed before this is merged. making all commits buildable, fixing the off-by-one in acolor.cpp, and commenting that function, would be nice but inessential. making all the updates in case of change of language in preferences is not essential.",0,0,0,0.9641904234886168,0.9588689804077148,0.9705837965011596,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1917647866,5980,"not done reviewing, but i'd like to get answers about `wxhas_generic_dataviewctrl` before completing it, as a lot of code depends on it. otherwise, requesting changes because of the items-greyed-out little bug.",0,0,0,0.968830943107605,0.8702071309089661,0.9463930130004884,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1922152337,5980,"i can say that the code style and the much i've understood of the code looks ok, but i've only made a superficial review of this pr. for a more confident review i'd have had to invest a lot more time learning about those many classes, inheritances and flows. thankfully, it is being thoroughly eyeballed and tested by and , which i think can catch bugs better than my review. if it looks good to both these gentlemen i therefore suggest that it moves on to our internal qa. okay with that, and ?",0,1,1,0.6800935864448547,0.7991524934768677,0.8520216941833496,1.0,accept,majority_agreement,2
audacity/audacity,reviews,1952441299,5980,"review the commits since the last i reviewed, which was ""loop the search over the table while typing"", until the last commit at present, ""don't show hidden effects"". ~~i just have that one thing that might not be correct, i hope you can clarify.~~ all good.",1,1,1,0.9289116263389589,0.9772990345954896,0.9518249034881592,1.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1848496805,5900,"when you add images, you should also update the list of image file names in `lib-theme-resources/cmakelists.txt`, so that the build will correctly reconfigure when you checkout a commit with a changed image list.",0,0,0,0.988818347454071,0.9948745369911194,0.9942290782928468,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,716902682,1377,"as i just explained, i think the basic approach of storing rather than recomputing whether clips are aligned will not be reliable enough.",0,0,0,0.9208797812461852,0.9534905552864076,0.9491324424743652,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,726777311,1377,this review covers only the implications for persistency. more reviewing to come.,0,0,0,0.9778771996498108,0.9879456758499146,0.9826740622520448,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,726964973,1377,"i don't like the removal of groupchannels in favor of two functions. i don't like regression from the more generalized abstraction in track and tracklist, that the number of channels in a group might be more than two.",-1,-1,-1,0.9650713801383972,0.9712597131729126,0.8746377825737,-1.0,accept,unanimous_agreement,2
audacity/audacity,reviews,726967553,1377,mistakenly approved. not in fact approved yet.,-1,0,-1,0.806835412979126,0.505254864692688,0.7070662379264832,-1.0,accept,majority_agreement,2
audacity/audacity,reviews,727022753,1377,ignore this comment,0,0,0,0.6431581974029541,0.9154438972473145,0.9871485829353333,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,734611071,1377,"i'm done reviewing. this is good, very nearly complete. remaining fixes are minor.",1,1,1,0.5806632041931152,0.9583005905151368,0.9678921699523926,1.0,accept,unanimous_agreement,2
audacity/audacity,reviews,734627109,1377,must also handle possible future-file values.,0,0,0,0.9838918447494508,0.9916263818740844,0.990572154521942,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1580181109,5027,"no comment from me that should prevent moving forward, only suggestions and curiosity questions.",0,0,0,0.8755064606666565,0.9681318402290344,0.8808473348617554,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1895767613,5965,reviewed commits up to [a link] exclusively - to be continued,0,0,0,0.9848207831382751,0.9901272058486938,0.9918067455291748,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1897650186,5965,"reviewed commits up to [a link], inclusive. a crash bug was found, and i would like that the suggestion about the `const` method overload is applied.",0,0,0,0.9668822884559632,0.9889215230941772,0.9743183255195618,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1900497469,5965,"review complete up to ""fewer direct uses of wavetrack::mclips..."" inclusively.",0,0,0,0.6781450510025024,0.9810214042663574,0.9904235005378724,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1905761000,5965,"reviewed up to fa016813abed83226788e55566239ed485761759, inclusively.",0,0,0,0.9849190711975098,0.993661403656006,0.9929959177970886,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,938551641,2801,just one unnecessary line and function argument that can be removed,0,0,0,0.9614182710647584,0.9905885457992554,0.9443508386611938,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1633436289,5193,only suggestions about code and commit comments.,0,0,0,0.976251482963562,0.9834243655204772,0.9917592406272888,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1053833664,3258,should vst3 work? i can observe ` assert(bound == 0 || remaining() == 0 || result > 0);` violation when applying vst3 effect,0,0,0,0.9746887683868408,0.9948741793632508,0.9926555156707764,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1053837511,3258,for the reference lv2 worked fine,0,0,0,0.925838589668274,0.9754595756530762,0.8035644888877869,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1057107322,3258,"tremendous work! some minor comments, that can be ignored safely",1,-1,1,0.99062180519104,0.8465351462364197,0.9960655570030212,1.0,accept,majority_agreement,2
audacity/audacity,reviews,665880295,918,i've not used conan before but it's looks pretty neat!,1,1,1,0.9805087447166444,0.9928061366081238,0.9923882484436036,1.0,accept,unanimous_agreement,2
audacity/audacity,reviews,665936576,918,looks way cleaner than before. will artifactory be configured to allow anonymous access?,0,0,0,0.8845616579055786,0.9597300887107848,0.9337136149406432,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,892475492,2565,"are there small, unintended changes in appearance elsewhere? this is changing one function more widely used than just in the track control panel.",0,0,0,0.9564269781112672,0.964272677898407,0.9795715808868408,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1694658061,5398,tracks with non-float samples should be a test case,0,0,0,0.9858971238136292,0.9902662634849548,0.9888908863067628,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1697359596,5398,"one remaining thing i wanted to see was an assertion of a postcondition. i added it during your day off, in the interests of keeping this card moving through qa.",0,0,0,0.985626757144928,0.987545907497406,0.9948350191116332,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,887157643,2536,"i have finished my review. just some spelling mistakes in comments in cmake scripts that should be fixed immediately. otherwise, suggestions for improvements, but nothing that needs to be done before merging this.",0,0,0,0.97309148311615,0.9197738766670228,0.8286651372909546,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,887166274,2536,reapproval,0,0,0,0.9803436994552612,0.943514049053192,0.990498960018158,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1159850493,3696,"the reading by screen readers of the meter toolbar is now fine. glad to see that you got rid of the unwanted ""beep"", and that your fix also fixes the issue: [a link]",1,1,1,0.977102518081665,0.9895870685577391,0.9793164134025574,1.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1756052540,5685,"i'm done with this round of review. something must be done about the midi track vertical ruler too, for completeness, and to remove all uses of the ""/gui/verticalzooming"" preference. i would also rather see this pull request also change the preferences page to eliminate the checkbox, and also remove the item in viewmenus (including the callback function). keep this separate from #5675. let that one address other preferences that are less complicated.",0,0,0,0.9794657826423644,0.9726337194442748,0.8985568881034851,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1757272905,5685,did you forget to remove context menu shortcuts for midi tracks?,0,0,0,0.988439679145813,0.9938470721244812,0.9910669922828674,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1077791722,3317,"* opening fancy ui from the rt panel crashes audacity * using beat finder crashes * preview button is in a wrong place * some other feedback in comments also i want a design review to be completed first. ""non fancy"" ui looks quite odd, especially with built-in generators. probably we need a horizontal line to visually separate the buttons from effect settings.",-1,-1,-1,0.959689199924469,0.8649773001670837,0.9593047499656676,-1.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1084381485,3317,"there is still some feedback to addressed left. we can waive that enable button bug for now, i don't want it to block this pr. (but we need to log that bug)",0,0,0,0.8458688855171204,0.9626272320747375,0.9819487929344176,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1085994087,3317,"i think i can approve it now, with a couple minorish problems. please rebase the branch on master first",0,0,0,0.9687713980674744,0.7729195356369019,0.8410001397132874,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1449132749,4739,i see no issues with the proposed solution. i think design issues could be solved in a follow up pull requests.,0,0,0,0.9707664251327516,0.976897954940796,0.9594782590866088,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1456850366,4739,"i agree with 's comment ""i see no issues with the proposed solution. i think design issues could be solved in a follow up pull requests."" the comment that i made was to do with the design of the ""error"" message - i think that it could be more helpful, and point users towards tracks > resample (rather than the rate sub menu on a track's context menu) , and mention 's suggestion of just using panning if stereo effects are not required. so i'm quite happy to approve this pull request.",1,1,1,0.9541571140289308,0.9848706126213074,0.9881318807601928,1.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1438839865,2805,"i stopped before the ""don't loop"" commits, but there's already comments i'd like you to look at.",0,0,0,0.9800058603286744,0.8812638521194458,0.9921473860740662,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1441022492,2805,looks like we're on the right track :d please check my comment about remaining calls to `channels(...).size()` before merging.,0,1,1,0.5502009391784668,0.9526735544204712,0.9912086725234984,1.0,accept,majority_agreement,2
audacity/audacity,reviews,1487375531,4795,haven't noticed any defect. congratulations on removing `lib-track` from `lib-audio-io`!,1,1,1,0.9100136756896972,0.9915223121643066,0.966659665107727,1.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1272628995,4033,the only must-fix matters i see are the corrections in `foreachcopiedwavetrack`,0,0,0,0.9859760403633118,0.9893022179603576,0.9905361533164978,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1303880379,4033,"i reviewed again, even without the rebasing onto master. the conflicts to be resolved are all easy ones involving `#include` directives or visibility macros added to classes by the extraction of lib-wave-track. the question about wording can easily be decided and fixed later.",0,0,0,0.986062228679657,0.9910508394241332,0.9921643733978271,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1246718830,4171,"there are link failues on windows to fix before merge, and there are conflicts in pluginmenus.cpp to resolve in rebasing",0,0,0,0.977982759475708,0.9876327514648438,0.989776611328125,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1309169836,4171,i caught up at last with the new version of `addgroupedeffectmenuitems` and i'm finished with this review.,0,0,0,0.9550502300262452,0.8403324484825134,0.8160645961761475,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1740064050,5653,this pr introduces new complier warinings `cliplistlistener` feels a bit unfinished and fragile,0,-1,-1,0.6457237005233765,0.8609971404075623,0.8649670481681824,-1.0,accept,majority_agreement,2
audacity/audacity,reviews,1871992616,5653,"i am really confused by this pr, i will wait before the parent branch is merged and this pr is rebased before giving it a new round of review. reviewing it commit-by-commit makes it hard to understand if there is a simple way to improve it and i am seriously concerned by some of the decisions made in it. i cannot approve it as it is.",-1,-1,-1,0.98505300283432,0.9839734435081482,0.9887813329696656,-1.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1884568933,5653,"this is an incredibly complex pr addressing a minor problem. i don't like some decisions made here, but i don't want to block your branch either.",-1,-1,-1,0.980948805809021,0.9821987748146056,0.9865520596504213,-1.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1848073140,5899,"judging by the code style you are pulling in some of your older work. i have only looked on `lib-concurrency`. i think there few changes needed, but they are rather minor.",0,0,0,0.9569568037986756,0.9505950808525084,0.9597917795181274,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,706360318,1295,"a few minor things need fixing in the second commit, to get i18n-hints right, and flush preferences",0,0,0,0.9875832200050354,0.992091417312622,0.9698773622512816,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,706369666,1295,"request minor fixes for flushing prefs, putting i18n hints in the right places",0,0,0,0.9889860153198242,0.9867094159126282,0.9908618927001952,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1783484657,5789,"i see a lot of potential here for a generalized form which would work on any time input, as well as copy-paste functionality which may replace the weird and invisible store/retrieve cursor and range functions. doing that isn't necessary for this pr though. there's a bit of ux cleanup to do for this pr. but already i can say: thank you for this contribution!",1,1,1,0.9840838313102722,0.9917452931404114,0.992562472820282,1.0,accept,unanimous_agreement,2
audacity/audacity,reviews,2371938770,7515,we're getting there ! :d,1,1,1,0.9892913699150084,0.9954363703727722,0.9962777495384216,1.0,accept,unanimous_agreement,2
audacity/audacity,reviews,2372093704,7515,one last easy thing to please double-check before presenting to qa.,0,0,0,0.974601984024048,0.8983520269393921,0.9865569472312928,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,715453584,1323,i'm done reviewing.,0,0,0,0.9474292993545532,0.8995591998100281,0.9535375237464904,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,830201814,2261,"youl will fix the small matter about the rectangle, and then there is nothing else to block this.",0,0,0,0.981102168560028,0.9304050207138062,0.982135772705078,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,830769500,2261,approved!,0,1,1,0.7756711840629578,0.5044358372688293,0.8242588043212891,1.0,accept,majority_agreement,2
audacity/audacity,reviews,2215513760,7017,"one suggestion. i looked into `effectsmanager` implemenation and to me it seem that actually there are two interfaces combined: one for effects and the second one for commands. attempt to extract `iaudacitycommand` results in massive changes that are unlikely useful for audacity 4 progress (but if so, what i suggest does not prevent us from future refactroing). alternative solution is to define abstract command interface inside effectmanager: [code block] i expect that that would require very few trivial changes in `effectsmanager`",0,0,0,0.961519181728363,0.9793599843978882,0.9742523431777954,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1242222900,4053,"after spending quite a lot of time going multiple times through this pr i am still very confused with naming used and with semantics behind those names. i think this is something that should be improved. in the commit that introduces handle it feels like some work is missing. `wxmenu` is used directly instead of handle methods. in general, i think that this is the case where we should separate the **definition** of menu and the toolkit specific code in two different layers instead of proposed `handle` approach. consider pseudocode like [code block] i think it will simplify the lifetime management quite a bit.",-1,0,0,0.7097842693328857,0.8166468739509583,0.6453602313995361,0.0,accept,majority_agreement,2
audacity/audacity,reviews,889854134,2561,lost unique naming?,0,0,0,0.824173629283905,0.8311876058578491,0.9691627025604248,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1755847280,5675,"sufficient comments now to let you do some redrafting work. in the interests of unblocking qa if i can, i will turn attention to your other pull requests before completing this review.",0,0,0,0.9772969484329224,0.9793397188186646,0.988613486289978,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,2529366963,7978,"lgtm to be moved forward to qa, but i'd like the unit tests (which look great aside from this) made easier for the reader.",0,0,1,0.5729130506515503,0.9215579032897948,0.6318935751914978,0.0,accept,majority_agreement,2
audacity/audacity,reviews,779187235,1865,null pointer danger,0,-1,0,0.8851830363273621,0.9392867088317872,0.6549637913703918,0.0,accept,majority_agreement,2
audacity/audacity,reviews,779187909,1865,approved by mistake. i still want the null pointer danger fixed.,0,-1,-1,0.9768850803375244,0.896011471748352,0.7482301592826843,-1.0,accept,majority_agreement,2
audacity/audacity,reviews,779196268,1865,clarity about undo stack responsibilities,0,0,0,0.9833216667175292,0.976169228553772,0.9905536770820618,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,779200272,1865,clarification of other responsibilities: panel refresh?,0,0,0,0.978421688079834,0.9923163652420044,0.9949468970298768,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,779206914,1865,more bother about the odd case of right channel drag bars,-1,-1,-1,0.6955543756484985,0.8634169101715088,0.886718213558197,-1.0,accept,unanimous_agreement,2
audacity/audacity,reviews,783955747,1865,"i still can't approve this. undo history handling can be wrong. * new project; generate two clips of noise in it; ctrl+b, with two different selections, to make two labels; view > history * copy some text in another program * double-click the track name; ctrl+v; click other clip/track/label/application observe: the clip name makes an undo item, and you can undo and red just that change. this is good. but: repeat the steps, pasting text into a label instead of a clip. observe that the behavior is not analogous. the paste into the label can be lost if you undo. or, it can wrongly become part of some other undo item, for instance if you add another track with the context menu. undo then eliminates the track but also un-does the change of label. the problem is that the logic we have added for loss of ""focus"" of the clip does not yet have analogues for labels. either we must add those analogues. or, rewrite this so that label editing works as before, not placed behind the new virtual function interface. handle only clip editing with new code in editmenus; keep label editing as it was. unfortunate duplication, yes. or, abandon the issue as not deserving p1 status, and wait another release to address all of these focus problems more carefully.",1,0,0,0.8805782794952393,0.6896888017654419,0.5284789800643921,0.0,accept,majority_agreement,2
audacity/audacity,reviews,784988154,1865,i approve with minor suggestions about comments. i leave you to rebase and merge it.,0,1,0,0.9809491038322448,0.9287972450256348,0.9909467697143556,0.0,accept,majority_agreement,2
audacity/audacity,reviews,1283527178,3996,"still i must request one change, to pass the correct exception type and avoid unnecessary error reports. besides that, just one spelling mistake in a comment, and resolve the question whether `koffline` is right.",0,0,0,0.983046054840088,0.97865492105484,0.9503461718559264,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1303400926,3996,i have reviewed what is new since last review. i have no comments.,0,0,0,0.820708692073822,0.9387555718421936,0.9913767576217652,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,1643586674,5239,i haven't looked at the code yet but i have identified a problem while testing: [a link],0,0,0,0.7944142818450928,0.9791749119758606,0.9811118245124816,0.0,accept,unanimous_agreement,2
audacity/audacity,reviews,731606674,1482,"several const correctness issues that i think should be solved. in case we really need to have non const wxwindows flying around - let's at least use pointers there, non-const reference catches the eye heavily, as usually it implies that the object will be modified by the caller. also, probably journal.cpp should be split into multiple files",0,0,0,0.979976773262024,0.952497899532318,0.9529185891151428,0.0,accept,unanimous_agreement,2

id,pr_number,user,submitted_at,state,body,deberta_sentiment_label,deberta_confidence
654164597,835,rugk,2021-05-07T07:32:19Z,CHANGES_REQUESTED,"indeed iâ€™d suggest a different service for that than feeding google with even more data. i did not check whether they have libraries for local analysis, but [a link] and [a link] are great open-source analytic tools, which you can also self-host. more [a link]. also, for crashes there are ways you can just let the user send the report via mail (at least for android there are tools that can even collect these reports etc.)",1,0.532305896282196
655027290,835,BenBE,2021-05-09T00:20:16Z,CHANGES_REQUESTED,"several issues with nih. also various code formatting/indentation issues. but by far the greatest issue is the various non-compliance issues with privacy laws and regulations. the used providers are nowhere to be found and even in builds without telemetry (local source builds) this leaves tons of code included, that simply bloats the application senselessly and even may create attack surface and security issues. while the pr claims this telemetry is anonymous, it's pseudonymous at best, and given the used providers are google and yandex, you can nearly be certain it will be personalized. this is especially true given the telemetry generates a unique client id, that is large enough to be unlikely to collide even if every human on earth used the tracking-poisoned version. best action forward is to scrap this pr, as this wont give you any useful information for your stated objectives. instead this creates unnecessary surveillance of the user of your software and thus limit the user's freedoms.",-1,0.689858078956604
655079811,835,Megaf,2021-05-09T13:40:30Z,APPROVED,"apart from what others have already said, the added tracking and, some interesting choices of variable names in conditions, it seems alright.",0,0.5081362724304199
722521377,1384,crsib,2021-08-04T17:12:23Z,COMMENTED,i've just quickly run through :) as an addition to other comments - there are some files without an empty line at the end of the file.,1,0.9938651919364929
727258285,1384,crsib,2021-08-11T10:34:32Z,CHANGES_REQUESTED,"also, quite a few files still miss new line in the end of file",0,0.9609293937683105
732733699,1384,crsib,2021-08-18T14:36:15Z,CHANGES_REQUESTED,what should be improved: * consistent use of `const` and `final` * i would preffer having *ptr instead of *holder * translatable strings should have hints for translators * error handling should be more consistent. important context information should not be lost * != instead of !(=) whenver possible * in most cases - it is advised to have separate h/cpp for a class. exceptions are ok to be groupped whith the class that throws it,0,0.9536099433898926
845176290,1384,Paul-Licameli,2022-01-06T00:12:48Z,CHANGES_REQUESTED,doxygen comments for methods are not extracted to pages,0,0.9939945340156555
846719333,1384,Paul-Licameli,2022-01-07T15:29:17Z,CHANGES_REQUESTED,cmake mistake,-1,0.9731112122535706
846920930,1384,Paul-Licameli,2022-01-07T19:22:40Z,CHANGES_REQUESTED,thread safety!,0,0.902253270149231
847204261,1384,Paul-Licameli,2022-01-09T00:41:02Z,CHANGES_REQUESTED,thread safety and window lifetime problems,0,0.6113871335983276
1343733960,4414,Paul-Licameli,2023-03-16T13:13:04Z,CHANGES_REQUESTED,error in projectfilemanager.cpp -- needlessly removing the setting of bandwidth selection format,0,0.9838764071464539
1366857605,4414,Paul-Licameli,2023-03-31T12:35:41Z,APPROVED,odysseus has returned to ithaca.,0,0.9531546235084534
880140271,2295,Paul-Licameli,2022-02-11T12:58:50Z,CHANGES_REQUESTED,raii still not right,-1,0.5683728456497192
1805988865,5791,Paul-Licameli,2024-01-05T13:39:57Z,APPROVED,"good enough to move on to qa! i understand there will be other later issues to fix the undo problem, improve quality and performance, and add unit tests. i would prefer a bit of squashing before merge of course.",1,0.9884196519851685
1812213495,5791,saintmatthieu,2024-01-10T00:12:41Z,COMMENTED,-licameli i copied over the comments you wrote on the fork you made of this branch. i think this completes the migration of your review work. please let's continue the discussion here from now on.,0,0.7543973922729492
1593909275,5043,Paul-Licameli,2023-08-24T15:41:02Z,DISMISSED,please complete the fixes for exception safety.,0,0.9926238059997559
1659494402,5043,Paul-Licameli,2023-10-05T10:27:26Z,DISMISSED,regression in exception safety should be fixed,0,0.9886151552200317
1578367653,4881,Paul-Licameli,2023-08-15T11:18:02Z,CHANGES_REQUESTED,exception safety isn't right yet,0,0.9432799220085144
1032781392,3176,Paul-Licameli,2022-07-08T11:25:42Z,DISMISSED,"see previous comment. ""something must be done"" so that output metering works. that isn't very specific of me, but i do have ideas about how to do it. i think it will require some major changes of approach, and abandonment of many of these proposed changes. i may develop a first commit that a revised branch can be based on. but the changes for track list events are so far an approved, necessary part of the fix.",0,0.973934531211853
1054733450,3176,Paul-Licameli,2022-07-28T20:49:28Z,CHANGES_REQUESTED,avoid compilation dependency cycle,0,0.9877601265907288
1068119162,3176,Paul-Licameli,2022-08-10T11:31:09Z,COMMENTED,unnecessary `#include`,0,0.9686959981918335
1071309143,3176,Paul-Licameli,2022-08-12T16:05:43Z,APPROVED,"approved, at last! today's comments include some suggestions about names and comments and a fix for tracklist events, but none of that should block this. i will open some other issues about possible further bug fixes.",1,0.9655961394309998
1072455470,3176,Paul-Licameli,2022-08-15T10:10:12Z,APPROVED,"formally re-approved now. just make one more behavior change, the minor fix for the reset message.",0,0.9912925362586975
1590553692,5041,Paul-Licameli,2023-08-23T01:03:44Z,CHANGES_REQUESTED,one doubtful thing,-1,0.5066108107566833
1590564748,5041,Paul-Licameli,2023-08-23T01:21:51Z,CHANGES_REQUESTED,preserve behavior in presence of exceptions thrown from db layer,0,0.9928991794586182
1591360486,5041,Paul-Licameli,2023-08-23T11:18:18Z,CHANGES_REQUESTED,satisfy my doubt,0,0.9027865529060364
1591443391,5041,Paul-Licameli,2023-08-23T12:09:55Z,CHANGES_REQUESTED,mistake,-1,0.8691160082817078
704754527,1207,Paul-Licameli,2021-07-13T05:21:29Z,CHANGES_REQUESTED,"i made many suggestions, and would like this big commit broken into several smaller ones as i detail elsewhere. i have not yet reviewed anything related to labels. all of those should also be at least one other separate commit.",0,0.9800445437431335
712959537,1207,Paul-Licameli,2021-07-22T15:51:08Z,CHANGES_REQUESTED,"just matters of code and commit comments, and a variable name.",0,0.9864858388900757
807357878,2121,Paul-Licameli,2021-11-16T14:16:00Z,CHANGES_REQUESTED,overflow detection is insufficient,0,0.9750270247459412
808440477,2121,Paul-Licameli,2021-11-17T11:10:50Z,CHANGES_REQUESTED,end of stream checks were implemented in bufferedstreamreader but are ignored where it is used,0,0.9940245747566223
808481841,2121,Paul-Licameli,2021-11-17T11:49:33Z,CHANGES_REQUESTED,end of stream checks were implemented in bufferedstreamreader but are ignored where it is used,0,0.9940245747566223
809823843,2121,Paul-Licameli,2021-11-18T11:55:26Z,APPROVED,"please squash the history a little, and be sure the long pr comment is copied when the merge button gives you the entry window for it. let's go! i am glad to see the known silliness of the in-memory tempoary xml corrected.",1,0.9856810569763184
679476876,836,Paul-Licameli,2021-06-09T10:25:46Z,CHANGES_REQUESTED,i18n details,0,0.9898284673690796
679896621,836,Paul-Licameli,2021-06-09T16:39:20Z,CHANGES_REQUESTED,a few more translation issues,0,0.9766327142715454
680029731,836,Paul-Licameli,2021-06-09T18:56:04Z,CHANGES_REQUESTED,still more translation details.,0,0.9727784395217896
1501541995,4797,Paul-Licameli,2023-06-27T17:50:37Z,APPROVED,"i'm done! build fixes for linux are the only must-do. read my more recent comments. i trust you with minor modifications to comments as you see fit, and also the suggested changes to fix the builds of intermediate commits.",1,0.9893798232078552
1615763447,5138,saintmatthieu,2023-09-07T15:53:36Z,DISMISSED,please consider the comments i left before merging.,0,0.994899570941925
1054589742,3278,Paul-Licameli,2022-07-28T18:43:19Z,CHANGES_REQUESTED,"this still isn't right and the fault is partly mine for not stating the steps in the issue clearly enough. please carefully re-read the updated steps 4 and 5. for step 4: processfinalize must also move into the instance. the effect stops inheriting statefulpertrackeffect but inherits two bases instead: pertrackeffect and statefuleffectbase (which are also the direct bases of statefulpertrackeffect). just squash all the 4.x steps into one; do not define processblock in the wrapper because you don't need to shared it with the effect. do not move callprocessreplacing into the wrapper. for step 5: it is here that the effect loses its other base class statefuleffectbase, and other virtual functions of the effect for realtime move into the instance.",-1,0.5435400605201721
1082101753,3278,Paul-Licameli,2022-08-23T12:47:34Z,APPROVED,steps 4.x and 5.x might be squashed into just two commits before merging. all else looks good now.,0,0.6370252966880798
957195387,2867,Paul-Licameli,2022-04-29T02:15:36Z,CHANGES_REQUESTED,window needs rebuilding for change of language or undo and redo; changes of the effect list need to push new undo history states.,0,0.9886900782585144
957209220,2867,Paul-Licameli,2022-04-29T02:55:13Z,CHANGES_REQUESTED,"one more undo history push is needed, and we also need to force the realtime effect dialogs to be modal",0,0.9875888228416443
985259994,2867,Paul-Licameli,2022-05-25T17:59:23Z,APPROVED,"all concerns i raised are either addressed, or are remaining problems for me. let's merge it! (after a rebase to latest master of course)",1,0.71340411901474
1094159213,3432,Paul-Licameli,2022-09-01T23:21:49Z,CHANGES_REQUESTED,"one lock_guard is needed, i think, but all else is good and resolves all my questions",1,0.9298956394195557
725903809,1193,Paul-Licameli,2021-08-10T01:21:03Z,DISMISSED,more comments to come,0,0.900557816028595
1010507095,2224,crsib,2022-06-17T16:30:13Z,CHANGES_REQUESTED,"when i export from audacity - the resulting file seems to be missing some metadata: vlc does not show the file length and does not allow seeking. everything works fine, if i generate wv file using the official cli. looks like you miss `wavpackupdatenumsamples` call in the end. this concludes the review of the exportwavpack.cpp, review for the importer will follow.",0,0.9470314979553223
1010767091,2224,crsib,2022-06-17T16:30:16Z,CHANGES_REQUESTED,"when i export from audacity - the resulting file seems to be missing some metadata: vlc does not show the file length and does not allow seeking. everything works fine, if i generate wv file using the official cli. looks like you miss `wavpackupdatenumsamples` call in the end. this concludes the review of the exportwavpack.cpp, review for the importer will follow.",0,0.9470314979553223
1013398778,2224,crsib,2022-06-21T11:01:22Z,COMMENTED,"export looks fine now, i will review import now!",1,0.9807975888252258
1013401337,2224,crsib,2022-06-21T12:21:17Z,CHANGES_REQUESTED,decoding loop need some love :-) and some minor are changes will be welcome!,1,0.9909780025482178
1016642096,2224,crsib,2022-06-23T09:12:21Z,CHANGES_REQUESTED,"great work! just a few more issue, but i think that they are easy to resolve.",1,0.9970484375953674
1018381566,2224,crsib,2022-06-24T12:25:58Z,CHANGES_REQUESTED,a one very minor step left!,-1,0.7513081431388855
1467161618,4746,saintmatthieu,2023-06-07T11:09:10Z,COMMENTED,"haven't absorbed everything, but made progress.",0,0.8188178539276123
1471781436,4746,saintmatthieu,2023-06-09T14:29:22Z,COMMENTED,finished for this iteration.,0,0.8996743559837341
1474566759,4746,saintmatthieu,2023-06-12T10:22:03Z,DISMISSED,"nice work, looking forward to the benefits for my own work, thank you!",1,0.9967865943908691
1488216771,4746,saintmatthieu,2023-06-20T14:10:05Z,CHANGES_REQUESTED,afaict this commit is introducing an undesired change of behavior.,-1,0.7943102717399597
1931723513,6068,crsib,2024-03-12T17:16:04Z,CHANGES_REQUESTED,"i have two issues with this pr * formantshifterlogger is responsible for handling configuration. * you define it using and interface too, and i don't see why. the only place it is used - it is used directly. * i think we should keep process_hop simd ready. i expect that the fix will be very simple. there are some minor comments as well, but i will not block the pr because of them.",0,0.8650893568992615
1938637525,6068,crsib,2024-03-15T10:46:28Z,APPROVED,i don't see any pressing issues left,0,0.8268700838088989
1945655593,6068,crsib,2024-03-19T09:38:16Z,APPROVED,i don't see blocking issues with this pr,0,0.978918731212616
1452639267,4668,crsib,2023-06-21T09:18:39Z,COMMENTED,"i don't see blockers; just a few comments to sum up: 1. some exporters do not provide the rates list. we should carefully review them. 2. ui code is hard to read and understand. 3. this needs to be rebased carefully on the recent master, especially after merging the mixer pr. for this reason, i don't press approve exactly now, but i would like to start checking the builds from this pr (please, coordinate with ). given that we are code review limited for now and this task's complexity, we can make an exception and start verifying it before completing and formal approval.",0,0.9037434458732605
1540958981,4668,crsib,2023-07-21T11:08:13Z,COMMENTED,"i finished this round, i am quite concerned about loosing stereo in mp3 export",-1,0.9638868570327759
1540985255,4668,crsib,2023-07-21T11:27:29Z,APPROVED,"rebasing is needed, and there are some conflicts",0,0.9614964127540588
1453827713,4701,crsib,2023-05-31T17:54:59Z,CHANGES_REQUESTED,"i don't have much comments about the code left, so it's time to brush up the history a bit. that's it - squash all the ""fixing build"" and ""addressing review"" commits",0,0.9759460687637329
1633703529,5042,Paul-Licameli,2023-09-19T16:16:55Z,APPROVED,"i'm still not really satisfied about the two uses of `as_size_t()`. i'm dissatisfied now about the first, because, `(effectiveend - effectivestart)` is bounded above by a `size_t` but there still isn't proof it is bounded below by 0 -- not negative. you should first assign `effectiveend = std::max(effectivestart, effectiveend);` i am not persuaded either by the argument about the other `as_size_t()` and would rather see the `limitsamplebuffersize`. i think then that without the other easy code changes, the function is still relying about on assumptions about its arguments so it has an incompletely stated contract. i'd rather be deductive than argue that it works in practice so far. but this pr was waited long enough. i'm approving it, but with a protest.",0,0.6325693130493164
673733342,830,Paul-Licameli,2021-06-02T18:05:44Z,CHANGES_REQUESTED,"i'll complete this first review for now, but i need to examine acolor.cpp more closely, and consider whether there might be another fix for the sync lock tiles.",0,0.9807021021842957
680275893,830,Paul-Licameli,2021-06-10T01:52:58Z,CHANGES_REQUESTED,changes to user-visible strings because of string freeze,0,0.9817190766334534
679967402,966,Paul-Licameli,2021-06-09T17:52:26Z,CHANGES_REQUESTED,"this pr has a too-complicated commit history, including merging of two branches with different upstream commits. the commits are not in one simple sequence. this makes it too difficult to review, and to verify that each commit in the sequence builds and runs. please merge your work with recent master, then do `git reset audacity/master` (or whatever remote name you have for master) and then add and commit files again, so that there are fewer commits (maybe one). then force-push it. there should not be commits, in a final form of the branch, for small corrections like indentation. there may be multiple commits to show how the project can be done in logical stages, to aid review. but the branch should not keep a history of correction of errors, unless you still mark it as a draft.",0,0.8691893219947815
680012999,966,Paul-Licameli,2021-06-09T18:40:38Z,CHANGES_REQUESTED,further reconsideration of lifetime problems.,0,0.9642575979232788
681300514,966,Paul-Licameli,2021-06-10T22:17:12Z,CHANGES_REQUESTED,i am satisfied that you addressed all points in my last review. thank you for the simpler commit history. this next review covers some points about naming and translation. i have not reviewed everything yet.,1,0.9832282066345215
681307422,966,Paul-Licameli,2021-06-10T22:25:01Z,CHANGES_REQUESTED,some more points about parent window pointers and lifetimes.,0,0.9902520179748535
685834583,966,Paul-Licameli,2021-06-17T05:33:21Z,CHANGES_REQUESTED,"the one incorrect static variable is the only mildly important thing in this review that isn't just style. it's wrong in principle, but even so isn't likely to cause an error in practice because of the long update interval, longer perhaps than most user sessions with audacity. besides that, the commit history must be cleaned up, without merge commits, before i approve. overall i'm pleased with this branch.",1,0.9488001465797424
1007356641,2941,Paul-Licameli,2022-06-15T11:44:20Z,APPROVED,"approved! please rebased onto latest master, force-push, and merge with a merge commit.",0,0.9029306769371033
1080560068,3396,Paul-Licameli,2022-08-22T14:07:08Z,APPROVED,"i would like you to make one last interactive rebase that fixes the commit that doesn't build because it refers to a member of `vst3effectsettings` that doesn't exist. also fix commit comments. otherwise, i'm convinced you fixed two out of the three major problems i mentioned. but i think there will be remaining problems with use of factory presets or imported presets. these can be described in a new issue that we can fix later.",0,0.8902670741081238
2045093402,6359,saintmatthieu,2024-05-08T11:01:23Z,DISMISSED,"haven't finished yet the review, but stumbled on a potential crash.",0,0.599534273147583
2045384112,6359,saintmatthieu,2024-05-08T12:29:42Z,COMMENTED,"finished reviewing the first commit (the audio part) ; nothing major besides that crash, but hopefully this is an easy fix. please remove the dead code ; i don't see why it should be kept, and it's noisy and sometimes confusing.",0,0.5409151315689087
2049392101,6359,saintmatthieu,2024-05-10T08:08:40Z,COMMENTED,"not requesting changes because i'm not certain of my analysis, but i think there is another bug, already present in the first commit but that i missed before.",0,0.9632436633110046
2060116139,6359,saintmatthieu,2024-05-16T09:17:17Z,COMMENTED,following up on [a link] vitaly and i had a conversation and he helped me understand the bigger picture. this seems like a good change to me.,1,0.9717982411384583
746704840,1614,Paul-Licameli,2021-09-06T01:11:07Z,CHANGES_REQUESTED,"i raise questions about the new event passing. i think the new event type is unnecessary and should not be added. another implementation can be done with existing events. this is not a complete review, but you can begin with these reqeusted changes.",0,0.8891716599464417
746713134,1614,Paul-Licameli,2021-09-06T01:35:45Z,CHANGES_REQUESTED,"more code reuse, less duplication?",0,0.9865538477897644
746716420,1614,Paul-Licameli,2021-09-06T01:43:06Z,CHANGES_REQUESTED,"more code reuse, less duplication?",0,0.9865538477897644
746731892,1614,Paul-Licameli,2021-09-06T02:38:33Z,CHANGES_REQUESTED,advice about file structure and non-inline virtual destructor.,0,0.9946134686470032
758101056,1679,Paul-Licameli,2021-09-19T00:47:35Z,CHANGES_REQUESTED,i found a bug in updating of envelopes.,0,0.9437959790229797
765316601,1679,Paul-Licameli,2021-09-28T12:28:23Z,COMMENTED,some observations about inconsistent use of append buffer length and possible off by one errors and rounding. but i'm not recommending changes. there may be a lot of subtle problems like this already existing and we might leave it until stabilization to study and try to fix them.,0,0.9583932161331177
767757446,1679,Paul-Licameli,2021-09-30T11:56:02Z,CHANGES_REQUESTED,i think there are errors in one of the paths through pasting of waveclip,0,0.9740189909934998
770137258,1679,Paul-Licameli,2021-10-04T10:53:08Z,CHANGES_REQUESTED,"explanation at least in comments, if you can prove there isn't a mistake.",0,0.9880638718605042
2006991066,5818,vsverchinsky,2024-04-17T19:41:39Z,COMMENTED,all good,1,0.9065300822257996
761529713,1623,Paul-Licameli,2021-09-23T02:12:10Z,COMMENTED,raising questions about some assignments of fields of the format context that were not preserved.,0,0.9173153638839722
761553744,1623,Paul-Licameli,2021-09-23T02:54:19Z,CHANGES_REQUESTED,"doubts about too long lifetimes of some things, though they don't ultimately leak.",-1,0.5762828588485718
762575634,1623,Paul-Licameli,2021-09-23T23:20:48Z,COMMENTED,some doubts,0,0.5284841656684875
1039270506,3183,Paul-Licameli,2022-07-14T17:50:47Z,CHANGES_REQUESTED,"i see the latest round of changes. one thing i'm still unsatisfied with: the commit ""6.2 rewritten loadsettings / savesettings..."" needs an update of the commit comment, and `savesettings` and `loadsettings` should remain as in the previous iterations of the branch: don't iterate maeffect, don't do the side effects of `constcalldispatcher` or `callsetparameter`. do: iterate over the map in `const effectsettings` or over the key/value pairs in `const commandparameters`.",0,0.870145857334137
1011952069,3088,crsib,2022-06-20T09:15:11Z,CHANGES_REQUESTED,"eximining other uses of `datadir` it can be observed, that some cases need to use `configdir` and some the state dir (which is not introduced). for example, i feel that `ffmpeg_presets.xml` is a config file, not data file. this is not critical, however. what is more important, it seems that `configdir` and `datadir` are sharing large amount of code. i think we should have some internal function like this [code block]",0,0.9785869717597961
1013199020,3088,crsib,2022-06-21T08:42:57Z,CHANGES_REQUESTED,glib is included and used unconditionally which is definitely a blocker. some other issues as well.,0,0.8920918107032776
1016676197,3088,crsib,2022-06-23T09:44:22Z,CHANGES_REQUESTED,a small suggested rewrite :-),0,0.9686138033866882
944683566,2831,Paul-Licameli,2022-04-18T18:24:20Z,CHANGES_REQUESTED,closed-endedness and magic string literals are problems. see previous comment.,0,0.9063252210617065
1002110629,2831,Paul-Licameli,2022-06-09T23:47:08Z,APPROVED,i approve the changes. i suggest one more commit to define a sort comparator for translatablestring in just one place. i suggest should open another issue for what he observed in the case that multiple versions of audacity are installed.,0,0.8767986297607422
1615675490,5139,Paul-Licameli,2023-09-07T15:09:33Z,CHANGES_REQUESTED,reversion of my changes to audiosegmentsampleview is questionable,0,0.8336272239685059
1736827152,5570,vsverchinsky,2023-11-17T12:19:50Z,COMMENTED,"approved, though would be nice to see this pr squashed into fewer amount of commits",0,0.96085125207901
1747998680,5570,vsverchinsky,2023-11-24T13:59:19Z,APPROVED,"there are compilation issues that need to be addressed. pr has few commits that undo or redo something, would be nice if they are gone",0,0.9816693663597107
1919958714,6094,saintmatthieu,2024-03-06T15:10:42Z,DISMISSED,"reviewed up to ""widechannelgroupinterval's constructor takes number of channels"" inclusively. there's a crash that's very easy to reproduce - see comment.",0,0.9913191199302673
1927569476,6094,saintmatthieu,2024-03-11T13:41:42Z,COMMENTED,done with this iteration. some questions that i'd like answered before i approve - which i look forward to!,1,0.9935945868492126
1930718571,6094,saintmatthieu,2024-03-12T11:20:03Z,COMMENTED,"there's a stack overflow, at least on windows - see comment. (not requesting changes because it's a pain to remove afterwards.)",0,0.5544242858886719
1085196766,3229,Paul-Licameli,2022-08-25T10:27:33Z,CHANGES_REQUESTED,"in my opinion the regression above is the one suggestion i made that should be fixed before this is merged. making all commits buildable, fixing the off-by-one in acolor.cpp, and commenting that function, would be nice but inessential. making all the updates in case of change of language in preferences is not essential.",0,0.9705837965011597
1917647866,5980,saintmatthieu,2024-03-06T02:04:38Z,DISMISSED,"not done reviewing, but i'd like to get answers about `wxhas_generic_dataviewctrl` before completing it, as a lot of code depends on it. otherwise, requesting changes because of the items-greyed-out little bug.",0,0.9463930130004883
1922152337,5980,saintmatthieu,2024-03-07T11:50:50Z,COMMENTED,"i can say that the code style and the much i've understood of the code looks ok, but i've only made a superficial review of this pr. for a more confident review i'd have had to invest a lot more time learning about those many classes, inheritances and flows. thankfully, it is being thoroughly eyeballed and tested by and , which i think can catch bugs better than my review. if it looks good to both these gentlemen i therefore suggest that it moves on to our internal qa. okay with that, and ?",1,0.8520216941833496
1952441299,5980,saintmatthieu,2024-03-21T14:41:10Z,COMMENTED,"review the commits since the last i reviewed, which was ""loop the search over the table while typing"", until the last commit at present, ""don't show hidden effects"". ~~i just have that one thing that might not be correct, i hope you can clarify.~~ all good.",1,0.9518249034881592
1848496805,5900,Paul-Licameli,2024-01-29T11:55:38Z,CHANGES_REQUESTED,"when you add images, you should also update the list of image file names in `lib-theme-resources/cmakelists.txt`, so that the build will correctly reconfigure when you checkout a commit with a changed image list.",0,0.9942290782928467
716902682,1377,Paul-Licameli,2021-07-28T11:50:35Z,DISMISSED,"as i just explained, i think the basic approach of storing rather than recomputing whether clips are aligned will not be reliable enough.",0,0.9491324424743652
726777311,1377,Paul-Licameli,2021-08-10T19:52:13Z,CHANGES_REQUESTED,this review covers only the implications for persistency. more reviewing to come.,0,0.9826740622520447
726964973,1377,Paul-Licameli,2021-08-11T01:23:04Z,APPROVED,"i don't like the removal of groupchannels in favor of two functions. i don't like regression from the more generalized abstraction in track and tracklist, that the number of channels in a group might be more than two.",-1,0.8746377825737
726967553,1377,Paul-Licameli,2021-08-11T01:24:29Z,CHANGES_REQUESTED,mistakenly approved. not in fact approved yet.,-1,0.7070662379264832
727022753,1377,Paul-Licameli,2021-08-11T04:02:31Z,CHANGES_REQUESTED,ignore this comment,0,0.9871485829353333
734611071,1377,Paul-Licameli,2021-08-20T02:50:16Z,CHANGES_REQUESTED,"i'm done reviewing. this is good, very nearly complete. remaining fixes are minor.",1,0.9678921699523926
734627109,1377,Paul-Licameli,2021-08-20T03:08:13Z,CHANGES_REQUESTED,must also handle possible future-file values.,0,0.9905721545219421
1580181109,5027,saintmatthieu,2023-08-16T14:18:25Z,APPROVED,"no comment from me that should prevent moving forward, only suggestions and curiosity questions.",0,0.8808473348617554
1895767613,5965,saintmatthieu,2024-02-22T17:30:56Z,COMMENTED,reviewed commits up to [a link] exclusively - to be continued,0,0.9918067455291748
1897650186,5965,saintmatthieu,2024-02-23T13:13:36Z,DISMISSED,"reviewed commits up to [a link], inclusive. a crash bug was found, and i would like that the suggestion about the `const` method overload is applied.",0,0.9743183255195618
1900497469,5965,saintmatthieu,2024-02-26T10:31:18Z,COMMENTED,"review complete up to ""fewer direct uses of wavetrack::mclips..."" inclusively.",0,0.9904235005378723
1905761000,5965,saintmatthieu,2024-02-28T11:33:09Z,COMMENTED,"reviewed up to fa016813abed83226788e55566239ed485761759, inclusively.",0,0.9929959177970886
938551641,2801,Paul-Licameli,2022-04-11T20:29:23Z,CHANGES_REQUESTED,just one unnecessary line and function argument that can be removed,0,0.9443508386611938
1633436289,5193,Paul-Licameli,2023-09-19T14:24:21Z,APPROVED,only suggestions about code and commit comments.,0,0.9917592406272888
1053833664,3258,crsib,2022-07-28T10:12:58Z,COMMENTED,should vst3 work? i can observe ` assert(bound == 0 || remaining() == 0 || result > 0);` violation when applying vst3 effect,0,0.9926555156707764
1053837511,3258,crsib,2022-07-28T10:16:10Z,COMMENTED,for the reference lv2 worked fine,0,0.8035644888877869
1057107322,3258,crsib,2022-08-01T12:27:46Z,APPROVED,"tremendous work! some minor comments, that can be ignored safely",1,0.9960655570030212
665880295,918,shoogle,2021-05-21T21:41:10Z,CHANGES_REQUESTED,i've not used conan before but it's looks pretty neat!,1,0.9923882484436035
665936576,918,JamesCrook,2021-05-21T22:00:49Z,COMMENTED,looks way cleaner than before. will artifactory be configured to allow anonymous access?,0,0.9337136149406433
892475492,2565,Paul-Licameli,2022-02-24T13:59:26Z,CHANGES_REQUESTED,"are there small, unintended changes in appearance elsewhere? this is changing one function more widely used than just in the track control panel.",0,0.9795715808868408
1694658061,5398,Paul-Licameli,2023-10-24T11:53:07Z,COMMENTED,tracks with non-float samples should be a test case,0,0.9888908863067627
1697359596,5398,Paul-Licameli,2023-10-25T13:31:09Z,APPROVED,"one remaining thing i wanted to see was an assertion of a postcondition. i added it during your day off, in the interests of keeping this card moving through qa.",0,0.9948350191116333
887157643,2536,Paul-Licameli,2022-02-18T11:28:07Z,DISMISSED,"i have finished my review. just some spelling mistakes in comments in cmake scripts that should be fixed immediately. otherwise, suggestions for improvements, but nothing that needs to be done before merging this.",0,0.8286651372909546
887166274,2536,Paul-Licameli,2022-02-18T11:37:39Z,APPROVED,reapproval,0,0.990498960018158
1159850493,3696,DavidBailes,2022-10-28T10:39:12Z,APPROVED,"the reading by screen readers of the meter toolbar is now fine. glad to see that you got rid of the unwanted ""beep"", and that your fix also fixes the issue: [a link]",1,0.9793164134025574
1756052540,5685,Paul-Licameli,2023-11-29T19:26:50Z,CHANGES_REQUESTED,"i'm done with this round of review. something must be done about the midi track vertical ruler too, for completeness, and to remove all uses of the ""/gui/verticalzooming"" preference. i would also rather see this pull request also change the preferences page to eliminate the checkbox, and also remove the item in viewmenus (including the callback function). keep this separate from #5675. let that one address other preferences that are less complicated.",0,0.8985568881034851
1757272905,5685,Paul-Licameli,2023-11-30T11:50:52Z,CHANGES_REQUESTED,did you forget to remove context menu shortcuts for midi tracks?,0,0.9910669922828674
1077791722,3317,crsib,2022-08-18T18:11:10Z,CHANGES_REQUESTED,"* opening fancy ui from the rt panel crashes audacity * using beat finder crashes * preview button is in a wrong place * some other feedback in comments also i want a design review to be completed first. ""non fancy"" ui looks quite odd, especially with built-in generators. probably we need a horizontal line to visually separate the buttons from effect settings.",-1,0.9593047499656677
1084381485,3317,crsib,2022-08-24T21:02:20Z,CHANGES_REQUESTED,"there is still some feedback to addressed left. we can waive that enable button bug for now, i don't want it to block this pr. (but we need to log that bug)",0,0.9819487929344177
1085994087,3317,crsib,2022-08-25T19:20:39Z,APPROVED,"i think i can approve it now, with a couple minorish problems. please rebase the branch on master first",0,0.8410001397132874
1449132749,4739,crsib,2023-05-29T08:47:17Z,APPROVED,i see no issues with the proposed solution. i think design issues could be solved in a follow up pull requests.,0,0.9594782590866089
1456850366,4739,DavidBailes,2023-06-02T07:59:57Z,APPROVED,"i agree with 's comment ""i see no issues with the proposed solution. i think design issues could be solved in a follow up pull requests."" the comment that i made was to do with the design of the ""error"" message - i think that it could be more helpful, and point users towards tracks > resample (rather than the rate sub menu on a track's context menu) , and mention 's suggestion of just using panning if stereo effects are not required. so i'm quite happy to approve this pull request.",1,0.9881318807601929
1438839865,2805,saintmatthieu,2023-05-23T10:12:11Z,CHANGES_REQUESTED,"i stopped before the ""don't loop"" commits, but there's already comments i'd like you to look at.",0,0.9921473860740662
1441022492,2805,saintmatthieu,2023-05-24T07:35:31Z,APPROVED,looks like we're on the right track :d please check my comment about remaining calls to `channels(...).size()` before merging.,1,0.9912086725234985
1487375531,4795,saintmatthieu,2023-06-20T09:11:15Z,APPROVED,haven't noticed any defect. congratulations on removing `lib-track` from `lib-audio-io`!,1,0.966659665107727
1272628995,4033,Paul-Licameli,2023-01-27T12:44:33Z,CHANGES_REQUESTED,the only must-fix matters i see are the corrections in `foreachcopiedwavetrack`,0,0.9905361533164978
1303880379,4033,Paul-Licameli,2023-02-17T17:17:00Z,APPROVED,"i reviewed again, even without the rebasing onto master. the conflicts to be resolved are all easy ones involving `#include` directives or visibility macros added to classes by the extraction of lib-wave-track. the question about wording can easily be decided and fixed later.",0,0.9921643733978271
1246718830,4171,Paul-Licameli,2023-01-12T23:28:17Z,CHANGES_REQUESTED,"there are link failues on windows to fix before merge, and there are conflicts in pluginmenus.cpp to resolve in rebasing",0,0.989776611328125
1309169836,4171,Paul-Licameli,2023-02-22T12:49:29Z,APPROVED,i caught up at last with the new version of `addgroupedeffectmenuitems` and i'm finished with this review.,0,0.8160645961761475
1740064050,5653,vsverchinsky,2023-11-20T20:13:07Z,COMMENTED,this pr introduces new complier warinings `cliplistlistener` feels a bit unfinished and fragile,-1,0.8649670481681824
1871992616,5653,crsib,2024-02-09T09:39:58Z,COMMENTED,"i am really confused by this pr, i will wait before the parent branch is merged and this pr is rebased before giving it a new round of review. reviewing it commit-by-commit makes it hard to understand if there is a simple way to improve it and i am seriously concerned by some of the decisions made in it. i cannot approve it as it is.",-1,0.9887813329696655
1884568933,5653,crsib,2024-02-16T08:33:54Z,APPROVED,"this is an incredibly complex pr addressing a minor problem. i don't like some decisions made here, but i don't want to block your branch either.",-1,0.9865520596504211
1848073140,5899,crsib,2024-01-29T09:43:19Z,COMMENTED,"judging by the code style you are pulling in some of your older work. i have only looked on `lib-concurrency`. i think there few changes needed, but they are rather minor.",0,0.9597917795181274
706360318,1295,Paul-Licameli,2021-07-14T14:39:50Z,CHANGES_REQUESTED,"a few minor things need fixing in the second commit, to get i18n-hints right, and flush preferences",0,0.9698773622512817
706369666,1295,Paul-Licameli,2021-07-14T14:47:19Z,CHANGES_REQUESTED,"request minor fixes for flushing prefs, putting i18n hints in the right places",0,0.9908618927001953
1783484657,5789,LWinterberg,2023-12-15T11:02:30Z,CHANGES_REQUESTED,"i see a lot of potential here for a generalized form which would work on any time input, as well as copy-paste functionality which may replace the weird and invisible store/retrieve cursor and range functions. doing that isn't necessary for this pr though. there's a bit of ux cleanup to do for this pr. but already i can say: thank you for this contribution!",1,0.992562472820282
2371938770,7515,saintmatthieu,2024-10-16T10:39:22Z,COMMENTED,we're getting there ! :d,1,0.9962777495384216
2372093704,7515,saintmatthieu,2024-10-16T11:13:09Z,APPROVED,one last easy thing to please double-check before presenting to qa.,0,0.9865569472312927
715453584,1323,Paul-Licameli,2021-07-27T03:31:33Z,CHANGES_REQUESTED,i'm done reviewing.,0,0.9535375237464905
830201814,2261,Paul-Licameli,2021-12-13T12:57:15Z,DISMISSED,"youl will fix the small matter about the rectangle, and then there is nothing else to block this.",0,0.9821357727050781
830769500,2261,Paul-Licameli,2021-12-13T21:22:10Z,APPROVED,approved!,1,0.8242588043212891
2215513760,7017,vsverchinsky,2024-08-09T07:58:57Z,COMMENTED,"one suggestion. i looked into `effectsmanager` implemenation and to me it seem that actually there are two interfaces combined: one for effects and the second one for commands. attempt to extract `iaudacitycommand` results in massive changes that are unlikely useful for audacity 4 progress (but if so, what i suggest does not prevent us from future refactroing). alternative solution is to define abstract command interface inside effectmanager: [code block] i expect that that would require very few trivial changes in `effectsmanager`",0,0.9742523431777954
1242222900,4053,crsib,2023-01-11T12:00:36Z,CHANGES_REQUESTED,"after spending quite a lot of time going multiple times through this pr i am still very confused with naming used and with semantics behind those names. i think this is something that should be improved. in the commit that introduces handle it feels like some work is missing. `wxmenu` is used directly instead of handle methods. in general, i think that this is the case where we should separate the **definition** of menu and the toolkit specific code in two different layers instead of proposed `handle` approach. consider pseudocode like [code block] i think it will simplify the lifetime management quite a bit.",0,0.6453602313995361
889854134,2561,Paul-Licameli,2022-02-22T14:10:10Z,CHANGES_REQUESTED,lost unique naming?,0,0.9691627025604248
1755847280,5675,Paul-Licameli,2023-11-29T17:29:45Z,CHANGES_REQUESTED,"sufficient comments now to let you do some redrafting work. in the interests of unblocking qa if i can, i will turn attention to your other pull requests before completing this review.",0,0.988613486289978
2529366963,7978,saintmatthieu,2025-01-03T16:57:36Z,APPROVED,"lgtm to be moved forward to qa, but i'd like the unit tests (which look great aside from this) made easier for the reader.",1,0.6318935751914978
779187235,1865,Paul-Licameli,2021-10-14T00:00:24Z,APPROVED,null pointer danger,0,0.6549637913703918
779187909,1865,Paul-Licameli,2021-10-14T00:01:48Z,CHANGES_REQUESTED,approved by mistake. i still want the null pointer danger fixed.,-1,0.7482301592826843
779196268,1865,Paul-Licameli,2021-10-14T00:23:27Z,CHANGES_REQUESTED,clarity about undo stack responsibilities,0,0.9905536770820618
779200272,1865,Paul-Licameli,2021-10-14T00:34:23Z,CHANGES_REQUESTED,clarification of other responsibilities: panel refresh?,0,0.9949468970298767
779206914,1865,Paul-Licameli,2021-10-14T00:52:04Z,CHANGES_REQUESTED,more bother about the odd case of right channel drag bars,-1,0.886718213558197
783955747,1865,Paul-Licameli,2021-10-20T02:54:44Z,CHANGES_REQUESTED,"i still can't approve this. undo history handling can be wrong. * new project; generate two clips of noise in it; ctrl+b, with two different selections, to make two labels; view > history * copy some text in another program * double-click the track name; ctrl+v; click other clip/track/label/application observe: the clip name makes an undo item, and you can undo and red just that change. this is good. but: repeat the steps, pasting text into a label instead of a clip. observe that the behavior is not analogous. the paste into the label can be lost if you undo. or, it can wrongly become part of some other undo item, for instance if you add another track with the context menu. undo then eliminates the track but also un-does the change of label. the problem is that the logic we have added for loss of ""focus"" of the clip does not yet have analogues for labels. either we must add those analogues. or, rewrite this so that label editing works as before, not placed behind the new virtual function interface. handle only clip editing with new code in editmenus; keep label editing as it was. unfortunate duplication, yes. or, abandon the issue as not deserving p1 status, and wait another release to address all of these focus problems more carefully.",0,0.5284789800643921
784988154,1865,Paul-Licameli,2021-10-20T20:57:47Z,APPROVED,i approve with minor suggestions about comments. i leave you to rebase and merge it.,0,0.9909467697143555
1283527178,3996,Paul-Licameli,2023-02-03T18:33:24Z,CHANGES_REQUESTED,"still i must request one change, to pass the correct exception type and avoid unnecessary error reports. besides that, just one spelling mistake in a comment, and resolve the question whether `koffline` is right.",0,0.9503461718559265
1303400926,3996,Paul-Licameli,2023-02-17T13:06:13Z,APPROVED,i have reviewed what is new since last review. i have no comments.,0,0.9913767576217651
1643586674,5239,saintmatthieu,2023-09-26T07:48:24Z,CHANGES_REQUESTED,i haven't looked at the code yet but i have identified a problem while testing: [a link],0,0.9811118245124817
731606674,1482,crsib,2021-08-17T11:23:07Z,CHANGES_REQUESTED,"several const correctness issues that i think should be solved. in case we really need to have non const wxwindows flying around - let's at least use pointers there, non-const reference catches the eye heavily, as usually it implies that the object will be modified by the caller. also, probably journal.cpp should be split into multiple files",0,0.9529185891151428

id,pr_number,user,created_at,body,deberta_sentiment_label,deberta_confidence
1801000254,5439,DmitriyLewen,2023-11-08T04:07:45Z,"agree with you `purl`/`cpe` is one of the package parameters. if the package contains `pkgidentifier`, we can simply add it to `detectedvulnerability`: e.g. for alpine packages: [a link]",0,0.9933657050132751
1801710392,5439,juan131,2023-11-08T11:35:18Z,thanks for your comments ! i'll update the pr moving pkgidentifier as part of the `package` identity and generate purl(s) at analysis.,1,0.9791075587272644
1805286175,5439,juan131,2023-11-10T08:19:25Z,i need advice on how to update `pkg/fanal/test/integration/testdata/goldens` data automatically to fix integration tests,0,0.9923765063285828
1805304512,5439,DmitriyLewen,2023-11-10T08:32:42Z,`mage test:updategolden` command should update golden files for integration tests.,0,0.9950030446052551
1812363760,5439,juan131,2023-11-15T11:36:16Z,i'm still finding issues with integration tests and recreating golden images (`mage test:updategolden` threw some unauthorized errors). could you help me with this ?,0,0.8271592259407043
1813802621,5439,DmitriyLewen,2023-11-16T05:15:46Z,"hello i have fixed containerd tests (you may be using macos or a non-amd64 processor. in this case, we are skipping containerd tests - [a link] [a link] about clientserver tests: you need to update `rpc` package - [a link] looks like your changes don't work in client-server mode.",0,0.9868292212486267
1813977725,5439,juan131,2023-11-16T08:18:06Z,"awesome! thanks , as you mentioned i'm using a m1 mac and that makes total sense",1,0.9973767995834351
1814394912,5439,juan131,2023-11-16T13:01:22Z,i think we're ready to go,1,0.5539210438728333
1815729151,5439,DmitriyLewen,2023-11-17T04:25:20Z,"i left some comments. also looks like we don't need to build purl for packages for sbom formats (e.g. for cyclonedx - [a link] now. we can simply use `pkgidentifier`. correct me, if i missed something.",0,0.9834590554237366
1820487209,5439,DmitriyLewen,2023-11-21T08:54:31Z,integration tests related to sbom do not work. can you take a look?,0,0.9873294830322266
1833283284,5439,juan131,2023-11-30T08:08:14Z,friendly reminder,0,0.9383780360221863
1855338517,5439,juan131,2023-12-14T07:45:37Z,"thanks for implementing the missing changes ! i think with this the pr is ready, am i right?",1,0.9904922842979431
1855588094,5439,DmitriyLewen,2023-12-14T10:30:48Z,this is a big pr and i realized that i’m already confusing myself :grinning_face_with_smiling_eyes: i think the pr is ready. but perhaps this code requires refactoring. i want to double check this with a clear head. i'll do it tomorrow or monday.,1,0.9146432876586914
1862224776,5439,DmitriyLewen,2023-12-19T07:00:53Z,"hello pr looks good. we merged [a link] can you merge `main` branch into this pr and update goldenfiles, please?",1,0.9782617092132568
1862280098,5439,juan131,2023-12-19T07:55:31Z,thanks !! pr was updated,1,0.9960067868232727
1862357498,5439,DmitriyLewen,2023-12-19T08:53:53Z,there is conflict. i'm also confused - github marked go.mod and go.sum files as modified - [a link],0,0.5363457202911377
1862369561,5439,juan131,2023-12-19T09:02:13Z,conflict solved,0,0.7276654839515686
1862377773,5439,knqyf263,2023-12-19T09:07:44Z,i'm slowly starting to work this week and will review this pr shortly.,0,0.9634708166122437
1873724652,5439,juan131,2024-01-02T08:21:24Z,awesome! thanks so much,1,0.9966572523117065
2412031640,7732,itaysk,2024-10-14T19:12:43Z,"the release note says: ""databases are downloaded in priority order until one is successful"". does this mean that trivy will keep cycling through list ""until one is successful""? or if it reaches the end it will error out",0,0.9944064617156982
2424758880,7732,itaysk,2024-10-20T09:25:16Z,"i wanted to incorporate the rate limiting mitigation steps post into the documentation, but after re-reading the docs i see that there's a growing overlap between the ""advanced netwrok scenatios"" (aka air-gap) doc, and the ""database cofiguration"" doc. the way i thought about it is that the configuration document only describes the flags avaialble and technical usage, and the air gap doc talks more about the scenario and provides recommendations. does this make sense to you? if so, i'll need to refactor both documents accordingly",0,0.9628762602806091
2444773709,7732,itaysk,2024-10-29T16:26:50Z,"i ended up reorganizing the configuration/db doc and the air-gapped doc, such that the db doc now documents everything related to trivy's databases, including purpose, requirements, and configuration options, and the air-gapped explains how to setup trivy in a network constraint environment. i also incorporated parts from the yet-to-be-published db throttling announcement into the relevant documents.",0,0.9805096387863159
2449655307,7732,itaysk,2024-10-31T11:44:52Z,"i wasn't sure what would be left in the airgap doc if we move most of the content to a shared page. also it's currently called ""air-gapped environments and self-hosting"", so i moved the media types table based there.",0,0.9879621863365173
2451229216,7732,knqyf263,2024-11-01T03:33:56Z,"the page on the air-gapped environment originally showed how to download and populate databases manually. self-hosting is not directly related to the air-gapped environment, so we can just link to it from the air-gapped environment page. [code block] [code block]",0,0.9951157569885254
2457594847,7732,itaysk,2024-11-05T16:10:03Z,"i've restructured as follows: 1. configuration/db - basic information about trivy's main dbs: vulns, java, checks. no specific info on network stuff 2. network connectivity - all the information about trivy's verious network connectivity requirements and mitigation steps (including air-gap doc) 3. self-hosting - how to host the dbs and vex hub locally (may be improved in a future pr)",0,0.9756921529769897
2457601211,7732,itaysk,2024-11-05T16:12:40Z,"actually, now that i'm reading your comment, i see you suggested a slightly different arrangement. after diving into editing i got drifted into another path, but your's make sense to me too. i'll let you review the current proposal and if we want i don't mind doing another interation that is exactly like you specified.",0,0.9128857851028442
2488338518,7732,itaysk,2024-11-20T11:32:31Z,thanks for your review !,1,0.8824763298034668
708964102,679,rahul2393,2020-10-15T07:40:56Z,done,0,0.8682363629341125
708966534,679,knqyf263,2020-10-15T07:45:45Z,the linter test seems to be failing.,0,0.5883064866065979
708970849,679,rahul2393,2020-10-15T07:54:18Z,"as i said it will fail, but once merged it will succeed [a link]",0,0.9920672178268433
708974841,679,rahul2393,2020-10-15T08:01:31Z,let me know what are next action items now,0,0.9801443815231323
709069972,679,knqyf263,2020-10-15T10:04:47Z,could you clarify it? i don't get your point yet.,0,0.9195445775985718
709081454,679,rahul2393,2020-10-15T10:13:13Z,"see the last commit linters passed here [a link] so once i revert it, linters will fail but once merged it will pass",0,0.9937508702278137
709083302,679,knqyf263,2020-10-15T10:14:40Z,"no, i meant why it needs to be rahul2393.",0,0.98883455991745
709093223,679,rahul2393,2020-10-15T10:19:03Z,maybe because the workflow run my forked repo,0,0.9788058400154114
709099567,679,knqyf263,2020-10-15T10:21:40Z,"i also thought so, but i didn't find the clue. and if so, it means pr always fails the linter test.",0,0.9814666509628296
709102945,679,rahul2393,2020-10-15T10:22:57Z,removed that config now i think its good.,1,0.7248912453651428
709112298,679,knqyf263,2020-10-15T10:26:38Z,"we should find out what effect the option has and make sure it's okay to remove it. we have to avoid ""we don't know why it fails, but it looks good after removing it"" as much as possible.",0,0.9848104119300842
709135290,679,rahul2393,2020-10-15T10:37:23Z,this is to grouping the import in separate lines and disabling local prefixes will not cause issue. [a link],0,0.9952952265739441
709378734,679,rahul2393,2020-10-15T14:50:48Z,"check now, added back the local-prefixes goimport and linter issues fixed",0,0.9846287965774536
711141268,679,knqyf263,2020-10-18T09:29:32Z,"hmm. please allow me to check that my understanding is correct or not. what you said as follows is not correct, right? even after it is merged, the grouping still violates the policy, so the test will fail. [a link] also, can we specify `github.com/aquasecurity`, not `github.com/aquasecurity/trivy`? the repositories under `github.com/aquasecurity` are also developed by us, so we can call it local.",0,0.9397609829902649
711867528,679,rahul2393,2020-10-19T08:48:46Z,"done, make sense to add ""github.com/aquasecurity"" as local prefix.",0,0.9932014346122742
711872591,679,knqyf263,2020-10-19T08:53:31Z,what about the first question? is my understanding correct? i'd like to figure out what was wrong.,0,0.949069082736969
711875620,679,rahul2393,2020-10-19T08:56:22Z,"yes, i was wrong before, if its merged now it will work fine because in all the files the grouping is fine, e.g 1) go internal packages 2) third party packages 3) acquasecurity libs all 3 separated by single space, earlier i was wrong because i put forked local prefix although it was passing it was wrong because it was considering ""github.com/rahul2393"" as local prefix",0,0.979164183139801
711884026,679,knqyf263,2020-10-19T09:04:26Z,it makes sense. thanks! i'll take a look at last.,1,0.9943673014640808
712626854,679,rahul2393,2020-10-20T06:32:59Z,i tried fixing all these issues,-1,0.6259461045265198
712809652,679,knqyf263,2020-10-20T12:20:39Z,thanks.,0,0.5270382761955261
2132845075,6781,nikpivkin,2024-05-27T07:41:19Z,left a little comment. lgtm,0,0.9709539413452148
2133701956,6781,simar7,2024-05-27T15:30:37Z,is the prefix for the pr `backport-to-v0.51` or `v0.51` as the example shows?,0,0.9945521950721741
2133727079,6781,knqyf263,2024-05-27T15:46:10Z,"the prefix `backport-to-` is needed for the label. the branch name convention can be discussed. `backport-to-v0.51`, `backport-to-release-v0.51` or `backport-to-release/v0.51`. is there any place `v0.51` is used as an example?",0,0.9952621459960938
2133776527,6781,simar7,2024-05-27T16:06:32Z,![a link] i assume you're talking about the pr title? [a link],0,0.6933708190917969
2133857663,6781,knqyf263,2024-05-27T17:22:32Z,`backport-to-` is a label. `[a link]. but the title is no big deal. the label is the main topic here.,0,0.9577072858810425
2133862717,6781,simar7,2024-05-27T17:28:18Z,ok i understand now. i didn't see the label on that pr either so was confused. ![a link] either way the proposal looks good to me.,1,0.993174135684967
2133882834,6781,knqyf263,2024-05-27T17:51:01Z,"i now see why you're confused. prs that you want to backport are labeled, while auto-generated backported prs are not labeled. [a link]",0,0.9622281789779663
2147054588,6781,DmitriyLewen,2024-06-04T09:30:41Z,one more thing - can we automatically delete the `backport/release/ /pr- ` branches after merge backport pr (e.g. [a link],0,0.9940415024757385
2147200855,6781,knqyf263,2024-06-04T10:37:28Z,what if enabling this feature? [a link] ![a link],0,0.8003039956092834
2148789299,6781,DmitriyLewen,2024-06-05T03:33:55Z,it works good :+1:,1,0.9964717626571655
2149450734,6781,knqyf263,2024-06-05T10:29:41Z,"i wrote a small script. please take a look. [a link] it force-commits conflicts, but the pr shows a warning message about it. [a link] you can see [a link] and learn how to use it. to be honest, i didn't want to create a label for each release. i switched from a label to a comment to trigger the backport. if it looks good, i'll update the document.",1,0.8084319233894348
1828568467,5635,Octogonapus,2023-11-27T20:42:02Z,yes i would like to do this. can you help me by pointing out where there is an example of how to do this? i looked around the code for a while but i can't figure out how to export an sbom in code (except of course by invoking the `trivy` command).,0,0.928644597530365
1829038075,5635,DmitriyLewen,2023-11-28T04:06:12Z,take a look on `marshal_test.go` and `unmarshal_test.go` files: cyclonedx - [a link] spdx - [a link] integration tests for sbom - [a link],0,0.9933557510375977
1830313074,5635,Octogonapus,2023-11-28T17:06:57Z,"i pushed an spdx test with julia, though it currently does not pass because the spdx marshaller is doing some sort of deduplication based on the package name. i.e. if i changed one of the `b` packages to `c`, then the test could pass. do you know what is causing that?",0,0.9905952215194702
1831300486,5635,DmitriyLewen,2023-11-29T06:34:04Z,do you mean that the packages are in random order?,0,0.9921450018882751
1831985661,5635,Octogonapus,2023-11-29T14:19:47Z,"no, i mean that in the [a link], there are two packages named `b`, one of which (the last one) gets entirely removed during marshaling. the final sbom contains 4 package entries instead of 5, and 4 relationships instead of 5.",0,0.9925646781921387
1835496477,5635,DmitriyLewen,2023-12-01T05:36:52Z,"now i understand you. this happens because we are overwriting `hasher` function for the spdx test: [a link] some packages (like `go binary` packages) don't have `id`, so use that instead of `name` here: [a link] perphaps we can just add `indirect` field. wdyt?",0,0.973734974861145
1836271470,5635,Octogonapus,2023-12-01T15:04:18Z,"thanks, good idea, that worked.",1,0.9919314980506897
1836384364,5635,Octogonapus,2023-12-01T16:16:03Z,"i pushed a cyclonedx test as well. there are a few problems with it that will require changing its marshaller: 1) there is a problem with the cyclonedx dependencies format. only package urls are used, so in the case of a shadowed dep, you don't know which `b` package is being referenced since there are two `pkg:julia/b.9.0`. are we required to use purls or can we use another format? spdx uses an arbitrary hash here and that works well. 2) i noticed this comment: [a link] indeed this is the case as you can see in my (failing) cyclonedx test. can this functionality be changed, or will that not conform to the cyclonedx specification? if we can't change it, julia users should simply not use cyclonedx. 3) (applicable to spdx as well) i have a concern about the hasher used in production, given that we use a custom hasher in tests. should we update the default hasher rather than providing a custom one in our tests? if not, how do we know a proper hasher implementation (i.e. one which does not discard shadowed packages) will be used in production? i guess if we really needed to, we could also change the julia purl spec as [a link] has not been accepted yet. the purls could become `pkg:uuid` e.g. `pkg:edca9bc6-334e-11e9-3554-9595dbb4349c.9.0`.",0,0.9816464781761169
1837808312,5635,DmitriyLewen,2023-12-04T04:08:58Z,"this is a strange case. why does julia create duplicate dependencies? why can't we use existing `b` for `a`? about purl and bomref - i think we can use next logic: - create purl as you offered - use pkgid (id from julia file) for bomref what if we update bomref logic? if we use pkgid, we will not get a conflict, because bomref will be unique for each julia library. i don't think it's convenient. you need to read the lock file to find out the dependency name. but we can use `tag_id` for uuid (as for [a link] wdyt? if i remember correctly, we added this because spdx uses different hashes for each run(take a look this test - [a link]",-1,0.9079806208610535
1843676898,5635,Octogonapus,2023-12-06T20:55:51Z,"why can't we use existing b for a? julia allows you to add two dependencies with the same name but different uuids. this is an edge case, but given that it is allowed, i think it is important to test. your suggestions for the purl sounds good to me. after reviewing the spec, i can simply add a qualifier for the `uuid`. i will work on adding this to the spec and to [a link]",1,0.7155448198318481
1843762023,5635,Octogonapus,2023-12-06T22:03:21Z,"i added two integration tests for julia sboms (spdx and cyclonedx). i can't manage to run the tests, though: [code block] or [code block] so the tests might be wrong. if admin could trigger ci, that would be helpful so i can fix the tests.",0,0.9596761465072632
1844677084,5635,DmitriyLewen,2023-12-07T06:11:27Z,you need to run `mage test:integration` from the root directory of the trivy repository: [code block] let us know about this work. it may make sense to wait for these changes before merging this pr.,0,0.9953873753547668
1845681093,5635,Octogonapus,2023-12-07T16:44:20Z,that is what i did. i've updated the spec pr. luckily there are no changes required in `packageurl-go`.,0,0.9581326842308044
1846504703,5635,DmitriyLewen,2023-12-08T03:43:46Z,hm.. this is strange. how did you install `mage`? also you can copy command from mage file (e.g. [a link] and use it in bash. anyway i ran tests in ci/cd.,-1,0.8357419967651367
1847755843,5635,Octogonapus,2023-12-08T19:44:49Z,"i reinstalled mage from source and it is working now :shrug: i fixed the integration tests. everything is looking good to me, now that the purl includes the uuid.",1,0.9895957112312317
1853382394,5635,DmitriyLewen,2023-12-13T07:15:47Z,"can you fix linter errors, please?",0,0.9898762106895447
1854051449,5635,Octogonapus,2023-12-13T14:46:07Z,done,0,0.8682363629341125
1857242430,5635,DmitriyLewen,2023-12-15T04:07:16Z,hello test failed. there seems to be a problem with the sorting. can you take a look?,0,0.9084739685058594
1858192052,5635,Octogonapus,2023-12-15T16:57:48Z,yes there was a sorting issue. we need to also consider the package id when there are two shadowed packages.,0,0.9877730011940002
1859698085,5635,DmitriyLewen,2023-12-18T07:37:21Z,got it! thanks! i think we can compare pkgid first (as in go-dep-parser - [a link],1,0.9963886737823486
1859723350,5635,DmitriyLewen,2023-12-18T07:59:59Z,"hm... this change breaks any other tests. okay, i [a link] last changes. if necessary, we will change the sorting order in another pr.",0,0.9610027074813843
1932383803,5635,ericphanson,2024-02-07T16:10:53Z,"i built trivy from this pr and tried running it locally. it seemed to work well on filesystems, but panic'd when i ran it on a docker image: [code block] i am using an m1 mac, built trivy natively, but the image was built under rosetta, so maybe that's the issue?",-1,0.6143299341201782
1933342837,5635,DmitriyLewen,2024-02-08T04:24:06Z,hello can you share a test image? the problem seems to be related to the parsing of the julia toml file.,0,0.9916661381721497
1933708693,5635,ericphanson,2024-02-08T09:49:46Z,"sure, i can reproduce by creating a dockerfile with just: [code block] then running `mwe.sh` which contains: [code block] gives me [code block] we can also look at the tomls: [code block] and [code block] (now i don't think it's a rosetta thing, since i built and ran this both on `arm64`)",0,0.9894425868988037
1934790994,5635,Octogonapus,2024-02-08T19:20:24Z,"i copied your given project and manifest files into a test case, and it is correctly parsed into this object: [code block] so this pr looks okay from that perspective.",0,0.934095561504364
1934969625,5635,ericphanson,2024-02-08T21:34:59Z,"i do think there is some issue here, because if i install release trivy (`brew install trivy`) and change my shell script invoke that one, then there's no panic and it produces a result.",0,0.9338156580924988
1935341046,5635,DmitriyLewen,2024-02-09T05:08:49Z,i found broken file: [code block] can you take a look?,0,0.9842566847801208
1936307142,5635,Octogonapus,2024-02-09T17:23:24Z,will be fixed by [a link],0,0.9958174824714661
2103821989,5635,Octogonapus,2024-05-10T04:06:11Z,i'm still trying to keep this pr up to date... though it can be hard with how many refactors happen on main,0,0.8813287615776062
1156868203,2333,CLAassistant,2022-06-15T19:55:01Z,"[a link] thank you for your submission! we really appreciate it. like many open source projects, we ask that you all sign our [a link] before we can accept your contribution. **2** out of **3** committers have signed the cla. :white_check_mark: anaisurlichs :white_check_mark: knqyf263 :x: anais urlichs **anais urlichs** seems not to be a github user. you need a github account to be able to sign the cla. if you have already a github account, please [a link]. you have signed the cla already but the status is still pending? let us [a link] it.",1,0.9951465725898743
1173595317,2333,AnaisUrlichs,2022-07-04T09:41:02Z,could you please check the pr again?,0,0.9936004877090454
1195580484,2333,AnaisUrlichs,2022-07-26T14:47:00Z,could you please review and merge the docs with the next release or similar?,0,0.9939656853675842
1195702891,2333,knqyf263,2022-07-26T16:24:38Z,i don't have a strong opinion. i'm ok if itay approves it. one thing to note is that we added some updates on our doc such as [a link]. we need to make sure all the changes are reflected to this pr.,0,0.8538087606430054
1196392906,2333,AnaisUrlichs,2022-07-27T08:01:49Z,i've merged the main branch into this one in one of my last commits,0,0.9920028448104858
1203888458,2333,AnaisUrlichs,2022-08-03T12:32:10Z,just merged main into it,0,0.9927821159362793
1203964991,2333,knqyf263,2022-08-03T13:39:36Z,thanks. would you review this pr?,1,0.9123681783676147
1214380772,2333,AnaisUrlichs,2022-08-14T13:41:53Z,i made several changes based on your comments - removed the kubernetes tutorial from the tutorials section and added it to the community tutorials - made it clearer what community tutorials are and where they go in the docs - clarified what cks stands for with a link - merged in latest changes from main,0,0.955951988697052
1214904119,2333,itaysk,2022-08-15T11:22:21Z,consider adding tekton tutorial: [a link],0,0.9929817914962769
1236797164,2333,AnaisUrlichs,2022-09-05T10:03:57Z,could you please have another look :upside-down_face:,1,0.9811373949050903
1245293681,2333,knqyf263,2022-09-13T11:44:15Z,would you resolve conflicts and merge the main branch? then i hope we can merge this pr:crossed_fingers:,0,0.943827748298645
1246552782,2333,AnaisUrlichs,2022-09-14T10:19:35Z,merged main and resolved conflicts,0,0.9838099479675293
1247636089,2333,knqyf263,2022-09-15T06:24:58Z,"i saw several rendering errors and fixed them. also, i added some small changes.",0,0.9902603030204773
1247694265,2333,knqyf263,2022-09-15T07:30:42Z,do you have two accounts? looks like one of them has not signed cla yet. [a link],0,0.9946862459182739
2123825738,6234,simar7,2024-05-22T04:04:49Z,"i updated the pr with some more changes around reference the checks repo, if you are done with pushing updates to it, i think we can merge this.",0,0.9930104613304138
2538605709,8080,nikpivkin,2024-12-12T11:19:52Z,"many package managers are now moving towards [a link] support, which introduces the concept of dependency groups, and uv is no exception. i have now implemented skipping all groups except from the [a link] field, as groups can include dependencies for testing, linting or building documentation. here's what it might look like: [code block] the uv documentation mentions dev dependencies separately from dependency groups, but dev dependencies just belong to a `dev` group. it also says: is it worth skipping the dev group exclusively? btw, i did some tests with poetry (1.8.5). i added a dev dependency `poetry add pytest --dev` which added to the dev group: [code block] but trivy didn't skip it because now the package in the lockfile doesn't contain the `category` field as before, based on which trivy determines the dev dependencies. this is unusual because the lock version remains unchanged and matches the one used in our tests: `lock-version = '2.0'`. [code block]",0,0.9185099601745605
2541112750,8080,nikpivkin,2024-12-13T10:27:16Z,created [a link],0,0.9951801300048828
2544685915,8080,nikpivkin,2024-12-16T06:08:13Z,the `dev` group is already skipped. i wanted to discuss what to do with other groups such as `test` or `docs` that inherently contain dev dependencies?,0,0.9943812489509583
2545137944,8080,DmitriyLewen,2024-12-16T10:03:40Z,"does the `dependencies` field contain these dependencies? if so, is there a `marker` for them",0,0.9943095445632935
2545148187,8080,nikpivkin,2024-12-16T10:07:59Z,`dependencies` does not contain these dependencies. here's an example: [code block],0,0.9949488639831543
2545185981,8080,DmitriyLewen,2024-12-16T10:24:48Z,"iiuc your logic skips these (doc, test, development etc) dependencies . i think we can leave this logic and wait for feedback from users and then think about it if users need these dependencies.",0,0.9801492094993591
2551920969,8080,knqyf263,2024-12-18T17:41:46Z,"is this about `pyproject.toml`, not `uv.lock`? i didn't find the code parsing `pyproject.toml` in this pr. what am i missing? i'm sorry i was not following the discussion.",-1,0.990041196346283
2552818190,8080,nikpivkin,2024-12-19T05:26:47Z,"this is about `uv.lock`. it contains information about all dependencies and groups of the root package. example: [code block] for `uv` we only need to parse the lockfile, since it contains all the information we need.",0,0.9937955141067505
2552827646,8080,knqyf263,2024-12-19T05:36:04Z,isn't `dependency-groups` you mentioned above about `pyproject.toml`? [a link] does it mean `dependency-groups` are copied into `uv.lock`?,0,0.9950124621391296
2552831464,8080,nikpivkin,2024-12-19T05:39:39Z,"that's right, it's the same dependency groups",0,0.993195652961731
2552845738,8080,knqyf263,2024-12-19T05:53:37Z,"thanks for clarifying. is it possible to identify the dependency graph for development dependencies? we can do that in another pr, though. [a link]",1,0.9590582251548767
2552850781,8080,nikpivkin,2024-12-19T05:56:29Z,"yes, i've already started working on this so we can implement support in this pr.",0,0.9915511608123779
2552854505,8080,knqyf263,2024-12-19T05:59:18Z,it's better to keep the pr small. please let me merge this one.,0,0.9920668601989746
2552856457,8080,nikpivkin,2024-12-19T06:01:01Z,ok,0,0.9233372807502747
2561809380,8177,knqyf263,2024-12-25T10:16:15Z,"before further development, i'd like to hear your thoughts.",0,0.9754858613014221
2562233897,8177,DmitriyLewen,2024-12-26T07:06:30Z,"proposal: address this enhancement in a separate pr to keep the current changes focused i agree with you. i think we need to discuss this. initially (i may be wrong) trivy was crippled by aggregating individual packages to avoid having too many tables in a report. after adding summary table, we can consider removing the logic for aggregating packages entirely. this will simplify the code more and avoid difficulties when converting reports between formats. this pr maintains the current separation to keep the implementation straightforward it seems that having multiple types for a single file is rare, so i suggest using this logic and waiting for feedback from users. i prefer this way. i also have one idea - some users don't need to see vulnerability/misconfiguration numbers (cve etc). so we can hide other tables by default and show them only when using a new flag (`--show-report-tables` or something like that). or vice versa hide them by flag if users only need summary numbers. but i think we need to ask users about it. ____ as a future update: - what if we check the enabled scanners and show only the required columns? eg by default the summary table will only include the vulnerability and secret columns. or for `misconfig` mode only the `misconfigutation` column.",0,0.8221772909164429
2562395978,8177,nikpivkin,2024-12-26T10:07:53Z,"i like the idea, the summary table looks good. should the results be sorted by file name or scan type? i noticed that terraform scan results contain directories that we should get rid of.",1,0.9868447780609131
2562405419,8177,knqyf263,2024-12-26T10:17:32Z,"exactly. it will simplify our logic. however, it will probably break something. we should carefully announce it. that's why i didn't want to add the change into this pr. i already implemented it in this pr unless i'm making a mistake. in the screenshot, `vulnerabilities`, `misconfigurations` and `secrets` are shown because `--scanners vuln,misconfig,secret` is specified.",0,0.9620698094367981
2562408011,8177,knqyf263,2024-12-26T10:20:00Z,"the current summary table is ordered by scanners, vulnerabilities -> misconfigurations -> secrets -> licenses. do you want to sort by sub-scanners, such as terraform? yes, i actually saw `.` was detected as `terraform-plan`.",0,0.9934754967689514
2562416716,8177,DmitriyLewen,2024-12-26T10:29:31Z,great!,1,0.9950044751167297
2565545275,8177,itaysk,2024-12-30T14:21:15Z,"looks great. this is very similar to the k8s summary report. do you think we should consider reusing the experience, code or flags? (either way, new, existing or something in between) ![a link]",1,0.9930714964866638
2568409768,8177,simar7,2025-01-02T21:35:37Z,looks nice. what's the difference between a `-` and a `0`? i think i understand it as `not evaluated` and `evaluated but nothing found` respectively but i think we should make it explicit. i think we should change k8s summary output to be more simpler rather than the other way around. to me the k8s summary output is a bit too much especially with so many numbers that it isn't very helpful.,1,0.7658159732818604
2572403871,8177,knqyf263,2025-01-06T06:41:54Z,"i actually considered reusing the k8s summary table, but ultimately decided to keep them separate for several reasons: first, as pointed out, the k8s summary table contains much information. this isn't necessarily a negative aspect - it's designed this way because k8s doesn't display details in the summary table by default (requires `--report all` flag for detailed view). however, the approach is different for image and filesystem scans: we show a simple summary table first, followed by detailed result tables. therefore, i believe the summary table should be kept as simple as possible. this represents a slightly different purpose from the k8s use case. second, since we plan to make a separate plugin for the k8s cluster scan similar to [a link], i wanted to avoid core dependencies on k8s. if we were to share code, having the dependency direction flow from k8s to core would be preferable, not the other way around. however, given the different purposes mentioned above, whether we should standardize these tables at all requires further discussion. yes, that's correct. i made this distinction because we frequently receive user feedback asking to clarify whether something wasn't scanned at all or was scanned but returned zero findings. i'll add a note beneath the table to clarify this distinction.",0,0.8982952237129211
2603670843,8177,DmitriyLewen,2025-01-21T05:10:55Z,i have 1 more question: for case when report doesn't include results (e.g. scanned only wrong file). do we need to show empty table? [code block] or we can hide table and write info/warn log or something else.,0,0.9897380471229553
2620537253,8177,knqyf263,2025-01-29T03:11:14Z,showing only the header is probably unclear for users. i'd opt for log messages.,0,0.9400800466537476
2621317849,8177,DmitriyLewen,2025-01-29T11:00:21Z,added log in [a link] + [a link],0,0.9948244094848633
2635837224,8177,DmitriyLewen,2025-02-05T06:51:54Z,i like that. added in [a link],1,0.9405070543289185
2696705901,8177,knqyf263,2025-03-04T09:00:31Z,the rest looks good to me. feel free to merge this pr whenever you're ready (i cannot approve my pr).,1,0.9763123989105225
515108628,99,pascalandy,2019-07-25T16:15:45Z,i have this nasty warning (it was there before this pr) `fatal: not a git repository (or any of the parent directories): .git`. i think we should fix this. [code block],-1,0.9839649200439453
515315032,99,knqyf263,2019-07-26T05:31:49Z,thank you. i have one question. why does it need compress stage? is it impossible to compress the binary in the builder stage?,1,0.9638162851333618
515467213,99,pascalandy,2019-07-26T14:05:35Z,"**edit** (2019-07-27_22h21): also, with the new `docker buildx` feature in docker v19.03, stage are built-in parallel which encourages separations of concern at every stage. it is possible. the advantage of having a dedicated stage: - makes it easy to debug stuff - makes it easy to re-use to other projets - when developing, it's easy to bypass the compress stage",0,0.9772931933403015
515703923,99,pascalandy,2019-07-27T18:23:15Z,made two updates. let me know.,0,0.9894653558731079
516186483,99,pascalandy,2019-07-29T22:29:31Z,anything else?,0,0.9913861751556396
523096346,99,CLAassistant,2019-08-20T16:39:48Z,[a link] all committers have signed the cla.,0,0.9951004385948181
571213138,99,colin-nolan,2020-01-06T16:43:43Z,"it would be great to see this merged! are you able to sign the cla so this can move forwards (unfortunately, it looks like a requirement: [a link]",1,0.995195209980011
571345079,99,pascalandy,2020-01-06T22:32:54Z,"oh, didn't saw it. just signed it -nolan :)",1,0.9928011894226074
572816878,99,colin-nolan,2020-01-10T00:19:50Z,"hi , . this is a great piece of work by , which is really useful for anyone wishing to use trivy inside of docker. please may you give an indication as to what your appetite for getting this merged is?",1,0.9954618811607361
579197297,99,tnir,2020-01-28T11:15:19Z,-nolan what is the main purpose of this pr? the [a link] looks far from this change. how can we reduce trivy docker image with upx? [aquasec/trivy:0.4.3 ]([a link] is 22.22 mb.,0,0.9627243280410767
579256362,99,colin-nolan,2020-01-28T13:54:43Z,"the current dockerfile expects the `trivy` executable to be build outside of docker and to then be present in the build context: [a link] the main purpose of this pr is to incorporate the building of this executable into the dockerfile. this allows people to use the docker image without needing to know how to compile trivy (and to have the environment necessary to do so). instead, a standard image build process can be used to get access to the software in a container: [code block] it could also help the project developers, for example, by allowing the use of dockerhub's automated builds: [a link] i can't comment on the upx business - i don't know about this practice and am not personally concerned with the image size. i also don't know about the labeling but it seems like good practice.",0,0.9888401627540588
579258323,99,knqyf263,2020-01-28T13:59:17Z,"-nolan now, we're using `goreleaser` to build the image. it supports labels and multiple registries. [a link] `goreleaser` builds the binary automatically, so we don't have to care about it.",0,0.9632074236869812
579268094,99,pascalandy,2020-01-28T14:21:20Z,"hello folks. i'm still listening! just let me know who is in charge an i'll be glad to answer questions :) overall, [a link] is right. also, this pr makes the image smaller by using multi-stage builds + upx (which compress the binary).",1,0.9969977140426636
579277002,99,colin-nolan,2020-01-28T14:40:22Z,"the use-case that brought me here originally was that i wanted to use trivy on a machine with a non-amd64 architecture (as far as i'm aware, such images are not available through dockerhub). at this point, in the ideal world, i would have simply built one: [code block] however, given this is not an all too common use-case, i was anticipating having to patch the goarch argument in the dockerfile. as we've discussed though, the dockerfile doesn't take responsibility for building trivy (this is perhaps a little non-standard), which unfortunately means i then have to care about generating the binary. thanks to this pr, i didn't have to install things onto my target machine and work out what flags were need to compile the binary and then build the image. a different use-case is that, in a security conscious environment, one would want to know the provenance of a docker image before using it. hence a local build would be necessary too.",0,0.5504390597343445
714175205,99,pascalandy,2020-10-22T02:08:00Z,"the purpose is to build **trivy from source** (best practice) instead of copying the binary into the docker image. since the maintainers didn't follow up on this, i think this pr is dead.",0,0.9723868370056152
714201392,99,knqyf263,2020-10-22T03:41:45Z,"thanks for your contribution. we use `goreleaser` for the official image and `trivy` binary is built outside of the dockerfile. [a link] it means the `builder` image is not needed. if we apply `upx`, we need to follow the instruction as follows. [a link] also, labels are already applied here. [a link]",1,0.9538204669952393
714508361,99,pascalandy,2020-10-22T13:50:36Z,i guess i'll close the pr. thanks,1,0.9674435257911682
714582556,99,pascalandy,2020-10-22T15:42:48Z,i'll leave my dockerfile proposition here in case you change your mind: [code block],0,0.9952033758163452
603589679,433,simar7,2020-03-25T01:28:07Z,"hey the current integration tests seem to be failing because currently we don't add a type here [a link] would you happen to know how i can add a new field here [a link] and regen the protobuf files? when i try to run `make protoc` from the top level project directory, i get this: [code block]",0,0.9416455626487732
603828247,433,knqyf263,2020-03-25T13:07:45Z,"as for `protoc`, would you make sure there is `rpc/common/service.proto` in your local machine? [a link] it works in my environment. [code block]",0,0.9956668615341187
612057476,433,knqyf263,2020-04-10T14:38:41Z,"centos doesn't seem to work. would you try scanning `centos:7`? also, would you try scanning some images based on different oses? in addition, we need to insert `vendorseverity` into the database for testing somehow. maybe we have to provide a new way to build a database for testing. [a link]",0,0.9881794452667236
613141172,433,simar7,2020-04-13T23:12:14Z,does centos provide any vendor vulnerability information? currently [a link] doesn't have any such info. this is why in its case always nvd get used.,0,0.9941504597663879
613236575,433,simar7,2020-04-14T05:40:02Z,"i updated the test db. it now uses a full db. i think this tradeoff is reasonable to have for slightly more space to store the db here rather than maintain a handcrafted db every time we have to make a change. accordingly, i updated the tests files too: [a link]",0,0.9706889986991882
613708367,433,simar7,2020-04-14T22:15:57Z,i added support for centos to use rhel scores. [a link],0,0.9898897409439087
614627645,433,knqyf263,2020-04-16T12:40:56Z,"vulnerabilities usually increase, but not decrease without updating the package versions. so in this case, all vulnerabilities which were scored as critical based on nvd are not critical based on vendor now, are they? our image for testing is old, so there should be some critical vulnerabilities. i'd like to make sure there is really no critical vulnerability for red hat in the last few months. i'm worried that this version doesn't show any critical vulnerability for rhel/centos. or, it's ok if there is actually no critical one by chance.",-1,0.9562897086143494
614957151,433,simar7,2020-04-16T23:56:32Z,"so here are the critical vulnerabilities as detected on current master: [code block] you can check the current rhel database, they're both marked as `moderate`. [a link] and [a link]",0,0.9945411086082458
616083166,433,knqyf263,2020-04-19T09:16:07Z,"did you try that before merging the pr? you can see that there are no false positives by making sure the current results are correct, but we should check false negatives as well. i'd like to make sure a critical vulnerability is detected properly.",0,0.9944077730178833
616294072,433,mozillazg,2020-04-20T03:55:34Z,"sorry, but i have a question: if they are both marked as `moderate`, why they not be marked as `medium` instead of `critical` in trivy report (the `cvss v2 base score` of these cve at redhat are medium value: * [a link] (4.3) * [a link] (4.3) * [a link] (what `moderate` mean)",-1,0.9768038988113403
1507037798,4058,CLAassistant,2023-04-13T14:08:32Z,[a link] all committers have signed the cla.,0,0.9951004385948181
1510393460,4058,FrimIdan,2023-04-16T14:13:18Z,"hi , i needed to update tingo version to fetch reflect value.iszero support (exist only in 0.27.0) the test actions failed on [code block] i'm not familiar with the aque installer flow, can you please assist?",0,0.9807018637657166
1510948702,4058,knqyf263,2023-04-17T08:48:56Z,seems like we need to install binaryen on macos. [a link] i'm guessing it starts from the following commit in [a link]. i created a pr in aqua-registry. [a link],0,0.9870269894599915
1510954066,4058,FrimIdan,2023-04-17T08:52:48Z,"thanks for the help! other then that, does the pr looks good to you or did i missed something?",1,0.9929155111312866
1511100551,4058,FrimIdan,2023-04-17T10:35:46Z,i see [a link] was merged :party_popper: should i just add `- name: webassembly/binaryen` and update the regisrty version? [code block],0,0.9735429883003235
1511125563,4058,knqyf263,2023-04-17T10:57:14Z,i hope so :crossed_fingers:,1,0.9943820834159851
1511146564,4058,knqyf263,2023-04-17T11:11:43Z,hmm... it failed on windows...,0,0.9240538477897644
1511149692,4058,FrimIdan,2023-04-17T11:14:12Z,is there a way to maintain different `aqua.yaml` files for different os? i assume we only need `webassembly/binaryen` on mac :disappointed_face:,-1,0.989315390586853
1511154425,4058,knqyf263,2023-04-17T11:16:53Z,it's weird as we obviously install wasm-opt newer than 102.,-1,0.9905625581741333
1511162798,4058,FrimIdan,2023-04-17T11:23:49Z,maybe in [a link] under `pkgs/webassembly/binaryen/registry.yaml` the windows files are missing?,0,0.9873817563056946
1511172620,4058,suzuki-shunsuke,2023-04-17T11:32:42Z,i don't think so. i've confirmed wasm-opt installed by aqua works on windows. [a link],0,0.9857936501502991
1511191071,4058,suzuki-shunsuke,2023-04-17T11:47:11Z,:memo: [a link] [code block],0,0.9216852784156799
1511202860,4058,knqyf263,2023-04-17T11:57:11Z,"yeah, it should work. [a link]",0,0.8499934077262878
1511226148,4058,knqyf263,2023-04-17T12:12:35Z,"bash returns the version correctly, but powershell returns an error in my environment. [code block] i ran `wasm-opt` outside the directory where aqua.yaml is present. it might be a cause. [a link]",0,0.989754855632782
1511235570,4058,knqyf263,2023-04-17T12:19:33Z,"sorry for confusing you guys. i moved the `aqua.yaml` dir, and it worked even on powershell. [code block]",-1,0.9919478297233582
1511250055,4058,knqyf263,2023-04-17T12:30:45Z,"oh, are the installation messages written to stdout? [code block]",0,0.9944224953651428
1511253739,4058,knqyf263,2023-04-17T12:33:08Z,i suspect the messages break the version parsing. [a link],0,0.9705067276954651
1511258255,4058,suzuki-shunsuke,2023-04-17T12:36:21Z,i see. aqua uses [a link]. i'll take a look.,0,0.98812335729599
1511261169,4058,suzuki-shunsuke,2023-04-17T12:38:30Z,the workaround is to change the log level using the environment variable `aqua_log_level` to suppress the info log.,0,0.9938268065452576
1511262942,4058,knqyf263,2023-04-17T12:39:48Z,i think we can remove the `-l` option since log messages are useful for debugging. which do you recommend? [a link],0,0.9861589074134827
1511265188,4058,suzuki-shunsuke,2023-04-17T12:41:28Z,installing wasm-opt in advance would solve the issue. 1. run `wasm-opt` explicitly in advance [code block] 2. set aqua_opts [code block],0,0.9954238533973694
1511266480,4058,suzuki-shunsuke,2023-04-17T12:42:33Z,"yeah, i agree. i recommend removing `-l` option.",0,0.9630663990974426
1511268485,4058,knqyf263,2023-04-17T12:44:05Z,it's funny that [a link] addressed the error unintentionally :grinning_face_with_smiling_eyes:,1,0.9704431891441345
1511274846,4058,knqyf263,2023-04-17T12:48:12Z,"we would work around it, but i'd recommend writing log messages to stderr. it is surprising that `cmdname --help` changes the behavior.",0,0.9714674949645996
1511276103,4058,knqyf263,2023-04-17T12:49:07Z,i've started reviewing now!,0,0.8928521275520325
1511319384,4058,knqyf263,2023-04-17T13:12:53Z,passed! thanks for your help! -shunsuke [a link],1,0.9962517619132996
1511347209,4058,suzuki-shunsuke,2023-04-17T13:26:03Z,i've fixed the bug and released aqua v2.3.6. thank you for your help! [a link],1,0.9951595664024353
1512674639,4058,FrimIdan,2023-04-18T08:29:06Z,"can you please re-review, i hope i addressed all your comments.",0,0.9548982381820679
1514235470,4058,knqyf263,2023-04-19T07:08:10Z,you need to run `go mod tidy`.,0,0.9950405955314636
1514578893,4058,FrimIdan,2023-04-19T11:36:26Z,:person_facepalming: done,0,0.987220048904419
1516299697,4058,FrimIdan,2023-04-20T13:08:54Z,failed on [code block] :disappointed_face: not sure if/how it's related to my changes,-1,0.9942095279693604
1519119409,4058,FrimIdan,2023-04-23T17:46:36Z,done! thanks for reviewing.,1,0.9907771348953247
1519150887,4058,knqyf263,2023-04-23T20:36:12Z,thanks again for your great help!,1,0.9839913845062256
1521383931,4058,AnaisUrlichs,2023-04-25T08:26:55Z,"hi , we would like to make you our contributor of the month as part of our aqua stars program, could you please send me a dm on our slack? [a link] [a link]",1,0.9117385149002075
648091569,542,knqyf263,2020-06-23T11:39:57Z,"i think #346 is talking about prometheus metrics, not log messages.",0,0.980760931968689
648111599,542,yashvardhan-kukreja,2020-06-23T12:25:09Z,"ohh, i might have gotten confused. i have a few basic doubts with the issue which i have mentioned in the thread of the issue, please clarify them",-1,0.5182603597640991
648126617,542,knqyf263,2020-06-23T12:55:10Z,ok. let's wait for 's answer.,0,0.9884626269340515
651109678,542,yashvardhan-kukreja,2020-06-29T13:09:18Z,"hi , ! i added prometheus metrics endpoint support and if you go to `get /metrics`, you'd get the following output: **_\# help trivy gauge metrics associated with trivy - last db update, last db update attempt ... \# type trivy gauge trivy{action=""last_db_update""} 1.593432599e+09 trivy{action=""last_db_update_attempt""} 1.593432599e+09_** the timestamps, here, are being stored as unix timestamps (float64) because that's what the prometheus gauge expects. also, here, i used prometheus gauge for storing the values (timestamps) for these labels because the prometheus counters were restrictive and rough. i hope this seems good and if it does then, we can go on and implement the remaining three metrics suggested by .",1,0.9129754900932312
651124510,542,computeralex92,2020-06-29T13:34:59Z,looks great; i looking forward to use this metrics ;-),1,0.9968637228012085
655872819,542,yashvardhan-kukreja,2020-07-09T03:15:51Z,"hi , can u please review my pr",0,0.9888080954551697
658558372,542,CLAassistant,2020-07-15T05:44:05Z,"[a link] thank you for your submission! we really appreciate it. like many open source projects, we ask that you sign our [a link] before we can accept your contribution. you have signed the cla already but the status is still pending? let us [a link] it.",1,0.9939326643943787
662984591,542,yashvardhan-kukreja,2020-07-23T12:43:13Z,", i am done with rest of all the issues you mentioned above, so, as soon as the above quoted doubt gets clarified, i'll push all the new changes to this pr :smile:",1,0.984212338924408
666865252,542,simar7,2020-07-31T01:45:36Z,-kukreja can you try to rebase this on the latest master and resolve the git conflicts?,0,0.9923927783966064
668862819,542,simar7,2020-08-04T22:48:59Z,-kukreja i'm still seeing a diff that shouldn't be there in the dockerfile. see below: can you also try to run `go mod tidy` and re-commit the `go.mod` and `go.sum` files again if there are any changes?,0,0.9685359597206116
669727420,542,knqyf263,2020-08-06T06:21:01Z,"yes, i'll take a look, but do you know why codecov is failing?",0,0.9903368949890137
670728291,542,simar7,2020-08-07T21:56:03Z,i tried looking but i'm not sure. the failure doesn't make sense. maybe it's a bug: [a link] we shouldn't wait for that in this pr though. we can take a look it in a separate discussion.,0,0.6633928418159485
671398343,542,yashvardhan-kukreja,2020-08-10T14:43:27Z,", if the pr is at a merge-able point, should i go on squash all the above commits?",0,0.989489734172821
671762076,542,knqyf263,2020-08-11T06:46:57Z,"-kukreja basically, we merge pr with squash commits on github, so you don't have to do that. but we probably should do that this time in order to resolve the error from codecov.",0,0.9795815944671631
671763011,542,yashvardhan-kukreja,2020-08-11T06:49:28Z,"cool, makes sense. i ll squash them then :)",1,0.9932265877723694
672862139,542,yashvardhan-kukreja,2020-08-12T13:13:02Z,", , the codecov issue doesn't persist anymore, so i guess you can go on squash and merge the pr :grinning_face_with_smiling_eyes:",0,0.6170399188995361
673304007,542,knqyf263,2020-08-13T07:09:50Z,"-kukreja thanks. i'll review this pr. just a moment, please.",1,0.9125219583511353
694740458,542,yashvardhan-kukreja,2020-09-18T08:44:16Z,"went off the grid for a while, hence, the changes took a bit of time. sorry for that pause. - can u please review the changes",-1,0.9915280342102051
695076037,542,simar7,2020-09-18T20:41:09Z,hi -kukreja – is out this week. i'll take a look at your new changes in the meantime.,0,0.9853509664535522
695132623,542,yashvardhan-kukreja,2020-09-19T00:00:39Z,", no worries. and thanks for reviewing this meanwhile :) ps: i have applied the changes as suggested",1,0.9969874024391174
728685766,542,yashvardhan-kukreja,2020-11-17T04:56:28Z,", any heads up/updates regarding this? been a while :grinning_face_with_sweat:",1,0.9546540379524231
749547634,542,yashvardhan-kukreja,2020-12-22T13:46:15Z,"i applied all the suggested changes, rebased them with the main branch and all the tests are successfully running. please review the above pr.",0,0.7246532440185547
760512239,542,yashvardhan-kukreja,2021-01-14T22:20:08Z,ping,0,0.4991936683654785
803602582,542,krol3,2021-03-21T15:21:57Z,"-kukreja, could you review the conflicting files?",0,0.9873122572898865
808070285,542,yashvardhan-kukreja,2021-03-26T09:31:46Z,i have rebased this pr with the latest state main. sorry that it took some time. was a little swamped and the conflicts were pretty major with respect to the new state of main branch :p,-1,0.5566889047622681
808170970,542,yashvardhan-kukreja,2021-03-26T12:17:07Z,"also, i have added unit tests around the ""extended config"" structs as well for the sake of testing the prometheus metricsregistry setup as well",0,0.9947553873062134
812991737,542,yashvardhan-kukreja,2021-04-04T07:59:42Z,is this being reviewed ?,0,0.9933591485023499
814013399,542,krol3,2021-04-06T10:31:57Z,could you take a look on this pr?,0,0.9936182498931885
817258060,542,knqyf263,2021-04-11T06:34:07Z,"i'm sorry for the late reply. i'm busy on a new feature scanning config files now. after wrapping up it, i'll review it.",-1,0.9908328652381897
1303627109,542,jc16180,2022-11-04T14:20:45Z,is anyone working on this?,0,0.9926651120185852
1712833305,542,knqyf263,2023-09-10T14:44:19Z,"instead, we've added `/version` endpoint. [a link]",0,0.9957233667373657
714205275,709,knqyf263,2020-10-22T03:56:42Z,it looks fine so far. are you planning to support json and table as well in this pr? or will it be done in another pr?,1,0.5641818642616272
714818419,709,simar7,2020-10-22T23:34:28Z,"i was going to but then realized that adding to json means we will need to add it to everywhere (including client/server) in order to keep parity (recall the case with vendorvectors and cwe?). i think we need to rethink the integration tests here as they are enforcing this limitation (since we want to have common golden files). keeping feature parity across different modes is a good idea but the development shouldn't be limited by how tests are structured. thoughts? ~~i don't have a hard preference to do it with this pr or another one. which ever feels comfortable to you when it comes to reviewing it, is fine by me.~~ i think it's better to do json in a separate pr since it will be a big change (in terms of files changed). i will add it to the table output shortly.",0,0.6458980441093445
729884858,709,simar7,2020-11-18T18:53:48Z,"the new approach seems a bit over engineered to me. although i can see why we can add it to references, i’m not convinced avd info should be. it’s a first class citizen as it’s our own service. imo references are better left for things that are outside our realm. imho, the current model seems easy enough to understand. thoughts?",0,0.5590429306030273
729927222,709,knqyf263,2020-11-18T20:14:17Z,"there are three places to generate an avd link now. all other details are filled in `fillinfo`, but only avd link is generated in many places. i think it is not dryed and difficult to track where it is generated. for example, if we want to fix the avd link stuff for client/server mode, we probably first look into `fillinfo`, but it doesn't exist there. next, we'll check the server code because the server stores the vulnerability database and should have all the vulnerability information. but it is actually in `convert.go` on the client-side. imho, the logic regarding vulnerability detail should be in one place. however, i understand that avd is a first class citizen as you said. if you have any better ideas to aggregate scattered logic, it is worth considering.",0,0.9216362833976746
729983951,709,simar7,2020-11-18T22:01:28Z,"i still think when the time arises to make that avd link change, we should reconsider and refactor. without actually having that as a problem i think it's difficult to suggest any improvements. besides if the link was going to change we have this [a link] single place to update it.",0,0.92528235912323
730144502,709,knqyf263,2020-11-19T05:46:04Z,"hmm. i'd like to know why putting logic in multiple places is better rather than putting it in one place. it will be a problem later and will probably be put together in one place. it doesn't mean i disagree with you, but i'm just curious about the advantage of the current model. generating the link in multiple places does not seem to make the code easier to understand. like other data, it looks easier to process the link in the same place. if you still want to put avd links separate from other references, you can define `url` here, generate it in `fillinfo`, and use it as is without filtering. [a link] also, we can add another logic there to select the primary link for non cve-id. for example, if it starts with `rhsa-`, we can store the rhsa link like [a link] as the primary link. even if it is processed in the function, it is simpler to call the function once rather than three times in three places. i'm sorry i might be missing something. if i understand the benefit of the current model properly, i'll accept it.",0,0.8145751357078552
732311303,709,lizrice,2020-11-23T17:31:37Z,"at the moment there should be a page in avd for every known cve that trivy can report, and it's a simple conversion from the cve id to the avd url. i can imagine in future we might want to be able to link from vulnerabilities that have other (non-cve) identifiers, and maybe adding the avd link as an additional reference field in the database, but i don't think it's necessary in the short term - and i'd really like to see this feature released sooner rather than later. pragmatically, it seems reasonable to me to just do that as output formatting as part of the client. that way we can start getting user feedback on whether they find the avd useful, before we go even further down the road of building more and more different types of pages for it. wdyt ?",0,0.9222612380981445
732361471,709,knqyf263,2020-11-23T19:01:09Z,"i agree that we will support only the avd link at first. for now, all other vulnerability information including references is filled in a single place, but only the avd link is generated in the other three places for standalone, client/server, and template. it means we have to maintain those three types separately forever. i just suggested the avd link should be handled like other information. if we generate only the avd link in different three places from other information, it will make it harder to maintain and understand. so, i'd like to know why the current model is better in terms of concise source code. it might be difficult to understand the difference between them verbally. i should probably write a poc.",0,0.9281795024871826
734492389,709,simar7,2020-11-26T22:07:06Z,closing in favour of [a link],0,0.9916120767593384
1968118920,6217,CLAassistant,2024-02-28T03:13:29Z,[a link] all committers have signed the cla.,0,0.9951004385948181
2013956673,6217,knrc,2024-03-21T22:25:03Z,"i ran into another problem, it turns out the registry code (at least in 0.49.1) is broken. the three registries (google, azure and ecr) are invoked concurrently, which means their state gets overwritten each time while still being used. i have some fixes for that, i'll check with 0.50.0 and push up another version of this pr some time next week.",0,0.9399316310882568
2020606882,6217,knrc,2024-03-26T14:36:21Z,"i pushed up the changes so you can see the difference, i'm just about to test them on 0.50.0. i'll rebase the pr on the latest once i've validated it.",0,0.9917197227478027
2021456838,6217,knrc,2024-03-26T20:55:19Z,"i've tested and rebased the pr, it's ready again",0,0.9782010316848755
2022342942,6217,DmitriyLewen,2024-03-27T09:51:33Z,hello i'm a little confused trivy checks registries sequentially: [a link] which field is overwritten?,-1,0.6945995092391968
2022864266,6217,knrc,2024-03-27T14:07:37Z,"it does, within gettoken, however gettoken is called concurrently. line 37 calls `checkoptions`, which will create client resources in the singleton registry based on the domain. this client is then used later within `getcredentials`. since the singletons are being accessed concurrently the client is not guaranteed to be the one created within the previous call to `checkoptions` in the loop.",0,0.9941430687904358
2024459546,6217,DmitriyLewen,2024-03-28T05:56:59Z,"i think i understand your logic. but i don't see any place where we use `gettoken` function (or upper function) using goroutines. we also use 1 image. therefore, if we overwrite `ecrclient` -> it will be a new `ecrclient` but with the same settings. but i can missing something. will be great if you can show some example. anyway, i think these changes should be made in another pr. can you undo the last changes and create a new pr with those changes and the example in the new pr?",1,0.9246618151664734
2035241108,6217,knrc,2024-04-03T17:53:46Z,"the artifacts are scanned by different workers in parallel, see [a link]",0,0.9947138428688049
2063796520,6217,knrc,2024-04-18T12:52:10Z,"no worries, we all have our day jobs. :) sounds good, i'll take a look. i'm at open source summit this week, but will try to get to this as quickly as i can.",1,0.997223973274231
2063887356,6217,knrc,2024-04-18T13:36:17Z,"i rebased and updated the pr for your comment, can you take another look?",0,0.995057225227356
2065792022,6217,DmitriyLewen,2024-04-19T05:32:03Z,can you fix linter error?,0,0.9935686588287354
2067002093,6217,knrc,2024-04-19T17:31:55Z,"yes, i can add that to the list since i'm in those files anyway.",0,0.9923001527786255
2067038154,6217,knrc,2024-04-19T17:51:17Z,try now,0,0.9872614145278931
2181919511,6217,knqyf263,2024-06-21T03:16:23Z,thanks for the contribution. this pr needs to resolve conflicts now.,1,0.9292500615119934
2302255081,6217,knrc,2024-08-21T14:53:54Z,i'll take a look at this over the next few days,0,0.9229598641395569
2321373050,6217,knrc,2024-08-30T14:05:28Z,the integration tests appear to be hitting a limit [code block],0,0.9529157876968384
2321391038,6217,knrc,2024-08-30T14:11:25Z,the test does run successfully when executed locally,0,0.991199791431427
2323803312,6217,DmitriyLewen,2024-09-02T04:43:49Z,hello looks like it was bug in ci/cd. pr has been merged.,0,0.9856147170066833
987488657,1437,knqyf263,2021-12-07T01:39:00Z,note that we have to remove unused functions here. [a link],0,0.995201587677002
989880263,1437,afdesk,2021-12-09T14:02:17Z,there is a question about backward compatibility the `trivy` sarif templates. should we support it?,0,0.9920124411582947
995047238,1437,knqyf263,2021-12-15T18:19:18Z,we will keep sarif.tpl for a while and announce that users need to migrate `--template sarif.tpl` to `--format sarif`.,0,0.9931055903434753
997426862,1437,afdesk,2021-12-19T17:08:14Z,"ok, it means i have to restore several necessary functions for template.",0,0.9903102517127991
997434388,1437,knqyf263,2021-12-19T17:58:19Z,"or, we might be able to call the go sarif function actually when `sarif.tpl` is specified. and we will show a warning message for this deprecation. we can remove some functions and `sarif.tpl` then. any thought?",0,0.9877951145172119
1633955486,4652,nikpivkin,2023-07-13T10:11:03Z,"yarn has only 1 `node_modules/.yarn` folder in the root of the project, so all the dependencies of the workspaces are there.",0,0.9937911629676819
1633964276,4652,DmitriyLewen,2023-07-13T10:17:15Z,"ok, thanks for the clarification!",1,0.9500319361686707
1647223002,4652,DmitriyLewen,2023-07-24T05:15:49Z,"rebase this pr, please.",0,0.9819310903549194
2066287297,6524,CLAassistant,2024-04-19T10:29:03Z,"[a link] thank you for your submission! we really appreciate it. like many open source projects, we ask that you sign our [a link] before we can accept your contribution. **levente kovacs** seems not to be a github user. you need a github account to be able to sign the cla. if you have already a github account, please [a link]. you have signed the cla already but the status is still pending? let us [a link] it.",1,0.993748664855957
2066505891,6524,kovacs-levent,2024-04-19T12:47:52Z,"i signed the cla... not sure why it's not triggering as signed. on my forked branch, every test passed, so if you trigger the tests it should be good.",0,0.8016688823699951
2066598290,6524,kovacs-levent,2024-04-19T13:32:30Z,"hmm, while all tests are passing, i do not see the new binary results when i build the trivy from source and run the same experiment as in [a link] i'm not sure why that is the case. edit: guess i realized that i not only need to implement the parsing, but the analyzer logic as part of fanal. i'll try that.",0,0.9403507113456726
2067502527,6524,kovacs-levent,2024-04-20T01:32:37Z,"i have spent some time with this. now python version is detected correctly by trivy and added into the sbom in a way that xeol detects it properly according to my use case. i looked into implementing vulnerability scanning as well for standalone binaries, but i think at first only having it part of sboms is a step forward. there are a few problems regarding implementing this with standalone binaries: 1. it's not an os package, hence the whole pr. but that also means i can't implement the vuln scanning as part of the ospkg detector library. when i tried that, trivy started to correctly detect the vulns in the binaries, but it also discarded everything else due to conflicting os versions (if i implement it as ospkg detector driver, then i just lost all dpkg vulns for example). 2. it's also not really a langpkg. but this could be solved with some extra code as part of the driver logic and without messing more with the core. however, none of the ecosystems in trivy-db are really fit for querying vulnerabilities in these standalone binaries. the best bet would be nvd i thought. 3. but nvd does not have an interface to query it in [a link]. this means that i can't query nvd's information about the standalone binary, neither os package sources. 4. a get function could be implemented for nvd, but i suspect that the best way to query it is through cpe2.3 vectors. for standalone-binaries, this is easy to generate correctly i think, but afaik, trivy does not support cpe for complexity reasons (it's also not in the sboms). the only way i see to implement this nicely is by adding cpe support and also putting together a get function for the nvd vulnsrc linked in 3rd point. other way: just hack together an nvd get interface since it'd be used only for the scanner as a fallback in case of generic binary is detected, not for regular vulnerability scanning. now that i know how to implement these things, i think i can put together the remaining parts (java, php, nodejs binary as part of package detection and sboms) in the upcoming days and the pr would be ready.",1,0.7507345080375671
2067637385,6524,kovacs-levent,2024-04-20T10:54:55Z,"i have added support for php and nodejs standalone binaries and it works like a charm with the sboms. i'm dropping support for java because i found that it's harder to correctly determine the package type (jre vs. jdk), and i won't go down the rabbithole since it's not part of my usecase. only issue i discovered yesterday is that this will break lots of integration tests which i'll have to adjust those accordingly. after i'll adjust integration tests, i think this pr can be merged.",1,0.8911018371582031
2080444721,6524,kovacs-levent,2024-04-27T10:27:52Z,"thanks for the feedback, i will make the changes when i have the time, this week’s been busy, but i’ll try to make progress when i have the time.",1,0.9733656048774719
2144774023,6524,kovacs-levent,2024-06-03T09:54:20Z,"as you can see, i finally got to finish up this pr. i'm going to work some more on this in the upcoming days, so that all the comments are reflected in the changes. i did refactor the code to have the proposed structure.",0,0.55304354429245
2145162449,6524,kovacs-levent,2024-06-03T13:08:14Z,"i had some troubles with rebasing, probably shouldn't have waited so long with that :downcast_face_with_sweat: i had to force push, because other people's commits started appearing here, so i did a hard reset. sorry for the ugly commit history :person_shrugging:",-1,0.9943721294403076
2147409610,6524,kovacs-levent,2024-06-04T12:26:39Z,"i have encountered a weird issue now... i found that if rekor sbom source is not specificed, then executableanalyzer is getting disabled. [a link] can someone shed some light on why is that? the commit message contains a pr... seems like completely unrelated issue: [a link] for some reason, the whole executable analyzer was disabled, instead of only disabling rekor queries based on the executables. can you please provide some insight on whether it's fine to remove this, and how could i go about it to disable rekor queries instead?",-1,0.9750038981437683
2147415108,6524,kovacs-levent,2024-06-04T12:29:20Z,"problem is that, with rekor enabled, it works fine for me, but it takes significantly longer to scan with rekor, even though i'm not interested in that information.",-1,0.7215314507484436
2147686446,6524,kovacs-levent,2024-06-04T14:29:26Z,"i fixed this issue in the following commit. now if the rekor flag isn't enabled, it only skips the ""unpackaged"" hook, so rekor queries are only made if the rekor is actually specified, but executable analysis still happens regardless.",0,0.9866588115692139
2148812966,6524,DmitriyLewen,2024-06-05T04:05:33Z,"hello -levent thanks for your work! i'm working on other priority tasks. i will consider this pr when i have time for it regards, dmitriy",1,0.9939496517181396
2202361522,6524,kovacs-levent,2024-07-02T08:50:46Z,any update regarding when this pr can get reviewed?,0,0.9915013313293457
2209436683,6524,itaysk,2024-07-04T18:25:36Z,"-levent binray identification is already implemented in the commercial scanner of aqua as described here: [a link] (this doc is linked from the contribution guide, but regardless we should have let you know earlier). i'm really sorry it took us long time to realize this, it is always best to start a discussion/issue before starting to work. thanks again for your spirit of contribution.",-1,0.9841911792755127
2210098509,6524,DmitriyLewen,2024-07-05T04:12:32Z,"thanks for the clarification! -levent sorry to waste your time, i missed that a commercial scanner supports this...",-1,0.9892519116401672
2210304709,6524,kovacs-levent,2024-07-05T06:56:17Z,"let me get this straight, so just to make sure i'm not getting punked right now... i've created a discussion thread months ago about this topic [a link] in which explicitly told me to ""we are always happy to receive new contributions! if you have time and understanding, it will be very cool if you make a pr with the addition of support for python binaries."". i've created the pr, then you now randomly come after 3 months of 0 contribution to this the topic. now you claim that i did not do proper discussion before starting work on this feature, and that you are now gatekeeping this feature from the open source project, because you built this into your commercial offering. to be frankly honest, i don't care about the commercial offering of aquasec, i'd like this feature to be present in trivy, the open source version, hence i started contributing to this open source project, which i believed to be community-driven. not just a tool for aquasec to use and gatekeep features as they see fit. i have never seen such practices in open source projects.",-1,0.9708744883537292
2210327702,6524,kovacs-levent,2024-07-05T07:14:27Z,"if anyone is actually interested in using such a feature in trivy, feel free to pull the changes from my forked repository: [a link] i'm going to stop contributing i guess then, because you don't like open source community contributing to your project...",-1,0.9148412942886353
2218454119,6524,itaysk,2024-07-09T19:12:23Z,"yes trivy is an open source project but i wouldn't say it's ""community-driven"" like you put it - aqua invests heavility into this project and aqua employees do the overwhelming majority of the work on it, for the benefit of the community. we do encourage community contribution and we are proud to have had many many examples of this, and also community-driven initiatives as long as ithey fall within the project's scope as defined in the contribution guidelines (which every mature oss project should have). i hope this clarifies the situation and guidelines.",1,0.9551782011985779
2219698422,6524,kovacs-levent,2024-07-10T06:52:14Z,"if your contribution guidelines are so mature, and explicitly mention what you're talking about, then why did it take you 3 months to realize that my feature request is out of scope? also seemed to be completely unaware of such constraints, otherwise, i'm pretty sure he'd have mentioned it... you're just trying to save face now by saying all of that about your guidelines, but your contribution guidelines do not say anything about such features being out of scope... [a link] you only mention that runtime security, intentional attacks, and user interface is out of scope. my feature which i implemented does not fall into any of these categories. so your ""mature oss project"", has such a great contribution guidelines documented that not only me, but also your maintainers are unaware of what's in it then :grinning_face_with_sweat: also, whatever you linked previously, does not mention the fact that ""do not work on such features"", it's just a table to mention which feature is in which offering... you only mention in the guidelines that ""aqua security offers a premium version with several features not available in the open-source trivy project."" which is all good, but nowhere do you actually say that these features cannot be implemented in the open source version. even if it's under ""out of scope features"" section, this is not meaning what you're saying... you just mention categories which are not included, nowhere is it coherent enough to mention that such features are all out of scope. it is very vague...",-1,0.9321198463439941
2219702702,6524,kovacs-levent,2024-07-10T06:54:34Z,"i don't think i need to spell it out how bad trivy looks when you're scanning a distroless python image with it for example, and trivy is completely unaware that python binary is actually part of the image and it's not part of sbom, vuln scans, or anything. you'd rather keep this behavior in trivy than to mitigate a serious blindspot, causing (probably) thousands of missed vulnerabilties over time. you value your business over making the tool better, and mitigating serious blindspots in it.",-1,0.9461873769760132
2220272897,6524,itaysk,2024-07-10T11:29:16Z,"the table i referenced is linked from the trivy documentation under ""out of scope features"". the table includes a section titled ""compiled binaries"" which puts ""identifies popular applications by huristics"" as a commercial feature. we could improve the wording to be more clear about it. even though this case is pretty obvious, the doc is not meant to be a definitive and comprehansive policy. we can't forsee all potential future suggestions and decide in advance what will be in/out of scope. it's possible that a feature suggestion will be rejected based on maintainer's discretion. you have made your point clear about the necessity of this feature, thanks for the feedback. we will consider it in the future as we re-evaluate the scope guidelines.",0,0.935590386390686
2533804604,8077,DmitriyLewen,2024-12-11T07:03:37Z,i created this pr to use the `hasextractedlicensinginfos` field (as you wrote in #7716). it would be great if you took a look if you have time,1,0.9431498646736145
2616160775,8077,goneall,2025-01-27T16:02:25Z,thanks - i'll try out the fix,1,0.7538045048713684
550495630,253,simar7,2019-11-06T20:53:16Z,this pr is excruciatingly long to review. maybe next time we could break it down to more manageable chunks? you could look into stacking prs [a link],-1,0.9746538400650024
550507583,253,knqyf263,2019-11-06T21:26:36Z,"yes, i know. i always try to keep pr small, but i needed to fix many points at the same time. i'll take a look at your url. thanks.",1,0.9801173806190491
1279452584,3015,simar7,2022-10-14T20:50:29Z,## aws scanning results ### with new policies fetched [code block] ### with `--skip-policy-update`: [code block],0,0.9932871460914612
1279458972,3015,simar7,2022-10-14T20:58:16Z,## misconfiguration scan ## with new policies fetched [code block] ## with `--skip-policy-update` [code block],0,0.9918560981750488
1289831609,3015,simar7,2022-10-25T00:48:51Z,thanks for the review - just waiting for this to be approved and merged [a link] - could you help with that or give me the permission on the defsec repo to merge?,1,0.9126523733139038
1290249683,3015,liamg,2022-10-25T09:21:51Z,i've merged it and tagged `v0.82.0` of defsec :+1:,1,0.8307674527168274
1297864271,3015,simar7,2022-11-01T00:47:55Z,thanks - i just rebased this and all checks are passing. can we merge this in now?,1,0.8215185403823853
1322814541,3015,simar7,2022-11-21T23:57:48Z,hey - i'm sure you are getting to this pr to review :),0,0.9574309587478638
1323274614,3015,knqyf263,2022-11-22T08:16:18Z,"yes, but please let me wrap up vm scanning first. it has a deadline.",0,0.9865289926528931
1376272409,3015,simar7,2023-01-09T20:25:02Z,"- i've updated the logic as desired. for some unrelated reason, tests on windows are failing. i'm unclear why that is as it isn't related to this pr. is there a known issue with windows unit tests?",0,0.9066228866577148
1377005264,3015,knqyf263,2023-01-10T10:01:10Z,i think missing file close causes it.,0,0.9845331311225891
1377860409,3015,simar7,2023-01-10T21:10:52Z,"thanks, you're right on. that seems to be it, appreciate the second look.",1,0.9868742823600769
733037254,751,CLAassistant,2020-11-24T15:12:37Z,[a link] all committers have signed the cla.,0,0.9951004385948181
733060748,751,knqyf263,2020-11-24T15:47:55Z,thanks for your great contribution! could you help me with the review? it should be easy to integrate into starboard.,1,0.9942012429237366
736243028,751,czunker,2020-12-01T06:02:45Z,"hi , hope i didn't miss a comment this time.",0,0.5408151745796204
739488678,751,knqyf263,2020-12-06T11:21:45Z,thanks for the great contribution!,1,0.984035313129425
1113997114,2065,knqyf263,2022-04-30T14:22:51Z,i'm curious why we needed another pr. [a link],0,0.9496455192565918
1114200910,2065,josedonizetti,2022-05-01T10:56:48Z,"sorry, i was working on my fork, endup branching from you and creating a new branch in case i broke something on your branch and forgot about your pr. i'll close this pr and push my changes to your branch/pr.",-1,0.9903613328933716
1114526179,2065,knqyf263,2022-05-02T06:07:07Z,"i'll close my pr then. i just wanted to know why we needed two prs. if it is just a mistake, it is ok:thumbs_up:",1,0.9928459525108337
1121669456,2065,josedonizetti,2022-05-09T23:07:27Z,"-keinan can you review? this is a first version of the command, limited features, so we can release something working for kubecon, then i follow up with other prs to improve things. things todo: 1 - add more formats, for now the only format is json. 2 - better performance, for now we are doing one scan per time, no concurrency. 3 - better unit tests 3 - flags (--ignore-namespaces, --context, etc) 4 - scan secrets 5 - use memory fs instead of writing resources to files 6 - reports (summary, others?) 7 - individual resources scan `trivy k8s deployment/orion` let me know what you think is a blocker on your review, and what i can fix on a following pr please.",0,0.8325181007385254
1122305711,2065,knqyf263,2022-05-10T12:09:16Z,could you also update the documentation? i'm a bit confused with usage.,-1,0.745652437210083
2217965768,7131,CLAassistant,2024-07-09T15:04:14Z,[a link] all committers have signed the cla.,0,0.9951004385948181
2217965801,7131,CLAassistant,2024-07-09T15:04:14Z,"[a link] thank you for your submission! we really appreciate it. like many open source projects, we ask that you sign our [a link] before we can accept your contribution. you have signed the cla already but the status is still pending? let us [a link] it.",1,0.9939326643943787
1179744539,2490,CLAassistant,2022-07-10T15:01:05Z,[a link] all committers have signed the cla.,0,0.9951004385948181
1183112000,2490,mxab,2022-07-13T11:37:30Z,"hi after going a bit a forth, i'm a bit undecided what makes sense i created now three different hooks one that does exactly `trivy fs --exit-code 1 .` `trivy fs --exit-code 1` configure the rest via `args` `trivy` configure everything via `args` i create a showcase for those 3 use cases in this repo here: [a link] not sure which one makes the most sense, any thoughts",0,0.721716582775116
1184297984,2490,DmitriyLewen,2022-07-14T10:53:02Z,"i think 3 hooks is overkill. i think only the `fs` subcommand will be used. it is also always necessary to use `--exit-code 1`. we can only use one flag with `entry: trivy fs --exit-code 1 .`. if the user needs to exclude some directories, he can use the `-skip-dirs` and `--skip-files` flags. if many users need a different subcommand or selection of directories to scan, we can always add/change a hook.",0,0.9600814580917358
1184319447,2490,mxab,2022-07-14T11:14:26Z,ok now there is only `trivyfs` which allows configuration and `trivyfsall` for a simple setup,0,0.9927464127540588
1184421857,2490,DmitriyLewen,2022-07-14T13:02:47Z,pr looks good. but what do you think about using 2 hooks?,1,0.7395889163017273
1184431177,2490,mxab,2022-07-14T13:11:36Z,i can remove the `trivyfsall` hook. the idea was just to have one simple hook with a basic config. it is not really configurable as it has the `.` at the end and from how i understand trivy fs cli interface the path is the final argument therefore you cannot mixin any futher `args`,0,0.9893540143966675
1184444192,2490,DmitriyLewen,2022-07-14T13:23:05Z,"i checked this config: [code block] i don't know how it works, but it works correctly(report contains only `high` vulnerabilities)",0,0.9770113825798035
1184473722,2490,mxab,2022-07-14T13:49:49Z,"ok, yeah just noticed as well... but why?!",0,0.6474325060844421
1184870995,2490,mxab,2022-07-14T20:32:43Z,"i toyed arround with pre-commit and i still really don't understand why this works. there must be something different when between the bash/zsh and python subprocess module i went through the pre-commit code and added some logging right before shoves it into the `subprocess.popen(cmd,**kwargs)` the `cmd` array contains still `'trivy', 'fs', '--exit-code', '1', '.', '--skip-dirs=.git/'` maybe cobra does some magic there. if you want to only have one hook i now would vote to drop the trivyfsall as this want allow to set the path part. if you add another `.` in the args in the trivyfsall it will fail",0,0.8693316578865051
1185157244,2490,DmitriyLewen,2022-07-15T04:19:32Z,"ok, let's remove `trivyfsall`. also, when you will correct docs, you can check docs with `make mkdocs-serve`? if i'm not mistaken, one more empty line is needed [a link].",0,0.9939548373222351
1185229939,2490,mxab,2022-07-15T06:44:49Z,"ok, removed it and updated the docs",0,0.9939339756965637
1190581095,2490,mxab,2022-07-20T17:53:28Z,should i rebase my branch?,0,0.9857882857322693
1190992341,2490,DmitriyLewen,2022-07-21T03:19:37Z,", yes, please",1,0.5614697337150574
1192279752,2490,mxab,2022-07-22T07:39:36Z,done,0,0.8682363629341125
1230025879,2490,mxab,2022-08-29T09:37:53Z,is there anything else you require? i think rebasing it makes only sense when you really going to merge it :),0,0.9908388257026672
1230034127,2490,DmitriyLewen,2022-08-29T09:45:27Z,"hello . no, thanks. we need to get approval from . i approved this pr. could you take a look when you have time, please.",1,0.6732208728790283
1241407886,2490,tspearconquest,2022-09-09T01:47:43Z,"hey, thanks for making this. i apologize as i haven't had proper time to work on this after all. this looks good to me, however i'm not a maintainer so i can't merge it. i would be interested in seeing a trivy-docker hook to run trivy from a docker image, and that was what i had planned to contribute. if you can make it, i'll definitely use it, and if not, then i'll open up a new pull request when i've got time to work on it. thanks again!",1,0.9940965175628662
1253948098,2490,natefive,2022-09-21T16:30:05Z,can you rebase this? is there any reason why this stalled thanks :),1,0.7625657916069031
1254101125,2490,mxab,2022-09-21T18:53:43Z,done,0,0.8682363629341125
1276945210,2490,proinsias,2022-10-13T02:27:47Z,– thanks for this!,1,0.9679710865020752
1288190045,2490,mxab,2022-10-23T20:06:25Z,"great idea, i updated the pre-commit hooks to run in two modes `trivy-go` and `trivy-docker` does this make sense to you",1,0.9877389073371887
1288202149,2490,tspearconquest,2022-10-23T21:11:21Z,"this looks good. i would only suggest one change, to use the `--severity` flag so that we only fail for medium and higher vulnerabilities.",1,0.9321445226669312
1288206785,2490,mxab,2022-10-23T21:37:24Z,you can add such flags via the `args` field when using it [code block],0,0.9959893822669983
1288222715,2490,tspearconquest,2022-10-23T23:03:45Z,lgtm,0,0.9618706703186035
1288238694,2490,tspearconquest,2022-10-24T00:07:04Z,"i have some ideas for how to enhance this later on when i have more time to come back to it. it would be great, as one idea, to be able to have a script pre-process the file inputs from pre-commit. i could foresee a use case of building an in-repo dockerfile into an image and then running a scan on the image, and another use case to perform secrets or sbom scanning only, without doing the full fs scan. but it's definitely a topic for a separate pr. this satisfies my original plan and i want to take a moment to give a shout out to for his dedication towards getting this merged. hope knqyf263 will approve it soon.",1,0.9762412905693054
1288343195,2490,DmitriyLewen,2022-10-24T02:54:25Z,hey i thinks it is good idea! thanks for your work.,1,0.9962383508682251
1288569741,2490,mxab,2022-10-24T07:53:28Z,"maybe someone could reach out to , the pr is open for quite a while now :)",0,0.9815340638160706
1294176217,2490,matthewflannery,2022-10-27T22:21:55Z,"+1 on this, please can we get this pr over the line - trivy is quickly becoming an outstanding tool and being able to integrate this as early as possible, as easily as possible into a developers workflow would be amazing.",1,0.9954291582107544
1297109343,2490,electriquo,2022-10-31T13:41:15Z,reaching out for please help in reviewing the pr and assist in merging it,0,0.8623385429382324
1311058430,2490,urbanadventurer,2022-11-11T00:02:12Z,+1 lgtm,0,0.9803078770637512
1313682146,2490,knqyf263,2022-11-14T13:16:35Z,"sorry for the late reply. trivy has many features now and we are cautious about putting new integrations upstream because we need to maintain that for the long term. you might feel this change is small, but small things make a big difference. we will probably merge this pr in the future, but if you need the pre-commit shortly, i'd recommend creating your repository and open a pr to add the repository link here. [a link]",-1,0.9847429990768433
1320862965,2490,mxab,2022-11-19T11:21:05Z,"not the answer i was looking for after half a year :smiling_face_with_tear:, but here we go: [a link] the downside of the external version is that i can only use the docker container based approach in the first version it only uses the latest trivy image if you maybe want to merge this pr in the future, i would leave it open",1,0.9817243814468384
1483814087,2490,jmreicha,2023-03-25T12:38:45Z,"i would be curious to know what the thought is about the downsides of maintaining this integration. not enough help? time? something else? it would be great to have an ""official"" pre-commit hook, it may even drive greater adoption.",0,0.7345076203346252
1483879768,2490,itaysk,2023-03-25T17:38:10Z,"trivy is very popular and many integrations are requested/suggested every day. the core team doesn't have the capacity nor the knowledge to properly maintain and support every single integration and target ecosystem. moreover, there can be different legitimate implementations for same scenarios or different opinions around how to integrate trivy, and we don't want to be the judges of that. we want to encourage the community (e.g author of this pr) to create and share their solutions with trivy. the only think trivy is a project can do is to make all of those integrations discoverable in one place. that's why we created the ""ecosystem"" section in the documentation which lists (with your help) all of trivy's different plugins/integrations/use cases in one place (if you have any feedback about that, please feel free to share, probably not in this pr though). i'm going to close this pr since the pre-commit hook is now [a link] list. thanks so much to and other contributors.",0,0.5379781126976013
2286183303,7336,afdesk,2024-08-13T12:48:16Z,"i think it's ready for review. please, take a look when you have time. thanks!",1,0.9931280612945557
2287763093,7336,knqyf263,2024-08-14T03:23:45Z,is there a way to distinguish between the license name and the license text?,0,0.993770182132721
2287841833,7336,afdesk,2024-08-14T04:40:46Z,"right now, i'm not sure. but i'll take a look and will show the cases.",0,0.8426400423049927
2287865643,7336,knqyf263,2024-08-14T05:07:21Z,"i want to show ""unknown"" for the license text.",0,0.9907826781272888
2287972887,7336,afdesk,2024-08-14T06:43:06Z,my concern is next. python deb packages can contain the license text inside `license` field: [code block] ![a link] but if i understand correctly it's a mistake. [a link]: first line (synopsis): an abbreviated name for the license.,0,0.593150794506073
2287977890,7336,afdesk,2024-08-14T06:47:03Z,"my concern is that there is no a correct way to distinguish between incorrect `permission to use, copy, modify, and distribute this software and its` and correct license synopsis `tinyscheme` or `permissive` for `gpgv` package.",-1,0.5358037948608398
2288019345,7336,afdesk,2024-08-14T07:14:51Z,"the same situation is with `license` field inside `*.dist-info.metadata`. some packages contain a correct license name (eg. `pympler`): `apache license, version 2.0`. some undefined license (eg `zope`): `zpl 2.1`. some packages contain the license text (eg `menuinst`): ![a link]",0,0.9944385290145874
2288201415,7336,afdesk,2024-08-14T08:47:20Z,i have an idea. trying,1,0.5275353193283081
2288219670,7336,afdesk,2024-08-14T08:56:26Z,could you confirm that i understand correctly this requirement? thanks ![a link],1,0.9897435307502747
2292798013,7336,knqyf263,2024-08-16T04:45:07Z,"i know it's not ideal, but what if checking the length and the number of newlines? [code block]",0,0.8812114000320435
2292801913,7336,knqyf263,2024-08-16T04:49:54Z,"i don't want to show the license text there as it's too long. i thought we would show ""unknown"", but we know a license text. we just don't know the short name. how about ""custom""? then, the license text can be stored in another field.",0,0.9768087863922119
2295666991,7336,afdesk,2024-08-19T04:54:15Z,"i tried this way, you're right, it's not ideal. counting new lines don't affect on the output, because trivy reads only one line from license in dpkg, python packages also contain a long single line license... so this check is always true. about check text length. it works for long linceses in python. but dpkg's licenses are still shown incorrectly. i thought it's a long text, but actually it's a few first rows of several licenses: [code block]",0,0.647555410861969
2295681603,7336,afdesk,2024-08-19T05:09:57Z,"right now, i can't see a good solution, but there are several options: 1. we just check text lengths, and don't update output for dpkg licenses, because it's a python's fault. 2. we keep a list of known licenses, and check every splited part. if there is no matching, we print a license text. 3. we keep some **keywords**, and if we can find them inside a string, it'll mean a license text (or a part). for example: `as-is`, `redistribution`, `permission`, `using`, `use`, `@`, `http` etc. wdyt?",0,0.6308844685554504
2295688652,7336,afdesk,2024-08-19T05:17:31Z,"you mean we should print `custom license` instead of a long license text for table output, and keep another field (ex `licensetext`) for json, right? imho, it makes sense. also i'd add a few words from license )",0,0.9570168852806091
2295730011,7336,DmitriyLewen,2024-08-19T06:00:56Z,"what if we add one more check for `copyright` files: if number of `license: *` fields more then one - split each line: - if 2 or more licenses are found in field - it is text license - if only 1 license is found in field - this is license name e.g. line 1 - text, line 2 - license name: [code block] my logic is as follows: if you use multiple licenses separarted by `and`/`or` - you will use only one `license: *` field. but if you use multiple `license: *` fields: - you will use one license for each `license: *` field. e.g.: [code block] - in other cases it is license text.",0,0.9927201271057129
2295752678,7336,afdesk,2024-08-19T06:19:34Z,"that's an interesting idea. there are next cases for perl and python packages: perl: [code block] python3.9: [code block] i'm not sure we can separate these cases, but maybe if we also will check string length... a long string with a few splited licenses is a text. what is long? i think it about 50 chars. wdyt?",1,0.8015127182006836
2295832910,7336,DmitriyLewen,2024-08-19T07:15:33Z,yeah. that's what i thought if there's only one field - we check the length and number of lines. what if use 30 characters + no [a link] found,0,0.9685434103012085
2300426548,7336,knqyf263,2024-08-21T02:56:40Z,exactly,0,0.9872385263442993
2306187192,7336,afdesk,2024-08-23T04:19:32Z,"i tried severel ways to separate a long license text from a license name, and the best result for me is a detection by keywords. there were selected a few obvious words, that can appear inside license texts only. please, take a look at this suggestion when you have free time. thanks!",1,0.9924935102462769
2306456509,7336,afdesk,2024-08-23T07:21:07Z,"the main problem is to separate a license name and a license text. some developers put a full license text inside a license field, where should be a license name (or a license id). checking the length doesn't work because there are correct long lincenses (it's already added to test cases): [code block] the number of newlines doesn't work too, because we read only one line from copyright or license files. the number of spaces doesn't work, because there are too long correct license names (ex cddl-1.0). `saisk026/conda-test:v1` is a good image for license testing.",0,0.9825232028961182
2326045936,7336,knqyf263,2024-09-03T09:29:39Z,"ok, we don't have an easy way. let's see how it goes.",0,0.9151297211647034
2326143285,7336,afdesk,2024-09-03T10:16:03Z,should i fix something to add this pr in 0.55?,0,0.9940348267555237
2326190964,7336,knqyf263,2024-09-03T10:38:22Z,"i'm reviewing the changes now. i'll update you soon. if we don't make it for v0.55.0, we can include it in v0.55.1.",0,0.9435757994651794
2328436731,7336,afdesk,2024-09-04T10:02:48Z,"yeh, sure. the test is added",0,0.9778835773468018
2185726896,6993,knqyf263,2024-06-24T06:39:49Z,"i returned `use ""trivy clean --all"" instead` as an error, but it appears at the end of the log message and is therefore difficult to find as below. use ""trivy clean --all"" instead. i eventually separated the error message. in short, it's intended. if you don't like `""--reset"" was removed. ` is displayed twice, i can change the error message.",0,0.9925244450569153
2185752811,6993,DmitriyLewen,2024-06-24T06:58:06Z,got it :smile: then no problem :+1:,1,0.9962702989578247
2185822726,6993,knqyf263,2024-06-24T07:40:58Z,i change the message slightly. [a link],0,0.9937779903411865
2185830032,6993,knqyf263,2024-06-24T07:45:20Z,"according to the discussion in [a link] i didn't add `--terraform-module` flag. if you want to move the cache under the trivy cache directory and let trivy delete the cache, please feel free to open a new pr. i don't think it's a blocker of this pr.",0,0.989159882068634
2186095705,6993,DmitriyLewen,2024-06-24T09:55:57Z,i understand that didn't write about comments for `--reset-checks-bundle` flag. added in [a link],0,0.9933342933654785
2186210053,6993,knqyf263,2024-06-24T10:24:28Z,thanks! it's my bad.,-1,0.9809529185295105
2186479357,6993,knqyf263,2024-06-24T12:36:14Z,"-keinan since it's a breaking change, i'd wait for you guys.",0,0.8735724687576294
2188551323,6993,knqyf263,2024-06-25T10:28:58Z,announced [a link],0,0.9934833645820618
2222189080,6993,simar7,2024-07-11T07:04:06Z,"i didn't know but we seemed to have supported `trivy_reset` as an environment variable to clean the cache in the past. this came up now because some users used to use this environment variable in their ci runs to clean the cache prior to running trivy-action. see [a link] for an example. it seems at some point, we have dropped support for this environment variable (and maybe other `trivy_*` envvars?) but i wasn't able to find that change. in any case, if we no longer support that environment variable, we have to implement a way in trivy-action to be able to support such a use case. please correct me if i missed something.",0,0.9687827825546265
2222264578,6993,knqyf263,2024-07-11T07:48:51Z,"`trivy_reset` was removed, but envs for new flags are still supported. [code block]",0,0.9951999187469482
2223120501,6993,simar7,2024-07-11T14:41:46Z,ok looks like in that case we will need to add support for this in the action as currently i don't see anyway to clean the cache from the action.,0,0.9838157296180725
2357801466,7526,afdesk,2024-09-18T08:14:04Z,"this condition works only for major version, because `backport` branch usually doesn't contain a helm chart update. [a link]",0,0.9954597353935242
2360281590,7526,DmitriyLewen,2024-09-19T08:08:19Z,oh... you said current behavior. i thought it was new logic. then i have no questions about it,0,0.6380859613418579
2360300686,7526,DmitriyLewen,2024-09-19T08:17:20Z,iiuc author of pr should be `aqua-bot` (as for backport (e.g. [a link],0,0.992652416229248
2360533230,7526,afdesk,2024-09-19T09:51:52Z,"it seems it depends on token owner, because i tried to keep the same workflow: [a link]",0,0.9909409880638123
2360573892,7526,afdesk,2024-09-19T10:10:38Z,i had concerns about `label` (`lifecycle/active`) and about `versions` (that chart version is equal trivy version now). wdyt? thanks,1,0.9037775993347168
2360576340,7526,DmitriyLewen,2024-09-19T10:11:47Z,you said this and i realized that most likely you are right and i have already encountered this :thumbs_up:,1,0.990064799785614
2367297761,7526,knqyf263,2024-09-23T06:03:52Z,"do we need a label? they should be different; otherwise, we can't update the chart version when we fix the helm chart itself.",0,0.9882482886314392
2419494569,7526,afdesk,2024-10-17T13:04:54Z,i've updated a version changing. could you take a look at this pr again when you have time? thanks a lot!,1,0.9926929473876953
2434369297,7526,afdesk,2024-10-24T06:00:03Z,could take another look at this pr? thank,1,0.944831907749176
1698598397,5062,juan131,2023-08-30T06:53:40Z,is there anyway i can for trivy to use a local `trivy-db` that includes the `bitnami/vulndb` info? [code block],0,0.9956362843513489
1698604879,5062,knqyf263,2023-08-30T06:59:36Z,there are two ways: 1. use the local database - build trivy db locally and move it to the cache directory (see the default value of `--cache-dir`) - note that metadata.json must be located next to the database as trivy tries to download the latest database if the last updated at is old 2. use your own repository - build trivy db and push it to your repository (e.g. ghcr.io/juan131/trivy-db) - pass the repository with `--db-repository`,0,0.9946609139442444
1700451004,5062,juan131,2023-08-31T06:40:26Z,i updated the pr including a more recent spdx example for elasticsearch,0,0.9938247203826904
1701295236,5062,knqyf263,2023-08-31T15:48:30Z,"it seems like the bitnami database takes the affected versions from nvd, but we're seeing many mistakes in nvd. for example, there is no fixed version for v1.13.x and v1.14.x in the bitnami database. [a link] nvd also doesn't have the fixed versions. [a link] however, the vulnerability should be fixed by 1.14.3 and 1.13.3. [a link] [a link] then, it leads to false positives. i'm sure users will open issues about the false positives in trivy. there are many examples. [a link] [a link] i don't think this problem blocks this pr. we can discuss how to improve that in `bitnami/vulndb` issues.",0,0.9081003665924072
1702209376,5062,juan131,2023-09-01T05:59:29Z,"thanks so much ! i really appreciate your guidance during this whole process. is it too much to ask to open an issue (or a series of issues) at [a link] where we can discuss and address all these mistakes you observed? otherwise, i can open them for you.",1,0.9952011108398438
1702244800,5062,knqyf263,2023-09-01T06:38:31Z,it is hard for us to review all advisories. i think we can categorize the problems. i'll open a first issue.,0,0.8008309602737427
1702252785,5062,knqyf263,2023-09-01T06:46:39Z,done [a link],0,0.9950201511383057
494820661,50,DanCech,2019-05-22T14:12:45Z,"this seems like a neat idea, i'd like to see it support multiple comma-separated types and ideally the ability to specify the os family(ies) to control which vuln dbs are updated at startup as the vuln db update is the largest part of the time it takes to run a scan.",1,0.9306638836860657
494889735,50,Mallear,2019-05-22T17:07:40Z,working on multiple comma-separated types. specific db updates will be managed by #43,0,0.9946548938751221
494903039,50,Mallear,2019-05-22T17:52:55Z,multiple comma-separated types is working.,0,0.9928663969039917
495212612,50,DanCech,2019-05-23T13:13:13Z,nice work :thumbs_up:,1,0.9968649744987488
495468046,50,knqyf263,2019-05-24T04:27:39Z,thanks! i'm sorry for my late reply. i'll check it in a few days.,-1,0.991486132144928
495623789,50,Mallear,2019-05-24T13:18:07Z,rebased master into my dev branch to fix merge conflicts.,0,0.9914165139198303
498658365,50,Mallear,2019-06-04T12:52:12Z,"hi , when can i expect this request to be merged ? i would like to migrate quickly from anchore to trivy but i need this feature :grinning_face_with_smiling_eyes:",1,0.9658876657485962
498664765,50,knqyf263,2019-06-04T13:10:16Z,i'm sorry for my late response. i'll test it tomorrow.,-1,0.9936794638633728
498671705,50,Mallear,2019-06-04T13:28:37Z,thank you :grinning_face_with_big_eyes:,1,0.9955607652664185
499361555,50,Mallear,2019-06-06T06:07:33Z,i agree with that. i have deleted language type filter and changed `packages` keyword for `library` as it is more accurate.,0,0.9776290655136108
499372060,50,Mallear,2019-06-06T06:51:33Z,"i rebased master into my branch, it seems i messed with commit ..",0,0.9887669682502747
499908935,50,knqyf263,2019-06-07T14:34:30Z,thanks a lot!,1,0.9748498201370239
516766804,50,knqyf263,2019-07-31T09:12:15Z,"thank you for contributing to trivy. i have not prepared the contribution license agreement (cla), but finally prepared it. i would like you to sign cla if possible. i apologize the inconvenience i have caused. [a link] if you have any questions, please let me know. thanks again for your kind cooperation.",1,0.9831485748291016
1909832162,5999,Maxim-Durand,2024-01-25T10:17:18Z,"but so can a maintainer [a link] and validate this is a bug/feature, then create the associated issue so i can reference it in this pr ?",0,0.9936795234680176
1921326679,5999,RichardoC,2024-02-01T13:29:07Z,"this will be very handy, to give an example i do nightly scans of ""nightly"" containers, and the most recently release of my project [a link] and it's not possible to tell them apart which means i'm not sure if something's a regression or not given [a link] i think it should also include the digest e.g. example.com/my-image:my-tag-fake-hash so that it's possible to tell which version of an image was scanned, as the image could have been retagged below is an example screenshot showing how it's not possible to tell them apart currently ![a link]",0,0.7848358154296875
2048947517,6476,simar7,2024-04-11T05:23:25Z,we probably have to update these flags as well: [a link],0,0.9953556060791016
2063108311,6476,nikpivkin,2024-04-18T06:39:36Z,i opened [a link] in `testodcker`. can you take a look?,0,0.9943878054618835
2065552757,6476,simar7,2024-04-19T00:48:21Z,note: tests are failing as [a link] will fix them.,0,0.975913941860199
2087757285,6476,simar7,2024-05-01T00:18:26Z,i'd like to review once again when he's back.,0,0.9570347666740417
2098035478,6633,knqyf263,2024-05-07T10:37:37Z,i've addressed your comments.,0,0.9846494793891907
2098276169,6633,knqyf263,2024-05-07T12:19:24Z,thanks!,1,0.8631753921508789
2227731055,7160,nikpivkin,2024-07-15T05:36:18Z,1. the checks bundle is distributed as an oci artifacts and retrieved from the artifact registry. authentication methods are described [a link].,0,0.9918640851974487
2228459457,7160,itaysk,2024-07-15T13:04:46Z,", just [a link] that the vuln dbs support only docker login, they don't support user/pass. is it the same for checks bundle as well? or checks bundle does support user/pass unlike vuln scanner?",0,0.986396849155426
2228467747,7160,nikpivkin,2024-07-15T13:08:41Z,supports login and password,0,0.9937899708747864
2230124897,7160,itaysk,2024-07-16T06:32:03Z,wdyt about removing the manual cache manipulation guide? it seems very internal and i think using the flag is better,0,0.9865506887435913
2230128057,7160,knqyf263,2024-07-16T06:34:21Z,we discussed it in [a link] and agreed not to add flags.,0,0.9938271641731262
2230129372,7160,knqyf263,2024-07-16T06:35:20Z,"or do you mean we should force users to upload db to their oci registry? in any case, users need to manually download the db and copy it to the environment running trivy, so copying it under the cache directory is not a big problem.",0,0.9929348826408386
2230373452,7160,itaysk,2024-07-16T08:55:52Z,"i meant the latter. not saying it's a big problem, just seems redundant and makeshift to me. ok i'll keep it, but then i want to confirm what is the procedure for misconfig checks ( )?",0,0.9062568545341492
2230662106,7160,itaysk,2024-07-16T11:29:58Z,"added another node about loading config from directory using `--config-check` flag. also found many outdated references to this flag which i fixed in the same commit. ftr, also adding this to the list of inconsistencies (checks vs check) can you please review",0,0.9923772811889648
2232391549,7160,simar7,2024-07-17T04:33:49Z,"the process would be the same as trivy-db, the users have to navigate trivy's cache to place the checks in the right place in case of an air gap solution. maybe we should document this cache structure in more detail as a whole as it is a common place for all scanners?",0,0.9931179285049438
2273348660,7160,itaysk,2024-08-07T12:24:32Z,"i've addressed vex hub in air gapped env, let me know if it's ok [a link]",0,0.9825452566146851
2381313076,7605,knqyf263,2024-09-29T11:03:38Z,i'll review it tomorrow.,0,0.9780258536338806
2399153321,7605,stewartcampbell,2024-10-08T08:10:40Z,"if i add a typo to the first url, it fails to try the second. is that expected? [code block] [code block] [code block]",0,0.9910474419593811
2399252392,7605,DmitriyLewen,2024-10-08T08:52:16Z,hello this is expected behavior. we only skip the repository for `429` and `5xx` errors - [a link],0,0.9933032393455505
2399268040,7605,stewartcampbell,2024-10-08T08:58:58Z,thanks,1,0.8643599152565002
816804438,935,CLAassistant,2021-04-09T16:32:48Z,[a link] all committers have signed the cla.,0,0.9951004385948181
819639044,935,eddynaka,2021-04-14T16:10:59Z,", can you review it, please?",0,0.9780176281929016
819642281,935,simar7,2021-04-14T16:15:42Z,i've assigned it to myself already. i will get to it soon. thanks for your patience.,1,0.9874742031097412
1031772934,1638,afdesk,2022-02-07T18:18:14Z,we have to pull `main` branch to this pr.,0,0.9931595325469971
1032262836,1638,DmitriyLewen,2022-02-08T06:41:01Z,done,0,0.8682363629341125
1087431108,1638,knqyf263,2022-04-04T11:19:36Z,any progress on reusable workflows?,0,0.9901795387268066
1742011976,5285,CLAassistant,2023-10-01T08:57:01Z,[a link] all committers have signed the cla.,0,0.9951004385948181
1774919483,5285,anfedotoff,2023-10-23T10:43:54Z,", sorry for too long, but i'm done with fixes. please, have a look, if you have time:).",-1,0.937028706073761
1774922697,5285,DmitriyLewen,2023-10-23T10:45:59Z,"good! resolve conflict, please.",1,0.9864740967750549
1809612703,5285,DmitriyLewen,2023-11-14T06:21:51Z,can you take a look on test errors (windows tests are broken)?,0,0.9824212193489075
1817058416,5285,anfedotoff,2023-11-17T20:28:17Z,"hmm, honestly, i don't understand why this is happened. maybe that test is flaky? could you restart it, please?",-1,0.9101178646087646
1818049501,5285,knqyf263,2023-11-20T00:52:42Z,i don't think it's flaky. it shows a file open error.,0,0.8969272375106812
1909615156,5285,DmitriyLewen,2024-01-25T08:12:14Z,i fixed windows tests and did some small refactoring for this pr. can you look it when you have time please.,0,0.9879528880119324
2599268903,8254,CLAassistant,2025-01-17T21:46:45Z,[a link] all committers have signed the cla.,0,0.9951004385948181
2614882110,8254,knqyf263,2025-01-27T05:33:33Z,thanks for your contribution. [a link] is coming soon. we hope to add this feature in v0.60.0.,1,0.9781152606010437
2646112720,8254,RingoDev,2025-02-09T07:51:39Z,"sounds great, linting issues and co. should be gone by now :thumbs_up:",1,0.9964507818222046
2662599900,8254,RingoDev,2025-02-17T09:55:55Z,any chance this still makes it into [a link] ?,0,0.9831556081771851
2667395738,8254,knqyf263,2025-02-19T03:00:55Z,i'll take a look this week.,0,0.9671769142150879
1510278436,4047,knqyf263,2023-04-16T10:31:17Z,"i think we may want to replace [a link] with this approach. can you take a look? also, i suggested as below. [a link]",0,0.9884673953056335
1516329579,4047,pmengelbert,2023-04-20T13:27:08Z,"i added some docs in `container_image.md`: [code block]bash +trivy image --runtimes podman,containerd alpine:3.7.3 +[code block]",0,0.9939882755279541
1517235884,4047,DmitriyLewen,2023-04-21T04:18:39Z,good work! can you resolve conflicts?,1,0.9950292706489563
1520228958,4047,pmengelbert,2023-04-24T14:07:22Z,"merge conflicts have been resolved, thanks!",1,0.9704843759536743
1521367615,4047,knqyf263,2023-04-25T08:18:18Z,"[code block] `remote` runtime sounds like a remote docker daemon or other daemons. how about `--image-src`, `--image-from`, or something like that? `docker,containerd,podman,registry`.",0,0.9932519793510437
1521915848,4047,pmengelbert,2023-04-25T14:44:17Z,"renamed to `image-src`, and in the code things like `runtime` have been renamed to `imagesource`",0,0.9943511486053467
1529713945,4047,pmengelbert,2023-05-01T13:31:17Z,is there anything else that this pr needs to be accepted?,0,0.9943491816520691
1534540234,4047,knqyf263,2023-05-04T10:49:16Z,i'm back from vacation. we plan to take another look at this pr next week. thanks for your patience.,1,0.9865190386772156
2291113610,7340,CLAassistant,2024-08-15T11:34:18Z,[a link] all committers have signed the cla.,0,0.9951004385948181
2291113614,7340,CLAassistant,2024-08-15T11:34:19Z,"[a link] thank you for your submission! we really appreciate it. like many open source projects, we ask that you all sign our [a link] before we can accept your contribution. **1** out of **2** committers have signed the cla. :white_check_mark: afdesk :x: amf **amf** seems not to be a github user. you need a github account to be able to sign the cla. if you have already a github account, please [a link]. you have signed the cla already but the status is still pending? let us [a link] it.",1,0.9951460957527161
2292812826,7340,knqyf263,2024-08-16T05:03:12Z,"we should add a new test to ensure original bom-refs are kept as-is. in the existing test, the input is sbom, but the output is trivy json. [a link]",0,0.9955949187278748
2295103497,7340,afdesk,2024-08-18T04:12:20Z,the testcase is added now.,0,0.9949990510940552
2316736497,7340,afdesk,2024-08-29T05:19:54Z,"now trivy builds new sbom components from the result: [a link] to keep existing bom-refs we should look for this one (if report.bom != nil) by name and save it. it matters for non-root and non-child components. if we don't want to use this logic i can see 2 options: 1. we don't keep intermediate bom-refs. because these ones are generated uuids. trivy still updates them for empty bom-refs. 2. we don't encode a result into a new bom report, and keep existing bom. just will add vuln fieldsl: sbom -> trivy -> the same sbom+ vulnerability list. wdyt? thanks",0,0.9873485565185547
2316844229,7340,DmitriyLewen,2024-08-29T06:53:06Z,"it matters for non-root and non-child components. i think we can try to use this way. but we need to save `operating-system` here: [a link] do you mean bomrefs for #2? [a link] just will add vuln fieldsl: sbom -> trivy -> the same sbom+ vulnerability list. i am not sure about this. this will be work with trivy reports, but we may see problem with sbom files from other sources.",0,0.9826024770736694
2316851799,7340,afdesk,2024-08-29T06:58:20Z,"yes, for `application component (/app/package-lock.json)`",0,0.993669331073761
2320510005,7340,afdesk,2024-08-30T08:41:20Z,could you take a look? thanks,1,0.9572692513465881
2348511017,7340,knqyf263,2024-09-13T09:43:02Z,i have refactored. can you please take a look?,0,0.992676317691803
2358136440,7340,knqyf263,2024-09-18T10:46:23Z,i reverted my changes. i'll open another pr.,0,0.9903143048286438
1930005048,6072,CLAassistant,2024-02-06T15:12:06Z,[a link] all committers have signed the cla.,0,0.9951004385948181
1930005055,6072,CLAassistant,2024-02-06T15:12:07Z,"[a link] thank you for your submission! we really appreciate it. like many open source projects, we ask that you sign our [a link] before we can accept your contribution. you have signed the cla already but the status is still pending? let us [a link] it.",1,0.9939326643943787
1931293973,6072,knqyf263,2024-02-07T05:08:04Z,looks good. can you please test it ?,1,0.9217042922973633
1931441567,6072,bedla,2024-02-07T07:32:15Z,"sure, i will take a look and make changes.",0,0.9860498309135437
1954949997,6072,bedla,2024-02-20T19:52:10Z,on my maven test project i have generated `integration/testdata/fixtures/sbom/license-cyclonedx.json` file with command `trivy fs --format cyclonedx --output result.json c:\users\bedla.czech\ideaprojects\sbom-demo`. mind that golden file `integration/testdata/license-cyclonedx.json.golden` has all licenses marked as `unknown`. with deeper investigation i found out that it is because my maven test project dependencies does not identify licenses using spdx license id. i did more deeper investigation because cyclone dx maven plugin is identifying license id at most cases correctly. what i found is that they use mapping file [a link] to find those license ids. i think that new pr should be created to implement similar concept like they do. what do you think?,0,0.9811335206031799
1955804849,6072,DmitriyLewen,2024-02-21T03:20:01Z,we already have mapping - [a link] but it looks like we need to supplement our map with pairs from `cycledx-core-java`.,0,0.9944714307785034
1973558566,6072,christiankofler,2024-03-01T17:05:39Z,"this is really a great improvement! just to be sure: will license scanning on sbom also work for spdx json with this pr? if not, this would be another great improvement for trivy.",1,0.9967557787895203
1975754982,6072,DmitriyLewen,2024-03-04T05:23:19Z,it should work for [a link],0,0.9952450394630432
1976141328,6072,knqyf263,2024-03-04T09:42:31Z,"do you have time to wrap it up? if not, we can take care of this pr.",0,0.9921912550926208
1976292973,6072,bedla,2024-03-04T10:46:16Z,"sorry, i was on vacations last week. i will finish it this week.",-1,0.9935585856437683
1987266027,6072,bedla,2024-03-10T15:17:08Z,"hi, i have force pushed new changes to my branch (sorry for delay). no thing to note is that it seems to [a link] has more heuristic capabilities then trivy has. so, i copied definition that i was sure that we can map to trivy definition - other i left intact.",-1,0.9773373007774353
1988002554,6072,bedla,2024-03-11T09:47:21Z,"ahh, sorry ... will fix it asap. (note: it is hard to work with `mage` on windows, and also for some reason first compilation after some time is super-super slow => from time to time i am trying to find root causes on my local machine)",-1,0.9939746260643005
1996596776,6072,bedla,2024-03-14T06:11:01Z,all the stuff should be fixed,0,0.9800451397895813
1997219273,6072,bedla,2024-03-14T11:20:02Z,"hmm, interesting that test is not failing on my local machine ... will check it.",0,0.7591379284858704
2001981323,6072,bedla,2024-03-16T13:03:56Z,"i have force pushed fixes, now it should be ok.",0,0.9440212845802307
2003395851,6072,bedla,2024-03-18T09:56:46Z,"you are welcome, i am happy to help :)",1,0.9955272078514099
2106650988,6674,knqyf263,2024-05-13T04:51:14Z,"i'm still writing a developer guide, but the implementation has been completed. i would appreciate your quick feedback.",1,0.9764878749847412
2106796937,6674,DmitriyLewen,2024-05-13T06:59:48Z,1 more thought: perhaps we want to add information that the plugin was installed successfully? currently: [code block],0,0.9934282898902893
2107159167,6674,knqyf263,2024-05-13T10:03:26Z,"thanks. it worked at the beginning, and got broken after refactoring. fixed in [a link]",1,0.9756059050559998
2107258687,6674,knqyf263,2024-05-13T10:52:24Z,done [a link],0,0.9950201511383057
2107259833,6674,knqyf263,2024-05-13T10:52:58Z,i've addressed your comments and completed the developer guide. this pr is now ready for review.,0,0.9175141453742981
2562434305,8178,nikpivkin,2024-12-26T10:51:57Z,i was thinking that we could download the compressed layer and then decompress it ourselves. i saw that [a link] is used for decompression. does it support all the compression types that `go-containerregistry` does?,0,0.988647997379303
2562506777,8178,knqyf263,2024-12-26T11:28:38Z,this is what was in my mind. [code block],0,0.9913149476051331
2562510998,8178,nikpivkin,2024-12-26T11:30:36Z,"then we can't display the progress bar correctly, because we don't know the size of the uncompressed layer.",0,0.9557183980941772
2562521036,8178,knqyf263,2024-12-26T11:35:19Z,can't we use the progress in ggcr? [a link],0,0.9962641596794128
2562525487,8178,knqyf263,2024-12-26T11:37:43Z,"if it doesn't work, we can use `layer.compressed`, inject the progress bar and re-implement uncompressed logic. [a link]",0,0.9943981766700745
2562983178,8178,nikpivkin,2024-12-26T17:45:05Z,"i kept the old behavior, if no flag is passed, to avoid unnecessary disk operations. but then the progress bar will be displayed only when the flag is passed. what do you think?",0,0.9826307892799377
2563379865,8178,knqyf263,2024-12-27T06:43:08Z,i got an idea. [a link],0,0.8335577249526978
2563381726,8178,knqyf263,2024-12-27T06:45:45Z,this might be better. [code block],0,0.9843019247055054
2563382997,8178,knqyf263,2024-12-27T06:47:39Z,even better [code block],0,0.622555673122406
2563383820,8178,nikpivkin,2024-12-27T06:49:01Z,"ok, i'll think about how to use this with the progress bar pool otherwise there is flickering in the terminal when loading in parallel",0,0.9852936863899231
2563386680,8178,knqyf263,2024-12-27T06:52:55Z,"actually, the progress bar should be discussed in [a link] i'll re-post it there.",0,0.994083821773529
2572831472,8178,knqyf263,2025-01-06T10:36:12Z,"btw, trivy also supports vm images. i'm unsure, but users may want to introduce the same functionality in the future. do you think we want to rename `--max-image-size` to `--max-target-size` or something like that? our vm scanning also targets vm ""images"". `--max-image-size` may be fine.",0,0.9830765724182129
2579276767,8178,DmitriyLewen,2025-01-09T06:34:53Z,"i think that `--max-target-size` will confuse users, because they will try to use this flag in `fs` mode. i think `--max-image-size` is good name. also i suggest to add this flag for vm scan in another pr.",1,0.534419059753418
2597585419,8178,knqyf263,2025-01-17T07:16:54Z,"i performed a quick test on azure, which has a stable network. the current approach (without `--max-image-size`) seems faster. i'm sure we'll get different results depending on the environment, though. [a link]",0,0.9429824948310852
2606363007,8178,knqyf263,2025-01-22T05:57:59Z,"once we update the document, we will merge this pr as it's experimental. we can change the behavior later.",0,0.99434494972229
1217982909,2589,knqyf263,2022-08-17T13:03:42Z,-keinan can you please review it?,0,0.9567617774009705
1218031520,2589,josedonizetti,2022-08-17T13:45:18Z,"-keinan i'm changing it currently, will be ready for review soon.",0,0.9470748901367188
1231234307,2589,CLAassistant,2022-08-30T07:02:28Z,[a link] all committers have signed the cla.,0,0.9951004385948181
1231234321,2589,CLAassistant,2022-08-30T07:02:30Z,"[a link] thank you for your submission! we really appreciate it. like many open source projects, we ask that you sign our [a link] before we can accept your contribution. you have signed the cla already but the status is still pending? let us [a link] it.",1,0.9939326643943787
1231275326,2589,josedonizetti,2022-08-30T07:44:16Z,-keinan can you review it? pls,0,0.9588766694068909
1232629012,2589,chen-keinan,2022-08-31T08:28:34Z,look good! added few comments,1,0.9933544397354126
1234454108,2589,chen-keinan,2022-09-01T15:38:14Z,could you please relate issue to it. - when running this (scan cluster for vuln only) command `trivy k8s --security-checks vuln --report summary cluster` i get no result. [code block] however when running the full cluster command i get complete result : ` k8s --report summary cluster` [code block],0,0.9932068586349487
1236020234,2589,josedonizetti,2022-09-03T01:31:13Z,"-keinan can you give it another try? i increased the report test coverage from 33% to 79%, which caught a few bugs including the one you mentioned above.",0,0.951191246509552
1236278704,2589,chen-keinan,2022-09-04T07:30:00Z,"lgtm :rocket: i would check if needed to update some documentation , [a link]",1,0.9843563437461853
1250178008,2589,josedonizetti,2022-09-18T02:33:28Z,"-keinan can you review? did the change to support `--components`. if you agree with the design/code i'll add documentation next (maybe in a follow up pr), just to be sure this is what we want before going deeper.",0,0.9848924875259399
1270480735,2589,josedonizetti,2022-10-06T18:02:46Z,-keinan i really would like this to land on the next release. let me know if anything is missing for the review.,1,0.8225632905960083
1274248694,2589,chen-keinan,2022-10-11T07:54:00Z,"looks good :rocket: , there is something strange experience wise when we run filter by workload we still get rbac results : [code block]",1,0.9633616209030151
1274250989,2589,chen-keinan,2022-10-11T07:55:44Z,is the `--components=infra / --components=workload` is not supported on specific resource scan ? [code block] result : ` ... fatal unknown flag: --components`,0,0.9887399077415466
1285903341,2589,josedonizetti,2022-10-20T17:24:18Z,"-keinan are you sure you had this branch compiled when you executed this command? because it is saying the flag doesn't exist, but the flag is global for `trivy k8s`. testing locally now, i see: [code block] [code block]",0,0.9630365371704102
1285905286,2589,chen-keinan,2022-10-20T17:26:11Z,"yes , i did run all tests on your branch , but i can check again",0,0.9918598532676697
1285906824,2589,josedonizetti,2022-10-20T17:27:42Z,"i thought this was the idea. i'm treating `workload` as everything that is not `infra`, as `rbac` isn't infra, it returns on the scanning. should it be different?",0,0.9852089881896973
1285934737,2589,chen-keinan,2022-10-20T17:54:13Z,"yes ,in a way , but it could be confusing. anyway it should not hold the pr , we can discuss it later",0,0.9357439875602722
1285938928,2589,chen-keinan,2022-10-20T17:58:11Z,lgtm :rocket: well done !!,1,0.994793713092804
1285944328,2589,josedonizetti,2022-10-20T18:03:32Z,follow up issues: - [a link],0,0.9953291416168213
1288133046,2589,josedonizetti,2022-10-23T15:03:37Z,exactly!,0,0.984325647354126
1288133934,2589,knqyf263,2022-10-23T15:07:35Z,"i feel like we may want to show what results each table is displaying. it currently says `summary report for minikube` for all the tables, and i didn't understand how those tables are different at first. for example, [code block]",0,0.9604871869087219
1288158871,2589,knqyf263,2022-10-23T17:22:55Z,the test is failing now.,0,0.5887795090675354
1196775423,2607,CLAassistant,2022-07-27T13:38:20Z,[a link] all committers have signed the cla.,0,0.9951004385948181
1196775449,2607,CLAassistant,2022-07-27T13:38:21Z,"[a link] thank you for your submission! we really appreciate it. like many open source projects, we ask that you sign our [a link] before we can accept your contribution. you have signed the cla already but the status is still pending? let us [a link] it.",1,0.9939326643943787
1196802332,2607,knqyf263,2022-07-27T14:01:24Z,hmm. we fixed it before. [a link] could you look into what causes?,0,0.9676694869995117
1196820711,2607,Moulick,2022-07-27T14:16:38Z,"my first thought was to add an if-else like [code block] which is like essentially reverting [a link] there are three sources of the version i see 1. if you simply do `go build ./cmd/trivy`, it defaults to dev. this produces a correct url for dev. 2. if you do `make build`, make take the version from `version := $(shell git describe --tags --always)`, but this also creates an incorrect url as this returns eg `v0.30.4-3-g4be15455` 3. if the build is produced by goreleaser, it strips the `v` and hence url is broken currently, i have fixed it for goreleaser, i can also fix it for makefile",0,0.9869013428688049
1197657013,2607,DmitriyLewen,2022-07-28T04:48:22Z,hello we have 2 cases: 1) binaries built with `goreleaser` don't have `v` prefix: [code block] 2) binaries built with `make build` have `v` prefix(looks like in [a link] used this case): [code block] i think we need to create same logic for both cases: add `v` prefix to `goreleaser` (as did) or remove `v` prefix from makefile and return this logic: [code block] i think logic of this pr better. upd. i built image with goreleaser. version number has `v` prefix. [code block],0,0.9864132404327393
1197765010,2607,knqyf263,2022-07-28T07:23:10Z,"it's no big deal, but it looks weird to me. `v` means `version`,so it is like `version: version 0.29.1`. what if we remove `v` here? [a link]",-1,0.9647613763809204
1197776244,2607,knqyf263,2022-07-28T07:35:21Z,and add `v` of course.,0,0.9941340088844299
1199002286,2607,Moulick,2022-07-29T08:12:54Z,"yes, doable. the documentation links will need to be updated to remove the `v` as well.",0,0.9786651730537415
1200361599,2607,knqyf263,2022-07-31T06:49:37Z,"could you fix it as below? 1. remove `v` here. [a link] 2. add `v` here as dmitriy suggested, considering `dev`. [a link]",0,0.9958121180534363
1200487620,2607,Moulick,2022-07-31T19:45:24Z,should work as expected now.,0,0.9764975309371948
1215001307,2607,knqyf263,2022-08-15T13:16:20Z,thanks for your great contribution and patience!,1,0.9861745834350586
1215011636,2607,Moulick,2022-08-15T13:24:37Z,i'd be curious about the comment i added above :thinking_face:.,1,0.859289824962616
1215033846,2607,knqyf263,2022-08-15T13:47:35Z,which comment?,0,0.9915905594825745
1215039526,2607,Moulick,2022-08-15T13:52:59Z,"i had added a review comment, i suppose github did not send a notification. attached a screenshot in case it's not visible for some reason :grinning_face_with_sweat:",1,0.9600332975387573
1215052778,2607,knqyf263,2022-08-15T14:05:38Z,"`aquasecurity/go-version` is already used directly, while hashicorp/go-version is an indirect dependency. also, we can easily modify that library as it is maintained by us.",0,0.9929642677307129
1586308104,4557,chen-keinan,2023-06-11T19:27:48Z,"review the `core component` properties, the above example is updated following to code changes",0,0.9952629804611206
1592445939,4557,chen-keinan,2023-06-15T06:32:22Z,comments has been addressed,0,0.9810514450073242
1596723833,4557,knqyf263,2023-06-19T08:15:24Z,the database is downloaded with kbom. is it intended? [code block],0,0.9958958625793457
1596728763,4557,knqyf263,2023-06-19T08:18:49Z,can we use the upper camel case (a.k.a pascal case) to get aligned with other properties?,0,0.9943997263908386
2260587409,7261,afdesk,2024-07-31T13:55:21Z,i think it's finally ready for review. could you take a look when you have free time? thanks,1,0.9886717796325684
2261893173,7261,afdesk,2024-08-01T03:31:02Z,there is an idea. i'll refactor it,0,0.9867995381355286
2262277508,7261,afdesk,2024-08-01T07:47:06Z,"my idea was wrong, so i've done some refactor and it's ready for review.",0,0.7838490009307861
2262974626,7261,afdesk,2024-08-01T12:57:13Z,your solution is moved here. ptal ),1,0.637712299823761
2401192962,7679,knqyf263,2024-10-09T03:24:24Z,"we should document how to authenticate with ecr. otherwise, ecr public has only 500 gb free tier for anonymous users. also, it's calculated by ip address. i suppose we'll run out of the free tier on ci service as it shares ip addresses.",0,0.9928001165390015
2401212854,7679,DmitriyLewen,2024-10-09T03:49:24Z,"i'm worried about adding `ecr` as the default registry. i think most users will ignore the authentication recommendation, and some users just don't read the docs. instead of adding `ecr` - i suggest adding warning if downloading db from `ghcr` returns error. we will show information about using `ecr` (with authentication information) + link to the docs.",-1,0.937972903251648
2403464594,7679,nvuillam,2024-10-09T21:31:01Z,we read the docs but... having to authenticate to aws would be a breaking change :face_holding_back_tears:,-1,0.9849420785903931
2403961270,7679,DmitriyLewen,2024-10-10T04:30:42Z,hello authentication is necessary to preserve aws limits for unauthenticated users as much as possible. but we don't require it. we just ask users to do it if possible - it will help avoid rate limiting errors like ghcr.io.,0,0.9912928938865662
2404119866,7679,simar7,2024-10-10T06:10:58Z,yes - i wanted to add more info on this topic. added [a link],0,0.9886345863342285
2404376752,7679,knqyf263,2024-10-10T08:06:07Z,"i'm also leaning toward this approach. i'm afraid that users downloading container images from ecr public (e.g., kubernetes cluster) may suddenly reach rate limits due to trivy db and be unable to deploy, etc. of course, it is best if users can continue to use dbs as before without being aware of it, but the implicit use of ecr public may have other negative effects. we should be careful about the use of ecr public. if users explicitly set this up, they will understand these trade-offs.",-1,0.6862160563468933
2418497252,7679,simar7,2024-10-17T04:55:24Z,yes but the same can be said for ghcr today. i added some docs [a link]. ultimately we can reach rate limits even with authenticated use of container registries. the fallback to using a secondary registry only mitigates the risk up to an extent.,0,0.9917287230491638
2418554434,7679,knqyf263,2024-10-17T05:46:42Z,"the rate limits in ghcr are on the organization, not the user, unlike ecr public. in other words, heavy use of ghcr may make aquasecurity images unavailable, but not other images. users may not be able to use trivy, but they will be able to pull any other images except aquasecurity.",0,0.9927787184715271
2428439172,7679,goatwu1993,2024-10-22T07:12:56Z,checks bundle also needs ecr. [code block],0,0.9955114126205444
2434783596,7679,bgoareguer,2024-10-24T09:37:11Z,the `trivy.dbrepository` parameter in the `helm/trivy/values.yaml` file also needs to be updated.,0,0.9953526258468628
2440651780,7679,afdesk,2024-10-28T06:21:26Z,thanks for the good idea. it should be add after the pr is merged and released.,1,0.9835099577903748
2440660860,7679,afdesk,2024-10-28T06:27:07Z,now trivy-db pushes the database to docker hub: [a link] maybe it makes sense to add docker hub as a default repository too? just idea. thanks!,1,0.9754785299301147
2472681302,7679,jeanmarcmoeckel,2024-11-13T07:24:41Z,any updates here?,0,0.9873329997062683
2477256831,7679,knqyf263,2024-11-14T19:36:04Z,`mirror.gcr.io` seems the best for our use case. please let us know if anyone knows about rate limits on that. [a link],0,0.8573904633522034
2478294047,7679,benji78,2024-11-15T09:08:08Z,i see 8 incorrect mentions of `public.ecr.aws/aquasecurity/trivy-db:1` which should be `trivy-java-db` !,0,0.8750919699668884
2482468366,7679,DmitriyLewen,2024-11-18T09:54:59Z,-bot backport release/v0.57,0,0.9895910620689392
1717004235,5154,nikpivkin,2023-09-13T06:10:15Z,i left a couple of small comments.,0,0.9725597500801086
1717136912,5154,knqyf263,2023-09-13T08:00:41Z,"i don't remember, but there might be a reason why we use groups. i'd defer to . he will be back next week.",0,0.9817584753036499
1722863727,5154,j1nka,2023-09-18T07:13:48Z,"thanks for the clarification! but i'm talking only about java projects and nothing else. it may happen that we don't get vulnerability data from sbom because sometimes we don't have ""group""",1,0.9916582703590393
1722880001,5154,DmitriyLewen,2023-09-18T07:28:01Z,can you share some example for this case? i am wondering where these apps store `groupid`. e.g. before #4674 we save `artifactid` + `groupid` in `name` field.,0,0.9900658130645752
1722893191,5154,j1nka,2023-09-18T07:38:42Z,sure! two examples above are the real sboms generated by different tools (not trivy),0,0.9579374194145203
1727277777,5154,j1nka,2023-09-20T08:57:09Z,"hi! sure. smth like that? thanks for your help and patience, dmitriy!",1,0.9958773851394653
1740452787,5154,j1nka,2023-09-29T07:41:42Z,hi! is there anything else i should to to merge this pr? thanks!,1,0.9948062300682068
1744553354,5154,knqyf263,2023-10-03T09:10:16Z,requested changes. we cannot merge the pr until approves it.,0,0.993123471736908
1385026451,3391,itaysk,2023-01-17T08:38:07Z,you're required as code owner,0,0.9955920577049255
1385028649,3391,knqyf263,2023-01-17T08:40:15Z,did we test this template? pr title must follow this convention. [a link],0,0.9958706498146057
1385062456,3391,AnaisUrlichs,2023-01-17T09:09:38Z,"it does not really fall under this any of those types tho :d will call it ""docs""",1,0.9917557239532471
1385358459,3391,knqyf263,2023-01-17T12:34:02Z,did either of you two confirm the template actually works in fork or another repository?,0,0.9952021837234497
1386916820,3391,AnaisUrlichs,2023-01-18T11:39:59Z,will do,0,0.9619618058204651
1386968850,3391,itaysk,2023-01-18T12:22:50Z,can you also please also add an optional field to provide a link to logo? maybe in the future we can create a page like this in the trivy website: [a link],0,0.994931161403656
1399506645,3391,AnaisUrlichs,2023-01-22T14:38:13Z,i made some changes and checked that the template works on my branch -- please let me know if you would like anything else to be changed,0,0.9064355492591858
2403943437,7690,afdesk,2024-10-10T04:25:59Z,could you take a look at this pr when you have time? i'm unsure about logs. maybe it's a bit confusing for people. also i can't reproduce #7684 with this update. wdyt? thanks a lot for your time.,1,0.9728771448135376
2404698272,7690,itaysk,2024-10-10T10:23:09Z,"cluster scanning can have many resources, and logging each individual resource scan is too much imo. we can make it a debug level log. good, that means you think it solved #7684 too?",0,0.7469470500946045
2404774511,7690,afdesk,2024-10-10T10:58:13Z,"thanks! i understood your point and agree with them. so i remove the log update from this pr, and will create a new one for logs only. i'm unsure, because i don't understand a reason of #7684. i'm investigating it now",1,0.9940696954727173
2415899532,7690,afdesk,2024-10-16T07:00:30Z,could you take a look at this pr again? thanks!,1,0.9727741479873657
2418545967,7690,afdesk,2024-10-17T05:39:50Z,"i finally clarify the reason of #7684 - the race condition appears between a few misconfig scanners, so this pr should resolve it too.",0,0.9690577983856201
2419017341,7690,nikpivkin,2024-10-17T09:23:45Z,left a couple small comments,0,0.9859603643417358
2423560304,7690,afdesk,2024-10-19T04:20:03Z,thanks for your review!!,1,0.8600257039070129
2426194261,7690,afdesk,2024-10-21T09:55:49Z,"thanks for your review. when tests are completed, i'll add this pr to merge queue, ok?",1,0.9523004293441772
2426231251,7690,knqyf263,2024-10-21T10:10:52Z,"sure. just fyi: there are many places where it still says ""folder"". [a link]",0,0.9816100597381592
917042715,1230,CLAassistant,2021-09-10T16:34:22Z,[a link] all committers have signed the cla.,0,0.9951004385948181
919982682,1230,afdesk,2021-09-15T12:40:14Z,"hi -engledew! thanks for your feedback! i'm studying this issue right now. the first moment: this pr changes only the driver's rule ids, and doesn't affect on results's `ruleid`.",1,0.995071291923523
920281904,1230,simon-engledew,2021-09-15T18:39:25Z,"hi ! :waving_hand: yes, quite right! sorry, i meant this as an illustration of how the issue could be resolved - not a complete solution. :person_bowing: if you are happy with this direction i can spend some more time trying to get the pr into a mergable state?",1,0.8229191899299622
921745728,1230,afdesk,2021-09-17T12:07:53Z,-engledew thanks a lot for your effort! it looks good and i don't see problems with these changes.,1,0.9947537183761597
921759262,1230,afdesk,2021-09-17T12:30:01Z,i'd add more information about scan into `shortdescription`.,0,0.9958280920982361
921762867,1230,afdesk,2021-09-17T12:36:11Z,-engledew i found a problem. simple `vulnerabilityid` may not be unique for scan.,0,0.9625785946846008
921768513,1230,afdesk,2021-09-17T12:45:37Z,i've created next folder `j`: [code block] and `trivy` creates the report with not unique ids.,0,0.9951153993606567
921876675,1230,simon-engledew,2021-09-17T15:13:32Z,"you'll need a rule for each type of vulnerability you are scanning for - each rule should have a unique identifier that is stable between scans. many results can share the same rule. results will create alerts that are associated with locations in files. in your example: [code block] there would be two results, both with the same rule. the first result would have a location of j/commons-io-1.4.jar and the second result would have a location of j/t/commons-io-1.4.jar. the vulnerability id being the same for different results allows grouping the results together based on vulnerability and allows the results of two scans to be compared.",0,0.9855416417121887
949898754,1230,krol3,2021-10-22T19:13:55Z,this issue is affecting the results that trivy-gh-action is showing. doesn't it?,0,0.6015194654464722
965487953,1230,simon-engledew,2021-11-10T16:07:37Z,hi folks :wave: any progress? trivy is starting to impact our service and we will have to start rejecting its submissions if this issue is not resolved. :disappointed:,-1,0.9957637786865234
965607927,1230,simar7,2021-11-10T18:10:29Z,"hi -engledew, i was just added to this thread to assist. we'll take a look at it and follow up. cc",0,0.9226983785629272
965878413,1230,simar7,2021-11-11T00:15:53Z,"hi again -engledew, this looks good to me. just one thing, if you could update the tests to reflect this behaviour then we should be able to merge it in. i tried to push to you branch but it seems i don't have access. but here's the diff: [code block]",1,0.891812264919281
965879034,1230,simar7,2021-11-11T00:17:02Z,and also if you could sign the cla that would be very appreciated.,0,0.4986523985862732
966114184,1230,simon-engledew,2021-11-11T09:08:31Z,"it wasn't quite there. as pointed out, the results needed updating. i've done that, then the next problem is that the rules need to be made unique by `vulnerabilityid` and the `ruleindex` needs to also reflect that. i've had a go at that too. :+1:",1,0.9803769588470459
966114565,1230,simon-engledew,2021-11-11T09:09:02Z,"i did. :disappointed_face: i'll try again. ok, that seemed to do it this time. :relieved_face:",-1,0.975559413433075
966228672,1230,afdesk,2021-11-11T11:31:52Z,hi -engledew! thanks for your contribution! it looks really great. i'm testing it now,1,0.9971269965171814
966345738,1230,simon-engledew,2021-11-11T14:27:06Z,does what i have done make sense for trivy? i guess my main concern with this approach is that the rules would have result-specific information in them because of the way trivy has a 1-1 mapping between results and rules at the moment.,0,0.9025015830993652
966363669,1230,simon-engledew,2021-11-11T14:50:08Z,"hmm :thinking_face: looking at the sample data more carefully, i think this is going to require a bit more work to resolve. i've altered the rule metadata so that it is also stable and applicable to all results. i've had to remove the help entirely as it contained information specific to a single result. if you want to reinstate this information it should really live inside results, e.g: the message field.",1,0.6085039377212524
966408052,1230,knqyf263,2021-11-11T15:45:06Z,"hi -engledew, i'm so sorry to be late. we're now putting the highest priority on it. could you fix the test?",-1,0.9941674470901489
966419069,1230,simon-engledew,2021-11-11T15:59:08Z,would it make sense to create a new pr based on this one? i feel like i am making decisions that would be better made by someone with more context about how trivy works. :person_bowing:,1,0.9538037776947021
966494306,1230,simon-engledew,2021-11-11T17:41:24Z,"ok `go test -v -tags=integration -run testclientserverwithtemplate ./integration/...` now passes. :person_bowing: sorry, i've been busy with other stuff all day and this is the first time i've been able to sit down and try and get the integration tests passing. :disappointed_face: it's the end of the day for me now so if this doesn't do it i am more than happy if you want to cherry pick my commits, make a pr that is not based on my fork and run with it without me.",-1,0.9552231431007385
966496498,1230,afdesk,2021-11-11T17:44:45Z,-engledew thanks for your time and effort!,1,0.9820458292961121
966538470,1230,simon-engledew,2021-11-11T18:43:12Z,thanks for bearing with me as i repeatedly tried and failed to fix the tests :grinning_face_with_sweat::red_heart::folded_hands:,1,0.9872288703918457
966828982,1230,afdesk,2021-11-12T05:20:42Z,-engledew you spent a lot of time. thanks again,1,0.9838452339172363
982332091,1230,afdesk,2021-11-30T06:40:05Z,"hi -engledew! could you help us again? several parts have been removed from the sarif template: `help` block and `pkgname`. it seems that was a mistake, right? thanks! [a link]",1,0.9940084218978882
982412417,1230,simon-engledew,2021-11-30T08:48:10Z,"ah, that's what i was refering to in this comment: [a link] the rule help has to be applicable to every rule with the same sarif identifier. it should contain some general text talking about the vulnerability and then result specific details should be included in the result object.",0,0.989484965801239
982600195,1230,afdesk,2021-11-30T12:41:57Z,-engledew thanks a lot. i missed this comment :(,-1,0.9955973029136658
1282185084,2951,chen-keinan,2022-10-18T10:41:05Z,"i have embedded `nsaspec.yaml` spec in code , its just for demo to be removed before merge",0,0.9948521256446838
1287870392,2951,itaysk,2022-10-22T17:59:40Z,-keinan can you please add something to the documentation?,0,0.9888705015182495
1287894445,2951,chen-keinan,2022-10-22T19:40:48Z,", i have added doc for `compliance/nsa` please review and feedback",0,0.9495843052864075
1288029466,2951,itaysk,2022-10-23T06:56:50Z,lgtm,0,0.9618706703186035
1288030153,2951,itaysk,2022-10-23T06:59:15Z,"this pr probably doesn't fully close issue #2919 thought, since it only adds nsa report as a single hardcoded report, it doesn't yet open up for *custom* reports as the original issue suggests.",0,0.9846979975700378
1288030585,2951,itaysk,2022-10-23T07:01:36Z,"if you agree i suggest you change the ""close"" directive to ""related"" or something like this. if you want to close an issue with this pr you can create another one just for nsa",0,0.9922917485237122
1288168292,2951,chen-keinan,2022-10-23T18:14:13Z,"ok , change it to `related` instead of `close` btw: the `nsa` is not hardcoded in `trivy` its coming part of spec api in defsec",0,0.9937061667442322
1552786170,4210,agomezmoron,2023-05-18T09:27:43Z,"hi , we fixed that in our pipelines internally and now the latest `bitnami/elasticsearch` container has the proper files in the `/opt/bitnami/elasticsearch/.sped-elasticsearch.spdx`. [code block] thanks!",1,0.9663745760917664
1552896348,4210,knqyf263,2023-05-18T11:06:24Z,great! thanks for updating! i'll be back to this pr next week and wrap it up.,1,0.9971613883972168
1570636782,4210,carrodher,2023-05-31T17:35:06Z,"hi, jfyi, the [a link] repo was made public",0,0.9617745280265808
2244382694,7206,knqyf263,2024-07-23T06:49:00Z,"`ubuntu-latest-m` is still down. i switched it to `ubuntu-latest` so i can confirm this pr passes all tests. it's all green now, and i marked this pr ready for review. i'll change it back to `ubuntu-latest-m` after github gets fixed.",0,0.8689300417900085
2227736606,7163,knqyf263,2024-07-15T05:43:35Z,"there is one discussion. technically, `toolchain` is not always used for compilation. if the local go version is newer than the toolchain version, go uses the local version. [code block] [code block] however, if the local version is older, the toolchain version is used for forward compatibility. [code block] they [a link] through `gotoolchain`, but i think it's too much. we can focus on the default behavior. do you think we should work in the same way?",0,0.9687740802764893
2227752888,7163,DmitriyLewen,2024-07-15T06:01:49Z,"hmm... i didn't look at that. in this case, i don't know how we can correctly determine `stdlib` version. we need to define the local version of `go`, but `goroot` is not a required env. this seems to be the same case as for the sdk in `dark`. we can only show a minimal version. let's start from default logic. we will handle gotoolchain ​​later if users need it.",0,0.8779460787773132
2227774190,7163,knqyf263,2024-07-15T06:22:18Z,"this is how govulncheck works. [a link] `go version` actually respects go.mod. [code block] [code block] but i'm still not sure this is a good approach. if the environment in which trivy is run is different from the environment in which the project is built, the vulnerability may be overlooked. also, people can be confused as a vulnerability may be detected or not detected even though they scan the same project.",0,0.7448465824127197
2227782940,7163,DmitriyLewen,2024-07-15T06:30:33Z,"i thought that we don't want to run other apps in trivy, even if it's `go`. in this case, users will need to check (or just be mindful) of many things when scanning `go.mod` file. e.g. version of my local `go` is not equal to version of `go` from our ci/cd. when i will scan `go.mod` => i can get a vulnerable binary (or i will need to scan binary again, but then why would i scan the `go.mod`)",0,0.9759460687637329
2227789102,7163,knqyf263,2024-07-15T06:36:12Z,"ok, it is better to use the toolchain version at the moment for reproducibility. since it's technically different from how the go version is selected for compiling a binary, we should document it.",0,0.9920328259468079
2227792173,7163,DmitriyLewen,2024-07-15T06:38:53Z,yeah. i will update docs.,0,0.9762176275253296
2227939836,7163,DmitriyLewen,2024-07-15T08:18:47Z,i updated docs. please take a look. you might want to add something.,0,0.7471307516098022
2330510749,7444,CLAassistant,2024-09-05T03:10:35Z,[a link] all committers have signed the cla.,0,0.9951004385948181
2331314871,7444,afdesk,2024-09-05T11:48:16Z,hi -gl thanks for the contribution! it's really nice and important. i left some comments about this pr. also i took a look at #5889 it seems we have to add more tests for these cases...,1,0.9966075420379639
2333672062,7444,smtan-gl,2024-09-06T09:39:23Z,any chance you might have context on this [a link]?,0,0.989231526851654
2339607085,7444,afdesk,2024-09-10T04:52:24Z,"if i understand correctly there is an option to create an image with several tags, so it should be a slice. [a link]",0,0.9934781789779663
2345759817,7444,smtan-gl,2024-09-12T09:35:11Z,"i've updated the pr, could you have another look please :grinning_face_with_smiling_eyes:",1,0.9825435280799866
2352032381,7444,afdesk,2024-09-16T05:13:41Z,"sure, thanks! i'll take a look",1,0.9906574487686157
2354827508,7444,afdesk,2024-09-17T08:05:34Z,-gl could you sign cla for a while? thanks!,1,0.98689866065979
2355164429,7444,smtan-gl,2024-09-17T10:07:50Z,", i've just signed it. thank you.",1,0.9887760877609253
2358209167,7444,afdesk,2024-09-18T11:25:03Z,"it's a breaking change, so we have to create a new discussion about it. like here: [a link] we'll do it after the pr is merged. just to remember about it",0,0.9623489379882812
2358244817,7444,afdesk,2024-09-18T11:43:39Z,"-gl also, i'm not sure that this pr fixes #5889...",0,0.9186163544654846
2358255511,7444,afdesk,2024-09-18T11:49:22Z,"-gl please, feel free to correct me if i miss something. i've run an empty minikube. and then i create a pod with 2 images in my test namespace: [code block] [code block] and try to scan this cluster with the update: [code block] metadata still contains only one record:",0,0.5521937608718872
2360090116,7444,smtan-gl,2024-09-19T06:22:14Z,", the bug [a link] occurs only with the `--report summary` configuration. in your example, you used `--report all` which [a link]. as such, there are 2 reports in the `resources` field, 1 for each of the scanned images containing only 1 metadata. when i run the command using `--report summary`: [code block] it [a link] into 1 consolidated report in the `findings` field, and you can see that there are 2 metadata for the 2 images. ![a link]",0,0.9631463885307312
2360260439,7444,afdesk,2024-09-19T07:58:25Z,exactly! thanks for clarify!,1,0.9936648607254028
2362578138,7444,smtan-gl,2024-09-20T02:22:17Z,thanks for reviewing the pr :grinning_face_with_smiling_eyes: may i know what's the next steps needed to have this pr merged?,1,0.9891090393066406
2362667554,7444,afdesk,2024-09-20T03:03:25Z,-gl thanks for your contribution again. it's a breaking change so let's wait feedback from another maintainers and community,1,0.9257867336273193
2372642748,7444,smtan-gl,2024-09-25T00:48:09Z,hi would you have an estimate on how long we need to wait for feedback?,0,0.9847971796989441
2373367418,7444,afdesk,2024-09-25T08:08:24Z,hi -gl there is a concern about this solution: how people associate the result with the metadata if it's n x n? wdyt about it? thanks!,1,0.9541465044021606
2373657787,7444,smtan-gl,2024-09-25T10:14:42Z,"thanks for the response . i thought we could match the vulnerability's `layer.diffid` with the metadata `diffids`, but i've realized that the `diffids` across multiple metadata entries might not be unique. would it make sense to introduce an `imageid` field to vulnerability? for your convenience, i've attached below a json report from a scan with changes from this mr. [a link]",1,0.9497702121734619
2382162717,7444,afdesk,2024-09-30T05:45:58Z,"-gl there are a few ideas. 1. suggests to have metadata and results per image. a sample json for a new field [code block] next ideas came from the point `summary` report basically is for reference and for table output. 2. disable json format for summary reports. people can summarize results by themselves. and maybe someone will create a plugin for it. 3. pods are the smallest deployable units of computing that you can create and manage in kubernetes. so if we say pod is a single object, and we don't distinguish image. and then the current approach is fine. wdyt -gl ?",0,0.8999454975128174
2387536013,7444,smtan-gl,2024-10-02T02:59:03Z,"thanks for the response . i agree with your points. however, i assume that there are other users who already rely on summary report in json format, so disabling it might affect them. for that reason, i support moving forward with approach 3.",1,0.9769978523254395
2410998564,7444,afdesk,2024-10-14T11:56:06Z,-gl just small update that i didn't forget about your job. i hope we'll resolve it before next release. thanks again,1,0.9872637391090393
1696938128,5059,CLAassistant,2023-08-29T07:45:17Z,[a link] all committers have signed the cla.,0,0.9951004385948181
1696938153,5059,CLAassistant,2023-08-29T07:45:18Z,"[a link] thank you for your submission! we really appreciate it. like many open source projects, we ask that you sign our [a link] before we can accept your contribution. you have signed the cla already but the status is still pending? let us [a link] it.",1,0.9939326643943787
1697005137,5059,thapabishwa,2023-08-29T08:33:44Z,"hi -keinan. thanks for your swift response. i have concerns about adding these changes to the `trivy-kubernetes` repository, as it might introduce complications. the proposed approach seems to involve blocking/filter all objects without granting control to the end user, which i believe is a crucial aspect. for instance, if these changes are integrated into `trivy-kubernetes`, the output might resemble the following (unless i modify the signature of listartifact function): [code block] however, by choosing to retain the new flag, complete control is handed over to the end user, enabling them to decide what to scan for: - without any filtering [code block] - or, with the filter [code block] please let me know your thoughts on it.",1,0.9715020060539246
1697036941,5059,chen-keinan,2023-08-29T08:55:51Z,the flag remain in trivy cli however trivy should be aware to k8s internal notions for example : `ownerreferences` one way to do it is to introduce `options` pattern to client (in trivy-kubernetes project) see below: [code block] once you have the flag in client its easy to include you functionality and also will help us in the future to introduce additional options,0,0.9948516488075256
1697102309,5059,thapabishwa,2023-08-29T09:38:55Z,"thank you, -keinan. i've understood the advantages of adding this changes into the `trivy-kubernetes` repository instead. i will send a pr to that repository and once it's approved and merged i will then proceed to update this code once my work there is finished. thank you for your prompt reply.",1,0.98527991771698
1697123228,5059,thapabishwa,2023-08-29T09:52:55Z,-keinan pr on `trivy-kubernetes` repo [a link] pulling it here as i cannot add reviewers on that pr.,0,0.9459885358810425
1697237193,5059,chen-keinan,2023-08-29T11:10:19Z,pr has been approved and merged. you can use this tag `v0.5.7-0.20230829110855-969eb077ad1c` to replace `trivy-kubernetes` in `go.mod` file. ***note:*** you'll need to update cli docs after adding new flag :: use this command : `mage docs:generate`,0,0.9846386313438416
1697446266,5059,thapabishwa-plerionaut,2023-08-29T13:27:19Z,thanks -keinan. upgraded `trivy-kubernetes` to `v0.5.7-0.20230829110855-969eb077ad1c` and refactored existing code accordingly. please let me know what you think about it.,1,0.9659382700920105
1697583428,5059,chen-keinan,2023-08-29T14:42:11Z,"fyi your pr is depend on #5058 as `trivy-kubernetes` dependency you used also picked up changes for #5050 pr , this the reason k8s integration test failing",0,0.9904381632804871
1697671172,5059,thapabishwa,2023-08-29T15:28:35Z,thanks -keinan . appreciate your feedback. i've addressed to the comments you've made. any suggestions to get the k8s integrations fixed so that this pr can be merged without depending on #5058 .,1,0.9946720004081726
1697703245,5059,chen-keinan,2023-08-29T15:42:46Z,"i'm do not think it can be merged before #5058 as changes to trivy-kubernets lib will impact trivy k8s functionality , fixing the integration test will still keep trivy broken. no worries merge will happen soon :)",1,0.9908379912376404
1697885462,5059,thapabishwa,2023-08-29T17:48:48Z,"-keinan i took some time to rethink the changes made to the `trivy-kubernetes` repository in [a link] in the current implementation, resources are skipped just if they have ownerref. i think, this exclusion criteria might not be optimal as resources can be owned by custom resources(like crds). as a consequence, i think it is more sensible to exclude only the resources that are owned by built-in workloads. i've created another pr in `trivy-kubernetes` to address the short comings [a link] please let me know what you think about it.",0,0.6239689588546753
1698512643,5059,thapabishwa,2023-08-30T05:24:14Z,thanks -keinan. could you also take a look at [a link] i think it might be beneficial for us to consider [a link] pr before merging the current one.,1,0.9397698044776917
1698519101,5059,chen-keinan,2023-08-30T05:32:03Z,"approved and merged , please update trivy-kubernetes version to `v0.5.7-0.20230830053006-95e88d51f82b` on go.mod file",0,0.9854353666305542
1698557368,5059,thapabishwa,2023-08-30T06:18:33Z,"hey -keinan. sorry, i made some mistake on last pr to`trivy-kubernetes` library. please take a look at this pr and let me know what you think about it. [a link]",-1,0.9821208119392395
1698576908,5059,chen-keinan,2023-08-30T06:33:10Z,new tag for trivy-kubernetes: `v0.5.7-0.20230830063136-fe986af3f10f`,0,0.9913777112960815
1698582804,5059,thapabishwa,2023-08-30T06:39:03Z,-keinan thanks a lot. appreciate your support and patience while i addressed the mistakes i made. it means a lot. updated `go.mod` to new tag.,1,0.9918892979621887
1700356616,5059,thapabishwa,2023-08-31T04:40:34Z,rebased onto main to resolve `go.mod` and `go.sum` conflicts.,0,0.9941068887710571
1700599417,5059,chen-keinan,2023-08-31T08:33:18Z,please rebase your branch with upstream and k8s integration test issue will be fixed,0,0.9938796758651733
1700627629,5059,thapabishwa,2023-08-31T08:50:50Z,thanks -keinan . i've rebased the branch onto latest main.,1,0.9456981420516968
1700746261,5059,thapabishwa,2023-08-31T10:06:00Z,-keinan . i've addressed to all the comments. please let me know once this is merged.,0,0.8811935186386108
1700765063,5059,knqyf263,2023-08-31T10:17:58Z,thanks,1,0.8643599152565002
2044387371,6357,dus7eh,2024-04-09T08:03:31Z,updated all mentioned issues,0,0.987191915512085
2071482521,6357,knqyf263,2024-04-23T06:11:17Z,it sounds like we need to parse `conanfile.txt` to identify direct dependencies. please correct me if i'm wrong.,0,0.9803141355514526
2071614090,6357,DmitriyLewen,2024-04-23T07:27:33Z,lockfiles v2 doesn't contain info about child dependencies: e.g. for [a link]: [code block] so it won't help users much. but `conan` supports `graph` - [a link] example [code block] looks like we can parse cache dir - i do this for licenses in #6329. we will then need to parse `conanfile.txt` to detect direct dirs. but user can use `conanfile.py` instead of `conanfile.txt` ([a link] but if i understand correctly - `conanfile.txt` is toml file. so parse will not be a problem and we can add parse of it. can you share your experience - how often do users use `conanfile.txt`?,0,0.9873093962669373
2071742197,6357,dus7eh,2024-04-23T08:39:34Z,"it's hard for me to tell which is the preferred way of working with conan. this depends a lot on a specific usecase. for simple library consumers `conanfile.txt` would be the way to go. however, if you're trying to perform some builds to diferent targets, apply configuration validation logic, or create a package yourself then you should be picking `conanfile.py`. here's a sample [a link] about the flexability that the py script brings. best would be probably to leave handling of the dependency graph to conan itself (via `conan graph info -f json .` command) not to rewrite the same logic in trivy ([a link]. although, this would put a necessity of having `conan` as a dependency or put a requirement for the user to have it preinstalled in the env where trivy is used.",0,0.9618580937385559
2071852886,6357,knqyf263,2024-04-23T09:34:47Z,we wouldn't go down this way. [a link],0,0.9216808080673218
2073979288,6357,DmitriyLewen,2024-04-24T03:59:51Z,"i did some research, and found some difficulties with parsing cache directory to detect child deps: it looks like only `conanfile.py` fileы contain info about child deps: [code block] `conanfile.py` contains child deps in [a link] field. but `conanfile.py` is python file. so we can see: - functions - [a link] - conditionals - [a link] - requires for other components - [a link]",0,0.9553150534629822
2074199284,6357,knqyf263,2024-04-24T06:50:05Z,"so, do you think it's hard to support the dependency graph for conan v2 lock files? if so, we can merge this pr and work on the dependency graph later.",0,0.9929682612419128
2074210426,6357,DmitriyLewen,2024-04-24T06:57:22Z,let's do this because it looks like it can't be done using go :disappointed_face:,-1,0.9957218170166016
2082092221,6357,dus7eh,2024-04-29T07:54:33Z,i'm all for that if i have anything to say :) graph can be dealt with independently giving some basic support to conan v2 sooner than later.,1,0.9953567385673523
2082390205,6357,knqyf263,2024-04-29T10:37:29Z,thank you guys!,1,0.9828066825866699
2286991462,7339,CLAassistant,2024-08-13T19:36:39Z,[a link] all committers have signed the cla.,0,0.9951004385948181
2286991465,7339,CLAassistant,2024-08-13T19:36:39Z,"[a link] thank you for your submission! we really appreciate it. like many open source projects, we ask that you sign our [a link] before we can accept your contribution. you have signed the cla already but the status is still pending? let us [a link] it.",1,0.9939326643943787
2310526173,7339,michael-a-shelton,2024-08-26T15:48:48Z,i left a comment on the discussion but will leave it here in hopes to get some feedback. can we use a ccla instead of icla? this contribution is on behalf of jpmorgan,0,0.9137888550758362
2316155292,7339,brooklynrob,2024-08-28T20:04:55Z,i am the cla at approver jpmc and -a-shelton is approved to contribute on our behalf. it appears you have an icla that you use as a form of ccla? is that correct?,0,0.9823564291000366
2316392266,7339,simar7,2024-08-28T23:13:42Z,cc,0,0.9699252247810364
2334256944,7339,itaysk,2024-09-06T15:02:59Z,if you want to do ccla please send an email to oss.com,0,0.9878366589546204
2342043296,7339,michael-a-shelton,2024-09-10T21:29:34Z,"any chance for a review for approval on this? would like to either close/merge this, or adjust any final feedback you may have.",0,0.9780600666999817
2342638092,7339,knqyf263,2024-09-11T05:11:49Z,"sorry, i thought it was about misconfigurations, so i left the review to and and didn't look at it. imho, it should be done [a link]. there is [a link] about whether it should be an exact match or a range, for example, but this depends on the user. also, other users may want to filter by other fields in the causemetadata. i think that it is not practical to cover all of those use cases in the ignorefile.",-1,0.9636093974113464
2343777574,7339,michael-a-shelton,2024-09-11T14:06:22Z,"rego is a syntax that a lot of engineers are not familiar with. we are intending to drop this into dozens and dozens of repositories and asking 50-75 engineers to use it. adding lines to a config file is a far smaller learning curve than adding in/maintaining rego, project to project, engineer to engineer. by not having line configurations in an ignore file, you're actually producing false findings by ignoring entire rulesets for an entire scan, when it should be more explicit (or at least allow that level of granularity). specifically, for helm template configuration checks example; it could have two deployment manifests, one that has privileged containers and one that does not. not having a line enforcement on the ignore file would ignore that rule across both entirely when it should not, and allow privileged containers where it was not intended on a configuration check.",0,0.8732564449310303
2344122185,7339,knqyf263,2024-09-11T16:25:47Z,"once someone writes a simple example, others in your organization can copy and tweak it. actually, the line-based filtering can be written within 10 lines. [code block] you can even write the line range as below. [code block] as described above, line-based filtering is not expensive to learn and ultimately gives you more flexibility. for example, engineers in other teams may want to filter by the service name. [code block] while i agree that the learning cost of rego is high (in fact, i'm always struggling with rego), i believe it is low for this case as it simply accesses each field of the json, like `jq`. adding richer examples [a link] may help. , what do you think? the above rego is simple enough for me, but if you both consider adding this support to `.trivyignore` makes sense, i'm open to it. i just left my thoughts. yes, i understand the use case, but many demands exist, and it is difficult to address them all in the ignore file. `.trivyignore` is assumed to be used for simple filtering only.",0,0.9143328666687012
2344687664,7339,simar7,2024-09-11T20:57:06Z,"your examples have made me rethink this. to be honest -a-shelton if you still think we should add your changes for any reasons not addressed above, please do let us know. i do think to 's point that in this particular case rego is in fact not that hard to write plus is more flexible. at the same time, i don't want to be a gatekeeper for a change if it has a valid reason to exist. also to 's point about adding examples such as this is a great idea. this isn't the first time we've received a request to have more granular control over ignores and i feel with rego's flexibility, we could add more insight into how to tackle such cases. as an example, we've re-written our own checks in rego so there's a lot more examples to learn from. see [a link]. is on leave at the moment but once he's back, i'd like to hear from him as well on what he has to say.",1,0.9782852530479431
2344885970,7339,michael-a-shelton,2024-09-11T23:10:49Z,"i do not think rego solves my issue. rego is inherently hard to get engineers to learn, especially those who do not work with it regularly. it would be difficult to scale to some of our needs. for example, one chart has 200 ignore rules in the ignore file that we run, when using the granular control. this is a cncf oss chart and not our own. doing that in rego would be unwieldly and unfriendly to those not familiar with rego itself. that is one chart out of the 40-50 we're pushing. the config file approach is in line with other linters (which is essentially what the misconf is for us, here, for helm templating). it is important to us to try to avoid additional cognitive load on engineers, and staying to the same pattern of maintaining config that is the standard across most tools in the space is ideal. already managing linters for go, python, terraform, markdown, etc, it is a pattern that has no learning curve. i also think the ignorefile concept for misconf is inherently broken without the use of explicit lines. so, it is not so much a feature as it is a potential bugfix. for example; running the misconf scan against a template that has clusterroles. ksv048 flags over privileged cluster roles, however there is a need for the crud verbs on one of the admin roles. by simply adding ksv048 to the ignore file, it is now essentially disabling that rule for the admin role and other possibly read-only roles in the same file. this is a security risk. by stating we only want to ignore ksv048 for lines 9-14, it will still be enforced on the read-only clusterrole. we could split this into separate files for this scenario, however we have seen this same pattern a lot in upstream oss components and we try to avoid manipulating those and deviating from upstream. i realize the yaml ignorefile is experimental, but it is something we would like to use. the other alternative would be creating a rego wrapper and loading the yaml config ourselves and parsing it in rego, which i would like to avoid doing.",0,0.5654182434082031
2345310346,7339,knqyf263,2024-09-12T05:33:38Z,"exactly. ignoring by line number exact matching is necessary in this case, but other users have other needs. ah, i forgot about it. i'd like to hear his thoughts as well. if you are limiting yourself to a specific application (e.g., line-based filtering), there is no need to learn rego syntax. simply modify the line numbers in the sample i wrote. these two files are almost the same. [code block] [code block] what is the difference for you? debugging rego can be difficult if it does not work as expected, but so is yaml. without reading the source code, it is impossible to understand how `.trivyignore.yaml` is processed. like said, i am not opposed to adding the feature if there is a good reason. i'm just trying to understand what is preventing you from using rego.",0,0.95744788646698
2346103531,7339,michael-a-shelton,2024-09-12T12:04:29Z,"it is managing code versus managing config. code has significantly more overhead with it in regards to tlm. it is also quite a bit more verbose and more prone to error. for a one off scenario, i agree the rego approach is fine. at scale and longevity is where issues may start popping up. opa v1 changes are an example here; this does not fit that syntax and would break when required/moved to it. also, if causemetadata or any part of that struct changes, all of the rego now becomes invalidated. one chart out of the many we work with has over 200 entries for an ignore file. id, start_line, end_line, statement. that is 800 lines, which is a lot in it's own right. however, moving that to rego now becomes 1200 lines (adding the lines for the ignore block and the spaces before/after). sure, we could write more advanced rego to eliminate duplication of ignore blocks per id and handle the sets of lines, but that gets back into managing and requiring engineers now to understand sets/comprehension etc in rego. let's now take that number and multiple it times the amount of charts we're managing of 40-50, and you see how quickly that becomes unmanageable. now, not every repo has 200 entries, but lets use that number and extrapolate... thats 48k lines of rego that now have to be managed. should a change to causemetadata struct happen, or the flip to opav1 syntax, a config file is abstracted away from those changes and would not require any uplift. the rego approach would require alterations to 48k lines of uplift.",0,0.930147647857666
2346282122,7339,knqyf263,2024-09-12T13:26:30Z,"this sounds like the opposite argument to me. as the operation scales, yaml becomes inadequate, and more flexible filtering is needed. this is actually what we have seen over the years. a comparison with regard to the line number would help the transition to rego more, although i don't think it is meaningful. as you also mentioned, rules can be written in short as follows. [code block] if there are 200 rules, yaml will result in 800 lines, whereas rego will only require 210 lines. if there are 50 repositories, with yaml it is 40k lines, but with rego it is about 10k lines. however, again, a comparison of line numbers doesn't make sense to me. opa v1 changes make sense, but it can also happen in trivy's ignorefile. as you probably know, trivy used to have `.trivyignore`, but needed to introduce `.trivyignore.yaml` for more flexibility. furthermore, `.trivyignore.yaml` is still an experimental feature that is subject to breaking changes. we try to minimize such change, but sometimes it is unavoidable. it may not be correct to assume that a change in `.trivyignore.yaml` is less disruptive than one in rego. i assume that opa is not yet stable as it is below v1, which is why breaking changes will be made at the time of becoming v1, but it is expected to be stable after reaching v1. also, for migration to the new syntax, [migration methods are supported]([a link] ) at language level, such as `opa fmt --refactor-local-variables`. if changes are made to `.trivyignore.yaml`, it is difficult to provide such functionality. in conclusion, our policy is to recommend rego for more advanced filtering and implement it in `.trivyignore.yaml` for the basic filtering that most people need. otherwise, we end up implementing very complex logic in `.trivyignore.yaml`. should know more about how much need there is, so i'd defer to him.",0,0.9439154863357544
2604270703,8244,knqyf263,2025-01-21T10:14:17Z,i tried to reduce duplicates in [a link] but please correct me if i'm missing something.,0,0.9709190726280212
2606463790,8244,DmitriyLewen,2025-01-22T07:15:33Z,i always forget that i can use generics :( great implementation :thumbs_up: lgtm,-1,0.9777002930641174
2606509406,8244,knqyf263,2025-01-22T07:45:38Z,"i'm not a big fan of generics as it complicates things, but we can use it in simple cases.",-1,0.4964253902435303
938505508,1287,czunker,2021-10-08T09:48:42Z,"i also tried to create a httpclient with the new transport config, but that didn't work out: [code block] only the change to the defaulttransport fixed the tls verification failure. in case you have an idea or a pointer, i'd be glad to give it a try.",1,0.9017678499221802
988538676,1287,knqyf263,2021-12-08T06:32:21Z,hmm. it should work. could you describe how it didn't work?,0,0.9531401991844177
988687232,1287,czunker,2021-12-08T10:27:59Z,"when i remember correctly, i still got verification errors. but, i can try to reproduce it in the coming days.",0,0.977088987827301
990681069,1287,czunker,2021-12-10T07:26:52Z,"it turned out [code block] actually worked. changing the `defaulttransport` made it work accidentally. the x509 error, i experienced, wasn't thrown by the rpc client, but by the remote cache client. adding the `trivy_insecure` also to the cache remote client resolved the problem. so, no need to change the `defaulttransport`. the new commit changes this and also adds tests for both clients.",0,0.9766270518302917
1009632540,1287,czunker,2022-01-11T06:17:30Z,just rebased the branch. could you please have a look again?,0,0.9941281080245972
1028770998,1287,knqyf263,2022-02-03T09:18:49Z,i'm sorry for the late reply. i was busy on [a link]. i have some time for a while and want to wrap up this pr. could you please resolve conflicts first?,-1,0.9913952946662903
1029641911,1287,czunker,2022-02-04T05:18:28Z,rebased and resolved conflicts.,0,0.9877930283546448
1037962766,1287,knqyf263,2022-02-13T09:34:42Z,thanks a lot!,1,0.9748498201370239
1048040955,1756,CLAassistant,2022-02-22T17:31:41Z,[a link] all committers have signed the cla.,0,0.9951004385948181
1048198199,1756,krol3,2022-02-22T20:47:52Z,"thanks for your contribution, do you think that you could update the documentation about how to use it, some screenshots about the report will be nice to have in the documentation too. [a link]",1,0.9765151739120483
1048699368,1756,natefive,2022-02-23T11:46:01Z,"hi i'll add some screen shots in a bit i just would like to discuss the template further first :) at present the gitlab-codequality.tpl template will set the package name and version as the path for vulnerabilities (cve's) [a link] whilst this is more useful when doing an image scan because the target [a link] is just the image name e.g. `aquasec/trivy (alpine 3.15.0)` when scanning trivy, this is however not as useful as it could be when doing filesystem scan as in this scenario the `.target` key is able to point to the exact file the vulnerability (cve) originates from e.g. a pip file and you can then click on it in the gitlab ui to take you to the file. to try to get the best of both, should i: 1. always set path to $target for vulnerabilities (cve's) but include the package name and version in the description 2. try to get the `artifacttype` field exposed to the report templating logic then use this to create conditions - at present the untemplated json report includes an `artifacttype` field (see code block below) which lets you know if the report is from an image or file system scan however the templating fuction only knows about the contents of the results array. see error: ""output template"" at <.artifacttype>: can't evaluate field artifacttype in type report.results"" 3. create a separate template for filesystem scans [code block]",1,0.9932488203048706
1055485400,1756,natefive,2022-03-01T14:10:34Z,would i be able to get your thoughts on the above ^? :),1,0.9915531277656555
1056855705,1756,knqyf263,2022-03-02T12:06:46Z,"to be honest, i've never used gitlab code quality, but it seems to be associated with the project's files. i feel like we should use `path` for file paths. #1 looks good from that perspective.",1,0.9549993276596069
1056981848,1756,natefive,2022-03-02T14:20:03Z,"i've added screen shots to make it clearer :) at present (master) we get the severity, cve id and title in the description and package name and version in the path for cve's when doing an image scan using the gitlab code quality template: ![a link] and the same again for cve's when doing an filesystem scan using the gitlab code quality template: ![a link] after implementing option 1: always setting path to $target for vulnerabilities (cve's) but include the package name and version in the description the package name and version would be moved the the description (taking suggestions on what separators to use) and the path would output the docker image path (making it abit easier to manually find the source of the cve) ![a link] n.b redacted part of the image path hence the blank bits however this would greatly improve the output of cve's picked up by filesystem scans as the report can then link you to the file where the cve originates ![a link] n.b redacted part of the file path hence the blank bits",1,0.9942476749420166
1057993674,1756,knqyf263,2022-03-03T12:28:09Z,thanks for the detailed explanation. it looks good.,1,0.9840916991233826
1058130488,1756,natefive,2022-03-03T15:02:08Z,"added a screen shot of the expected output when using the template to the docs, let me know if you want me to crop the screen shot further :) thanks",1,0.9914425015449524
1058163186,1756,knqyf263,2022-03-03T15:34:24Z,"thanks, but the link seems to be broken. you can see the doc by running `make mkdocs-serve` and visiting [a link] also, you can refer to other places. [a link]",1,0.7499750852584839
1058251927,1756,natefive,2022-03-03T16:48:30Z,"it works [a link] and locally via mkdocs, i think it's broken when viewing in rich diff mode in the files changes ui because it's trying to look in the main branch -> [a link] which is 404",0,0.9751911759376526
1059102676,1756,natefive,2022-03-04T12:02:30Z,fixed failing integration tests - [a link] by updating the expected output [a link],0,0.9945194125175476
1059913358,1756,knqyf263,2022-03-06T07:49:51Z,we use mkdocs and it must work here after building the doc. you don't need to care about how it looks like on github. [a link],0,0.9936926364898682
1059914818,1756,knqyf263,2022-03-06T08:01:39Z,"oh, i missed you said it worked locally via mkdocs. let me check it again.",0,0.9653132557868958
1059915551,1756,knqyf263,2022-03-06T08:06:24Z,"again, it doesn't work. the path seems to be wrong.",-1,0.7276106476783752
1060605591,1756,natefive,2022-03-07T11:51:10Z,ahh you're right apologies i'd not pushed the extra `../` - i've pushed it now,0,0.9281671643257141
1063133139,1756,natefive,2022-03-09T16:49:09Z,"can someone kick the tests off, approve and merge this if you think it's ready :) thanks the tests had already run successfully once, but i've had to rebase because the main branch has been updated",1,0.9946488738059998
1069119234,1756,natefive,2022-03-16T13:18:16Z,- by the time someone responds to run the tests or approves the pr my branch becomes out of sync with main :( try again please?,-1,0.9958735108375549
1069137937,1756,natefive,2022-03-16T13:35:58Z,"not sure if one of you triggered the tests, but they're done and ready for approval :) thanks",1,0.9956448078155518
1069427336,1756,natefive,2022-03-16T18:29:24Z,seems odd that you want me to include the proposed changes from someone else's pr in this one? shouldn't you be letting me merge and then asking other pr author to rebase so they can add it where relevant,-1,0.7050246000289917
1069793268,1756,krol3,2022-03-17T00:58:13Z,", i was trying to tell you, is that you'll probably need to do a remerge. i will focus on reviewing your pr",0,0.9365295171737671
1070839584,1756,natefive,2022-03-17T12:01:21Z,ahh okay sorry didn't see there mr had already been approved :) i guess i'll wait for them to merge,-1,0.9627000093460083
1071111689,1756,knqyf263,2022-03-17T17:16:42Z,merged #1801,0,0.9905992150306702
1073801872,1756,natefive,2022-03-21T11:51:49Z,rebased to include the ci env var changes,0,0.9947431087493896
1080684385,1756,natefive,2022-03-28T13:55:21Z,rebased again :(,-1,0.8698525428771973
1081921918,1756,natefive,2022-03-29T14:10:56Z,are either of you authorised to merge :) ty,1,0.9714587926864624
1083243791,1756,knqyf263,2022-03-30T14:55:18Z,thanks!,1,0.8631753921508789
2202259951,7039,knqyf263,2024-07-02T08:08:30Z,can you create an issue so we can add it to the [a link]?,0,0.9957536458969116
2202380618,7039,DmitriyLewen,2024-07-02T08:58:42Z,created #7079,0,0.9923179149627686
2238236655,7039,DmitriyLewen,2024-07-19T05:36:51Z,i updated pr according to notes if you don't have any suggestions - i think we can merge this pr.,0,0.972815990447998
2313044372,7039,ericstj,2024-08-27T16:39:27Z,it looks like this might not be working correctly. we're still seeing reports of this when using the latest trivvy 0.54.1. is there a way to get some diagnostic information out of trivvy to see why it's still flagging vulnerabilities here?,0,0.9759008884429932
2313927168,7039,DmitriyLewen,2024-08-28T01:47:31Z,"hello trivy has `debug` flag, but i'm not sure if it will help you. it seems like one way is to use the ide debugger to step through it. or you can send me a test file and i'll check it.",0,0.9143877625465393
2316007329,7039,ericstj,2024-08-28T18:30:56Z,"the command i was trying was this: `docker run -it aquasec/trivy:0.54.1 image mcr.microsoft.com/dotnet/sdk:8.0 --scanners vuln --vuln-type library --debug` it reports a vulnerability in system.formats.asn1, however all files present are updated. i believe it's still seeing mention to the older package versions in deps files, however i believe all those deps files should have empty targets sections. if i search the container for any other copies of this file, i do see one in powershell, but that's also of sufficient version to not trigger.",0,0.9813551306724548
2316807411,7039,DmitriyLewen,2024-08-29T06:25:55Z,hello i found file with `system.formats.asn1`dependency trivy found this file from spdx file: [code block],0,0.9897974729537964
2318087748,7039,ericstj,2024-08-29T15:20:38Z,"oh, that's interesting. it's an sbom from powershell. it's another false positive since they aren't actually shipping that binary. i'll follow up with them to see if it's a problem they can fix. thank you for your help. is there any trick to getting the map of components out of the scanner or more logging out of the scanner?",1,0.9789536595344543
2319990924,7039,DmitriyLewen,2024-08-30T04:17:50Z,`json` format + `'--list-all-pkgs` flag shows all detected packages.,0,0.9951867461204529
2322162800,7039,ericstj,2024-08-30T18:58:32Z,"perfect, thank you!",1,0.9953058362007141
1059992030,1799,CLAassistant,2022-03-06T16:18:34Z,[a link] all committers have signed the cla.,0,0.9951004385948181
1076848589,1799,knqyf263,2022-03-23T21:42:26Z,thanks,1,0.8643599152565002
1077277897,1799,hazcod,2022-03-24T06:21:39Z,thank you !,1,0.9702473282814026
1426865838,3599,CLAassistant,2023-02-11T20:03:05Z,[a link] all committers have signed the cla.,0,0.9951004385948181
1428509101,3599,aswath-s-tw,2023-02-13T19:12:28Z,"hey , thank you so much for suggesting changes. have tried my bit in improving the code as per the mentioned suggestions. please take a look at it and let me know ! thanks again.",1,0.9953311085700989
1429499239,3599,aswath-s-tw,2023-02-14T10:35:15Z,not sure why the windows section in pipeline failed. any ideas on this ?,0,0.8013240098953247
1429579110,3599,aswath-s-tw,2023-02-14T11:28:04Z,"i think i got it, for windows, the domain socket url starts with `npipe` instead of `unix`. not sure how we handle this though ! any suggestions",0,0.8987561464309692
1429622384,3599,AndreyLevchenko,2023-02-14T11:56:30Z,there is lot of examples in trivy code. for instance [a link],0,0.9895496368408203
1429652487,3599,aswath-s-tw,2023-02-14T12:14:39Z,", can you trigger the pipeline to see if the current change works ?",0,0.9943832159042358
1430004789,3599,pmengelbert,2023-02-14T16:13:50Z,"there is already a way to set the socket address for [a link], and it's done by environment variable. this pr splits the configuration of the socket: docker uses a cli arg and containerd uses an env var. what's more, the socket for the [a link] can only be set indirectly by the `xdg_runtime_dir` env var. it's a little awkward to have three different ways to configure the socket address for the three different supported runtimes. would it be possible to expand the scope of this pr to include support for the other runtimes as well? you would probably also want to rename the flag from `--docker-host` to something like `--runtime-host`, since it would apply across runtime implementations.",-1,0.9035063982009888
1430055925,3599,aswath-s-tw,2023-02-14T16:45:38Z,"sure , that makes total sense. i can maybe get into implementing your suggestion right after we figure out how to resolve the test for windows environment.",0,0.8912169337272644
1430956282,3599,knqyf263,2023-02-15T08:49:08Z,"i feel like `--runtime-host` could be confusing. i think we want to configure the specific runtime explicitly. i prefer `--docker-host` for the reason. or, we may need something like `--runtime-host docker:/path/to/socket`.",0,0.963495135307312
1433309827,3599,aswath-s-tw,2023-02-16T15:54:02Z,i think we can limit the scope of this issue / pr to support `--docker-host` and discuss more about `--runtime-host` in a different issue ? let me know your thoughts. also the pipeline is green rn. please review and accept the pr or suggest changes if any. thanks !,1,0.984560489654541
1433344603,3599,pmengelbert,2023-02-16T16:16:42Z,"since the code looks for the image by first attempting the docker socket, then the containerd socket, then podman, then remote registry, i think you are right that there should be either a) separate flags or, b) `--runtime-host` can be supplied multiple times with the runtime as the scheme of the url. separate flags is probably easier. thoughts? the other issue is, what happens if users supply both the flag and the env var? i assume the cli arg takes precedence. i'll defer to but imo this pr should at least allow setting the socket address by environment variable, since users can do so already with containerd and podman. thoughts?",0,0.9834504127502441
1433398166,3599,aswath-s-tw,2023-02-16T16:53:34Z,i guess all 3 container runtimes can be configured by env vars already. the scope of this issue was to add a flag to control the host for local docker engine scan.,0,0.9889194369316101
1438915284,3599,knqyf263,2023-02-21T18:21:23Z,"`trivy image --docker-host /path/to/docker.sock --containerd-host /path/to/containerd.sock` or `trivy image --runtime-hosts docker:/path/to/docker.sock --runtime-hosts containerd:/path/to/containerd.sock` the first one may be more intuitive. yes, cli flags should take precedence. i believe `withhost` takes care of that. [a link] right.",0,0.9911310076713562
1444880265,3599,aswath-s-tw,2023-02-25T01:34:42Z,"so shall i start working on these changes ? i have one doubt though. let's assume this scenario. if the user provides `--containerd-host` as an arg, should we limit the scan to just `containerd` and ignore the other 3 scanners ? same question applies for other host options as well !",0,0.9692128300666809
1458421326,3599,pmengelbert,2023-03-07T16:01:57Z,related [a link],0,0.9924192428588867
1489057954,3599,aswath-s-tw,2023-03-29T17:59:06Z,[a link] any updates on this comment ? i can work accordingly if we can make a decision !,0,0.857668936252594
1516227896,3599,knqyf263,2023-04-20T12:17:10Z,"we recently refactored options, and it causes conflicts. it is just bothering you, so i've resolved them. no, i don't think so. `--docker-host` just configures the socket path.",0,0.9791498780250549
1516817960,3599,knqyf263,2023-04-20T19:11:07Z,thanks for your patience!,1,0.929958701133728
2401677838,7664,knqyf263,2024-10-09T08:28:09Z,"i'll merge this pr, but we can fix the command name anytime you find a better one.",0,0.9944446682929993
2401854178,7664,itaysk,2024-10-09T09:48:18Z,"feel free to merge, but i do think we'll need to change it. i'll continue the discussion here (even if the pr is merged) since there's no issue/discussion.",0,0.9773439764976501
2401910473,7664,knqyf263,2024-10-09T10:15:15Z,"you can open a discussion if you want. since i didn't think we needed a discussion on this topic, and it was easy to implement, i didn't create an issue, but i'm open to discussion.",0,0.5867970585823059
2402071835,7664,itaysk,2024-10-09T11:35:28Z,"i'll try to summarize my feedback into 3 points: ## 1 - main login command should be reserved for main api login when we say `trivy auth login` it's not very clear what the purpose of this login is for. `docker login`, `gh auth login`, `snyk auth`, `aws sso login` and every other cli tool with a login command will sign me into the main service that the cli is representing, and allow me to interact with the service via the cli. so as a normal user might expect that `trivy auth login` will allow me to sign into the trivy service - maybe this is trivy server mode, maybe this is aqua, maybe this is the future version of trivy server/aqua, but either way, i'm not sure it's expected that the main login command will authenticate me to an arbitrary container registry. ## 2 - registry login is not the only kind of auth we support flows based on container registry: 1. pulling image to scan 1. pulling a trivy asset from registry (except vex-db): trivy-db/trivy-java-db/trivy-checks 1. installing wasm modules from registry flows not based on container registry: 1. scanning other targets: all are authenticated ourside of trivy 1. private repos - github/gitlab token in env vars 2. k8s clusters - kubeconfig 3. ami - aws sdk env vars 4. tf modules - tf sdk env vars 1. vex repository: http auth, or implementation specific auth 1. trivy client/server mode: dedicated `--token` flag ## 3 - several registry authentication options if i understand correctly, this command (or docker login) will cover all of the registry based flows listed abobe. it appears that if the artifact is hosted in aws/azure/gcp registry, docker login (or this command) will not suffice, and cloud-specific authentication will be required (please correct me if wrong). also, we currently aupport dedicated `--username`/`--password` flags for basic authentication registries.",0,0.9733374118804932
2402093444,7664,knqyf263,2024-10-09T11:44:46Z,"it is required to obtain a password for `docker login` or `trivy auth login`, like `aws ecr get-login-password | docker login --username aws --password-stdin xxxxxxxxxxx.dkr.ecr.us-east-1.amazonaws.com`. `trivy auth registry login` appears to help some of your feedback. what do you think?",0,0.9905416369438171
2403390060,7664,simar7,2024-10-09T20:40:47Z,"that's an interesting point and to be honest i do agree, it sounds like trivy requires a login to use it's functionality. if we're not planning to support any other credentials in the future, `trivy registry login` might be shorter. but on the other hand, if we do want to support future creds (maybe telemetry?), then i agree keeping `trivy auth ` is probably better.",1,0.6604821085929871
2404772416,7664,itaysk,2024-10-10T10:57:16Z,"yes it does excuse me for thinking out loud for a bit: we have a number of other similar commands for managing connection to external registries: ` trivy module`, `trivy plugin` and `trivy vex`. today these commands don't mange authentication to the respective registries (maybe in the future they will?) but i suspect that if they did, it would be under that subcommand and not under the `auth` subcommand. these commands are grouped as ""management commands"". based on this ux that we've evolved into, managing registry connections would have to be under: `trivy registry` subcommand (which is also under management commands), i.e `trivy registry login` or `trivy registry add`). the problem with this approach is that it might be confusing with registry scanning (which we don't support today). perhaps a better solution in hindsight would have been to move all those administrative commands under a subcommand `trivy admin` (not unlike the proposed `trivy auth`) including `clean`, `module`, `plugin`, `vex`, etc. that would remove any ambiguity and allow us to grow admin commands freely. but coming back to reality, i guess `trivy auth registry login` is fine, and `trivy registry login` as well. i'd vote for the latter i think.",0,0.9167658090591431
2404773828,7664,itaysk,2024-10-10T10:57:57Z,i worte this before reading 's response :),0,0.9913480877876282
2404879868,7664,knqyf263,2024-10-10T11:50:19Z,"i don't mind `trivy auth registry login` or `trivy registry login`. i don't think it's a good idea to nest too many commands, so `trivy registry login` looks slightly better. any thoughts? if not, i'd go for `trivy registry login`.",0,0.6822682023048401
2407137645,7664,DmitriyLewen,2024-10-11T10:41:48Z,`trivy registry login` looks good to me.,1,0.7521529793739319
913241806,1202,macedogm,2021-09-05T23:00:14Z,i added the test case. can you please have another look in this pr?,0,0.9954244494438171
913497904,1202,knqyf263,2021-09-06T09:30:18Z,could you review this pr?,0,0.9946653842926025
913876891,1202,macedogm,2021-09-06T22:45:30Z,"after some tests that i did, i realised that i was not properly double-quoting strings according to [a link]. the template is more robust now, but it might also be a bit too complex. i appreciate any feedback about its usefulness and complexity.",1,0.9732122421264648
919699349,1202,CLAassistant,2021-09-15T04:57:32Z,"[a link] thank you for your submission! we really appreciate it. like many open source projects, we ask that you all sign our [a link] before we can accept your contribution. **1** out of **2** committers have signed the cla. :white_check_mark: macedogm :x: guilherme macedo **guilherme macedo** seems not to be a github user. you need a github account to be able to sign the cla. if you have already a github account, please [a link]. you have signed the cla already but the status is still pending? let us [a link] it.",1,0.9952919483184814
921812359,1202,afdesk,2021-09-17T13:49:38Z,"thanks for your work and your time! i've tested this pr, and it looks good! i did next steps: 1. build `trivy` for this pr and run: [code block] 2. check the csv result file (`r.csv`) on two validators: [a link] and [a link]: the both checks told that the result is valid. [a link] **upd**: also i did this test for `image` and `fs` commands. the csv results are valid.",1,0.9949458241462708
932804295,1202,macedogm,2021-10-02T18:59:53Z,hi :waving_hand_light_skin_tone: is there anything else that i need to do in this pr or does it looks good?,1,0.9600646495819092
977642135,1202,afdesk,2021-11-24T08:26:02Z,"i'm so sorry for waiting. i retested this pr, and it looks good. what do you think?",-1,0.995347797870636
977646060,1202,afdesk,2021-11-24T08:31:06Z,"there is one my personal moment. if i want to open `.csv` file in microsoft excel 2010, the separator should be a semicolon. but i'm not sure that it matters in this case",0,0.9003248810768127
977647896,1202,afdesk,2021-11-24T08:33:45Z,could you pull the `main` branch here?,0,0.9949108958244324
977819104,1202,macedogm,2021-11-24T12:12:08Z,"thanks for you reply. sure, i'll rebase and switch the separator from comma to semicolon. semicolon is a valid separator and should work with all editors/parsers. :thumbs_up_light_skin_tone: as a side note, i also opened this pr [a link] quite some time ago. not sure if you can also review it or not. i believe that it's an interesting feature to add.",1,0.9950283169746399
977833253,1202,afdesk,2021-11-24T12:29:07Z,i'm not sure that we need to change the separator from comma to semicolon.,0,0.8988768458366394
977836447,1202,macedogm,2021-11-24T12:33:41Z,"okay, then in this case i believe that we are good to go (i just pulled the `main`).",0,0.9708747267723083
1005564730,1202,macedogm,2022-01-05T10:30:43Z,can you please have a look in this pr and let me know your thoughts?,0,0.9583964943885803
1010913225,1202,sc-sd,2022-01-12T10:54:03Z,"looks like cla bot has errored. seems to think ""macedogm"" & ""guilherme macedo"" are two different contributors when in fact they are the same user.",0,0.9221479892730713
1144631306,1202,redcatsec,2022-06-02T09:09:31Z,anything new on this branch ?,0,0.9885665774345398
1144633701,1202,macedogm,2022-06-02T09:12:05Z,"if there is still interest in adding this pr with csv template support, then i can update it.",0,0.9943819642066956
1144648894,1202,knqyf263,2022-06-02T09:29:01Z,we're sorry to be late. looks like it is hard for us to maintain the template. can we rewrite it in go?,-1,0.9928094148635864
1144793755,1202,macedogm,2022-06-02T12:14:47Z,"no worries. yes. is there any guidance that you would like to provide in advance, please? otherwise, i'll update the pr when i'm done.",1,0.8310078382492065
1147041120,1202,knqyf263,2022-06-06T04:49:06Z,i just want you to use `encoding/csv`. [a link] you can just add a new writer in `pkg/report` like sarif. [a link],0,0.9946581721305847
1180557508,1202,redcatsec,2022-07-11T15:31:16Z,anything new hier ?,0,0.9882910847663879
1240468202,1202,xikunyu,2022-09-08T09:32:57Z,"thank you first, i need csv template very much. but which version of trivy is working well with this template? i use trivy 0.25.0 as well as 0.31.3 with docker to use this template, but i got error that function ""escapecsv"" not defined. `docker run --rm -v ~/code/caches:/root/.cache/ -v ~/code/csv.tpl:/tmp/csv.tpl aquasec/trivy:0.31.3 i --format template --template ""@/tmp/csv.tpl"" nginx:latest` [code block] please help me. thank you again.",1,0.9468656778335571
1241261986,1202,macedogm,2022-09-08T21:40:25Z,and let me work on this during the weekend and submit a new pr.,0,0.993893027305603
1241604019,1202,xikunyu,2022-09-09T07:25:23Z,thank you for your reply. i'm very looking forward to it.,1,0.9940292835235596
1250596079,1202,xikunyu,2022-09-19T05:50:43Z,"hi, are there any updates?",0,0.9902849793434143
1494436852,1202,rams3sh,2023-04-03T14:30:52Z,"while the format gets merged in the upstream. i made a tsv template that works. i prefer tsv since handling quotes and `,` is a headache in csv. this however can be opened by any of the spreadsheet software and has same view as csv. template is below :- [code block] sixth line in the above code block is `tab` separated. in case , while copying, formatting gets lost, re-edit the template and manually put the `tab` between each of the fields. save the above template as say `tsv.tpl`. use trivy cli as below :- [code block] the template and the provided cli works well with the following trivy version :- [code block] thought of putting this up here in case any one finds it helpful until the feature is part of the upstream.",0,0.9581298828125
1313632699,3037,prabhu,2022-11-14T12:43:08Z,"like many, i can't wait to have this support. in the interim, is it possible to release a small pr that only does `replace hard coded file paths to use filepath.join()`?",1,0.9859171509742737
1325151583,3215,luhring,2022-11-23T14:25:24Z,(compilation will fail until [a link] is merged and we update this branch of `trivy` to use the new version of `trivy-db`.),0,0.9935566782951355
1336435668,3215,afdesk,2022-12-04T15:09:18Z,thanks for your efforts. could you say why we need a custom analyzer? [a link] you already handle family id: [a link],1,0.9282578825950623
1336464154,3215,luhring,2022-12-04T16:44:13Z,"we might not need it, actually! :grinning_face_with_big_eyes: i'm still learning trivy's architecture, but that's what i was hoping to learn here [a link]",1,0.9878758192062378
1336469021,3215,afdesk,2022-12-04T17:07:25Z,"sorry, missed your thought. yes, you can remove `wolfi` analyzer and rely on `release` package.",-1,0.9763568639755249
1336472831,3215,luhring,2022-12-04T17:26:29Z,no worries! removed in b0df2e5b,1,0.9918705224990845
1342624891,3215,luhring,2022-12-08T12:03:30Z,"now that [a link] is merged, i've updated this branch to use the latest version of `trivy-db`. and could you please take a look? i'm happy to make any other changes you'd like! also, in these situations do you typically wait for an updated trivy db to be published, in order to test trivy without using a local cache of the db?",1,0.986718475818634
1342861050,3215,knqyf263,2022-12-08T14:58:09Z,"the addition of wolfi is causing the db to fail to build (it is our fault), so let us fix that first. [a link]",0,0.9821747541427612
1343309811,3215,luhring,2022-12-08T20:24:16Z,the db looks good to me now! do you think this one is ready to merge?,1,0.9826995134353638
1346675194,3215,knqyf263,2022-12-12T15:11:30Z,"hi, it looked good to me, but i found that the installed versions are empty. do you know the reason? this analyzer should capture versions. [a link]",1,0.5366138219833374
1346678264,3215,knqyf263,2022-12-12T15:13:35Z,"doesn't wolfi have origin package names/versions? if it is the case, we need to use formatversion instead. [a link] [code block] in the above example, can we assume `binutils-dev` is installed from `binutils` v2.39-r4? in other words, the origin package version and sub-package version are always the same?",0,0.9945340156555176
1346747890,3215,luhring,2022-12-12T15:44:08Z,"yes, that's correct. good to know about `utils.formatversion`, thanks! updated.",1,0.9966222047805786
1346753360,3215,luhring,2022-12-12T15:46:15Z,"just so i understand this comment, where are you looking? i'm seeing installed versions in trivy's output.",0,0.9913254380226135
1346756498,3215,knqyf263,2022-12-12T15:47:28Z,"in your pr description, installed versions are empty in the table. [a link] ![a link]",0,0.9528898000717163
1346760102,3215,knqyf263,2022-12-12T15:48:51Z,"it works now, though. [code block]",0,0.875842273235321
1346761946,3215,luhring,2022-12-12T15:49:34Z,got it! there have been a handful of changes in the past 3 weeks. i'm seeing installed versions locally — let me know if you see something different when you run it.,1,0.988030731678009
1347282050,3215,knqyf263,2022-12-12T20:43:17Z,i didn't see installed versions before this commit [a link] it looks good now.,0,0.4977540969848633
1347285796,3215,knqyf263,2022-12-12T20:44:29Z,thanks for your contribution:thumbs_up: it will be included in [a link].,1,0.9854177236557007
1347316665,3215,luhring,2022-12-12T20:57:30Z,thanks for all your help and ! :folded_hands: this was a great learning experience.,1,0.9972758889198303
1987008656,6240,codefromthecrypt,2024-03-09T23:26:07Z,what do you use to draw that diagram? looks neat.,1,0.9583173394203186
1987636698,6240,knqyf263,2024-03-11T04:59:30Z,this one [a link],0,0.9951629638671875
1987771501,6240,knqyf263,2024-03-11T07:22:41Z,-keinan i've resolved all comments. can you please take another look?,0,0.9504414796829224
2158125749,6882,stringbean,2024-06-10T11:46:24Z,not at the moment. i can look at adding that to the next major version of sbt-dependency-lock.,0,0.9811816811561584
2008599142,6333,parvez0,2024-03-20T03:11:09Z,"hey , needed your opinion on this. after integrating the location changes, i noticed that `integration_test/client_server.go` started failing for the `busybox_with_cargo.lock` and `scan pox.xml` test cases. the issue from these test cases is expecting `detectedvulnerability.location` to be nil. however, the output golden files `busybox-with-lockfile.json.golden` and `pom.json.golden` are also used in other integration tests where non-nil location data is expected. to address this, i created two duplicate files that includes location data. please let me know if you have a better solution for this.",1,0.593964159488678
2008640756,6333,DmitriyLewen,2024-03-20T04:22:02Z,you need to update `rpc` package. let me know when you're done making changes (to avoid conflicts) and i will update client/server part.,0,0.9942951798439026
2011008923,6333,parvez0,2024-03-21T01:13:23Z,"hey what do i have to do in `rpc` package i haven't seen any changes that need to be made there, can you please let me know i'll try to do it as soon as possible",0,0.9404415488243103
2011690056,6333,DmitriyLewen,2024-03-21T09:06:30Z,hm... we don't insert `locations` in client/server mode... i created #6366 for this bug. after merge #6366 you need to merge `main` branch into this pr and follow these steps: - add locations to [a link] (use 26 number). use [a link] struct. - run `mage fmt`. - run `mage:protoc`. - add `locations` to `vulnerabilties` [a link] ( use `converttorpclocations` and `convertfromrpclocation` functions) - add locations in testcase in `convert_test.go`. - recheck that you don't need new test golden files in integration tests.,0,0.9630727171897888
2069461458,6333,knqyf263,2024-04-22T13:35:46Z,"originally, our policy was to include only minimal data in reports. it may be better to embed [a link] in [a link] than to gradually add more and more attributes.",0,0.9882392883300781
2073922701,6333,DmitriyLewen,2024-04-24T03:04:14Z,sounds logical. do you have the time and opportunity to do this?,0,0.9862980842590332
2075015546,6333,parvez0,2024-04-24T13:56:56Z,"hey , i'll take a look at this and update",0,0.9606325030326843
2081955961,6333,knqyf263,2024-04-29T06:12:04Z,we're so sorry. we discussed this offline and found out that embedding packages will get lots of duplicate data if multiple vulnerabilities are found in one package. we need to carefully think about it.,-1,0.9910916686058044
2082876247,6333,parvez0,2024-04-29T14:16:59Z,"hey , i had the same question and was just about to reach out to you. please let me know if you've settled on an approach for this and need my assistance to finalize it. in the meantime, i'll start looking into other issues that i can address.",0,0.5397698879241943
2086270998,6333,knqyf263,2024-04-30T17:54:20Z,thanks for your understanding. i implemented [a link] and would collect feedback from other maintainers.,1,0.9601072669029236
2548046559,8106,nikpivkin,2024-12-17T10:14:16Z,"`poetry` does not yet support pep 735, so for now we can just exclude the dev group without resolving dependencies from other groups: [code block] [a link]",0,0.9951494336128235
2559056962,8106,DmitriyLewen,2024-12-23T07:20:03Z,-bot backport release/v0.58,0,0.9887441396713257
576023536,376,knqyf263,2020-01-19T16:49:46Z,thank you for the awesome contribution! we'll have a look soon.,1,0.996116042137146
577483532,376,tnir,2020-01-23T03:02:04Z,templating does looks working well: [a link],1,0.5469067096710205
578193349,376,tnir,2020-01-24T16:06:57Z,blocked by pr #387 (issue #386),0,0.9847190380096436
578193929,376,tnir,2020-01-24T16:08:26Z,task list was moved to the description of the pr.,0,0.9945176243782043
578479243,376,knqyf263,2020-01-26T08:18:28Z,i've merged #327. i didn't check it carefully:downcast_face_with_sweat: i appreciate your contribution.,1,0.9802757501602173
578505247,376,knqyf263,2020-01-26T14:08:53Z,thanks! awesome work!,1,0.996995210647583
1614495716,4706,AliDatadog,2023-06-30T11:03:41Z,"hi , thank you for the review :person_bowing: i addressed the comments and applied the changes.",1,0.9861361980438232
1649637309,4706,AliDatadog,2023-07-25T11:17:03Z,"hi , small bump for this pr.",0,0.8431546688079834
1680886186,4706,AliDatadog,2023-08-16T16:04:29Z,would you have any update regarding this pr ?,0,0.9930564761161804
1740811359,4706,AliDatadog,2023-09-29T12:26:41Z,any update ? :person_bowing:,1,0.9830775856971741
1741996203,4706,knqyf263,2023-10-01T07:58:43Z,"after careful consideration, i thought that `--retain-pkg-installed-files` may not be necessary, as installed files are not output by default without `--list-all-pkgs`. i am sorry that you went to the trouble of implementing this. other than that, it looks good, and i will merge it right after removing `--retain-pkg-installed-files`.",-1,0.9822046160697937
1742744987,4706,AliDatadog,2023-10-02T10:09:20Z,i changed the git history to add the co-author,0,0.9943525791168213
1744467600,4706,knqyf263,2023-10-03T08:29:57Z,tests are failing. please let us know if you need any help.,0,0.6734046936035156
1750701213,4706,AliDatadog,2023-10-06T13:40:15Z,it appears that `mage test:updategolden` is not updating the golden files as expected when i run the command. for info i have a mac m1 and have docker on my machine,0,0.9881554841995239
1763743371,4706,knqyf263,2023-10-16T05:20:00Z,the build constraint excludes the file for macos. [a link],0,0.9960178732872009
1140454993,2186,chen-keinan,2022-05-29T13:56:58Z,"i think it would be better to implement `cluster` and `all` as `trivy k8s` subcommands rather than args, it will make it more modular and better to maintain",0,0.9787933230400085
1144249726,2186,josedonizetti,2022-06-01T23:39:00Z,"-keinan let me know what you think about the changes. i'd like to know if this look good for you, before adding integration tests, to validate the cli works. things to keep in mind: - when using subcommands with `urfave/cli` it won't print the `customhelptemplate`, i looked into fixing it, but there is a pr opened on the repository already, which took over 5 months to get a review. so, to be able to show examples of how to use, i'm using `usagetext` - i'm mixing a command structure, where the main command handle resources `trivy k8s deployment app` and we have individual subcommands for cluster and namespace `trivy k8s cluster`, `trivy k8s all`. this allows for better maintainability but also looks good, when using subcommands we can do `trivy k8s cluster --report`, without it the flags must come before the action `trivy k8s --report cluster`. and to support the api, i didn't want to have a subcommand `resource`. - i have extracted a `option.go` for kubernetes commands, because i don't want to add an if for every subcommand we add under `k8s` on [a link] to handle parameters diffrent. - the main command acts like other trivy commands `trivy k8s` shows help - `urfave/cli` subcommands don't inherit flags, so we have to redeclare it per subcomand",1,0.5838595628738403
1144602723,2186,chen-keinan,2022-06-02T08:38:27Z,"there is an effort to introduce cobra in trivy any idea when its planned, if at all?",0,0.990810751914978
1144632881,2186,knqyf263,2022-06-02T09:11:10Z,"i'm still not sure if we should have `cluster` and `all` as subcommands. any big benefit? for now, it makes maintenance hard.",-1,0.5674473643302917
1147776616,2186,josedonizetti,2022-06-06T18:52:06Z,"_there is an effort to introduce cobra in trivy any idea when its planned, if at all?_ -keinan i don't think it is planned, i saw a pr for it, but there is no work on it. _i'm still not sure if we should have cluster and all as subcommands. any big benefit? for now, it makes maintenance hard._ do you mean subcommands vs one command parsing argument? or do you mean separating cluster/all in different actions?",0,0.8003265857696533
1148377882,2186,knqyf263,2022-06-07T08:44:24Z,i mean the first one. do we want to have `cluster` and `all` as subcommands?,0,0.9919392466545105
1150518829,2186,josedonizetti,2022-06-08T23:39:58Z,"i liked the subcommands better, mostly because of the flags. without it, users always need to pass the flags before the command, for example `trivy k8s --report summary all` or `trivy k8s --format json --security-checks=config cluster`, if we do `trivy k8s all --report summary` it won't work, because `urfave/cli` is based on golang builtin flags, which stop processing whenever an argument without `-` is found. but with subcommands this works different, `all` and `cluster` are no longer arguments but the commands themselves. so it works when we pass flags after it, eg: `trivy k8s cluster --format json --security-checks=config` wdyt?",1,0.5941613912582397
1150731526,2186,knqyf263,2022-06-09T06:40:16Z,"but then, `trivy k8s --format json --security-checks=config cluster` no longer works unless we define flags for `k8s` and `cluster` subcommands both, right? also, all other commands don't work like `trivy image alpine:3.15 --format json --security-checks=config`. i think `cluster` is a target name like `alpine:3.15`. to keep consistency with other commands, it should be like `trivy k8s --format json --security-checks=config cluster`, no? i agree flags should work even after the cli argument. we can do it after we move to cobra, but cannot at the moment.",0,0.9901756644248962
1152681987,2186,josedonizetti,2022-06-10T19:51:06Z,"-keinan can you review it please? tried to address all concerns (new cli api, improving code maintenance and still keeping the trivy way of working)",0,0.948456883430481
1153186731,2186,chen-keinan,2022-06-12T14:20:39Z,"could add a comment on this as it is an older change: the error below are ignored `_, _ = fmt.fprintln(s.output)` `_, _ = fmt.fprintf(s.output, ""summary report for %s\n"", consolidated.clustername)`",0,0.9953945279121399
1156107354,2186,knqyf263,2022-06-15T07:41:06Z,i think it is a breaking change. we should mention it in the release note. could you write it? you can refer to the old release notes.,0,0.9686592221260071
1180717914,2494,CLAassistant,2022-07-11T18:15:14Z,[a link] all committers have signed the cla.,0,0.9951004385948181
1180717915,2494,CLAassistant,2022-07-11T18:15:14Z,"[a link] thank you for your submission! we really appreciate it. like many open source projects, we ask that you sign our [a link] before we can accept your contribution. you have signed the cla already but the status is still pending? let us [a link] it.",1,0.9939326643943787
1183148324,2494,ShubhamPalriwala,2022-07-13T12:16:36Z,"hey , thanks for the useful feedback. have incorporated all the suggested changes and answered the `depth` option query too under your question. pushed the change and the pr is ready for review from my end again!",1,0.9924576282501221
1184499346,2494,ShubhamPalriwala,2022-07-14T14:12:46Z,can you take a look at the latest commit? it has the required change of migrating the test service to a local git,0,0.9952694773674011
1323293883,3130,chen-keinan,2022-11-22T08:34:16Z,"you are not using the `compliance.buildcompliancereport(scanresults, compliancespec)` functionality built for producing compliance reports ?",0,0.9940185546875
1323625691,3130,simar7,2022-11-22T12:46:01Z,"that’s right. as we discussed last time, it uses options.scannerwithspec in defsec to load only the checks that need to be loaded for a particular spec.",0,0.9924296736717224
1324618281,3130,chen-keinan,2022-11-23T06:44:02Z,"`compliance.buildcompliancereport` is not just loading/filtering checks, it is also producing a specific compliance report view, it will be great to have all compliance report view to look a like. example: [a link]",1,0.8534087538719177
1325780050,3130,simar7,2022-11-23T23:55:25Z,good point - i didn't think of that. i added it here [a link] along with some tests. ptal.,1,0.9804612994194031
1327053182,3130,chen-keinan,2022-11-25T05:59:54Z,lgtm,0,0.9618706703186035
1341444101,3130,knqyf263,2022-12-07T19:03:54Z,"i believe you just forgot to remove the png, so i've removed it in [a link] please let me know if i'm missing something.",0,0.985064685344696
1126663516,2111,owenrumney,2022-05-14T07:34:39Z,i don't know if further reading should be removed as well? it references online resources about starboard,0,0.9697622060775757
1126667111,2111,itaysk,2022-05-14T08:03:12Z,"sure, we can remove it. also, could you please add some note in the operator index.md about relationship to starboard operator? something like:",0,0.9927394986152649
1126669658,2111,owenrumney,2022-05-14T08:19:53Z,i think at this point where we're editing text someone who has worked on the project does it.,0,0.9809360504150391
1126670667,2111,itaysk,2022-05-14T08:27:29Z,"fair enough, i'll give it another round and this time just commit into your branch",0,0.9737836718559265
1126692268,2111,itaysk,2022-05-14T11:05:49Z,"gave it another run, tried to simplify things. i would try to do it again later an probably converge some pages. also, i think images dir still has some work to do.",0,0.8900134563446045
1126867095,2111,chen-keinan,2022-05-15T05:58:06Z,"looks very good, couple of comments: these images can be removed : - docs/docs/kubernetes/operator/images/node01-report.png - docs/docs/kubernetes/operator/images/html-report.png - docs/docs/kubernetes/operator/images/starboard-cli-with-octant-demo.gif this report was produced from starboard cli which no longer exists html/pdf can be removed from this image : - /docs/kubernetes/operator/images/trivy-operator-overview.png",1,0.9769495725631714
1127021815,2111,itaysk,2022-05-15T20:29:04Z,"-keinan [a link] - merge config and settings, i think it wasn't clear why we two very similar pages. [a link] - merge installation options, not sure this one is better than before lmk wdyt, we can also revert this one",0,0.919373631477356
1127031686,2111,chen-keinan,2022-05-15T21:06:40Z,"- the setting and config merge looks ok, for now, probably we will have to do an additional review to validate content and order. - the install option merge is a little bit confusing, not fully clear when each install ends and if the other part is relevant to me, for example, if i choose helm or else",1,0.5633100271224976
1127431706,2111,itaysk,2022-05-16T09:19:34Z,"ok, reverted it",0,0.9929954409599304
1323369941,2910,knqyf263,2022-11-22T09:35:23Z,i saw several errors ### vagrant box: amazon linux 2 (bento) [code block] ### vagrant box: ubuntu 20.04 [code block] ### vagrant box: ubuntu 14.04 intentional [code block] ### vagrant box: debian 10 intentional [code block] ### vagrant box: debian 10 (generic) [code block] ### ubuntu 18.04 [code block] ### exported ova from virtualbox [code block],0,0.9943737983703613
1323493887,2910,knqyf263,2022-11-22T11:02:22Z,## status | image | status | note | |-------|--------|------| | vagrant box: amazon linux 2 (bento) | :check_mark_button: | [a link] | | vagrant box: ubuntu 20.04 | ▲ skip boot partition only image| [a link] | | vagrant box: ubuntu 14.04 | ▲ skip boot partition only image | [a link] | | vagrant box: debian 10 (generic) | :check_mark_button: | [a link] | | cloud images: ubuntu 18.04 | :check_mark_button: | [a link] | | exported ova from virtualbox | ▲ | [a link] skip lvm |,0,0.9543147683143616
1323539867,2910,knqyf263,2022-11-22T11:43:30Z,## ebs snapshot scanning | ami id | ami name | status | note |-------|-------|:--------:|---------| | ami-0c0000ceb18c73b8a | red hat enterprise linux 9 | :check_mark_button: | | | ami-06220be3176081cf0 | red hat enterprise linux (rhel) 7 (hvm) | :check_mark_button: | `not support xfs_dinode_fmt_extents` | | ami-076309742d466ad69 | amazon linux 2 ami (hvm) - kernel 5.10 | :check_mark_button: | `not support xfs_dinode_fmt_extents` | | ami-034a7d2833172671e | amazon linux 2 ami (hvm) - kernel 4.14 | :check_mark_button: | `not support xfs_dinode_fmt_extents` | | ami-0caef02b518350c8b |ubuntu server 22.04 lts | :check_mark_button: | | | ami-06148e0e81e5187c8 |ubuntu server 20.04 lts | :check_mark_button: | | | ami-0a5b5c0ea66ec560d |debian 11 | :check_mark_button: | | | ami-0b4c74d41ee4bed78 | centos 7 (x86_64) - with updates hvm | :cross_mark: | `partition error: unable to detect filesystem` | | ami-0003c30c98690e304 | develatio's ruby on rails ami (debian 10) | :check_mark_button: | | | ami-0fb02f20850e23fd0 | suse linux enterprise server 15 | :check_mark_button: | `failed to parse header error magic: 1701012595: unsupported block` | | ami-06716a923f0430b50 | tensorflow from nvidia ami with support by terracloudx | :cross_mark: | `partition error: unable to detect filesystem` | | ami-0b3d1809cc222924a | almalinux os 8 | :check_mark_button: | `not support xfs_dinode_fmt_extents` | | ami-0e2bc7a3ca89f5d06 | rocky linux 8 | :cross_mark: | `partition error: unable to detect filesystem` | ## script [a link],0,0.980244517326355
1324732222,2910,knqyf263,2022-11-23T09:00:26Z,## ami scanning (vmdk) | ami id | ami name | status | note |-------|-------|:--------:|---------| | ami-0c0000ceb18c73b8a | red hat enterprise linux 9 | :check_mark_button: | | | ami-06220be3176081cf0 | red hat enterprise linux (rhel) 7 (hvm) | :check_mark_button: | | | ami-076309742d466ad69 | amazon linux 2 ami (hvm) - kernel 5.10 | :check_mark_button: | | | ami-034a7d2833172671e | amazon linux 2 ami (hvm) - kernel 4.14 | :check_mark_button: | | | ami-0caef02b518350c8b |ubuntu server 22.04 lts | :check_mark_button: | | | ami-06148e0e81e5187c8 |ubuntu server 20.04 lts | :check_mark_button: | | | ami-0a5b5c0ea66ec560d |debian 11 | :check_mark_button: | | | ami-0b4c74d41ee4bed78 | centos 7 (x86_64) - with updates hvm | - | the image id provided (ami-07e1709b931547118) is a marketplace ami and is not exportable. | | ami-0fb02f20850e23fd0 | suse linux enterprise server 15 | - | the image id provided (ami-03512b450e089b4f5) is a marketplace ami and is not exportable. | | ami-0b3d1809cc222924a | almalinux os 8 | - | the image id provided (ami-0081079be037be39e) is a marketplace ami and is not exportable. | | ami-0e2bc7a3ca89f5d06 | rocky linux 8 | - | the image id provided (ami-043b19653568f9986) is a marketplace ami and is not exportable. | ## script [a link],0,0.9626408219337463
1327778543,2910,knqyf263,2022-11-25T18:38:50Z,## ami scanning (ebs snapshot) | ami id | ami name | status | note |-------|-------|:--------:|---------| | ami-0c0000ceb18c73b8a | red hat enterprise linux 9 | :check_mark_button: | | | ami-06220be3176081cf0 | red hat enterprise linux (rhel) 7 (hvm) | :check_mark_button: | | | ami-076309742d466ad69 | amazon linux 2 ami (hvm) - kernel 5.10 | :check_mark_button: | | | ami-034a7d2833172671e | amazon linux 2 ami (hvm) - kernel 4.14 | :check_mark_button: | | | ami-0caef02b518350c8b |ubuntu server 22.04 lts | :check_mark_button: | | | ami-06148e0e81e5187c8 |ubuntu server 20.04 lts | :check_mark_button: | | | ami-0a5b5c0ea66ec560d |debian 11 | :check_mark_button: | | | ami-0b4c74d41ee4bed78 | centos 7 (x86_64) - with updates hvm | :cross_mark: | bootable partition | | ami-0fb02f20850e23fd0 | suse linux enterprise server 15 | :check_mark_button: | | | ami-0b3d1809cc222924a | almalinux os 8 | :check_mark_button: | | | ami-0e2bc7a3ca89f5d06 | rocky linux 8 | :cross_mark: | bootable partition | ## script [a link],0,0.9631316661834717
1328106016,2910,knqyf263,2022-11-26T20:05:12Z,"i figured out why it failed on centos/rocky linux. the images successfully scanned were gpt-partitioned. [code block] rocky linux is mbr-partitioned. [code block] we should not just skip bootable partition. we should skip only mbr and bios boot partition, not efi system partition (esp).",0,0.9896751046180725
1328110425,2910,knqyf263,2022-11-26T20:38:24Z,fixed in [a link] i confirmed centos and rocky linux work now.,0,0.9932485818862915
1328204005,2910,knqyf263,2022-11-27T09:19:20Z,## ami scanning (ebs snapshot) after the fix | ami id | ami name | status | note |-------|-------|:--------:|---------| | ami-0c0000ceb18c73b8a | red hat enterprise linux 9 | :check_mark_button: | | | ami-06220be3176081cf0 | red hat enterprise linux (rhel) 7 (hvm) | :check_mark_button: | | | ami-076309742d466ad69 | amazon linux 2 ami (hvm) - kernel 5.10 | :check_mark_button: | | | ami-034a7d2833172671e | amazon linux 2 ami (hvm) - kernel 4.14 | :check_mark_button: | | | ami-0caef02b518350c8b |ubuntu server 22.04 lts | :check_mark_button: | | | ami-06148e0e81e5187c8 |ubuntu server 20.04 lts | :check_mark_button: | | | ami-0a5b5c0ea66ec560d |debian 11 | :check_mark_button: | | | ami-0b4c74d41ee4bed78 | centos 7 (x86_64) - with updates hvm | :check_mark_button: | mbr | | ami-0fb02f20850e23fd0 | suse linux enterprise server 15 | :check_mark_button: | | | ami-0b3d1809cc222924a | almalinux os 8 | :check_mark_button: | | | ami-0e2bc7a3ca89f5d06 | rocky linux 8 | :check_mark_button: | mbr | ## script [a link],0,0.9777801036834717
1328204071,2910,knqyf263,2022-11-27T09:19:44Z,now it's all green :party_popper::party_popper: :party_popper: :party_popper: :party_popper:,1,0.6129570007324219
2156362547,6861,chen-keinan,2024-06-09T07:18:53Z,after bumping trivy-policies to v0.12.0 [a link] are failing. can you please have a look ?,0,0.7399687170982361
2188168569,6861,chen-keinan,2024-06-25T07:21:47Z,please review the pr and comment,0,0.992046594619751
2189834844,6861,simar7,2024-06-25T19:41:14Z,"i had created [a link] already but since you already bumped trivy-checks here, i will close the other one.",0,0.9946208000183105
2178237614,6965,msmeissn,2024-06-19T09:45:22Z,"i tried to build using ""mage"", but it does not work with mage-v1.11.0~git0.07afc7d-150500.1.1.x86_64 on sles 15 sp5. ""no .go files marked with the mage build tag in this directory."" (neither in top or in cmd/trivy/) go build cmd/trivy/main.go goes through",0,0.9934084415435791
2191763145,6965,msmeissn,2024-06-26T13:51:20Z,"i did some test but i need to figure out how to run tests first, the mage howto does not seem to work on older mage",0,0.9801232218742371
2193881946,6965,DmitriyLewen,2024-06-27T06:13:29Z,trivy mage commands - [a link] also you can always use `go test`,0,0.9943469166755676
2206418642,6965,msmeissn,2024-07-03T14:56:25Z,"one thing, scans work (the image currently will always report this one entry, as the version was lowered after the update): [code block] i otherwise started on more tests, but the integration tests are a bit large: - how does the reference image get onto ghcr.io/aquasecurity/trivy-test-images: ? - how is golden generated? manually edited?",0,0.9855431318283081
2208119378,6965,DmitriyLewen,2024-07-04T04:57:01Z,you need to add your image to this script - [a link] use `mage:updategolden` command to update integration golden files,0,0.9957864880561829
2208512507,6965,msmeissn,2024-07-04T09:22:44Z,[a link] opened,0,0.9938668608665466
2210939175,6965,msmeissn,2024-07-05T14:03:28Z,"update: i added some integration tests now, and mage test:integration seems to go through. trying to get test:unit to work, but i need to find/build a working tinygo for opensuse first.",0,0.7741268277168274
2216485740,6965,knqyf263,2024-07-09T04:25:35Z,thanks for your great contribution!,1,0.9808058738708496
2560687053,8134,knqyf263,2024-12-24T05:47:57Z,can you rebase the main branch? i think the linter will fail on `map[string]struct{}`.,0,0.9933505654335022
2560689824,8134,nikpivkin,2024-12-24T05:51:55Z,i'm working on it right now,0,0.8673871755599976
543362580,201,simar7,2019-10-17T21:08:19Z,hey this pr lgtm modulo the comments above!,0,0.990073561668396
658565946,552,knqyf263,2020-07-15T06:08:57Z,"it looks like gem has a version with 3 dot such as `1.6.7.1` and this library can't handle such a version. as you can see, it detects cve-2015-5312 in nokogiri, but `1.10.9-java` seems newer than `1.6.7.1`. [code block]",0,0.99162358045578
658658037,552,rahul2393,2020-07-15T09:29:12Z,"added logic to replace all occurrences of dots with ""-"" in patch version since it seems like ruby having 3 dots is language-specific, all other languages put the dash in patch versioning. after it the code working fine for ruby gems too, check tests [a link]",0,0.9589238166809082
919326301,1081,nscuro,2021-09-14T16:44:11Z,"hi , i see you're using properties in your implementation. cyclonedx recently introduced the concept of property namespaces: [a link] i think it's a good idea to choose one (or more) namespaces for trivy as well. for example, `type` could become `aquasecurity:trivy:type` and so on.",0,0.629962682723999
919699578,1081,CLAassistant,2021-09-15T04:58:13Z,[a link] all committers have signed the cla.,0,0.9951004385948181
931987033,1081,masahiro331,2021-10-01T07:41:43Z,thank you for information ! i have some question. is this a custom property? [a link] would i write like this if i use namespaces for custom properties? [code block],1,0.9938259124755859
932049252,1081,nscuro,2021-10-01T08:58:33Z,"yes, that's how you'd use namespaces :) we released cyclonedx-gomod v1.0.0 yesterday which makes use of namespaced properties as well. for example: [a link]",1,0.9934786558151245
933622072,1081,masahiro331,2021-10-04T15:55:04Z,thank you for reserve aquasecurity namespace.,1,0.7419216632843018
971479962,1081,savujevi,2021-11-17T11:19:17Z,"hello, maybe i have a little improvement for the implementation to generate the purl url. i am using dependencytrack which reads the purls of the dependencies and generates a list of vulnerabilities. if i interpret the purl spec correct it would look like this: `scheme:type/namespace/name?qualifiers#subpath` when i look at your implementation you use the result.type (from the trivy result it is e.g. redhat) for the type. as i interpret it right, it should be “rpm” for the type. it should look something like this: `pkg:rpm/bash.2.46` and not `pkg:redhat/bash.2.46` also for “jar” type it should be “maven” if i read the purl spec correctly. please correct me if i am wrong. i have add following code snippet to your code to test the results with dependencytrack and it generates purls which seems to work. i have updated the code a little bit (i am not sure if this is the right place and the best implementation). i hope i am correct with my suggestion (i am no golang specialist). `func newpackageurl(t string, pkg types.package) string { ... switch t { case ""jar"": t = ""maven"" case ""alpine"": t = ""apk"" case ""debian"": t = ""deb"" case ""redhat"": t = ""rpm"" case ""centos"": t = ""rpm"" case ""opensuse.leap"": t = ""rpm"" case ""suse linux enterprise server"": t = ""rpm"" default: } ... }` thank you for your attention. best regards, sascha vujevic",0,0.91704922914505
973950293,1081,masahiro331,2021-11-19T10:32:51Z,i consider it a better implementation than mine. i will refer to it and fix it. thanks for the suggestion.,1,0.9842809438705444
988203101,1081,stevespringett,2021-12-07T19:22:37Z,here's the latest update on cyclonedx v1.4 - which will include representing vulnerabilities as part of the core spec. a vote will take place on 16 december. merge date is 17 december. the core working group is anticipating to release v1.4 mid-january. * [a link] * [a link],0,0.9236968159675598
997373410,1081,masahiro331,2021-12-19T11:14:07Z,thank you information. i will support fast!!,1,0.996826171875
1011592968,1081,stevespringett,2022-01-13T00:45:14Z,"cyclonedx v1.4 was released today. this release includes vulnerability support, and optional exploitability support. [a link] [a link]",0,0.7908363342285156
1027813576,1668,CLAassistant,2022-02-02T10:54:32Z,[a link] all committers have signed the cla.,0,0.9951004385948181
1048801247,1668,developer-guy,2022-02-23T13:49:37Z,kindly ping :man_raising_hand_light_skin_tone:,1,0.7577986717224121
1048817428,1668,knqyf263,2022-02-23T14:07:40Z,"i'm sorry, but i've been busy on the cyclonedx release recently. please let me retake a review shortly. [a link]",-1,0.9902442693710327
1066103883,1668,knqyf263,2022-03-13T13:35:47Z,thanks,1,0.8643599152565002

id,pr_number,user,created_at,body,deberta_sentiment_label,deberta_confidence
778318916,331,DjLegolas,2022-01-04T19:00:48Z,doesn't this needs to be a x64 version of gtk?,0,0.9924687743186951
778322855,331,cas--,2022-01-04T19:07:49Z,there is only two lines difference between these nsi files so there should only be one nsi script that be be called with optional argument for 32-bit build (64-bit default?),0,0.99313884973526
778324478,331,cas--,2022-01-04T19:10:37Z,there should be no reason to skip isort on this file,0,0.9920523166656494
778484845,331,doadin,2022-01-05T01:08:24Z,yes the x64 build had not completed yet so i didn't have a url. its done now and i just woke up so i'm going to update.,0,0.988050639629364
778485045,331,doadin,2022-01-05T01:09:02Z,"i am not really familiar with nsis, i will look into that.",0,0.9292944669723511
778485180,331,doadin,2022-01-05T01:09:32Z,"was just a copy paste from the bbfreeze file, sorry.",-1,0.9904666543006897
780330445,331,cas--,2022-01-07T15:17:56Z,is this a typo? also this does not match the x86 step,0,0.9902893304824829
780330548,331,cas--,2022-01-07T15:18:05Z,"can we use [a link] to deduplicate the build-windows steps. so perhaps set a `gvsbuild` for download link, `arch` key set to `x86` or `x64` and `wheel_arch` to `win32` or `amd64` etc...",0,0.9946488738059998
780331793,331,cas--,2022-01-07T15:20:07Z,i know this was just renamed but can we point to the correct dependencies reference in docs,0,0.9931053519248962
780333095,331,cas--,2022-01-07T15:22:09Z,could we convert this to a 'markdown' document so rename extension to `.md`?,0,0.9952859282493591
780334242,331,cas--,2022-01-07T15:23:50Z,can we install latest specific version to avoid surprises,0,0.9881673455238342
780780944,331,cas--,2022-01-09T13:20:43Z,this seems very fragile having github actions specific lines in the spec file. also this is added for x86 arch which probably not what we want? what is causing pyinstaller not to include them? could this issue not always be the case any x64 build not just github actions? is there a way of specifying it via argument or perhaps without full path? e.g. `libcrypto-1_1-x64.dll`,0,0.8025773763656616
780781008,331,cas--,2022-01-09T13:21:29Z,is this being used? remove if not i was just thinking that the actual wheel platform is `win_amd64` and a better name would have been `py_platform` since it's platform tag generated by python.,0,0.9922974705696106
780782061,331,cas--,2022-01-09T13:30:43Z,can simplify to using run command `working-dir`keyword: [a link],0,0.994223415851593
780782728,331,cas--,2022-01-09T13:36:15Z,can we rename `delugensis.py` to something more meaningful such as `setup_nsis.py`,0,0.9940184354782104
780782891,331,cas--,2022-01-09T13:37:51Z,i dont' think we need to complicate this by setting envs for matrix options,0,0.9860171675682068
780783452,331,cas--,2022-01-09T13:42:55Z,what is the current status of the redistributables? will the user always have them installed?,0,0.9943179488182068
780803224,331,cas--,2022-01-09T16:30:55Z,"easier to maintain if move `gvsbuild` as an env to install deps section, use python and arch to populate filename.",0,0.990293025970459
780803492,331,cas--,2022-01-09T16:32:43Z,can we simplify by moving this as a matrix list: [code block],0,0.9944378137588501
780803767,331,cas--,2022-01-09T16:35:10Z,can you replace this env with `${{ matrix.libtorrent }}`,0,0.9948571920394897
780804078,331,cas--,2022-01-09T16:37:48Z,set-location line can be removed then,0,0.9944344162940979
784068053,331,DjLegolas,2022-01-13T15:29:30Z,needs to be dropped,0,0.9902296662330627
784119911,331,CirnoT,2022-01-13T16:24:50Z,this is not used anywhere. [code block],0,0.9952951073646545
784120423,331,CirnoT,2022-01-13T16:25:25Z,only used by `get_version` which itself is unused. [code block],0,0.9955784678459167
784122974,331,CirnoT,2022-01-13T16:28:16Z,any specific reason why rest of file uses `pip` while this line uses `python -m pip`? note that `pip` might reference different binary than module loaded by `python -m`.,0,0.9917035102844238
784123334,331,CirnoT,2022-01-13T16:28:40Z,any reason this is done separately from `libtorrent`?,0,0.9909192323684692
784124566,331,CirnoT,2022-01-13T16:30:00Z,"while i have nothing against it by itself, this is introducing dependency on binary release that is outside of deluge control. we should patch it ourselves or keep patched repository under `deluge-torrent` organization.",0,0.8866332173347473
784126100,331,CirnoT,2022-01-13T16:31:46Z,"have you checked if this is necessary on gh instance? a quick run from 64-bit windows shows that there are no `libssl-1_1.dll` files produced when running with 64-bit python, only `x64` variants. perhaps gh `x64` arch uses 32-bit python?",0,0.9932896494865417
784127980,331,CirnoT,2022-01-13T16:33:50Z,"this section looks good however it could be cleaner if we put the executable generation in a loop, so that any changes need to be done only once, not 6 times.",1,0.8782677054405212
789674273,338,cas--,2022-01-21T13:52:14Z,this should not be encoded,0,0.9841030836105347
789674855,338,cas--,2022-01-21T13:52:58Z,please import at top of module,0,0.9955859184265137
789688659,338,cas--,2022-01-21T14:10:56Z,this should not be logging anything,0,0.9674080610275269
791145666,338,DjLegolas,2022-01-24T20:58:19Z,why changed to `%-string`? `f-string` is much better,0,0.9902653098106384
791167272,338,DjLegolas,2022-01-24T21:32:08Z,"the `log.warning` call seem redundant as in the `except exception` below we print the same line, but with the exception info.",0,0.9782036542892456
791168412,338,DjLegolas,2022-01-24T21:33:55Z,why split the `ip`? are we expecting it to have several options? the same goes for `is_ipv6` function,0,0.9918321371078491
791175224,338,doadin,2022-01-24T21:44:29Z,yes for multi-homing.,0,0.985236406326294
791176755,338,doadin,2022-01-24T21:46:45Z,we could do the for loop else where where we need to verify interfaces/ips i guess.,0,0.9867804646492004
791178459,338,DjLegolas,2022-01-24T21:49:35Z,i asked because running it on the entire string will fail in case it contain several types of interfaces: [code block],0,0.9907761216163635
791187453,338,doadin,2022-01-24T22:03:24Z,true. would it work to extend is_ip to return return is_ipv4(ip) or is_ipv6(ip) or is_net_interface(ip),0,0.9930469393730164
791188669,338,doadin,2022-01-24T22:05:22Z,no that would still fail. hmmm not sure how to fix this.,0,0.5164695382118225
791190043,338,doadin,2022-01-24T22:07:38Z,i think i need to move the for loop out of the ip_* etc checks.,0,0.987996518611908
791202634,338,DjLegolas,2022-01-24T22:28:41Z,yep. maybe the outer function i suggested in the opening message. for example (the name needs to be changed :grinning_face_with_sweat:): [code block],0,0.9786399602890015
791220550,338,doadin,2022-01-24T23:00:55Z,honestly i think multi-homing is above my understanding.,0,0.7962602376937866
791232270,338,DjLegolas,2022-01-24T23:23:51Z,"don't worry, eventually we will get it also :) you are doing great, even without that feature :hundred_points:",1,0.9971743822097778
791241158,338,doadin,2022-01-24T23:43:22Z,i added a test but still not sure how to clean up if is_ip(inter) or is_net_interface(inter),0,0.9865391850471497
791304931,338,doadin,2022-01-25T02:21:55Z,would something like [a link] work?,0,0.9935494065284729
792027178,338,cas--,2022-01-25T18:56:20Z,i agree returning the binary format is not correct but when using try..except try to keep code being wrapped to a minumum: [code block],0,0.9821273684501648
792031190,338,cas--,2022-01-25T19:01:44Z,should not be logging a warning and needs to return `false` since:,0,0.9912464022636414
792031658,338,cas--,2022-01-25T19:02:20Z,i think we should move this to top of the module,0,0.9881781935691833
792032752,338,cas--,2022-01-25T19:03:53Z,this is not something that a common function should care about and should not modify either,0,0.8000746369361877
792034891,338,cas--,2022-01-25T19:07:02Z,i think we should standardise on the naming. so interface in libtorrent terms is an ip or adapter therefore `is_interface` would suffice perhaps?,0,0.9894225001335144
792040360,338,cas--,2022-01-25T19:14:40Z,continuing from previous comment how about `is_adapter`?,0,0.9952108263969421
792042893,338,doadin,2022-01-25T19:18:06Z,"i figured it would make it easyer on people to avoid simple errors and depending on how they find the network guid it may or may not provide it in upper and lead to confusion i could see people thinking ""im putting it in right, why is deluge broken?"" hence why it also logs a message so people know what it should be. your call though ill take it out.",0,0.8931107521057129
792044472,338,doadin,2022-01-25T19:20:11Z,yea already said just there for testing if the code works. which it does.,0,0.9899870753288269
792044689,338,cas--,2022-01-25T19:20:29Z,i understand but we can do that verification in the ui where we can easily provide feedback to the user.,0,0.9901566505432129
792045430,338,doadin,2022-01-25T19:21:38Z,alternatives? cause it doesn't work when its not. so not sure what you mean by shouldn't be.,0,0.8627429008483887
792383110,338,cas--,2022-01-26T07:59:07Z,this is the wrong way round `is_interface` should be `is_adapter`. an interface is either an ip address or adapter id and we are trying to match the function calls to the what is required for lt `listen_interface`,0,0.984510600566864
792444633,338,cas--,2022-01-26T09:23:17Z,"so this should be `str` and it looks like there is platform bug in ifaddr 0.1.7 since it's returning `bytes` on windows for adapter name, not good... [a link] can install that specific commit with: [code block]",0,0.5234330296516418
792947017,338,cas--,2022-01-26T18:56:08Z,"for this function we are only checking if it's an `ip` or `adapter` so not if there are multiple interfaces specified, quick list of changes: * replace `ip` parameter with `interface` * remove the comma split. * can you rename docstring to `check if interface is a valid ip or network adapter` * can be simplified to `return is_ip... or is_adapter...` this function can then be used in rest of modules for listen_interface or outgoing_interface checks",0,0.9838981032371521
792949593,338,cas--,2022-01-26T18:59:33Z,"why are we restricting to windows, if it's available we should use it",0,0.976355254650116
792949933,338,cas--,2022-01-26T19:00:01Z,the param should be named `adapter`,0,0.995854914188385
792953150,338,cas--,2022-01-26T19:04:15Z,"is this correct, i think 'in' would be error prone vs equality check?",0,0.9854501485824585
792981698,338,cas--,2022-01-26T19:33:03Z,"can we put ifaddr check first. also with an oserror we are unable to determine adapter status so have to return true. we could include a fallback for windows with your regex to do a pattern match so something like: ```python if not adapter: return false if not windows_check(): try: adapters = socket.if_nameindex() except oserror: pass else: return any([adapter == a[1] for a in adapters]) if ifaddr: try: adapters = ifaddr.get_adapters() except oserror: return true else: return any([adapter == a.name for a in adapters]) if windows_check(): regex = '^{[0-9a-z]{8}-([0-9a-z]{4}-){3}[0-9a-z]{12}}$' return re.search(regex, str(interface)) return true",0,0.9934733510017395
792989944,338,doadin,2022-01-26T19:44:34Z,the coma split is for multi-homing support while we did decide to focus on one thing in this pr i think it would be better kept as is so we don't have to re-write this again later.,0,0.9825146794319153
792990964,338,doadin,2022-01-26T19:46:07Z,later on we do linux_check() or osx_check() to not run ifaddr on linux or mac as it should not be needed since those platforms can use socket.if_nameindex().,0,0.9936274290084839
792994865,338,doadin,2022-01-26T19:51:29Z,"would it not be better to rely first on built-in vs third party? i would think third party would be less reliable, which is why i have it only using that on windows because windows we dont have a built-in, at least not yet.",0,0.9803329110145569
792999963,338,cas--,2022-01-26T19:58:27Z,"okay, there are pros and cons to third party libs but i'll concede here that we could put ifaddr after. i've updated the snippet to also pass on oserror so that it tries `ifaddr` if it's available and also rather than testing for linux/macos we just do negative check for windows to exclude it",0,0.9781457185745239
793003815,338,cas--,2022-01-26T20:03:22Z,sorry please remove and we'll create another function for that as needed,-1,0.9885280132293701
793014955,338,cas--,2022-01-26T20:19:00Z,can you put this comment in the commit message,0,0.9955744743347168
793014982,338,cas--,2022-01-26T20:19:04Z,we need to mention the optional dependency in depends.md and add it setup.py extras,0,0.9945318698883057
793015828,338,cas--,2022-01-26T20:20:08Z,this should use `is_interface`,0,0.9959593415260315
793016355,338,cas--,2022-01-26T20:20:42Z,should use `is_interface`,0,0.9954631924629211
793023645,338,doadin,2022-01-26T20:31:17Z,for some reason the git ui im using is not letting me.,-1,0.8998658657073975
793023967,338,doadin,2022-01-26T20:31:44Z,other than this rest is merged.,0,0.9908507466316223
793024021,338,cas--,2022-01-26T20:31:51Z,this can be put in the requirements.txt with `sys_platform == 'win32'` to only install for windows,0,0.9958629608154297
793030752,338,doadin,2022-01-26T20:41:19Z,nvm i got it to work.,0,0.971983015537262
793937874,338,cas--,2022-01-27T19:35:57Z,this should be is_interface and the empty check has been removed which would prevent clearing the field,0,0.9953235983848572
793938020,338,cas--,2022-01-27T19:36:10Z,is_interface,0,0.9951720833778381
793952278,338,cas--,2022-01-27T19:56:51Z,"naming here is quite important so apologies for changing my mind on this again. probably `is_interface_name(name)` is better here since adapter does suggest physical hardware whereas it could be a virtual interface and we are just checking that the name of the interface is correct. try not to use 'test' in this context for the docstring, this might be better: [code block] make sure to update rest of docstring",-1,0.8225496411323547
793952809,338,cas--,2022-01-27T19:57:39Z,if this is in requirement we don't need it here,0,0.9906775951385498
793954717,338,cas--,2022-01-27T20:00:20Z,we can just say `verify ...`,0,0.9946182370185852
793956454,338,cas--,2022-01-27T20:02:45Z,please remove both the comments as they don't add anything here. if anything the usage of ifaddr would be mentioned in the function. we can look at the git commit if we need to know why it was added,0,0.994769275188446
793957165,338,cas--,2022-01-27T20:03:48Z,this docstring needs correcting to from `ip` to `interface`,0,0.9954641461372375
793958963,338,cas--,2022-01-27T20:06:23Z,can be simplified `if_nametoindex(adapter)` and replace in else statement any() with true,0,0.995281994342804
793960923,338,cas--,2022-01-27T20:09:26Z,oh re.search should be wrapped in bool(),0,0.9934008717536926
793963545,338,cas--,2022-01-27T20:13:22Z,this is using plural but this change is only for singular. could also be shortened `ip address or network interface name to listen for incoming bittorrent connections. leave empty to use system default.`,0,0.9958409667015076
793963819,338,cas--,2022-01-27T20:13:45Z,singular just now please,0,0.9413206577301025
793964570,338,cas--,2022-01-27T20:14:51Z,see listen_interface comment,0,0.9949396848678589
793965000,338,cas--,2022-01-27T20:15:32Z,should not remove the empty check and use is_interface,0,0.9944618344306946
793965402,338,cas--,2022-01-27T20:16:10Z,same as incoming,0,0.9917933344841003
794279801,338,DjLegolas,2022-01-28T08:09:04Z,the ip or interface name to test,0,0.9949527978897095
794283460,338,DjLegolas,2022-01-28T08:15:15Z,make sure there are both `asserttrue` and `assertfalse` for all cases of tests,0,0.9937250018119812
794284548,338,DjLegolas,2022-01-28T08:16:59Z,maybe add also `ifaddr; sys_platform != 'win32'` for other oss,0,0.9930918216705322
795133037,338,DjLegolas,2022-01-30T06:07:54Z,add at the end of the file `[ifaddr]: [a link] to make it a link.,0,0.9956842660903931
227137152,221,aresch,2018-10-22T21:02:08Z,we should crash if there is an exception raised here. alerts from libtorrent are critical for deluge to function.,0,0.9802756905555725
227139737,221,aresch,2018-10-22T21:10:35Z,i think we could do this better by overriding pause() and clearing a threading event[0] and likewise with resume() setting the threading event. then just have a event.wait() call here to block until the component is resumed. this would require us to expose these methods in component since we currently don't do that. [0] - [a link],0,0.9873467087745667
227139845,221,aresch,2018-10-22T21:10:54Z,this should be removed.,0,0.9858825206756592
227504760,221,DjLegolas,2018-10-23T18:07:38Z,done.,0,0.9897913336753845
227504921,221,DjLegolas,2018-10-23T18:08:06Z,"hmm, good idea. done.",1,0.9799485802650452
227505181,221,DjLegolas,2018-10-23T18:08:46Z,thought i removed it... done.,0,0.9884961843490601
227543175,221,aresch,2018-10-23T20:02:28Z,why timeout here? this thread should block until the component has been resumed.,0,0.9864310622215271
227546656,221,aresch,2018-10-23T20:13:32Z,these comments can be removed as they are no longer relevant.,0,0.9905705451965332
227954766,221,aresch,2018-10-24T20:49:31Z,"i think this should be similarly to how _component_stop() is done. in other words, we should call pause() and then add on_pause() as a callback which does a _component_timer.stop(). this way it's consistent with the other behaviour and the pause() resume() signatures do not need to include a result from a previous deferred.",0,0.9861206412315369
227954837,221,aresch,2018-10-24T20:49:42Z,same comment as above with pause().,0,0.9944182634353638
228270005,221,cas--,2018-10-25T17:42:59Z,"there is a callback scoping issue with need_start, the value needs to be passed with the callback but i'm not sure the full purpose of this variable, can you elaborate? same in _component_pause()",0,0.9920720458030701
228275050,221,cas--,2018-10-25T17:57:06Z,it would be nice to not keep using hasattr: [a link],0,0.9495953917503357
228276784,221,cas--,2018-10-25T18:01:59Z,i saw you've used `set_alert_notify` in spritzle... better than timer perhaps?,0,0.9896742701530457
228278234,221,cas--,2018-10-25T18:06:03Z,need to update the `component` docstring for these new methods,0,0.9948179125785828
228281273,221,cas--,2018-10-25T18:15:15Z,"in fact the pause method is defined in the class so the object would always have the `pause` attribute. i think it is an artefact of initial rewrite: b0714f625f50 edit: hmm it seems my vague fix, changed things: 9053280e148799 thoughts? :)",1,0.9659992456436157
228336780,221,DjLegolas,2018-10-25T21:13:52Z,"i was thinking about preventing the next lines from being called in case we already called them... for example, in case we are in `_component_resume` and need to start the timer. if the component has the attribute `resume`, we need to call `resume()` and to `on_resume()` as a callback, in which we will start the timer. but, if the component don't this attribute, i call `_component_start_timer` and only than `on_resume()`. in this situation, i'll be calling `_component_start_timer` twice. so i need to prevent it. i'll change the signature of `on_resume` and `on_pause` so both will get this flag as parameter and not from the outer scope.",0,0.9592621326446533
228387136,221,aresch,2018-10-26T02:02:52Z,"yea, i would suggest using it but i'm not sure if it's in a released libtorrent. i think it would only be available in 1.2 with this commit: [a link] we probably don't want to raise the minimum libtorrent dependency to 1.2 quite yet.",0,0.990213930606842
228387262,221,aresch,2018-10-26T02:03:50Z,"yea, i don't think we need hasattr() anymore, you're right, we define the functions in the class now.",0,0.9879924058914185
229638726,221,cas--,2018-10-31T10:32:25Z,hmm well it is in 1.1 so that binding should have be exposed there...,0,0.9786051511764526
229640667,221,cas--,2018-10-31T10:37:51Z,"the `wait_for_alert` is now `1s` whereas the alertmanager was polling at `0.3s`, do you think this is perhaps too long?",0,0.9908447861671448
229811233,221,aresch,2018-10-31T18:11:17Z,"i don't think it's a problem since the only thing done in update() is the clean-up of delayed calls. i was actually going to propose removing that entirely but it was out of scope for this pr. i'll mention that idea now though. we could wrap all handler functions with another function that removes the delayed call from the list on completion which would remove the need to run a clean-up on the list. we'd probably want to change delayed_calls to a dictionary to make this work efficiently. [code block] in handle_alerts() we'd change the creation of the delayed call as such: [code block] anyways, if we think this is a good idea we should do it in a separate pr.",0,0.8828980922698975
229812147,221,aresch,2018-10-31T18:13:40Z,"i don't see it in the rc_1_1 branch, i think it's only in 1.2.",0,0.98541659116745
229819397,221,cas--,2018-10-31T18:34:07Z,i mean it is in c++ code for [a link] so the binding should have been fixed there,0,0.9892276525497437
229829079,221,aresch,2018-10-31T19:03:52Z,"oh, yea, we'd need to add it to the bindings. i think that for now, this approach is fine and there isn't much advantage to switching to use set_alert_notify.",0,0.9764091372489929
230605954,221,aresch,2018-11-04T21:24:25Z,i think this should probably be put in set_up().,0,0.9889333248138428
230606031,221,aresch,2018-11-04T21:26:16Z,"i'm worried about the timing here. i think the pause should happen and then alerts should be added to the sessionmock, then check to make sure an alert wasn't handled. the way its done right now, i think the alerts in the sessionmock could be handled before the pause occurs and the test isn't really testing anything since sessionmock.alerts == [].",-1,0.9788807034492493
230882954,221,DjLegolas,2018-11-05T19:34:21Z,"i tried moving it to `set_up()`, but got errors on other tests because of it. so currently i'm not changing it.",0,0.9633306264877319
230883387,221,DjLegolas,2018-11-05T19:35:35Z,reasonable point. changed.,0,0.9599772095680237
230929507,221,aresch,2018-11-05T22:00:41Z,"this still doesn't address my original comments. since you are setting self.am.session = sessionmock() before the pause happens, those alerts that are in the sessionmock.__init__ have already been processed. in other words, by the time you set the handler, there are no alerts to handle anyways so the test isn't actually testing what you expect. what you need to do here is simulate alerts coming from libtorrent while alertmanager is paused will not trigger a handler to run, so i think sessionmock.alerts needs to be built _after_ the alertmanager is paused.",0,0.9820885062217712
793179294,221,DjLegolas,2022-01-27T01:15:55Z,"4 years later, done :grinning_face_with_sweat:",1,0.9287509918212891
793179354,221,DjLegolas,2022-01-27T01:16:03Z,"4 years later, done :grinning_face_with_sweat:",1,0.9287509918212891
793203961,221,aresch,2022-01-27T02:23:41Z,"since component.pause() is asynchronous, wouldn't you need to call set_alerts() in a callback on the deferred? otherwise you may be calling set_alerts() before the component has actually been paused.",0,0.9899095296859741
793205605,221,gazpachoking,2022-01-27T02:28:06Z,immediately shows up to comment on an updated 4 year old ticket. :face_with_open_mouth:,0,0.47401711344718933
793372509,221,DjLegolas,2022-01-27T08:42:31Z,this is what happens when one writes code at 2am.. will be fixed. lol,1,0.9900434017181396
59131269,57,cas--,2016-04-10T10:18:38Z,log.warn or log.error instead?,0,0.9877532124519348
59131290,57,cas--,2016-04-10T10:19:29Z,do we know the exception to be raised?,0,0.990848183631897
59131296,57,cas--,2016-04-10T10:20:15Z,two too many log lines,0,0.8156722784042358
59131311,57,cas--,2016-04-10T10:21:21Z,pylint complains about redefining builtin `help`,0,0.8295679688453674
59131394,57,cas--,2016-04-10T10:30:46Z,"i think reword this ""enable logfile rotation (optional max file size, default 50mb)"" what do you think about renaming the command to `--logrotate`?",0,0.9907940030097961
59131426,57,cas--,2016-04-10T10:34:12Z,shouldn't really have a human-readable format as arg for a method,0,0.9835688471794128
59131454,57,cas--,2016-04-10T10:36:42Z,i like the idea of this but it fails if you enter an integer or '50mb',1,0.644923210144043
59202744,57,bendikro,2016-04-11T13:25:44Z,change to warn,0,0.9897101521492004
59203564,57,bendikro,2016-04-11T13:31:36Z,"hmm...not really. agree that it should not catch exception. tbh, it could just be part of dev testing and may not be needed now.",0,0.7932918667793274
59203703,57,bendikro,2016-04-11T13:32:30Z,will fix.,0,0.9901540875434875
59203805,57,bendikro,2016-04-11T13:33:13Z,what would you sugggest?,0,0.9921475052833557
59206241,57,cas--,2016-04-11T13:48:07Z,it's probably reasonable to expect an integer that would be megabytes,0,0.9858652353286743
59294252,57,bendikro,2016-04-11T22:40:52Z,remove log.exception(ex),0,0.9952126741409302
59297011,57,bendikro,2016-04-11T23:05:32Z,fixed,0,0.920660674571991
59297096,57,bendikro,2016-04-11T23:06:23Z,removed the try/except.,0,0.9932142496109009
59341819,57,cas--,2016-04-12T08:50:47Z,just to clarify i meant that only ui code should be using human2bytes.,0,0.9920748472213745
59342547,57,cas--,2016-04-12T08:55:51Z,i think we remove this for now and create a ticket to revisit inclusion.,0,0.9835208654403687
59342984,57,cas--,2016-04-12T08:59:05Z,sorry i meant to add remove the `-r` as it's not an option that needs a shorthand. perhaps split the max size to `--logrotatesize`?,-1,0.9823473691940308
59344186,57,bendikro,2016-04-12T09:08:35Z,isn't an optional argument ok?,0,0.9942911863327026
59344466,57,cas--,2016-04-12T09:11:07Z,"i guess so, perhaps it just needs better worded help hint.",0,0.9724699258804321
59552298,57,bendikro,2016-04-13T13:59:04Z,having a human readable has the advantage that it is human readable. having int in megabytes means you cannot set log size smaller than 1mb.,0,0.9870141744613647
59553471,57,cas--,2016-04-13T14:06:00Z,"i know but who would need to rotate logs at less than 1mb? i still maintain that you should not have human readable format as a input for an internal method, it should all be converted upon user input.",0,0.9816956520080566
59554520,57,bendikro,2016-04-13T14:11:49Z,"i actually agree the function should take an integer, but it doesn't really a need a default value? i'd say the value should be in bytes as a user may need less than mb even if it sounds strange. also considering the convert function outputs in bytes anyways, there is nothing to gain by converting that to mbs?",0,0.9469465017318726
59554621,57,bendikro,2016-04-13T14:12:23Z,"btw, does the convert functions look ok?",0,0.9763785600662231
59587273,57,aresch,2016-04-13T17:13:59Z,"yes, make it an integer of bytes.",0,0.9940165281295776
59984508,57,cas--,2016-04-17T13:41:52Z,docstring needs `bytes` specified,0,0.9943559765815735
59984547,57,cas--,2016-04-17T13:43:56Z,`delay=0` is a default value so can be omitted,0,0.9930625557899475
59984621,57,cas--,2016-04-17T13:46:42Z,"looking at docs `filemode` must simply be ignored as it's actually a named arg `mode`, defaults to `a` anyway so can be omitted.",0,0.9909148812294006
59984668,57,cas--,2016-04-17T13:48:32Z,do we think a backupcount of 3 is enough?,0,0.9901971817016602
59984733,57,cas--,2016-04-17T13:51:09Z,i think mention either here or in manpage about the backupcount being a set value,0,0.9866629242897034
59991228,57,bendikro,2016-04-17T19:53:38Z,will fix,0,0.9934358596801758
59991289,57,bendikro,2016-04-17T19:56:06Z,"no idea, should ideally be customizable.",0,0.9496243000030518
59991330,57,bendikro,2016-04-17T19:58:49Z,not following...,0,0.9816344380378723
59993885,57,cas--,2016-04-17T21:51:26Z,i was thinking that but perhaps 5 would be better for now.,0,0.9746135473251343
59994161,57,bendikro,2016-04-17T22:04:35Z,sure,0,0.9422702193260193
59994188,57,bendikro,2016-04-17T22:06:31Z,i see. just remove the filemode argument to rotatingfilehandler then.,0,0.9929991960525513
59994433,57,cas--,2016-04-17T22:24:22Z,yep (along with delay) perhaps i should have just written it that way first of all :d,1,0.9867343902587891
59994980,57,bendikro,2016-04-17T23:01:51Z,done,0,0.8682363629341125
59994983,57,bendikro,2016-04-17T23:02:03Z,fixed,0,0.920660674571991
59995145,57,bendikro,2016-04-17T23:16:16Z,fixed,0,0.920660674571991
189428376,181,doadin,2018-05-19T08:02:44Z,here wont work in windows,0,0.9721093773841858
189446641,181,cas--,2018-05-19T22:51:39Z,see fix here: [a link],0,0.9959316849708557
189448508,181,doadin,2018-05-20T01:11:50Z,"ok, ill re-run all the tests on windows and modify the commit as needed. ty.",0,0.9895662069320679
189473984,181,doadin,2018-05-20T23:28:14Z,apparently this breaks the deps install on appveyor. good news is it seems its not needed anyways since test still run just fine on travis.ci. and we get one passing test flake8 yay! lol,1,0.9862149357795715
189521438,181,cas--,2018-05-21T08:13:43Z,the colon is os specific: [a link] but i agree there is no need for it here.,0,0.9918361306190491
189521626,181,cas--,2018-05-21T08:14:33Z,why is the deluge-reporter being removed?,0,0.9855526089668274
189522202,181,cas--,2018-05-21T08:17:15Z,please use `windows_check()` from deluge.common,0,0.9958034157752991
189522538,181,cas--,2018-05-21T08:18:45Z,use a windows check to exclude importing instead of a try..except. we want the test to error if there are any issues importing these modules.,0,0.9909765720367432
189639915,181,doadin,2018-05-21T16:20:33Z,it stops the test from being run at all. the setup goes fine but then at the first command fails. says something about only passing report to something...i don't remember at the moment.,0,0.949749767780304
191636742,181,gazpachoking,2018-05-30T03:59:13Z,"should the separator be `{:}` to be cross platform compatible? [a link] i've barely followed this pr, so please ignore me if i'm off base.",-1,0.5200412273406982
191637526,181,doadin,2018-05-30T04:08:12Z,im not sure in general about the cross platform of the whole tox file still have to fix the depends too. have not really tried a whole lot so i dont know much either though -- mentioned about the separator earlier. any thoughts on it much appreciated.,1,0.9373412728309631
192101230,181,cas--,2018-05-31T13:37:32Z,"this matrix section can be improved by removing all the duplication of specifying python, see: [a link] and [a link]",0,0.9947128891944885
192105809,181,cas--,2018-05-31T13:51:11Z,i *think* you can set python version outside matrix for all matrix jobs e.g. [code block],0,0.9887588024139404
192108378,181,cas--,2018-05-31T13:58:47Z,"could we change this to remove `-d` on windows e.g.: daemon_args = ['-c', '%s', '-l', 'info', '-p', '%d'] if not windows_check(): daemon_args.append('-d') sys.argv.extend(daemon_args) i assume using `-d` causes an error? perhaps we should simply ignore the `-d` option on windows.",0,0.9939295053482056
192109716,181,cas--,2018-05-31T14:02:50Z,i just realised we should use the unittest `skipif`: [a link],0,0.992842435836792
192110592,181,cas--,2018-05-31T14:05:25Z,so os.devnull is cross-platform so perhaps `get_path_size` needs fixed rather than skip this test,0,0.9945165514945984
192111364,181,cas--,2018-05-31T14:07:35Z,"a possible issue with `files_list`! however, inside python windows should handle this so perhaps the test needs tweaked.",0,0.9886476397514343
192113021,181,cas--,2018-05-31T14:11:54Z,"since this is in the tests, a more generic version would do: [a link]",0,0.9949072003364563
192114696,181,cas--,2018-05-31T14:17:08Z,should this not be prefixed with `mywindows:`?,0,0.9941651225090027
192147418,181,doadin,2018-05-31T15:49:19Z,for now sure since we are only python 2 compatible but in the future adding 3.x python testing it would have to be non-global. changing now later it doesn't make a difference too much to me.,0,0.9691820740699768
192147782,181,doadin,2018-05-31T15:50:19Z,yes -d isnt a option on windows so it says unrecognized option or something like that.,0,0.9801469445228577
192149967,181,doadin,2018-05-31T15:56:48Z,i had issues trying to get that to work in my testing. got various results including it saying something like invalid package pywin3 or :pywin. feel free to try but i couldn't get it right and with only adding mywindows: pywin32 it didn't work if i remeber right.,0,0.5645803809165955
192284223,181,doadin,2018-06-01T02:09:06Z,in linux if you do os.path.getsize(os.devnull) you get 0 in windows you get error parameter incorrect nul. so yes os.devnull is available but no they are not the same. similarly if you do os.path.exists(os.devnull) linux returns true windows returns false which makes deluge.get_path_size return -1 on windows instead of 0.,0,0.9922910332679749
192350425,181,cas--,2018-06-01T09:56:40Z,well we cannot have this in tox.ini if it breaks on linux. could it be related to this issue: [a link],0,0.9932002425193787
192504267,181,doadin,2018-06-01T20:15:50Z,"not sure how thats related thats a issues, as stated in that issue, with pywin32's setup. i havn't even gotten it to go to that step. it errors trying to install a module not even in the list(pywin3, not pywin32) hence why its not valid and fails.",0,0.8357241749763489
192515690,181,cas--,2018-06-01T21:06:18Z,if you could provide the actual error that would be helpful.,0,0.989570140838623
192528438,181,cas--,2018-06-01T22:21:08Z,"i think there is a bug in tox when reusing deps, i was testing with `tox -e py27` and this workaround worked: [code block] all other combinations failed. so you need to specify pywin32 in each env",0,0.984257698059082
192550299,181,doadin,2018-06-02T05:17:58Z,"unless i did it wrong seems to work, besides a minor mistake i made, on travis(linux) but still a no go on appveyor(windows).",0,0.9626404643058777
101111955,138,cas--,2017-02-14T18:51:45Z,checking if the port is a valid int should be done in `parse_host_port`,0,0.9953166246414185
101112581,138,cas--,2017-02-14T18:54:15Z,a better descriptive name would be `split_ip_port` also it needs a docstring.,0,0.9927383065223694
101112717,138,cas--,2017-02-14T18:54:49Z,should return an empty tuple,0,0.9937752485275269
101113059,138,cas--,2017-02-14T18:56:20Z,what happens if the return from method is none or empty tuple?,0,0.98943030834198
101898047,138,cas--,2017-02-18T17:42:25Z,not important please remove,0,0.9869688153266907
101898231,138,cas--,2017-02-18T17:49:31Z,what is the purpose of prefixing with slashes?,0,0.9918176531791687
101898548,138,cas--,2017-02-18T18:00:47Z,is this required? if so it likely should be at the start or end of the method.,0,0.9932293891906738
101898555,138,cas--,2017-02-18T18:01:05Z,"since you are looking for text that is either not an empty string or none, all the `is not none` should be removed.",0,0.9919477105140686
101898650,138,cas--,2017-02-18T18:05:30Z,can you rename paste to clipboard so it's a bit clearer what the var is.,0,0.994495689868927
101916044,138,matiasw,2017-02-19T12:16:25Z,"well, it is the pasted text and not the clipboard returned by clipboard_get(), but ok.",0,0.9835610389709473
101916072,138,matiasw,2017-02-19T12:18:07Z,"if there is no scheme (like `[a link] the address needs an empty scheme (or ""prefixing with slashes"") so that eg. ?in `username:password` style addresses, `username` does not get confused with a scheme identifier.",0,0.9907799363136292
101916104,138,matiasw,2017-02-19T12:19:31Z,"if you mean the `emit_stop_by_name`, it is required strictly when we modify the entry field manually (to stop the clipboard contents from getting pasted at the end of the text we've set).",0,0.9918781518936157
101916144,138,cas--,2017-02-19T12:21:21Z,ok i see,0,0.9876125454902649
101916211,138,cas--,2017-02-19T12:24:21Z,"you can just use `text`, paste is too vague",0,0.9844614863395691
101916293,138,cas--,2017-02-19T12:27:18Z,ok so just do: [code block],0,0.9934805631637573
101916325,138,matiasw,2017-02-19T12:28:35Z,"i don't understand what you mean by this? would you rather have `typeerror: gtk.entry.set_text() argument 1 must be string, not none` each time one of these is none?",0,0.9162522554397583
101916450,138,cas--,2017-02-19T12:33:31Z,`if parsed.username:` is false for none,0,0.9939604997634888
101918385,138,cas--,2017-02-19T14:07:02Z,just use `.strip()`,0,0.9950778484344482
101918850,138,matiasw,2017-02-19T14:24:00Z,`strip()` only gets whitespace from the beginning and end of a string.,0,0.9920997023582458
101918997,138,cas--,2017-02-19T14:29:24Z,we are primarily concerned with trailing newlines causing issues so start and end is fine.,0,0.9845432639122009
17928811,12,cas--,2014-09-23T18:30:20Z,this list indentation needs correcting: [a link],0,0.9951624274253845
17928859,12,cas--,2014-09-23T18:31:07Z,"no need for a new line here, as per [a link] max line length is 119",0,0.9947977066040039
17928940,12,cas--,2014-09-23T18:31:59Z,"you can merge these two lines `zip_dir_path = _winreg.queryvalueex(hkey, ""path"")[0]`",0,0.9950591325759888
17929105,12,doadin,2014-09-23T18:34:15Z,[a link] just coping what was there before.,0,0.9869676232337952
17929119,12,cas--,2014-09-23T18:34:29Z,rename ambiguous `zip` to `win_7z`,0,0.9942046999931335
17929165,12,doadin,2014-09-23T18:35:03Z,ok,0,0.9233372807502747
17929237,12,doadin,2014-09-23T18:36:12Z,cool was also just copying what you had before from what you linked in the forums.,1,0.8072137236595154
17929605,12,cas--,2014-09-23T18:41:19Z,"i'm afraid you have actually changed the indentation, the diff clearly shows it.",-1,0.9591590166091919
17930384,12,doadin,2014-09-23T18:51:55Z,im sorry you are correct it was like that before but in copying to github the formatting was changed. corrected.,-1,0.9872776865959167
17930467,12,cas--,2014-09-23T18:53:27Z,indent is still not correct.,0,0.831818699836731
17930554,12,cas--,2014-09-23T18:54:33Z,"you may as well merge and replace `win_7z_dir_path`, it would still be readable.",0,0.9940582513809204
17930932,12,doadin,2014-09-23T18:59:32Z,i dont understand.,-1,0.5372415781021118
17932503,12,gazpachoking,2014-09-23T19:23:18Z,"yeah, i think that's what he meant.",0,0.9778784513473511
17932937,12,doadin,2014-09-23T19:29:37Z,if what i had before i edited my post was what he ment that doesnt work. it doesnt actually find the value of the registry key it just returns the code.,0,0.9634250998497009
17933171,12,gazpachoking,2014-09-23T19:32:44Z,"`win_7z_path = os.path.join(_winreg.queryvalueex(hkey, ""path"")[0], ""7z.exe"")`",0,0.9929110407829285
17933353,12,doadin,2014-09-23T19:34:58Z,"ah ok didnt know "" was bad. still trying to understand python lol.",1,0.9713563323020935
17940060,12,gazpachoking,2014-09-23T21:17:53Z,bare excepts are not good. we should explicitly put the exceptions we are expecting here.,-1,0.6103719472885132
17940675,12,gazpachoking,2014-09-23T21:27:53Z,"looks like windowserror would be the right one, and as much code as possible should be moved outside the try block. i think just the openkey needs to be in the try block, the import can go before, and the rest can go in an else block.",0,0.9851723909378052
17989048,12,doadin,2014-09-24T18:08:23Z,that to me just seems more complex. why do we need to limit the try block?,0,0.9472084641456604
17989926,12,cas--,2014-09-24T18:21:28Z,it should be try..except..else. example from existing code: [a link] one major reason is that it makes it easier to understand in the future when looking at the code what was actually being guarded. [a link] also could you keep the existing list of win_7x_exes and insert the path from reg at `index 1` in the `else`. it doesn't hurt to have a fallback to default location.,0,0.9897463321685791
17990292,12,cas--,2014-09-24T18:26:50Z,sorry keep this list as is,-1,0.9933395981788635
17990324,12,cas--,2014-09-24T18:27:01Z,replace this with `pass`,0,0.9946923851966858
17990396,12,cas--,2014-09-24T18:27:59Z,"change this to `win_7z_exes.insert(1, win_7z_path)`",0,0.9946655035018921
17990821,12,doadin,2014-09-24T18:34:09Z,its probably just me but i dont understand what you want me to replace. also you guys have commented saying to pretty much re-write the whole thing you guys can just do that if you want lol. its like a 10 line commit seems like it would be easier. i said i would take a stab at it and i did but honestly you guys could probably have made this change like 10 hours ago in only like 2 min.(you know what your doing obviously.),1,0.9230162501335144
17991417,12,cas--,2014-09-24T18:42:01Z,"instead of creating the list `win_7z_exes[...]`, you should insert `win_7z_path` into the existing list which should be returned to it's original position above the try..except. [a link] sometimes that's the way of things but it's your code idea that you are submitting and it means future code you submit will be more polished because we offered guidance on the changes required here.",0,0.9931782484054565
17992042,12,doadin,2014-09-24T18:49:55Z,i appreciate the help. i just dont understand your explanations sorry.,-1,0.9940887689590454
17992235,12,cas--,2014-09-24T18:53:23Z,"ok first of all, move the list `win_7z_exes` on `lines 63-67` above the `import` on line 58. then replace `lines 71-73` with the example i gave in the first comment: `win_7z_exes.insert(1, win_7z_path)`",0,0.9947932362556458
17993558,12,cas--,2014-09-24T19:13:55Z,keep the `except:` and `else:` and put the pass in the except statement: [code block],0,0.9955678582191467
185393399,180,aresch,2018-05-02T04:56:12Z,"this overrides the listen_interface, so it either needs to be renamed (and logic added below to restore the config value) or removed.",0,0.9940617680549622
185639577,180,doadin,2018-05-02T21:09:48Z,this should maybe be put in its own def.,0,0.97945636510849
189018513,180,cas--,2018-05-17T16:16:37Z,is it single or multiple interfaces that can be specified? if it is multiple then we will need to handle and document it.,0,0.9929828643798828
189061877,180,doadin,2018-05-17T18:42:19Z,"i don't know how long it has been like this but it is multiple just like listen_interfaces/listen_interface thats kinda why i was a little confused as i was seeing a lot of ""listen_interface"" and not ""listen_interfaces"" when i was looking how that was implemented. from the online documents for libtorrent listen_interfaces is ""a comma-separated list of ip port-pairs."". however at least more recently for outgoing_interfaces i believe this can be a interface eg. eth0,wlan0... on linux or unix type oss. however in deluge you have listen_interfaces set to verify against a single ip and no interface so a rework would be needed to support those. ( [a link] ) 1. don't verify listen_interfaces against a single ip, also listen_interfaces is ip and port so accept a port but strip it from the string in the ""is_ip"" function? 2. find a way to verify a interface instead of just a ip for the outgoing_interfaces. both are a comma-separated list of ips. listen also takes a port, outgoing also accepts in place of a ip a os interface.",0,0.8460537791252136
189157653,180,doadin,2018-05-18T03:52:58Z,"so something like [a link] is what i was thinking however this still doesn't cover network interfaces but does fix checking ips that may or may not have more than one or an ipv6 address with ""[]"" which we also have to separate out the brackets to get the ip separate from the port. if that made sense...lol those changes probably dont even work but hopefuly im at least close at an idea that can be worked out.",1,0.9369375705718994
189427878,180,cas--,2018-05-19T07:30:04Z,can we concentrate on just a single outgoing interface for now? so my suggestion is to rename it to `outgoing_interface` to keep with the naming style of `listen_interface`. we can add code to support multiple interfaces and interface name in future prs. keeping a pr simple will help it get merged sooner. also can you add a changelog entry.,0,0.9916247725486755
189428201,180,cas--,2018-05-19T07:52:07Z,i'd prefer this change: [code block] the translation string was incorrect since the colon could not be moved by the translator and there is no need for substitution as it is a fixed string.,0,0.9693241715431213
189428206,180,cas--,2018-05-19T07:52:13Z,this should be a docstring,0,0.9947307109832764
189428428,180,doadin,2018-05-19T08:06:29Z,yup sorry meant to make same change as above...whoever added these bits of code didn't flake8 shoulda realized that but really was wanting passing tests to see when i broke things :p,-1,0.6730329394340515
189428924,180,doadin,2018-05-19T08:39:56Z,"sure. i was a bit confused before i was like how is this setting getting applied if the libtorrent setting is ""listen_interfaces"" but every where in deluge its 'listen_interface"" but i see it now deluge\core\preferencesmanager.py>__set_list_on has apply_session_settings ""listen_interfaces"". *facepalm*",-1,0.842692494392395
189428981,180,doadin,2018-05-19T08:43:33Z,"should this really be listen interface maybe? since ""interface"" setting is for the daemon interface to listen on. or even incoming interface something idk.",0,0.9776567816734314
189446575,180,cas--,2018-05-19T22:48:27Z,"the daemon setting is rarely something a user will specify. however, if you have added outgoing interface then yes changing this to incoming interface .",0,0.9943017959594727
189450906,180,doadin,2018-05-20T04:30:46Z,this would also make the heading match gtkui and webui. so it will all look more uniform. though there it is incoming address not incoming interface. though also in the future both would be right as hopefully one day we can specify either.,0,0.9858309626579285
189513524,180,cas--,2018-05-21T07:31:52Z,remove this added line,0,0.9945299029350281
189514737,180,cas--,2018-05-21T07:38:55Z,"there is no need for `str()` function here, it is already a string if you are using `strip()` method",0,0.9944825172424316
189514964,180,cas--,2018-05-21T07:40:00Z,the join can be removed as it is only needed if you have a list and there is only a string passed here.,0,0.9947968125343323
189515490,180,cas--,2018-05-21T07:43:02Z,we should be more specific and say: `the ip address to open outgoing bittorrent connections on.`,0,0.9919528365135193
189516107,180,cas--,2018-05-21T07:46:13Z,please use: `ip address of the interface to open outgoing connections on.`,0,0.9951769113540649
189517883,180,cas--,2018-05-21T07:55:45Z,please use: `ip address for outgoing bittorrent connections.`,0,0.9954179525375366
189518095,180,cas--,2018-05-21T07:56:54Z,please use: `the ip address for outgoing bittorrent connections.`,0,0.9955736398696899
189518447,180,cas--,2018-05-21T07:58:42Z,please see other comments and use: `set the interface address for outgoing bittorrent connections.`,0,0.9957356452941895
799581356,359,gazpachoking,2022-02-04T15:44:14Z,this isn't so nice. we import reactor quite a bit. if we enable mypy i think we should figure out some better way than doing this in every file.,-1,0.8089703321456909
799581803,359,gazpachoking,2022-02-04T15:44:44Z,i can't really fathom why mypy doesn't infer the type here?,0,0.5897219181060791
799582838,359,gazpachoking,2022-02-04T15:45:57Z,this change was made so that mypy type narrowing worked and knew that torrent_ids couldn't be none any longer. for some reason `not torrent_ids` doesn't have the same result as far as mypy is concerned.,0,0.9870720505714417
799583427,359,cas--,2022-02-04T15:46:39Z,"this changes the functionality, an empty list would return nothing",0,0.9915241003036499
799583846,359,gazpachoking,2022-02-04T15:47:13Z,"ignored a bunch of stuff on inlinecallbacks for now. the generator would have to be properly type hinted as a generator, which is weird. this is one thing that would be a _lot_ easier with the `maybe_coroutine` branch. type hinting an async function is the same as doing a normal function, no need to do fancy gen typing stuff.",-1,0.9874375462532043
799585744,359,cas--,2022-02-04T15:49:28Z,why are we ignoring type here and below?,0,0.9608437418937683
799614615,359,gazpachoking,2022-02-04T16:18:52Z,"oh yeah, good point.",1,0.9164043664932251
799615762,359,gazpachoking,2022-02-04T16:20:14Z,mypy was complaining about inlinecallbacks getting the wrong type. (becasue i didn't document the generator as a generator) for some reason the ignore had to be on this line. i think struggles with typing inlinecallbacks for mypy probably go away if we switch to async/await.,0,0.935416042804718
799617034,359,gazpachoking,2022-02-04T16:21:42Z,i think i figured this out. made some stubs for twisted that i told mypy to load. defined reactor in the twisted.internet.__init__.pyi stub. i _think_ that still lets mypy use the real definitions for all the other twisted modules.,0,0.8957420587539673
799642725,359,aresch,2022-02-04T16:52:59Z,you have to make torrent_ids an optional[list[str]] since the default is none. [a link],0,0.9957144856452942
799643971,359,gazpachoking,2022-02-04T16:54:32Z,optional is implied when the default is none.,0,0.9933602213859558
799650904,359,gazpachoking,2022-02-04T17:03:08Z,"hmm, i guess current recommendations are to make the `optional` explicit, but the default mypy behavior still allows inferring it. [a link]",0,0.9777130484580994
799655507,359,aresch,2022-02-04T17:09:19Z,maybe it only makes it optional if you provide no typing?,0,0.9811767339706421
799659564,359,gazpachoking,2022-02-04T17:14:56Z,"it for sure was getting the optional type. the issue i was actually trying to solve was: `item ""none"" of ""optional[list[str]]"" has no attribute ""__iter__"" (not iterable)`. when the if was just `if not torrent_ids` it didn't narrow the type down to list[str], but when the check changed to `if torrent_ids is not none` it did narrow the type down, and allow iterating on it without complaint.",0,0.9872309565544128
799886159,359,gazpachoking,2022-02-04T23:50:23Z,"i did a test merging my mypy stuff with the maybe_coroutine branch, and type hinting is muuuch nicer (than inlinecallbacks.) no need to wrap stuff in `deferred[returntypehere]` no need to document generators with weird generator type hints where you have to specify the yield, send, and return types, all just works.",1,0.7304448485374451
799929361,359,aresch,2022-02-05T02:45:13Z,"huh, i guess it's because of the for loop below the conditional. mypy doesn't know that you're changing the none into a list[str] with the call to get the torrents list. i suppose there are a few ways to change the code to work without reassigning torrent_ids which would likely fix the issue. i also wonder if setting the return value of torrentmanager.get_torrent_list() to list[str] would help?",0,0.9687095284461975
799932216,359,gazpachoking,2022-02-05T03:08:51Z,"i actually figured it out. it wasn't the `not torrent_ids` that was messing up, it was that i hadn't typed `self.torrentmanager`, so it didn't actually know the return type when torrent_ids got reassigned. did some more testing in another branch and got it working fine.",0,0.7869730591773987
790301237,343,cas--,2022-01-23T16:41:18Z,if we bump this version we can also remove any conditionals related to 1.2.0 elsewhere in code,0,0.9937589168548584
18391483,14,cas--,2014-10-03T12:13:30Z,it can't return both a `bool` and `list`...,0,0.9907138347625732
18391604,14,bendikro,2014-10-03T12:17:36Z,good point,1,0.9818260669708252
18391738,14,cas--,2014-10-03T12:21:37Z,already emitted on line 550,0,0.9941349625587463
18391861,14,cas--,2014-10-03T12:25:28Z,`keyerror` should be unneeded here,0,0.9943846464157104
18391897,14,cas--,2014-10-03T12:26:29Z,assign `torrent = self.torrents[torrent_id]` here to save repeated lookups the get_status could then be outside the try..except,0,0.9950845837593079
18392058,14,cas--,2014-10-03T12:31:03Z,`except exception` argh!,-1,0.991389811038971
18392087,14,cas--,2014-10-03T12:31:50Z,both these lines should be outside try,0,0.9887669682502747
18392119,14,cas--,2014-10-03T12:32:43Z,except exception argh! also it's better to use `ex` than `e`,-1,0.9916459918022156
18392175,14,cas--,2014-10-03T12:34:52Z,comparison should use `==` unless comparing objects also this should be done in `core.remove_torrent`.,0,0.9951403141021729
18392233,14,cas--,2014-10-03T12:36:59Z,should fit fine on one line?,0,0.9906600117683411
18397252,14,cas--,2014-10-03T14:18:31Z,this function should be converted to a tm method `remove_torrent`,0,0.9960571527481079
18414864,14,bendikro,2014-10-03T19:29:35Z,thats not mine actually ;-) [a link],1,0.9934108853340149
18414887,14,bendikro,2014-10-03T19:30:08Z,"ok, thats mine",0,0.9815078377723694
18417123,14,cas--,2014-10-03T20:15:00Z,it has actually been updated since... [a link],0,0.9940025210380554
18417197,14,bendikro,2014-10-03T20:16:26Z,"i know, already updated that part.",0,0.9896221160888672
18421679,14,cas--,2014-10-03T21:55:56Z,`defer` docstring line needs removing,0,0.9953586459159851
18421704,14,cas--,2014-10-03T21:56:21Z,needs updating,0,0.9924386143684387
18422250,14,cas--,2014-10-03T22:11:41Z,this `emit` has to be before `session.remove_torrent`,0,0.9954219460487366
21093154,14,bendikro,2014-12-01T15:03:09Z,fixed,0,0.920660674571991
21093158,14,bendikro,2014-12-01T15:03:16Z,fixed,0,0.920660674571991
21149127,14,cas--,2014-12-02T10:00:42Z,just need `if save_state`,0,0.995532751083374
21157882,14,bendikro,2014-12-02T13:21:56Z,fixed,0,0.920660674571991
784414282,337,CirnoT,2022-01-14T00:01:29Z,we don't need tests from twisted polluting resulting binaries [code block],0,0.9906811118125916
784785750,337,CirnoT,2022-01-14T11:55:26Z,"this code is broken, on `>= 3 < 10` nothing happens.",0,0.9179496765136719
784788634,337,CirnoT,2022-01-14T12:00:25Z,"i know i recommended it myself, but after checking it it seems to pollute resulting binaries by doubling their size. this is most likely due to stuff like `dis`, `compileall`, `mslib`, `winsound`, `pipes`, `trace` and various multimedia/3d modules that are of no use. i am at the moment conflicted whether we should keep using a list of curated modules or some sort of list of modules we should ignore.",-1,0.733209490776062
784795770,337,CirnoT,2022-01-14T12:12:58Z,the issue with excluding would be that we'd never know if something of deluge (for example `pygame`) doesn't depend on it (for example `winsound`),0,0.9134085178375244
784796084,337,cas--,2022-01-14T12:13:31Z,`version_info` not `versioninfo`,0,0.9948703050613403
784797221,337,CirnoT,2022-01-14T12:15:30Z,also i'd recommend updating the list to a new one i've just made by manually checking modules instead of going by common names: [code block],0,0.9936398863792419
784799652,337,cas--,2022-01-14T12:19:42Z,"curated has worked fine for deluge in the past so happy to go with that, although nearly all of those are already used by core code anyway. also `csb` looks like typo for `csv`",1,0.982365071773529
784802169,337,CirnoT,2022-01-14T12:23:49Z,"they are indeed, if i'm not mistaken only `http.cookies`, `urllib.*` and `email.*` was additionally imported (though i've tested on 2.0.5 so that might change with removal of `six` from dependencies)",0,0.9928552508354187
784803269,337,cas--,2022-01-14T12:25:33Z,wheel should be kept here so it's available when pip installs packages we should either go for `python -m pip install` or use `pip install` (seems fine to use this) but let's try not to mix usage. as cirnot mentioned it's a bad practice that under other environments can give you unexpected results.,0,0.978968620300293
784806630,337,cas--,2022-01-14T12:31:09Z,if we modify the run to use [a link] this could be much cleaner: [code block] remember to keep a space between commands,0,0.9923012256622314
784865083,337,CirnoT,2022-01-14T14:01:10Z,this is still broken - you are collecting `twisted` in a loop.,0,0.8406204581260681
784876283,337,doadin,2022-01-14T14:16:17Z,copy pasted part from your comment didn't really look at this. oops.,-1,0.9786106944084167
784879544,337,doadin,2022-01-14T14:20:33Z,my bad fixed it.,-1,0.9953086972236633
789472442,337,doadin,2022-01-21T09:02:03Z,"imo ""cleaner"" is a personal opinion type thing so i am not going to try and cover this. :)",1,0.988389253616333
789652059,337,cas--,2022-01-21T13:21:08Z,"is this list intended for all python3 versions, not just 3.10?",0,0.9936020970344543
790022452,337,CirnoT,2022-01-21T22:00:18Z,yes that list works for all python 3 versions,0,0.9910153746604919
802748049,369,cas--,2022-02-09T14:54:24Z,why was this removed?,0,0.990842342376709
802750019,369,gazpachoking,2022-02-09T14:56:02Z,"it was never activated, because we are inside an if block that already checks it: [a link]",0,0.9954004883766174
802763187,369,cas--,2022-02-09T15:07:55Z,"naming of `update_status` seems misleading, `get_status` or `fetch_status` perhaps? maybe with a `cached=false` arg?",0,0.99000084400177
802767719,369,cas--,2022-02-09T15:11:58Z,i'm not sure if it would make it more or less complex to use `cached_property` but moving to a status property looks good :+1:,1,0.993066668510437
802773484,369,gazpachoking,2022-02-09T15:17:11Z,"yeah, i did `get_status` at first, until i realized there already is a `get_status` which is a combined options and status dict. maybe rename `torrent.status` cache to `torrent.lt_status`, and have `torrent.get_lt_status`?",0,0.9902077317237854
802785823,369,gazpachoking,2022-02-09T15:27:44Z,"took a peek at cached_property, doesn't look like it helps us much.",0,0.9542375802993774
802957826,369,gazpachoking,2022-02-09T18:14:10Z,"so i did the rename to `torrent.lt_status`, with the refresh option now being `torrent.get_lt_status()`. i think this helps clarify the difference between the libtorrent object and the deluge status dict, which is grabbed by `torrent.get_status()`. happy to do it a different way though if anyone has better ideas.",1,0.7461545467376709
802974829,369,cas--,2022-02-09T18:34:56Z,this is a problem since `lt_status` is not defined,0,0.9527009129524231
802975815,369,cas--,2022-02-09T18:36:07Z,yeah i did want to think about this some more as i am not sure that we should be exposing torrent handle status outside of the torrent class,0,0.9512080550193787
803016105,369,gazpachoking,2022-02-09T19:27:53Z,it's the `` i added.,0,0.9942576885223389
803016996,369,gazpachoking,2022-02-09T19:29:10Z,"yeah, i was thinking that as well. it's only used in a few spots in torrentmanager, which could probably be updated.",0,0.9839913845062256
803020226,369,cas--,2022-02-09T19:33:20Z,doh missed that,-1,0.9165465235710144
803024224,369,gazpachoking,2022-02-09T19:38:33Z,the one spot in torrentmanager where it seems sorta important is here [a link] which is where it handles the bulk update alert and updates the status cache of all the torrents. i think this was one of the things that improved performance on large numbers of torrents.,0,0.9381396174430847
805849314,369,cas--,2022-02-14T13:38:39Z,"i am not sure about wholesale renaming here, perhaps we keep `status` attribute for now and keep new `get_lt_status`?",0,0.9730738401412964
805882828,369,gazpachoking,2022-02-14T14:14:24Z,"that seems good to me too. i think perhaps `status` could/should be renamed and become private in the future, (maybe `self._lt_status`,) but i don't think that needs to be tied up in this bugfix. i'll fix the pr up when i get a chance.",1,0.7512937784194946
806455012,369,gazpachoking,2022-02-15T05:21:15Z,"reverted the `.status` rename, but kept the `.get_lt_status()` now.",0,0.9941504597663879
806651859,369,cas--,2022-02-15T09:57:09Z,"imported optional but is string here, overzealous stringifying?",0,0.9373905658721924
806655530,369,cas--,2022-02-15T10:00:58Z,it seems that using `lt.torrent_status` here and for above method is causing the autodoc errors. using the full `libtorrent.torrent_status` works though :shrug:,0,0.6445871591567993
806666504,369,cas--,2022-02-15T10:12:53Z,actually using `lt` module seems to be the issue here so any other string would work,0,0.9917048215866089
806679395,369,cas--,2022-02-15T10:27:16Z,i added some debug to sphinx_autodoc_typehints.process_docstring and i can see the issue is that it is encountering a `mock object` which seems to be tripping it up. this is likely due to mocking libtorrent and other 3rd party modules in sphinx config.,0,0.9806405305862427
806750951,369,cas--,2022-02-15T11:53:40Z,fixed: 62a40521789eab27341,0,0.9915406107902527
807010700,369,gazpachoking,2022-02-15T16:04:00Z,"good sleuthing, thank you!",1,0.9949386119842529
60835255,78,cas--,2016-04-23T21:29:28Z,this looks unneeded,0,0.7960638999938965
60835271,78,cas--,2016-04-23T21:30:57Z,i was hoping to not have a dependency on `ui` in core... revisit as some future point,0,0.9728954434394836
60835873,78,cas--,2016-04-23T22:16:16Z,should add a log warning that translation is unavailable but strings have been marked for translation,0,0.9940921664237976
60836140,78,bendikro,2016-04-23T22:39:28Z,"oh, yeah",0,0.9325439929962158
60836210,78,bendikro,2016-04-23T22:42:48Z,it only needs this: [code block],0,0.994520366191864
60836397,78,cas--,2016-04-23T23:01:43Z,i can't see any other use for it in `lang.py` so perhaps move it here is a good idea,0,0.9463517665863037
60842060,78,bendikro,2016-04-24T10:00:17Z,log warning where? in `set_dummy_trans()` or when `_` is called?,0,0.992179274559021
60851903,78,cas--,2016-04-24T21:07:53Z,when `_` is called,0,0.9948892593383789
60852039,78,bendikro,2016-04-24T21:15:21Z,it's called from setup_translations as well,0,0.9950538873672485
60852199,78,bendikro,2016-04-24T21:24:34Z,done,0,0.8682363629341125
60852248,78,cas--,2016-04-24T21:27:40Z,was this meant to set `warn_msg=true`?,0,0.9933664202690125
60852542,78,bendikro,2016-04-24T21:43:30Z,"ah, yeah",0,0.9235747456550598
60893438,78,bendikro,2016-04-25T10:36:07Z,this causes an error when trying to save when not connected to a daemon. it should be possible to save the interface page when not connected.,0,0.8322505950927734
60897716,78,cas--,2016-04-25T11:18:53Z,this change causes an error?,0,0.983315110206604
60898064,78,cas--,2016-04-25T11:22:59Z,i shall revert it,0,0.9887213110923767
60903263,78,bendikro,2016-04-25T12:19:04Z,reverted this change and added the refresh popup,0,0.9943971633911133
1741030999,454,Lord-Kamina,2024-09-02T14:54:26Z,this is just to avoid using a deprecated class name.,0,0.9919792413711548
1741032160,454,Lord-Kamina,2024-09-02T14:55:02Z,"currently, pytest is pinned due to console tests failing, which is fixed by this pr.",0,0.9777988791465759
1741033487,454,Lord-Kamina,2024-09-02T14:55:47Z,"libtorrent is pinned also due to a test failure, but the change was introduced in 2.0.9. we should eventually fix our test rather than keep pinning, but we can still update libtorrent even if just a bit.",0,0.989747166633606
1741038372,454,Lord-Kamina,2024-09-02T14:58:32Z,"these changes are due to the pytest developers recommending that twisted not be used directly in tests with fixtures. from the pytest-twisted docs: `using twisted.internet.defer.inlinecallbacks as a decorator for test functions, which use fixtures, does not work. please use pytest_twisted.inlinecallbacks instead.`",0,0.9894530773162842
1741039790,454,Lord-Kamina,2024-09-02T14:59:29Z,"this was calling the real `consoleui.quit()`, which was stopping the reactor and thus making the tests go boom.",0,0.9669965505599976
1741042007,454,Lord-Kamina,2024-09-02T15:00:47Z,"this flat-out produces an error, because `__qualname__` is an attribute that classes (not their instances) have.",0,0.7745932340621948
1744287814,454,cas--,2024-09-04T19:06:24Z,these are pinned to avoid breaking the ci over time so can be version bumped but must still be pinned,0,0.9930844306945801
1744295074,454,cas--,2024-09-04T19:13:45Z,"we support a minimum version of twisted and afaik this would break that so needs to be reverted, i don't think they are actually removing it anytime soon. we could add a twisted version check for the import but would need a comment to explain why gireactor is being used since the twisted docs are now contradictory about not using it for ui.",0,0.976084291934967
1744304348,454,cas--,2024-09-04T19:22:14Z,when does it raise an error? handlers are functions or methods not class instances so `handle.__class__.__qualname__` does not make seem to make sense here?,0,0.9914315938949585
1744305797,454,Lord-Kamina,2024-09-04T19:23:47Z,"for now, i'm happy to change it to `libtorrent==2.0.8`, but i think there's a discussion to be had about this (not in the context of this pr): i can understand the desire for the ci to not break easily, especially if you have little time as-is, but imo a ci shouldn't easily break (if at all) due to a dependency publishing new bug-fix level releases. you're pinned to a two-year old version of what is quite probably your most important dependency. there has to be a better way to approach it (i have a few different ideas, but i don't really know where is the best place to start a discussion such as this?)",0,0.7170308232307434
1744315710,454,Lord-Kamina,2024-09-04T19:33:22Z,"does it though? the current requirement spec is: [code block] and the twisted api documentation for 16.4.1, a full major version earlier ([a link] already has the `gireactor`, with an api that i think is identical?",0,0.9907842874526978
1744320268,454,Lord-Kamina,2024-09-04T19:38:05Z,"see this log, for an example: [a link] edit (copied the error here for ease): [code block]",0,0.9937899708747864
1744326691,454,Lord-Kamina,2024-09-04T19:42:43Z,"although now... reading that again, it might be an issue specific to running the tests.",0,0.9601746201515198
1749010254,454,Lord-Kamina,2024-09-08T00:10:40Z,-- i have reverted that change and implemented a proper fix in the actual test now.,0,0.9917871356010437
63072658,90,cas--,2016-05-12T18:31:30Z,action='store' is default so can be omitted,0,0.9951643943786621
63072714,90,cas--,2016-05-12T18:31:51Z,action='store' is default so can be omitted,0,0.9951643943786621
63106852,90,bendikro,2016-05-12T22:17:42Z,fixed,0,0.920660674571991
63106859,90,bendikro,2016-05-12T22:17:45Z,fixed,0,0.920660674571991
63966531,90,cas--,2016-05-19T22:46:33Z,"at first glance i'm not sure what the differences are between `do_command`, `parse_command` and `exec_command` are. i think updates to the docstrings might help.",0,0.9552924036979675
63966859,90,cas--,2016-05-19T22:49:41Z,i don't see further usage of `self.ui_args`?,0,0.9921582937240601
63967002,90,cas--,2016-05-19T22:51:08Z,i don't see further usage of `self.ui_args` here either?,0,0.9917997121810913
63967876,90,cas--,2016-05-19T22:59:42Z,needs a better docstring to differentiate from above one,0,0.9889640808105469
63968145,90,cas--,2016-05-19T23:02:21Z,is this text about the help option correct? it doesn't seem to have any relevance here but if it does i think a bit more info is needed.,0,0.9771993160247803
63968421,90,bendikro,2016-05-19T23:05:24Z,the difference is explained tho...,0,0.9904227256774902
63969023,90,cas--,2016-05-19T23:12:25Z,perhaps `parse ui arguments and handle common and process group options without error.` will do. it just need a bit more explanation for future code browsing :d,1,0.8383159041404724
63970858,90,bendikro,2016-05-19T23:32:07Z,fixed,0,0.920660674571991
63971236,90,cas--,2016-05-19T23:36:41Z,i think you should replace these 3 lines with: [code block] i know it's using a private method but the duplication is hurting my eyes :p,1,0.963190495967865
63971512,90,cas--,2016-05-19T23:40:21Z,this comment should perhaps mention that the arg results are processed here but the text will not be shown and reusing the group later in code is required for displaying to the user.,0,0.9913817048072815
63971834,90,bendikro,2016-05-19T23:44:25Z,updated docs,0,0.9843059778213501
63973521,90,bendikro,2016-05-20T00:03:25Z,updated comments,0,0.9693782925605774
64040297,90,bendikro,2016-05-20T13:26:04Z,"no, can just do with the pop",0,0.9915299415588379
64040465,90,bendikro,2016-05-20T13:26:40Z,same. only used in console,0,0.9939862489700317
64061302,90,cas--,2016-05-20T15:35:25Z,this code seems to have no effect when removed? the ui options help is still displayed with `deluge -h console`,0,0.9929595589637756
64071199,90,bendikro,2016-05-20T16:41:57Z,you are right. the issue this code handled was actually fixed by the changes here: [a link],0,0.977113664150238
198511971,196,cas--,2018-06-27T14:17:17Z,"should avoid using hanging indents so drop the first item onto a new line and dedent. also, include a reference link to where this list originated from for aid future devs looking at this code.",0,0.9935551285743713
198512109,196,cas--,2018-06-27T14:17:37Z,should not need to use `str` here,0,0.9946394562721252
198515362,196,cas--,2018-06-27T14:26:02Z,instead of a major addition we could override the server version manually before creating the site: [code block] since this is only set once when the server module is imported it should not be altered.,0,0.9934102892875671
198516417,196,cas--,2018-06-27T14:28:46Z,"i don't think we want `insecurelylowerminimumto`, see [a link] i have set tls 1.2 for python 3 changes using: `raiseminimumto=tlsversion.tlsv1_2` do you think that the minimum that twisted require will be an issue?",0,0.992119550704956
198680003,196,DjLegolas,2018-06-28T00:34:33Z,done.,0,0.9897913336753845
198680020,196,DjLegolas,2018-06-28T00:34:44Z,done.,0,0.9897913336753845
198680109,196,DjLegolas,2018-06-28T00:35:14Z,"hmm, good idea.. done.",1,0.9689487814903259
198680194,196,DjLegolas,2018-06-28T00:35:56Z,"no, i don't think so. btw, your change forced me to merge the two branches manually.",0,0.9818198680877686
201328044,196,cas--,2018-07-10T12:48:33Z,perhaps instead of adding more code to common.py create a new crypto.py or crypto_utils.py file,0,0.9820187091827393
201504185,196,DjLegolas,2018-07-10T21:39:56Z,done. moved to `crypto_utils.py`,0,0.9853228330612183
207725835,196,cas--,2018-08-05T05:36:05Z,can we use google style docstrings here please,0,0.9945981502532959
209314089,196,cas--,2018-08-10T16:22:26Z,this change shouldn't be needed it will only run security tests with `-m`. is this accidental?,0,0.9881076216697693
59982432,67,cas--,2016-04-17T11:27:24Z,is this very short sleep required?,0,0.9850800633430481
59982635,67,cas--,2016-04-17T11:41:49Z,does this signal still get caught? i feel that self.close and self.pre_shutdown be combined and use just this trigger?,0,0.9907664060592651
59982809,67,cas--,2016-04-17T11:51:07Z,are these torrentmanager changes related to this pr?,0,0.9939373731613159
59982904,67,cas--,2016-04-17T11:58:07Z,probably better with `if not self.closing` and drop the `return`,0,0.9870365858078003
59991645,67,bendikro,2016-04-17T20:16:29Z,"umm...no i checked the return value during testing, but it's not needed for the pr. would be reasonable to return a value or success/failure? not strictly used for anything at the moment tho.",0,0.923997163772583
59992394,67,bendikro,2016-04-17T20:48:55Z,"not sure, just found this: [a link] i was going to ask whether this code is even necessary at all...?",0,0.8568617701530457
59992407,67,bendikro,2016-04-17T20:49:13Z,i've combined the two functions.,0,0.9929310083389282
59992426,67,bendikro,2016-04-17T20:50:02Z,i'd say it's best to avoid indentations of possible?,0,0.9841282963752747
59994186,67,cas--,2016-04-17T22:06:29Z,i'm sure i looked into it before but forgotten the original reason. as this is on shutdown the delay should be unneeded. one of the original sources for this code is probably the pygtk faq: [a link],0,0.9765872359275818
59994523,67,cas--,2016-04-17T22:29:53Z,"i think without a concrete idea of return value, it's best left without so it's relatively obvious",0,0.9682232737541199
60021166,67,bendikro,2016-04-18T08:24:59Z,"the comment says `# process any pending gtk events since the mainloop has been quit`, but what events would this be? when performing a long running task the gui is unable to update making it seem to freeze. in which case this code would be useful. maybe it was added to try to fix issues with the gtkui not properly closing in standalone mode when closing with ctrl-c? if that is the case, it's not needed, as it does not fix that problem, and the issue is fixed by this pr anyways.",0,0.9901983737945557
60040939,67,cas--,2016-04-18T11:14:30Z,"the changes were made in 790a10e3, d0fb657adaa, a3636ccd and 848b14605eb3b but there are few details of the whys...",0,0.9924136996269226
60041643,67,cas--,2016-04-18T11:20:48Z,this has to be done before shutdown as the comment describes and is tied to `self.torrentview.save_state()`,0,0.9958827495574951
60041701,67,cas--,2016-04-18T11:21:28Z,"to me this seems like the exact same as if twisted catches the sigint before shutdown. why not simply `reactor.addsystemeventtrigger(""before"", ""shutdown"", self.close)`?",0,0.9887924790382385
60044006,67,bendikro,2016-04-18T11:44:43Z,"they do explain the purpose of the changes: - `fix #535 fix saving column widths` - `fix exception when quitting in classic mode` - `fix saving torrent state on fresh configs` so if all these work now it should be ok to remove the code. i haven't tested if the column widths are saved. state should be properly saved, but ideally there would be unit tests for this. when testing with print statements the save state function did run properly, because the whole component shutdown process is now ensured to be performed before the reactor is shutting down. i have not tested on windows, which probably would be a good idea.",0,0.982376217842102
60044255,67,bendikro,2016-04-18T11:47:07Z,"it is done before reactor shutdown. before the last rebase, pre_shutdown was actually run after the close function, but now the same code is run before.",0,0.9940211176872253
60045013,67,bendikro,2016-04-18T11:54:15Z,"well, it doesn't work. gtkui ends up hanging. current code closes gtkui standalone flawlessly both with regular quit (from menu or x button) as well as sigint.",-1,0.7408843040466309
60045489,67,bendikro,2016-04-18T11:58:53Z,umm...after rebase on latest develop sigint gives new stacktrace. **edit: false alarm**. had some old files lurking around. still works good.,0,0.8142034411430359
60046308,67,cas--,2016-04-18T12:06:19Z,i was actually going to test this myself after lunch but thanks for checking.,1,0.9096872210502625
60046789,67,cas--,2016-04-18T12:10:48Z,considering for a while windows was excluded from running this code i think it'll be safe to remove :d,1,0.986466109752655
60048906,67,bendikro,2016-04-18T12:29:34Z,good point. removed the code.,1,0.9576898813247681
795852668,354,cas--,2022-01-31T16:36:54Z,we don't normally run this test as it's quite a long test but this module can be tested if you add the text security_test to pr description: [a link],0,0.9941808581352234
795977836,354,gazpachoking,2022-01-31T19:04:04Z,"not sure if we care about this or not, i didn't see any code that would actually handle this case.",-1,0.6207822561264038
795978415,354,gazpachoking,2022-01-31T19:04:46Z,"the test claims it should raise an exception, but it just logs the error right now. don't know if we want to update the behavior.",0,0.9052764773368835
795979277,354,gazpachoking,2022-01-31T19:05:55Z,"was there a reason this didn't get returned before? it was being patched in the tests to return this, but i couldn't figure why we didn't want it to return in the real code.",0,0.968693733215332
795979592,354,gazpachoking,2022-01-31T19:06:27Z,anyone remember what this is for? can it just be ripped out?,0,0.9941375255584717
795981379,354,gazpachoking,2022-01-31T19:08:51Z,"not wild about this file not being in the `tests` subfolder, but i didn't know how to make it apply to plugin tests as well without moving it up to the root.",0,0.5096140503883362
796012538,354,aresch,2022-01-31T19:51:07Z,just delete this file?,0,0.9938566088676453
796020481,354,gazpachoking,2022-01-31T20:02:21Z,"that was my thought, was just seeing if anyone remembered what it was for first.",0,0.9833549857139587
796186075,354,gazpachoking,2022-02-01T00:49:15Z,"thanks. yep, those are looking good too.",1,0.9866334199905396
798647136,354,cas--,2022-02-03T14:55:29Z,this should be excluded from the packaging if it's in this dir. is this [a link] the problem? can we try the suggested solution?,0,0.9926750063896179
798649907,354,cas--,2022-02-03T14:57:55Z,i'm not sure that there was any need to return it so seems fine to include it,0,0.9689745903015137
798682095,354,gazpachoking,2022-02-03T15:28:04Z,"this suggested solution is the one i went with. just tried the second solution of putting a conftest in both of our plugins that have tests test folders, looks like that suggested method isn't supported anymore. [code block]",0,0.9892127513885498
798693437,354,gazpachoking,2022-02-03T15:38:43Z,to exclude this from the package... that'd be manifest.in?,0,0.9924970865249634
799015513,354,cas--,2022-02-03T22:18:40Z,"actually ignore my muttering about excluding it, must have been thinking of something else",-1,0.5835440158843994
807379872,376,DjLegolas,2022-02-15T22:43:39Z,change the `i in range` to `i in addrinfo` (and change the names to something even better),0,0.9926401972770691
807388593,376,aresch,2022-02-15T22:58:40Z,why not something like: [code block],0,0.9818523526191711
807389303,376,aresch,2022-02-15T22:59:54Z,use plural named variable (`ips`) since it's a list of ips.,0,0.9942173957824707
807399076,376,DjLegolas,2022-02-15T23:18:13Z,"yeah, even better",1,0.7950969338417053
807399259,376,doadin,2022-02-15T23:18:37Z,"i guess that is possible, my python skills are very basic so, i often miss things like this. if that is what you guys want i'll update the pr.",0,0.9063125848770142
807789943,376,cas--,2022-02-16T10:45:35Z,this comment doesn't provide any extra information that the code doesn't tell us so suggest it's removed,0,0.991585373878479
807789988,376,cas--,2022-02-16T10:45:38Z,"this is redundant and should be combined with above e.g. `except (gaierror, indexerror) as ex`",0,0.9941787719726562
807793593,376,cas--,2022-02-16T10:49:41Z,`ips` could be more descriptive e.g. `host_ips` also converting this to a set comprehension would remove any duplicates then convert to list e.g. [code block],0,0.9945987462997437
807810070,376,cas--,2022-02-16T11:06:56Z,"this can be simplified to a list comprehension also use of `host in ips` is not correct as it overwrites the host check `host in localhost`. naming is important to prevent confusion or errors so a better option is `ip` or `host_ip`. although it appears that localhost contains both hostname and ip, although is missing ipv6 `::1`. so the lookup could be replaced with `host_ip in localhost` with the ipv6 addition.",0,0.9940478801727295
808554133,376,doadin,2022-02-16T23:57:30Z,um....sure.,0,0.8643669486045837
808554394,376,doadin,2022-02-16T23:58:06Z,the log message seems less accurate in the case of indexerror which is why i had it separate but ok.,0,0.9742945432662964
810039474,376,cas--,2022-02-18T14:19:07Z,this change would break the lookup for an ip or host here. the `::1` ip just need appended to the tuple so not a tuple of tuples,0,0.9931302666664124
810039546,376,cas--,2022-02-18T14:19:11Z,i think it is more robust to lookup with `host_ip` instead of `host`,0,0.9832563400268555
810283305,376,doadin,2022-02-18T19:26:31Z,not sure what you mean.,0,0.5678104758262634
810303631,376,DjLegolas,2022-02-18T19:59:17Z,"just change it to `('127.0.0.1', 'localhost', '::1')`",0,0.9944732785224915
810309856,376,doadin,2022-02-18T20:10:08Z,"oh wow, oops i was thinking of it was like connection pairs, thats localhost not localclient. ok that makes sense.",0,0.7491722106933594
202543872,204,cas--,2018-07-15T13:51:09Z,"the data dir path for ui will not always be at this location so should use `deluge.common.resource_filename` with module name `deluge.ui` and i would also use a separate location to differentiate from web ui images. e.g. `putchild('ui_images', ...`",0,0.9957771301269531
794633810,352,cas--,2022-01-28T15:59:52Z,i think for class/function names expand `coro` e.g. `coroutinedeferred` but retain `coro` for params,0,0.9906328916549683
794645961,352,cas--,2022-01-28T16:14:14Z,twisted already has [a link] so it might be confusing to name the decorator `maybe_deferred` so what if we went the other way with `maybe_coroutine`?,0,0.983881950378418
201403343,201,cas--,2018-07-10T16:08:45Z,probably can use the getrawheaders default value instead of this test,0,0.9932734966278076
201405146,201,cas--,2018-07-10T16:14:11Z,remove extra indent,0,0.9941309094429016
201405473,201,cas--,2018-07-10T16:15:11Z,i don't think this class needs an underscore prefix,0,0.98146653175354
201412584,201,cas--,2018-07-10T16:37:07Z,use `.encode()` please,0,0.9944506883621216
201511528,201,DjLegolas,2018-07-10T22:09:39Z,do you mean `self.url = bytes(url.encode('utf-8'))`? or something else?,0,0.9948329925537109
201611041,201,cas--,2018-07-11T08:50:24Z,"even simpler `self.url = url.encode()`, default ascii encoding as a url strictly shouldn't have non-ascii chars.",0,0.9923089742660522
201691495,201,cas--,2018-07-11T13:36:50Z,restore the trailing comma please,0,0.9899742007255554
201692162,201,cas--,2018-07-11T13:38:29Z,shouldn't really have an extra newline between `if` and `else` statements,0,0.9846500754356384
201704538,201,cas--,2018-07-11T14:11:49Z,i was thinking we should be able to use twisted redirectagent to deal with redirects and also contentdecoderagent for decoding gzip thus simplify this code. to deal with deflate might need to subclass gzipdecoder to add 32 instead of 16. what are your thoughts?,0,0.9848074913024902
201707897,201,cas--,2018-07-11T14:20:20Z,better to use super so no don't need to refer to parent class so: [code block],0,0.9929099678993225
201725301,201,cas--,2018-07-11T15:02:21Z,"i am not sure about subclassing agent, i would prefer to pass agent as an arg so follow the style of the other web client agents: [a link] this would mean that url and headers should be passed to request instead of httpdownloaderagent instantiation",0,0.9850859642028809
202065167,201,DjLegolas,2018-07-12T14:53:52Z,"hmm, this will simplify things... but some things will have to the same, like how to handle a redirect when not using `redirectagent`. the current code of `trackericon` is using `httpdownloader` but handles the redirect of the original page by itself and thous requires a `pageredirect` if the page marked as redirect.",0,0.9600122570991516
202066066,201,DjLegolas,2018-07-12T14:56:09Z,"this one will need me to change to `class bodyhandler(httpclientparser, object):` as `httpclientparser` is old style object, and super needs a new style class.",0,0.9940768480300903
202090828,201,cas--,2018-07-12T16:02:12Z,"ah! i don't see that being an issue though, just explain that it in commit message. it'd be preferable to use new style and super where possible.",1,0.9156154990196228
202092413,201,cas--,2018-07-12T16:07:12Z,there is the `handle_redirects` arg (i assume trackicons uses this) for `download_file()` that could be used to determine whether to wrap the agent with `redirectagent`?,0,0.9946154952049255
202101856,201,DjLegolas,2018-07-12T16:37:42Z,"yes, and in the last commit i use it for this purpose. just explaining why some of the code must stay.",0,0.9937008619308472
808193780,364,cas--,2022-02-16T16:24:50Z,let's keep fail-fast on,0,0.9865350127220154
808194158,364,cas--,2022-02-16T16:25:06Z,can we test just 3.7 and 3.10,0,0.9915237426757812
808194592,364,cas--,2022-02-16T16:25:29Z,let's move this to the requirements.txt and remove the version requirement,0,0.994940996170044
808197028,364,cas--,2022-02-16T16:27:21Z,this lib copy should not be needed if using pip install,0,0.995261013507843
809574022,364,DjLegolas,2022-02-18T00:12:36Z,"just a reminder, removing the version requirement will install libtorrent 2",0,0.9943175911903381
809582118,364,DjLegolas,2022-02-18T00:29:26Z,done,0,0.8682363629341125
809582295,364,DjLegolas,2022-02-18T00:29:39Z,removed.,0,0.9612457156181335
813789760,364,cas--,2022-02-24T11:26:33Z,"what i meant was, can we remove this line",0,0.9888668656349182
61677141,83,bendikro,2016-04-30T23:56:22Z,this doesn't work as you may expect.,0,0.8786536455154419
61677318,83,Tanz0rz,2016-05-01T00:19:06Z,how does it work?,0,0.9937499165534973
61677455,83,bendikro,2016-05-01T00:33:13Z,"`ext == "".torrent"" or "".torrent""` will resolve to true when ext contains "".torrent"". if it does not contain "".torrent"", it will resolve to "".torrent"". this means the if test expression will always be true, and `magnet` set to `false`",0,0.9913470149040222
61677532,83,aresch,2016-05-01T00:46:16Z,why not just make this string lowercase? simply add .lower() to the end.,0,0.9926856756210327
61677745,83,Tanz0rz,2016-05-01T01:10:38Z,ah good point. i do not code in python and thought this was shorthand. i am going to add what aresch suggested and just make the extension check all lowercase.,1,0.979310154914856
61677810,83,Tanz0rz,2016-05-01T01:19:54Z,done,0,0.8682363629341125
61685385,83,cas--,2016-05-01T11:08:00Z,i'm not sure this is needed. if a user uses a directory that contains other files in it then a lot of log messages will be generated.,0,0.8921055197715759
61686237,83,bendikro,2016-05-01T12:09:31Z,"yeah, that is a good solution. your code could also be written as `if ext in ["".torrent"", "".torrent""]`",1,0.8988538384437561
61688917,83,Tanz0rz,2016-05-01T16:03:16Z,"the reason i want to add some sort of logging here is because i spent at least an hour trying to figure out why the auto-add setting wasn't paying any attention to my specified folder. in reality, it was paying close attention to that folder, but silently failing. i see your concern, though. an alternative that i can think of right now would be to add a debug message to the extension check to just say something like ""evaluating file for auto-add.""",0,0.8392007350921631
62319871,83,cas--,2016-05-06T11:47:18Z,"fair enough, log.debug would be fine",0,0.8298777937889099
62337580,83,Tanz0rz,2016-05-06T14:34:19Z,"debug on the current line in this comment chain (already done above), or debug on the initial check of files in the watch folder?",0,0.9907627701759338
47490937,50,cas--,2015-12-14T12:20:06Z,i think this would be better caught in the test with a get() method as per [a link],0,0.9870123267173767
58849831,50,cas--,2016-04-07T10:23:01Z,are you sure about replacing port with user?,0,0.9925548434257507
59116079,50,cas--,2016-04-09T14:36:31Z,afaik the convention is to drop the parens with multiple values,0,0.9852714538574219
59116080,50,cas--,2016-04-09T14:36:34Z,perhaps log this as a warning?,0,0.9890747666358948
59116122,50,cas--,2016-04-09T14:38:51Z,should we use an underscore prefix to denote this is a 'private' method?,0,0.9946527481079102
59116145,50,cas--,2016-04-09T14:40:31Z,is this solely for test cases?,0,0.9911695718765259
59116250,50,cas--,2016-04-09T14:48:17Z,hmm a try and an if... i think the try statement is enough?,0,0.9777818918228149
59116376,50,bendikro,2016-04-09T14:55:43Z,"`log.warn(""ignored attempt to overwrite web config key '%s'"" % key)` ?",0,0.9908961653709412
59116403,50,cas--,2016-04-09T14:58:02Z,:+1:,0,0.9328674077987671
59116468,50,cas--,2016-04-09T15:04:16Z,"this could be combined with the log.error below. `""error attempting to listen on %s:%s: %s"", hostname, port, ex`",0,0.995550274848938
59116563,50,cas--,2016-04-09T15:09:54Z,is this return used?,0,0.9946827292442322
59116879,50,bendikro,2016-04-09T15:35:39Z,"yes, to prevent call to reactor.run() and stop() in deluge.ui.web.server",0,0.9942812919616699
59116905,50,bendikro,2016-04-09T15:37:33Z,"yeah, try/except shouldn't be required.",0,0.9693654179573059
59116920,50,bendikro,2016-04-09T15:38:14Z,sure,0,0.9422702193260193
59119295,50,bendikro,2016-04-09T18:34:26Z,just removed the new line as the exception contains the same info,0,0.9942237734794617
59119360,50,bendikro,2016-04-09T18:39:18Z,"yes, without the return statement a call to the exported connect method will return none instead os the methods.",0,0.9930630326271057
59119369,50,bendikro,2016-04-09T18:40:04Z,changed connect_daemon to _connect_daemon and get_host to _get_host,0,0.991757333278656
59121781,50,cas--,2016-04-09T21:31:00Z,oh is this another one for tests? perhaps mock will work for this one.,0,0.9706408381462097
243924763,228,DjLegolas,2018-12-25T21:10:52Z,should inherit from `basetest.basetestcase` as well for the tests to be run.,0,0.9949894547462463
246120202,228,hukal,2019-01-08T19:20:49Z,done.,0,0.9897913336753845
62939968,93,aresch,2016-05-11T22:45:02Z,"maybe this instead to reduce repetition? [code block] also, should we be concatenating the strings to ensure translation can happen? [code block]",0,0.9902949333190918
62940009,93,aresch,2016-05-11T22:45:24Z,this should be set_markup() if you don't change the function to remove this line.,0,0.9947611689567566
62940119,93,aresch,2016-05-11T22:46:35Z,need a docstring here.,0,0.9906609654426575
62940281,93,bendikro,2016-05-11T22:48:22Z,shouldn't d5 be added to the deferredlist?,0,0.9930920600891113
62940516,93,bendikro,2016-05-11T22:50:29Z,would translating `5 kib/s` ever be needed?,0,0.9889072179794312
62990813,93,cas--,2016-05-12T09:34:01Z,"this was to keep consistency, the unit is translated.",0,0.9943195581436157
62993067,93,cas--,2016-05-12T09:49:19Z,"good point, at the time i thought it could be neater... i have been making the mistake of thinking i should avoid `%s` in the translation string but found since then that [a link]. the string should use substitution (or format) so that translators can change the position of `%s` if the word order is different. with this new knowledge i may have to go back through the code and make the correct alterations!",1,0.9843373894691467
62994053,93,cas--,2016-05-12T09:57:00Z,"oh hah, it worked though :d",1,0.9932512640953064
62994289,93,cas--,2016-05-12T09:58:59Z,should make the same changes as gtkui,0,0.9940676689147949
62994520,93,cas--,2016-05-12T10:00:43Z,use substitution,0,0.991706132888794
60482204,62,cas--,2016-04-20T20:33:52Z,should it just be 'output_stream'?,0,0.9924841523170471
61064578,62,bendikro,2016-04-26T10:41:34Z,"i wonder whether it's a good idea to translate strings like this which includes argument option description. if `key` and `value` should be translated, they must also be translated in the other arguments below.",0,0.7323983311653137
61064623,62,bendikro,2016-04-26T10:42:08Z,"like here `metavar="" ""`",0,0.9937871694564819
61064647,62,bendikro,2016-04-26T10:42:20Z,"and `metavar="" ""`",0,0.9930469393730164
61064949,62,cas--,2016-04-26T10:45:01Z,yes i did ponder that and it's a good point about the `key` and `value`... i'll have a think :),1,0.9776778817176819
85639697,62,cas--,2016-10-29T12:53:30Z,"should be [""torrentview""][""separate_complete""]",0,0.9949206709861755
85649154,62,bendikro,2016-10-29T21:56:16Z,fixed,0,0.920660674571991
231077029,224,cas--,2018-11-06T10:50:01Z,need to keep this for python 2 compatibility,0,0.9933057427406311
231077745,224,cas--,2018-11-06T10:52:29Z,the `x` has jumped lines so diff looks like more has changed here,0,0.9933205842971802
231080222,224,cas--,2018-11-06T11:00:17Z,this information should be in the class docstring,0,0.9951706528663635
231374548,224,aresch,2018-11-07T03:58:11Z,done.,0,0.9897913336753845
231374557,224,aresch,2018-11-07T03:58:19Z,done.,0,0.9897913336753845
231374571,224,aresch,2018-11-07T03:58:26Z,done.,0,0.9897913336753845
794991005,353,aresch,2022-01-29T03:18:41Z,"shouldn't this be an async def? presumably you're using this decorator on async functions, so it should return one?",0,0.9907119870185852
794993988,353,gazpachoking,2022-01-29T03:50:28Z,"nope, it turns it into a regular function. that's why it's usable in situations outside of async functions. works almost the same as the two commented lines below using 'ensuredeferred'.",0,0.9940833449363708
794994173,353,gazpachoking,2022-01-29T03:53:11Z,"sorta like this wrapper here. [a link] `coroutinedeferred` has _almost_ the same function as `ensuredeferred`, except it will pass the coroutine through directly where appropriate.",0,0.980899453163147
800093665,353,cas--,2022-02-05T19:49:56Z,i was about to merge this but this typing (i assume twisted again) is tripping me up,0,0.7141377329826355
800098932,353,gazpachoking,2022-02-05T20:53:17Z,"i switched it to a comment now, that should fix things.",0,0.9891777038574219
800102495,353,gazpachoking,2022-02-05T21:37:23Z,"and now i switched it to a string, which is a bit nicer.",0,0.9800841808319092
579784683,306,DjLegolas,2021-02-21T10:19:30Z,just switch the order like this: [code block],0,0.994839608669281
579788152,306,matiasw,2021-02-21T10:49:03Z,"ok, done.",0,0.9793679714202881
714228765,306,cas--,2021-09-22T19:02:13Z,"can we simplify by using existing functions `get_clipboard_text`, `is_url` and `is_magnet` as used in `on_button_url_clicked`",0,0.9946586489677429
716055947,306,cas--,2021-09-25T15:33:42Z,remove unused import,0,0.9929566383361816
716056035,306,cas--,2021-09-25T15:34:35Z,can we name this `prev_clipboard_text` or `previous_clipboard_text`,0,0.9947060942649841
716056139,306,cas--,2021-09-25T15:35:52Z,can omit this else,0,0.9943714737892151
716056247,306,cas--,2021-09-25T15:36:57Z,remove stray added newline,0,0.994464099407196
775261875,325,cas--,2021-12-26T16:30:12Z,"this doesn't seem correct, should be string not bytes. discussion for reference: [a link]",0,0.958746612071991
775261926,325,cas--,2021-12-26T16:30:54Z,can we remove the unneeded comment,0,0.9948624968528748
775262079,325,cas--,2021-12-26T16:32:05Z,this will need to be 2.1.0 since it's a breaking compatibility change,0,0.987789511680603
775263050,325,cas--,2021-12-26T16:42:52Z,actually just import simplenamespace from types,0,0.9948970675468445
775263494,325,cas--,2021-12-26T16:47:49Z,we might be able to drop the `object` class here,0,0.9920159578323364
775266277,325,cas--,2021-12-26T17:16:46Z,remove these lines instead of commenting out,0,0.9920334219932556
775266422,325,cas--,2021-12-26T17:18:12Z,"please leave don't include todo comments, this will be dealt with when the time comes",0,0.9837506413459778
775266830,325,DjLegolas,2021-12-26T17:23:36Z,stupid docstring... the ide warned me about it being bytes and not string because of it. will change in the next push.,-1,0.9943583607673645
775267228,325,DjLegolas,2021-12-26T17:27:08Z,no problem. do you want me to tag it already as 2.1.0 or add a new one for future releases like `develop`?,0,0.8924055695533752
775267926,325,cas--,2021-12-26T17:34:47Z,sure you can change the version number. i'll remember to bump to dev tag when merging,0,0.9919662475585938
775558789,325,cas--,2021-12-27T16:03:23Z,best to remove this since we'll add it back when needed,0,0.9831081032752991
18949029,19,cas--,2014-10-16T10:57:38Z,"i think this should be a comment rather than log line and should read something like: ""could not create for all users, falling back to current user""",0,0.9819610118865967
71378025,103,cas--,2016-07-19T16:51:24Z,can you add a git commit message about this change.,0,0.9959195852279663
71378164,103,cas--,2016-07-19T16:52:16Z,docstring for return value also `ret` should perhaps be renamed to something a bit clearer,0,0.9932584762573242
71378524,103,cas--,2016-07-19T16:54:26Z,think this be moved under `reactor.run()`,0,0.9929856657981873
71545327,103,bendikro,2016-07-20T15:16:23Z,"added comment on commit message: ""added parameter log.setup_logger to prevent output noise in unit tests"" is that good?",0,0.981171727180481
71545431,103,bendikro,2016-07-20T15:16:54Z,removed the return value as it isn't needed.,0,0.9893769025802612
71545480,103,bendikro,2016-07-20T15:17:09Z,removed.,0,0.9612457156181335
71547194,103,bendikro,2016-07-20T15:25:40Z,"crap, that was apparently just wrong.",-1,0.9935010075569153
72773236,103,cas--,2016-07-29T10:36:30Z,think that this can be refactored to bring the reactor.run and return into this statement.,0,0.9883071780204773
72886112,103,bendikro,2016-07-30T11:33:37Z,"i just left the logic as it already was, but i wasn't too happy about it :-) i'll rewrite it...",1,0.9872055053710938
72892576,103,bendikro,2016-07-30T18:56:28Z,pushed a change to this function.,0,0.9924448132514954
83627142,103,cas--,2016-10-17T11:52:14Z,should start indented under `returns` with `deferred: ...`,0,0.9938369393348694
83801223,103,bendikro,2016-10-18T08:08:28Z,fixed.,0,0.9905837774276733
83802629,103,bendikro,2016-10-18T08:17:16Z,this has been fixed btw.,0,0.993786096572876
439755434,296,cas--,2020-06-13T17:35:51Z,this is actually a stable ppa so shouldn't be called development ppa. it was actually a pain to maintain the original stable ppa and this 'daily' ppa tracks master branch. i think for now just call it deluge ppa.,-1,0.9691290855407715
439755750,296,cas--,2020-06-13T17:40:50Z,"deluge actually has two maintained daily build ppa, one each for develop and master branches. the stable ppa is for the latter. you have conflated the two here so in the first case it should only be mentioned as stable and link to such: [a link] it might be good to mention the other ppa but i feel a link to another document with those details is better than easily giving users access to work-in-progress code.",0,0.9851025342941284
439755876,296,cas--,2020-06-13T17:42:52Z,there is no mention of server or client in this document so simply say `deluge`,0,0.9940494298934937
439755900,296,cas--,2020-06-13T17:43:12Z,"there is no need to install both deluge and deluge-gtk, just *deluge* will do",0,0.9931789636611938
439755913,296,cas--,2020-06-13T17:43:24Z,see above,0,0.985628604888916
439839430,296,SergioInToronto,2020-06-14T15:12:07Z,"does deluge consider master stable? when i think ""stable"" i'm only thinking about releases.",0,0.9811066389083862
439839531,296,SergioInToronto,2020-06-14T15:13:05Z,"i guess since there's a develop branch, that is the unstable work.",0,0.9609495401382446
439839801,296,SergioInToronto,2020-06-14T15:16:08Z,"i found that confusing. i installed `deluge`, then pressed super, typed ""deluge"", but nothing appeared. it was because only the server was installed. i think it's important to mention both.",0,0.7219325304031372
439840050,296,SergioInToronto,2020-06-14T15:19:05Z,"whoops my mistake. that only happened when installing the snap from ubuntu's software app. the first entry is a snap, the 2nd is from apt. ![a link]",-1,0.9885856509208679
439840504,296,SergioInToronto,2020-06-14T15:23:51Z,"speaking of, what is this? [a link]",0,0.9930610060691833
1736425466,462,cas--,2024-08-29T15:03:37Z,using list indexes is rather opaque and indicates area for improvement. did you consider using `get_content_type`?,0,0.982082724571228
1736434522,462,cas--,2024-08-29T15:07:29Z,why not use `emailmessage` instead of legacy `message` class?,0,0.992405354976654
1736474876,462,cas--,2024-08-29T15:22:21Z,why not use `content-disposition` and then `get_filename` [code block],0,0.9929847717285156
1736498155,462,cas--,2024-08-29T15:28:41Z,we can simplify with [code block],0,0.9953983426094055
1738027611,462,mtasaka,2024-08-30T06:32:47Z,"okay, thanks. will update.",1,0.8756126165390015
1738027715,462,mtasaka,2024-08-30T06:32:51Z,thank you for comment. i did not notice this. will reflect your review.,1,0.948151707649231
1738028204,462,mtasaka,2024-08-30T06:33:14Z,thank you . actually [a link] says your way is preferred. will update.,1,0.9703158736228943
19869685,16,cas--,2014-11-05T12:24:59Z,needs a docstring,0,0.9923478364944458
19869828,16,cas--,2014-11-05T12:28:17Z,"i know this is c&p but i think just a log.error is needed here, with `ex`.",0,0.9923511147499084
19870045,16,cas--,2014-11-05T12:32:10Z,"afaik `add` method doesn't explicitly throw any exceptions so possibly just catch a libtorrent `runtimeerror`, and again remove the log.exception.",0,0.9893007874488831
19870380,16,cas--,2014-11-05T12:40:57Z,return deferred without assign,0,0.9927946925163269
21093217,16,bendikro,2014-12-01T15:04:19Z,fixed,0,0.920660674571991
21093231,16,bendikro,2014-12-01T15:04:33Z,fixed,0,0.920660674571991
21093240,16,bendikro,2014-12-01T15:04:41Z,fixed,0,0.920660674571991
21093255,16,bendikro,2014-12-01T15:04:48Z,fixed,0,0.920660674571991
21148780,16,cas--,2014-12-02T09:53:58Z,"could this be better written as `for idx, torrent in enumerate(torrent_files)`...",0,0.9933604598045349
21231572,16,bendikro,2014-12-03T13:48:13Z,"it could, but we still need the `count` to check for the last entry.",0,0.9903947710990906
21231743,16,cas--,2014-12-03T13:51:43Z,yes. i think it makes it clearer and don't feel using `xrange` is correct here.,0,0.9498172998428345
21234543,16,bendikro,2014-12-03T14:39:20Z,fixed,0,0.920660674571991
202691180,202,cas--,2018-07-16T13:56:10Z,using python assert is for pytest and will not output traceback with trial on failure so please revert this change. the asserttrue could be replaced with assertequals but it's not really worth unless changing whole test file...,0,0.9878351092338562
202697325,202,gazpachoking,2018-07-16T14:12:52Z,isn't pytest what's being used now?,0,0.992002010345459
202710305,202,cas--,2018-07-16T14:47:00Z,"well, both are in use and i can't remember what the end-goal was... it doesn't actually test the twisted deferreds properly so would need this plugin: [a link] the point is that changing it for one subset of tests is not a good idea. the tests themselves are subclassing trial unittest so best to keep that compatibility.",0,0.9847428798675537
202717130,202,gazpachoking,2018-07-16T15:04:32Z,"no prob. i thought the intention was to switch over to pytest, and had introduced a failure that wasn't giving me any good info with asserttrue.",0,0.9481756687164307
202726741,202,cas--,2018-07-16T15:30:18Z,sure it would be good to move to pytest entirely but it's better to do it as part of an overall change rather than here and there and potentially cause more headaches.,0,0.8773000240325928
202728246,202,cas--,2018-07-16T15:34:23Z,add a small comment to indicate truncating floats and casting to int,0,0.9945046305656433
287791921,240,cas--,2019-05-27T13:30:50Z,"this should not be changed, the de-facto standard for getting python lib version is `__version__`",0,0.9954929351806641
287792332,240,cas--,2019-05-27T13:32:13Z,"using `lt.torrent_flags` is a breaking change for 1.1, lt 1.2 with deprecated enabled should still have `add_torrent_params_flags_t`",0,0.9898521304130554
287792450,240,cas--,2019-05-27T13:32:39Z,i don't want to rely on 1.2 solely yet,0,0.8724278211593628
287792937,240,cas--,2019-05-27T13:34:13Z,i'm sure that using the value is intentional to avoid relying on `libtorrent` in a test. a comment would suffice or create variables with those values.,0,0.9859021902084351
287796532,240,cas--,2019-05-27T13:45:00Z,"these changes are breaking for 1.1, please revert",0,0.7329416275024414
287842652,240,DjLegolas,2019-05-27T16:29:09Z,"the problem with this hard-coded value is the change of values in lt-1.2. for testing this properly, without relying on `libtorrent`, we should set some environment flag to know which version of it we are using and set the proper value accordingly. do you have any suggestions for how to do this?",0,0.9627081155776978
287884113,240,cas--,2019-05-27T21:26:34Z,"ah ok, then import and use the old-style lt flags.",0,0.9919252991676331
287886601,240,cas--,2019-05-27T21:51:43Z,instead of testing for 1.2. replace these three dict with the following that should work for both versions: [code block],0,0.9953680038452148
287886860,240,cas--,2019-05-27T21:55:01Z,replace with boolean flag operation that would work for both versions,0,0.9942065477371216
814527564,377,cas--,2022-02-25T07:17:12Z,can you remove this change please,0,0.9947072267532349
814529575,377,KtlTheBest,2022-02-25T07:21:22Z,sure! must have slipped from the other branch,0,0.5859199166297913
814532432,377,cas--,2022-02-25T07:27:22Z,"excellent thanks, i'll merge later today do you know how to rebase to single commit and update the commit message? we would like to always have a summary of why and what changed in the commit message body, along with any ticket references. if you can give it a go that would be great, otherwise is not a big issue on this one. helpful commit message tips: [a link]",1,0.9956467747688293
814766827,377,KtlTheBest,2022-02-25T13:27:47Z,"by rebase to single commit do you mean ""squash""? yes, i can do that.",0,0.9939975738525391
814788761,377,KtlTheBest,2022-02-25T13:58:38Z,"it seems i did it. there is one commit that encapsulates all of the changes, but the previous commits are also there... the message of the squashed commit is updated to contain the context, as well as the link to the ticket.",0,0.985809862613678
815092553,377,doadin,2022-02-25T20:13:59Z,assuming you have the base repo([a link] setup in your git clone as deluge-torrent. if you run in terminal from the deluge folder: `git rebase deluge-torrent/develop` that should update the repo and put your commit last. currently it looks like its out of date but then commits merged in.(why there is 12 commits to the pr vs 1),0,0.9905016422271729
815097967,377,doadin,2022-02-25T20:15:58Z,"cas could always just cherry-pick your change as well but if you clean it up its a little easier.as he said `if you can give it a go that would be great, otherwise is not a big issue on this one.`",0,0.8525914549827576
815100134,377,doadin,2022-02-25T20:16:36Z,just thought id try to help on how to do the rebase.,0,0.9714516997337341
815277748,377,KtlTheBest,2022-02-26T06:47:45Z,i see... i was somehow under impression that i should rebase against my fork of the deluge instead of the original one and that is what i did. still not sure how i ended up with 12 commits though... i was pretty clear to squash the commits. thanks for your help ! i will keep that in mind,1,0.9910249710083008
815278029,377,doadin,2022-02-26T06:51:41Z,"np, yea you want to rebase against the official deluge git repo. rebasing updates with all the commits at the time of the rebase then applies your changes after. so thats why it should go down to one, because after updating your commit should be the only different one. if you use `git rebase -i deluge-torrent/develop` it will open your default git editor and give you options for each commit, again in this case there should only be one but in other cases if you have more than one commit -i is for interactive and it will stop and let you chose to use/drop/rename/squash and other things to commits.",0,0.9708996415138245
895165606,386,cas--,2022-06-12T12:17:24Z,"i don't see `gstreamer` as part of gvsbuild, why do we need this? if it is included then likely better to not build it in the first place by adding `gstreamer` to the [skip step]( [a link]",0,0.9886224865913391
895168129,386,mhertz,2022-06-12T12:37:29Z,"gstreamer project isn't built, but for some reason some references to it is picked up by pyinstaller through gi.repository. this was same in pyinstaller 4.x and displayed a ""traceback"" error in cmd-output during freeze, but the freezing continued till end succesfully regardless - this was one of the things they changed/fixed in pyinstaller 5.x i.e. implememnted a new child/parent method which would now correctly block/quiet the run(main-loop i gather) whenever some sub-process failed. this fix/workaround is fixing a ""missing typelib"" error for various gst components for both pyinstaller 4.x and 5.x, but just now doesn't quit the process in error litle after start in pyinstaller 5.x. i have been trying to see if could find the culprit specifically so could report to gvsbuild devs, but haven't yet though. when you asked if i could clarify, then did you refer to the commit-message, or to you(like here)? sorry for being dense :) i understand of-course if you close this, but was also just to note(as you have no ""issues"" section here) that either need something like this, or, need stipulate 'pip install pyinstaller==4.10' to produce a freezed build currently. thanks for taking a look :)",0,0.9861722588539124
895172396,386,cas--,2022-06-12T13:09:24Z,"it is always good to include the reason why something has changed in the commit message, that way in the future we can use `git blame` to see why the change was made. as for the error, i don't see any issues with the ci builds, is this a local build issue? what are your steps to reproduce? ![a link] i am happy to merge the readme changes but without more details on the error i am reluctant to include that change",0,0.6967049241065979
64148469,99,cas--,2016-05-22T11:34:02Z,should be args,0,0.992407500743866
64148623,99,cas--,2016-05-22T11:47:59Z,could you elaborate in the commit message why this fix was needed,0,0.9928151369094849
64148687,99,bendikro,2016-05-22T11:55:17Z,i was looking here which uses kwargs as well as args: [a link] but maybe that's not necessary.,0,0.988996148109436
64148753,99,cas--,2016-05-22T12:01:26Z,ah... i don't really see the need and the convention so far is without,0,0.767925500869751
64221006,99,bendikro,2016-05-23T13:22:11Z,the problem is simply that exceptions can't be serialized by rencode. the tests pass because it's run locally without serializing. i would prefer a solution where the reason could be returned as part of the return value. we could return the exceptions getmessage value?,0,0.9701709151268005
64223547,99,bendikro,2016-05-23T13:38:40Z,updated with a fixup that reverts the change and uses a string value instead of the exception. what do you think?,0,0.9885369539260864
64224279,99,cas--,2016-05-23T13:43:29Z,do we care enough about removing torrents that don't exist to log it? :),1,0.8013174533843994
64224625,99,cas--,2016-05-23T13:45:48Z,that seems like a better fix,0,0.9266501665115356
64230707,99,bendikro,2016-05-23T14:21:34Z,"well, the main reason is that it shouldn't really be happening, so at least it informs us that something isn't right",0,0.9454014897346497
64230880,99,cas--,2016-05-23T14:22:36Z,ok perhaps warning or debug then?,0,0.9912003874778748
64306186,99,bendikro,2016-05-23T23:22:26Z,"sure, used warning as debug is never really used by anyone i imagine..",0,0.9801130294799805
160313265,175,aresch,2018-01-09T03:40:01Z,you'll want to remove this line. currently the update() method is called every ~0.3 seconds (see line 84) by the component system.,0,0.9939514398574829
160313468,175,aresch,2018-01-09T03:43:12Z,change this to call self.alert_manager.handle_alerts() directly.,0,0.9947059750556946
160313535,175,aresch,2018-01-09T03:43:53Z,you should probably at least log the exception here since it should rarely (if ever) occur and it would be good for debugging issues.,0,0.9898630380630493
160314594,175,aresch,2018-01-09T03:57:16Z,"typically you would subclass threading.thread and override run() for something like this. however, i think that you could probably even forego the class entirely and just run a thread of a method in alertmanager itself. you could probably use the state of the component class in lieu of self.running. i would just write a new method called 'wait_for_alerts' (essentially your run() method) and run that as a thread. it will have access to all the member variables of alertmanager and you don't need to worry about synchronization since python has the gil. here is an example of just running a method as a thread: [code block]",0,0.9603947997093201
160328562,175,AllSeeingEyeTolledEweSew,2018-01-09T06:45:05Z,done.,0,0.9897913336753845
160328579,175,AllSeeingEyeTolledEweSew,2018-01-09T06:45:15Z,done.,0,0.9897913336753845
160328601,175,AllSeeingEyeTolledEweSew,2018-01-09T06:45:27Z,i think i already do this.,0,0.9768268465995789
160328737,175,AllSeeingEyeTolledEweSew,2018-01-09T06:46:23Z,"i'm a little paranoid about this, since i'm not sure i've caught all the cases of the component lifecycle.",-1,0.9548928737640381
275435528,234,cas--,2019-04-15T16:07:42Z,`full_distribution_name` should be true to match original line.,0,0.9951097369194031
275435784,234,cas--,2019-04-15T16:08:16Z,since the distro details are not that important this would be better as optional package,0,0.9902973771095276
275444098,234,cas--,2019-04-15T16:28:57Z,change this to test for `disto` or `linux_distribution` perhaps?,0,0.9935345649719238
275448006,234,cas--,2019-04-15T16:39:50Z,technically `distro` supports bsd too so perhaps just check not windows or darwin?,0,0.9940375089645386
275497311,234,DjLegolas,2019-04-15T18:50:32Z,how do i do that? isn't it by stating in the requires section in `setup.py` (which i forgot to add)?,0,0.9937270879745483
275522173,234,cas--,2019-04-15T20:01:02Z,"this will importerror if distro is not installed, have a look at dbus below for example",0,0.9929363131523132
275877904,234,DjLegolas,2019-04-16T16:08:18Z,"oh, ok. but now i got a question... should i add `distro` to `requirements.txt` (or any other file of them) and to `install_requires` in `setup.py`?",0,0.9549981355667114
276155042,234,cas--,2019-04-17T09:30:01Z,yes add to both. `install_requires` list is automatically installed by pip and requirements.txt is for manual environment setup with `pip -r`. i have put optional packages in `install_requires` because they are soft-required for best user-experience and would be a headache to put in `extra_require` and ensure they are installed. my reasoning for making `distro` package optional is to help with packaging. for example there is no deb package on ubuntu so deluge would break if it's missing.,0,0.9893733859062195
276155082,234,cas--,2019-04-17T09:30:10Z,oh don't forget to update the depends file too.,0,0.990746259689331
276370015,234,DjLegolas,2019-04-17T18:12:06Z,not sure if this condition is good. what do you think -- ?,-1,0.8529987335205078
276981640,234,cas--,2019-04-19T13:05:13Z,"i would simplify to `platform_system != 'windows' and platform_system != 'darwin'`. i don't think the microsoft check is required these days. i do wonder what happens if try to install distro on those os but it's fine with the check for now. an amusing alternative would be `'win' not in sys_platform` since it would cover `cygwin`, `win32` and `darwin` but a bit too obscure ;)",1,0.9056151509284973
277007801,234,DjLegolas,2019-04-19T14:57:48Z,"i installed `distro` on windows successfully, but all the functions return empty string to something like it. and i changed the line to the obscure way :wink:",1,0.9858258366584778
884125918,385,cas--,2022-05-28T11:55:38Z,"this is a rather complicated solution to the problem, especially since there the charset value is unused. therefore could be simplified to `content_type.startswith('application/json')` alternatively if want to verify charset is `utf-8` we can use [a link] to extract the type value and the parameters which is a dict with `charset` key.",0,0.9470567107200623
884126222,385,cas--,2022-05-28T11:58:41Z,"this is not the correct place for the content-type test, it should be a new json_api unit test under an existing content-type test: [a link]",0,0.9936586022377014
884166326,385,ibizaman,2022-05-28T18:45:20Z,good call. i agree with your proposal although tbh i don’t know which one to choose. being more strict and asserting the charset to be utf-8 would probably avoid some headaches down the line by failing early. but on the other side being more lenient can avoid badly configured clients to be blocked. my gut tells me being stricter is better but what do you think? are there some similar choices that had been made on the past?,1,0.984524667263031
884167027,385,ibizaman,2022-05-28T18:53:13Z,ah i totally missed that. i’ll change it.,0,0.4274371564388275
884170445,385,cas--,2022-05-28T19:33:21Z,"it's safe to assume that all `application/json` content type will be `utf-8`, in fact the charset parameter is not part of the standard: [a link] so let's keep it simple, you could still use `cgi.parse_header` and ignore the second tuple value using the `_`: [code block]",0,0.9943026304244995
884188618,385,ibizaman,2022-05-28T23:23:10Z,oh i had no idea about that. cool let’s keep it simple. i’ll definitely add a comment about it.,1,0.9863741397857666
884216198,385,ibizaman,2022-05-29T06:05:23Z,"so instead, i wanted to check that the content-type was valid for `application/json` and `application/json;charset=utf-8` so i created a new test function for it. i'm happy to change that in any way, just tell me.",1,0.5766984224319458
884262537,385,cas--,2022-05-29T12:24:50Z,i appreciate the addition of a comment but without any context about charset it is not worth mentioning here as comment. we should always err towards less comments unless the code we write is unclear but even then refactoring the code might help. the actual reasoning for making this change should be stored in the git commit message so we then use git blame in future if we are uncertain about this line of code. we also have the tests that could improved with a docstring to quickly outline reasoning.,1,0.7737407684326172
884263081,385,cas--,2022-05-29T12:28:54Z,"i would split this into two tests, helps with understanding should a test fail [code block]",0,0.9805669188499451
1306156736,430,cas--,2023-08-25T21:16:10Z,"if i'm not mistaken we don't need a new method, create_torrent can return a deferred without affecting existing client usage",0,0.9850285053253174
1306446400,430,cas--,2023-08-26T14:24:02Z,"cannot import libtorrent here, this burdens ui clients with libtorrent requirement",0,0.9739621877670288
1306452651,430,cas--,2023-08-26T14:40:55Z,i don't feel it is a good idea to have these libtorrent implementation details leaking into the functions and api. it would be better to use something like a torrentformat enum and have a `format` param that can accept str or enum. a tentative implementation attempt: [code block] this can be better represent available options to users.,0,0.8183965682983398
1307312301,430,rcarpa,2023-08-28T11:37:34Z,i updated the pr to return a deferred directly from the existing function. looks like you were right.,0,0.9918047189712524
1307312952,430,rcarpa,2023-08-28T11:38:17Z,i imported libtorrent in the corresponding function only,0,0.9947117567062378
1307314229,430,rcarpa,2023-08-28T11:39:47Z,"did it a bit differently. the called it torrent_format everywhere to avoid clash with the builtin `format` function. the format names are `v1`, `v2` and `hybrid` (without the _only suffix). and enforce a valid format string in _missing_. instead of returning `v1` on invalid format.",0,0.991476833820343
1307346907,430,cas--,2023-08-28T12:14:41Z,i forgot to mention that we don't import libtorrent directly [code block],0,0.8888580203056335
1307347329,430,cas--,2023-08-28T12:15:06Z,already imported as `lt` below,0,0.9953305721282959
1307350063,430,cas--,2023-08-28T12:17:46Z,"we should no longer be relying on pkg_resources, however there is a versionsplit module in common",0,0.9938055276870728
1307352332,430,cas--,2023-08-28T12:20:07Z,use _libtorrent.lt_version with versionsplit,0,0.9937852621078491
1307357729,430,cas--,2023-08-28T12:25:36Z,it is possible to use pytest_twisted.inlinecallbacks to simplify the tests,0,0.9947274327278137
17940959,10,cas--,2014-09-23T21:32:46Z,needs a dot,0,0.9920117259025574
17961382,10,cas--,2014-09-24T09:18:03Z,we were going to remove duplicated `pep8` and `flakes`,0,0.9920458793640137
17961460,10,cas--,2014-09-24T09:20:04Z,no need for extra line here,0,0.9882671236991882
17961471,10,cas--,2014-09-24T09:20:24Z,no need for extra line here,0,0.9882671236991882
17961666,10,cas--,2014-09-24T09:24:58Z,what does this do?,0,0.9760322570800781
17962190,10,cas--,2014-09-24T09:37:55Z,indent issue,0,0.8945687413215637
17962196,10,cas--,2014-09-24T09:38:09Z,indent issue,0,0.8945687413215637
17962218,10,cas--,2014-09-24T09:38:39Z,what are the commented out commands?,0,0.9950922727584839
17962265,10,cas--,2014-09-24T09:39:52Z,is this comment still valid?,0,0.9936402440071106
17962543,10,cas--,2014-09-24T09:46:21Z,add space above and remove one below (`isort` will change this),0,0.9951030015945435
17998224,10,bendikro,2014-09-24T20:31:50Z,leftover from when it failed to import.,0,0.9393659234046936
59857158,65,cas--,2016-04-15T10:42:53Z,the return statement here means that the code below is never run...,0,0.9947150349617004
59885800,65,bendikro,2016-04-15T14:48:24Z,"ah, that extra return should not be there.",0,0.9776518940925598
59982327,65,cas--,2016-04-17T11:18:10Z,leave this code in place,0,0.995261013507843
59990865,65,bendikro,2016-04-17T19:35:23Z,added back,0,0.9906250238418579
61406600,79,cas--,2016-04-28T10:37:52Z,should this have been added?,0,0.9836227297782898
61410973,79,bendikro,2016-04-28T11:23:05Z,"wops, no",-1,0.6058209538459778
61411235,79,bendikro,2016-04-28T11:25:51Z,fixed,0,0.920660674571991
61415532,79,cas--,2016-04-28T12:01:57Z,"what does ""call is queued"" mean? ok i've looked up deferredlock and see it has a `self.waiting` list so should the calls not just skipped until next timer, otherwise it could start stacking the saves?",0,0.9932636022567749
61418900,79,cas--,2016-04-28T12:34:00Z,"i knew this seemed familiar, could we not use the same implementation as we did for [a link]",0,0.9911543130874634
61421741,79,bendikro,2016-04-28T12:56:22Z,"the reasoning for stacking the calls is that the resume data is dependent on callbacks from libtorrent. in theory, a `_save_resume_data_file()` call may be running when a shutdown is initiated. if all `save_resume_data alerts` triggered by the call to `save_resume_data()` in `torrentmanager.stop()` are finished before the `_save_resume_data_file()` call (already running when shutting down) has finished, the new call to `_save_resume_data_file()` initiated by the shutdown would be ignored. with that said, the problem with stacking calls in general did cross my mind, so i think the best solution is to only stack calls when `flush_disk_cache` is true, i.e. on shutdown.",0,0.9923815131187439
61436368,79,cas--,2016-04-28T14:29:09Z,good catch!,1,0.9941828846931458
70293884,105,cas--,2016-07-11T16:48:00Z,if this is the default flag then there should be no need for this change,0,0.9929360747337341
70304858,105,minus7,2016-07-11T17:52:38Z,you need to pass one parameter though (although it has a default value in c++). lt bug?,0,0.9928497076034546
70306352,105,cas--,2016-07-11T18:01:21Z,yes looks like a bug in the [a link] this should fix it: [code block],0,0.9883862137794495
70645858,105,bendikro,2016-07-13T15:16:52Z,should probably create an issue for this?,0,0.9883579611778259
70721674,105,cas--,2016-07-13T22:40:35Z,done,0,0.8682363629341125
86218413,133,cas--,2016-11-02T18:59:45Z,"docstrings should start on the first line as opening quotes: `""""""a simple test...`",0,0.9940671920776367
86218567,133,cas--,2016-11-02T19:00:26Z,replace usage with `examples:` and indent the code below,0,0.9949906468391418
86218780,133,cas--,2016-11-02T19:01:38Z,i don't think this should be `none` and it can't be `false` as we don't know so kind of leaves us back at `true`?,0,0.9762932062149048
86218968,133,cas--,2016-11-02T19:02:34Z,needs docstring,0,0.9933957457542419
86218981,133,cas--,2016-11-02T19:02:41Z,needs docstring,0,0.9933957457542419
86219179,133,cas--,2016-11-02T19:03:42Z,all docstring sentences should end with a fullstop `.`.,0,0.993251621723175
95211914,139,cas--,2017-01-09T18:13:22Z,use of `\` line continuation is discouraged and it easily is below 100-120 char line length,0,0.9900438785552979
95212126,139,cas--,2017-01-09T18:14:39Z,i have just pushed a fix for this so rebase will merge this out.,0,0.9944796562194824
95214509,139,cas--,2017-01-09T18:24:58Z,please use google docstring format as this is now the default for new docstrings.,0,0.9917206764221191
790031355,342,doadin,2022-01-21T22:18:36Z,i'm guessing this excludes exes with console? however we need to exclude from more than just that also the web exes as well. and does console here refer to the console window or the deluge console? cause if its window console and not deluge console we need to exclude deluge console as well.,0,0.9874253869056702
790036696,342,doadin,2022-01-21T22:30:50Z,"sorry if that was not clear what i mean is the deluge-web-script has console false so would fall under this check but it is not a gtk exe and therefore doesn't need the hook, is it a big deal probably not but the way it is now we can control that so lets not go backwards? :)",1,0.971800684928894
790038842,342,CirnoT,2022-01-21T22:36:03Z,"please check with code: [code block] you are right however, this can't be used this way.",0,0.9944798946380615
1215415329,427,cas--,2023-06-03T10:46:09Z,we can improve on the naming here and simplify it. the expected use-case is new core functionality usage by the client so that could either be the latest daemon version or less likely a previous version. so the parameter can be an optional `version` where we use `get_version()` as default. from there the method naming could be improved to `is_daemon_compatible` unless you have other suggestions?,0,0.9931918978691101
1215416518,427,cas--,2023-06-03T10:47:35Z,we shouldn't need these checks since versionsplit will always return true or typeerror and calling above function does a connected check. instead i would add a guard clause: [code block],0,0.9934012293815613
1215429815,427,cas--,2023-06-03T10:59:30Z,"i feel this is ambiguous method name since it is not clearly defining whether this is daemon or client version. i think would be better as `daemon_version` and probably nice as a property. i know that using connection ties into `connection_info` but that also feels rather vague, especially since we get version using `daemon.info` rpc call...",0,0.8333063125610352
1215432179,427,cas--,2023-06-03T11:00:32Z,can be a one line return: [code block],0,0.9951203465461731
1215433674,427,cas--,2023-06-03T11:01:22Z,the `str` type should be moved to function definition,0,0.9956828355789185
1215852012,427,DjLegolas,2023-06-03T21:38:32Z,removed,0,0.9591778516769409
1215852130,427,DjLegolas,2023-06-03T21:38:50Z,changed,0,0.7968646287918091
1215852461,427,DjLegolas,2023-06-03T21:39:36Z,"hmm, ok, changed",0,0.9456673860549927
81636385,109,cas--,2016-10-03T20:47:22Z,you shouldn't use numeric comparison where `none` is a known possible value. this should be a simple boolean comparison of self.__num_pieces as `0` and `none` return `false`. what is the ui outcome if neither `__draw_pieces_completed()` or `__draw_pieces()` methods are called?,0,0.9917558431625366
81643792,109,elemongw,2016-10-03T21:26:55Z,when neither is called an empty bar is drawn,0,0.992398202419281
81844328,109,cas--,2016-10-04T20:19:57Z,perhaps you misunderstood what i meant before but you only need `if not self.__pieces and self.__num_pieces` however this entire codeblock can be refactored by swapping the two statements and methods around e.g. [code block],0,0.9871838688850403
82371009,109,elemongw,2016-10-07T11:19:03Z,"yeah i thought you wanted me to write it explicitly, i am gonna fix it soon.",0,0.9479115605354309
121280482,158,cas--,2017-06-11T12:41:27Z,i'd prefer it called `prev_saved_state` as a loose consistency ;),0,0.7604767084121704
121280733,158,cas--,2017-06-11T12:49:53Z,"would prefer a `try..except` here. it is more likely to be an instance of torrentstate than not, and bit more pythonic.",0,0.9890562295913696
121280742,158,cas--,2017-06-11T12:50:17Z,same use `try..except` as above,0,0.9952329993247986
121282873,158,ratoaq2,2017-06-11T14:24:29Z,i didn't fully get you here: [code block] in theory the following could still happen: [code block],0,0.9702703356742859
121285209,158,cas--,2017-06-11T16:03:44Z,fair point. i do prefer a positive isinstance statement and you could do it in one line: [code block],0,0.7842497229576111
63289717,92,cas--,2016-05-15T10:48:42Z,should we replace this with the `setup.py build_docs` command?,0,0.9954586029052734
63398864,92,bendikro,2016-05-16T18:16:40Z,i'd prefer it like this as it's much easier to see the exact commands that are executed as well as copy pasting for testing manually.,0,0.8689512014389038
63404357,92,cas--,2016-05-16T18:49:17Z,i guessed that might have been the reason but it means there is a potential disparity between `setup.py` and `tox`. how about verbose command to print out the command in `setup.py`?,0,0.9906082153320312
63416358,92,bendikro,2016-05-16T20:09:19Z,"sure, i guess that is possible, but i'm not sure how to access the build command executed by `sphinx.setup_command.builddoc`",0,0.9757927060127258
63963837,92,cas--,2016-05-19T22:19:20Z,i can't actually get that spinx-build command to work locally... my other reason for asking is so that tox is testing the setup.py builddocs command. we can get the config from `builddoc.dump_options(self)` but it's not quite the same...,0,0.9662269949913025
64062044,92,bendikro,2016-05-20T15:40:06Z,could add another tox target,0,0.9910796284675598
64062921,92,cas--,2016-05-20T15:45:38Z,that seems a waste... how about print out those two lines and call `builddocs`?,-1,0.5704578757286072
64064077,92,bendikro,2016-05-20T15:53:13Z,that works i guess,0,0.9630802273750305
47488897,47,cas--,2015-12-14T11:54:10Z,is this old code? i see d being assigned again below.,0,0.9942095279693604
47489046,47,bendikro,2015-12-14T11:56:27Z,yes indeed. will remove.,0,0.9889538288116455
47489510,47,cas--,2015-12-14T12:02:09Z,result is unused,0,0.9873020648956299
47489556,47,cas--,2015-12-14T12:02:50Z,log line should be in method,0,0.9937251210212708
47489613,47,cas--,2015-12-14T12:03:37Z,convert to # comment,0,0.9950138926506042
47489830,47,bendikro,2015-12-14T12:06:38Z,indeed.,0,0.9800629615783691
47539907,47,bendikro,2015-12-14T18:54:33Z,fixed,0,0.920660674571991
58851905,55,cas--,2016-04-07T10:43:12Z,we probably discussed this before but what was the reason for removing this?,0,0.9918535351753235
58871071,55,bendikro,2016-04-07T13:33:47Z,"we haven't discussed this before. the reason for adding the self.wait_on_handler variable in the first place was reduce the startup load time by avoiding processing all the torrent added events generated while adding the torrents to the session. when using async_add instead, it's all asynchronous, so there is no longer the same need to postpone handling the events.",0,0.9936356544494629
58907329,55,cas--,2016-04-07T17:02:45Z,"ah you are reverting a change you made a while ago, that might be what i was thinking of. do you think we need to retain the `wait` argument for `handle_alerts()`?",0,0.9892607927322388
58907837,55,bendikro,2016-04-07T17:06:30Z,i guess the wait parameter can be removed as it's not used.,0,0.9835429191589355
58928695,55,aresch,2016-04-07T19:15:54Z,we probably don't need to catch invalidtorrenterror here anymore as the raise was removed.,0,0.9899711012840271
58928904,55,aresch,2016-04-07T19:17:25Z,should we check if torrent_id is already in torrents_loading to prevent a possible race condition adding the same torrent multiple times very quickly?,0,0.9923467636108398
58949278,55,bendikro,2016-04-07T21:35:21Z,indeed.,0,0.9800629615783691
58953120,55,bendikro,2016-04-07T22:04:53Z,"not likely an issue, but added a test for this.",0,0.9635714292526245
779908441,334,cas--,2022-01-06T22:28:18Z,this change will break standalone mode,0,0.9670530557632446
779932435,334,DjLegolas,2022-01-06T23:26:18Z,a possible solution is: [code block],0,0.9944326281547546
1209265992,412,cas--,2023-05-29T12:23:07Z,"please fix typo, should be `i2p`",0,0.9920793175697327
1209266832,412,cas--,2023-05-29T12:24:12Z,"should be removed since should not be describing changes in comments, those are for commit messages",0,0.9699685573577881
1209267596,412,cas--,2023-05-29T12:25:12Z,can simplify this comment to just say [code block],0,0.9936906099319458
1209268753,412,cas--,2023-05-29T12:26:43Z,this comment should be removed as it's not relevant here and should be in commit message,0,0.9902552962303162
1214031176,412,jiigen,2023-06-02T07:37:49Z,where?,0,0.9743809103965759
1731666740,460,cas--,2024-08-26T18:47:51Z,"i don't really want every editor added to gitignore, it's better for a dev to add this to their global `gitignore` to avoid needing to specify for every project.",0,0.9750688672065735
1731687989,460,cas--,2024-08-26T19:06:46Z,hmm i wonder if `anchorify_urls` might be a bit more succinct,0,0.9637815356254578
1731689332,460,cas--,2024-08-26T19:08:13Z,"try to avoid describing the implementation detail, using regex, in docstring/comment. also 'simple' is quite subjective so should be avoided.",0,0.9852774739265442
1731690291,460,cas--,2024-08-26T19:09:09Z,with python 3 type hints can be moved to function definition,0,0.9934007525444031
1731740909,460,zakkarry,2024-08-26T19:48:51Z,"sure, i understand.",0,0.9689980149269104
1731750674,460,zakkarry,2024-08-26T19:58:30Z,"sure, i'm just used to jsdocs in typescript and saw it used in other functions in common, so i just copy pasted it and did the small editing you see. will move to type hints in the definition though.",0,0.9856603145599365
1731755700,460,zakkarry,2024-08-26T20:03:20Z,sounds good to me,1,0.963803231716156
61684400,84,cas--,2016-05-01T09:36:07Z,since we are not supporting twisted < 12 the `try...except` can be removed,0,0.9903903007507324
61694835,84,doadin,2016-05-01T23:06:10Z,related side note might wana throw in an update to depends file at some point,0,0.9911752939224243
64202034,101,cas--,2016-05-23T10:43:57Z,`args` is still optional also need to document `sys_argv`,0,0.9952261447906494
64202966,101,bendikro,2016-05-23T10:51:44Z,fixed,0,0.920660674571991
64296189,101,cas--,2016-05-23T21:54:17Z,"should this be `handle ui args...`, i don't think a third method with almost identical summary is a good idea :)",0,0.7141951322555542
64296766,101,bendikro,2016-05-23T21:58:12Z,"well, the idea is that arguments are the cmd line arguments, and the options is the result of the parsed arguments.",0,0.9910845756530762
64301876,101,cas--,2016-05-23T22:40:14Z,sorry i meant `handle ui options`,-1,0.9889124631881714
64305758,101,bendikro,2016-05-23T23:17:30Z,"oh, you mean the docs...yeah of course",0,0.9487007260322571
85659452,128,cas--,2016-10-30T13:06:08Z,this will `importerror` on windows,0,0.8784179091453552
85660365,128,bendikro,2016-10-30T13:59:16Z,"ah, umm..thanks for testing that",1,0.9247660040855408
85673269,128,aresch,2016-10-30T23:52:51Z,please use the print function from **future**: from **future** import print_function,0,0.9951871633529663
85735961,128,bendikro,2016-10-31T13:20:36Z,sure,0,0.9422702193260193
192566687,186,cas--,2018-06-02T18:26:33Z,rename address to adapter name,0,0.9950189590454102
192566707,186,cas--,2018-06-02T18:27:17Z,remove `the`,0,0.993753969669342
192566741,186,cas--,2018-06-02T18:28:47Z,interface adapter name for outgoing bittorrent connections. (leave empty for default).,0,0.995254635810852
192566746,186,cas--,2018-06-02T18:28:59Z,`interface adapter name for outgoing bittorrent connections. (leave empty for default).`,0,0.9933919310569763
192566756,186,cas--,2018-06-02T18:29:21Z,`outgoing_interface`,0,0.9947636127471924
195941786,189,cas--,2018-06-17T21:19:45Z,assign getting the component in the plugin __init__ to `self.rpcserver` and it can be reused in the entire class.,0,0.995051920413971
195942107,189,DjLegolas,2018-06-17T21:32:35Z,done.,0,0.9897913336753845
234170918,226,cas--,2018-11-16T11:16:30Z,please provide details in this commit message as to what if being fixed by this change. from my perspective both provide pywin32 and i havn't seen any problems.,0,0.9937573671340942
234358737,226,doadin,2018-11-16T21:51:48Z,"in further testing this appears to be a issue with modules getting installed with the setup.py script(at least during a ""python setup.py develop"") after this setup pywin32 is ""installed"" but doesn't work, when going through the uninstall process you can see theres a big difference in files. and since it is ""installed"" following up with a pip install -r requirements.txt just says its already installed. however if you uninstall pywin32 then install with pip -r... it installs properly. this occurs with a up-to-date pip and setuptools.",0,0.9847248196601868
813780436,380,cas--,2022-02-24T11:13:09Z,"we don't need the section number, it's optional and would open at 1 anyway",0,0.9887998104095459
1209310435,404,cas--,2023-05-29T13:20:01Z,it would be good to have a check for meta version as required by the spec but it's not crucial to this pr...,0,0.9879536628723145
1209312544,404,cas--,2023-05-29T13:22:33Z,having the name filetreev2 and filetree2 is quite confusing. perhaps `filetree_btv2`?? there will also need to be a `filetree2_btv2`... could also add class docstring to help indicate difference,-1,0.538255512714386
1209482130,404,cas--,2023-05-29T17:38:17Z,this doesn't work for a rootless multifile torrent with a single file. [a link] from just parsing the 'file tree' key i don't think we can get the relevant info. this might be a better check [code block] i'm thinking that single_file_torrent should be a static method in filetree v2 class,0,0.9894352555274963
1214563205,404,DjLegolas,2023-06-02T16:06:05Z,added `filetree2btv2` and a detailed docstring for all 4 classes of `filetree`,0,0.9939132332801819
1214563996,404,DjLegolas,2023-06-02T16:07:00Z,agree. so added it also.,0,0.9820307493209839
804782646,372,gazpachoking,2022-02-11T15:55:14Z,"i think we could use `unittest.mock.mock` to simplify these callbacks a bit, as well as eliminate the problem of having to wait longer than needed for them. [code block] if we need to test registering callbacks like this in any other tests, maybe the mock_callback functions goes somewhere common to import.",0,0.9871397614479065
805177721,372,DjLegolas,2022-02-12T16:22:44Z,i have created a fixture from this code and changed the tests,0,0.9949939846992493
805178827,372,gazpachoking,2022-02-12T16:33:36Z,"i think just hardcode the timeout, don't think there is any way to actually pass this value to a fixture.",0,0.9817060828208923
805179586,372,gazpachoking,2022-02-12T16:41:11Z,"i might just spell out the whole `orig` here, not saving much space, and it seems more clear.",0,0.9735071659088135
805180376,372,DjLegolas,2022-02-12T16:50:01Z,done,0,0.8682363629341125
805180380,372,DjLegolas,2022-02-12T16:50:06Z,done,0,0.8682363629341125
59984992,68,cas--,2016-04-17T14:02:45Z,"remove translation hint and reword: ""starting webui server at pid %s""",0,0.9954107403755188
59993937,68,bendikro,2016-04-17T21:53:41Z,sure,0,0.9422702193260193
223320066,155,cas--,2018-10-08T10:47:38Z,"lets try and drop pywin32 module usage, so i'm thinking: [code block] references: - [a link] - [a link]",0,0.992562472820282
223320389,155,cas--,2018-10-08T10:48:44Z,need to fix `old_wndproc` scoping. additionally if dropping pywin32 need to wrap `on_wndproc` with above `wndproc` func.,0,0.9944800138473511
223519904,155,DjLegolas,2018-10-08T22:59:58Z,in what way to fix `old_wndproc` scoping?,0,0.9923933744430542
223610102,155,cas--,2018-10-09T08:48:49Z,needs to be a class variable when you have a callback so i'd call it `self.win32_prev_wndproc` also it is best to define a class variable in __init__ and assign it none.,0,0.9949487447738647
341055288,256,cas--,2019-10-31T10:19:34Z,"this change should be a separate pull request that replaces all usage of gtk.alignment not just a single instance. however alignment is only deprecated for gtk >=3.14 and it is not a critical requirement to be updated just now. i have also noticed that this has not removed the usage of gtk.alignment, the margins values don't match the original padding values and using the margin property as suggested below would be a better substitute for `set_padding`",0,0.9932107329368591
341073125,256,cas--,2019-10-31T10:57:20Z,this is orphaned code and does not need fixing. i shall push a commit to remove `self.colour_*ground` lines,0,0.9939423203468323
341073852,256,cas--,2019-10-31T10:58:57Z,why has the size changed from 7 to 14?,0,0.9910029172897339
341078926,256,cas--,2019-10-31T11:11:47Z,"please don't use a bare a exception, did you encounter any errors that require the try..except? from the docs it would raise a glib.error. also no need for `pass` and print statement should be log.error",0,0.9913159608840942
341103256,256,doadin,2019-10-31T12:14:34Z,its been so long now i don't remeber.,-1,0.7628101706504822
771956500,288,cas--,2021-12-19T14:21:08Z,"this doesn't actually work since it's not exported for pytest. to use `env` job keyword to set env var in an action: [a link] thinking further maybe instead remove the `or security` from pytest step and add a step before `install dependencies` that sets the env vars, something like this: [code block] if you use the latest version 3.0.6 then the testssl_url needs to a `v` prefixed e.g. `.../tags/v$testssl_ver`",0,0.9937910437583923
772005962,288,cas--,2021-12-19T21:55:38Z,the `v` prefix is the issue here. it cannot be substituted into the run mv cmds,0,0.9915510416030884
772103579,288,DjLegolas,2021-12-20T06:20:54Z,sounds good. changed to this implementation.,1,0.9273309707641602
84392786,122,cas--,2016-10-20T22:59:13Z,should this not be testing for `__pieces` before `__num_pieces` since all torrent have `__num_pieces`? also you could reuse the for loop e.g. [code block],0,0.9943158030509949
84393893,122,cas--,2016-10-20T23:08:03Z,really should avoid using global.. in this situation a good alternative would be to enumerate for loop and pass as an arg to fill function. however if you implement the suggestion in my other comment below you can remove this function and put the code back into the for loop.,0,0.987695574760437
84555225,122,cas--,2016-10-21T22:30:19Z,this doesn't look right... in my example it was: `[3] * self.__num_pieces`,0,0.9358112215995789
192626697,187,gazpachoking,2018-06-04T04:52:26Z,"i'd probably avoid the duplicate windows_check, and just do: [code block]",0,0.9902679324150085
192627369,187,gazpachoking,2018-06-04T05:00:50Z,"perhaps it's clearer to say: `invalid listen interface. (must be ip address or, on linux, adapter name.)`? (that question mark is because i don't actually know if it's clearer.) alternatively, just add a comma, (and fix capitalization,) into your current message. i.e. `must be adapter name or ip address on linux, or ip address on windows`",0,0.9834437370300293
202509843,203,cas--,2018-07-14T08:25:44Z,"the script is not available to an installed deluge-web. also, we should not be creating new files within an application directory. i thought i had outlined my thought process for this in the ticket but seems not... anyway, what i wanted to fix was that there should not be a requirement for the gettext.js file in the code. i.e. disable translation or prevent errors if file not available.",0,0.9678702354431152
202528060,203,DjLegolas,2018-07-15T00:03:40Z,"ok, now changed to mocking function `_`.",0,0.9784892797470093
202537956,203,cas--,2018-07-15T10:26:23Z,`os.path.join` can take any number of args and join them so only one needed. also `isfile` is preferred to `exists` as we are definitely looking for a file. also there is the `rpath` function to simplify generating absolute script paths. so you can remove this code and just use: [code block],0,0.9918960928916931
202538061,203,cas--,2018-07-15T10:30:24Z,the first line of a docstring should not continue onto next line and should end with a full-stop. this is the style we should be using: [a link],0,0.9952333569526672
419350249,289,cas--,2020-05-04T10:44:33Z,this is comparing strings so the version comparison will not work as you expect it to. look for other examples of version comparisons in the code.,0,0.989630401134491
419720704,289,DjLegolas,2020-05-04T20:52:11Z,fixed :),1,0.910405695438385

id,pr_number,user,created_at,body
174716735,4996,zenfuzz,2016-01-25T23:00:52Z,"Yes!
"
174968760,4996,JosephMcc,2016-01-26T11:56:04Z,"@brownsr I had my first chance to try this out.

I use a dual monitor set up and ran into issues right of the bat. Not sure if you have the hardware to test by I started a branch here: https://github.com/JosephMcc/Cinnamon/commits/vertical-panel-fixes

It contains a fix that was preventing panels from being loaded properly on all monitors. The other commit is just clean up to bring it more in line with other cinnamon js code and make it a bit easier to work with. Feel free to grab the changes for your branches.

The other thing that I see just looking through the code is how style classes are handled. Currently you are using completely different classes when an applet is horizontal vs. vertical. Instead of doing that use add_style_class_name('vertical') and remove_style_class_name('vertical'). The advantage to that is the vertical applets will inherit all the styling from the normal ones. If you need changes you can just override the specific properties you want to change. Make for easier/cleaner theming.

These warnings:

(cinnamon:2738): St-WARNING **: Did not find color property '-arrow-background-color'

(cinnamon:2738): St-WARNING **: Did not find color property '-gradient-start'

(cinnamon:2738): St-WARNING **: Did not find color property '-gradient-end'

are caused by the specific theme you are using and not caused by your code.
"
175193438,4996,brownsr,2016-01-26T19:36:39Z,"Thanks very much.  I'll work through that.
"
175811181,4996,zenfuzz,2016-01-27T19:27:56Z,"Thanks, guys.
"
176779795,4996,Mowalle,2016-01-29T14:22:51Z,"Thank you for working on this. This is one of the features that I really miss.

Regarding your comment about the calendar applet:

> Unsure what to do about the calendar applet. Maybe a vertical panel could show a basic HH24:MI clock regardless of what date format is actually set - because anything longer will not fit, and still be legible.

Can't the user simply put a `%n` into the format to create a newline? That's at least how you can handle the datetime applet on verticle panels in xfce.
"
176987184,4996,brownsr,2016-01-29T21:53:59Z,"Thanks Mowalle, I didn't know about that.  I've been spending far too much time on this relatively small thing trying to devise scaling workarounds that simply do not work or trigger strange bugs.   And in 2 mins with your advice there's a workable way through :)
"
177325750,4996,Azureit,2016-01-30T22:58:21Z,"Thanks for your work on this.
This is the only thing that is stopping me from moving from mate to cinnamon.
I like the panel on the right, size 32px, like this:
**1-** Menu icon
**2-** Clock `<span font=""Digital Numbers 12"" color=""#ff8080""><b>%H</b></span>\n<span font=""Digital Numbers 8"" color=""#6699ff""><b>%M</b></span>`
**3-** Systray
**4-** Windows list(In this case mate-applet-dock)
**5-** Trash icon
![Screenshot my desktop](http://i.imgur.com/jReiGtB.png)
"
189567089,4996,ghost,2016-02-27T03:22:44Z,"@brownsr I suspect that the migration to vertical panel for third party applets will be slow and gradual. There are then, some applets that will remain incompatible with the new code. In my opinion, will be nice if there are a filter function to not add an incompatible applet inside the vertical panel, i.e. if the applet not declared explicitly that he can display his components in that way.

Probably this will help to stop a lot of user ""issues"" about this. Maybe, this can also be stopped with a comment inside the release note of cinnamon, or maybe in others ways. Anyway, there are a lot of applets currently that not support the last cinnamon version, as my own applets.
"
189932834,4996,brownsr,2016-02-28T19:47:06Z,"Appreciate the comment lestcape.  I don't know of any way of doing this other then testing every applet and blacklisting the ones that have problems, and re-testing periodically to reduce the blacklist.  That would cause its own problems.  If you can suggest any generic way then I can give it a go.  

I took the systray changes from your PR to make this PR self-contained.  As well as the filter, there was that infinite loop you had corrected, that got triggered when inserting a layout manager in the hierarchy.
"
189942350,4996,mtwebster,2016-02-28T20:36:13Z,"The way I always envisioned this working was:
- IconApplets would be allowed to display on either type panel (since they are just an icon, they could display without issue either way.
- Any other applet types would need to be explicitly defined, either as a new applet class, or being explicitly flagged in metadata.json as compatible with either or both types.

I'd prefer to avoid any sort of blacklist, and instead provide a set of rules within the applet types to ensure good behavior.
"
189964536,4996,ghost,2016-02-28T23:07:03Z,"In my point of view i will do that:

appletManager.js

```
const DisplayLayout = {
    VERTICAL: 'vertical',
    HORIZONTAL: 'horizontal',
    BOTH: 'both'
}
```

applet.js

```
   function getDisplayLayout() {
        return AppletManager.DisplayLayout.HORIZONTAL;
   }
```

myapplet.js

```
function MyApplet() {
   this._init.apply(this, arguments);
}

MyApplet.prototype = {
   __proto__: Applet.Applet.prototype,
   .......
   //override getDisplayLayout
   function getDisplayLayout() {
        return AppletManager.DisplayLayout.BOTH;
   }
   .....
}
```

Then you need to compare the DisplayLayout of an applet instance with the panel layout and allow or deny the drop action inside the panel.

Please see that you can change the code inside of applet.js and apply the @mtwebster suggestion, reeding the layout behaviour for the metadata.json and returned the value or also checked if is an icon Applet first and only in this case return AppletManager.DisplayLayout.BOTH without read the metadata.json

But that's this is my idea, is not necessary the best one.
"
189968341,4996,ghost,2016-02-28T23:28:26Z,"Additional to this fact, we need to check on applet initialization if there are a supported panel where then be added or not. And not add an applet to a non supported panel. A cinnamon update with this new code, without a check of this, could be in my opinion dangerous.
"
189977203,4996,ghost,2016-02-29T00:14:00Z,"And when panel is moved to any horizontal position from any vertical or vice versa,  also is needed a filter from the applet that do not satisfy the new type of the panel position and remove this applet from panel or move the applet to a allowed panel if there are one.
"
192758715,4996,brownsr,2016-03-05T23:26:32Z,"I gave a quick test to a batch of 3rd party applets, working downwards in popularity.  Very mixed results.  Only one applet (configurable menu) caused stability problems.  I was a bit surprised to find out how many were flaky even in standard horizontal panels :

**weather** - all OK
**window list with app grouping** - does not display correctly
**configurable menu** - can cause cinnamon hangs
**places** - workable.  Popup window placement comes up midway L/R on the panel and can have part of the popup window off the screen dependent on applet placement, but seems to work OK
**multi-core system monito**r.  Not really right in horizontal panels.  Does not display correctly in vertical panels
**Desktop capture.**  Context menu comes up midway L/R on the panel, but otherwise appears to work OK. Needs a cinnamon reboot to size correctly on horiz panel
**system tray collapsible  - does not display correctly
places center** - popup placement comes up midway L/R on the panel, but seems to work OK
**show desktop++** - appears broken in all panels
**classic menu** - appears completely broken, will not install at all
**Better settings** - needs a cinnamon reboot to size correctly on horiz panel. aligns to left on vertical panels, but otherwise OK ish.  Tries and fails to fire up gnome control center with one menu item (type of panel is not relevant)
**News feed reader** - will not install
**Sound with apps volume** - aligns to the left in a vertical panel, and the menu comes up midway L/R on the panel but otherwise seems to walk OK
**Hardware monitor** - disappears on a vertical panel
**Windows quick list with close button** - works fine, though the display of icon and window count looks odd on a vertical panel.  Context menu comes up midway L/R on a vertical panel
**Shutdown applet** -  alignment is to left initially when dragged into a vertical panel but otherwise seems to work fine.  The screen lock item does not work on any panel
**Pomodoro timer** - shows fine and appears to work as far as I can tell, but as it shows a timer string it will write off the side of a vertical panel and disrupt the centre alignment of other applets
**All in one places** - doesn't exactly seem to do very much, but behaves the same in any type of panel.  Context menu comes up mid-panel L/R
**window buttons with title** - does not display correctly in vertical panel.  Not that I can really work out what this is supposed to do in a horizontal panel anyway.
**restart cinnamon** - works fine
**drawer** - does not appear to do anything in any panel other than flip its orientation
**system monitor (orcus)** - does not display in vertical panel 
**timer with notifications** - works just fine.
**System Monitor applet (ebbes)** - Does not display correctly in vertical panel.  Appears half broken in horizontal panel anyway 
**Screen saver inhibit [mtwebster]** - displays and works fine
**CPU temperature indicator** -works fine, though text will burst out of side of panel and disturb the central alignment of other applets in the box
**Screen shot [tech71]** - works fine, context menu comes up mid-panel L/R
**Screen shot and desktop record** - works fine , context menu comes up mid-panel L/R
**My launcher** - works fine, other than context menu placement comes up mid-panel L/R and vertical placement can be less than ideal
**Messaging menu** - does not load
**Quit applet** - seems to work OK other than context menu placement comes up mid-panel L/R
**Slingshot** - works OK other than the context menu placement comes up mid-panel L/R.  You have to configure the word 'menu' not to show.
**Force quit** - works fine
**Stark Menu** - looks broken in a horizontal panel anyway
**System monitor with graphs** - works just fine.
**Gnome menu [stable]** - does not install
**World clock calendar** - works ok with custom string %H%n%M
**user menu** - works OK, though as the user name will usually be longer than the panel it writes out beyond the panel, and disturbs the central alignment of other applets in the box
**Gpaste** - failed to load in any panel
**github explorer** - works OK, insofar as it works at all
**Sports update** - seems to work fine in RH panel, though no updates came through while I used it.  in LH panel the word 'live' breaks out of the panel and disturbs the central alignment of others applets in the box
**My bookmarks** - works like a dream
**Window list with preview** - shrinks down to a tiny size in a vertical panel
"
192764883,4996,ghost,2016-03-06T00:16:07Z,"@brownsr yes, thats why i say probably with a comment in the release will be enough. Anyway the reason of have a filter is not for broken applets it's for functionals applets. See this as a feature and not as a patch. You can give for functional applets a way to prevent/allow if they can/want to be displayed vertical/and-or/horizontal.
"
192765413,4996,ghost,2016-03-06T00:20:45Z,"See also we can made inside the applet an actor rotation of 90 degree in the opposite direction of the vertical panel and the support for vertical panel will not be a problem, while we search for a real solution.
"
193803898,4996,ghost,2016-03-08T14:29:08Z,"@brownsr With the AppletTextIcon, i think that will be possible remove the label, as you comment inside the code. But in my opinion, will be better not remove the label in the case and only in the case that the applet reported in an explicit way that can deal with vertical panel, because for example if the label is short, can then be displayed inside the icon, as currently occurs in the WindowsIconList applet, with his special types of menu components.
"
193937378,4996,brownsr,2016-03-08T19:41:02Z,"I know suppressing the label on icon+text applets works OK, as I put this in a long time ago [change removed subsequently, you and mtwebster convinced me it was inappropriate].  There's never going to be room to display the text label for one of these applets, as the icon sizes to fill most of the available space, scaling the same way as icon only applets.  That was my thinking anyway.  I think I agree with you for text only applets, if the author knows they will happen to come up small enough to fit.  However in practice I have not found any applets that do this now.  Even the calendar applet comes up with a clock that only just fits 2 digits comfortably with a typical default font size, so displaying the time needs %H%n%M.  Any text applet would have to be specifically designed for the purpose I think. And then if it declares itself suitable, fine.
"
195539478,4996,brownsr,2016-03-11T20:34:15Z,"OK, that's protection against unsuitable applets added.  I've used the method lestcape suggested.  Frankly I could not work out how to break into the extension subsystem to do it via json.  AppletIcon applets are treated as OK. Each other type of applet will need a getDisplayLayout function declared if it wants to do anything other than be on horizontal panels. Dragging an applet onto an unsuitable panel simply refuses to drop.  Adding an applet via the 'add applets to the panel' settings route will flag up a red button indication against the applet in the settings list.  Moving a panel containing an unsuitable applet to a new orientation will make the applet disappear from the panel, and it will similarly show up with the red button indication against the applet in the settings list if launched from the panel. It does the job, but is a bit on the subtle side, however triggering the error reporting logic gives a large scary banner message telling the user to contact the applet developer, which seemed inappropriate to me.  
**\* added a friendlier message when a user tries to add an unsuitable applet
"
195559857,4996,collinss,2016-03-11T21:21:59Z,"You can access anything in metadata.json (which is in the directory of every applet) from the meta property of the extension object, or the _meta property of the applet object. It is read in at https://github.com/linuxmint/Cinnamon/blob/master/js/ui/extension.js#L131.
"
195584836,4996,ghost,2016-03-11T22:33:55Z," @brownsr What you say about the large scary banner message telling the user to contact the applet developer maybe is this: https://github.com/linuxmint/Cinnamon/blob/master/files/usr/share/cinnamon/cinnamon-settings/bin/ExtensionCore.py#L977

And this function is called from this place: https://github.com/linuxmint/Cinnamon/blob/master/js/ui/cinnamonDBus.js#L267

So, probably the susses could be a numeric value instead of a boolean to indicate a more specific type of loading state. Then you can response in concordance with the state.

 Please see, if you want to apply that you need to change the xml of this Dbus function.
"
195646529,4996,ghost,2016-03-12T03:03:11Z,"@brownsr 
The trace of @collinss comment:
https://github.com/linuxmint/Cinnamon/blob/master/js/ui/applet.js#L163
https://github.com/linuxmint/Cinnamon/blob/master/js/ui/appletManager.js#L337
https://github.com/linuxmint/Cinnamon/blob/master/js/ui/appletManager.js#L460
https://github.com/linuxmint/Cinnamon/blob/master/js/ui/appletManager.js#L187
https://github.com/linuxmint/Cinnamon/blob/master/js/ui/extension.js#L167
"
196089399,4996,mtwebster,2016-03-14T00:39:01Z,"Some initial observations testing:
- Middle-zone applets don't center themselves like they do on horizontal panels.  We should get more or less the same 'gravitational' behavior - upper zone pushes up, lower pushes down, middle stays centered.  *\* Edit - the alignment correct in normal mode, but not in panel edit mode.
- I'm not sure I'm a fan of the flat, seamless look where all the panels connect together.  When I envisioned this originally, I figured on horizontal panels being 'dominant', and vertical panels stopping shy of connecting - acting more as a dock I suppose (for a rough example, look at the tiling overlay that pops out when you're dragging a window to an edge - that's sort of how I thought a vertical panel would look.   Only if there wasn't a horizontal panel in the way would the vertical panel extend to the monitor edge.  I'm not sure how difficult that would be to implement from a theme perspective (an end stopping short of a horizontal panel might look nice with small rounded corners, but we wouldn't want those rounded corners touching the edge of the monitor in an un-terminated panel.)  Maybe the user could choose which panels should be 'dominant' - vertical or horizontal.  I'd be fine deciding on something we feel looks best and leaving the extra configuration out of it too.  Again, this is only my opinion style-wise, and this from someone who wears mis-matched socks to work.  Having the panels not merge together also adds a bit of separation in corners, where you'd have unrelated icons stacked against one another.
- Adding a vertical panel makes non-primary monitors inaccessible for some reason.  My primary is left-hand out of two, and if I add a panel, I can no longer cross the barrier to the right-hand monitor with my mouse.  Restarting cinnamon doesn't help.  It also doesn't matter which side I put the panel on, it closes off the monitor.  Just leaving the feedback here - understood if you can't test or whatever - we can address it later.

I'll dive into the code some later, unfortunately I didn't have much spare time this weekend.
"
196233597,4996,brownsr,2016-03-14T10:00:10Z,"Thanks for the testing feedback.  I've been travelling today so have had only a little time to look at it.

The edit mode behaviour is curious, haven't been able to get to what causes it yet with some quick changes. I've gotten so used to seeing it, it stopped registering as odd. 
   **\* have now reduced this to a specific set of circumstances, should not happen generally now

If you use a theme that has shadow like mint-x then the shadow line will visually separate butting vertical and horizontal panels, otherwise I agree they will merge visually, as currently coded. It would be simple enough to put a gap at the top and bottom of vertical panels to create a dock like effect, if that was wanted. 

No idea about the monitors, will have a root around when I can.  
   **\* found and corrected an error which may be related, see below

Oh, and horizontal panels are dominant as coded, so a vertical panel will slot in over/under them, unless there is no horizontal panel when it will go to the edge.
"
196260663,4996,JosephMcc,2016-03-14T11:03:42Z,"I feel like leaving an actual gap between the panels would be a bit strange. Themes should be able to create visual separation in a couple ways, be it shadows or borders. In fact a gap could likely be created through simple theming.
"
196316392,4996,ghost,2016-03-14T13:45:26Z,"I think will be nice to have a configuration for the dominant panel layout as the comment of @mtwebster suggest. 

To centering properly the middle zone of the vertical panel, i think will be interesting take a look again to this code: https://github.com/linuxmint/Cinnamon/pull/4041
"
196512991,4996,mtwebster,2016-03-14T20:40:55Z,"Another quick observation, if I have a bottom panel, clicking at the bottom of it in, say, the window list applet does nothing - like a dead row there.  I've seen this bug before with other panel work.. maybe theme-related? (this is on the default theme)
"
196549919,4996,brownsr,2016-03-14T22:35:25Z,"With the window list there are small gaps around the representations of each window on some or all sides (pretty small with the default theme, but more obvious with others), and there may be unused panel space to either side of the window list.  Nothing happens if these are clicked on.  

The change I have made has intermediated a management container to handle the horizontal/vertical switching, and that changes the way the window representations work. the x/y-expand does not seem to function to drive the window representation boxes up to the edge, wherever I set it.  I have now set a preferred height in horizontal panels to the height -2, which means visually that the window representation boxes go right up to the edge.  However if you drag the mouse right down to the bottom you will be in a tiny gap, the highlighting shows if you are in or out of the window box, and hence whether a click will function or not. Setting to height-1 also works, but I would be concerned that this might blow up in some themes if any border/margin were set. I have not tried this though.  I tried setting to panelheight, with no reduction, but this then throws up allocation errors by the bucketload. 

With some irony I had documented all of this in a comment, and then forgotten it entirely.  Memory of a goldfish.

The production version has no gaps to top or bottom, though it does have gaps between the window representations.
"
197062425,4996,brownsr,2016-03-15T23:06:39Z,"I corrected an array error that could be triggered by having/removing an extra monitor.  Symptoms were flaky context menu / edit mode zones with multiple monitors. After making this change I cannot recreate the issue mtwebster mentioned about getting the cursor trapped behind a panel barrier [unless turned on deliberately in the panel settings] other than by reaching the physical limit of the monitors [right hand edge of rightmost, top edge of topmost etc.]. I've moved monitors, set primary etc. with no issues.   

Also corrected an issue that would have stopped additional 'vertical' styling being recognised for the three panel boxes.

But I am not getting anywhere finding a reason for the curious alignment when edit mode is turned on.  I suspect another pair of eyes may be needed.
*\* found it
"
197546787,4996,brownsr,2016-03-16T20:58:16Z,"Excepting the couple of oddities I have logged as bugs in the main description, I suspect the work on this is pretty much done now.  I've written a set of tests, and I will try to find the time to run through it and log the results here
"
201009782,4996,brownsr,2016-03-24T20:39:38Z,"Unit/regression test for vertical panels

| test | Expected Result | Actual result |
| --- | --- | --- |
| Settings module |  |  |
| Add new panel in settings | Zones highlighted, click adds | OK |
| Turn on edit mode in settings | Edit mode turned on, relevant highlighting applied | OK |
| Next panel in settings | Highlighting applied to next panel, moves to next panel | OK |
| Always show, hide, intellihide | Show/hide behaviour of panel as expected | OK |
| Panel size customised/theme | Panel resizes according to setting | OK |
| Scale panel text/icons | Panel text/icons resize according to setting | OK |
| Panel height scale bar | Panel resizes according to bar settings | OK |
| Panel edge cursor mode | Cursor passes through panel edge according to settings | still to test |
| Previous panel | Moves to previous panel | OK |
| General settings module |  |  |
| Turn on hidpi | Stable hi-dpi behaviour of panel and contents | OK |
| Turn off hidpi | Stable non hi-dpi behaviour of panel and contents | OK |
| Panel appearance |  |  |
| Panel appearance | As defined in CSS | OK |
| Box appearance | Left, right, central as per CSS | OK |
| Box sizing | Looks balanced for various box populations | OK |
|  | Makes full use of panel 'height' | OK |
| No vertical CSS | Panel uses default theme CSS | OK |
| Standard themes | Well behaved in default and Mint-X themes | OK |
| Applet behaviour |  |  |
| Applet centred in panel | Applet centred in vertical panel | OK |
| (apart from CSS) |  |  |
| Hover | Highlighted as per CSS | OK |
|  | excepting systray, workspace switcher |  |
| Label | Shown in a sensible place on hover | OK |
| Context menu | Shown with pointer pointing in to panel | OK |
|  | Positioning of context menu is appropriate | OK |
|  | for top/bottom of screen |  |
| Click | Launches, animation is appropriate | OK |
| Applet spacing | Consistent and as expected | OK |
| 3rd party applets | Display in vertical  panel suppressed by default |  |
|  | if not IconApplet | OK |
| Corners |  |  |
| Corners show if in CSS | Corners shown | OK |
|  | Colour/size as per CSS | OK |
|  | Do not show if not in CSS | OK |
| Corner alignment | Diagonally inward on all panels, at end of panel | OK |
|  | No panel, no corner | OK |
| Corner design | Three painted concentric arcs, | OK |
|  | emphasis dot on inward top/bottom point | OK |
| Show | Corner shown on show of autohide | Fail |
| Hide | Corner hidden on hide of autohide | OK |
| Applet/panel interaction |  |  |
| Applets placed on panel by dnd | Applets move as expected | OK |
| Applet dnd | Dragging behaviour as expected | OK |
| Applet dnd within panel | can alter ordering readily | OK |
| Applet display after dnd | panel boxes adjust | OK |
| Applet specifics |  |  |
| Panel launcher | Aligns within panel on either horizontal or vertical panel | OK |
| Window list | Ditto | OK |
| Workspace switcher | Ditto | OK |
| Systray | Ditto | OK |
|  | systray icons and indicators both display | OK |
| All other supplied applets | Behave sensibly on both vertical and horizontal panels | OK |
| 3rd party applets in vertical panels |  |  |
| First 2 pages of popular applets | No desktop crashes | all OK |
|  | Document behaviour | bar                                         configurable menu |
| Panel context menu |  |  |
| Add applets to panel | Selected applets added to panel | OK |
| Panel settings | Panel settings shown for this panel | OK |
| Themes | Theme settings shown | OK |
| All settings | All settings window shown | OK |
| Troubleshoot - restart | Restarts | OK |
| Troubleshoot - looking glass | Looking glass shown | OK |
| Troubleshoot - restore to default | Restores to default | OK |
| Modify - remove panel | Removes panel | OK |
| Modify - add panel | Shows dummy, click adds | OK |
| Modify - move panel | Shows dummy, click moves | OK |
|  | Check all potential moves | cross monitor to test |
| Modify - copy applet config | Copies config for panel | OK |
| Modify - paste applet config | Pastes config for panel | OK |
| Modify - clear applets | Clears applets on panel | OK |
| Edit mode | Toggle on/off  show highlighting | OK, see bugs for residual alignment issue |
| Multi-monitor |  |  |
| Panels on multiple monitors | Panels place OK | Still to test |
| Panels move between monitors | Move OK | Still to test |
| Applet behaviour as expected | All applet behaviour as expected | Still to test |
| Save/restore |  |  |
| Stable panel across restart | Restart shows panels as they were | OK |
| Interacting panels |  |  |
| Panel overlap | None | OK |
| Preference for horizontal panels | Vertical panels resize to avoid horizontal | OK |
| Panel shadow | Falls naturally | OK |
| Internals |  |  |
| Occasions when log warnings are triggered | none | OK |
| Quirks |  |  |
| Non-intuitive behaviour encountered | Over-wide applets cause alignment to centre of applet set rather than the panel - a good reason to suppress over-wide applets |  |

Note:  multi monitor tests shown as still to be done, but in practice I expect them to be OK.  I gave these a work over a week ago and there were no issues, it's just that right now I am away on holiday and have no access to a second monitor.
"
201495331,4996,brownsr,2016-03-25T20:52:37Z,"Ready for review now I think.  I found and fixed a few more bugs as a result of running through a structured test, and have eliminated the allocation/alignment issues in almost all cases.  Hopefully I haven't introduced anything I didn't intend in the last few commits.  Will re-run the test sometime.
"
202145852,4996,brownsr,2016-03-27T21:14:11Z,"Have adjusted the panel barriers logic. The errors proved elusive, but hopefully all fixed now (6th April).  

Have also suppressed the menu label in a vertical panel.  Can be done via the configuration, but this avoids a user thinking that something is wrong, as the presence of a menu label in a vertical panel will disturb the alignment.  It's neater this way.

Similarly have forced a fixed time format on a calendar display in a vertical panel.  It's all that will fit, and it avoids a user thinking something is wrong or having to find out about time format codes.

Left and right panels will react to margin set up in their css when their size is set. That permits a gap to top and bottom of the screen if required.  Similar logic added to horizontal panels for consistency.
"
206015988,4996,BethAr,2016-04-05T22:34:07Z,"Thanks a lot for working on this!
"
207843190,4996,brownsr,2016-04-09T19:48:19Z,"A simple video clip showing the features of the PR.  It does not show multi-monitor.  The sharp eyed may pick up minor bugs mentioned above [_the menu icon is slightly misaligned after a panel move.  This would be sorted by a cinnamon reset (fixed 10th April).  The autohide of the right hand panel will have nuked the corners that should be visible on it with the multi-colour theme_].  https://www.dropbox.com/s/41lbyeakmr051wt/cinnamon-20160409c-1.webm?dl=0
"
207847965,4996,ghost,2016-04-09T20:16:44Z,"@brownsr that is really nice. Can be decide which panel layout commands the desktop?
![panels](https://cloud.githubusercontent.com/assets/1389572/14406177/8f1dc5b0-fe65-11e5-91a2-514f8432d02e.png)
"
207848175,4996,brownsr,2016-04-09T20:20:07Z,"The style on the left is what I have used, not configurable. The vertical panel will use the whole side in the absence of a horizontal panel though.
"
207848574,4996,ghost,2016-04-09T20:25:49Z,"Ok, but when you say ""The vertical panel will use the whole side in the absence of a horizontal panel though"". You say in static mode only, not for example when an horizontal panel is set to auto-hide?
"
207849242,4996,brownsr,2016-04-09T20:33:50Z,"Static only right now.  I thought about making it fully dynamic, but it was in the 'too hard' category at the time.  Might return to that at some time, perhaps.
"
207851140,4996,ghost,2016-04-09T20:42:49Z,"Don't worry, really what you currently do is several time more hard, this are just details. And true, is possible hard to do and is a risk make all at once.
"
215103327,4996,oberon-manjaro,2016-04-27T14:34:46Z,"@brownsr , that looks really great! How can I test your branch? I have compiled your latest commit, but the panel is not working at all for me. I have even forked your repo, merged it into linuxmint master branch and compiled the 3.1 release including your patches. With that one installed everything works normal, but no vertical panel support... What am I missing?
"
216262670,4996,brownsr,2016-05-02T15:09:58Z,"@oberon2007 Sorry not to reply earlier, I've only just seen your comment, as I've been doing something else for light relief from this long-running PR.  Firstly there appeared to be some conflicts that have been introduced with the latest master commits.  Hopefully I have just resolved these, though I appeared to have a minor change in progress which I have not given more than a superficial check, which has also been carried up.  Secondly no compilation is needed, as it is all javascript or python code, just copy the changed modules to the requisite places:
applet, appletManager, boxpointer, indicatorManager, messageTray, osdWindow, panel, PanelMenu, popupMenu,tooltips to /usr/share/cinnamon/js/ui.  cinnamon.css to /usr/share/cinnamon/theme.  cs_panel.py to /user/share/cinnamon/cinnamon-settings/modules.  applets to the corresponding place in /usr/share/cinnamon/applets.  You will need to use sudo.  Or you can merge  and dpkg-buildpackage I presume, though I've not built that way myself in this particular case. 

You won't see any overt changes, but right click on an existing panel will let you set up a new vertical one or move a horizontal one there, and the panel settings will allow a panel to be created on a vertical side. It uses existing functionality, just adds the flexibility of vertical options.

Simple copy script for adapting, I had my development git code under ~/dev/...:

cp ~/dev/Cinnamon/js/ui/applet.js /usr/share/cinnamon/js/ui
cp ~/dev/Cinnamon/js/ui/appletManager.js /usr/share/cinnamon/js/ui
cp ~/dev/Cinnamon/js/ui/boxpointer.js /usr/share/cinnamon/js/ui
cp ~/dev/Cinnamon/js/ui/indicatorManager.js /usr/share/cinnamon/js/ui
cp ~/dev/Cinnamon/js/ui/messageTray.js /usr/share/cinnamon/js/ui
cp ~/dev/Cinnamon/js/ui/osdWindow.js /usr/share/cinnamon/js/ui
cp ~/dev/Cinnamon/js/ui/panel.js /usr/share/cinnamon/js/ui
cp ~/dev/Cinnamon/js/ui/panelMenu.js /usr/share/cinnamon/js/ui
cp ~/dev/Cinnamon/js/ui/popupMenu.js /usr/share/cinnamon/js/ui
cp ~/dev/Cinnamon/js/ui/tooltips.js /usr/share/cinnamon/js/ui
cp ~/dev/Cinnamon/data/theme/cinnamon.css /usr/share/cinnamon/theme
cp ~/dev/Cinnamon/files/usr/share/cinnamon/applets/calendar@cinnamon.org/applet.js /usr/share/cinnamon/applets/calendar@cinnamon.org
cp ~/dev/Cinnamon/files/usr/share/cinnamon/applets/menu@cinnamon.org/applet.js  /usr/share/cinnamon/applets/menu@cinnamon.org
cp ~/dev/Cinnamon/files/usr/share/cinnamon/applets/panel-launchers@cinnamon.org/applet.js  /usr/share/cinnamon/applets/panel-launchers@cinnamon.org
cp ~/dev/Cinnamon/files/usr/share/cinnamon/applets/separator@cinnamon.org/applet.js  /usr/share/cinnamon/applets/separator@cinnamon.org
cp ~/dev/Cinnamon/files/usr/share/cinnamon/applets/spacer@cinnamon.org/applet.js  /usr/share/cinnamon/applets/spacer@cinnamon.org
cp ~/dev/Cinnamon/files/usr/share/cinnamon/applets/systray@cinnamon.org/applet.js  /usr/share/cinnamon/applets/systray@cinnamon.org
cp ~/dev/Cinnamon/files/usr/share/cinnamon/applets/window-list@cinnamon.org/applet.js  /usr/share/cinnamon/applets/window-list@cinnamon.org
cp ~/dev/Cinnamon/files/usr/share/cinnamon/applets/workspace-switcher@cinnamon.org/applet.js  /usr/share/cinnamon/applets/workspace-switcher@cinnamon.org
cp ~/dev/Cinnamon/files/usr/share/cinnamon/cinnamon-settings/modules/cs_panel.py /usr/share/cinnamon/cinnamon-settings/modules
"
216705476,4996,oberon-manjaro,2016-05-04T00:17:06Z,"Thanks a lot, @brownsr, I will experiment a little and report back :smile: 
"
229648416,4996,xtemp09,2016-06-30T12:50:12Z,"When will it be implemented? 
"
230000525,4996,brownsr,2016-07-01T17:14:02Z,"Intended for cinnamon 3.2 at the moment
On 30 Jun 2016 1:50 p.m., ""xtemp09"" notifications@github.com wrote:

> When will it be implemented?
> 
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> https://github.com/linuxmint/Cinnamon/pull/4996#issuecomment-229648416,
> or mute the thread
> https://github.com/notifications/unsubscribe/AGB5MS6V6crcycGQmDAZw91ketIQQx9lks5qQ7uKgaJpZM4HB-6q
> .
"
230017394,4996,xtemp09,2016-07-01T18:30:52Z,"Thanks, I was about to give up.
"
230097834,4996,brownsr,2016-07-02T11:43:56Z,"Another (very trivial) PR of mine has been inadvertently caught up in this catch-up to the latest master, that will teach me to make even the smallest PR direct on a master branch ;)  I can remove it later if it causes a problem, but I doubt it will.
"
233560699,4996,brownsr,2016-07-19T08:09:16Z,"@JosephMcc :  Hopefully all your comments are acted on now
"
239069235,4996,mtwebster,2016-08-11T04:15:40Z,"I tested this again - I have a request and a slight bug to report:
- Can you squash this down to maybe a handful of commits that make reasonable sense? Even less than 10 or 15 would be cool.  As soon as you do this I'll merge it.  Also, merging the settings revamp PR as well as one other merge last couple days has caused a couple if simple conflicts - my resolved merge is here: https://github.com/mtwebster/Cinnamon/commit/b4707c14e96b83efe2cf6c4941fde3bdda29ea1b if you want to compare, but they're very minot

The bug - I think? - Adding the stock menu applet to a vertical panel works fine - I like that it just shows the icon, however it doesn't seem to declare itself as a vertical-compatible applet (by implementing getDisplayLayout()) - it just looks at the orientation and acts accordingly.

But, you check here - https://github.com/linuxmint/Cinnamon/pull/4996/files#diff-58e0680d2516e9e58237cf48a393a29bR350 - for what type of applet it is, and a TextIconApplet is an IconApplet, so we end up letting both of those types through (try weather@mockturtl).  I think this is easily resolved by adding `&& !(applet instanceof Applet.TextIconApplet)` to that if statement, and making the menu applet actually report that it's a well-behaved vertical panel applet.
"
239307206,4996,brownsr,2016-08-11T22:02:36Z,"@mtwebster There are associated PRs against mint-y-theme and cinnamon-themes
Can you squash it all into one commit when you merge ?  There appears to be a recent github facility to do that, from what I read. The gazillion contradictory tutorials on how to squash commits are doing my head in, as none of them seem to describe what to do with all the other people's commits I see, as I have brought it up to date with master to resolve conflicts a number of times. And I don't want to mess things up for you, of course. 

Hope to find some time to do the squashing this weekend (13th).  If I have problems I will try to merge --squash onto a new branch and will push that instead.
"
239314026,4996,collinss,2016-08-11T22:34:29Z,"@brownsr I had to deal with this issue recently with my xlet settings pr. What you need is an interactive rebase. I found the instructions [here](https://blog.ona.io/general/2016/02/02/squashing-with-git-interactive-rebase.html) to be quite helpful. Basically just checkout the branch (if not already there), `git rebase --interactive HEAD~116`, when the text file opens replace pick with ""s"" or ""squash"" for every commit you want to merge into the previous (all but the first if you want to squash down to a single commit), save and quit. After you do this, you will need to force push to origin as you've rewritten the history (I like to make a backup clone of my repository so I don't lose my git history if I make a mistake).
"
239689224,4996,brownsr,2016-08-14T18:42:36Z,"@mtwebster Can you merge squash from what is here ?  I've successfully rebased the smaller changes on mint-y-theme and cinnamon-themes  but I appear to have met problems with my local git repository trying to create a squashed Cinnamon commit.  I've tried completely removing my local repository and re-cloning from my github account to do it all again, but there must be configuration files associated that I have not reset properly, as git is not behaving as I would expect with a fresh clone.  Basically I dare not now push to my github Cinnamon repository without risking destroying my one viable copy of this PR.  If you can squash to one commit when you merge then that would be perfect.
"
239786203,4996,mtwebster,2016-08-15T12:01:09Z,"I'll see what I can do tonight, worst case I may lose the 'merge' commit that auto-closes this PR.

I'm sure the ground will still shudder and we'll hear the singing of angels regardless, when this feature  gets merged :)
"
239852966,4996,clefebvre,2016-08-15T16:33:02Z,"I'd like to get this in as well. I created a slack channel for this. I don't have your email address to send you an invitation @brownsr :(
"
251866949,4996,markfilipak,2016-10-06T04:56:02Z,"I'm not a developer. I'm just a hardware engineer. But I know what I like, and I greatly like vertical menus with vertical text -- it leaves more vertical space for more lines of text. The picture is of TextPad (a programmer's editor) running in a WinXP virtual machine hosted by Linux Mint Cinnamon. To cite a Linux example, XFCE also supports vertical panels with vertical text. Please do this in Cinnamon, and make it available to users. You will spread Joy. And thank you for your work on our behalf. -- Mark.![textpad vertical menu](https://cloud.githubusercontent.com/assets/22652174/19140833/68d86820-8b5e-11e6-8eae-98b556b5d640.png)
"
430929310,7944,jaszhix,2018-10-18T08:53:05Z,"This PR includes a modified version of Icing Task Manager that adheres to the Cinnamon style guide. There are other additions as well.

- Changed the name to ""Grouped window list"".
- Adds most of the utility functions found in ITM's utils.js file to misc/util.
- Adds wrappers for `Mainloop.timeout_add` to util.js with `setTimeout` and `setInterval` that the applet uses. I also decided to make them available globally. My reasoning for this is because they are ubiquitous in all browsers and NodeJS. I have been cleaning up some of the older unmaintained third party xlets recently, and have been coming across a surprising amount of xlets that do not stop looping after they are removed from Cinnamon. These abstractions make using Mainloop safer and easier.
- Adds a utility for live-reloading Cinnamon xlets on code change with Gulp. I've been developing my applets this way for a while, and figured it should be in Cinnamon. I modified the configuration to support Gulp 4, and to be able to watch any xlet through command arguments.

To use this, you will need NodeJS. I recommend [v10](https://github.com/nodesource/distributions).
- Run `npm install -g gulp@^4.0.0`
- In the Cinnamon directory run `npm install`.
- Take ownership of /usr/share/cinnamon. Run `sudo chown -R $USER:$USER /usr/share/cinnamon`.
- To start the task that will watch and reload on code changes, run `gulp spawn-watch --uuid=""<xlet uuid>"" --type=""<xlet type>""`. For example, to develop the applet this PR is adding you would run `gulp spawn-watch --uuid=""grouped-window-list@cinnamon.org"" --type=""applet""`

Currently, nothing has been removed from the code, but there are a few niche options that I am considering for removal, and don't think are appropriate with good defaults for most people. Its good to have a balance between flexibility and ease of use, and too many options can make using software tedious sometimes - hurting the user experience. Here's a few things I'm thinking about:

- [x] Removal of Firefox bookmarks, history, and most visited. This code is heavy and I'm not confident we need to shove potentially thousands of items in a context sub-menu.
- [x] Removal of menu item icon type toggling option.
- [x] Simplifying the options so they are less overwhelming.
- [x] Patch cinnamon.css with the theme support ITM needs for all of its app states, which should make most of the theme options unnecessary.
- [x] Add better icon scaling that doesn't need manual configuration.

I am inviting anyone who is interested to suggest items to add to the to-do list, submit patches to this branch, and looking forward to seeing what ideas you guys have for this code base - whether they are technical or design related. "
431639603,7944,smurphos,2018-10-21T05:13:32Z,"Intriguing and exciting.

Some questions/suggestions?

I don't think ITM currently supports presenting itself as a target for 'Add to panel' from the menu. It is possible to implement this in grouped-window-list - I see from the commits that the intention is not to have a panel launcher applet in the default config as grouped-window-list will come with pre-pinned apps.

I don't know if this is technically doable but will grouped-window-list be able to handle pinned custom launchers and differentiate them from the main application.  My use case is half a dozen Chrome apps (Inbox / Calendar / Contacts etc) which I have in the menu and as panel-launchers, but for obvious reasons in ITM and the regular window-list they are just another Chrome window.

Hopefully advanced-menu will retain Cinnamenu's Search Providers management GUI? I think that Search providers are probably one of Cinnamon's most undiscovered features amongst the general user base. I originally discovered them via Cinnamenu.

Looking forward to testing - not so much looking forward to the theme fixing..... ;-)"
431640083,7944,jaszhix,2018-10-21T05:26:56Z,"Hi @smurphos, looks like the ""Add to panel"" functionality is working for me - I recall adding support for that a while ago. Pinning Chrome apps works for me as well. Not sure what the issue could be. If its an ITM-specific problem, feel free to open an issue on its repo."
431651273,7944,smurphos,2018-10-21T08:59:31Z,"> Hi @smurphos, looks like the ""Add to panel"" functionality is working for me - I recall adding support for that a while ago. Pinning Chrome apps works for me as well. Not sure what the issue could be. If its an ITM-specific problem, feel free to open an issue on its repo.

Thanks - it's working now - I've recently moved back to ITM from CobiWL - when I tried just after removing my existing panel-launchers add to panel spawned a fresh panel-launcher. Looks like a reboot has sorted that behaviour out. Also I note the Chrome apps are distinguished from the generic Chrome window - kudos @jaszhix"
434553092,7944,claudiux,2018-10-31T03:59:01Z,"Hi @clefebvre,

You project to ""Remove user applet from enabled-applets"".
Will there be a ""enabled-user-applets"" entry in dconf?

All these new changes will appear in Cinnamon 3.8, or in Cinnamon 4.0?

Best regards.

Claudiux
"
434564864,7944,jaszhix,2018-10-31T05:22:12Z,"@claudiux That's referring to the user applet (`user@cinnamon.org`) - users' current applets should be preserved. If the user applet does get removed, I suppose it can always be forked on spices. The original plan was to have Cinnamenu integrated, which has the functionality of the user applet, but we ended up not having enough time for that part."
434728092,7944,claudiux,2018-10-31T15:19:17Z,"Thank you for the clarification, @jaszhix . Too bad that Cinnamenu does not replace the menu. When I install Linux Mint on a computer, the first thing I do is replace the menu by Cinnamenu and the taskbar by Icing Task Manager."
434899720,7944,clefebvre,2018-11-01T01:21:04Z,"The user applet isn't going anywhere, the plan is simply to remove it from the default panel layout, but it'll still be there as part of what's installed, just not enabled by default."
434899785,7944,clefebvre,2018-11-01T01:21:29Z,All of this is for 4.0.
435581103,7944,clefebvre,2018-11-03T11:37:32Z,"Yes, this is getting merged but fixed hopefully today. We've looked at the transparent padding within the icons themselves. In most icon themes, there's none at 16px, and 2px at 24px.. that explains why we both thought we were wrong (we were :))."
13916992,1737,Lusito,2013-02-21T22:27:51Z,"I would actually really like to see shortcuts having their own group and real shortcuts for multi-workspace- and application alt-tab.
Not just for the default alt-tab but for extensions as well (30% of our extensions are alt-tab alternatives). I will take a look at it over the weekend and try to contribute.
Hopefully with an extension role 'application-switcher'
"
13930798,1737,autarkper,2013-02-22T06:42:44Z,"@Lusito wrote:

> I would actually really like to see shortcuts having their own group and real shortcuts for multi-workspace- and application alt-tab.

I'm not sure what you mean by this, could you please elaborate?

Other than that, I would like to emphasize that the multi-workspace feature is just one of many enhancements in this pull request, and it can easily be turned off if desired.
"
13941190,1737,glebihan,2013-02-22T12:36:21Z,"I'll have to be honest, there isn't much in there that I would like to have.
The whole idea of workspaces is to keep things separate.  When I am on a workspace, I don't expect alt-tab to get cluttered with windows from other workspaces.
We have other tools, such as the quicklist applet and expo, which provide multi-workspace functionalities.
The keyboard shortcuts also make alt-tab much more complicated than it ought to be. I don't see a case where I would have to stare at alt-tab for that long that I can't keep the alt key pressed.
"
13958218,1737,autarkper,2013-02-22T17:53:15Z,"@glebihan : You probably didn't try the ""icons + and window preview"" mode. Too bad in that case. And, as I've said, the multi-workspace thing could very well be made optional. Anyway, I get the message. I will think twice before ever submitting an unsolicited pull request again.
"
13960522,1737,Lusito,2013-02-22T18:14:55Z,"I meant something like:
- alt+tab = current workspace
- super + tab = current application
- ctrl + alt + tab = all workspaces

That way alt-tab behaves like it did before, but you have other shortcuts that limit or extend the window list.
"
13961339,1737,autarkper,2013-02-22T18:22:02Z,"@Lusito: Thanks for clarifying. That makes sense, although one might 
like to broaden or narrow the scope with Alt-Tab already open, using a 
shortcut. I also think a preference to set the default behavior would be 
nice.
"
13962044,1737,Lusito,2013-02-22T18:34:02Z,"could use +/- to change it when already open.
"
13969391,1737,autarkper,2013-02-22T20:24:58Z,"That should be easy. I'll give it a try someday.
"
13993054,1737,autarkper,2013-02-23T16:47:42Z,"@Lusito wrote:

> could use +/- to change it when already open.
> I've pushed some commits, one of which does just that.

I have also realized that almost all of my other improvements, such as 
showing thumbnails behind the icons if there are more than one 
application having the same icon, were only enabled for icons-preview 
mode. I have now rectified that.

My initial thinking in making the features selectively enabled was that 
I didn't want to upset the conservative icon+thumbnails users with 
modern features. In hindsight, maybe that was stupid of me.
"
13994625,1737,autarkper,2013-02-23T18:17:50Z,"OK, I have made the hateful windows-from-all-workspaces mode default to off, so most users won't ever see it. If you want to expose yourself to the horror of seeing windows from other workspaces you must press the plus key. You can then turn it off using the minus key, or open Alt-Tab using a switch-group\* hotkey.

I notice that the new commits don't show up here after the pull request was closed, but they are still present on my branch ""alttab-multi-ws"".
"
13996767,1737,autarkper,2013-02-23T20:11:04Z,"![Screenshot from 2013-02-23 21:00:24](https://f.cloud.github.com/assets/750787/188538/d57a2a3a-7df3-11e2-87f0-ffbd8270e17a.png)
This screenshot shows four of the enhancements:
- In the icon bar, if there are more than one window of the same kind, thumbnails are shown behind the icons in order to make it easy to quickly choose the right window.
- The window titles are now given more space in two rows.
- In preview mode, the current window's icon is shown in the window's top-left corner.
- In preview mode, the current window is visually isolated against the desktop background.
"
13996835,1737,autarkper,2013-02-23T20:15:04Z,"![Screenshot from 2013-02-23 21:12:07](https://f.cloud.github.com/assets/750787/188554/5ffdfc30-7df5-11e2-8a04-abae4a25c4c1.png)

The Alt-Tab Quick Help screen is opened by pressing F1. Apart from describing the most useful commands, it gives quick access to Window Settings.
"
13997468,1737,pcworld,2013-02-23T20:51:21Z,"What about multi-row alt-tab if the alt-tab window exceeds screen width?
Like in good old GNOME2/Compiz:
![alt-tab of GNOME 2.32/Compiz](https://f.cloud.github.com/assets/1506734/188589/d3fca0ec-7df9-11e2-9605-9b201b790808.png)
Or is there already an option for this?
"
13998089,1737,autarkper,2013-02-23T21:23:14Z,"I'm afraid having a multi-row Alt-Tab would require even more changes under the hood, although it is certainly doable. 
"
14001615,1737,dalcde,2013-02-24T01:28:24Z,"Should Alt-Tab get its own settings page?
"
14004077,1737,autarkper,2013-02-24T05:58:55Z,"@dalcde:

Well, today maybe it would not make much sense, with only one setting, 
but if the number were to grow, I think so. The Window Settings page has 
grown quite large, and the Alt-Tab settings are not very easy to find. 
I'm afraid a lot of users are not aware that they can choose between 
different styles.
"
14004525,1737,dalcde,2013-02-24T06:52:23Z,"Two?
Anyway, does your thumbnail-show-behind-icon thing affect the icon+thumbnail option?
"
14004652,1737,autarkper,2013-02-24T07:08:27Z,"Two settings do not a separate settings page make. Maybe three, though.

Re the ""thumbnail-show-behind-icon thing"", yes it does, from yesterday (you have to have two windows of the same kind open to see it in action). As I wrote above I had initially enabled it only for icon+preview.
"
14005148,1737,dalcde,2013-02-24T08:05:52Z,"I prefer the old window preview. That makes three settings :)
"
14005898,1737,dalcde,2013-02-24T09:37:07Z,"And it would be nice if the thumbnail-behind-icon thing can be disabled :)
"
14006237,1737,glebihan,2013-02-24T10:12:42Z,"@autarkper : for the record, I did test the various features provided in this pull request, and not only the multi-ws thing.
My comment wasn't about the mutli-ws only, as I said, I feel like the other features make alt-tab more complicated than it should be, since we have other, more advanced tools for window management.

I know you put a lot of work into this, and, believe me, it's not a pleasure for me to close a pull request like this one.
But, I've mentioned it to you already, those are the kind of things that would be better discussed first, in order to avoid spending too much time on things that won't get implemented.
"
14007095,1737,autarkper,2013-02-24T11:31:28Z,"@glebihan: I would have appreciated if you hadn't summarily closed the 
request the way you did. As you already know, I know very well how close 
my own pull requests when I feel they are not wanted. ;-)
"
14007151,1737,autarkper,2013-02-24T11:36:23Z,"@dalcde: Seems I was right about initially selectively disabling the feature. I'm just starting to wonder, what do people use Alt-Tab for? I'm no longer sure it is for choosing which window to activate, maybe it is for admiring the beautiful icons. :)

Anyway, that would make it three settings for Alt-Tab, so now it could have  its separate Settings Page! It's all hypothetical of course.
"
14007290,1737,pcworld,2013-02-24T11:48:52Z,"@glebihan: Do e.g. the following changes make alt-tab really ""more complicated than it should be""?
- The window titles are now given more space in two rows
- Scroll icon list earlier when we are approaching the edge.
- In preview mode, show the application icon in the window's top-left corner.

And many features the user doesn't get to know about at all if he doesn't choose to look up - how do these features ""make alt-tab more complicated than it should be""?
- Ctrl+w in persistent mode (Ctrl+space) closes currently selected window.
- many other shortcuts
- ...
"
14017393,1737,dalcde,2013-02-24T22:14:20Z,"@autarkper With previews I don't really need the thumbnails. The thumbnails make those icons out of place.
"
14027902,1737,autarkper,2013-02-25T06:44:15Z,"@dalcde: I am greatly helped by the thumbnails when I have many terminals to choose from, all with the same icon and the same window title. That saves me the effort of having to select each icon and study its preview.
"
14279000,1737,autarkper,2013-03-01T09:12:09Z,"I'm still adding complexity:

commit c7b721a487ea56d8206432eeb80c24eb05aa353f
Author: autarkper github@autark.se
Date:   Fri Mar 1 07:37:24 2013 +0100

```
[Alt-tab] Icons belonging to other workspaces are sized smaller.
```

commit 520a61e9fd8faa030dcec6e2a1794eef85a6cc0d
Author: autarkper github@autark.se
Date:   Fri Mar 1 07:34:44 2013 +0100

```
[Alt-Tab] Individual sizing of each icon slot.
```

commit f8eb737f479cb8a382cce7b6bf0781f07ea66501
Author: autarkper github@autark.se
Date:   Thu Feb 28 21:48:50 2013 +0100

```
[Alt-tab] Adjust number of ""primary"" items.
```

commit 2c7d0c40c5be14c5b14c81abeae629b53e3352b2
Author: autarkper github@autark.se
Date:   Tue Feb 26 08:13:28 2013 +0100

```
[Alt-Tab] Clean up list of ""ignored"" windows.
```

commit bee43bab47df7435bda61a2242239dc40152efb9
Author: autarkper github@autark.se
Date:   Wed Feb 27 23:00:27 2013 +0100

```
[Alt-tab] Thumbnails mode: larger thumbnails, no title.
```

commit d8fbcf1f754138b1863fccdbf8f7285a1d07784e
Author: autarkper github@autark.se
Date:   Wed Feb 27 22:56:00 2013 +0100

```
[Alt-Tab] Remove some cruft.
```

commit ea1e6a9c81069b01df329abc8847caac7c816b48
Author: autarkper github@autark.se
Date:   Tue Feb 26 19:46:28 2013 +0100

```
[Alt-Tab] Small edit of quick help text.
```

commit ce79733477bea97f9f21a255ac69e25fdaf5cc87
Author: autarkper github@autark.se
Date:   Tue Feb 26 16:36:50 2013 +0100

```
[Alt-tab] Faster refresh.
```

commit f454dd1fda1b8065ed8d935b0ce6426e53ba62bc
Author: autarkper github@autark.se
Date:   Tue Feb 26 08:12:26 2013 +0100

```
[Alt-Tab] Tie the connector to the actor.
```

commit 3c1a672f507c6f84373e30883363b7f9a102fc6d
Author: autarkper github@autark.se
Date:   Mon Feb 25 22:42:21 2013 +0100

```
[Alt-tab] Shade ignored window icons.
```

commit 3f7ea1cea6420100e95f62887444640c6258759f
Author: autarkper github@autark.se
Date:   Sun Feb 24 07:14:30 2013 +0100

```
[Alt-tab] Fix a regression to the zoom function.
```

commit 85c69ba37b2df7859144389d7fad0ed14cfe7ed6
Author: autarkper github@autark.se
Date:   Sat Feb 23 20:39:16 2013 +0100

```
[Alt-tab] Update quick help.
```

commit 856e8abd918bb6b422dcafc80095285c426e36ca
Author: autarkper github@autark.se
Date:   Sat Feb 23 20:29:34 2013 +0100

```
[Alt-tab] Make the secret 'thumbnails' Alt-Tab style work again.
```

commit a7268758f74d24ce9b7b4517f083d1da4b53721c
Author: autarkper github@autark.se
Date:   Sat Feb 23 19:08:58 2013 +0100

```
[Alt-tab] Let windows-from-all-workspaces mode default to off, must be explicitly enabled.

You enable/disable it by pressing plus or minus, respectively.

The mode is now persisted through the current session, so it is remembered
between invocations, but not through a Cinnamon restart.
```

commit a346ac1f1b5bf28f697a83a099cd1c95188e5946
Author: autarkper github@autark.se
Date:   Sat Feb 23 18:40:13 2013 +0100

```
[Alt-tab] A more general way to remember which window is selected.
```

commit ea83371f0aeba12cad840d76a0026fc432c47693
Author: autarkper github@autark.se
Date:   Sat Feb 23 17:35:36 2013 +0100

```
[Alt-tab] Add new keyboard commands to set/unset windows-from-all-workspaces mode

+ (plus): set all-ws mode
- (minus): unset all-ws mode

Special care has been taken to retain the current selection when the list of icons
is refreshed.

Currently not persisted, only in effect until Alt-Tab is closed.
```

commit c61ae9630e7d31a81621691881b317405f9a5c37
Author: autarkper github@autark.se
Date:   Sat Feb 23 16:29:31 2013 +0100

```
[Alt-tab] Move cleanup duty from refresh to show.
```

commit dfb033a6b76db071506e8f1a5cd28b2f0f95a361
Author: autarkper github@autark.se
Date:   Sat Feb 23 16:05:02 2013 +0100

```
[Alt-Tab] Enable thumbnails-behind-icons-if-more-than-app-of-the-same-kind-is-open mode for 'thumbnails+icons' style
```
"
14344897,1737,autarkper,2013-03-03T10:33:51Z,"![Screenshot from 2013-03-03 11:29:59](https://f.cloud.github.com/assets/750787/214093/73c9a860-83ed-11e2-8bb7-ea849132a701.png)
In multi-workspace mode, icons from other workspaces are shown smaller than those from the active workspace.
"
14344981,1737,Lusito,2013-03-03T10:40:37Z,"How about displaying the workspace name under or above the icon ? (for those that are on a different workspace)
"
14345030,1737,autarkper,2013-03-03T10:44:58Z,"@Lusito wrote:

> How about displaying the workspace name under or above the icon ?

I'll look into that. I will have to find a solution that doesn't add to the visual clutter.

Update: Ideally I would like to display the workspace name only once for each non-nonactive workspace, centered between the separators. Unfortunately, I don't see how I could do that without introducing another level of nested containers. Now _that_ would make things really complicated, if the structure wasn't quite complicated already, even before I got started on this. Hopefully I'm wrong, though.
"
14345645,1737,gauravjuvekar,2013-03-03T11:39:25Z,"@autarkper What does the upward pointing triangle at the bottom of the selector(for geany in the screenshot above) indicate? Also, why does Software Update on the extreme right have firefox/thunderbird icons.
"
14346389,1737,autarkper,2013-03-03T12:46:32Z,"@gauravjuvekar : The triangle is just another indication of the selected state (it is the same triangle that in thumbnail mode is used to point to the thumbnail below, but inverted). The two Software Update windows are update-reminder nag screens belonging to Firefox and Thunderbird, respectively; the thumbnails behind them make them easy to distinguish from usable windows - I have put them on a remote workspace because if I close them they will soon come back to haunt me.
"
14350639,1737,gauravjuvekar,2013-03-03T17:28:01Z,"> just another indication of the selected state

Quite unnecessary IMO, the highlight background is more than enough. It appears odd because the thumbnails behind the icons are inside the highlighted field as opposed to the current thumbnails which are outside the field(and hence, the arrow looks somewhat good there).

That upward pointing arrow _feels_ like it is trying to show us something above the launcher.
"
14352643,1737,autarkper,2013-03-03T19:09:08Z,"@gauravjuvekar : I'm not totally convinced, but I have tentatively removed the upward-pointing arrows in preview mode anyway.

I'm thinking of using the upward-pointing arrow to point out the currently active window - the one you're coming from. I tend to forget that when I use the previews to see what's happening in different windows.
"
14368075,1737,gauravjuvekar,2013-03-04T08:09:03Z,">  the one you're coming from.

+1
"
14374907,1737,autarkper,2013-03-04T10:52:05Z,"![Screenshot from 2013-03-04 11:47:48](https://f.cloud.github.com/assets/750787/216219/14f3a210-84b9-11e2-8cb2-d19d0e9e623c.png)
OK, upward-pointing arrow now used to indicate the window where you're coming from. The feature is only enabled in multi-workspace mode and always disabled in thumbnail mode.

I actually managed to remove some complexity by creating arrows as needed and not pre-allocating all arrows, needed or not.
"
14379045,1737,dalcde,2013-03-04T12:44:11Z,"I don't see the need for this complication.

A bit confusing imo.
"
14380182,1737,gauravjuvekar,2013-03-04T13:17:45Z,"> I don't see the need for this complication.
> 
> A bit confusing imo.

Seems like we have a disagreement.

@autarkper Can you add this as a setting.
"
14380356,1737,gauravjuvekar,2013-03-04T13:22:51Z,"@autarkper Another idea for visual polish, no problem if you ignore this.

The arrow on the right (for icons that won't fit in the current view) is right on the edge of the (half-cut) icon behind it. Can you reduce the (half-cut) icon size by a further 2-3 pixels to separate that icon from the arrow?
"
14387114,1737,autarkper,2013-03-04T15:48:15Z,"About adding settings: I could certainly add settings to control various aspects of behavior, but I will not do this until I know that the pull request is going to be accepted. And you all know how far from likely that is. ;-) 
And frankly, this in particular is one setting that would be very difficult to explain. 

@dalcde : you only use one workspace, right? Then you will not see this arrow. (I will add code to disable the arrow if you only have one workspace).
"
14387563,1737,gauravjuvekar,2013-03-04T15:55:37Z,"> this in particular is one setting that would be very difficult to explain. 

[Checkbox] Show an indication of the currently selected window.

>  you only use one workspace, right?

Seriously?

> Then you will not see this arrow.

I would prefer that the arrow remains even if there is only one workspace-it's tiny, not that distracting.
"
14388291,1737,pcworld,2013-03-04T16:06:36Z,"> I would prefer that the arrow remains even if there is only one workspace-it's tiny

Agree.
"
14388951,1737,autarkper,2013-03-04T16:17:59Z,"![Screenshot from 2013-03-04 17:14:17](https://f.cloud.github.com/assets/750787/217322/9d127f4a-84e6-11e2-9b46-042d8ec5f8fc.png)
How about the ""upward-pointing arrow"" pointing down from above? Hopefully that would be less confusing and maybe a setting would not even be desired.

I'm not convinced about showing the indicator if you only have one workspace, since it will always be pointing at the first item.
"
14393211,1737,gauravjuvekar,2013-03-04T17:33:17Z,"> since it will always be pointing at the first item.

That never occurred to me. Agreed then.

> How about the ""upward-pointing arrow"" pointing down from above?

Not good as in the current screenshot, looks too cluttered IMHO.
For faenza icons as well as the previews, using it on the bottom would look cleaner.
(And since Linux Mint uses faenza by default, it would also improve the chances of this getting merged :grinning: )

People could also change the icon and make it look like as a underline/something else if they want to easily.
(Such as the source-button-border.svg running-indicator.svg dash-placeholder.svg in gnome shell.
See https://github.com/linuxmint/Cinnamon/tree/master/data/theme)
"
14394697,1737,autarkper,2013-03-04T18:01:31Z,"One big advantage with the indicator arrow on top is that is compatible with the arrow that points to the thumbnail in thumbnail mode; if they are both drawn below the icon, the thumbnail arrow has to be drawn below the switcher bar, unless I make more space.
"
14427675,1737,autarkper,2013-03-05T07:55:41Z,"![Screenshot from 2013-03-05 08:49:25](https://f.cloud.github.com/assets/750787/220371/48869758-8569-11e2-89e6-f8de550f1e89.png)
I have reverted to showing an upward-pointing arrow. I have also tweaked the arrow positioning, so that the arrow has a larger bottom margin - I hope you will agree that that looks slightly better.
"
14438163,1737,gauravjuvekar,2013-03-05T12:47:42Z,"+1
The right side arrow issue still stands though.
"
14444283,1737,autarkper,2013-03-05T15:06:43Z,"@gauravjuvekar : I've been trying to solve that visual glitch but I still don't know what's causing it. Too bad, if it weren't for that, everything would be perfect!
"
14451796,1737,gauravjuvekar,2013-03-05T17:07:30Z,"@autarkper I just thought of a simple and bad way to fix it. Just make the arrow icon bigger(transparency).
"
14458233,1737,autarkper,2013-03-05T18:59:30Z,"@gauravjuvekar : I think I found another work-around. I have a suspicion that there is something subtly wrong with the size allocations, but I can't just put my finger on it, so I just moved the right arrow slightly more to the right. I won't tire you with more screenshots, though.
"
14458780,1737,mdchaves,2013-03-05T19:09:07Z,"@autarkper, since this pull request is closed, is it possible to implement this feature as a Cinnamon extension? 
"
14462977,1737,autarkper,2013-03-05T20:24:01Z,"@mdchaves: I'll consider that, thanks for the idea!
"
14471912,1737,autarkper,2013-03-05T23:10:14Z,"Yes, it is possible to have this as an extension, but the extension versioning system is going to make it hard to maintain. It looks like I will have to update the version-compatibility metadata for every new development version (e.g., 1.7.1, 1.7.2, 1.7.3, and so on) that comes out, or just add a bunch of future versions on pure speculation. @Lusito: is that really how it is supposed to work?
"
14485734,1737,Lusito,2013-03-06T07:06:55Z,"I'm afraid there is currently no way around it.
extensions are essentially hacking themselves into cinnamon, so they expect some things to be there.
If that isn't the case anymore (like the keybinding api change in 1.4), the extension will break.
This will never change for pure extensions.
The only thing we can do to improve that is add an extension role for alt-tabbing which has a specified api that never changes.
But since other things like for example the panel system, the most basic layer (Main.uiGroup) or other stuff alt-tab depends on might change in future updates there is no way to avoid version checking even for alt-tab.

I guess you could ask @clefebvre to add support for the website to add other version numbers to an extension on the fly without having to reupload the file.
Then you'd only have to log in, click on ""add compatible version"" and be done with it. That is how firefox addons work.
Well firefox addons also have automatic compatibility checks, but I don't think it is worthwhile for us to spend that much time on an automatic check that isn't even 100% sure.

But keep in mind these compatibility breaks really aren't happening that often, so it's mostly a matter of testing and adding the version.
And usually you only need to add 1.x versions, not 1.x.x versions, since those minor versions usually are just bugfixes and updates, but not big changes in the inside of cinnamon.
"
14486488,1737,autarkper,2013-03-06T07:38:18Z,"@Lusito, thanks for your timely response. Things we could borrow from Firefox, IMO, are their notion of a range of compatible versions, and their use of wildcards. But then their API may be a bit more stable than ours, as demonstrated by recent events. ;-)

Anyway, I've set up a project for my Alt-Tab as an extension: https://github.com/autarkper/Cinnamon-Alt-Tab-Enhanced. It is fully usable from the start. Should work in versions 1.6.7 and above.
"
15656451,1737,autarkper,2013-03-29T19:23:00Z,"Sorry to bring this old thread briefly back to life. I would just like to mention that my ""Alt-Tab extension"" finally ended up as an applet, the first public version of which can now be downloaded from Cinnamon Spices, http://cinnamon-spices.linuxmint.com/applets/view/124.
"
12731790,1636,mtwebster,2013-01-26T06:25:42Z,"Minor problem I'm working on still is the OSD indicator for the monitor identification is always showing when you fire up cinnamon settings.
"
12732257,1636,Lusito,2013-01-26T07:36:47Z,"So, we have gnome control center forked and try to mix it with cinnamon-settings ?
I think we should choose one and port all other modules over to it.
Or do we want to keep gnome control center as unmodified as possible for upstream purposes ?

Sidenote: I like the idea of having groups and search filtering like in the control center.
"
12733438,1636,dalcde,2013-01-26T10:06:26Z,"From the description of Cinnamon Control Center, my understanding is that either one of Cinnamon Control Center and Cinnamon Settings is going to stay. Shouldn't this be loading from GNOME Control Center instead?
"
12735981,1636,mtwebster,2013-01-26T14:28:12Z,"We decided this was probably the simplest way - cinnamon-control-center is just going to provide some modules (that we don't want to have to deal with re-coding), that will load seamlessly in cinnamon-settings.
"
12741268,1636,sprintcowboy,2013-01-26T20:03:56Z,"mtwebster does the printer panel use system-config-printer 1.3.11 or the one from gnome system settings?
It would be nice if it used system config printer so you can actually config your printer not just add a printer. 
"
12741423,1636,mtwebster,2013-01-26T20:13:09Z,"Right now it uses the printer panel from gnome-c-c - that can potentially change though, as it's been tossed around a little bit - nothing is set in stone for now.
"
12745771,1636,mtwebster,2013-01-27T01:16:25Z,"Definitely room for some style improvement, but it breaks things up well enough.

![](http://i.imgur.com/rYS9Wkx.png)
"
12752661,1636,dalcde,2013-01-27T11:04:19Z,"It definitely can look better:)

So now cinnamon-control-center is just a library of modules that is not intended to be used by the end-user?
"
12753196,1636,pdcurtis,2013-01-27T12:02:14Z,"I have pulled this in (  git pull https://github.com/mtwebster/Cinnamon gnome-cc-integration) and it looks as if I have all 10 commits when I look with gitk but I am not seeing any of the settings from System Settings although all the framework and other icons look as above ie I am missing the last three in above image from User Preferences and System Settings is empty. Is that a problem or should I be pulling something else in?

Cinnamon is running over Lubuntu 12.04, I have fetched merged upstream/master and 'nightlies' are in use so I thought I had everything in place and some other 'pulls' have worked but I have to admit I am only just starting to get to grips with GIT so any hints welcome.
"
12755643,1636,mtwebster,2013-01-27T15:25:38Z,"Yes - cinnamon-c-c will, in the end, just supply modules for cinnamon-settings.  For now it's (more or less) fully functional to help developing.  I think we'll just be able to provide the -data .deb and that will give all we need.

@pdcurtis you need to install cinnamon-control-center (new package on git) for them to show up
"
12756975,1636,pdcurtis,2013-01-27T16:45:26Z,"@mtwebster Thanks, found it, will cinnamon-control-center end up in nightly repository in due course - otherwise it looks too big a learning curve for me at present to fork, compile etc!
"
12759132,1636,mtwebster,2013-01-27T18:58:17Z,"Ok a little better :)

![](http://i.imgur.com/e4fcRRO.png)
"
12761358,1636,askuhn,2013-01-27T20:54:54Z,"sprintcowboy said:

> does the printer panel use system-config-printer 1.3.11 or the one from gnome system settings?
> It would be nice if it used system config printer so you can actually config your printer not just add a printer. 

I also hope to see system-config-printer used rather than the gnome-c-c panel.  There is quite a bit of functionality missing that even less experienced users probably need access to.

Something else just occurred to me: If Cinnamon Settings can now control things outside of Cinnamon itself, would it make sense to change the title of the application to something more generic when the cinnamon-control-center package is installed?

For example:

**Scenario:** Cinnamon installed via PPA/etc
**Result:** Cinnamon Settings remains a separate configuration utility titled  ""Cinnamon Settings"" (the way it is in current stable) without the additions provided by cinnamon-control-center.  The cinnamon-control-center package is available, but not installed by default.
**Reasoning:** If the user is capable of installing Cinnamon from a PPA, then they know what ""Cinnamon"" is and why they need settings for it.  It will also leave the configuration utility they are accustomed to untouched.

**Scenario:** Linux Mint Install
**Result:** One unified settings utility with a generic title such as ""Control Center"" (or similar).  The cinnamon-control-center package is installed.
**Reasoning:** A fresh user to a Linux Mint Desktop may not know that the environment they are using is called ""Cinnamon.""  Exposing specific names to them that don't obviously imply what they refer to could be a source of confusion.

Aside from those two ideas, it seems to be coming along nicely.  Great work as always @mtwebster :)
"
12763257,1636,pdcurtis,2013-01-27T22:40:12Z,"I am a user who has installed from PPAs on all my machines and I much prefer the new approach and am quite happy to drop the old configuration utility and will probably remove it from the menu once the new integrated settings is up and running. Perhaps calling it Integrated Settings could be a satisfactory compromise. 

Is it planned to cover 'Additional Drivers'?

I echo the great work as always @mtwebster
"
12767232,1636,gauravjuvekar,2013-01-28T03:12:15Z,"How about we keep the search bar from system settings.(gnome-control-center)
"
12767917,1636,mtwebster,2013-01-28T03:59:42Z,"Added support for standalone apps (firewall, language installer, etc..) to be displayed in cinnamon settings.  In the future, maybe they could be 'automagically' added via .desktop files (similar to how gnome-c-c handles it currently) but for the moment they're static entries that first check if the program is installed before adding it to the panel.

I agree maybe the name or at least the presented name could be changed depending on distro, but that's something to be discussed yet.  For the immediate moment we wanted something independent of the Gnome development cycle that we controlled.
"
12772880,1636,bimsebasse,2013-01-28T08:53:46Z,"Yay, it's happening :o) 

The first screenshot was better looking than the wall of grey second one, better separation between sections, easier on the eyes.

Categories are ripe in grey areas and it's gonna hollow out the Look and Feel section - but Applets and Extensions (and possibly Desklets) belong just as much in the User Preferences section as Panel and Workspaces, and more so than Fonts. Hmm, I spent ten minutes trying to come up with better categories and got nothing, so nevermind, really :o)
"
12773162,1636,Lusito,2013-01-28T09:04:09Z,"Agreed on the wall of grey bit.
Good to see that scrolling works, it could be bad on Netbooks or other small screen devices if scrolling was not supported.
Just missing the search bar.
"
12773815,1636,Lusito,2013-01-28T09:24:37Z,"Here's my thought on the sections (unordered):

### Desktop Environment:

desktop ( +backgrounds )
hot corner
panel
workspaces
Cinnamon ( general )
windows
fonts
effects

### Spices:

applets
desklets
extensions
themes
menu

### Hardware:

mouse & touchpad
displays
keyboard
network
bluetooth
printer
power
sound
Color

### Misc:

brightness & lock
region & language
calendar ( +date & time )
universal access

### System:

user accounts
details
software sources
update manager settings
firewall
login window
"
12773995,1636,bimsebasse,2013-01-28T09:30:23Z,"A hardware category is a good idea, everyone knows what it is and what to look for in it, and there's not much of a grey area issue with it. Don't think a Spices category works, though.
"
12774206,1636,Lusito,2013-01-28T09:36:30Z,"the only other place where you could put those items would be desktop environment, but if we're not careful that category will be blown out of proportions.
Maybe we could put extensions, applets and desklets into one, since they are basically all extensions ?
"
12775136,1636,dalcde,2013-01-28T10:03:16Z,"Add-ons for spices?
"
12775902,1636,bimsebasse,2013-01-28T10:27:31Z,"Quite a few applets come with Cinnamon by default and wouldn't fit in an ""extras/add-ons"" category. I think the categories need fine tuning more than reinvention :o)

APPEARANCE
Themes
Backgrounds
Effects
Fonts

PREFERENCES
Applets
Extensions
Desklets
Calendar
General
Hot Corner
Menu
Panel
Screensaver
Windows
Workspaces
Region & lang.
Universal Access
User Accounts

HARDWARE
Mouse & Touchpad
Displays
Keyboard
Network
Bluetooth
Printer
Power/battery
Sound
Networking
Details

...ish
"
12783610,1636,pdcurtis,2013-01-28T14:22:31Z,"Am I correct that the new cinnamon-control-center itself has dependencies so that it will only build on 12.10 / nadia and higher and was that deliberate?
"
12783802,1636,mtwebster,2013-01-28T14:26:46Z,"@pdcurtis I honestly haven't looked into dependencies too much - focused on development so far.  I can have a look-see about whether the dependencies can be altered so it can be backported
"
12785220,1636,pdcurtis,2013-01-28T14:57:01Z,"@mtwebster Please do not waste time on my behalf - it was about others using LTS versions. I can always update one of my machines if I really want to follow your work and it is largely a learning exercise until I can reach the point where I can contribute
"
12789507,1636,mtwebster,2013-01-28T16:17:49Z,"Just my personal opinion - I think more than 3 categories is too many - I'm open to what those 3 categories should be, and what they should contain, but more than that and I think you get too complicated.
"
12802968,1636,askuhn,2013-01-28T20:34:24Z,"I think Lusito and bimsebasse's idea to have one of the categories be ""Hardware"" makes a lot of sense.  Breaking up what is left after filling the hardware section is a bit more tricky, though.

The name gnome devs gave to the ""Details"" panel also seems a bit cryptic.  That doesn't imply to me that I can change my default programs and removable media options there.  I'm not really sure how one would remedy that (or if its just me ;)
"
12805481,1636,mtwebster,2013-01-28T21:21:18Z,"I've already renamed the Details panel to ""System Info & Default Programs""  maybe too wordy, but definitely more appropriate
"
12808833,1636,bimsebasse,2013-01-28T22:22:34Z,"""Default Programs"" seems just about the most obvious inclusion in a section called ""(User) Preferences"" of all. I don't think the Gnome devs put too much thought into where they put what and there's probably no good reason to pay too much respect to their categorization and inherit its shortcomings.
"
12814436,1636,Lusito,2013-01-29T00:46:53Z,"yeah, default programs seems like something you'd either have in a separate item or at least together with a more fitting item, like general.
"
12820243,1636,mtwebster,2013-01-29T04:39:24Z,"Refactored code, making it easier to add or change categories later.

Added an instant search feature, which filters on the displayed name as well as keywords associated with each module.  The keywords can be translated as well (needs testing) - and they can probably be added to, I just threw in stuff off the top of my head.

Obviously the overall look could still use work, but hey I sorta like the wall of grey!

![](http://i.imgur.com/y0mYXwJ.png)
"
12820300,1636,mtwebster,2013-01-29T04:43:05Z,"As you can see, it hides categories that are empty when you're doing a search:

I'm not sure how much I like the fact that it expands the remaining categories to fill available space - I'm still playing with it.

![](http://i.imgur.com/rjdyueY.png)
"
12835633,1636,bimsebasse,2013-01-29T14:02:59Z,"Better categories now but I don't get what is Look and Feel about e.g. adding a num-lock applet, and how it's different from e.g. adding a panel or changing the look of your alt-tab or expo through items in User Preferences. Aren't those last three _more_ lookandfeelish, if anything?

Category placement shouldn't be motivated by ""well, if moved to a more fitting category it will leave the current category sort of empty"" :o)

Applets, Extensions and (to a lesser degree maybe) Desklets sets how you _use_ Cinnamon, like pretty much everything in User Preferences. Themes, fonts, effects and Backgrounds sets how cinnamon _looks_.
"
12836389,1636,mtwebster,2013-01-29T14:20:23Z,"I'm not saying my categories or placement is right :)  But you ask 10 people we'll get 10 opinions.

Someone set up a website where we can all vote on categories
"
12836752,1636,bimsebasse,2013-01-29T14:28:44Z,"Tyranny always works best in these cases :o)

Anyway, I'll promise to stop bitching about it - it's great that the process is underway - and fedora/ubuntu/mint users generally don't seem annoyed by how random the categories are in gnome-control-center, so it's probably not very important anyway. 
"
12856797,1636,askuhn,2013-01-29T20:43:29Z,"Just from looking at the screenshot that mtwebster posted (thanks), the system settings category seems unnecessary.  I could see moving...
Default Programs, User Accounts, Firewall, Languages --> User Preferences
Power Management --> Hardware
& also
Fonts --> Look & Feel
maybe...?

One more thing (sorry if I'm rambling too much, feel free to shut me up)...
It's probably too early in development to ask this, but how firmly are the current settings panels locked in?  Is the plan to try to stay close to ""upstream""...?  I ask because it might also be possible to combine some of the panels together.  For example, maybe ""Desktop"" and ""Background"" could be combined or the options from ""General"" could be placed in other panels (like middle click emulation --> mouse panel).

I'm not sure about any of this or how to implement it, just sharing some ideas.  :)
"
12870430,1636,Brahimsalem,2013-01-30T02:13:00Z,"I think you should add: 
1- ""sound"" : to configure system sounds
2- ""Janitor"" for cleanup
3- ""Love HD Wallpaper"" to load  backgrounds online 
I think that's all we need from Ubuntu Tweak 
"
12871461,1636,mtwebster,2013-01-30T02:50:46Z,"The latest:

I think I'm just about satisfied except for  getting the categories background to match the rest of the panel seamlessly.

![](http://i.imgur.com/0sifkSe.png)
"
12871493,1636,mtwebster,2013-01-30T02:51:45Z,"I redid categories per a suggestion, just to see:

![](http://i.imgur.com/LoM5QEj.png)
"
12871549,1636,mtwebster,2013-01-30T02:53:23Z,"Here's how it looks with breadcrumbs, navigating into a panel:

![](http://i.imgur.com/Z778Qnk.png)
"
12872586,1636,askuhn,2013-01-30T03:31:59Z,"@mtwebster :)
"
12873061,1636,Lusito,2013-01-30T03:53:21Z,"Don't think we need the close button, do we ?
Except for a few small details the categories look fine to me:
- Keyboard layout should be moved to Keyboard
- Default programs and removable media should be separate from system information.
  - Put them together with startup applications into ""Startup Applications & Media Types""
- Screensaver & Brightness should be names Brightness & Lock imho. Screensaver is not so fitting, since it's not the classical screensaver we know (moving text, images, mazes, etc.), but more about locking the screen.
- Display should be Displays
- Networking should be Network imho
- Still missing:
  - Color (Hardware)
  - Software Sources (Prefs)
  - Update Manager (Prefs)
  - Login Window (Prefs)

Now this is just my personal opinion, but I'd still have another category for these items, since it's not about user preferences:
- Software Sources
- Update Manager
- Region & Languages
- Firewall
- System Information
- User Accounts
"
12873599,1636,mtwebster,2013-01-30T04:19:12Z,"Was messing around, here's a bit different look: 

![](http://i.imgur.com/U7dbTIs.png)

I actually kind of like it
"
12882608,1636,dalcde,2013-01-30T10:08:38Z,"I'd prefer the grey.
"
12918145,1636,MiY4Gi,2013-01-30T23:11:58Z,"Yeah, I also prefer the grey. I guess it's easier on the eyes.
"
12919799,1636,mtwebster,2013-01-30T23:56:43Z,"Added an ""advanced mode"" selector - will hide entire panels and individual settings from less advanced users:

It is selected via a popup menu when you click the gear in the upper right corner:
![](http://i.imgur.com/45yBrLj.png)

That is advanced mode, here is ""Normal""
![](http://i.imgur.com/uGUkL5W.png)

Panel settings in Normal mode:
![](http://i.imgur.com/qdxqJLL.png)

Panel settings in Advanced mode:
![](http://i.imgur.com/pIfzWLJ.png)

Toggle between modes can be made at any time, doesn't require reload or anything, just redraws the page you're on to show or hide appropriate settings.
"
12925167,1636,mtwebster,2013-01-31T02:49:09Z,"Changed hover tooltip to show up in the lower toolbar when the mouse is over an entry:

![](http://i.imgur.com/TpJl2x3.png)
"
12971163,1636,corbin-auriti,2013-01-31T22:58:26Z,"I should think the bread crumbs should look like Nemo's Bread crumbs?
"
12976365,1636,mtwebster,2013-02-01T01:33:13Z,"Fixed background page, you can actually appreciate them now :)

![](http://i.imgur.com/vxCoJLu.png)
"
17447473,1966,gauravjuvekar,2013-05-05T06:34:39Z,"Wouldn't using the current date and time be better in the settings?
"
17447568,1966,dalcde,2013-05-05T06:45:26Z,"Using the current date and time can cause ambiguous situations, e.g. when it is 12th December 2012, 12:12:12
"
17447923,1966,glebihan,2013-05-05T07:30:51Z,"Personally, I'm not convinced this would be really better then the current solution.
But, more than that, you seem to have forgotten about something that will make this close to impossible to achieve : localization. Not everyone's system is in English.
"
17448535,1966,dalcde,2013-05-05T08:31:15Z,"Localized.

RE whether it would be easier, I'd say yes. At least I don't need fire up documentation to set my time format now (I know there is a link, but who actually clicks it anyway?)

There was once a bug report (or maybe an idea on community.linuxmint, forgot) about it being hard to change the date/time format.
"
17449719,1966,gauravjuvekar,2013-05-05T10:22:07Z,"> e.g. when it is 12th December 2012, 12:12:12

On that note, can you change the date from 6th April to 13-30 april? Even less ambiguous between 4-6-97 and 6-4-97
"
17449742,1966,dalcde,2013-05-05T10:25:28Z,"That's what I originally wanted to do. But I wanted to give the option for people to display 06 vs 6
"
17451442,1966,gauravjuvekar,2013-05-05T13:04:07Z,"> That's what I originally wanted to do. But I wanted to give the option for people to display 06 vs 6

Oh ok, one final idea-make the year 2013, 1997 sounds too outdated :)
"
17463302,1966,bimsebasse,2013-05-06T01:33:47Z,"Definitely an improvement.
"
18636636,1966,AlbertJP,2013-05-29T18:31:23Z,"Please rebase this pull request.
"
18856624,1966,AlbertJP,2013-06-03T17:22:44Z,"What I'd like to see, and have mentioned a few times before in #linuxmint-dev, is automatically getting the right date format from the locale. That's not included in your ""locale support"" yet, isn't it?
"
18876170,1966,dalcde,2013-06-03T22:08:26Z,"Unless we have a database for the right date format for each locale, we can't do that. (The format used by new Date().toLocaleString() is not what we want)
"
21783788,1966,mathrick,2013-07-30T11:09:03Z,"The whole UI should be thrown away and redone, because it's completely wrong. We shouldn't even be asking the user for a `strftime()` string, and default to the locale settings. GNOME's capplet is approximately right in this regard:

![GNOME control centre date settings](https://f.cloud.github.com/assets/179487/877768/fd88d8cc-f8fb-11e2-8c4c-5abc01acf978.png)

Graphical time zone preview and selection is important. What we should do is to add the ability to override the defaults in specific (carefully chosen) places **_if the user explicitly chooses to do so_.**

A quick shot at the UI (by no means final):

![Date & time format mockup](https://f.cloud.github.com/assets/179487/878176/618cd808-f908-11e2-9027-3f77d1cdee88.png)
"
21784638,1966,dalcde,2013-07-30T11:30:21Z,"As I said in the other issue, there is no one format for each locale. For starters, why should we default to ""Jul"" and not ""July""? Requiring users to use ""custom"" for even these tiny preferences seems to defeat the purpose. And each area (locale) can have boatloads of possible combinations (e.g. I might not want to show the day of week). If we give a very long list of possible combinations, it would be worse than having them input directly. 

To be honest, your way does have its benefits (simplicity, provided we don't have meticulous users), but there would be difficulties in implementation (i.e. deciding what to get in the list and coming up with a list for each locale) as well as lack of configurability. I'm just trying to define my position here, but I will have to think REALLY hard to decide which is better, and valuable input from other developers and people will also help much.

And I agree that the timezone thing needs to be fixed, but it is not in the scope of this pull request. 
"
21785477,1966,mtwebster,2013-07-30T11:50:18Z,"I was thinking about this the other day... was envisioning something like:

Global default:
      - Sane default 1 (iso blah blah)
      - Sane default 2
      - Custom

Calendar applet:
     - Use global setting
     - Custom

Screensaver:
     - Use global setting
     - Custom

Nemo (?):
     - Use global setting
     - Custom

I'm not sure MDM should be included in a per-user configuration - as it affects all users.

Just my 2 cents
"
21786162,1966,dalcde,2013-07-30T12:06:01Z,"@mtwebster the calendar applet would need two settings.

For the ""Sane default 2"", we can use something from python's datetime object (http://stackoverflow.com/questions/3280818/format-date-based-on-locale-in-python)

And for ""custom"", we would be using the input method from this pull request, right?

With the technical details done, I've got a feeling that this won't be a significant improvement except for the ""one global setting for all items"" thing. Maybe we can give more ""sane defaults""as suggested in the mockup above (""Date and Time, Long""), and allow other settings to choose the other defaults, so we have something like

Global default:
- Sane default 1
- Sane default 2
  ...
- Sane default n
- Custom

Screensaver:
- Global default
- Sane defaults 1 to n
- Custom
"
21786277,1966,mathrick,2013-07-30T12:08:51Z,"@dalcde there are customary formats for locales, and the thing is, most users _don't care_. That's the important part. The other important part is that defaulting to a `strftime()` string means we always do the wrong thing for most locales unless the user overrides it, because a custom string won't get updated to match the locale. `LC_TIME` gives us the default notation for time we should be using, and it's what works for almost everybody unless they specifically want to override it, _and it updates to match the locale_. In case it wasn't obvious, ""Custom..."" is where you can input a `strftime()` string if none of the options suit you. But it should be an opt-in thing.

@mtwebster raw `strftime()` or parse from this pull request, yeah. Whichever actually works best in practice, which might be different for it as fallback for power users than when it's the only UI for everyone.
"
21786513,1966,mathrick,2013-07-30T12:14:23Z,"re: nemo, it doesn't display time enough to have its own setting. Whatever it is, it should not have a setting unless having one is absolutely crucial for a large part of users. The date and time display for panel clock is the central element of it, and there is a small but important minority of users who might conceivably want to touch it. Time format for nemo is so obscure that adding it will make the UI strictly worse for everyone.
"
21788749,1966,dalcde,2013-07-30T12:59:11Z,"You might be right that most users don't care about the details, but we still need a range of options, so that we can choose the ones we're most comfortable with (e.g., Tue 30 Jul looks horrible to me. Tuesday, July 30th is much better)
"
21789640,1966,mathrick,2013-07-30T13:14:26Z,"Sure, that just means we need to pick a right balance between the number of options and the simplicity. The locale already defines short and long formats and their order (even though you claim anything goes in HK, it clearly isn't so). The important part of predefined options is that we can update them to match local conventions, and almost nobody should ever need ""custom"".
"
21792412,1966,dalcde,2013-07-30T13:58:02Z,"I guess no one here objects the idea of options, so the problem is about the list of options. I guess we can ""guess"" according to locale, and then make a ""more options"" that gives a complete list of all likely combinations, then custom.
"
21828444,1966,dalcde,2013-07-30T22:39:08Z,"After a night of thinking I think the problem we are having here is that even though each locale may specify an ORDER, e.g. day-month-year, there is no specific requirement of how they should be represented, e.g. as words or numbers, and sometimes the requirement is not strict, especially when written with only numbers.
"
21831520,1966,mathrick,2013-07-30T23:51:51Z,"> there is no specific requirement of how they should be represented

Yes, there is. For the majority of locales the range of acceptable presentations is very narrow, and it's always possible to define a representation that's definitely correct. For a good deal of them, such a representation will also be either uniquely correct, or very close to.

You are really solving a problem that just isn't there. `LC_TIME` gives us, at the very least, two acceptable formats that can be given meaningful names (short date and long date) in the UI, and which will not be wrong no matter the locale. They can be easily grasped and switched between, and the common case is that users won't even know or care that we have date & time settings UI. This is strictly better than what we have now, which is a hardcoded format that won't update to reflect a change in the locale, is almost always wrong according to user's local conventions, lets us present no useful UI whatsoever, is impossible to grasp for 99% of our users (including most technical ones), and in case the default is wrong (which, as I said, it probably is), leaves them with no practical recourse and a lot of confusion. No matter how narrow the array of choices, it's still infinitely more useful than what we have now, and if everything else fails, custom string is still there.

For a more practical consideration, I think the following choices would be reasonable to present:
- **_Default**_ -- Locale-dependent, either long or short, depending on the location
- **_Long**_ -- Locale-dependent, long
- **_Short**_ -- Locale-dependent, short
- **_International**_ -- ISO standard date, fixed
- **_Custom**_ -- Fall back to any `strftime` string, possibly with the parse-based UI from this request

This is a list we can always get from the OS locale definitions, while at the same time giving users the important choices (long vs. short, local vs. ISO) without overwhelming them. We cannot, and should not, try to please everyone. If you really need to control it fully, use the custom string.

Updated mockup:

![Date & time format settings, mockup 2](https://f.cloud.github.com/assets/179487/882955/6116d1ae-f970-11e2-83e4-3fb57d59458c.png)

If you want to play with it, [here](https://gist.github.com/mathrick/6118061) is the UI builder file.
"
21867741,1966,dalcde,2013-07-31T14:43:04Z," What if I want to (not) show the time/year? And placement of the day (e.g. Tuesday)? Whether it is before the date, after, or not shown at all seems arbitrary. Some might prefer showing numbers instead of words.

I guess we do need more options (some in the form of toggle buttons, e.g. year/week). It will take time to come up with a reasonable list of options that is neither too overwhelming nor narrow (yours is too narrow IMO). I guess it's better to discuss it sometime at the irc instead of here (@clem?).

Lastly, I think before presenting the ""custom"" button, we can have a ""more options"" button than gives a long list of options.
"
21876846,1966,mathrick,2013-07-31T16:41:44Z,"> What if I want to (not) show the time/year? And placement of the day (e.g. Tuesday)? Whether it is before the date, after, or not shown at all seems arbitrary. Some might prefer showing numbers instead of words.

Then you're in 0.01% of users who want that and we can't have an option for every possible 0.01%, as that'd give us 10000 options. It's useless to ask ""what if I want X"" or what ""some might"" (you'd do well to read on [weasel words](http://en.wikipedia.org/wiki/Wikipedia:Weasel_words)) want to do. What matters is whether people actually do it commonly. What if I want the text to be rainbow coloured? What if I want it to be upside down on even days of the week? Do we implement options to do that just because I can imagine doing such a thing?

Options are _not_ good. They are a necessary evil. Havoc Pennigton [explained that](http://ometer.com/free-software-ui.html) (scroll down to ""Question of preferences"" if you don't want to read the whole thing) back when GNOME 2 was released (and everyone was up in arms that it didn't have ""enough options""). [The ideal number of options is 0](http://blogs.kde.org/2004/10/26/choices-configurability-easy-understand-parables) and an application that always does exactly what I want it to without me needing to tell it to. Every time you introduce a new option, that option has a cost for us, and a cost for the user. And it's not a trivial cost.

The perfect UI for us would be to have no date format settings at all, and just do exactly what the user expects. But we can't do that, unfortunately, so we have to aim for the next best thing: have as few options as possible. 24-hour vs AM/PM we can't really avoid (although we should default to the right thing from the locale, as the US is the only country insane enough to use AM/PM on digital clocks, same as only US is insane enough to use MM/DD/YYYY order). International vs. local we can't really avoid. Short vs. long and removing date would ideally be unnecessary, but they're options that are simple to grasp, provided to us by LC_TIME (so we can have sensible defaults), and are important for space saving on crowded panels, so they have a lot of value when needed. But that's it. 

We _cannot_ start adding different orders now, because that's already handled by locale, and if we change that, we will break it for users who don't want to configure it, just as it's broken in the current UI. You know who uses order other than dd.mm.yyyy in Poland? Exactly nobody. And yet, even though the OS ships with locale definitions that specify exactly what the correct format is, my panel is showing it wrong because Cinnamon expects me to go and configure it by hand rather than picking the only correct option it already has access to. And you want to go back to that state and continue requiring every single user to configure their clock and wade through bazillion useless formats searching for the single one that makes sense even though they don't want to because a clock should and can just work, just because ""some might"" want it not to. Well if ""some"" want it to be broken, then ""some"" might pick custom and specify whatever broken format they wish without making everyone else miserable.

Now can we please stop solving imaginary problems and start solving real ones, like the fact that Cinnamon bloody requires me to configure my clock even though it knows damn well what format is used where I live?
"
21877002,1966,gauravjuvekar,2013-07-31T16:43:50Z,"How about we give presets and common buttons like the ones at http://www.foragoodstrftime.com/ (click on build your own). The buttons can be pressed to add the respective strings to the current textbox. We could also have a live preview sample below the box.
"
21877663,1966,mathrick,2013-07-31T16:53:16Z,"Why? Why would I want to do that? There is already a well-defined correct format to show, and it's shipped in the locale. Use that. **I don't want to configure my clock. Nobody does.** Stop making me pick the time format, there's exactly one correct choice where I live, as is the case for almost all places in the world, so just pick that already.
"
21907845,1966,dalcde,2013-08-01T01:09:44Z,"> there's exactly one correct choice where I live, as is the case for almost all places in the world

I seriously doubt that. (I feel like repeating myself here) No doubt there is often one correct order for each locale, but everything else is often up to personal preferences. At the end of the day, there is no such thing as a ""correct"" format. Just a preferred one.
"
21908043,1966,dalcde,2013-08-01T01:15:48Z,"> We cannot start adding different orders now, because that's already handled by locale, and if we change that, we will break it for users who don't want to configure it, just as it's broken in the current UI. You know who uses order other than dd.mm.yyyy in Poland? Exactly nobody.

Why would it break anything? We are just giving options which, as I suggested, would be hidden unless the user asks for more options, which we should give. And the locale often does not supply ALL orders. We can have time before date, or the other way round. Similarly, day of week before and after date are often allowed according to locale conventions (in HK the government is not even consistent with itself on this issue).

I still believe we should discuss on IRC (I'm not there recently so I apologize If it is already discussed)
"
21913983,1966,gauravjuvekar,2013-08-01T04:31:43Z,"> I don't want to configure my clock. Nobody does.

I do.

The locale choice should be the default one but anyone should be able to use any other format that they want. I prefer 24-hr but I doubt any locales have it as a default.
"
21963723,1966,JosephMcc,2013-08-01T19:34:19Z,"You can count me in 0.01% who likes to configure my clock the way I want as well. It seems to me like it would be best to add a few presets for the more common options and leave the ability to customize it like it is now for the people who want to. 
"
21964327,1966,ManIVIctorious,2013-08-01T19:43:43Z,"You can count me too
"
21979516,1966,mathrick,2013-08-02T00:26:49Z,"> Why would it break anything? We are just giving options which, as I suggested, would be hidden unless the user asks for more options, which we should give.

Except that this has to be expressed somehow. Which is yet another option, so now we have almost half the dropdown dedicated to tinkering which accounts for 1% of users at best (I'm sorry to break it to you, but _none_ of you here is in any way representative of how things actually get used). It also needs to be coded, which takes time and effort. Then that code needs to be tested, maintained and fixed. Because it strays away from the `LC_TIME`-given formats, we need to decide how to express the order in a way that only partially overrides the locale. That again takes time, effort, testing and maintenance. All for a feature nobody actually uses, and sacrificing the UI for ones that might legitimately be needed, but now will be twice as hard to locate, because you want to pollute it with 50% junk. Actually more than that, because now people will also need to understand the difference between predefined formats, custom and ""long list of options"". Some will check that list out just to understand what it is, and will get confused, meaning they won't be able to use the other options either. [Code is not free](http://ometer.com/features.html). And [UI is not free](http://web.archive.org/web/20100108100106/http://developer.gnome.org/projects/gup/ut1_report/customization_tasks.html).

And my proposal already gives more options. Infinitely many of them, in fact. It's called ""Custom..."".

> I do.

No you don't. You want it to show the time in the correct format, which is the exact opposite of wanting to configure it. Nobody goes ""Aw shucks, I was hoping to configure the clock applet but it already shows the time correctly"" (and if you do, there are some great indie games on Steam and Desura for less than 3 bucks).

> I prefer 24-hr but I doubt any locales have it as a default.

Most locales other than `en_US` do. That's one thing. There's already a widget there to override it, which you'd know if you actually looked at the mockup. That's another.

If you consistently find locale-specific things to be formatted incorrectly, you have set up your region wrong. Clock applet is not the appropriate place to fix that, the region and language settings panel is. If you have super-specific needs that aren't captured by long/short/international, then no amount of UI will make sure that your needs will definitely be served, and you ought to use custom. We already link to that `strftime`-generating website, and we can continue doing so. They already have a million options for you to choose from. Spending time and manpower on reimplementing that and thus making the UI worse for everyone who doesn't need it (which is the vast, vast majority, including me and most ""power users"") is plain stupid.
"
21985671,1966,dalcde,2013-08-02T04:18:49Z,"> Except that this has to be expressed somehow. Which is yet another option, so now we have almost half the dropdown dedicated to tinkering which accounts for 1% of users at best.

Half? We have, say, 4 options from default, long, short, international, and one ""more"" (which reveals custom), so the amount of the dropdown menu ""dedicated to tinkering which accounts for 1% of users at best"" as you claimed is the same as your suggestion (5%).

> I'm sorry to break it to you, but none of you here is in any way representative of how things actually get used

Neither are you. Unless we have a poll or something like that, you can't be sure. And in case you didn't notice, everyone but you here wants to configure the clock

> Actually more than that, because now people will also need to understand the difference between predefined formats, custom and ""long list of options"".

They don't, because to them there should be no difference (except for custom, which is obvious). I'm envisioning something like

Long                          Friday, August 2
International              2013-08-02
YY-MM-DD              13-08-02

which is clear enough and people don't have to understand the underlying logic.

> Because it strays away from the LC_TIME-given formats, we need to decide how to express the order in a way that only partially overrides the locale.

We don't. It fully overrides it with an strftime string.

> No you don't. You want it to show the time in the correct format, which is the exact opposite of wanting to configure it. Nobody goes ""Aw shucks, I was hoping to configure the clock applet but it already shows the time correctly"" (and if you do, there are some great indie games on Steam and Desura for less than 3 bucks).
> If you consistently find locale-specific things to be formatted incorrectly, you have set up your region wrong

I've said this a million times. There is no correct or incorrect format. The LC_TIME is what is ""generally"" used by people (i.e. the order of the stuff), but EVERYBODY IS DIFFERENT, and we have our own preferences.

As a sidenote, I believe that even if you select long/short, the format should be stored as strftime such that it does not change if someone (for some random reason) changes locale.
"
22047214,1966,dalcde,2013-08-03T02:50:19Z,"It now looks like this:
![screenshot from 2013-08-03 10 46 24](https://f.cloud.github.com/assets/1336336/904939/6d587d2c-fbe7-11e2-9b63-a33a96882c87.png)
"
22047412,1966,gauravjuvekar,2013-08-03T03:06:34Z,"@dalcde What's the difference between the panel and the date(calendar right) applet?
"
22047998,1966,dalcde,2013-08-03T03:57:29Z,"date applet means the popup menu.
"
23206912,1966,JosephMcc,2013-08-24T11:00:04Z,"Is it possible to add the ability to set the time format for cinnamon-screensaver as well?
"
23659430,1966,VolMi,2013-09-02T13:11:44Z,"Count me as one who does not want to configure his clock but instead expects the time format to adhere to a national standard which is used by almost everyone and exclusively used in formal correspondence.

In Germany, there is
**21.04.2013**
and
**21. April 2013**
with the latter one eventually prefixed by the day of the week.

Most (all?) of our neighbour contries have similar binding rules.

If there is already an existing information on any localized Mint installation about how to present the date, I'd say _Use it, goddammit!_ and then show a single button for more formating options.

Regarding _right_ / _wrong_:
We could also write the date like _The 6th day of the current 7-tupel of days, residing at the thirteenth position of a broader 30-tupel of 24-hour-timeslots which is often referred to as ""April""_, but why the hell do languages have common rules?
Just to make it clear: The typical US-way to write dates and time is really considered absolutely plain wrong, here.
"
25929842,1966,clefebvre,2013-10-08T21:36:47Z,"Moved to 2.2.

The way formats are selected looks really cool. I found issues with it when testing it in French, but once it's debugged it should work really well for users. 

My main gripe is using gsettings and how default formats are handled. I've done the work on this today for 2.0 and migrated to the settings API. 

I'd suggest to rebase this pull request and rework it around the new settings, so that we can keep things the way they now work in 2.0, but using dalcde's way of defining the custom format.
"
37718131,1966,corbin-auriti,2014-03-15T05:45:42Z,"I just found this, I thought I was relevant: https://github.com/jeremyw/stamp
"
39304742,1966,clefebvre,2014-04-02T09:00:35Z,"Hi,

Closing this one. The idea from dalcde on how to modify custom dates needs to be kept, it's very good. But the implementation can no longer apply.

Dates were refactored in 2.2, with cinnamon-desktop handling the clock, and options for the default format spanning all the way to cinnamon-screensaver. The module is changed too.

In essence the only problem remaining is that it's still tedious to specify a custom date format, but that's restricted to the calendar applet's settings screen now.
"
367311048,6878,Odyseus,2018-02-21T12:29:49Z,"Hello, @jaszhix.

If you don't mind, I would like to ask you a couple of questions because I just hit a dead end from which I don't see an exit.

Can you tell me what's the alternative way of getting the xlets meta data post Cinnamon 3.6.x? `imports.ui.extensionSystem.extensionMeta[ExtensionUUID]`, `imports.ui.appletManager.appletMeta[AppletUUID]` on pre Cinnamon 3.6.x. It used to give an object containing all the data from the xlet metadata.json file plus ""path"" and other added data.

I tried `imports.ui.extension.getExtension(AnyTypeOfXletUUID).meta`. But I get the error *imports.ui.extension.getExtension(...) is null*. It seems to work if I call **getExtension** inside the **init** or **enable** functions in an extension (not tested on applets/desklets), which is absolutely useless for me in there.

I also tried `imports.ui.extension.getMetadata(AnyTypeOfXletUUID, ""xlet-type"")`. But it returns an object that has nothing to do with any xlet meta data. (Example: `{state: ['REJECTED',],queue: [],outcome: {},handled: ['UNHANDLED',],}`).

In short, I can't seem to find a way to get an xlet meta data from outside the xlets objects. Every single one of my xlets depends on a way to get that meta data SYNCHRONOUSLY. I would like to know if this is possible post Cinnamon 3.6.x. And if so, how.
"
367324467,6878,jaszhix,2018-02-21T13:24:31Z,"The metadata is passed to the applet constructor, you can get it in the `_init` method. I would have regression tested against your applets, but they disappeared."
367506320,6878,Odyseus,2018-02-21T22:57:20Z,"Hello, @jaszhix.

> The metadata is passed to the applet constructor, you can get it in the _init method.

I already knew that. And in fact, I already modified all my xlets to use that meta data (it was an absolute nightmare!!!). In some cases, I had to pass that data through countless functions and/or classes just to make use of one of its properties where was really needed. And I even was forced to make that data a property of a class (where that data isn't needed/used) just to be able to pass it to another class/function.

Still, that doesn't answer the question. Is there a way to get that meta data **SYNCHRONOUSLY** outside the xlets objects from a sub-module that isn't applet.js, extension.js, etc.?

I have a couple more questions to ask you if you don't mind.

1. Could you confirm that exists only one way to import JavaScript files now (post Cinnamon 3.6.x)? Example: `require(""./file.js"")`. Is there any other way?
2. It is still possible to use `imports.gi.GLib` on post Cinnamon 3.6.x. Are there any plans for removing this method and force us to use `require(""gi.GLib"")`? Or we can still use `imports.gi.GLib` without future surprises?"
367586804,6878,jaszhix,2018-02-22T07:04:29Z,"I did test a few of your applets, I only modified the meta object in appletManager and removed the properties that weren't in use by any xlets. None of your applets were using the meta object for anything but the path, which is preserved. Asynchronous loading has nothing to do with this, if it does, you should provide an example. All xlet files are loaded asynchronously, the timing of this should be irrelevant to the applet's themselves though, as far as they're concerned their execution is synchronous, unless they themselves are loading something asynchronously.

> It is still possible to use imports.gi.GLib on post Cinnamon 3.6.x. Are there any plans for removing this method and force us to use require(""gi.GLib"")? Or we can still use imports.gi.GLib without future surprises?

The old importer still works, but reloading doesn't work unless you use `require`."
367601235,6878,Odyseus,2018-02-22T08:20:04Z,"Before continuing, I would like to report what I think is an error.

I get the following error when trying to use the function `imports.ui.extension.getExtension(ExtensionUUID)`.


```shell
[0Test@domain.test]: this.formatError is not a function
[0Test@domain.test]: Error importing extension.js from 0Test@domain.test
trace t=2018-02-22T07:39:45.894Z 
<----------------
Extension.prototype.checkProperties@/usr/share/cinnamon/js/ui/extension.js:317:39
Extension.prototype.validateMetaData@/usr/share/cinnamon/js/ui/extension.js:287:9
Extension.prototype._init/<@/usr/share/cinnamon/js/ui/extension.js:219:17
---------------->
```

The *problematic* line is [this one](https://github.com/linuxmint/Cinnamon/blob/master/js/ui/extension.js#L317). Just to test, I removed the `this` from the call to `formatError` (because the Extension prototype doesn't have a `formatError` method). But I also noted that the call in this line to the `formatError` method passes **3 arguments**, while the `formatError` function defined at [L112](https://github.com/linuxmint/Cinnamon/blob/master/js/ui/extension.js#L112) receives just **2 arguments**.

I'm surprised, with how *anal* that CJS lately is, it hasn't noticed all of this.

After fixing all those possible errors, **there is still an error when calling `imports.ui.extension.getExtension(ExtensionUUID)` at the beginning of a file**.

```shell
imports.ui.extension.getExtension(...) is null
trace
<----------------
anonymous@/home/user_name/.local/share/cinnamon/extensions/0Test@domain.test/extension.js:7:16
createExports@/usr/share/cinnamon/js/misc/fileUtils.js:210:31
requireModule/</<@/usr/share/cinnamon/js/misc/fileUtils.js:286:25
---------------->
```

This is why I mentioned ""synchronously"" in my previous messages. One of the lines where the trace points to (**fileUtils.js:286**) is inside a **Promise**. I thought that the calls to `createExports` contained the wrong number of arguments, but then I saw that it is one whole object. So, I got lost here and I couldn't debug it further.

The point is, if I call `imports.ui.extension.getExtension` at the beginning of a file for the purpose of getting an xlet meta data, it will not work. But calling `imports.ui.extension.getExtension` inside `init` or even `enable`, it works.

Here you have a very minimal extension with some `try{}catch{}` blocks depicting what I described above.

[0Test@domain.test.zip](https://github.com/linuxmint/Cinnamon/files/1747146/0Test.domain.test.zip)

***

This is possibly off-topic.

I observed another possible error. And it might not have anything to do with this PR (I didn't check all files that this PR modifies). The `dangerous` flag is not being set for any xlet of neither type. Not even if the xlet is actually *dangerous*.

Let me know if I should open a new issue or if this is by design.


"
367611822,6878,jaszhix,2018-02-22T09:01:37Z,"Okay, I see what you're talking about now. The error you're seeing is indeed because the promise hasn't resolved until the init method has been called. It would be possible to make the meta object apart of the xlet context, but there are still some regressions related to applets I am looking into.

This is the output I get when running your test:

```
Cjs-Message: JS LOG: Top of the file __init__.js:
Cjs-Message: JS LOG: imports.ui.extension.getExtension(...) is null
Cjs-Message: JS LOG: 
<----------------
anonymous@/home/jason/.local/share/cinnamon/extensions/0Test@domain.test/__init__.js:5:16
createExports@/usr/share/cinnamon/js/misc/fileUtils.js:210:31
requireModule@/usr/share/cinnamon/js/misc/fileUtils.js:277:16
require@/usr/share/cinnamon/js/misc/fileUtils.js:220:24
anonymous@/home/jason/.local/share/cinnamon/extensions/0Test@domain.test/extension.js:3:18
createExports@/usr/share/cinnamon/js/misc/fileUtils.js:210:31
requireModule/</<@/usr/share/cinnamon/js/misc/fileUtils.js:286:25
---------------->
Cjs-Message: JS LOG: Top of the file extension.js:
Cjs-Message: JS LOG: imports.ui.extension.getExtension(...) is null
Cjs-Message: JS LOG: 
<----------------
anonymous@/home/jason/.local/share/cinnamon/extensions/0Test@domain.test/extension.js:22:16
createExports@/usr/share/cinnamon/js/misc/fileUtils.js:210:31
requireModule/</<@/usr/share/cinnamon/js/misc/fileUtils.js:286:25
---------------->
Cjs-Message: JS LOG: InitFile constant:
Cjs-Message: JS LOG: {
}
Cjs-Message: JS LOG: Inside init:
Cjs-Message: JS LOG: {
    uuid: '0Test@domain.test',
    url: '0Test@domain.test',
    cinnamon-version: [
        '3.0',
        '3.2',
        '3.4',
        '3.6',
        '3.8',
    ],
    name: '0Test@domain.test',
    description: '0Test@domain.test',
    state: 0,
    path: '/home/jason/.local/share/cinnamon/extensions/0Test@domain.test',
    error: '',
}
Cjs-Message: JS LOG: true
```

Not able to reproduce the first error you mention. `getExtension` is not intended to be a public API in my mind, its an internal function Cinnamon uses for the xlet loading process. I don't intend to make it work that way myself, but feel free to submit a PR if you think you can make it work."
367617156,6878,Odyseus,2018-02-22T09:20:38Z,"You should really look at the line I linked above ([this one](https://github.com/linuxmint/Cinnamon/blob/master/js/ui/extension.js#L317)). **The error is there**. You didn't see it with the example extension that I linked because I added the **url** property to the extension metadata.json file. That was what revealed the error to me.

I repeat:

> Just to test, I removed the `this` from the call to `formatError` (because the Extension prototype doesn't have a `formatError` method). But I also noted that the call in this line to the `formatError` method passes **3 arguments**, while the `formatError` function defined at [L112](https://github.com/linuxmint/Cinnamon/blob/master/js/ui/extension.js#L112) receives just **2 arguments**.

**Summarized: There is a call to a function that doesn't exists (`this.formatError`) and with the wrong number of arguments passed (3 instead of 2) [right here](https://github.com/linuxmint/Cinnamon/blob/master/js/ui/extension.js#L317).**
"
367617908,6878,jaszhix,2018-02-22T09:23:09Z,"Ah, I missed that. Sorry. I'll fix it up when I'm able to, within the next few days."
367896618,6878,Odyseus,2018-02-23T03:08:59Z,"Hello, @jaszhix.

> ...but feel free to submit a PR if you think you can make it work...

Before starting to work on a PR, I would like to know what's the motive for removing the full meta data from `appletMeta` and `deskletMeta` from the applet/desklet managers (leaving only the ""path"") and completely removing the `extensionMeta` variable from `extensionSystem`? Because if there aren't any security or performance issues, then I'm inclined to add the full meta data back to all managers.

That none of the xlets found on the Spices repositories aren't using all that meta data isn't reason enough to eradicate it from Cinnamon's core. First, because the xlets found in Spices aren't the only xlets out there. And second, because most of the applets in Spices are using the imported meta data from inside the applet module (which is pointless due to the meta data being already available as an argument).

I think that the situation that I described in one of my first messages would be reason enough to keep the full meta data available. And I cite myself:

> And in fact, I already modified all my xlets to use that meta data (it was an absolute nightmare!!!). In some cases, I had to pass that data through countless functions and/or classes just to make use of one of its properties where was really needed. And I even was forced to make that data a property of a class (where that data isn't needed/used) just to be able to pass it to another class/function.

**Summarized: if there aren't any security or performance repercussions by having the full xlet meta data available, and if you don't have any objections, I can prepare a PR to add that meta data back to all xlets managers.**"
367903508,6878,jaszhix,2018-02-23T04:01:55Z,"I don't recall objecting to adding it. I think you might be reading too much into its removal (from global scope), it was purely done for performance. Originally a lot of circular references were occurring with the previous meta object, it wasn't just applet metadata, the entire applet structure was referenced to it, and because it was just a secondary reference from the source (`this.meta` on extension instances), it was easiest to prune that seeing no applets actually use it.

It sounds like you don't want to [look](https://github.com/linuxmint/Cinnamon/pull/6878/commits/91df80ceda5e00b40ccde6e08bcce89d04f76a1f) at my [commits](https://github.com/linuxmint/Cinnamon/pull/6878/commits/31c6380386ecc750dea91d0c8489b42074db2100), where I'm trying to detangle some of the circular references. It was not done without a good reason originally. The Type object in extension.js was messy and made logging/debugging these object structures impossible. There is a way I had in mind of adding the metadata back through the extension scope directly. I was going to do this in a separate PR, but I would appreciate a little patience because I have to stay busy with my other work too.

> That none of the xlets found on the Spices repositories aren't using all that meta data isn't reason enough to eradicate it from Cinnamon's core. First, because the xlets found in Spices aren't the only xlets out there. 

If an applet isn't in the spices repo, that means we don't see it. So it essentially loses dev support that way. We can't account for every applet that's being developed independently, and we shouldn't have to. You pulled your applets for instance, and now we're not able to know if something we change breaks it.

If you do decide to submit a PR, I think the meta object should be shallow object with just xlet info like I [pasted](https://github.com/linuxmint/Cinnamon/pull/6878#issuecomment-367611822) earlier. References are convenient, but you risk memory leaks and higher CPU usage with them."
368213325,6878,Odyseus,2018-02-24T09:03:24Z,"> It sounds like you don't want to look at my commits,

I did see at your commits. In fact, between the *""nodejs(isms)""*, the *""ES6(isms)""* and the fact that I'm not a professional developer with a deep understanding of JavaScript, it took me more than 2 weeks to understand *very superficially* what it is being done. And once I did, I had to move/add hundreds of lines of code just to achieve the same functionality that in every single version of Cinnamon prior to 3.6.x can be done with just one line of code.

Please, do not take my words as criticism. I'm just narrating my experience caused by this *simple change*. And please, strike from your though any intent of *pressure* towards you to do anything. The insistence or impatience that you sense in all my previous messages is just my intent (with my own non-professional developer words) to make you see that that meta data is *important* to be made available globally. If not for the current available xlets, for the ones that could come. It's just that that global availability simplifies so much obtaining that data.

> ...I think the meta object should be shallow object...

And here is where you will see that I'm not a professional developer.

I was about to do the following to add the full meta data back:

```javascript
type.legacyMeta[uuid] = this.meta;
```

But I assume that that is precisely what you want to avoid (?).

So, the correct way (I'm assuming again) would be (?):

```javascript
type.legacyMeta[uuid] = Object.assign({}, this.meta);
```

My research revealed that this is the correct and more direct way of creating a shallow copy of an object.

I already have the [PR ready to submit](https://github.com/Odyseus/Cinnamon/commit/5c12b36518734a117f47ea3447c58f29fb034f5a)."
368214942,6878,jaszhix,2018-02-24T09:29:41Z,"Ah, okay, I didn't realize the extension meta object was completely missing, that was a mistake.

What I will be PRing will probably result in the replacement of those objects. I think moving away from code duplication in the xlet managers would be the best strategy. It can be fixed in ui/extension.js and misc/fileUtils.js by passing the original metadata through to the function constructor as `__meta` in the xlet's scope. Like how I already did it with the other node-like [variables](https://github.com/linuxmint/Cinnamon/blob/2dc04b8a26fa7a672c579ed62a70dca6c6e4b295/js/misc/fileUtils.js#L214), `__dirname` and `__filename`. That would be a cleaner solution IMHO instead of more object references (or copying an object)."
368215635,6878,jaszhix,2018-02-24T09:41:13Z,"On the other hand the meta object _is_ passed to the init method for extensions. I think you're missing the point with async loading. If the promise hasn't resolved then you can't do anything inside the extension anyway. We're probably talking about the 1-10ms range between the time the file is loaded from disk and the `init` method being called. 

> And once I did, I had to move/add hundreds of lines of code just to achieve the same functionality that in every single version of Cinnamon prior to 3.6.x can be done with just one line of code.

Sounds like hyperbole. You still are vague about what is causing you to write hundreds of lines of code. I would have spent that time researching Cinnamon's code and figuring out how to work with it. I mean I'm sorry I broke your flow, but APIs always evolve. Its like writing angry letters to Mozilla because they updated their extension API."
368218296,6878,Odyseus,2018-02-24T10:25:01Z,"> Like how I already did it with the other node-like variables, __dirname and __filename.

I think that that would be amazing!

While checking those variables, I found what it might be a very serious bug (emphasis on might). In a **multiversion** enabled xlet (only did tests on a minimal test extension), both **extension.js** files seem to be executed/loaded, the **extension.js** file found on the root folder of the xlet, and the **extension.js** file found on the version sub-folder (3.6 in this case).

[Here is an example extension](https://github.com/linuxmint/Cinnamon/files/1754260/0Test.domain.test.zip).
"
368219676,6878,jaszhix,2018-02-24T10:51:03Z,That's an incorrect file structure for multi-version extensions. 
368220804,6878,Odyseus,2018-02-24T11:09:40Z,"> That's an incorrect file structure for multi-version extensions.

That's the exact same folder structure that I have been using since Cinnamon 2.8. In a **multiversion** enabled xlet, if an xlet sub-folder correspond to the version of Cinnamon used, that will be the xlet loaded. Else, the xlet files found in the root of the xlet. And several of the xlets that I ckecked in the Spices repository confirm that. ([binaryclock@entelechy](https://github.com/linuxmint/cinnamon-spices-applets/tree/e698e72a30d5670ec8e27b1dfe9dfc39d8c09319/binaryclock%40entelechy/files/binaryclock%40entelechy) - [search-box@mtwebster](https://github.com/linuxmint/cinnamon-spices-applets/tree/390cd8e78661546cbb47d3331626ca35f7282ae9/search-box%40mtwebster/files/search-box%40mtwebster) -[sticky@scollins](https://github.com/linuxmint/cinnamon-spices-applets/tree/fe2f8027f7084570fdd4b3aa9e5bbbf044e2fae0/sticky%40scollins/files/sticky%40scollins))"
368221321,6878,jaszhix,2018-02-24T11:18:41Z,"Well its not correct, if you're going to do multi-version its supposed to be in their own folders. We only support the current version of CInnamon."
342465720,6993,Fantu,2017-11-07T12:18:55Z,"have you tested it and is correctly working with only these minimal changes? from fast search seems that significant code changes in applet was needed
https://wiki.gnome.org/Projects/NetworkManager/Developers
Here previous PR about:
https://github.com/linuxmint/Cinnamon/pull/6519"
342478446,6993,lkundrak,2017-11-07T13:14:41Z,"> have you tested it and is correctly working with only these minimal changes? from fast search seems that significant code changes in applet was needed

I've tested wired and VPN. I didn't really test Wi-Fi because the machine didn't have a wireless adapter.

> https://wiki.gnome.org/Projects/NetworkManager/Developers

I'm actually one of the authors of said wiki page."
342522640,6993,Fantu,2017-11-07T15:41:24Z,"thanks, I'll test this probably next weekend preparing new packages for debian experimental
is there debian/control change missed, from a fast look seems reported right here:
https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=857231

`
gir1.2-nmgtk-1.0 → gir1.2-nma-1.0
gir1.2-networkmanager-1.0 → gir1.2-nm-1.0

libnm-glib-dev → libnm-dev
add libnma-dev (to build-deps)
`"
342526964,6993,leigh123linux,2017-11-07T15:53:17Z,"A quick test in F28 reveals some wifi issues.
Toggle to switch wifi on/off isn't working properly and there are new warnings in the log

```
Cinnamon warning: Log level 16: g_object_get_is_valid_property: object class 'NMRemoteSettings' has no property named 'wireless-hardware-enabled'
Cinnamon warning: Log level 16: g_object_get_is_valid_property: object class 'NMRemoteSettings' has no property named 'wwan-hardware-enabled'
```

P.S Thank you for the PR."
342539661,6993,lkundrak,2017-11-07T16:30:30Z,"> A quick test in F28 reveals some wifi issues.
> Toggle to switch wifi on/off isn't working properly and there are new warnings in the log

Yes, this is an embarrassing NetworkManager bug. Will be fixed in the next NM release.

https://cgit.freedesktop.org/NetworkManager/NetworkManager/commit/?h=nm-1-8&id=34035ceee8e75d8cb7deb6f4aa211067bddcfe97"
345363440,6993,besser82,2017-11-17T20:58:08Z,"Thank you for the work, @lkundrak!

For those people, who care about:  I have ported the [Debian downstream patch for network user connections](http://sources.debian.net/patches/cinnamon/3.2.7-4/network-user-connections.patch/).  You can [find the rewritten version of the network user connections for libnm here](https://src.fedoraproject.org/rpms/cinnamon/blob/1853c66d3e87bc1d7211516d6991c31832d4702a/f/network-user-connections_libnm.patch)."
345439735,6993,Fantu,2017-11-18T12:39:44Z,"Tested today on debian packages for next experimental build and seems ok, no regression found"
345501031,6993,leigh123linux,2017-11-19T08:40:34Z,"I've retested and have found some small issues

rescan doesn't function

```
(cinnamon:6644): Cjs-WARNING **: JS ERROR: Exception in callback for signal: activate: TypeError: devices[i].device.request_scan_simple is not a function
MyApplet.prototype._clientGot/<@/usr/share/cinnamon/applets/network@cinnamon.org/applet.js:1766:21
_emit@resource:///org/cinnamon/cjs/modules/signals.js:142:27
PopupBaseMenuItem.prototype.activate@/usr/share/cinnamon/js/ui/popupMenu.js:178:9
RescanMenuItem.prototype.activate@/usr/share/cinnamon/applets/network@cinnamon.org/applet.js:1664:9
PopupBaseMenuItem.prototype._onButtonReleaseEvent@/usr/share/cinnamon/js/ui/popupMenu.js:151:9
```

and the tooltip doesn't display ssid

![untitled](https://user-images.githubusercontent.com/1299302/32988888-4c9f281c-cd05-11e7-846f-1750568b2603.jpg)
"
346964092,6993,lkundrak,2017-11-25T20:27:59Z,"Uh, seems like I could've done a better job. Thanks a bunch, @leigh123linux.

I've now tested with Wi-Fi (on Fedora 27) as well and corrected some more issues, among those the two discovered by @leigh123linux.

Please take another look. Thank you!"
346977402,6993,leigh123linux,2017-11-26T01:24:30Z,"@lkundrak 
Thank you for update.
You will be pleased to hear that I haven't found anything new."
347030211,6993,besser82,2017-11-26T19:00:43Z,@lkundrak Thank you very much!  We adopted the patch for our Fedora and RHEL7 packages of Cinnamon 3.6 series.  =)
347032040,6993,leigh123linux,2017-11-26T19:28:29Z,"@lkundrak  You will be pleased to hear after further testing the request looks good for merging.
Thank you."
349611235,6993,Fantu,2017-12-06T11:25:17Z,"cinnamon-control-center following gnome-control-center have network manager >=1.2.0
fedora 25 have already higher version?
I tried it only in Sid with network manager 1.10 for now, I'll need try in Xenial with network manager 1.2 one of the next weekends
"
349615352,6993,leigh123linux,2017-12-06T11:43:42Z,@Fantu  F25 has NetworkManager-1.4.6-1.fc25
349659074,6993,besser82,2017-12-06T14:41:17Z,The minimum requirement for this is libnm >= 1.6;  just checked with several custom builds of NM.
349963719,6993,lkundrak,2017-12-07T13:16:09Z,"> The minimum requirement for this is libnm >= 1.6; just checked with several custom builds of NM.

Thank you. I've updated the branch to reflect that."
351461665,6993,lkundrak,2017-12-13T17:23:40Z,"Hello. Anything left to do here? Is merging this blocked by something?
Could I drop it from my radar now?"
351473403,6993,leigh123linux,2017-12-13T18:05:17Z,"@lkundrak The only block I can see is mints old xenial base, it will need to wait till their rebase.
Apart from that it looks good for merging.

@clem ^^"
373056001,6993,clefebvre,2018-03-14T15:09:53Z,"Hi everyone,

Thank you for your patience.

Successfully tested this in Mint 19: with Ethernet, Wifi, VPN and mobile networks.

In LMDE 3 (based on Debian Stretch), I'm getting a Cinnamon crash: 

```
'NMRemoteSettings' has no property named 'wireless-hardware-enabled'
'NMRemoteSettings' has no property named 'wwan-hardware-enabled'
```


"
373059659,6993,leigh123linux,2018-03-14T15:19:48Z,"@clefebvre  looks like debian need to fix their networkmanager package

Sorry no time to look up the upstream commit

https://src.fedoraproject.org/cgit/rpms/NetworkManager.git/commit/?id=f484465e78653bddfa821386ed17fb4ccaaecc04"
373064089,6993,clefebvre,2018-03-14T15:31:50Z,Hi @Fantu could we get that patch applied in Debian Stretch?
373119919,6993,Fantu,2018-03-14T18:04:33Z,"The upstream commit is:
https://github.com/NetworkManager/NetworkManager/commit/c81005b84650b8e6d709ce6afda96fb55987cdb8
I'm afraid that it's not important enough for an update that includes it on Stretch, but can try to ask

Edit: Asked to one maintainer and seems is not possible, LMDE 3 network manager build with the patch above can be a solution?"
373325541,6993,clefebvre,2018-03-15T10:11:28Z,"Hi @Fantu, it's really important. If we merge this PR, Cinnamon no longer runs in Debian Stretch... it crashes on startup. We can patch NM in LMDE3 for our own users, but that's no good for Debian users.
"
373334255,6993,Fantu,2018-03-15T10:44:39Z,"these reply on irc debian-devel probably can help to understand:

> <smcv> Fantu: if it has a significant impact on running stretch's Cinnamon on stretch's NetworkManager and the fix is minimal, then maybe
> <smcv> Fantu: if it only helps with running newer-than-stretch Cinnamon on stretch's NetworkManager then I'd guess probably no

Debian stable have main objective of stability and reliability, if I'm not wrong stable update of packages (for example *+deb9u1) should contain only security fixes, critical fixes or important fixes that afflict the software in question or other software of the same debian version that uses it but only applying patch of the fixes and if it not have risk to cause other bugs/regression.
The fix NetworkManager/NetworkManager@c81005b is very small and FWIK should not cause regression but if not afflict software present on Stretch will not be applied in a new build (1.6.2-3+deb9u1).
I'll probably try to backports 3.8 to stretch official repository if will be good and it will include this PR even if not accepted upstream because will solve a ""blocking bug"" for Buster as I already applied it on debian git:
https://salsa.debian.org/cinnamon-team/cinnamon/blob/master/debian/patches/port-libnm.patch
In the case of cinnamon 3.8 backport for stretch I will need to backport also network-manager >= 1.10 that included the fix (and deps on it) hoping will not cause other deps issue or regression.
I'll try to open bugreport on debian anyway, if someone know that the network manager fix is needed also to other software present in Stretch please tell me for make possible apply it."
373347222,6993,clefebvre,2018-03-15T11:37:28Z,"It's a requirement for Cinnamon to work in major distributions. If libnm isn't properly supported in Debian, it's hard to consider migrating to it."
373348518,6993,leigh123linux,2018-03-15T11:42:40Z,"@clefebvre You can't hold other distro's back because of Debian's lame policies, libnm-glib is depreacted"
373351848,6993,clefebvre,2018-03-15T11:56:41Z,"Something else seems to be at play, I get a segfault in Stretch, even with https://github.com/NetworkManager/NetworkManager/commit/c81005b84650b8e6d709ce6afda96fb55987cdb8 applied to libnm."
373353634,6993,leigh123linux,2018-03-15T12:04:25Z,"@clefebvre without the commit I only got a warning, no crash

https://github.com/linuxmint/Cinnamon/pull/6993#issuecomment-342526964"
373356327,6993,Fantu,2018-03-15T12:15:34Z,@clefebvre if you can take a backtrace of crash to make try to found the cause
373356718,6993,clefebvre,2018-03-15T12:17:14Z,"Yes, it's in libgobject.. it's hard to spot cause of JS.. I'm trying to get one out."
373358968,6993,clefebvre,2018-03-15T12:27:09Z,"Here's the trace:
[segfault.txt](https://github.com/linuxmint/Cinnamon/files/1815320/segfault.txt)

Cinnamon output before it crashes:

```
clem@cindy:~$ cinnamon --replace

(cinnamon:416): Cjs-WARNING **: Some code accessed the property 'restrictedWords' on the module 'tweener'. That property was defined with 'let' or 'const' inside the module. This was previously supported, but is not correct according to the ES6 standard. Any symbols to be exported from a module must be defined with 'var'. The property access will work as previously for the time being, but please fix your code anyway.
Cjs-Message: JS LOG: About to start Cinnamon
Cjs-Message: JS LOG: [LookingGlass/info] Cinnamon.AppSystem.get_default() started in 51 ms
Cjs-Message: JS LOG: [LookingGlass/info] loading user theme: /usr/share/themes/Linux Mint/cinnamon/cinnamon.css
Cjs-Message: JS LOG: [LookingGlass/info] added icon directory: /usr/share/themes/Linux Mint/cinnamon
Cjs-Message: JS LOG: GSettings key not found. schema: org.cinnamon.desktop.notifications, key: bottom-notifications
Cjs-Message: JS LOG: [LookingGlass/info] PlacesManager: Updating devices
St-Message: cogl npot texture sizes SUPPORTED
Cjs-Message: JS LOG: [LookingGlass/info] loaded at Thu Mar 15 2018 12:23:40 GMT+0000 (UTC)
Cjs-Message: JS LOG: Cinnamon started at Thu Mar 15 2018 12:23:40 GMT+0000 (UTC)
Cjs-Message: JS LOG: [LookingGlass/info] ExtensionSystem started in 1 ms
Cjs-Message: JS LOG: [LookingGlass/info] DeskletManager started in 0 ms
Cjs-Message: JS LOG: [LookingGlass/info] SearchProviderManager started in 1 ms
openGL version 4.3 detected (GL3 Cogl Driver)
MetaSyncRing disabled: couldn't find required GL extensions, or the minimum safe openGL version was not met
Cjs-Message: JS LOG: [LookingGlass/info] Loaded applet show-desktop@cinnamon.org in 80 ms
Cjs-Message: JS LOG: [LookingGlass/info] Loaded applet removable-drives@cinnamon.org in 8 ms
Cjs-Message: JS LOG: [LookingGlass/info] Loaded applet user@cinnamon.org in 21 ms
Cjs-Message: JS LOG: [LookingGlass/info] Loaded applet calendar@cinnamon.org in 29 ms
Cjs-Message: JS LOG: [LookingGlass/info] Loaded applet systray@cinnamon.org in 7 ms
Cjs-Message: JS LOG: [LookingGlass/info] Loaded applet keyboard@cinnamon.org in 21 ms
Cjs-Message: JS LOG: [LookingGlass/info] Role locked: notifications
Cjs-Message: JS LOG: [LookingGlass/info] Loaded applet notifications@cinnamon.org in 18 ms
Cjs-Message: JS LOG: [LookingGlass/info] Role locked: panellauncher
Cjs-Message: JS LOG: [LookingGlass/info] Loaded applet panel-launchers@cinnamon.org in 47 ms
Cjs-Message: JS LOG: [LookingGlass/info] Loaded applet power@cinnamon.org in 14 ms
Cjs-Message: JS LOG: [LookingGlass/info] Loaded applet window-list@cinnamon.org in 32 ms
Cjs-Message: JS LOG: [LookingGlass/info] Loaded applet sound@cinnamon.org in 49 ms
Cjs-Message: JS LOG: [LookingGlass/info] Loaded applet network@cinnamon.org in 22 ms
Cjs-Message: JS LOG: [LookingGlass/info] Loaded applet menu@cinnamon.org in 288 ms
Cjs-Message: JS LOG: [LookingGlass/info] AppletManager started in 777 ms
Cjs-Message: JS LOG: [LookingGlass/info] Cinnamon took 968 ms to start
**
Cjs:ERROR:gi/object.cpp:616:bool object_instance_resolve_no_info(JSContext*, JS::HandleObject, bool*, ObjectInstance*, const char*): assertion failed: (g_base_info_get_type(base_info) == GI_INFO_TYPE_INTERFACE)

Abandon (core dumped)
```

dmesg:

`[70189.008997] cinnamon[2006]: segfault at 559b00000038 ip 00007ff9b09c7966 sp 00007ffd60d0acc0 error 4 in libgobject-2.0.so.0.5000.3[7ff9b0993000+52000]
`
"
373359481,6993,clefebvre,2018-03-15T12:29:19Z,"@leigh123linux just as you said, the NM patch seems to have just removed the warnings.. I initially thought this was responsible for the crash but it's still crashing the exact same way.

Version of nm is 1.6.2."
373361276,6993,leigh123linux,2018-03-15T12:36:34Z,"@clefebvre This issue looks similar to yours and has a full backtrace

https://bugzilla.redhat.com/show_bug.cgi?id=1526635"
373371991,6993,clefebvre,2018-03-15T13:16:36Z,"Two quick observations:

- Cinnamon works fine (i.e no crash) if the network applet is removed from the list of applets.
- Loading libnm via GI works fine (tested in LMDE3 with a python script)

```

#!/usr/bin/python3
import gi
gi.require_version('NM', '1.0')
gi.require_version('Gtk', '3.0')
from gi.repository import NM, Gtk

class App():

    def __init__(self):

        NM.Client.new_async(None, self.client_received);

    def client_received (self, object, result):
        client = NM.Client.new_finish(result);
        print(""Client received"")


app = App()
Gtk.main()
```


"
373389323,6993,Fantu,2018-03-15T14:12:34Z,"Based on clem quick observations and my test with cinnamon 3.6 with this PR on Sid I suppose that probably there is/are other bugs/unexpected cases in network manager of Stretch solved in newer network manager (>=1.10) in buster/sid.
Probably tomorrow or this weekend I'll try do a backport to make a fast test (if backport is ok)"
374149154,6993,Fantu,2018-03-19T09:25:45Z,"I tried to build a backports but fails:
http://debomatic-amd64.debian.net/distribution#stretch-backports/network-manager/1.10.6-2~bpo9+0.2/buildlog
I don't know if issue remained on tests is only related to clean build environment changes about network and I hadn't time to retry on cowbuilder instead or ""near clean manual"" on stretch new vm, probably I can't until next weekend.
If you want try it before:
http://debomatic.fantu.eu/debian/network-manager_1.10.6-2~bpo9+0.2.debian.tar.xz
http://debomatic.fantu.eu/debian/network-manager_1.10.6.orig.tar.xz

EDIT: build on ""near clean manual"" on stretch new vm (+ backports repo) success but I don't have new cinnamon backports for stretch ready for test it and I not have time to do it now

EDIT2: put in one public repository and also tried to install (still not tried with new cinnamon)

> wget -O - http://debomatic.fantu.eu/fantutestingrepo.gpg.key | sudo apt-key add -
> add repository to /etc/apt/sources.list
> deb http://debomatic.fantu.eu/deb stretch-backports main contrib non-free
"
375974065,6993,Fantu,2018-03-25T14:20:46Z,"@clefebvre today I tried cinnamon 3.6 packages including this PR and another depending on this already preset as patch in debian pkgs on stretch (http://debomatic-amd64.debian.net/distribution#dpr-cinnamon-stretch-backports) with network manager backports (see msg above), cinnamon don't crash and network applet seems working correctly but from log:
(nm-applet:1134): Gdk-CRITICAL **: gdk_window_thaw_toplevel_updates: assertion '
window->update_and_descendants_freeze_count > 0' failed
can you try cinnamon 3.8 (with this PR) on stretch with network manager backported to understand if is only network manager the cause of issue you reported please?

EDIT:
I tried to remove libnma-dev and its gir from cinnamon build-deps and deps of debian packages but seems gir1.2-nma-1.0 is really needed and caused this:
error t=2018-03-25T16:30:32Z Requiring NMA, version none: Typelib file for namespace 'NMA' (any version) not found
error t=2018-03-25T16:30:32Z [Applet ""network@cinnamon.org""]: Error importing applet.js from network@cinnamon.org
error t=2018-03-25T16:30:32Z Could not load applet network@cinnamon.org
...
try to change debian/control with:
...
         gir1.2-cmenu-3.0 (>= ${cinnamon:Version}),
         gir1.2-nmgtk-1.0, # to be removed
         gir1.2-nm-1.0, # to be added
         gir1.2-nma-1.0, # to be added
         gir1.2-notify-0.7,
...
from a fast search in debian pkg build log libnma-dev instead seems not really used/needed, I suppose can be useful add also nma to gir includes of makefile.am (I don't know if it will require also libnma-dev to build-deps, if yes also add it)"
383910079,6993,clefebvre,2018-04-24T12:21:19Z,Following up on https://github.com/linuxmint/Cinnamon/pull/7486.
470402848,8428,brownsr,2019-03-07T06:28:27Z,"@jaszhix Thanks for the review. It may take a while for me to work through
it as I have a heavy workload the next two days and then I am away at the
weekend.  your detailed comments are much appreciated :-)

On Thu, 7 Mar 2019, 03:26 Jason Hicks, <notifications@github.com> wrote:

> *@jaszhix* commented on this pull request.
>
> Hi @brownsr <https://github.com/brownsr>, I was seeing if I could test
> this with Cinnamenu, and it appears to only show the desktop wallpaper. I'm
> applying this to the popup-menu-content class (only one that seemed to
> show the bump map), and opacifying every actor underneath.
>
> [image: image]
> <https://user-images.githubusercontent.com/6859057/53929176-740cc280-4052-11e9-814d-2b731f6f6c96.png>
>
> Speeds seem fine with no noticeable speed penalty unless a large blur
> count is put in for test purposes.
>
> I'm also concerned about performance. My initial impression with no
> effects applied to CSS is performance is regressing and window rendering
> becomes further out of sync with the cursor. This is noticeable for me on
> my Xeon/Nvidia desktop I do most benchmarking on.
>
> I am applying this on top of master + linuxmint/muffin#410
> <https://github.com/linuxmint/muffin/pull/410> + linuxmint/muffin#397
> <https://github.com/linuxmint/muffin/pull/397> + #8269
> <https://github.com/linuxmint/Cinnamon/pull/8269> + #8300
> <https://github.com/linuxmint/Cinnamon/pull/8300>. At least the first
> issue might be a base branch cause, but at the same time could also be
> Cinnamenu's actor hierarchy, so not sure but can test more this weekend,
> along with some compositing benchmarks. When returning to Cinnamon without
> this PR applied, I can only describe it as ""much snappier"".
> ------------------------------
>
> In src/st/st-widget.c
> <https://github.com/linuxmint/Cinnamon/pull/8428#discussion_r263223792>:
>
> > -  // ClutterEffect *effect = clutter_actor_get_effect (actor, ""background-effect"");
> -
> -  // if (effect == NULL)
> -  //   {
> -  //     effect = st_background_effect_new ();
> -  //     clutter_actor_add_effect_with_name (actor, ""background-effect"", effect);
> -  //   }
> -
> -  // const char *bumpmap_path = st_theme_node_get_background_bumpmap(theme_node);
> -
> -  // g_object_set (effect,
> -  //               ""bumpmap"",
> -  //               bumpmap_path,
> -  //               NULL);
> +    {
> +      if ((theme_node->background_blur > 0 || theme_node->background_bumpmap)
>
> Might be good to do these logical comparisons when the change in CSS is
> detected, instead of on every paint.
> ------------------------------
>
> In src/st/st-widget.c
> <https://github.com/linuxmint/Cinnamon/pull/8428#discussion_r263223846>:
>
> > @@ -278,6 +282,18 @@ st_widget_dispose (GObject *gobject)
>    st_widget_remove_transition (actor);
>
>    g_clear_pointer (&priv->label_actor, g_object_unref);
> +  if (priv->background_blur_effect)
> +    {
> +      g_object_run_dispose (G_OBJECT (priv->background_blur_effect));
> +      g_object_unref (priv->background_blur_effect);
> +      priv->background_blur_effect = NULL;
> +    }
> +      if (priv->background_bumpmap_effect)
>
> Indentation is off.
> ------------------------------
>
> In src/st/st-widget.c
> <https://github.com/linuxmint/Cinnamon/pull/8428#discussion_r263223966>:
>
> > @@ -1617,7 +1695,7 @@ st_widget_ensure_style (StWidget *widget)
>    g_return_if_fail (ST_IS_WIDGET (widget));
>
>    if (widget->priv->is_style_dirty)
> -    st_widget_recompute_style (widget, NULL);
> +      st_widget_recompute_style (widget, NULL);
>
> We use two spaces after a bracket-less if statement.
> ------------------------------
>
> In src/st/st-widget.c
> <https://github.com/linuxmint/Cinnamon/pull/8428#discussion_r263224226>:
>
> > @@ -486,8 +500,15 @@ st_widget_style_changed (StWidget *widget)
>      }
>
>    /* update the style only if we are mapped */
> -  if (clutter_actor_is_mapped (CLUTTER_ACTOR (widget)))
> -    st_widget_recompute_style (widget, old_theme_node);
> +  if (clutter_actor_is_mapped (CLUTTER_ACTOR (widget))
> +  || (old_theme_node != NULL &&
> +      (old_theme_node->background_blur > 0
> +       || old_theme_node->background_bumpmap != NULL)))
> +    {
> +      st_widget_recompute_style (widget, old_theme_node);
> +
> +      st_widget_add_background_effects(widget, old_theme_node);
>
> Maybe we can check if the theme node is eligible before calling
> st_widget_add_background_effects? We should know after
> st_widget_recompute_style.
> ------------------------------
>
> In src/st/st-widget.c
> <https://github.com/linuxmint/Cinnamon/pull/8428#discussion_r263224403>:
>
> > @@ -1540,6 +1563,61 @@ on_transition_completed (StThemeNodeTransition *transition,
>    st_widget_remove_transition (widget);
>  }
>
> +static void st_widget_add_background_effects (StWidget    *widget,
> +                                              StThemeNode *old_theme_node )
> +{
> +StThemeNode *new_theme_node = st_widget_get_theme_node (widget);
>
> We could probably make st_widget_recompute_style return the new_theme_node
> passed as an argument to this function and avoid a function invocation in
> the paint cycle.
> ------------------------------
>
> In src/st/st-widget.c
> <https://github.com/linuxmint/Cinnamon/pull/8428#discussion_r263224476>:
>
> > +              widget->priv->background_blur_effect = (StBackgroundBlurEffect *) st_background_blur_effect_new ();
> +              widget->priv->background_blur_effect->blur_size = new_theme_node->background_blur;
> +              for (int i=0;i<4;i++)
> +                widget->priv->background_blur_effect->border_radius[i] = new_theme_node->border_radius[i];
> +            }
> +        }
> +      if (new_theme_node->background_bumpmap != NULL)
> +        {
> +          if (widget->priv->background_bumpmap_effect == NULL)
> +            {
> +              const char *bumpmap_path;
> +
> +              widget->priv->background_bumpmap_effect = (StBackgroundBumpmapEffect *) st_background_bumpmap_effect_new ();
> +              bumpmap_path = st_theme_node_get_background_bumpmap(new_theme_node);
> +              widget->priv->background_bumpmap_effect->bumpmap_path = strdup (bumpmap_path);
> +              for (int i=0;i<4;i++)
>
> Spaces here will make the code easier to read.
> ------------------------------
>
> In src/st/st-widget.c
> <https://github.com/linuxmint/Cinnamon/pull/8428#discussion_r263224646>:
>
> > @@ -1540,6 +1563,61 @@ on_transition_completed (StThemeNodeTransition *transition,
>    st_widget_remove_transition (widget);
>  }
>
> +static void st_widget_add_background_effects (StWidget    *widget,
> +                                              StThemeNode *old_theme_node )
> +{
> +StThemeNode *new_theme_node = st_widget_get_theme_node (widget);
> +
> +  if (old_theme_node)
> +    {
> +      if (old_theme_node->background_blur > 0)
> +        {
> +          if (widget->priv->background_blur_effect != NULL)
> +            {
> +              g_object_run_dispose (G_OBJECT (widget->priv->background_blur_effect));
>
> In st_widget_recompute_style, we know if the style has *changed*, so it
> might be good to use that boolean state instead of assuming any processing
> is needed because there is an old theme node.
> ------------------------------
>
> In src/st/st-background-effect.c
> <https://github.com/linuxmint/Cinnamon/pull/8428#discussion_r263224949>:
>
> >
> -        }
> -      return TRUE;
> -    }
> -  else
> -    {
> -      return FALSE;
> -    }
> +static gboolean
> +st_background_blur_effect_pre_paint (ClutterEffect *effect)
> +{
> +  return TRUE;
>
> What is the purpose of this function?
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/linuxmint/Cinnamon/pull/8428#pullrequestreview-211582946>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AGB5MU6kjyVbON_otxX4HJ4R-yrJVQ3mks5vUIbXgaJpZM4bVM5_>
> .
>
"
474317206,8428,clefebvre,2019-03-19T11:20:55Z,"Hi guys, I'm prefixing it as WIP for the time being."
475995711,8428,brownsr,2019-03-24T20:17:16Z,"Just working through some of these now. Yes, it does show some odd things if you put it on .popup-menu-content.  Not quite sure where .popup-menu-content fits in the processing for popups, but putting it here does not shapshot the screen background, perhaps something to do with the processing of the various layers in the menu.  It also does not use the radiused corners of the popup as a whole, presumably because this element of CSS does not need to have matching radiused corners defined generally.    It works fine in .menu though.



"
542553409,8428,brownsr,2019-10-16T07:01:03Z,"@clefebvre I'm not planning further work on this, as far as I am concerned it's been ready to pull since the last changes in March."
547291380,8428,brownsr,2019-10-29T07:27:09Z,"Segfault during testing, so back to WIP."
891530043,8428,BionicBlade0,2021-08-03T05:07:05Z,"Brownsr, any progress on this PR?"
942712141,8428,filuslolol,2021-10-13T20:53:46Z,Is this still being worked on?
962656933,8428,KAMI911,2021-11-07T18:13:18Z,What an interesting feature. It is sad to see that the development stalled.
1000606297,8428,akirapink,2021-12-24T01:57:06Z,"if this isn't being worked on by @brownsr anymore, would it be fair for someone else to come in, take the proposed changes from this, and finish the implementation work?"
1073837843,8428,amytimed,2022-03-21T12:33:29Z,I would love to see this implemented into Cinnamon! Windows like the terminal would look so much better with transparency and blur.
1118232255,8428,echuber2,2022-05-05T06:57:44Z,"> Segfault during testing, so back to WIP.

Is there information about _what_ exactly had segfaulted? Is there a test case that's still reproducible? Does this need to be started over from scratch given how much time has passed?"
1200549784,8428,rdlf4,2022-08-01T00:41:03Z,"> > Segfault during testing, so back to WIP.
> 
> Is there information about _what_ exactly had segfaulted? Is there a test case that's still reproducible? Does this need to be started over from scratch given how much time has passed?

We're left with no answers. No way to reproduce, no info on repository, let alone what is required and what dependencies need to be taken care of, cinnamon compilation instructions, additional files or github links. Nada.
It's almost as if the foundation of Cinnamon were so sensitive that they don't feel like sharing anything about it or letting anyone in. And when we look for those answers ourselves, we typically end up with a NOT FOUND page or a project lost in time, which was started by a random person (not the linuxmint team, of course) and then ""real life called, and they had to abandon it"".
And that's exactly how your linux mint 21 experience is going to be like, just as the previous version."
1203293407,8428,akirapink,2022-08-02T22:59:45Z,"god, i can't believe linux mint dev team bad¹
[1] don't have enough resources or at _worst_ are putting them in the wrong places and thus doing work that has somewhat subpar results

which, is a shame!! because cinnamon is a really cool desktop environment imo - it's a bit buggy, but it gets way less love than it deserves and xapps are like...the only competition to gnome apps i've found to be comfortable at all

( i really hope what happened to firefox/mozilla doesn't happen to linux mint, where the once gold standard loses its focus from bad management but noone has the resources to fork it properly and now they're making....5 built-in themes with bad text contrast, for _a limited time?_ with all that donation money ( are last update's mint-y tweaks comparable to colorways? ) )

@rdlf4 so like, what do you suggest we (not me or anyone specific, people somewhat critical of mint in general) do about it?"
1203357460,8428,rdlf4,2022-08-03T00:46:37Z,"> god, i can't believe linux mint dev team bad¹ [1] don't have enough resources or at _worst_ are putting them in the wrong places and thus doing work that has somewhat subpar results
> 
> which, is a shame!! because cinnamon is a really cool desktop environment imo - it's a bit buggy, but it gets way less love than it deserves and xapps are like...the only competition to gnome apps i've found to be comfortable at all
> 
> ( i really hope what happened to firefox/mozilla doesn't happen to linux mint, where the once gold standard loses its focus from bad management but noone has the resources to fork it properly and now they're making....5 built-in themes with bad text contrast, for _a limited time?_ with all that donation money ( are last update's mint-y tweaks comparable to colorways? ) )
> 
> @rdlf4 so like, what do you suggest we (not me or anyone specific, people somewhat critical of mint in general) do about it?

Alright, you're bringing a lot to the table here, so I feel like focusing on what's being discussed - in no way do I wish the Mint team to lose focus on supporting Cinnamon -- matter of fact, by restyling Cinnamon means supporting it even further, but on the visual style department.
And it's not like the community wants a KDE 2.0 (gosh why did you even drag KDE into this?), No, it's not that! It's just that blatant solid color that's been there for all these years, that has to change. And BECAUSE TRANSPARENT CINNAMON THEMES are very popular - and therefore a common topic, by adding Blur effect on top of it, system elements/controls such as Menu, panel, applets, etc would benefit by looking more modern and offering a fresh redesign.
And lets not kid ourselves here, we know that Blur does impact the system if implemented poorly or with the wrong settings, which could lead to GPU meltdown (a little bit of exaggeration there, but you get the picture) - that's what Cinnamon tweak settings should be for.

So give us Blur, and let us play around with it. Those with a beefier apu from a desktop computer can make it look prettier than those with a mobile apu, so having options to suit our needs and system settings is important.
And for those who are like ""Oh what's the problem looking the same after all these years?"" all I can say is fine. You don't want it, that's on you. But nothing remains looking the same over time, and offering Cinnamon a more modern look shows that the team is keeping up with the time and with the community's request. (We've been trying this by ourselves after all, so why turn a blind eye on it?)

Don't get it twisted, I'm not saying ""do it today! Or tomorrow! Or for the next release!"" No, I'm asking the team to bring their attention to this topic and feature request, tell us how do-able it is with the current version of Cinnamon (does it allow for such a thing without compromising the Cinnamon team's agenda? Could it be done in an official way, meaning further supported for future Linux Mint releases?) - so some clarification from the team on this topic would be a nice place to start from.

I'm sorry for the long post."
1205646092,8428,akirapink,2022-08-04T18:47:10Z,"@rdlf4 oh! yeah
if they can't do it now, that's alright, but it feels really odd that they haven't done it with how many cinnamon themes use transparency
which got me suspecting maybe there could be mismanagement on how what resources are allocated to what stuff but that's just a gut feeling i took way too far
sorry about that,"
1572315992,8428,mtwebster,2023-06-01T15:55:52Z,Merged via https://github.com/linuxmint/cinnamon/commit/6aeeb22fc9a2ba339b606f343ec025dce6f796d7
455117878,8150,clefebvre,2019-01-17T10:15:42Z,"Hi @collinss, looking at it in Mint, in debian/control, the dependency should be on gir1.2-timezonemap-1.0. I can't find that lib in Debian Stretch though... 

@leigh123linux do you have it in Fedora?"
455181409,8150,leigh123linux,2019-01-17T14:00:23Z,"@clefebvre  I have

```
rpm -qf /usr/lib64/girepository-1.0/TimezoneMap-1.0.typelib
libtimezonemap-0.4.5.1-4.fc29.x86_64
```


"
455513162,8150,clefebvre,2019-01-18T11:17:52Z,hmm I can't find it in Debian..
455623406,8150,collinss,2019-01-18T17:22:57Z,"> hmm I can't find it in Debian..

It looks like the one we have comes from Ubuntu repositories, so it might not be in Debian. I guess if we're going to use this we'd have to add it to our LMDE3 repository. On the upside, I don't think the package ever changes much, so there shouldn't be too much work involved..."
553717638,8150,clefebvre,2019-11-14T04:19:53Z,"
![Codacy](https://app.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 7
- Added 58
           

Complexity increasing per file
==============================
- files/usr/share/cinnamon/cinnamon-settings/modules/cs_calendar.py  1
         
```


See the complete overview on [Codacy](https://app.codacy.com/app/Cinnamon/Cinnamon/pullRequest?prid=2743236&bid=10303860)
        "
253823000,5798,Odyseus,2016-10-14T14:53:03Z,"Hello, NikoKrause.

If you use `decodeURIComponent` in those strings, then the `replace` isn't needed. This commit could also fix #3620.
"
253839136,5798,NikoKrause,2016-10-14T15:45:55Z,"@Odyseus 
I didn't saw, that you already solved this issue.
Why haven't you created a pull request?
"
253885861,5798,ghost,2016-10-14T18:37:11Z,"Without comments: https://github.com/linuxmint/Cinnamon/commit/b2426c5b6f6163cc97d0c6a7b75914042b806799
"
253887057,5798,NikoKrause,2016-10-14T18:42:13Z,"So it seems that this method is known since over 2 years.
Is there a reason why it hasn't been fixed yet?
"
253889337,5798,ghost,2016-10-14T18:51:16Z,"As i not get any response on this i don't do anything... But that is my position, i don't use the cinnamon menu, because of this and because of more things... So, i really don't care, if is not interesting for who need to be interesting ...
"
253908277,5798,ghost,2016-10-14T20:15:19Z,"@NikoKrause, @Odyseus have right and also it's not because the replace is not needed. In your context, as you try to decode a replaced string, you could tray to decode an invalid hexadecimal string (where some characters are replaced). If you first decode the string and then apply the replace, then it's like @Odyseus  say (the replace is for nothing, not needed), but you are not doing that...
"
253909135,5798,ghost,2016-10-14T20:19:28Z,"Also see, the problem it's not inside the menu, and at less for me have not sense fix it in all places where the bookmarks are used. This have a source and if you fixed this in the source you will not need to fixed it in all places where this was used...
"
253959544,5798,Odyseus,2016-10-15T03:24:47Z,"Hello, g@ys.

@NikoKrause: I didn't really fix anything. I just did some tests and posted my findings in that issue. Like I said in there, I'm not sure if it's _safe_ to use `decodeURIComponent` in that place because it could decode an _illegal_ character for an `St.Label` element. I don't even know if there is such a thing (an _illegal_ character for an `St.Label` element).

I already added `decodeURIComponent` to my own fork of the menu without any apparent drawbacks. I saw that **lestcape** also uses it in his configurable menu applet.

> Why haven't you created a pull request?

Basically, because I'm not a developer. Any possible contribution that I could make would be narrowed by my very limited knowledge. I wouldn't want to waste the developers' valuable time reviewing commits that could contain obvious errors (for a professional developer's eye). Plus, I don't feel comfortable using some GitHub advanced features that I can barely understand.
"
253983102,5798,NikoKrause,2016-10-15T13:04:35Z,"I rebased the commit, thanks to @Odyseus.

@Odyseus 
You shouldn't be afraid to create a pull request, if you think, that you solved an issue.
The Linux community is very nice. And I think one purpose of pull requests is, that commits are reviewed by the owner of the project, so he can check if there are errors or if he want to merge it or not.  
And about to GitHub advanced features. If you don't start to try, you don't learn them.
I also made mistakes and still doing them, when using git. But I learned from my mistakes. And I even learned some new features of git, I didn't even know about, because I made mistakes.
So don't be afraid trying out new stuff and don't bad talk your skills.

@lestcape 
I think you are right, when you say, that this problem should be fixed in the source. But I don't know, where the source of this problem is, so I solved this problem at that specific location.
Can you tell a concrete example, where `decodeURIComponent` could go wrong?
I wasn't able to create one:
![bildschirmfoto vom 2016-10-15 14-38-51](https://cloud.githubusercontent.com/assets/8415124/19410299/a2ea5884-92e8-11e6-9de5-a93e89fbb80d.png)
"
254005039,5798,ghost,2016-10-15T19:18:28Z,"@NikoKrause See my original comment:
https://github.com/linuxmint/Cinnamon/commit/b2426c5b6f6163cc97d0c6a7b75914042b806799#commitcomment-5958641

I think this need to be in _reloadBookmarks:
that it's located on: https://github.com/linuxmint/Cinnamon/blob/master/js/ui/placesManager.js file.
"
254182967,5798,clefebvre,2016-10-17T11:33:22Z,"hi everyone.

@NikoKrause can you adapt the change to reflect @lestcape's last comment?

@lestcape sorry I didn't spot your comment on my commit earlier. I try to have eyes everywhere... emails, PRs, github notifications, slack internally, IRC etc... but sometimes I don't see everything. I didn't ignore you on this, I just didn't see it.

@Odyseus don't be afraid to get involved :) 
"
254184912,5798,clefebvre,2016-10-17T11:44:39Z,"@NikoKrause .. not related to this PR, but I see you're focusing a lot on the menu :) I've got something on my list if you want to have a look. Opening the menu always freezes Cinnamon momentarily.

It only freezes it for a few milliseconds, but it's enough to notice it.

If you play an HTML5 video in Firefox for instance (I use matches on http://fullmatchesandshows.com/ to test) and then repeatedly open/close the menu, you'll see the movement of the football will lag every time you open the menu.
"
254219510,5798,NikoKrause,2016-10-17T14:14:57Z,"> @NikoKrause can you adapt the change to reflect @lestcape's last comment?

I don't know what to change in _reloadBookmarks. @lestcape Could you be more specific what to change their (or even create an own pull request, which solves this problem)? I'm not very familiar with the placesManager.js file (I tried to change the labels, but that had no effect and even froze cinnamon once ;)

@clefebvre 

>  Opening the menu always freezes Cinnamon momentarily. It only freezes it for a few milliseconds, but it's enough to notice it.

I opened a video on the page you mentioned. When I open the menu, the video freezes for one or two seconds (My notebook I code on is very old). But this happens also, when I open other applets.
(With keyboard-applet, sound-applet etc. the freeze is shorter. The longest freeze I get is with the network-applet. It's almost as long as with the menu applet.) 
If I had to guess, I would say this problem is related with the `open` or the `on_paint` function in `popupMenu.js`.
"
254226430,5798,NikoKrause,2016-10-17T14:38:31Z,"With network-applet the freeze gets longer, when you show more wireless networks, i.e. when you hit the `More` button. 
"
254272058,5798,ghost,2016-10-17T17:16:32Z,"@clefebvre no problem, this is also not important to me, so you have nothing for to say sorry.

@NikoKrause can you send me your bookmark file lestcape@gmail.com?

Wharever you do a long process, Cinnamon main thread will freeze for some milliseconds, thats i think have not solution. There are of course some workaround to reduce the lag.

One place where i really considered there are a problem, it's with the updates and the menu. Like when you install a package we trigger the cinnamon menu reload, this is really a problem, when you perform an update of several packages that trigger several times the menu reload.
"
254279675,5798,ghost,2016-10-17T17:44:09Z,"@clefebvre Probably remove the boxpointer will have a positive impact in the performance, like the boxpointer it's a direct call to paint on gl.
"
254283995,5798,ghost,2016-10-17T17:59:31Z,"@NikoKrause just send me that's file that have not effect if you try to decode the label in the place manager file. I think need to be the same whatever you decode the file, in the menu or in the placemanager, just is better in the place manager because it's more short fix and because not need to be done several times but well.
"
254297226,5798,NikoKrause,2016-10-17T18:47:36Z,"@lestcape 
I'm not sure, if I understood, what you said.

> So, on my opinion will be good that the fix will be do on the source of the problem. On the function:
> _reloadBookmarks
> that it's located on: https://github.com/linuxmint/Cinnamon/blob/master/js/ui/placesManager.js

I thought you said, instead of using decodeURIComponent in the applet.js file of the menu, the decodeURIComponent should be used in the placesManager.js file? 

I don't know in which line decodeURIComponent should be added in this file.
"
254305113,5798,ghost,2016-10-17T19:16:43Z,"@NikoKrause i also don't know, this can be added where will work. For example, in this line:

 https://github.com/linuxmint/Cinnamon/blob/master/js/ui/placesManager.js#L339

You can do this:

```
        let bookmarks = decodeURIComponent(bookmarksContent).split('\n');
```

This will decode all file contents at ones, but you will need to check if this continues returning a valid file:
https://github.com/linuxmint/Cinnamon/blob/master/js/ui/placesManager.js#L359

and if this return a valid label:
https://github.com/linuxmint/Cinnamon/blob/master/js/ui/placesManager.js#L361

If this both function required an hexadecimal string, you will need to decode the string after apply this function, and this will required probably more changes to the logic... This is a code,  is not the recipe of the rotisserie chicken from my grandmother :)
"
254314099,5798,ghost,2016-10-17T19:51:54Z,"@NikoKrause the other source of this it`s from here:
https://github.com/linuxmint/Cinnamon/blob/master/js/misc/docInfo.js#L26-L30

So, probably you are doing the things right, but checking the incorrect result.

There are two source of this in the menu.
in this line:
https://github.com/linuxmint/Cinnamon/blob/master/js/misc/docInfo.js#L29
You can do this:

```
        this.uri =  decodeURIComponent(recentInfo.get_uri());
```
"
254446903,5798,Odyseus,2016-10-18T08:53:39Z,"Hello, g@ys.

@lestcape: Decoding all bookmarks at once will break bookmarks with spaces in their path. See that the immediately next **for** loop extracts the URI by doing [`let components = bookmarkLine.split(' ');`](https://github.com/linuxmint/Cinnamon/blob/master/js/ui/placesManager.js#L345). Even if the path is decoded in the correct place, it could break any of the methods that uses that URI and might even need it to be encoded (**Gio.file_new_for_uri**, **Cinnamon.util_get_label_for_uri**, **Cinnamon.util_get_icon_for_uri**, **Gio.app_info_launch_default_for_uri**, etc.). It seems to much of a risk to fix something that isn't broken. Because, as it is, it works perfectly. It just force us to use `decodeURIComponent` to display the label correctly on the menu.

@NikoKrause: There is another error displaying labels in the applications info box. Mounted devices on the **Places** category will be displayed cut down. It will display their path like this **dia/user_name/MountedDeviceLabel** instead of **/media/user_name/MountedDeviceLabel**. The error is produced by [`button.place.id.slice(16)`](https://github.com/NikoKrause/Cinnamon/blob/cf2342cbaa927d166757377a3f4b7aebc3152f60/files/usr/share/cinnamon/applets/menu%40cinnamon.org/applet.js#L1799) that assumes that all URIs start with **bookmark:file:///** (it has to cut 16 characters from the start). But some URIs start with **mount:file:///** (it has to cut only 14 characters).
"
254566829,5798,ghost,2016-10-18T16:42:27Z,"@Odyseus like i say, is not the recipe of the rotisserie chicken from my grandmother and i don't know. I only throw an idea. If this will not work in this way, not need to be in this way and thanks for search more on this...

_**Edit:**_
If you get it the logic after let components = bookmarkLine.split(' '); it used to get the first position later, _as an uri it's not the first position in the list (the first position it`s the label), nothing will happen._ **The label it's the last position in the list, so sure will be a problem.**

All function get_for_uri will work with an encode and/or decode uri as i see for now.

But you probably are right that it's better let the things as they are and only fix the problem that appear, it's more easy and you will ensure that you are not introduced more problems.
"
254797076,5798,NikoKrause,2016-10-19T12:25:40Z,"I rebased the pull request. I hope that this solution is ok.

@Odyseus 
Thanks for your explanation of the `bookmarks:file://` and `mount:file://` problem.
This problem was also mentioned here https://github.com/linuxmint/Cinnamon/issues/5595
But I didn't understand it there.

My solution for this problem only works, when the bookmarks have the structure `something-cool:file:///`. Does anybody know, if it's true for every bookmark even with `ftp` and `smb`, which are mentioned in the referenced issue report.
"
254810275,5798,Odyseus,2016-10-19T13:21:13Z,"Hello, @NikoKrause.

You could do it like this:

``` javascript
let selectedAppId = button.place.idDecoded;
if (/file:\/\//.test(selectedAppId)) // If it's an URI to a local file system.
    selectedAppId = selectedAppId.substr(selectedAppId.indexOf(':///') + 3);
else // Any other URI
    selectedAppId = selectedAppId.substr(selectedAppId.indexOf(':') + 1);
this.selectedAppDescription.set_text(selectedAppId);
```

This way, you don't have to worry about the length you have to use with `slice`. In fact, `slice` isn't needed, because it will always give you the exact string that you need/want (hopefully).
"
254811903,5798,NikoKrause,2016-10-19T13:27:28Z,"@Odyseus 
I like the `if` case. But does the `else` case ever appear? Do you know an example?
"
254819490,5798,Odyseus,2016-10-19T13:54:33Z,"If you add an ftp as a bookmark on Nemo (for example ""ftp://ftp.wayne.edu/ldp/manpages""). Its id will be **bookmark:ftp://ftp.wayne.edu/ldp/manpages**. But you don't want to get rid of the URI schema (the _ftp://_ part), that's when the **else** part removes the **bookmark:** from the string. Leaving the **selectedAppId** variable with a value of **ftp://ftp.wayne.edu/ldp/manpages**.

A bookmarked ftp will also create a _mount point_ (**mount:ftp://ftp.wayne.edu/** using the previous example) that will also be listed in the **Places** category on the menu. And in the applications box description will be displayed as **ftp://ftp.wayne.edu/**.
"
254823582,5798,Odyseus,2016-10-19T14:08:30Z,"The previous code is for use with the **Places** category. I didn't test it with the **Recent files** category. For the recent files section the code could be like this:

``` javascript
let selectedAppId = decodeURIComponent(button.file.uri);
if (/file:\/\//.test(selectedAppId)) // If it's an URI to a local file system.
    selectedAppId = selectedAppId.substr(selectedAppId.indexOf(':///') + 3);
this.selectedAppDescription.set_text(selectedAppId);
```

In this section, the **selectedAppId** variable seems to always be a _pure URI_.
"
254826944,5798,NikoKrause,2016-10-19T14:19:36Z,"Is this also a problem in the Recent files category? I thought Recent files contains only `files:///`, doesn't it?
"
254829118,5798,Odyseus,2016-10-19T14:26:51Z,"> Is this also a problem in the Recent files category? I thought Recent files contains only files:///, doesn't it?

No, not just `file:///` URIs. An opened file from an ftp will produce an URI like `ftp://ftp.wayne.edu/ldp/manpages/man-pages-2.25.tar.bz2` on the **Recent Files** category. In which case, the URI doesn't need to be modified.
"
254835733,5798,NikoKrause,2016-10-19T14:47:54Z,"Rebased again.

I hope it works now as expected :)

@Odyseus 
Waiting for your approval ;)
"
254852508,5798,Odyseus,2016-10-19T15:41:30Z,"My approval?! LOL

I just tested it and everything works like a charm. I tested Unicode characters, paths to mounted devices, bookmarks and ftps. Everything displays correctly on the application info box.
"
255101538,5798,ghost,2016-10-20T13:12:18Z,"I also like your solution. I don't know why remove ""file:///"" or ""ftp://"" from the output, but well... Maybe just preferences...
"
255780501,5798,anandrkris,2016-10-24T15:49:36Z,"Not sure this would get fixed - https://github.com/linuxmint/Cinnamon/issues/2872
@NikoKrause  - Linking it for interest :smile: 
"
255854233,5798,ghost,2016-10-24T20:20:48Z,"@anandrkris I think not...
"
13677359,1717,dalcde,2013-02-16T23:38:55Z,"Muffin seems to have built-in support for multi-row workspaces
https://github.com/autarkper/muffin/blob/master/src/core/screen.c#L86
"
13681475,1717,autarkper,2013-02-17T06:17:28Z,"@dalcde: Sure, part of all this work is to expose more of muffin's dormant functionality. Are you suggesting that there is more I could use (maybe the meta_screen_workspace_popup-\* functions)?
"
13681622,1717,dalcde,2013-02-17T06:39:51Z,"OK. I thought you reimplemented the whole thing. Turned out you used some of muffin's multi-row functions.
"
13681627,1717,autarkper,2013-02-17T06:40:49Z,"On the other hand, I see there are some potentially useful functions in there. meta_screen_calc_workspace_layout would have saved me an hour's work trying to figure out how to second-guess muffin's workspace-layout algorithm. It's a pity working with the muffin code is such a hassle (IMO).
"
13685971,1717,autarkper,2013-02-17T13:44:05Z,"Here is a screenshot of the simple workspace-shift-feedback OSD, in its current state. It remains on the screen as long as the hotkey is pressed. It will display simultaneously on all monitors. At least for the time being, it coexists with the textual workspace OSD, which overlays it.

![screenshot-screen-2013-02-17-143446](https://f.cloud.github.com/assets/750787/164968/17b504e8-7907-11e2-9722-afa45ad6a30f.png)

Update 2013-03-31: The screenshot is outdated, see below.
"
13686267,1717,gauravjuvekar,2013-02-17T14:05:48Z,"Idea. How about showing the contents of the workspace in the OSD(like alt-tab preview).
Note:One problem this might cause is that it will show the OSD in the preview of the current workspace causing an infinite recursion.
"
13686672,1717,autarkper,2013-02-17T14:31:25Z,"@gauravjuvekar : Those are two good ideas for the medium term. For now, I'm satisfied to have it working. I'm not sure about full-fledged workspace previews, though, mainly due to performance concerns; maybe just outlining the windows could be enough.
"
13687660,1717,gauravjuvekar,2013-02-17T15:40:49Z,"@autarkper 

> mainly due to performance concerns

Don't know what those could be. Expo currently uses it continuously.
"
13699720,1717,autarkper,2013-02-17T23:01:04Z,"@gauravjuvekar: Apart from performance, which may well be a non-issue, there is the question of what to do with workspaces consisting of more than one monitor - should we do it the elaborate way like Expo, or maybe have different workspace previews for each monitor, each showing just the windows belonging to that monitor. And yet, the previews will be so small that it is going to be very difficult to tell different applications apart, so outlines would probably be sufficient.
"
13707868,1717,gauravjuvekar,2013-02-18T06:14:38Z,"@autarkper 

> workspaces consisting of more than one monitor

What do you mean. One workspace spread across more than one monitor(is it even possible?). I doubt anyone would do that. Generally, one monitor would contain an entire workspace.

>  should we do it the elaborate way like Expo

Sorry, I don't know how expo does it.

> And yet, the previews will be so small that it is going to be very difficult to tell different applications apart

Agreed, but I just had a new idea about that.

How about we show the icons of open applications in each workspace in the respective workspace of the OSD.
Some what like

![Untitled](https://f.cloud.github.com/assets/2271906/166220/dea6c3b8-7991-11e2-8548-93704d6d7afe.png)

That way, we don't have to worry about performance, the icons would be easily recognizable and it would'n't cause the infinite recursion that I was worried about.

Also, I think you are making the OSD too small. How about one workspace in the OSD be as large as the icon for a program in alt-tab.
"
13708652,1717,autarkper,2013-02-18T06:56:22Z,"I can very well envision many different OSD styles that could be user-selectable and even open for extensions, but that is not going to be the focus of this development for the time being. My aim for now is to have a simple, not too intrusive or elaborate solution that fulfills the basic purpose of telling you where you are in the grid after switching workspaces. 

@gauravjuvekar: I'm afraid that having a larger OSD popup would obscure the desktop and make it more difficult to quickly decide if you want to stay or switch to another one.
"
13709433,1717,gauravjuvekar,2013-02-18T07:32:03Z,"Agreed
"
15696803,1717,autarkper,2013-03-31T19:46:00Z,"![screenshot-screen-2013-03-31-213908](https://f.cloud.github.com/assets/750787/322271/21ca23a0-9a3b-11e2-8142-456a5d0127c8.jpg)
I have implemented a simple mini-Expo workspace grid. My performance concerns seem to have been unfounded. I have worked around the multiple-monitor issue by displaying only the windows belonging to each monitor on each monitor.
"
19547019,1717,MrMitch,2013-06-17T14:06:34Z,"this is very nice! definitely one of the key missing features in cinnamon ATM
key up the good work
"
19850749,1717,contribucious,2013-06-22T04:07:29Z,"Clearly +1! Already sounds good! :)

By the way, if not better looking by default (cf. your screenshot autarkper), will you allow us to theme that OSD?
Wanted to be more like OS X for this particular thing. See http://i.imgur.com/jCgm8al.jpg
In fact, it'll be more like that with your ""windows preview"" included in it: http://i.imgur.com/lXCOqM3.png
(except that the one selected will have, like yours, a border around it, as we have already windows shown in it, so the solution of the first imgur link is of course not possible [white square for the selected one]).
"
19852098,1717,autarkper,2013-06-22T06:30:09Z,"Thanks for the encouragement,  @MrMitch and @contribucious! 

Re theming, I'm personally more or less done with this pull request, so that would have to be decided by the team.
"
19852229,1717,contribucious,2013-06-22T06:43:44Z,"OK, no problem mate! Thanks again anyway for your amazing work on that!
"
23031079,1717,Frogging101,2013-08-21T16:40:16Z,"+1

I support this completely. On Ubuntu I regularly used multiple rows of workspaces; it makes working with 4 workspaces so much easier.
"
23176226,1717,ManIVIctorious,2013-08-23T16:51:53Z,"+1; would like to see this too
"
24939357,1717,Kipperlenny,2013-09-23T17:55:04Z,"+1
"
27026122,1717,Asheboy,2013-10-24T20:17:42Z,"+1
"
39137553,1717,jclevesque,2014-03-31T20:29:56Z,"+1 
"
39138497,1717,ManIVIctorious,2014-03-31T20:37:25Z,"Is there any chance this gets merged till 2.2?
It is one of the most requested features of the people i know and i really would like to see a real 2D workspace grid in Cinnamon too.
"
41464851,1717,astokes,2014-04-26T09:59:42Z,"I've gradually become used to Cinnamon, in most respects except the loss of my workspace grid.  On both Windows and Linux I used to set up one column for general work plus one column for each concurrent project (typically three) and three rows: the top row was for project-specific reference material, the middle row was the primary work area, and the bottom row was for debugging and test.  (I should add I'm also dual-head with one screen landscape and one screen portrait, so this needs to work dual-head.) 

For my usage pattern, loss of this particular facility is a setback that roughly cancels out every other Cinnamon improvement added together.  -1 to 99 other features and +99 to this feature alone.  

P.S. I should make the relationships between the project columns slightly more specific.  As an example, to develop for Pebble watch, I could easily have a server-side column, a column for firmware running on the phone, and a column for firmware running on the watch, and maybe even a cloud-side column to support the server.  I really do need to move horizontally from cloud debug to server debug to phone debug to watch debug, etc. to be fully efficient. 

PP.S. Yes, and I always wanted my grid to wrap around like a torus, so I could go directly from debug row (3) to documentation row (1).  Horizontal wrap was less desired.  I suspect the hard edges would prove more useful helping me remember where I was than any keystrokes I saved on navigating over the flip between column 4 and column 1.  
"
42584198,1717,wedeluxe,2014-05-08T18:07:37Z,"I totally agree to what astokes said.

Except for one thing. I would love to also see horizontal wrap in the grid. At best, make it configurable.
     [x] vertical wrap
     [x] horizontal wrap

Generally, all I can say is please merge in this pull request. A configurable workspace grid is a quite fundamental feature. A Must-Have for each and every desktop environment.
"
46940272,1717,autarkper,2014-06-24T07:34:30Z,"IMO, very old pull requests such as this one, which have been neglected for a long time and no longer can be merged and expected to integrate well in the current code base, should be automatically closed after some time.
"
46955845,1717,autarkper,2014-06-24T10:36:07Z,"Thanks, Clem!
"
46978077,1717,MrMitch,2014-06-24T14:29:33Z,"so are we saying goodbye to this feature for now / forever ?
"
47076880,1717,autarkper,2014-06-25T09:04:25Z,"> so are we saying goodbye to this feature for now / forever ?

Anybody who takes up the challenge after me will have to deal with the fundamental problem of how to make the feature compatible with the Ctrl+Alt+Up/Down keyboard shortcuts that Cinnamon uses to activate Expo and Scale, respectively. And then there is the issue of adapting Expo to present the grid according to the chosen number of workspace rows.

I had both of those issues solved, and a few others, unfortunately at the cost of quite a lot of added complexity. I suppose it was the massive amount of changes in many places that made this pull request fail to be considered for merging.
"
56457980,1717,calestyo,2014-09-22T23:17:55Z,"Well even if there's now a solution for this,... why not put the same in the default workspace applet?
I mean things shouldn't really clutter up that much, that there are different applets for more or less the same things.

What I want to see from a workspace switcher applet is basically the following:
- configurable how many columns/rows
- I do not want multiples that are on a workspace A, to be visible on other workspace (i.e. as it used/uses to be in GNOME classic, where windows became visible on the workspaces left/right/below/on top when they left the screen area. Some people may want this, but it should be configurable then.
- I would like to see a tiny preview on which space of a workspace is used up by windows... e.g. as we have it with the GNOME classic workspace switcher applet... that proved to be quite usable.
"
16714542,1888,mtwebster,2013-04-21T01:53:50Z,"Yeah.. I added a cinnamon3d command to avoid that.

I'm not really sure what the answer is yet - maybe rename the cinnamon binary, and have a cinnamon script instead of cinnamon3d.
"
16774471,1888,AlbertJP,2013-04-22T09:57:55Z,"@mtwebster Can't we set that environment variable with g_setenv in the C code of cinnamon, then leave out the cinnamon3d file?
"
16774524,1888,mtwebster,2013-04-22T09:59:05Z,"Tried that initially, does not work.  I'm not entirely sure why.
"
17004056,1888,robin850,2013-04-25T12:37:33Z,"Any news on this please?
"
17004319,1888,dalcde,2013-04-25T12:43:56Z,"This is now accepted as an ""official"" (and working) patch for GNOME 3.8 compatibility, but will not be merged into the master branch yet. So if you're distro has GNOME 3.8 its cinnamon should contain this patch.

btw, this needs rebasing :(
"
17004514,1888,robin850,2013-04-25T12:48:01Z,"Actually, Arch Linux has this patch for the `cinnamon` package but it doesn't work on my machine. I was hoping there could be a missing patch on this pull request that fix a known issue with Gnome 3.8 because I don't why Cinnamon doesn't start.
"
17004902,1888,AlbertJP,2013-04-25T12:55:40Z,"@robin850 I think you'd better check that with the Arch package maintainers first, they might know what's missing for you.
"
17005097,1888,robin850,2013-04-25T12:59:31Z,"Yes, you are right, thanks @AlbertJP :) 
"
17005130,1888,mtwebster,2013-04-25T13:00:11Z,"I'll rebase a bit later
"
17271910,1888,dmashal,2013-05-01T07:45:03Z,"Confirmed this fixes a majority of issues on Fedora 19  on top of MATE with lightdm.

Haven't tested with gdm.

https://bugzilla.redhat.com/show_bug.cgi?id=920320
"
17391144,1888,leigh123linux,2013-05-03T12:13:35Z,"@mtwebster 

Hi,

cinnamon-menu-editor is also broken by the 3.8 changes.
/usr/lib/cinnamon-menu-editor/cme/MainWindow.py  uses gnome-desktop-item-edit (gnome-panel is now obsolete).

Leigh
"
17391931,1888,mtwebster,2013-05-03T12:37:16Z,"@leigh123linux yeah we noticed that, I don't think anyone ever realized we were relying on it for this... once 1.8 drops (soon) we'll either make a replacement tool for the menu editor or snag it right out of gnome-panel and include it in Cinnamon.
"
17393736,1888,gauravjuvekar,2013-05-03T13:24:27Z,"@mtwebster Wouldn't it be better if we included it in cinnamon-settings?
"
17393861,1888,mtwebster,2013-05-03T13:27:32Z,"@gauravjuvekar it's not the menu editor that needs replacing (that's already part of cinnamon) it's the little popup dialog box that opens when you edit a menu entry that is a separate program and part of gnome-panel.
"
17401290,1888,AlbertJP,2013-05-03T15:40:11Z,"@leigh123linux I already thought we would have to get gnome-desktop-item-edit into Cinnamon, but it appears to be tied into gnome-panel too much for just copying the .c file to here. We've already had this issue with an Ubuntu user who hated gnome classic and had therefore no gnome-panel installed.
"
17636121,1888,mtwebster,2013-05-08T21:46:04Z,"Rebased to 1.8.2
"
17636254,1888,dmashal,2013-05-08T21:48:09Z,"@mtwebster :+1: 
"
17672592,1888,mtwebster,2013-05-09T16:02:49Z,"Rebased, fixed notifications
"
17673088,1888,satanas,2013-05-09T16:11:17Z,"Great job!
"
17691130,1888,timvandermeij,2013-05-09T21:29:54Z,"Nice work! Hope this gets merged soon so we have notifications again :)
"
18169160,1888,leigh123linux,2013-05-20T20:04:16Z,"Is Clem going to replace gnome-settings-daemon?, if not these changes to OSD will need porting to cinnamon.

https://bugzilla.gnome.org/show_bug.cgi?id=695021

https://git.gnome.org/browse/gnome-settings-daemon/commit/?h=gnome-3-8&id=78c7cbfea942d2ef0eba3ec7e3745f4c615934dd

Here's the initial gnome-shell commit.

https://git.gnome.org/browse/gnome-shell/commit/?h=gnome-3-8&id=19533f87e35764af384e4e47962859e016355cfb
"
18433105,1888,nardholio,2013-05-24T22:17:59Z,"Merge please!
"
18455631,1888,dmashal,2013-05-25T23:30:50Z,"Yes, what is the hold up @clefebvre ?
"
18455693,1888,leigh123linux,2013-05-25T23:37:27Z,"@dmashal 

Clem will start merging soon.

[14:20:02] <*clem> leigh123linux: you know when we open master to 1.9 on 1st June, we also open it to half-cooked new features...
"
18456135,1888,dmashal,2013-05-26T00:28:28Z,"cool
"
22447930,1888,mtwebster,2013-08-10T21:38:04Z,"This patch should be unnecessary now with the current state of Cinnamon
"
22454404,1888,vdcow,2013-08-11T08:30:08Z,"What about background issue? It seems that backgroundManager is still required for Gnome-3.8 users. 
"
22454816,1888,leigh123linux,2013-08-11T09:12:11Z,"@vovka-korovka  I don't need backgroundmanager with gnome-3.9.x

http://pkgs.fedoraproject.org/cgit/cinnamon.git/tree/

Did you remember to revert the nemo background patch?

http://pkgs.fedoraproject.org/cgit/nemo.git/tree/remove-desktop-background.patch?h=f19

```
$ rpm -qa nemo\* cinnamon\* cjs\* |sort
cinnamon-1.9.2-0.15.git19b4b43.fc20.x86_64
cinnamon-control-center-1.9.0-0.8.git7d365d0.fc20.x86_64
cinnamon-control-center-filesystem-1.9.0-0.8.git7d365d0.fc20.x86_64
cinnamon-screensaver-1.8.0-4.fc20.x86_64
cinnamon-session-1.0.0-0.8.git58710ea.fc20.x86_64
cinnamon-settings-daemon-1.0.0-0.9.git50787a1.fc20.x86_64
cinnamon-settings-daemon-devel-1.0.0-0.9.git50787a1.fc20.x86_64
cjs-1.34.0-0.3.gitfb472ad.fc20.x86_64
cjs-devel-1.34.0-0.3.gitfb472ad.fc20.x86_64
nemo-1.8.4-5.fc20.x86_64
nemo-extensions-1.8.4-5.fc20.x86_64
```

```
$ rpm -qa *\gnome\* gtk\* |sort
desktop-backgrounds-gnome-19.0.0-3.fc20.noarch
gnome-abrt-0.3.0-3.fc20.x86_64
gnome-backgrounds-3.8.1-2.fc20.noarch
gnome-bluetooth-3.9.3-2.fc20.x86_64
gnome-bluetooth-libs-3.9.3-2.fc20.x86_64
gnome-bluetooth-libs-devel-3.9.3-2.fc20.x86_64
gnome-boxes-3.9.3-4.fc20.x86_64
gnome-calculator-3.9.4-2.fc20.x86_64
gnome-clocks-3.9.3-2.fc20.x86_64
gnome-color-manager-3.8.2-3.fc20.x86_64
gnome-common-3.7.4-4.fc20.noarch
gnome-contacts-3.9.5-2.fc20.x86_64
gnome-desktop3-3.9.5-1.fc20.x86_64
gnome-desktop3-devel-3.9.5-1.fc20.x86_64
gnome-dictionary-3.8.0-1.fc20.x86_64
gnome-disk-utility-3.8.2-2.fc20.x86_64
gnome-documents-3.9.4-2.fc20.x86_64
gnome-font-viewer-3.8.0-2.fc20.x86_64
gnome-getting-started-docs-3.8.3-2.fc20.noarch
gnome-icon-theme-3.9.5-1.fc20.noarch
gnome-icon-theme-extras-3.6.2-3.fc20.noarch
gnome-icon-theme-legacy-3.9.5-1.fc20.noarch
gnome-icon-theme-symbolic-3.9.5-1.fc20.noarch
gnome-initial-setup-0.12-5.fc20.x86_64
gnome-js-common-0.1.2-8.fc20.noarch
gnome-keyring-3.9.1-3.fc20.x86_64
gnome-keyring-pam-3.9.1-3.fc20.x86_64
gnome-menus-3.8.0-3.fc20.x86_64
gnome-menus-devel-3.8.0-3.fc20.x86_64
gnome-mplayer-1.0.8-2.fc20.x86_64
gnome-mplayer-common-1.0.8-2.fc20.x86_64
gnome-online-accounts-3.9.4-2.fc20.x86_64
gnome-online-miners-3.9.4-4.fc20.x86_64
gnome-packagekit-3.8.2-2.fc20.x86_64
gnome-photos-3.9.5.1-1.fc20.x86_64
gnome-python2-2.28.1-13.fc20.x86_64
gnome-python2-bonobo-2.28.1-13.fc20.x86_64
gnome-python2-canvas-2.28.1-13.fc20.x86_64
gnome-python2-gconf-2.28.1-13.fc20.x86_64
gnome-python2-gnome-2.28.1-13.fc20.x86_64
gnome-python2-gnomevfs-2.28.1-13.fc20.x86_64
gnome-screenshot-3.9.4-2.fc20.x86_64
gnome-session-3.9.5-1.fc20.x86_64
gnome-session-xsession-3.9.5-1.fc20.x86_64
gnome-settings-daemon-3.9.5-1.fc20.x86_64
gnome-settings-daemon-updates-3.9.5-1.fc20.x86_64
gnome-shell-3.9.5-2.fc20.x86_64
gnome-system-log-3.9.3-2.fc20.x86_64
gnome-system-monitor-3.9.5-1.fc20.x86_64
gnome-terminal-3.9.90-1.fc20.x86_64
gnome-themes-2.32.0-11.fc20.noarch
gnome-themes-legacy-2.32.0-11.fc20.noarch
gnome-themes-standard-3.9.3-4.fc20.x86_64
gnome-user-docs-3.8.2-2.fc20.noarch
gnome-vfs2-2.24.4-13.fc20.x86_64
gnome-video-effects-0.4.0-6.fc20.noarch
gnome-weather-3.9.5-1.fc20.x86_64
gtk2-2.24.20-2.fc20.x86_64
gtk2-devel-2.24.20-2.fc20.x86_64
gtk2-engines-2.20.2-7.fc20.x86_64
gtk3-3.9.10-1.fc20.x86_64
gtk3-devel-3.9.10-1.fc20.x86_64
gtk-doc-1.19-3.fc20.noarch
gtkhtml3-4.6.6-2.fc20.x86_64
gtkmm24-2.24.4-2.fc20.x86_64
gtkmm30-3.9.10-1.fc20.x86_64
gtksourceview2-2.11.2-16.fc20.x86_64
gtksourceview3-3.9.4-1.fc20.x86_64
gtk-vnc2-0.5.2-4.fc20.x86_64
libgnome-2.32.1-7.fc20.x86_64
libgnomecanvas-2.30.3-7.fc20.x86_64
libgnomekbd-3.6.0-3.fc20.x86_64
libgnomekbd-devel-3.6.0-3.fc20.x86_64
libgnome-keyring-3.9.1-2.fc20.x86_64
libgnome-keyring-devel-3.9.1-2.fc20.x86_64
libgnomeui-2.24.5-7.fc20.x86_64
polkit-gnome-0.105-5.fc20.x86_64
schroedinger-cat-backgrounds-gnome-18.91.0-2.fc20.noarch
```
"
22499956,1888,vdcow,2013-08-12T15:08:30Z,"Thank you for your notice, @leigh123linux . I saw background issue in c-s-d TODO list and decided that issue is still unresolved. I rebuilt packages without background manager patches and all works as expected. 
"
220771667,5324,muzena,2016-05-21T10:59:27Z,"@collinss 
I think, it will be usefule if it possible that widgets have auto update, or at least notification to notify user for available widget updates or maybe this all update integrated through update manager.
I have installed a few additional desklet and extension and usually I notice that they have update after 2-4 weeks after new widget release.
"
220781765,5324,collinss,2016-05-21T14:50:20Z,"@muzena This pr doesn't effect installation/upgrade of applets in any way. I suppose it could, but I think it would be better as a separate pull request. It would be a handy feature though.
"
223677291,5324,muzena,2016-06-03T19:49:57Z,"@collinss ok i will then copy this post as a separate pull request.
"
237381733,5324,ghost,2016-08-03T21:34:46Z,"@collinss I like a lot what you are doing here. 

I will request you if you can, do not call the cinnamon settings directly from the command line as is how actually occurs inside the applet, desklet class... Instead you can use an instance of an object and store it on Main. Then, you can call this object and this object will call the spaw command line. In that way, some cinnamon extensions can override the object, injecting some code, and redirect the settings call to another provider, for example an applet.
"
237570899,5324,collinss,2016-08-04T14:31:13Z,"@lestcape What do you mean by calling from the command line? Are you talking about when you select configure from the context menu? If so, you can already override it from the applet by defining a function called `configureApplet` in your applet object. Also, I don't know why you would store it in main unless you wanted to override it from something other than the applet itself, which IMO is a VERY bad idea. Either way, this would probably be best for a separate pr.
"
237616680,5324,ghost,2016-08-04T17:02:32Z,"@collinss yes. What i want it's override the call of cinnamon setting applet page from an external applet (a setting applet). This is override all calls from applets and desklets  to the cinnamon-settings, NOT my own applet. I don't know why you say it's a bad idea, because anyway this is optional and only if you want to install the setting applet. In fact, what i considered a bad idea it's handle different programming language, and different applications for a thing that can be done inside cjs and in the same application. Of course, this is also not perfect and i agree that's a good idea have an only one app to handle all settings, but in my opinion will be possible implement a virtual setting over dbus and then create a client cjs applet. That's clear it's more hard, but not a VERY bad idea.

Benefits:
- Speed.
- Native drag and drop.
- Reduce the numbers of programming languages.
- Provide a native api to create/modify the settings on fly.
- Native theme handling using css.

Anyway you probably have right that's could be better from a separate pr.
Thanks.
"
237621754,5324,ghost,2016-08-04T17:20:59Z,"Also right now i can iterate over all applets and desklet to search the configuration menu option, remove it and then add my own menu option in the same place. That could happend in the initialization of my applet and when another applet or desklet was added. Just this is not a fast way...
"
237647320,5324,collinss,2016-08-04T18:49:22Z,"@lestcape Why would you want to do this? If there is something missing from the settings api, we can add it. I'm just not sure why anyone would ever want to install such an applet. I can't think of a single good reason for it, and a lot of bad ones.

Think about it from a maintenance point of view. Such an applet would have to be updated regularly and would frequently break, whereas the api stays backward compatible, even with an extensive pr such as this one.

Then you have the performance issues - Clutter on js is much slower and resource intensive than Gtk on python. Add to that the fact that Cinnamon and it's applets currently run in a single thread, which makes it much more likely to cause crashes, blocking, and other issues.

From a user perspective, the implementation in this pr matches most of cinnamon settings in terms of style. Doing this in clutter definitely would not. Then you have the widgets which exist in Gtk, but not in Clutter. There is a lot of work that has been put into those widgets over many years to make them functional, stable, and seemless. You would not have any of that in Clutter, so such an implementation would be much more buggy.

From a programming perspective, python/Gtk is much easier to write and maintain than js/Clutter.

You are welcome to open a feature request or discuss it on IRC, but I'm guessing you will get a similar response from @clefebvre and @mtwebster 
"
237650699,5324,ghost,2016-08-04T19:01:13Z,"@collinss If what you say it's true, that i think is only a partially true... I will ask you, why you don't use Mate? Cinnamon API is over cjs, then as your own words is:  ""**much more buggy**"",  js is ""**much slower**"", ""**programming perspective, python/Gtk is much easier to write and maintain than js/Clutter**"",  ""**applet would have to be updated regularly and would frequently break**"". Are you really say all that? Because all that you are saying can be apply for Cinnamon in general... Anyway, you are not complete wrong, but you are in the wrong place, i think.
"
237670127,5324,collinss,2016-08-04T20:15:51Z,"The Cinnamon applet api is not as buggy because it also has had years to mature. Also, the more I work with Cinnamon, the more I realize that clutter was probably not best choice for the ui, but I don't use Cinnamon for the speed, or else I _would_ use Mate or XFCE or something.

If I were the one making the decision right now, I would probably go with Gtk for the ui. Gtk is a much more mature toolkit, and is much more well developed, used and supported. However, I'm not making that decision right now, and so I use what's there already. I'm not saying that Clutter is horrible, and that Cinnamon is unusably slow, but if we already use a toolkit for it that's better, why bother to switch to something that's not quite as good and ~~could potentially~~ would likely make things slower and more buggy unless there is something to be gained that would outweigh the risks/losses?

As for what I said about it breaking constantly, the problem is that it would be 3rd party, which means that any time someone makes a change to the internal workings, it could potentially break the applet, whereas all Cinnamon components would be updated to support the change. As an example, many of the releases (at least recently), have included some new settings types. When that happens, the js and python sides of the api are both updated in the same pr, but a 3rd party applet wouldn't get the same treatment. In addition, you have people using multiple versions of Cinnamon, and would have to support all of them with a 3rd party applet.

p.s. It's clutter that's slower - not js. I believe this is due to clutter being a 3d toolkit rather than a 2d one like Gtk.
"
237672729,5324,ghost,2016-08-04T20:25:58Z,"@collinss now i can agree with you, but really i like more clutter than gtk, probably because clutter is completed over GL.

You don't test the speed difference. You don't know how faster could be the settings for applets and desklet inside clutter (because this mean inside the same application and mean a direct call from the same api).

I have warranty, because i tested it. If i take all time from the click to the complete displayed settings, from the configurable menu applet,  on clutter is at less 5 time more faster than the current cinnamon-settings implementation. I don't say your new pr.

Configurable Menu have the bigger setting configuration of all cinnamon extensions.

All this was tested with:
https://github.com/lestcape/Spices-Menu this applet have the ability for render the settings.

Anyway this is not all. Probably, the color chooser is the most difficult Gtk component that the cinnamon settings have. This no mean that can not be create a similar one in clutter:
https://github.com/lestcape/Color-Chooser What can not be created then?
"
237681809,5324,collinss,2016-08-04T20:59:33Z,"I think you're talking about a different speed than I am. Of course a native call is going to be faster than a dbus one, but everything you add to the clutter stage is going to use more resources. It will slow down Cinnamon itself, even if it's just a little. For most users that will not be a problem, but for older hardware, it could be.

Also, I don't think the little extra speed boost in updating settings is worth the potential loss in performance elsewhere. It's already fairly fast right now, and changing settings is something that isn't usually done on a daily basis.

As for the other widgets, I wasn't saying they couldn't be created, only that it would take a lot of work and years of extensive use and testing before they reach the level of maturity that Gtk widgets have.
"
237687169,5324,ghost,2016-08-04T21:20:54Z,"@collinss yes, i agree now with you again, but again: The cinnamon API is **clutter** is **not** Gtk and all gnome works is for **clutter**, **not** for Gtk. Cinnamon is a fork of Gnome, **not** a fork of Mate and all this is a fact. Cinnamon it's for take risk, because it's: **""...built from modern technology and introducing brand new innovative features...""**, not for traditional GUI as it's Gtk. And as you know the last words are not mine..
"
237697037,5324,ghost,2016-08-04T22:01:24Z,"@collinss don't worried, i has not plan to create a pr for change the cinnamon settings as before. I desisted of it a long time ago.... In all case, only a pr to provide a way for intercept a setting call and then use it in a 3rd party extension. In this way, we can all be happy. If this is interesting for users or not never was a question in this case, because is not an imposition, because is optional. Users can decide later what they consider better for his day to day usage.
"
237701591,5324,ghost,2016-08-04T22:23:22Z,"For record propose only, cinnamon-settings is not slow because of DBus, it's slow because not have a bidirectional Dbus connection. 

DBus it's pretty fast!!!!!

The applet to Cinnamon-Settings connections not exist (only exist the settings to applet), but the most time losted it's because need to load all module at once(really a pre-load, because if perform full load would then be impossible the usage). After a pre-load it's when is decide the module to be loaded, a lot of time and resource was lost to open the settings applet page, loading the main page and pre-loading all modules.

But this is not all, python create a context to launch the GTK GUI on the initialization and this is slow, and take a big time. If I'm a cinnamon user and i click some thing i want a faster response, i don't care why is slow and all technical complications, the reason is not important, the fact it's. 

That's without taking in account the time to prepare the spaw context and all that is involved when you request open a new application from another.
"
238091757,5324,ghost,2016-08-07T16:21:37Z,"@collinss maybe this is interesting to you. You can create a DBus signal in cinnamonDBus: https://github.com/linuxmint/Cinnamon/blob/master/js/ui/cinnamonDBus.js

This signal will be emitted when a xlet property changed, and will provide the uuid of the XLet, the property id and the new value (maybe also the old one).

Then, in the python side you can capture the signal instead (or using both mechanism, with a priority) of monitor the json file: https://github.com/linuxmint/Cinnamon/blob/master/files/usr/share/cinnamon/cinnamon-settings/bin/XletSettingsWidgets.py#L86

So, in that way, cinnamon-settings will be informed of a settings changed, several time more faster than monitor a file and not need to wait some milliseconds: https://github.com/linuxmint/Cinnamon/blob/master/files/usr/share/cinnamon/cinnamon-settings/bin/XletSettingsWidgets.py#L66  

Then you will have a bidirectional Dbus connection. This mean a faster communication between the cjs and python. This also mean, an improve like this: ""**settings.js was mostly rewritten to simplify the code and remove the use of object.watch(). According to the MDN website, that function is costly in resources and should be used for debugging purposes only. (No tests have actually been performed to verify if there are any significant gains as of yet.)**""
"
238241697,5324,collinss,2016-08-08T13:44:15Z,"@lestcape I was aware of the ability to send a signal over dbus to speed up performance, however, I didn't implement it because I don't really see a use case where it is very important. When changing a setting from the settings page, you would expect the xlet to be updated immediately. However, it is unlikely that you would encounter a situation where changing the setting from the applet would require an immediate change in the settings page (why not just change it in the settings page then). Also, such a solution wouldn't address the situation where you have multiple instances of the settings page open, or when you change the file manually. We could certainly handle the first one with yet more bloat, but due to the possibility of a manual file change we would still need the file monitor, and quite frankly, I don't see the point. The delay is not significant enough, and IMO it doesn't serve a useful purpose. If there comes a time where this is actually needed, we can always add the necessary dbus calls later, but it's worked fine without this feature for a long time, and I don't think we need to add it now.
"
238260548,5324,ghost,2016-08-08T14:46:47Z,"I know you are right....

The situation occurs when you call several bidirectional properties one behind another. Some of then will lost. Thats for example when you have several profiles like configurable menu and you try to change from one configuration to another,  you can not set all values of the new configuration....

But of course anywhere that demand a lot usage of the settings json file.
"
238276747,5324,ghost,2016-08-08T15:38:13Z,"This is exactly why for me the cinnamon settings is not a useful feature, because what i need to do it's not common in first place, will stock with the settings limitation in the second or at last will be a VERY bad idea. How i need to go in this direction, what i found in cinnamon settings is more like a problem than a solution. Also i create a pr 2 years ago with a patch for the bidirectional connection, but was never merged. Really do you think that this is true? ""**If there is something missing from the settings api, we can add it.**"" Sorry, but not...
"
238410782,5324,ghost,2016-08-08T23:40:04Z,"For record: https://github.com/linuxmint/Cinnamon/pull/3368

This is related with one case where the current implementation fail: https://github.com/lestcape/Configurable-Menu/issues/77#issuecomment-109170188

This is the reason of why Configurable Menu don't lost properties (or at less only exporadically):
https://github.com/lestcape/Configurable-Menu/blob/master/configurableMenu%40lestcape/applet.js#L2004

As we can see, this is a workaround that delayed the execution 1500 milliseconds, to give a time to the slow cinnamon-settings, for perform the update, and then read the properties again.

**Note:** The solution of multi-instance, is just also send the instance id in the dbus signal.
"
238446236,5324,ghost,2016-08-09T03:49:53Z,"@collinss you can see more-less the speed of cjs rendering the settings here: 

https://youtu.be/beIdxqtEmo0

Please take the start time after close the menu in both cases...

You will see what i say....
"
238451231,5324,JosephMcc,2016-08-09T04:36:30Z,"That may be faster but it sure is ugly. There is no way I would want to redo all of the settings widgets in St/Clutter. Not when we have the convenience of so many useful widgets already in gtk. I would also point out that accessing the settings with this PR should be faster since it no longer goes through the main cinnamon-settings interface to get to the settings. One of the slowest parts of opening cinnamon-settings is the initial icon view and that is completely bypassed in this PR.

All of the cinnamon settings are done in gtk so I don't see how it doesn't make sense for these to be as well. I agree with every point @collinss made. I personally feel like we would be better off in the long run looking at moving pieces out of cinnamons main thread instead of adding even more to it.
"
238578286,5324,ghost,2016-08-09T14:51:29Z,"@JosephMcc of course it's ugly, because have not an style yet. If you are against clutter, the same it's for you, go then to other place where the api will not be Clutter. Or maybe, I'm is who are in a wrong place and i need to go from gnome shell where the devs at less love what they create. 

Cinnamon is probably one of the most popular desktops because of Clutter, not because of Gtk... But i can understand, that if you are not the Clutter dev, you could forget that clutter is really new and in development and try to go over a more stable Api. That's what people do always. This is why GNU linux is not the most used O.S.

Anyway, as i say, this is not an intention of change the cinnamon-settings, it's an intention of not used in my desktop and my applications other unrelated application, that have a lot of limitations, are slow and also have unresolved bugs. Because what i report here, it's a bug of cinnamon-settings, that occurs only in some context, it's not just slow, it's a bug of more than two years, with also a patch that not was merged, and apparently will continue and will not be fixed.

I have not much more to say... Really thanks for your comments... But i don't care any personal opinions of my applications, is they are made by people that not take on account my opinion about his applications and also are his application the cause that i need to create my applications...

Regards...
"
238609666,5324,JosephMcc,2016-08-09T16:29:37Z,"> @JosephMcc of course it's ugly, because have not an style yet. If you are against clutter, the same it's for you, go then to other place where the api will not be Clutter. Or maybe, I'm is who are in a wrong place and i need to go from gnome shell where the devs at less love what they create.

Sorry if you took the ""ugly"" comment as rude. It was not meant to be anything against you. St doesn't currently have the support for the widgets and styling you would need to create nice looking settings. That isn't your fault. The point is that it would huge amounts of work to do that which seems a bit of wasted time when Gtk already gives us everything we need.

> Cinnamon is probably one of the most popular desktops because of Clutter, not because of Gtk... But i can understand, that if you are not the Clutter dev, you could forget that clutter is really new and in development and try to go over a more stable Api. That's what people do always. This is why GNU linux is not the most used O.S.

I don't think Cinnamon is popular because it uses Clutter/St for some interface elements. Clutter is not that new either and is based on an even older toolkit. I also have serious doubts about the future of the standalone clutter/cogl libraries. The gnome devs have moved these to directly being a part of shell/mutter and it remains to be seen how much development/improvements these libraries will see outside of their embedded versions. Pair that with the fact that they plan to add clutter like capabilities to Gtk (a proper scene graph, OpenGL rendering) and it makes Gtk look more and more like the better option.
"
238623331,5324,ghost,2016-08-09T17:15:08Z,"@JosephMcc ok, Clear i know it's hard and I mention that. Of course i know that Gtk also have this components. My applets and desklet's are not in Gtk and the settings of my extension are a part of my extension, more than a part of the settings. If the current cinnamon-settings implementation won't resolve the problems that i have, what i can do? Please give me a better choice, or do you think that cinnamon-settings it's the only solution in the world, and is perfectly?

What you try to said me? I'm wrong trying to create cinnamon extensions, applets or desklets? This because they used Clutter and probably the Clutter core will be merged with Gtk, and the standalone implementation of Clutter could disappear?

If this is what you try to said, please said it...!! Not matter, this is clear a good reason, and i will agree instantaneously with you. What you can not do, it's use the same arguments for your convenience. As said: Create applet, desklets and extensions for cinnamon is good (not matter if they are over clutter), but override our work in cinnamon-settings is not, because we are like gods and there are not a better or a different way to do what we create...

If the reason that you defend it's like you said... Ok then, please alert other cinnamon devs and if you can, also create a post in segment fault. They need to know that create cinnamon extensions it's not useful, because the extensions run in the main thread and because will be better create a cinnamon extensions in Gtk as a part of the settings that all this work for try to imitate Gtk components without styling. In fact, Gtk components can be embedded in a clutter context to be displayed...

In that case and in my opinion, cinnamon will disappear... Who will want to use it in this condition...?
"
238640186,5324,JosephMcc,2016-08-09T18:09:52Z,"@lestcape I'm have to say I'm struggling  a bit due to the obvious language barrier and I sometimes have a hard time deciphering exactly what your points are.

That being said I'm not sure there is much point in keeping on with this line of conversation here. You have already several times told people they should go somewhere else because they disagree with you. You're responses are also overly dramatic and taking things to the extreme. My comments on Clutters future were just thoughts. Things to think about. Right now it means nothing and maybe it will be a non issue moving forward. I don't know and probably no else does either.

The fact that all of the main Cinnamon components run in a single thread is an issue/limitation that has always been there. You know that. It would be silly for us not to consider ways we might improve on that.

As far as cinnamon settings being the only solution or a perfect solution, I never said that either. Stop putting words in my mouth. Right now it is the solution we have and it works decently. Does that mean it couldn't be better? Of course not. I just disagree that writing them in clutter/st is a better solution. My opinion and I'm entitled to it. Same as you are entitled to yours.

In the end, this PR improves things and thats what we want ultimately.
"
238716163,5324,ghost,2016-08-09T22:48:56Z,"@JosephMcc I only say:

1- The Cinnamon-Settings have a bugs, that can be produced in certain circumstances.
2- I will want to make an applet like any other, as a replace of the Xlet part of the cinnamon settings
3- The Cinnamon-Settings is slow.

The theoretical controversy about Gtk and Clutter, is the problem, and not need to be produced in first place. At less, I don't have a solution to that, but i think: ""do not use it"", is not the solution. That's why, if you don't want to use Clutter, then why you want to use cinnamon? Clutter is the Cinnamon api...

I go to the extreme, because of language barrier, is a good way to show the point. Dramatical yes it's, but probably necessary, because in that way you can understand me more easy what i say.

Of course, I put words in your mouth that you did not say. And when this happens it's because i can not see any other reason of why a cinnamon dev, does not recommended the usage of the cinnamon api, and the creation of a cinnamon extension... That's absurd to me... There are always problems in all places and that's not a reason to at less give it a try... If you don't want to give it a try, please let other do what they want.
"
238749423,5324,collinss,2016-08-10T02:29:37Z,"@lestcape Have you tried this pull request yet? As @JosephMcc mentioned above, the xlet settings is no longer part of cinnamon-settings, and I think you will find it to be much faster than before. I'm using a laptop that is over 10 years old and it loads xlet settings in about a second. On a newer computer it would probably be almost instantaneous. I don't think you'll be able to get much faster than that using clutter/st.
"
238902831,5324,ghost,2016-08-10T15:25:17Z,"@collinss I'm pretty sure your pull it's at less 5 time more faster. For that reason and for the Xlet pagination it's why I say in the first comment: ""I like a lot what you are doing here."" ... But is clear you don't catch my real problem, maybe because i merge tow things:

1- I want a faster cinnamon-settings, i want help to detected and fixed bugs...
2- As the cinnamon settings it's an external application, i can not modify it to do what i really want in my extension.

You contribute a lot to the first point and i need to said thanks for that!!!

The seconds point have not a solution, because the cinnamon settings it's a different application and it's part of the core and that's ok to me. I can live with that,  but i can not do what i want in my extension in this way and that's NOT a fault of the Cinnamon-Settings conception or any other things related with any problem of the cinnamon-settings...

I have only one solution to do what i want, without break the compatibility with the cinnamon-settings at the same time. This is: Create my own settings without break the rules of the cinnamon-settings (Use the same json format to build the settings). The special modification to the settings can occurs later as i have a native connection with the settings.

How i need to do that in my extension, it's clear that make all this to be used only in my extension it's not a good practical idea. So, will not much more difficult make it general, to be used for all extensions, it's just redirect the cinnamon settings call to my programming logic...

I hope you understand now. Sorry if this go from the wrong way...
"
354925669,7149,collinss,2018-01-03T02:27:13Z,"@Odyseus There, I pushed my changes. If you have any other suggestions for how to improve this, let me know. I don't really have much experience with translations. I only did this because I made some changes to one of my applets (that has strings from python) and needed to regenerate my potfile. When I realized that python wasn't supported, I decided to add it, and kind of got carried away... :)"
365681018,7149,germanfr,2018-02-14T17:23:04Z,"Hey @collinss, I'm getting an error with your script (also with the old one):
```
xgettext: Non-ASCII comment at or before ./extension.js:4.
          Please specify the source encoding through --from-code
```
The reason is that there is a comment in my extension with my name, which has a tilde. The solution would be to add `--from-code=UTF-8` to the args list to xgettext, since most languages use non-ASCII characters. Could you include that? I'd open an issue but since the old one is probably going to be replaced by this I thought asking for that here is a better idea.
"
366577565,7149,collinss,2018-02-19T02:57:36Z,@germanfr fixed
366683469,7149,clefebvre,2018-02-19T12:46:57Z,@collinss please modify makepot accordingly.
366737490,7149,collinss,2018-02-19T16:09:57Z,"@clefebvre sorry! I forgot to check if my changes affected the makepot script. It's fixed now. I noticed that some of the entries from the json files get reordered in the pot file, but it seems to do that for me on master too, so I suppose it's just the randomness of os.walk which already existed in the old version. If you want me to add it into my pr, I could probably do a sort on the files so that it's more consistent going forward."
506717201,8617,clefebvre,2019-06-28T12:32:37Z,"Thanks @filakhtov.

I'd prefer to keep files dynamic though (i.e. not list its items within the build system). That's the reason we use files/ in the first place, so we can easily drop files in there and mimic the filesystem.

Maybe you can remove the network applet during the build instead?"
506859323,8617,collinss,2019-06-28T19:59:24Z,"If we move to meson like we're hoping, it will be a simple matter because the function to install a subdirectory has the option to exclude files and directories. I'm not sure if autotools has the equivalent functionality or not."
506941166,8617,clefebvre,2019-06-29T08:54:41Z,OK let's address this for 4.4.
506994852,8617,software-artificer,2019-06-29T23:40:37Z,"Hey @clefebvre addressed your feedback. I have used `bindir`, `datadir` and `sysconfdir` variables for installing files into their appropriate locations, but otherwise you can still have the same drop-in experience as we have today."
507145375,8617,Fantu,2019-07-01T07:15:28Z,"Hi, if minimal changes are needed probably debian patches about it can help:
https://salsa.debian.org/cinnamon-team/cinnamon/blob/experimental/debian/patches/make_nm_optional
https://salsa.debian.org/cinnamon-team/cinnamon/blob/experimental/debian/patches/Drop-nm-applet-from-the-session-files.patch
Was already used in some version in latest years, I not used archs that use them but I suppose are working correctly."
507217016,8617,software-artificer,2019-07-01T10:57:19Z,"@Fantu thanks for sharing. These patches are small indeed, but they introduce an automagic dependency on network manager, which is not something always desired. Additionally, second patch unconditionally removes nm-applet from the session start, meaning that it won't be automatically started at login."
507342691,8617,Fantu,2019-07-01T16:48:28Z,"nm-applet as write in patch description is autostarted anyway, I can confirm it because this patch it affects every architecture, on my Bionic and Sid it turns out to be started"
507441218,8617,software-artificer,2019-07-01T21:59:05Z,"Hmm, thanks for an update. Possibly it is done via an XDG autostart, but nonetheless automagic dependency is less than ideal, because it doesn't give users control over how they want their dependencies wired."
507446868,8617,Fantu,2019-07-01T22:22:09Z,"What is the problem? If nm is in build-deps (and/or already installed) have it in cinnamon build, instead if it is not there it could not compile correctly. If you don't want it, not have in build-deps and/or your build system. If is compiled on production system instead and you have nm, why not have support of it in cinnamon? (it would be the only case in which an additional choice would make sense but I suppose is very rare or near null case)
Sorry if my english is too bad."
507450196,8617,software-artificer,2019-07-01T22:37:29Z,"Your English is fine, no need to worry about that :smile: 

Coming from Gentoo system, where user have complete control of how their systems are built and which dependencies are used, I might want to have NetworkManager installed and use it through CLI, but I don't want it to be dragged into Cinnamon, nor I care about nm-applet. I understand that for binary distros it is perhaps not a big deal, but for projects like LFS for example it actually is!

I might have NetworkManager libraries and dev files installed only because I develop against it, but not using it as a network stack of my system and don't want my actual system libraries to be linked against it, etc.

It is generally a good rule of thumb to provide control over optional features and let users decide what they want and what they don't, even if by default it goes all enabled, there is a switch to configure things the desired way."
507886963,8617,eli-schwartz,2019-07-03T00:00:38Z,"Random thought: what actually needs NM installed? Why does /usr/lib/cinnamon/Cinnamon-0.1.typelib link to /usr/lib/girepository-1.0/NM-1.0.typelib at all? ISTR only the js code in the network@cinnamon.org applet actually knows or cares that NM is available, and it directly uses imports.gi.NM, so... couldn't this just be made a runtime-optional thing? That would be much better than configure switches and templating all the code.

If you are going to fully disable it, then you should make said applet not be installed, BTW."
507901343,8617,software-artificer,2019-07-03T01:22:44Z,"@eli-schwartz good catch, I will ensure that applet is also not installed, but having it to pick things up at runtime won't be ideal, because same reasons I described above apply."
507911940,8617,eli-schwartz,2019-07-03T02:22:23Z,"I feel like everything I said went right over your head. :/

Your current PR is an attempt to install the applet completely as-is, yet remove the typelib dependency and not autostart nm-applet. That would seem to be quite ""optional at runtime"" already. Is there something intrinsically evil about runtime detection of available features? Have you never seen code that does a try/except **in an interpreted scripting language** to import an optional feature but gracefully fall back on disabling it?

Your statements about automagic dependencies don't matter if the dependency is not automagic, but nonexistent. I am proposing what Debian calls ""suggests"", what Arch Linux calls [optdepends](https://wiki.archlinux.org/index.php/PKGBUILD#optdepends), and what Gentoo does not seem to support but I guess recommends simply mentioning in elog (for example https://bugs.gentoo.org/511122).

Potentially the only thing that should matter at all is whether cinnamon-session is responsible for autostarting the nm-applet program, but as @Fantu already pointed out, nm-applet installs an xdg-autostart for nm-applet and therefore it doesn't matter whether cinnamon tries to autostart it or not.

IMO the correct way to handle this is to simply remove it from the session files altogether, remove NM-1.0 from the typelib *always*, and make sure that the network@cinnamon.org applet doesn't crash or do anything else crazy when NM is not available on the system. Then cinnamon would automatically make the applet available *iff* NM is installed, and otherwise do nothing, which should hopefully solve everything for everyone except people who dislike when 132KB of useless files are installed on their system."
507913404,8617,eli-schwartz,2019-07-03T02:30:12Z,"This would actually have a significant impact on me in Arch Linux, because requiring a compile time option to disable networkmanager means I'm not going to cripple cinnamon for a handful of networkmanager haters, but my suggestion means I could ship a single package that optdepends on networkmanager instead of having it as a hard requirement, and then users who like networkmanager can install it and cinnamon automatically picks it up and uses it, while users who do not like networkmanager can simply not install it, and cinnamon will continue to work just fine without it."
507933445,8617,software-artificer,2019-07-03T04:29:18Z,"Okay, let me try and better explain things:

> Is there something intrinsically evil about runtime detection of available features?

In my opinion - yes, there is. Imagine there is an application ""A"" that can use a library ""B"". There is a system that provides library ""B"", but this library used by an application ""C"". Now if I install application ""A"" on that same system - it will automatically leverage library ""B"" at runtime. This gives no control on what dependencies are used by which application whatsoever and creates a dependency management nightmare.

> Have you never seen code that does a try/except in an interpreted scripting language to import an optional feature but gracefully fall back on disabling it?

I have seen, and I have to work with these things often times too - it is not fun at all. It sometimes leads to incompatibility issues and dependency resolution hell as well. If you put this all into SELinux or AppArmor context, such dynamic dependency detection might yield unexpected results and lead to quite a bit of a fun debugging journey. I would like things to be explicitly wired and controlled as such."
508215266,8617,eli-schwartz,2019-07-03T18:53:17Z,"> This gives no control on what dependencies are used by which application whatsoever

True.

> and creates a dependency management nightmare.

Completely false. Take for example https://www.archlinux.org/packages/extra/x86_64/vim/ which is built with support for various script interpreters. Vim is designed to support this via dlopen, so distros can build binary artifacts which work everywhere (no need to build 40 different distro packages for each USE flag permutation) while at the same time not forcing every vim user in all of Arch Linux from installing lua, perl, ruby, tcl, and Python both 2.x and 3.x

There is absolutely no downside to this. If you don't have these script interpreters installed, there is no dependency and surely cannot be a dependency management *anything* (let alone a nightmare). If you do have it installed then the package manager will correctly tell you that it is an *optional* dependency and can be deleted at the cost of making the program have fewer features, but does not require a recompilation in order to work. Everyone wins, and the exact relationship is expressed in a very elegant and accurate manner.

(Arch Linux, Fedora, and Linux Mint are all binary distros, and would no doubt be equally interested in engineering a new feature in a manner which is usable by a binary distro.)

If we're talking philosophy, failure to support graceful runtime detection of features is exactly what leads to dependency management nightmares and exponentially increasing repository sizes.

> It sometimes leads to incompatibility issues and dependency resolution hell as well. If you put this all into SELinux or AppArmor context, such dynamic dependency detection might yield unexpected results and lead to quite a bit of a fun debugging journey. I would like things to be explicitly wired and controlled as such.

If your SELinux rules are forbidding cinnamon from opening up libnm's GObject typelib *but only when cinnamon is built without the networkmanager USE flag* then maybe those rules suck and should be better designed to not be ifdef'ed based on a USE flag. Either way I would expect said SELinux rule would prevent the typelib from being opened, thus preventing networkmanager from being used, thus being no different from building without networkmanager support at all."
508216510,8617,eli-schwartz,2019-07-03T18:56:53Z,"I don't see how this matters anyway. All I said was that I think it may be possible to make cinnamon not use networkmanager at all, except for the applet itself, which would mean that your USE flag would only have to delete the applet, rather than also generating different Cinnamon typelibs and session files. By extension, it should also be possible to separately ship cinnamon and the applet, and make the applet hard depend on networkmanager but only when it's installed separately.

I don't understand why your Appeal To Ideological Purity considers this a bad thing."
508276878,8617,software-artificer,2019-07-03T22:34:00Z,"I understand what you are saying, just disagree with that.

> There is absolutely no downside to this. If you don't have these script interpreters installed, there is no dependency and surely cannot be a dependency management anything (let alone a nightmare).

There are downsides to this, everything has its trade-offs. Provided VIM example opens up a potential for more security issues, but VIM provides configure time options to disable all interpreters, I suspect because its authors understand implications.

Regardless, I think if we look at this problem differently and apply modular design to this problem then, probably, network management features, including applet and relevant typelibs, should be a separate package and have a hard dependency on NetworkManager and ModemManager libraries, because they aren't simply working without these libs.

If we go even further, and apply a bit of Unix philosophy, then Cinnamon should provide an API for networking stack and bridges should be written to support multiple backend providers, such as NetworkManager, systemd-networkd, and Arch's own netctl.

But, I would like to step out of this argument and say something that will likely help both of us get what we want. Two steps:

1. Provide configure time option, such as `--disable-networking` that completely disables networking applet and typelib dependency - that solves my problem. Happy to extend my PR to drop applet completely.
2. Refactor network applet in such a way, that if aforementioned flag is not given and applet is installed, then Cinnamon will rely on dynamic detection and handle things gracefully - solving your use case. PR is welcome :wink: 

And I hope we both will be happy. Thoughts?"
508308721,8617,eli-schwartz,2019-07-04T01:50:52Z,"That sounds very complicated, so I will tell you what actually does make me happy. #8688 makes me happy, so I've gone ahead and done it. :)

(Given the precise nature of my proposed change, do you still not understand why I find your PR to be way too complicated?)"
553941648,8617,eli-schwartz,2019-11-14T15:35:42Z,"@filakhtov Given that #8688 is now merged, this should be simpler to implement (and also needs rebasing).

P.S. Have you by any chance experimented to see what the applet's behavior is like, when NM is not installed?"
554110509,8617,software-artificer,2019-11-14T22:28:28Z,"@eli-schwartz it doesn't work at all, because https://github.com/linuxmint/cinnamon/blob/master/files/usr/share/cinnamon/applets/network@cinnamon.org/applet.js#L5 import will fail. This applet makes no sense without NetworkManager, because it uses GObject bindings provided by NM to query information and perform any changes to network devices."
554112374,8617,software-artificer,2019-11-14T22:33:28Z,"As to the rebasing this and moving forward, I haven't heard from the owners of this repository in a while and am not sure if they are still willing to accept this change or what the state is. ping @clefebvre @collinss "
554126267,8617,eli-schwartz,2019-11-14T23:08:26Z,"> it doesn't work at all, because https://github.com/linuxmint/cinnamon/blob/master/files/usr/share/cinnamon/applets/network@cinnamon.org/applet.js#L5 import will fail. This applet makes no sense without NetworkManager, because it uses GObject bindings provided by NM to query information and perform any changes to network devices.

I don't know why you're responding like I'm unaware of that fact? I did mention earlier that I know the applet imports NM, ""but I think it would be nice if it fails gracefully"".

Does the applet gracefully fail, or does it segfault the desktop? Does it incur noticeable runtime penalties due to not loading, and/or continuing to try to load even though it can't?

I am curious about the answers to these questions, so I thought I'd ask if you happened to check. If you haven't, then that's fine too. Removing the applet entirely via a configure switch is definitely another valid way to solve the feature request, so, go for it. :)

As for hearing back from the maintainers, I think they were just busy on other things for a while :) so I would guess that updating the PR would be well worth it so they have something to look at."
554134735,8617,software-artificer,2019-11-14T23:34:36Z,"It produces interpreter errors like this:
```
error t=2019-11-15T10:33:00Z 
[network@cinnamon.org]: Requiring NM, version none: Typelib file for namespace 'NM' (any version) not found
[network@cinnamon.org]: Error importing applet.js from network@cinnamon.org
```
and fails to initialize applet altogether. This happens every time panel related settings are modified/refreshed."
554645228,8617,clefebvre,2019-11-16T15:04:43Z,Hi @filakhtov sorry for the delay. We're getting close to 4.4. so we'll review all remaining PRs in the coming week.
554790314,8617,software-artificer,2019-11-17T21:40:20Z,Rebased to resolve conflicts and is ready to go ahead.
362938395,7255,JosephMcc,2018-02-04T20:49:29Z,"Not saying we shouldn't do this but I do have a couple of questions and reservations about it. You're opening a huge can of worms I'm not sure we want to :) Does this work with properties like we use for gradients? The -gradient-start/-gradient-end type properties? What if a theme is using background-image and image assets instead? This also won't effect other image based assets such switch, checkbox, etc.

On top of that this effects the Cinnamon theme only (and only partially). That really makes it quite limited since it changes very little. It also won't work with any theme that doesn't specifically support it or any theming added to an xlet that doesn't support it. While we control many of the themes, most of the large and popular themes are not part of the spices ecosystem because they are part of large theme packages.

I can see this leading to a lot of confusion and bug reports from users because it isn't working and doing what they probably expect it to do."
362940617,7255,germanfr,2018-02-04T21:19:51Z,"> Does this work with properties like we use for gradients? The -gradient-start/-gradient-end type properties?

Yes it works there also. I've just checked. It should work literally everywhere an rgb color works.


> What if a theme is using background-image and image assets instead? This also won't effect other image based assets such switch, checkbox, etc.

They should try to use CSS whenever possible. Also something that could help a lot would be the ability to use background colors behind border-images, I've struggled with this when moving my theme from images to CSS. Switches are the little stone in my shoe. Maybe in the future they should have a slightly more idiomatic structure than just a box with a background.


> I can see this leading to a lot of confusion and bug reports from users because it isn't working and doing what they probably expect it to do.

Now you say, I would add a disclaimer with something like ""not all themes support it"", similar to what's in the dark theme switch there. But the same happens with the font size and the text scaling factor."
363491845,7255,germanfr,2018-02-06T17:03:25Z,"Regarding the switches and the checkboxes @JosephMcc mentioned, it's pretty simple to theme them benefiting from this. One can simply set the background color and the border radius of the switch/checkbox with CSS, and overlay the borders, shades or whatever with a background-image. An example:
```css
.toggle-switch {
    width: 26px;
    height: 16px;
    border-radius: 10px;
    border: 1px rgba(0,0,0,.5);
    background-color: #999999;
    background-image: url(""assets/switch-off.svg"");
}
.toggle-switch:checked {
    background-color: #9ab87c;
    background-color: env(""accent"");
    background-image: url(""assets/switch-on.svg"");
}
```
Where the overlay images are [these](https://github.com/linuxmint/Cinnamon/files/1699947/switch-assets.tar.gz):
![screenshot from 2018-02-06 17-47-53](https://user-images.githubusercontent.com/10391266/35871968-ea0e2de8-0b65-11e8-953f-c74b7564b173.png)

Most themes I can think of can do that, and if not they can stay as they are now. This is something that is adding value, never subtracting. There won't be any broken theme as the ones don't use this will still work as they do now and the ones that support it will also work in old versions of Cinnamon without any issue.
> I can see this leading to a lot of confusion and bug reports from users because it isn't working and doing what they probably expect it to do

Regarding that, I have in mind something to detect if the current theme supports the use of this feature and so enable/disable the option, but I'd need help with the Python part of disabling the controls. Or as I said earlier a disclaimer note in there."
363720999,7255,clefebvre,2018-02-07T10:13:16Z,"My two pence on it. It's a cool idea, but if it doesn't support the GTK theme, it's not useful enough to be considered."
363724129,7255,clefebvre,2018-02-07T10:24:48Z,"We're getting ready to switch to Mint-Y and so we're getting ready to create color variations for it. Alternatively, we could provide a tool which generates that variation based on a custom ""accent"" color code, and have a hook in Cinnamon, for Cinnamon to detect the fact that the selected theme supports custom colors... it's just an idea and it complements what you started here.

I'm not sure this would go anywhere, I'd suggest leaving the implementation aside for now and focusing on the design first so we can decide whether it's interesting or not to pursue this idea.
"
363724472,7255,clefebvre,2018-02-07T10:26:00Z,"From a distribution point of view, what we currently do is provide a neutral Cinnamon theme and accentuated icon and gtk themes... they're the ones which should be customizable, assuming it's a good idea."
363765197,7255,germanfr,2018-02-07T13:15:24Z,"Gtk is one ""program"" and Cinnamon is another ""program"". You can't change the behavior of Gtk from here unless it exposes an API for that (which I don't know if exists). I don't understand why you insist that much in that it must support Gtk or nothing, I mean, it'd be great but it's up to them. Besides they implement it or not it'd be a great feature to have in Cinnamon and it adds value. Maybe someone sees it here and decides to implement it in Gtk. Unity (RIP) supported it only for the panel and it didn't cause any confusion (although it was automatic by default). Maybe it's a good idea to leave the schemas for advanced users and scripts as an open possibility for the future and remove the switches in settings."
363768480,7255,germanfr,2018-02-07T13:28:36Z,"Also from my point of view as a theme developer, it's a pain in the ass to have to maintain a number of variants with just a different color, and always have people asking for a colour variant. There's some people that create their own forks and then leave it unmaintained, which in general degrades the user experience polluting the pool of possibilities with themes that just don't work. 

That said, I don't know any drawback on having this feature."
375844889,7255,smurphos,2018-03-24T04:04:07Z,"Some thoughts. 

If Cinnamon shipped with a pre-processessor such as sassc and provided a convention for cinnamon recognised variable names in  `_colors.scss` then a settings modules could scan the theme for compatible `_colors.scss` and present the end user with a list of themes that can be edited and the variables that can be changed for that specific theme. Any changes would be written to the themes `_colors.scss` result in sassc rebuilding the cinnamon theme and/or the GTK theme. If the theme lacks support then the cinnamon module would simply not list it. 

It's up to the theme designer what variables they name so as to be recognised by cinnamon as editable. 

Theme A might just have one or two colors that can be edited and then calculates other colors in the SCSS, whilst theme B gives access to a dozen base colors and variables for gradient, transparency, border radius etc. "
375854044,7255,JosephMcc,2018-03-24T07:48:05Z,"> That said, I don't know any drawback on having this feature.

I don't want to just sound like a downer but I do. One being the constant bug reports we will get because this theme doesn't work with that thing or that thing doesn't work with this theme. It's easy to say themes just shouldn't use image based assets but that isn't the right answer. I've dealt with this trying to make mate-panels color changing stuff work with Mint-X and it' very limiting and a huge PITA. 

> Any changes would be written to the themes _colors.scss result in sassc rebuilding the cinnamon theme and/or the GTK theme.

Again you are totally ignoring the existence of image based assets.

The only way I could really seeing this being viable is to create a custom theme and a tool for modifying it. It will always be an imperfect solution just trying to make it work with any general theme. 
"
375862690,7255,smurphos,2018-03-24T09:53:13Z,"> Again you are totally ignoring the existence of image based assets.

Not entirely but the workarounds would be messy.

> The only way I could really seeing this being viable is to create a custom theme and a tool for modifying it. It will always be an imperfect solution just trying to make it work with any general theme.

If for example the new Mint Y was designed in this way and the tool bundled with Mint then themers could write new themes compatible with the tool or port existing themes to do so. 

I'm not oblivious to the difficulty. I use scripts forked from Oomox to build my current themes and am toying with the idea of trying to port other themes to use the same tools, "
383388081,7255,germanfr,2018-04-22T15:06:32Z,"> The only way I could really seeing this being viable is to create a custom theme and a tool for modifying it. It will always be an imperfect solution just trying to make it work with any general theme.

For example, someone could create a third party extension that would write to the settings schemas or directly use the JS API. The thing is that it would be hidden to normal users unless they explicitly installed it, and that extension would carry all those possible bug reports and may have more warnings and indications than just a switch in settings. From a themer's point of view, it'd be kind of theming an xlet, you can support it or not, but with color properties instead of classes.

But that wouldn't be possible without support from a Cinnamon backend like this (but without the settings part in python)."
383458945,7255,smurphos,2018-04-23T05:31:50Z,"> For example, someone could create a third party extension that would write to the settings schemas or directly use the JS API

I'm intending to try and make something along these lines - whether I get there or not and how long it will take me is another question... ;-)"
384147222,7255,ghost,2018-04-25T03:08:14Z,"@germanfr just an idea.

Instead of trying to set a constant color, probably is better set just a key. You can then set the value of this key that you use in the css later, inside the theme context by calling a function and stored it in a hash. In that way the solution you use can be extended to other properties and not just colors in a more easy way.

Also using that keys, you can define latter what theme properties this key will be disable. For example:
If a key **bgcolor** is set inside an style class, you can disable the properties **background-image** and **border-image** of this style class, in that way you ensure your property will take effect also if there are images.

Latter, you can use also a hash on gsettings to set an array of pairs of (key, value) if you want to export that functionality to be controller externally.

**Please see:** Ideas about of render a css from a scss are also not good at all without a way to modify specific properties only, because a change of the whole theme will required a lot of processing and then the user will see the render, when what you want is a transparent ""transition"" of specific properties only. So, render a css from a scss is not a good idea instead a directly usage of scss will be better, because then the theme context can provide the functions to change the values of the scss variables dynamically. This ofcourse will be in opposition of the idea of use the same mechanism from Gtk and Cinnamon, because also Gtk will need to support a way to handled scss directly instead of css."
384169510,7255,germanfr,2018-04-25T05:59:08Z,"@lestcape I think that is a bit complicated and I'm not sure why the user would want to customize anything other than colors. If you already support custom colors you just don't use an image for the default case.

The basic scss color functions would be fairly easy to implement at runtime, although I wonder what would happen with those of us that already write our themes in scss. We would need something to tell Sass to not compile certain parts, and I think that doesn't exist."
384174943,7255,ghost,2018-04-25T06:30:38Z,"@germanfr is exactly because will be a bit complicate, that will be a bit more general. Like i say, this was an idea. If you don't want to extend it for simplicity, is also ok.

For my personal opinion @JosephMcc have a good points against things like this: 
""If you already support custom colors you just don't use an image for the default case"". 

I will explain you why with some examples:
1- Do you want to force also extensions to not use an image if they are not really belong to an specific theme?
2- How an extension can be integrate with a property without semantic? The extension will not look like out of the place?"
384176953,7255,germanfr,2018-04-25T06:40:51Z,"> 1- Do you want to force also extensions to not use an image if they are not really belong to an specific theme?
2- How an extension can be integrate with a property without semantic? The extension will not look like out of the place?

An extension that doesn't use standard classes, whether they use images or CSS, already looks out of place. The images they use won't match the theme anyways. A popular example is gTile. That is an inherent Cinnamon problem."
384181377,7255,ghost,2018-04-25T07:02:03Z,"@germanfr Your comment partially resolved the point  1, but not 2, because the standard classes not exist... Just exist the specific classes for the specific things (the shell is not organized like Gtk)... So, while one extension can select the style-class-1, another extension can select the style-class-2. When you change the property, that is only set in style-class-1, one extension is updated while the another not. Adjusting colors to full-fill a good aspect will be a task for a Titan."
384193049,7255,germanfr,2018-04-25T07:50:52Z,"@lestcape but again, that has nothing to do with this. It's a Cinnamon problem. As you said this is not Gtk."
384199258,7255,ghost,2018-04-25T08:12:10Z,"@germanfr You are right on this. It's how the shell is and this is not a problem that you will introduce here, but it is part of reality and therefore can make a good solution become not so good.

Let me be clear, what you already done, is a thing that i was wander to do for a lot time ago, but I never found a good solution (this is why my comments)... You have something working, that is amassing of curse."
392115042,7255,dominichayesferen,2018-05-25T16:42:12Z,"If you add environment colours, then it would maybe be nice to also have a colour value that used the GTK Highlight Colour..."
392119057,7255,germanfr,2018-05-25T16:57:40Z,"> If you add environment colours, then it would maybe be nice to also have a colour value that used the GTK Highlight Colour...

That could be done through a Cinnamon extension over this, for example. This is just the base for all that."
392122755,7255,dominichayesferen,2018-05-25T17:11:39Z,"@germanfr Yeah, but the problem with relying on a Cinnamon Extension is that without the Cinnamon Extension, the theme might break down, and there's no easy way to fit 'Install _______ from Extensions > Get More Extensions' in the Themes > Get More Themes listing description bit without compromising the description of the theme, or label length of the description, and Mint prefers it if you have nice, short descriptions..."
392134534,7255,germanfr,2018-05-25T17:56:41Z,"@feren This shouldn't break any theme if they use this feature properly as I explained in the description and themes that don't use this will still work. That hypothetical extension would just simply set the colors in the schemas I've defined here, just as a user would do manually. Themes should not rely on that extension to be installed or any color to be used just the same as Cinnamon doesn't rely on any particular theme to be installed to work. If a color looks good or not is up to the user. Imagine that on Mint-Y for example."
551095676,8884,mtwebster,2019-11-07T14:12:03Z,"Hi, this looks fine, except for one thing - can you add the settings key to `org.cinnamon.desktop.sound` instead of media-keys?

We'd also want a setting to expose this to users, but I'm still thinking about how to display it, so don't worry about it for now.

Thanks"
552110205,8884,deskwizard,2019-11-09T15:27:54Z,"Hi,
I have updated the 3 repository with the change requested.
Let me know if it looks alright to you.

Thanks
"
552261670,8884,mtwebster,2019-11-11T01:47:42Z,"A couple things - there are errors when you mouse-scroll on the applet itself in the panel (not the volume slider in the menu) - you're referring to `this.applet._mediakeysStep` while in the applet - so here it should just be `this._mediakeysStep` - this is in `_onScrollEvent` in the applet class.

Another issue is there's no listener for changes to that setting.  You don't need one in cinnamon-settings-daemon because you're fetching the value each time (that's bad too, but not important for now.) - you need to know when the setting changes and update the value when it does.

Also, a settings object for `org.cinnamon.desktop.sound` already exists, please use that.

I'll do some inline comments to show what I mean."
553994539,8884,clefebvre,2019-11-14T17:31:58Z,"Hi @deskwizard,

First of all I want to apologize for the time it took me to get involved and provide feedback. And I also want to thank you for contributing to Cinnamon and for figuring it how this all worked. As you found out there are multiple components involved, it's not all obvious and we need to acknowledge that.

I'm tempted to merge this to thank you for your work and to encourage you rather than discourage you from contributing, but that would be wrong, because that's judging your work, not the feature you developed.

I think it's overkill. We're looking at an arbitrary value which isn't significant. The amount of increment we get on our media knob.. we're not going to go as far as asking the user to tune that. The 5% value is arbitrary. We can debate its value and that would be tuning. Asking users to tune that themselves is going way too far.

We're removing similar features elsewhere in Cinnamon, for instance asking the user to fine tune the number of millisecond a particular animation effect takes.

I'm sorry to close this. I'm more interested in debating the 5% than making this configurable though. I suppose you planned on using this yourself, so you're probably against that 5% in the first place. I'd be interested to hear your thoughts on this. Is it too big? is it too small? does it cause an annoyance? how/why?
"
554091398,8884,deskwizard,2019-11-14T21:37:22Z,"Hi @clefebvre 

Don't be sorry, I understand your decision. My idea was more to make it possible to change it, not necessarily have it exposed in a menu or applet for the reason you mentioned.
It was indeed more for my own use than anything else, I just figured maybe somebody else could be interested.
In my case, at the time I had no other volume control besides the volume keys to control the volume of my vintage audio receiver (I was using an IR remote sending the volume keys to the OS, let's not get into that mess) and 5% was too big a step.
Thankfully I changed receiver and have proper volume control now, so it isn't an issue for me anymore.

Thanks for taking the time to comment, it is appreciated a lot.

I also want to thank @mtwebster for the work he's done going over my code, no matter how bad a copy/paste job I actually did. I hope your neck doesn't hurt too much shaking your head looking at what a mess I've done. Your comments is a great way for me to learn more about all that stuff. Thanks again.

Have a nice weekend you two."
554430517,8884,clefebvre,2019-11-15T16:28:56Z,You too @deskwizard. Thanks for explaining this.
874341768,8884,MichaelLawton,2021-07-05T21:44:29Z,"I'm disappointed to see this was not merged. When using a fixed gain external amplifier (like many popular cheap Class D amps) 5% steps are often too large. It's still nice to have the amp's maximum volume available on request so simply turning down the master softvol instead is not a great solution. The ideal step is a certain amount of dB, however since we can't determine that through software it needs to be configurable by the user, at the very least through the terminal."
938206527,8884,mankinskin,2021-10-07T22:43:54Z,"> I think it's overkill. We're looking at an arbitrary value which isn't significant. The amount of increment we get on our media knob.. we're not going to go as far as asking the user to tune that. The 5% value is arbitrary. We can debate its value and that would be tuning. Asking users to tune that themselves is going way too far.

why do you want to limit users like this? We can just have a default value and when the user wants to change it, they can. It is really not asking anything of them. Preventing configuration is asking users to submit to an imposed constant value. Or am I missing the part why we can't just have a default of 5%?
"
981579318,8884,Ghibranalj,2021-11-29T12:14:31Z,"I very disappointed that this feature was not merged. Even gnome has this feature implemented.
> The 5% value is arbitrary.

yes its arbitrary. why not let the user decide the arbitrary value for themselves?"
986680253,8884,kimimaru4000,2021-12-06T11:17:19Z,"I agree that there's a need for this in Mint. I prefer my volume step at 2 and have to recompile Cinnamon with the step changed each time.

> I think it's overkill. We're looking at an arbitrary value which isn't significant. The amount of increment we get on our media knob.. we're not going to go as far as asking the user to tune that. The 5% value is arbitrary. We can debate its value and that would be tuning. Asking users to tune that themselves is going way too far.

I would like to know your thoughts on why this is overkill. Users do not have to use it, and there is plenty of space in the Settings tab of `cinnamon-settings sound`. Users are already able to customize lots of other options, including creating custom keyboard shortcuts, which are more involved than changing the volume step. Based on the reply I don't see how this hinders the UX in any way.

> I'm sorry to close this. I'm more interested in debating the 5% than making this configurable though. I suppose you planned on using this yourself, so you're probably against that 5% in the first place. I'd be interested to hear your thoughts on this. Is it too big? is it too small? does it cause an annoyance? how/why?

This is exactly why I feel it should be configurable. It's too large for users, including myself, right now. If you reduce it, it'd be too small for others. Let the user decide what's comfortable for them."
987142020,8884,Secret-chest,2021-12-06T20:02:06Z,"> Hi @deskwizard,
> 
> First of all I want to apologize for the time it took me to get involved and provide feedback. And I also want to thank you for contributing to Cinnamon and for figuring it how this all worked. As you found out there are multiple components involved, it's not all obvious and we need to acknowledge that.
> 
> I'm tempted to merge this to thank you for your work and to encourage you rather than discourage you from contributing, but that would be wrong, because that's judging your work, not the feature you developed.
> 
> I think it's overkill. We're looking at an arbitrary value which isn't significant. The amount of increment we get on our media knob.. we're not going to go as far as asking the user to tune that. The 5% value is arbitrary. We can debate its value and that would be tuning. Asking users to tune that themselves is going way too far.
> 
> We're removing similar features elsewhere in Cinnamon, for instance asking the user to fine tune the number of millisecond a particular animation effect takes.
> 
> I'm sorry to close this. I'm more interested in debating the 5% than making this configurable though. I suppose you planned on using this yourself, so you're probably against that 5% in the first place. I'd be interested to hear your thoughts on this. Is it too big? is it too small? does it cause an annoyance? how/why?
> 

@clefebvre What??? Some animations are too long or too short for me. And, users don't have to change it."
1087949282,8884,s-m-e,2022-04-04T19:51:03Z,"Hey, just another vote for **PLEASE MERGE THIS**! When my computer is attached to an external amp or radio, the 5% jumps are ... insane. Here, 5% up can mean going from ""perfectly normal"" to ""walls are shaking"". Even something as low as 1% is very clearly audible. It is a very useful option to have. The fact that so many people are compiling this by hand (or use other workarounds) should be a pointer to not follow the Fruit-philosophy of not giving the user options ... I am a user and I am not confused by options :)"
1101671396,8884,ssmid,2022-04-18T19:10:53Z,"If 5% is too much, turn down your amplifier. Higher soft volume, lower amp volume should give a higher dynamic anyway, or am I wrong?"
1101677546,8884,mankinskin,2022-04-18T19:14:16Z,@ssimd what if you are using headphones?
1101765961,8884,ssmid,2022-04-18T21:03:49Z,"Isn't the output of headphone jacks standardized? 5% / 20 steps should be sufficient, considering Android has even less steps (14 if I remember correctly)."
1101830674,8884,mankinskin,2022-04-18T22:48:57Z,"@ssmid that is honestly missing the point kind of. There is no reason to lock users into a fixed configuration. I for example want to change my volume by scrolling on the audio applet. There is no reason I would need to accept huge loudness jumps when I could have fine grained volume control of at least 1% per step (which is by the way what Windows does). Currently the sensitivity is 5 times of that.

Again: why not provide 5% as a default and allow users to override this step size in a configuration file? What could possibly be the cost of that? This is a pull request for exactly that. All maintainers need to do is test it and merge it and it is an improvement to this library."
1103040095,8884,ssmid,2022-04-19T19:46:52Z,"It's a feature that has to be maintained, so it's up to the maintainers to decide whether it is worth it."
1103078940,8884,mankinskin,2022-04-19T20:10:00Z,"Fair, but I don't really see the maintenance burden with this feature. Also what is the point of this project when improvements are just seen as maintenance burdens?"
1106115155,8884,Secret-chest,2022-04-22T07:41:10Z,"> Hi @deskwizard,
> 
> First of all I want to apologize for the time it took me to get involved and provide feedback. And I also want to thank you for contributing to Cinnamon and for figuring it how this all worked. As you found out there are multiple components involved, it's not all obvious and we need to acknowledge that.
> 
> I'm tempted to merge this to thank you for your work and to encourage you rather than discourage you from contributing, but that would be wrong, because that's judging your work, not the feature you developed.
> 
> I think it's overkill. We're looking at an arbitrary value which isn't significant. The amount of increment we get on our media knob.. we're not going to go as far as asking the user to tune that. The 5% value is arbitrary. We can debate its value and that would be tuning. Asking users to tune that themselves is going way too far.
> 
> We're removing similar features elsewhere in Cinnamon, for instance asking the user to fine tune the number of millisecond a particular animation effect takes.
> 
> I'm sorry to close this. I'm more interested in debating the 5% than making this configurable though. I suppose you planned on using this yourself, so you're probably against that 5% in the first place. I'd be interested to hear your thoughts on this. Is it too big? is it too small? does it cause an annoyance? how/why?

We're not asking them. 2% would be too little for me. But we're not asking them. They can just change it _**when they want, if they want.**_"
1179536460,8884,mankinskin,2022-07-09T12:36:41Z,"For anyone looking for a fix, you can try changing the volume step in the sound applet JS code. The sound applet is located at `/usr/cinnamon/applets/sound@cinnamon.org`. In `applet.js` there is a variable
```javascript
const VOLUME_ADJUSTMENT_STEP = 0.05; /* Volume adjustment step in % */
```
The applet could also be in `~/.local/share/cinnamon`

Possibly this is something that should be configurable in the ""Configure..."" options of the applet. There is obviously no tradeoff here (except for developer resources)."
1275484183,8884,RedSoxFan04,2022-10-12T01:55:47Z,"I just upgraded from onboard audio to a Sound Blaster AE-5 sound card. With this sound card, 5% increments are way too large. I need 1% increments. Please merge this! My ears and I would be very appreciative!"
1484186076,8884,Secret-chest,2023-03-26T18:53:35Z,PLEASE RECONSIDER. Yes it's not changing your whole desktop look. But it's changing something you use daily. So it's impactful enough.
1484194710,8884,claudiux,2023-03-26T19:11:13Z,"Also, you can try the sound150@claudiux applet: https://cinnamon-spices.linuxmint.com/applets/view/306"
1484485276,8884,Secret-chest,2023-03-27T04:52:19Z,"> Also, you can try the sound150@claudiux applet: https://cinnamon-spices.linuxmint.com/applets/view/306

Does that work with media keys as well?"
1484917735,8884,claudiux,2023-03-27T10:45:13Z,"> 
> Does that work with media keys as well?

Yes, it works with media keys. Remove the sound applet before installing the sound150 applet.

From CHANGELOG.md: v3.0.0 - Overwrite existing binding of AudioRaiseVolume and AudioLowerVolume keysym.
"
6686355,847,mtwebster,2012-06-30T16:15:08Z,"This addresses some of #822
"
6753872,847,autarkper,2012-07-04T06:59:05Z,"Your patches certainly get rid of this log spam:
    Clutter-WARNING **: Attempting to add actor of type 'StScrollView' to a container of type 'StBoxLayout', but the actor has already a parent of type 'StBoxLayout'.

I don't know whether this improves performance, but just cutting down on the log spam is well enough.

Good job! Hope to see this in master soon.
"
6825938,847,AlbertJP,2012-07-07T19:42:40Z,"@mtwebster It works great. With your log-spam branch, the log now again fits within a terminal window: 15 lines cinnamon log, 15 graphics driver messages (sorry, I'm running nouveau). And the menu loads noticeably faster.
"
6828604,847,mtwebster,2012-07-08T03:25:07Z,"Ok I swear I'm done :P

I'm satisfied with how the menu looks right now, hopefully it pleases.
"
6829885,847,AlbertJP,2012-07-08T09:07:58Z,"@mtwebster I used a single core computer (AMD Sempron 140) with 2gb ram to test your code yesterday. It works great even on a low-end machine like that. The menu's delay used to be 1-2 seconds. I have not tested your latest changes yet, however.
"
6837072,847,mtwebster,2012-07-09T01:41:29Z,"save me! I can't stop!
"
6839685,847,AlbertJP,2012-07-09T06:54:47Z,"If you are doing something that's not related to the menu refactoring or log spam fixes, you'd better create another pull request for it instead of doing it here. Pull request #509 could not be merged easily because there were too much different things in one pull, and was split up into three pulls.
"
6845282,847,mtwebster,2012-07-09T12:39:11Z,"All is related, and as I continually rebase my development branch to keep up with the master branch, everything merges cleanly at this point.  Arguably the St.IconType.FADED stuff isn't completely related, except that I implement it in the menu changes.  It would be tedious to try to separate these all out into individual pull requests, when they depend on one another.
"
6851053,847,AlbertJP,2012-07-09T16:06:03Z,"Ok, then it's fine. Common practice is to wait till earlier changes are pulled, but as you might know Clem is busy with Mint 13 Xfce right now and does not seem to have time to pull things at the moment.
"
6857823,847,neokril,2012-07-09T20:01:01Z,"@mtwebster I have some problems building your branch:

```
$ git checkout origin/log-spam
HEAD is now at 0248663... update NEWS (again)
$ sudo apt-get build-dep cinnamon # ver. 1.4.0-UP3-0ubuntu1~precise1
$ ./autogen.sh
$ make
.......
  CCLD   cinnamon-real
cinnamon_real-main.o: In function `cinnamon_prefs_init':
/home/mt/Applications/Cinnamon/src/main.c:139: undefined reference to `meta_prefs_override_preference_schema'
/home/mt/Applications/Cinnamon/src/main.c:141: undefined reference to `meta_prefs_override_preference_schema'
/home/mt/Applications/Cinnamon/src/main.c:143: undefined reference to `meta_prefs_override_preference_schema'
/home/mt/Applications/Cinnamon/src/main.c:145: undefined reference to `meta_prefs_override_preference_schema'
collect2: ld returned 1 exit status
```

Environment: Ubuntu 12.04 x64

Do I need to perform some additional steps to build it?
"
6858217,847,autarkper,2012-07-09T20:16:00Z,"@neokril: I think you need to build against a fairly recent muffin/master.
"
6858355,847,mtwebster,2012-07-09T20:20:44Z,"Yeah that definitely looks like errors related to muffin - build muffin master, install those libs then try cinnamon again.
"
6981021,847,glebihan,2012-07-14T08:09:10Z,"I haven't had a close look at the whole code yet, but a good part of it looks good. There is a very significant performance improvement, that's really great.

There's one thing I don't like though, it's the way you handled the help button, for 2 reasons :
- I'm pretty sure we won't always get the expected result as we might find a ""help"" application that has nothing to do with the distribution itself
- It would never work on a system with a language that's not English (we would never pass the _this._applicationsButtons[i].app.get_name() == ""Help""_ test)

Also, the presence of the recent files in the menu should definitely be an option.

The last thing, but maybe that's just me, I think I liked the categories icons better without the fade.

Thanks a lot for this pull request !
"
6982686,847,mtwebster,2012-07-14T12:52:03Z,"Ah I wasn't thinking about that regarding the help button - typical english-centric thought!

F1 typically brings up help in any system - is this something I could access to see what launches when that key is pressed?  Either that or I just do away with help altogether.

I'll work on adding a setting to disable recent file display.

Thanks
"
6982699,847,glebihan,2012-07-14T12:54:55Z,"Where does F1 bring you ?
Here F1 doesn't open anything, except within applications which define that shortcut to open their own manual. There's nothing at system level.
"
7006490,847,mtwebster,2012-07-16T13:55:23Z,"Working out an issue with keyboard navigation I just discovered, please hold off on any merging for the moment (if it was being considered :P)
"
7028321,847,mtwebster,2012-07-17T07:16:57Z,"Okay I think I'm set :P
"
7055050,847,mtwebster,2012-07-18T02:22:42Z,"I'm going to squash this and separate the faded icon code to a separate pull request, since we're no longer using faded in the menu itself, it should stand alone (still a worthwhile addition though, I think)
"
7105284,847,AlbertJP,2012-07-19T17:37:34Z,"The menu's opening animation does not seem to work but that may be unrelated. It's opening very quickly with your commit. Well done. I think this commit can be pulled.
"
7107181,847,clefebvre,2012-07-19T18:42:04Z,"@mtwebster: Please default to ""All applications"" instead of defaulting to an empty menu. And make sure the description labels (bottom right corner) are cleared when the menu is open (or closed, whatever looks best). It's confusing to see an empty menu or a remaining name/description, even if that gains performance. 

Also be careful with crashes and memory leaks. I can't say for sure it's related because we're adding a lot of things these days and the original codebase isn't exactly perfect (rofl) but I experienced a freeze and memory goes up while testing this pull. 
"
7122152,847,mtwebster,2012-07-20T04:31:30Z,"I'd like to ""discuss"" the default of showing all applications with you :)

In my estimation, much of the performance gain on that initial menu open is a result of not having any categories selected initially.  The first thing the user will do is move over a category, updating the app list anyway.

Just wanna talk pros/cons is all.
"
7125297,847,AlbertJP,2012-07-20T08:45:48Z,"I also didn't like being faced with an empty menu when opening it.

Recent Files works well for me. I'd like to be able to see the directory in which a file is, as a tooltip for example. I have multiple windowManager.js and main.js files in there and am right now not able to see which is from my clone of Cinnamon master and which is from my own cinnamon repository.
"
7125323,847,glebihan,2012-07-20T08:47:37Z,"+1 on showing all the applications :)
"
7127428,847,mtwebster,2012-07-20T10:49:04Z,"I did some mem info logging in the applet, checking objects, bytes, didn't really notice a consistent increase over time using the applet - lots of opening, closing, scrolling through items, etc..  it would increase slightly, then go back down, increase, go back down, but didn't seem to be getting incrementally larger that would suggest I'm leaving things hanging.

If there's a better way to test this please let me know.
"
7127731,847,mtwebster,2012-07-20T11:07:54Z,"Also, haven't had any freezes - can you tell me what you were doing when that happened? Or just random?
"
7130811,847,autarkper,2012-07-20T14:02:21Z,"@mtwebster: there are merge conflicts when merging to current master.
"
7130865,847,mtwebster,2012-07-20T14:04:18Z,"I've got it merged ok on my end - probably just settings stuff or NEWS
"
253177176,5780,clefebvre,2016-10-12T10:29:49Z,"Hi @NikoKrause,

Wouldn't it be better if TAB witched section (category -> apps -> favorites -> etc..), and SHIFT_TAB switched the opposite way?

Page_Down/Up could also be used to quickly get to the bottom/top of a list.
"
253183284,5780,NikoKrause,2016-10-12T11:01:19Z,"@clefebvre 
That's a good point. I haven't thought about the Page_Up/Down keys.

So just to be clear:
TAB: Should it switch (category -> apps -> favorites -> category -> etc..) in a loop or should it only switch (favorites -> category -> apps), i.e. without jumping from apps to favorites.

UP and DOWN key: They stay how they are right now, i.e. passing last category/applet/favorite.

Page_Up/Down key: The same as UP and Down keys, but stop at last category/applet/favorite.

Did I get that right?

Shouldn't take much time to change that, I think.
"
253213870,5780,clefebvre,2016-10-12T13:31:26Z,"imo, everything should loop.

page_down/up shouldn't go down/up though, they should go directly to the last/first item.
"
253261439,5780,NikoKrause,2016-10-12T16:16:52Z,"> imo, everything should loop.

o.O
But no loop with LEFT and RIGHT key, right? I think that would be too much.

Okay, I have an implementation locally on my notebook. 
But I hesitate to upload it right now.

The else if statements look awful. First I need to do some code cleanup.
"
253468269,5780,clefebvre,2016-10-13T09:52:49Z,"Why not loop on left/right?
"
253532234,5780,NikoKrause,2016-10-13T14:37:19Z,"@clefebvre 
Because I think it's too easy to hit the left/right key accidentally twice.
That's what the TAB key is for.
Also if left/right would loop, there would be no difference between (SHIFT+)TAB and LEFT/RIGHT.
But if you want to you can change that easily.
"
253537455,5780,NikoKrause,2016-10-13T14:54:40Z,"So I have rewritten the code a little bit. I think, that way it's easier to maintain this in the future.

First you get the `goUp, goLeft, etc.` variables. That's way it easier to define the behavior of the keys.
And also to add new keys, for example TAB and RIGHT key behave most of the time the same, so you tell them to `goRight`.

In the `if(navigationKey)` part you check all cases of `activeContainer` and define how the navigation should behave.
For example when you are at applicationsBox you just define, how to get the appButton above, by telling the applicationsBoxButton to `goUp`,without worrying which button you have to press, to get this action done.

The rest stayed untouched, except of indentation.

I hope I did everything right and didn't cause some regression, because there are a few lines I changed. I would be glad, if somebody would test it, before merging.

After enough tests are done, I can rebase this PR.
"
253770433,5780,NikoKrause,2016-10-14T10:58:14Z,"@rjanja 
Hey, you added the line `this._previousTreeSelectedActor._delegate.emit('leave-event');` a few years ago (https://github.com/linuxmint/Cinnamon/commit/be9887691e5b58b295231c9288ffb1281d6f1034). What is it good for? It makes no difference to me, if it's there or not.
But I'm not sure, what it's needed for or if it's needed.
"
253983512,5780,NikoKrause,2016-10-15T13:12:49Z,"I'm thinking about getting a key, which works like the right-mouse-click. I mean, when you navigate over applications and want to open the context?/submenu? (the menu, which says ""Add to panel"", ... , ""Uninstall"", etc.). 
Any suggestions, which key to use for that?
"
254004023,5780,Odyseus,2016-10-15T18:58:48Z,"Hello, NikoKrause.

How about the [Menu](https://help.gnome.org/users/gnome-help/stable/keyboard-key-menu.html.en) key? Its sole purpose is to open context menus, so it will be fitting. Its _Clutter code_ (I don't know if it's right to call it that way) is **Clutter.KEY_Menu**.
"
254004932,5780,JosephMcc,2016-10-15T19:16:26Z,"Not sure how many keyboards have that key. You would probably be better off doing something like Shift or Ctrl + Enter. @NikoKrause This might be a good thing to bring up in linuxmint-dev and get feedback on. Just be patient as it's quiet there at times.
"
254042284,5780,NikoKrause,2016-10-16T11:48:42Z,"@JosephMcc 

> This might be a good thing to bring up in linuxmint-dev and get feedback on. Just be patient as it's quiet there at times.

I haven't figured out how to get messages, even when the PC is turned off.
If I ask a question at IRC and I don't have that much time to let my PC turned on the whole day, I miss the answers, if the PC is down, didn't I?
"
254077681,5780,rjanja,2016-10-16T21:50:30Z,"@NikoKrause I believe it had to do with behavior when closing and re-opening the menu, so the top-level category would appear selected, and on selection of another category would then appear unselected.
"
254183739,5780,clefebvre,2016-10-17T11:37:51Z,"Many keyboards have the menu key. Looking at the 5 computers closest to me here, 4 of them have it.

It's the key which is left of the right-control key. Its purpose is exactly that, to show context menus.
"
254203926,5780,NikoKrause,2016-10-17T13:15:50Z,"Okay, I'm out of ideas and need help getting the contextMenu of apps key-navigable.
For now the contextMenu of apps can be opened with the CONTROL keys (this will be changed later), but it's not possible to navigate through the contextMenu.

I think it the code to navigate through the contextMenu should be added here at the if query:

```
} else if (this._activeContainer === this.applicationsBox) {
...
} else if (goDown) {
                    this._previousSelectedActor = this.applicationsBox.get_child_at_index(index);
                    if (this._previousSelectedActor._delegate.menu.isOpen) {
                        // How to get the contextMenu navigable with keys?
                    } 
...
```

But I don't know how exactly this is done.
If somebody has any idea, please let me know. (JosephMcc: Maybe you can add the ""help wanted"" label to this PR?)
"
254902388,5780,NikoKrause,2016-10-19T18:36:44Z,"@Odyseus 
Do you know how to detect Ctrl+Enter?
I don't get it, how the ControlMask works.
"
254946899,5780,Odyseus,2016-10-19T21:31:04Z,"I don't really get it either. To detect modifier keys I use the following code that I barely understand:

``` javascript
let ctrlKey = Clutter.ModifierType.CONTROL_MASK & global.get_pointer()[2];
let shiftKey = Clutter.ModifierType.SHIFT_MASK & global.get_pointer()[2];
let altKey = Clutter.ModifierType.MOD1_MASK & global.get_pointer()[2];
```

---

**Edit**

I answered in a hurry and didn't mention some important notes. The three variables above will return an integer, not a boolean. If they are equal to 0 (zero), means that the modifier keys aren't pressed. If they are greater than zero, means that the modifiers keys are pressed.

As I prefer strict syntax, I don't like to use an integer as a boolean. So, I will start using the code as follows.

``` javascript
let ctrlKey = (Clutter.ModifierType.CONTROL_MASK & global.get_pointer()[2]) !== 0;
let shiftKey = (Clutter.ModifierType.SHIFT_MASK & global.get_pointer()[2]) !== 0;
let altKey = (Clutter.ModifierType.MOD1_MASK & global.get_pointer()[2]) !== 0;
```
"
255071662,5780,NikoKrause,2016-10-20T10:41:14Z,"@Odyseus 
Thanks. I found this here an hour ago: https://github.com/linuxmint/Cinnamon/blob/master/js/ui/appSwitcher/appSwitcher.js#L241
That worked for me.

The contextMenu opens now with CTRL+Enter or with the Menu-Key.

I can't still figure out, how to navigate through the contextMenu. Due to lack of time, I give up on trying and start hoping that somebody else has a good idea, how to fix that.

If somebody finds other issues or regressions with this pull request, please let me know.

Otherwise:
@clefebvre 
Let me know if I should rebase/squash this PR to 1 commit.
Or if I should close it. I fixed some other minor stuff with this PR, which is combined with the key-navigation, e.g. the keynavigation of the Recent files is broken, if there are no recent files.
If this PR doesn't make it to be merged, I would create for this stuff separate commits.
"
255141037,5780,rjanja,2016-10-20T15:31:47Z,"Generally it's easier on the maintainers if you separate bug fixes from new features, but your changes are all related to keyboard accessibility in the menu so it's probably fine.

My only minor gripe is that you removed an `else` block of code and only commented out the related `if` in https://github.com/linuxmint/Cinnamon/pull/5780/commits/907045401ac33fce7822e80998c7761569048986. It seems like the leftovers may cause confusion in the future.

Aside from that it looks good, though I haven't tested it out yet (I'm away from my Cinnamon desktop for another week or so).
"
255150532,5780,NikoKrause,2016-10-20T16:04:37Z,"@rjanja

> Generally it's easier on the maintainers if you separate bug fixes from new features, but your changes are all related to keyboard accessibility in the menu so it's probably fine.

I didn't separated the bug fixes, because I think this would lead to conflicts with this PR.

> My only minor gripe is that you removed an else block of code and only commented out the related if in 9070454. It seems like the leftovers may cause confusion in the future.

Yes. The if statement, which I commented out, is the place, where I suppose, that the contextMenuNavigation belongs to. I'll delete it, when I rebase this PR.
"
255896077,5780,NikoKrause,2016-10-24T23:38:08Z,"I tried to recap the changings, which were made in this PR. 
Therefor I edited my very first comment on this PR, so see above.
"
256041073,5780,NikoKrause,2016-10-25T13:54:03Z,"Squashed PR to 1 commit
"
256295302,5780,clefebvre,2016-10-26T09:27:04Z,"Thanks
"
256295739,5780,clefebvre,2016-10-26T09:28:50Z,"Very nice!
"
258778144,5780,Odyseus,2016-11-07T08:51:49Z,"Hello, everybody.

@NikoKrause
There is a little error in line [1550](https://github.com/linuxmint/Cinnamon/pull/5780/files#diff-9730f14a54367b06bdc5d0af4a9a5706R1550) of this commit (line [1553](https://github.com/linuxmint/Cinnamon/blob/master/files/usr/share/cinnamon/applets/menu%40cinnamon.org/applet.js#L1553) on master). The **item_actor** variable is set twice in a row.
"
258781500,5780,NikoKrause,2016-11-07T09:07:12Z,"It's not an error. The first one gets the first element, which is AllAppsCategory.
The second one gets the next element after the first.

The reason behind that:
If you open the menu the first time, the activeContainer is null, which means no button is selected. But the allAppsCategory button is already highlighted.
If I delete the second line and press down the very first time the menu is opened, the menu selects the first item in the categoriesBox, which is allAppsCategory and already highlighted. You wouldn't notice anything had happened. So you would have to press down twice to get the next category.
"
258785923,5780,Odyseus,2016-11-07T09:28:07Z,"I just read the code again (this time with my eyes open (LOL)). That's what happens when one is in front of a computer while sleep deprived.

Very sorry for wasting your time (and everybody's), NikoKrause!!!
"
366514046,6872,clefebvre,2018-02-18T12:53:04Z,Archiving this one.
430929517,7943,jaszhix,2018-10-18T08:53:44Z,Moved to an upstream branch #7944 
744334078,9771,clefebvre,2020-12-14T10:11:48Z,"Segfault while resizing it with the mouse: https://termbin.com/rqvy. It resized many times without crashing but eventually it crashed :)

After I resize I also have another problem. If the menu is too small for my categories I get a scrollbar for them.. that's ok... but scrolling there with the mouse wheel is clunky, it doesn't respond well and sometimes ignores the wheel motion. I get the feeling the hover system (to activate categories), or maybe the vector, gets in the way.

"
745423910,9771,mtwebster,2020-12-15T16:56:21Z,"Category scrolling fixed. I had to rewrite the vector stuff but it seems to be as effective.

I can't reproduce the crash, will keep an eye out."
745443734,9771,brownsr,2020-12-15T17:28:48Z,"I get a lot of these errors on trying to drag. Initial ones below:

Gdk-Message: 17:25:11.587: cinnamon-session: Fatal IO error 11 (Resource temporarily unavailable) on X server :0.

Gdk-Message: 17:25:11.588: csd-a11y-settings: Fatal IO error 11 (Resource temporarily unavailable) on X server :0.

Gdk-Message: 17:25:11.589: csd-media-keys: Fatal IO error 11 (Resource temporarily unavailable) on X server :0.

Gdk-Message: 17:25:11.593: csd-print-notifications: Fatal IO error 11 (Resource temporarily unavailable) on X server :0."
745446713,9771,mtwebster,2020-12-15T17:33:42Z,"Crazy I never saw anything like that. It's just using DND.makeDraggable.
What theme?
"
745450892,9771,brownsr,2020-12-15T17:40:08Z,Not a standard one !  I'll try again with Mint-Y
745452681,9771,mtwebster,2020-12-15T17:42:56Z,"I tested with Mint-*, cinnamon, Adapta-Nokto."
745454322,9771,mtwebster,2020-12-15T17:45:30Z,"Ok I noticed an issue in CBlack with resizing, I'll have to see what they're doing. I'll sample more as well."
745456752,9771,brownsr,2020-12-15T17:49:15Z,"Those x errors disappeared after a reboot, so ignore those, probably just me.  It all seems far better in mint-y.  graphite-zero was the theme I was using.  I'll check that out again.

Well that's interesting.  I changed back to the graphite-zero cinnamon theme, and am getting the same hang on drag and those x errors.  I guess something must be getting well out of range !"
745465695,9771,mtwebster,2020-12-15T18:04:42Z,Does it work ok if you only attempt to drag at the corner?
745471663,9771,brownsr,2020-12-15T18:15:24Z,"yes, that works fine."
745485598,9771,mtwebster,2020-12-15T18:40:33Z,"Ok it's to do with the margins between the popup and panel - `.menu.top, bottom, left, right`

I just need to take this into account I think.  Graphite-Zero doesn't crash here, it just grows uncontrollably (like CBlack)."
746528893,9771,lestcape,2020-12-16T15:58:03Z,"This is as some one that implemented the same some years ago. So, i hope this comment will be usefull here, otherwise please just ignored it.

This is a super nice feature and I'm speaking of get rid of St.Poligon in favour of just use math. The improve in performance of this was huge when i implemented this some years ago in the configurable menu fork. Here need to be the same performance increase.

The resize option is also nice, but in my opinion right now is only useful for resize the height and adapt the menu to several screen sizes. I think, it can be more useful later if it will come together with the possibility of to have more that one columns for the menu items. This is because right now the menu can increase the width but without the real advantage of display more content to the user. But anyway yes, more columns also means a reduction in performance, so it's also something to be thinking.

The feature of _update_scroll_policy it's a nice addition, but yes the exceeds width need to be fixed. Because of that I ended up fully hidden the scroll of the favourite box because of it. Then I preferred to add the auto-scroll with the mouse over feature there, but without showing the bar, to be preserved the width always. Probably it's better just not show the bar and instead add one button at top to scroll up and one at bottom to scroll down. But, they are just ideas and I have to admit that to me both things look like imperfect."
748430592,9771,fredcw,2020-12-19T06:55:12Z,"@mtwebster Although more rarely than before, it's still causing cinnamon to freeze/crash when resizing the menu. Happened 3 times.

Seems to coincide with garbage collection. This was repeated in the .xsession-errors one time:

```
(cinnamon:4072): Cjs-CRITICAL **: 06:45:06.776: Attempting to call back into JSAPI during the sweeping phase of GC. This is most likely caused by not destroying a Clutter actor or Gtk+ widget with ::destroy signals connected, but can also be caused by using the destroy(), dispose(), or remove() vfuncs. Because it would crash the application, it has been blocked and the JS callback not invoked.

(cinnamon:4072): Cjs-CRITICAL **: 06:45:06.776: The offending signal was allocate on CinnamonGenericContainer 0x55a4aa81b360.
== Stack trace for context 0x55a4aa7cd180 ==
#0   7fffa0bc1770 I   /usr/share/cinnamon/js/ui/popupMenu.js:2562 (3e0d7200cb50 @ 28)
#1   7fffa0bc17c0 I   self-hosted:844 (d1ddd8c2970 @ 492)
#2   7fffa0bc3130 I   /usr/share/cinnamon/js/ui/main.js:356 (d1ddd8d4b00 @ 87)
```
and
```
(cinnamon:4072): Cjs-CRITICAL **: 06:45:07.469: Attempting to run a JS callback during garbage collection. This is most likely caused by destroying a Clutter actor or GTK widget with ::destroy signal connected, or using the destroy(), dispose(), or remove() vfuncs. Because it would crash the application, it has been blocked.

(cinnamon:4072): Cjs-CRITICAL **: 06:45:07.469: The offending callback was SourceFunc().
== Stack trace for context 0x55a4aa7cd180 ==
```"
748454622,9771,lestcape,2020-12-19T10:29:13Z,@fredcw I think that issue will be a little difficult to be fixed in cinnamon as is a gjs/cjs issue https://gitlab.gnome.org/GNOME/gjs/-/issues/327
748479797,9771,fredcw,2020-12-19T14:11:36Z,"@lestcape @mtwebster Adding:
`const System = imports.system;`
and
`System.gc();`
somewhere in _poll_timeout() seems to fix the problem but there's quite a performance hit. Maybe add a counter to call ""System.gc();"" every 100th time or something."
748487361,9771,mtwebster,2020-12-19T15:19:07Z,"Weird, I have yet to run into this error. I wonder if I block that signal during a resize it might avoid it. Curious what part of the desktop is your menu applet on (bottom left, top left, etc..)?

edit: nm, I read the upstream issue, the timer probably what's causing this.

I can increase the timeout but it probably wouldn't fix this (and would make resizing ugly)."
748600105,9771,fredcw,2020-12-20T12:15:42Z,@mtwebster Not sure if my suggestion works or is even necessary as I've got it working in cinnamenu without using System.gc() linuxmint/cinnamon-spices-applets#3372
748645628,9771,lestcape,2020-12-20T18:47:29Z,"@mtwebster Yes, the problem occurs in a callback in the upstream issue, so should be your timer here. Like @fredcw did not implement the timer in Cinnamenu, he does not see the problem in his solution. Anyway, i think you can not remove the timer because of https://github.com/linuxmint/cinnamon/pull/9771#issuecomment-745443734 and because update the setting in real time implies a bad performance.

@fredcw Yes a gc hide the problem, because reduce the possibility that an automatically gc will be called in the middle of a callback  (the timer). But in a middle of an actor resize is not a good time to call a gc."
748648272,9771,mtwebster,2020-12-20T19:12:28Z,"I'm going to get rid of this timer, I don't want to be anywhere near that. This is going to wait until 4.0 anyhow."
751135645,9771,lestcape,2020-12-25T00:34:39Z,"Revisiting my own comment about the scroll of the favourite menu box, I need to add that even GNOME or Unity have the same problem and they don't show the scroll bar in his default left vertical panel. Also the cinnamon panel in the vertical or horizontal position have not a visible scroll. Probably this is why i dislike the idea of a visible scroll in the favourite box of the menu. I think in cases like that users are waiting to have a way to scroll, but not with a visible bar. The common way is just scrolling with the help of the mouse-over signal and not with the scroll bar. In Unity they implemented a revolutionary way to fold the elements, but this seem really difficult to be reproduced, anyway the Unity way was also a nice way in my opinion."
751567714,9771,fredcw,2020-12-28T04:10:53Z,"@mtwebster A strange thing: I just tried completely removing the time_out call in cinnamenu and replaced it with responding to all mouse events with Clutter.grab_pointer(this.actor) the same way js/ui/dnd.js does and cinnamon is still crashing when resizing in seemingly the same way is was before.

```
(cinnamon:1162): Cjs-ERROR **: 03:46:16.561: toggling down object GInotifyFileMonitor that's already queued to toggle up

Traceback (most recent call last):
  File ""/usr/bin/cinnamon-launcher"", line 72, in <module>
    os.execvp(FALLBACK_COMMAND, (FALLBACK_COMMAND,) + FALLBACK_ARGS)
  File ""/usr/lib/python3.9/os.py"", line 574, in execvp
    _execvpe(file, args)
  File ""/usr/lib/python3.9/os.py"", line 616, in _execvpe
    raise last_exc
  File ""/usr/lib/python3.9/os.py"", line 607, in _execvpe
    exec_func(fullname, *argrest)
FileNotFoundError: [Errno 2] No such file or directory
```"
755081805,9771,fredcw,2021-01-06T05:09:08Z,Not updating the settings-schema settings while resizing the menu (in cinnamenu) is the only solution I've found to this bug even when using Clutter.grab_pointer instead of the timer.
755266081,9771,lestcape,2021-01-06T12:14:46Z,"First things first: Happy new year!

I think that the usage of [cinnamon gsettings](https://github.com/linuxmint/cinnamon/blob/master/data/org.cinnamon.gschema.xml) to globally store the menu size should probably be the best workaround to the problem right now. At least while the upstream gjs bug is resolved. This will also spam the disk, but the gsettings implementation should be much more robust than manually write a file in js. Well, at less i think it deserve test it.

Let me ask something out of scope here, only for curiosity: @mtwebster you are [working](https://github.com/mtwebster/utils/blob/master/input-region-bug.py) on separate the shell ui from the muffin compositor? I found this code searching for `input_shape_combine_region` in github... This code can be used to separate the whole ui or just only the popupmenu or the component you want, as you can use GtkClutterEmbed in the transparent Gtk window with the same size as the whole gdk_display and build the Cinnamon ui inside the GtkClutterEmbed  stage."
755960643,9771,lestcape,2021-01-07T08:17:26Z,"I just reviewed the Configurable Menu code. What i was doing there was storage the menu position only in the `on_mouse_released` event (So, i have two set of variables to control the size. The settings ones and the current simples ones that are just used while the menu is alive). In that way the user can move the menu all he/she want and only when the menu resize is finished the result was storage.

This procedure reduce the disk load to the minimum and also is a work-around to the upstream bug, because a timer is not needed in that way. Also the solution ensure that the last menu position will be storaged, a thing that a timer can not ensure. The worse thing that can happens in that solution should be have a user making several clics inside the menu resize area. This is a thing that also should be fixed if we just chek if the size change really before the storage of the the values. Hope, this help."
773501977,9771,fredcw,2021-02-04T18:06:29Z,"This bug has cropped up in a couple of other places. One time when I was adjusting the panel label in settings, cinnamon crashed and again when adjusting the panel icon size (both times in cinnamenu)."
801960273,9771,mtwebster,2021-03-18T14:10:42Z,"I merged a lot of things here into master, except for the actual dnd resizing. As a result, this probably isn't as urgent to handle, other than for the convenience factor.  The menu now grows as needed, but can be fixed in height if desired - either way it enables scrollbars when necessary to keep all content accessible (and keep it from growing outside the work area)."
1151340437,9771,mtwebster,2022-06-09T16:19:35Z,This isn't all that important at this point.
57296456,3553,ondrejkolin,2014-09-30T10:52:49Z,"Added the flickrapi.py file and edited cs_backgrounds.py
"
59296309,3553,mtwebster,2014-10-16T00:08:05Z,"Hi - made a few (hopefully!) constructive comments, feel free to hit me up in irc with questions, I'll try it again once you've had a chance to mess with a few things.

The only real concern is about that api key, how long does it last and can it be renewed or?
"
59633218,3553,JosephMcc,2014-10-18T23:14:09Z,"@KOLEGA007 there are a couple of things with regards to using the flickr api key that ""could"" be problematic. 

It appears the key is limited to a certain number of queries per hour. The number is large, 3600, but your talking about all Cinnamon users. That means not only Mint but Ubuntu, Arch, Fedora, etc. Violating that gets your api key turned off or expired.

A couple other things of note:

You can't use the flickr icon without the ""express written permission from Flickr"".

You shall place the following notice prominently on your application: ""This product uses the Flickr API but is not endorsed or certified by Flickr.""

Maybe there are ways to work with those restrictions but they should probably be kept in mind.
"
59683338,3553,ondrejkolin,2014-10-20T04:46:49Z,"@JosephMcc Right... I'll try to contact flickr as soon as possible ... 
"
65546446,3553,ondrejkolin,2014-12-04T07:15:02Z,"To that Flickr limit ... Here are answers https://www.flickr.com/groups/api/discuss/72157649172558377/72157647273714513/

That limit is average 1 call per sec for some period ... Like one week or maybe even more 
So its like 7_24_60*60 calls per week (=604800)
"
98655258,3553,clefebvre,2015-05-04T09:51:09Z,"A couple of small issues easy to fix:

Popen -> subprocess.Popen
time.sleep() -> missing import time
chmod a+rx files/usr/lib/cinnamon-settings/bin/flickrapi.py (else we get a permission denied)

A couple of other issues:

That API key is a real show stopper... we could ask the user to provide a key in the preferences and expose flickr support only then, but that's tedious. I don't expect users to be able to go and get a key themselves... they might not even understand what it means.

As bgs are downloaded/converted, the BG view in the settings doesn't get updated.
"
98770912,3553,jlu5,2015-05-04T16:20:13Z,"I feel like it's a bad idea to call Python from Python via subprocess. Using imports would be much more versatile and efficient.
"
98829944,3553,ondrejkolin,2015-05-04T19:45:21Z,"@GLolol Got your point, made it like this because I want to make it independent (async) from cs_backgrounds.py...

If you have any advices ... Teach me, thanks :)
"
98831343,3553,ondrejkolin,2015-05-04T19:48:04Z,"@clefebvre Clem, could somebody of team (probably you) contant  Flickr and offer something like ""collaboration""? I think, that huge number of Linux User could convince them, we could point this in backgrounds ... :)
"
98832474,3553,dalcde,2015-05-04T19:53:27Z,"I'm not sure how likely that would be. Since Cinnamon is open-source and the key we use will be publicly available, if we have something like an unlimited key, anyone would be able to take it and exploit it to do whatever they want.
"
98832781,3553,ondrejkolin,2015-05-04T19:55:15Z,"@dalcde some binary from Flickr aka License server? ... (just idea, do not hate me, I am liberal)

Or it does not have to be a binary ... 
"
98833741,3553,dalcde,2015-05-04T20:00:38Z,"Sorry for being pessimistic, but I don't think that will help. It would be very easy to understand how Cinnamon uses and parses the binary, and then use it to do whatever you want. Especially if the code is in python.
"
98834324,3553,ondrejkolin,2015-05-04T20:03:43Z,"Some OAuth site? On first run with Captcha? Crackers can although take a key from flickr site ... I think, that main problem is here, that we would not convince them ... 
"
99993695,3553,ondrejkolin,2015-05-07T19:45:19Z,"UPDATE: Trying to contant flickr ... Found some form for contacting them... Got small solution, like users should've log into flickr (f.e. using OAuth) and after that, Flickr could provide us unique api key for each user, which we will save localy ... Anyway I think it will fail, from the Flickr side ... 
"
100646775,3553,ondrejkolin,2015-05-10T14:21:46Z,"@clefebvre Clem, please read this topic: https://www.flickr.com/groups/51035612836@N01/discuss/72157652534378861/72157650245110204/

In another topic I've read, that mainly IP's, not keys are banned. 

Posibly solution: We will release it with our (my) api key and we will give users notice, that they should get their own (with link to flickr api garden).

Anyway still there is the problem with no updating of downloaded pictures :/
"
102551561,3553,ghost,2015-05-16T00:01:48Z,"@KOLEGA007 sorry for my stupid suggestion, because i really don't understand all what you are doing. Just a question. As this is an online Api, will not help redirect the request to an intermediate server, who can include the key and redirect the request to the real server with the correct data. Possible the server could automatically request a new key when is needed. In that way, the user not need to know about the internal implementation and less about keys and complex things.
"
103887106,3553,ondrejkolin,2015-05-20T13:24:04Z,"I mentioned that the second way, but, we will rather force user to put his own API key into CS
"
107862535,3553,ghost,2015-06-02T08:32:37Z,"Indeed i know that the settings speed is important, but there are a possibility to create an spices session or something to add settings modules? This could be a user settings module(a module that could be loaded from the user home folder).
I have three modules that could be added as a user settings modules. One of them allow to create more user settings modules using a, desktop file or a custom command. With this will be four. I have no doubt that other external users can write more modules.

In short, all the hard work is already done, would add just another path where load the modules and the hardest part would be to add another section to spices.

Would be possible this?
"
192341398,3553,clefebvre,2016-03-04T16:20:37Z,"Hi,

I'm going to close this PR.

It's a fantastic feature and it works quite well but it relies on an API key and so we couldn't/shouldn't ship it by default. It's probably better as a cinnamon spice with the user entering his own flickr key.
"
13531725,1679,Lusito,2013-02-14T03:37:52Z,"thoughts on translations for settings.json ?
Currently it seems that description can not be translated.
On a sidenote, metadata.json has the same issue.

edit:
also, I'd choose something else than settings.json as a filename.
for one, some applets already store settings, they might use settings.json for it (haven't checked).
and also, settings.json implies that it contains settings. while it actually contains the schema for the settings.
how about settings-schema.json ?
"
13531954,1679,Lusito,2013-02-14T03:49:36Z,"Another issue about new features like this came to mind when discussing the applet and desklet api camelCase issue:
Older cinnamon versions won't be able to run new applets that use these new features.
So how are we going to handle new features and old cinnamon versions ?
Will be backport new features ? Or do we just want to keep old applets compatible with new cinnamon versions ?
I think it's safe to say that there will be a couple of new features for the next release and there might be more in future releases, so we should probably discuss how to proceed.
"
13545826,1679,mtwebster,2013-02-14T12:42:27Z,"I'll add translation to my 'list' of todo stuff.  Right now I'm duplicating the setting file into another 'working' copy.  I'm sure we could get that original schema file translated, but I don't use it except on startup.  Maybe I just store values in the working copy, and keep referencing the original for everything else.  I'll play around with it.

As for older cinnamon versions, the simplest thing people could do is try/catch the whole setting initialization, and fallback to default values for their settings.

Not sure - it's been easy to maintain compatibility so far, because no existing releases have really touched the applet api at all, just under-the-hood tweaks.
"
13589984,1679,mtwebster,2013-02-15T02:12:42Z,"Got it integrated with the applet page in cinnamon settings now.

The only applet utilizing it right now is the new spacer applet.  Still needs ui improvements, but it's getting there
"
13591725,1679,mtwebster,2013-02-15T03:47:24Z,"A few screenshots for a taste - this is with rjanja's awesome applet installer:

Applet page with a configurable applet selected:

![](http://i.imgur.com/ef3e9BQ.png)

Config page opened for the selected applet:

![](http://i.imgur.com/a2IUCEX.png)
"
13608207,1679,Lusito,2013-02-15T14:16:16Z,"very nice.
is it possible to store settings which are invisible to the user ? for example a cache or a history ?
Also, if at all possible, it would be really neat, if one could create an add-in for the settings page in python.
"
13608755,1679,Lusito,2013-02-15T14:29:06Z,"about the multi instance logic: if max-instances is not set, it should be assumed to be 1.
if max-instances is <= 1 it does not allow multiple instances.
"
13608878,1679,mtwebster,2013-02-15T14:31:22Z,"That was overturned in chat a while back, the default assumption is multiple instances. (though I personally would prefer a default of 1)
"
13609089,1679,Lusito,2013-02-15T14:36:04Z,"I wrote the whole multi-instance thing and I tell you, it is not good to assume an applet can be added multiple times by default.
Simply for the reason that they will collide on some occasions (for example when storing settings), caches, etc.
If applet developers think their applet is multi-instance safe, it can be easily added with a single line in metadata.json
"
13679975,1679,mtwebster,2013-02-17T03:15:04Z,"I've started working on some instructions/documentation for this stuff:

https://github.com/linuxmint/Cinnamon/wiki/Applet,-Desklet-and-Extension-Settings

That is the basic introduction.

There's also a link to a reference I've started (at the top of that wiki page)
"
13705652,1679,mtwebster,2013-02-18T03:57:48Z,"Added extensions support (untested but should work - will test at a later date)
"
13733035,1679,Lusito,2013-02-18T17:30:37Z,"Here's an idea: a way to enable/disable a setting depending on another (boolean) setting.
If we had that, we could completely move the menu settings to appletsettings.
"
13733162,1679,mtwebster,2013-02-18T17:32:58Z,"Already in there

On Mon, Feb 18, 2013 at 12:30 PM, Lusito notifications@github.com wrote:

> Here's an idea: a way to enable/disable a setting depending on another
> (boolean) setting.
> If we had that, we could completely move the menu settings to
> appletsettings.
> 
> —
> Reply to this email directly or view it on GitHubhttps://github.com/linuxmint/Cinnamon/pull/1679#issuecomment-13733035.
"
13757460,1679,rjanja,2013-02-19T05:19:56Z,"@mtwebster thanks for all this, it's looking really good.

I've been trying to implement AppletSettings in my applet while preserving existing JSON settings storage when not available (<1.8). I could just go with two distinctly different versions but it shouldn't be that much work to have one that suits both.

Couple of thoughts:
- Can we combine the three `bindXYZ()` functions into a single `AppletSettings.bind()`? We can still check data types within, although we probably don't need to - we also aren't checking them when setting values.
- Can we pass the `applet_var` reference directly instead of by property name, or could we make this argument optional? I ask because it seems like we might not need two distinct names here. I rather like the thought of referring to applet settings within an applet by the exact key name, instead of having a `_pintoBeans` property that corresponds to a `may-have-pinto-beans` setting. With many settings it can be hard to keep track of them all and their local equivalents. `this.settings.get('may-have-pinto-beans');` is preferable to `this._pintoBeans` in my opinion :)

Thanks!
"
13770523,1679,mtwebster,2013-02-19T12:41:31Z,"I'll think about the first one, probably would be fine to just not worry about types.

The second item, the property name _has_ to be passed as a string, so I can refer to the applet object property itself, instead of just the _value_ of that property (lack of pointers forced it to be this way).  Also, the names _can_ be the same, you just have to be careful with hyphenated property names (you can't use this.may-have-pinto-beans) - I'm tempted to leave this one alone.
"
13775469,1679,mtwebster,2013-02-19T14:40:41Z,"To expand on the second item a bit more:  In the settings backend I'm already only referring to the object property as applet[""prop_name"", I never refer to it as applet.prop_name - so you're free to do the same in the applet, you just need to make sure however you refer to it that it's correct (no - in the name if you're using this.xxx)
"
13781242,1679,mtwebster,2013-02-19T16:20:26Z,"Ok, changed api to just bindProperty, and added tooltip support (key name ""tooltip"")
"
13787037,1679,mtwebster,2013-02-19T17:55:43Z,"Default multiple instances has been vetoed, default is single now.  I think I covered all the bases regarding that in my last couple changes
"
14310711,1679,Lusito,2013-03-01T20:51:59Z,"@clefebvre:
what are your thoughts about backporting the applet settings to older releases ?
If you want applets to remain version independent, it seems necessary, unless you want to fall back to default settings if the api is not available, which is ugly to code and ugly for developers as well, because they will probably have to maintain an own configuration app.

What versions would we have to take care of then ?
Or rather, for what versions is an upgrade impossible ?
"
14315074,1679,mtwebster,2013-03-01T22:26:04Z,"I'm not sure how much of a problem this will be.

We promise backporting Cinnamon to Mint 13, no older, if I understand correctly.  So anyone on 13 or newer will always be running the latest official release of Cinnamon at the very least, which will include the settings API.

Anyone running less than Mint 13 should be encouraged to upgrade anyhow.

We can't handcuff ourselves with this - anyone that's under the current support umbrella should be covered by Cinnamon backports, thus providing settings api.  Anyone that isn't, the answer is they need to upgrade.
"
14323939,1679,Lusito,2013-03-02T06:24:27Z,"ok, so mint 13 is Cinnamon 1.4,  that leaves cinnamon 1.2 and below.
Mint 12 was still on MGSE. Was Cinnamon supplied to Mint 12 at all ?

Back to topic:
dependency is a bit limited right now.
It would be nice if the following would be supported:
- inverted, i.e. a checkbox not being selected enables the option
- a certain radio button being selected (or not being selected)
- a certain combobox item selected (or not being selected)
- multiple dependencies, for example only if 2 dependencies are matched.
"
14682516,1679,Lusito,2013-03-10T14:52:47Z,"I'm currently converting the menu settings to the new cinnamon settings and noticed how long it takes for the changes to reach the applet.
I think that should be sped up. Currently it takes 2-3 seconds.

Also, you say that you can let the callback for a bind be null, but that causes an exception.
"
14686931,1679,mtwebster,2013-03-10T19:04:54Z,"Some of that delay is intentional, as the file monitor for the settings file can spam 3-4 updates in succession, so I built in delays to ignore hammering the changed signal.  It's definitely not 2-3 seconds though, or shouldn't be.
"
14687081,1679,Lusito,2013-03-10T19:12:29Z,"You are writing the settings file from cinnamon-settings, I think that is the flaw in the process.
How about using dbus to notify cinnamon instantly, and let cinnamon handle saving the file.
That would also remove the need for file locking that would need to be done when cinnamon-settings and an applet store settings at the same time.
You could then store the file in less frequent intervals from within cinnamon as you please, but still keep the applets instantly up to date.
"
14687160,1679,Lusito,2013-03-10T19:16:30Z,"Another bonus would be that you could easily add keyboard shortcuts for some of those settings
"
15349655,1814,Garibaldo,2013-03-24T01:39:30Z,"Great job! Thanks.
Will hot corners still be able to be configured to launch custom commands? I can't see the option in your picture.
"
15349678,1814,Lusito,2013-03-24T01:41:39Z,"Sure, the entry field is just hidden to avoid confusion (when the selection is not ""custom"").
just like the visible checkbox is hidden when the selection is ""disabled""
"
15349712,1814,Garibaldo,2013-03-24T01:44:08Z,"Awesome! Cinnamon really needs those UI improvements.
"
15352836,1814,gauravjuvekar,2013-03-24T07:46:54Z,"@Lusito 
The red highlight looks inconsistent. Can you grab a colour from the current gtk theme so that it would go well with the OS(light green for mint, orange for ubuntu)

I guess that would be ""@theme_selected_bg_color"" as shown in 
[this file](https://github.com/linuxmint/mint-themes/blob/master/usr/share/themes/Mint-X/gtk-2.0/gtkrc) (thrid line)
"
15360862,1814,Lusito,2013-03-24T15:35:15Z,"cinnamon-settings is running on gtk-3, your file is for gtk-2.
But anyway, I don't think I can directly access values from the css file.
I would probably need a widget where I can get the border color or something from.
It would also be best to grab the background color as well, but currently I have no idea which widget would be suited.
I will take a look tho.
"
15361529,1814,mtwebster,2013-03-24T16:06:56Z,"You can make a new GtkStyleContext, then add class 'button' (for instance, maybe a different one will work) - look in devhelp there are a lot of standard style class names 'GTK_STYLE_CLASS_XXXX'

From there you can do context.get_background_color(Gtk.StateFlag.xxx) - where state is NORMAL, ACTIVE, etc..

it should return a GtkRGBA, which you can inspect and assign to your cairo context
"
15362683,1814,Lusito,2013-03-24T17:02:58Z,"I know, the problem is tho, that not all themes have a background color, but instead a background ""image"", for example a gradient. This won't work with those themes.
"
15364823,1814,gauravjuvekar,2013-03-24T17:57:25Z,"> not all themes have a background color

But I'm pretty sure they atleast have a base color. We can use that as a fallback.
"
15365418,1814,Lusito,2013-03-24T18:25:42Z,"I can't make the light green look good, so instead I'm using success & error colors:

![HotCorners2](http://lusito.info/hotcorners2.png)
"
15365426,1814,gauravjuvekar,2013-03-24T18:25:52Z,"Ok, new brainwave.
How about we use the current wallpaper as the background?(like the way a screen with the background is shown in the backgrounds section)
Pros
[] Consistent across themes.
[] Realistic
cons
[] Would suck if the background colour is similar to the corner(theme) colour.
"
15365585,1814,Garibaldo,2013-03-24T18:33:59Z,"I don't think it's a good idea to use the current wallpaper as the background. I'd much rather have the clean look of a neutral background, like this one used above.  
"
15366202,1814,Lusito,2013-03-24T19:07:19Z,"Not gonna add the background image.

Toned down the colors a bit:
![Hot Corner 4](http://lusito.info/hotcorners4.png)
"
15376549,1814,gauravjuvekar,2013-03-25T03:36:24Z,"The normal mint-green is ""#accd8a""
""#c2dda7"" would be a lighter version
See if they look any better.
"
15376587,1814,Lusito,2013-03-25T03:38:21Z,"I won't use hardcoded colors.
"
15376655,1814,gauravjuvekar,2013-03-25T03:42:33Z,"I know but you said you toned them down. Which theme are you using?
"
15376685,1814,Lusito,2013-03-25T03:44:08Z,"I toned them down a bit by reducing the alpha channel of the colors. the colors themselves are still taken from the users theme.
currently using the default theme, mint-z or x.
"
15376779,1814,gauravjuvekar,2013-03-25T03:49:28Z,"Ok then, but which theme are you using.
"
15376860,1814,Lusito,2013-03-25T03:54:04Z,"mint-z or x I think, the default one for nadia. I don't have linux running atm, so I can't say exactly.
"
15376897,1814,gauravjuvekar,2013-03-25T03:56:03Z,"Ok, thanks.
"
15426256,1814,bimsebasse,2013-03-25T21:18:39Z,"Awesome, Lusito! Only one thing - it would probably be more neutral and suit more gtk themes if the enabled/disabled hot corner markers weren't green and pink. How about calling gtk theme hex values? I.e. selected_bg_color for enabled hotcorners and something like unfocused selected color for disabled/inactive hotcorners?

Inactive theme color makes more sense than error theme color for something which isn't enabled.
"
15433661,1814,Lusito,2013-03-26T00:09:34Z,"I am using gtk theme values (success_color and error_color).
I've tried using selected_bg_color, but it looks awful on the background colors/gradients that I was able to extract.
Besides, I have not found any color name as alternative for inactive that is available on all themes and does not fade into the background.
I would love to use the progress bar or slider colors, but I can't get them to work properly, since there are no color names for them and extracting them from a widget seems impossible.
"
15433841,1814,bimsebasse,2013-03-26T00:14:50Z,"Fair enough. 

Wouldn't initially work with Mint-X either as it has a blue selected_bg_color from the theme it's a modification of, overwritten in settings.ini by the proper green color.
"
17485251,1814,lzbk,2013-05-06T14:36:38Z,"Mmmm, I'm arriving a bit late on that I'm afraid, but I'm just starting to use cinnamon after one year of ""Lisa"" (great job, I might add).
I'm wondering whether we could not make this more powerful and easily configurable for the average user. I mean the ""personnalized"" box for command input is great. But wouldn't it be nice to use this very nice feature of cinnamon that are applets ? The system could propose in the list of actions for hot corners any applet/extension installed in the current cinnamon environment.
This might require metadata that is not currently available for applets (such as a default action or a ""hot corner"" action), but I think this would make the hot corners a lot more customizeable to the newbie (for instance, I wanted a ""show desktop"" hot corner…).
Would I be the only one interested in this feature ? Would it be a lot of hassle to create ?
"
17491660,1814,gauravjuvekar,2013-05-06T16:20:38Z,"@lzbk On that note, I have a lot of ideas for hotcorners. Switching to next/previous workspace would be quite handy for instance.
"
6799409,877,autarkper,2012-07-06T08:02:19Z,"Mostly +1 here. I have one niggle though:

The menu pops up with the left side aligned with the mouse pointer, which makes it look strangely offset. http://imagebin.org/219658. Compare that to the alignment of the tiny up-arrow icon and the same menu.
"
6800389,877,dalcde,2012-07-06T09:03:15Z,"Sorry, I was testing with a theme without an arrow, so I didn't notice the issue.
"
6800857,877,dalcde,2012-07-06T09:30:32Z,"@autarkper Fixed!
"
6801368,877,autarkper,2012-07-06T09:59:35Z,"Sorry to be such a pedant, but still a bit off to the right, so that the arrows don't quite meet: http://imagebin.org/219665.

It looks like the alignment is to center of the cursor, while IMO you should align with the cursor's tip, i.e., the left edge. 
"
6801444,877,autarkper,2012-07-06T10:03:32Z,"Also, I think a second right-click when the menu is open should close it again.
"
6814679,877,autarkper,2012-07-06T19:51:17Z,"Sorry if I'm missing something obvious, but the last commit makes the menu open where you clicked last time, and it doesn't open at all on the first click. And it doesn't close the menu on second right click.

To reproduce: 
0) Restart Cinnamon.
1) Right-click in the panel to bring up the menu. First time: nothing comes up.
2) Right-click again. This time the menu comes up.
3) Click in the desktop. The menu closes.
4) Right-click in the panel to bring up the menu. The menu opens where you clicked in step 2.
"
6817229,877,dalcde,2012-07-06T21:57:38Z,"Sorry, did the wrong thing. Too sleepy...
Will make another commit.
"
6821019,877,autarkper,2012-07-07T06:34:25Z,"It's working splendidly now, great work!
"
6821563,877,dalcde,2012-07-07T08:46:55Z,"Thank you. it was a bit messy, though (I hate merge conflicts!)
"
6821579,877,dalcde,2012-07-07T08:48:32Z,"It seems like you branched off the wrong spot (you repeated all my commits)
"
6821682,877,autarkper,2012-07-07T09:10:50Z,"Sorry about that. Whatever I did went wrong - I tried to rebase on your 
branch but I got a lot of commits from the master branch. In the end I 
think I rebased on your last commit, but still your commits got 
included. I thought git would figure out not to redo them, but It seems 
I was wrong. I've still got some things to learn about git...
"
6821773,877,dalcde,2012-07-07T09:26:37Z,"Git is indeed complicated. Just borrowed a book from library to learn Git.
"
6864827,877,dalcde,2012-07-10T01:44:57Z,"You don't have to do any rebase. When you select the pull request range, you can choose the branch you want the pull to be merged to (in this case panel-right-click-menu)
"
6956147,877,autarkper,2012-07-13T07:06:48Z,"I'm thinking, this causes a lot of code duplication between panel.js and the settings applet. Perhaps it would be better to move the code to panel.js and let the settings applet call into it, and maybe even scrap the settings applet completely?
"
6957957,877,dalcde,2012-07-13T09:05:08Z,"If they are truly identical, we can do as you said. If not, maybe we can create a SettingsBasePopupMenu or something like that, but I don't think we should remove the settings applet since we might have a full panel.
"
6958098,877,autarkper,2012-07-13T09:14:00Z,"My idea was to also take the up-arrow from the applet and display it in the panel.
"
6958406,877,dalcde,2012-07-13T09:31:40Z,"Well, I'd like to be able to move the arrow (or replace it with something else).
"
6959825,877,autarkper,2012-07-13T10:48:17Z,"What if we make the settings applet into a pseudo-applet, contained within panel.js?

No, maybe not. But I'm going to look into breaking out the menu-building stuff from panel.js.
"
6963659,877,autarkper,2012-07-13T13:53:28Z,"On my new branch panel-context-menu,
https://github.com/autarkper/Cinnamon/compare/master...panel-context-menu, I have implemented this idea. Please try it out.
"
6977130,877,dalcde,2012-07-13T22:31:53Z,"It looks nice. I'll try it out. But did you squash my commits? 
"
6980277,877,autarkper,2012-07-14T05:35:45Z,"Yes, I squashed all prior history, as it had become rather messy after my pull request.
"
6980736,877,dalcde,2012-07-14T07:08:08Z,"I'm afraid that if I try to pull your commits, it WILL become messy.
"
6981158,877,autarkper,2012-07-14T08:31:02Z,"@dalcde: I think the best thing for you to do is to branch off my branch.
"
6981216,877,dalcde,2012-07-14T08:41:06Z,"And I close this pull request and you make a pull request with your branch. That way it is a lot cleaner.
"
12136701,1598,autarkper,2013-01-11T09:14:15Z,"![Screenshot from 2013-01-11 10:03:05-s](https://f.cloud.github.com/assets/750787/59519/32c174d8-5bcf-11e2-93e2-a7fbf88b3f04.png)

This screenshot shows sets of windows from five workspaces, each set separated by a vertical separator.
"
12159926,1598,bimsebasse,2013-01-11T19:36:23Z,"Looks more powerful than in GS already - but the separator needs to be handled by the theme, just like horizontal separators are - hardcoding it only has cons, no pros.

Example:
.switcher-list .separator {
    width: 1px;
    background: rgba(255,255,255,0.33);
}
"
12162742,1598,autarkper,2013-01-11T20:47:44Z,"@bimsebasse: I don't quite see what you mean about hardcoded style. The separator has class 'separator' already, and there is no hardcoding, as far as I can see.
"
12162890,1598,bimsebasse,2013-01-11T20:51:55Z,"Hehe, my bad - I noticed you hadn't added one to cinnamon.css and thought therefore it was hardcoded, but I see now the class is already in cinnamon.css as an (until now) unused gnome-shell leftover.
"
12733172,1598,autarkper,2013-01-26T09:33:42Z,"This small project has grown into another overhaul of Alt-Tab. I'm not going to describe the details, I would prefer that people tried it out before forming a strong opinion.
"
12734911,1598,gauravjuvekar,2013-01-26T12:49:58Z,"Since it has become another overhaul, how about distinctly separating the windows of the current workspace form all other ones. I am thinking something like 

![Untitled](https://f.cloud.github.com/assets/2271906/99755/de35bbe2-67b6-11e2-9d04-95c12faa96d7.png)
"
12735439,1598,autarkper,2013-01-26T13:41:08Z,"Not a bad idea. One problem with a two-row switcher bar, though, is that it takes up more space (probably only relevant if you prefer the 'icons+preview' style). It's also a lot more work ;-) So personally I would prefer to have all windows on the same row, with some kind of visual distinction showing their origin.
"
12737981,1598,gauravjuvekar,2013-01-26T16:55:03Z,"That's all right, maybe someone could come up with an extension for this. I just feel that while alt-tabbing, one wants to switch quickly to another window in the same workspace rather than another workspace so we must keep the windows from the same workspace more prominent.

If one is on the first/last workspace, having the alt tab entries on the extreme left/right might be a bit odd, you would expect them to be up and center.

One problem that I find with the current approach is that it would be confusing when #561 gets implemented. Kind of confusing now even if you arrange the workspaces as grid(option in settings).

PS: Did you add a setting to enable or disable this behavior? Some people(especially with small screens) would find it too crowding.
"
12738077,1598,bimsebasse,2013-01-26T17:01:06Z,"I don't find it confusing, tbh. The alt tab shouldn't be made too complicated - separators ought to be enough to distinguish between workspaces.
"
12740046,1598,gauravjuvekar,2013-01-26T18:52:57Z,"@bimsebasse
I said confusing when we implement a proper workspace grid. Then the alt-tab would then be linear while workspaces would be 2 dimensional.

If you have 4 workspaces in a 2x2 grid and you are in top left one(workspace 1), the window you seek is in the bottom left one(workspace 3) alt-tab would place it near the right of the screen where one wouldn't really expect it as one would be thinking ""bottom"" and _""left""_, expecting it to be somewhere on the left of the alt-tab strip.
"
12740184,1598,autarkper,2013-01-26T19:01:01Z,"I won't start worrying about multi-dimensional workspaces until they are implemented.

@gauravjuvekar: I won't add a setting until I know whether this will be accepted at all.
"
12744101,1598,Lusito,2013-01-26T23:01:41Z,"It would be great if this would support the same controls as Coverflow Alt-Tab:
http://cinnamon-spices.linuxmint.com/extensions/view/3
"
12744408,1598,areynaldos,2013-01-26T23:24:22Z,"Sorry, I'm here with @gauravjuveka

I really think this should be an extension, so to make it optional.

The reason that I use workspaces is to declutter my workspaces, _especially_ if I have several windows from the same application spread among them.

To have ALT-TAB to show windows from all workspaces simple defeats their purpose. I think if somebody wants to go with this functionality, it should be completely optional, again, as an extension.

When I want to see all my workspaces and their windows I use the expo (is it expo?) functionality.
"
12747586,1598,gauravjuvekar,2013-01-27T04:41:34Z,"@areynaldos
Yep, it's expo.

By extension, I'm talking about the two-rowed style(see picture above). Implementing the all-windows-in-one-row style that autarkper is working on should be in Cinnamon by default but with an option to disable it(not as an extension as configuring extensions is not very well supported right now.)
"
12750178,1598,autarkper,2013-01-27T07:59:30Z,"@Lusito: Could you please be more specific about what features from Coverflow that you would like to have?
"
12750350,1598,bimsebasse,2013-01-27T08:07:45Z,"""I said confusing when we implement a proper workspace grid. Then the alt-tab would then be linear while workspaces would be 2 dimensional.""

Maybe I'm a genius but I'm not confused at all by that :o) alt-tab is linear, a workspace grid is linear in levels. Easy.

Now the coverflow extension is mentioned - it's probably overkill but it would no doubt be very popular as a final built-in alt-tab option, the third most favourited thing on the entire Spices websites.
"
12751707,1598,Lusito,2013-01-27T09:10:54Z,"@autarkper: Not talking about features, talking about keyboard shortcuts.
Check the applet description for the section ""Usage""
For example, if you want to switch through all windows of all workspaces, coverflow alt tab uses ctrl + alt + tab.
Admittedly, the ctrl + tab conflicts with some applications in switching tabs, so that is troubling. (could use super + tab instead)
Also nice is the q key to close the window in selection.

Having the behaviour defined by the shortcuts is imho better than a setting to enable or disable all windows, since this is probably a thing you decide based on the situation.

I think we could also use a window-switcher section in the keyboard shortcut settings module for each of those.

Oh, and since there are quite a couple of window switcher extensions, maybe add a role for them, so that they are natively supported without hacks.
"
12751848,1598,autarkper,2013-01-27T09:29:25Z,"@Lusito: thanks for the clarification!

I agree that it's better to use shortcuts than settings to choose the behavior. Maybe we could use ALT+§ (which currently maps to ALT-Tab) for multi-workspace view? (We could have a setting for which behavior should map to which shortcut).

As for closing windows from ALT-tab, I'm already working on that. My vision is to have a context menu where you can perform other window-related tasks directly from ALT-tab.
"
12751890,1598,Lusito,2013-01-27T09:33:17Z,"a context menu that is operated by keyboard ?
because alt-tab is a keyboard action and using mouse with alt-tab seems unfitting.
In any way, having shortcuts would be nice instead of having to navigate using arrow keys or similar.
"
12752012,1598,autarkper,2013-01-27T09:48:55Z,"The menu would be keyboard-operated. I'm working on a persistent mode (activated by some key, currently Space) in which the the switcher does not go away until you actively dismiss it.
"
12752143,1598,gauravjuvekar,2013-01-27T10:04:25Z,"Here's an idea. Could you make the icons and/or labels of the windows on the current workspace separately theme-able so we could have them slightly bigger/bolder/different font/color, etc. than the others. Might not look that good but could work for identifying windows of the current workspace. 
"
12752203,1598,autarkper,2013-01-27T10:10:46Z,"@gauravjuvekar: I suppose that is doable, but I'm still not convinced there's a problem.
"
13094469,1598,autarkper,2013-02-04T19:30:31Z,"I'm closing this off, since I don't honestly expect this to be merged. I'll leave the branch open though, in the rare case that anyone would like to try it out.
"
494569183,1598,halfer,2019-05-21T21:39:41Z,"This is now an option in Cinnamon core - I presume it was not before.

In Settings, go to the Windows section, click on the Alt-Tab tab, then tick ""Show windows from all workspaces"".
"
1646371222,11770,ghost,2023-07-22T01:31:16Z,"Not sure whether there is any difference in regard to this issue between Mint 19.2 and Mint 21.x but at least here in Mint 19.2 it seems to be some delay in either reporting the real value of `global.menuStackLength`, the updating of `this._shouldShow`, or both.
I say this because, after applying this suggested fix to **panel.js** and restarting Cinnamon the bug is still present at various times just as it has been before. The only difference is, now it fixes itself after a certain amount of time, while previously it would only fix right after the restart of Cinnamon and would stay buggy after a certain amount of time until next Cinnamon restart.

Below there are two screenshots. I used a previously modified version of the 'Download and upload speed' applet which adds a blank space to the tooltip/menu in order to circumvent the bug.

After applying the fix and restarting Cinnamon all was fine. After a small amount of time the menu position again got miscalculated (first screenshot).

I kept the pointer over the applet icon and after an amount of time (less than the clock in the panel shows as difference) the menu jumped by itself into its correct position (second screenshot).

I can only speculate that either or both of the values involved in the calculation are being polled on a timer, maybe in order to avoid some heavy calculations or whatever. Bottom line is the bug will still show apparently randomly if the fix will be left as is.

![Screenshot from 2023-07-22 04-02-22](https://github.com/linuxmint/cinnamon/assets/29117024/282a3fc9-e935-42cc-8daf-e874266ea1dc)

![Screenshot from 2023-07-22 04-02-45](https://github.com/linuxmint/cinnamon/assets/29117024/3d1e7642-c6b3-457e-a0a8-fea76ee925a5)

I also wonder **who and why has forbidden me to reply** to the [original issue](https://github.com/linuxmint/cinnamon-spices-applets/issues/4964) where this bug has been reported:

![Screenshot from 2023-07-22 04-26-19](https://github.com/linuxmint/cinnamon/assets/29117024/3f092797-3e4c-4cd9-a636-dc3e871cd656)
"
1646661936,11770,fredcw,2023-07-22T20:05:13Z,"This PR has a side effect: In cinnamenu applet, if I open the applet with the super key when panel auto hide is on, the applet is positioned higher up as if the panel is showing even though it isn't. This also happens in the menu applet if it's opened with the super key and ""force panel to be visible when opening the menu"" option is off in the menu applet config. I can easily fix this in cinnamenu though by always using peekPanel(). In fact the only reason I removed peekPanel() was because of bug https://github.com/linuxmint/cinnamon/issues/10970"
1646666106,11770,Gr3q,2023-07-22T20:29:42Z,"It feels like the default behaviour should be that if a popupmenu is visible for a panel the panel should always show.

It probably needs some work on the stack variable so panels can use that. This way we could depend on it properly and eliminate other problems too.

"
1646675548,11770,fredcw,2023-07-22T21:33:49Z,"@Gr3q >It feels like the default behaviour should be that if a popupmenu is visible for a panel the panel should always show.

I agree. There seems no useful purpose in having an applet open and not have the panel show at the same time and it seems an unnecessary complication to the panel.js code."
1646691498,11770,ghost,2023-07-22T23:36:29Z,"> This PR has a side effect: In cinnamenu applet, if I open the applet with the super key when panel auto hide is on, the applet is positioned higher up as if the panel is showing even though it isn't.

It happens with any menu applet, even the default one. Not only that, but having another autohidden panel placed vertically to the same side where the menu is would make the menu open shifted horizontally for the amount of pixels equal to vertical panel's width.

> There seems no useful purpose in having an applet open and not have the panel show at the same time [...]

At first sight that'd be correct but thinking thoroughly I could envision an applet that does some automatic work in the background and could be instructed in the code to show a popup menu in certain situation(s) without the user acting upon the applet or the panel itself. This may be the situation for which the panel visibility check is in place. I'm not sure though whether the popup menu display would force the panel to show, or not."
1646721061,11770,fredcw,2023-07-23T01:55:57Z,"Using:

`
return !this._hidden;
`

instead of:

`
return this._shouldShow || global.menuStackLength > 0;
`

seems to fix the problem with applet resizing though it doesn't fix the peekPanel() bug I mentioned above. Well. it does some of the time with the menu applet but not all the time strangely."
1646723783,11770,ghost,2023-07-23T02:08:41Z,"> Well, it does some of the time with the menu applet but not all the time strangely.

The only explanation would be that neither `this._hidden` nor `this._shouldShow` or any other variables that deal with panel's visible state are getting their values in real time. As long as there is a delay in retrieving panel's real state nothing will ever work 100% correctly - not a popup menu, not anything else. So that's where the real issue is. Well, in my opinion at least."
1646729326,11770,fredcw,2023-07-23T02:39:49Z,"@Drugwash2 I think I've found the solution to this in cinnamenu and the menu applet. When the super key is pressed, peekPanel just needs to be called before the menu is toggled open.

In menu applet line 1321:
```
if (this.forceShowPanel && !this.isOpen) {
    this.panel.peekPanel();
}
this.menu.toggle_with_options(this.enableAnimation);

```"
1646739423,11770,ghost,2023-07-23T03:57:48Z,"> When the super key is pressed, peekPanel just needs to be called before the menu is toggled open.

Looking at the **panel.js** code it seems `peekPanel()` just displays the panel through `_showPanel()` and sets `this._hidden` to **false**. While this may be a _forced_ way to have the popup menu calculate the correct position the user may not want the panel displayed when invoking the menu through the keyboard shortcut.

And implementing such workaround in each and every applet hardly seems like the correct solution. Shouldn't this be cared for in the popup menu code itself? I'm not familiar with the code but the principle would be for the popup menu code to **actually check for the real panel's visible state** (something similar to `isWindowVisible()` in MS Windows) right before calculating the menu position and showing it - not to rely on some variable whose value could be inaccurate due to a certain delay, or on a workaround that forces the panel to be displayed even when that may not be desired."
1646747446,11770,fredcw,2023-07-23T05:06:24Z,"@Drugwash2 peekPanel is only called by an applet when it wants to show the panel so this is up to the applet. For instance, you can turn off the option ""force panel to be visible when opening the menu"" in the menu applet, in which case peekPanel is not called and the panel is not shown."
1646761108,11770,ghost,2023-07-23T06:42:03Z,"> peekPanel is only called by an applet when it wants to show the panel so this is up to the applet.

Well, I tried using `peekPanel()` in 'download and upload speed' (appletGui.js >` _on_hover_enter()` ) in conjunction with the originally proposed fix, and it works exactly the same as in my previous comment (with the screenshots): popup appears behind the panel and after one or more seconds it moves to the correct place. Could be a problem with hover detection? Anyway, this is in Mint 19.2 as the 21.2 VM starts up very slowly (loaded over LAN) and weighs kinda heavy on this old notebook so I rarely fire it up."
1646762825,11770,fredcw,2023-07-23T06:54:06Z,Download and upload speed applet seems to be working fine with this fix (mint 21.2)
1646765018,11770,ghost,2023-07-23T07:07:40Z,"There may have been some improvement in the area between 19.2 (Cinnamon 4.2) and 21.2 (Cinnamon 5.8). Since the 19.x line became irrelevant for most people my test results shouldn't matter much if anything. Hopefully it will keep working correctly on all newer Cinnamon versions.

Let's see **Gr3q**'s results with the Weather Applet."
1646901074,11770,Gr3q,2023-07-23T17:37:57Z,"Ok, it's changed now. The PR fixes most of the issues with positioning at the cost of that if a panel has open menus it will automatically be shown.

Download and upload speed must be a special case, and I can take a look at that as well, but the fix probably will be in the applet's code.

"
1646918494,11770,ghost,2023-07-23T18:07:39Z,"> The PR fixes most of the issues with positioning at the cost of that if a panel has open menus it will automatically be shown.

I'll wait for things to settle before testing this fix in Mint 19.2. It feels kinda hacky though to force the panel to be shown even if it wasn't intended to. Now, I don't personally know of any applet that would display a popup menu out of the blue without user interaction with the panel, but nevertheless in theory it could exist. Which means this fix might defeat its purpose. Admittedly it could be treated as a corner case, but too often corner cases are being easily dismissed only for later on to create problems.

As for 'download and upload speed', that applet displays the popup menu as a tooltip replacement upon hovering of applet's icon. So in theory the panel should be visible at the time and there would be no need for a fix. Practically though the visible state of the panel seems to be determined much later, at which point the popup menu had already been displayed at the wrong position. It's weird. As if panel visibility is only being detected correctly upon a mouse click (on an applet icon) but not on hover.

Because of this annoying issue I had implemented a switch in the settings for a mod of this applet, that would allow the display of a regular tooltip instead of the popup menu, and which seems to work properly. I wonder how the position of a tooltip can be detected so accurately in all situations, while the popup menu's can not."
1646920759,11770,Gr3q,2023-07-23T18:14:51Z,"The positioning problem comes up when a popup menu resizes after its open.

before the panel reported it's not visible but refused to hide If a menu was open, and when the menu repositioned itself on the next resize according to the state the panel reported."
1646929490,11770,ghost,2023-07-23T18:48:36Z,"> before the panel reported it's not visible but refused to hide If a menu was open [...]

So practically all that needs done for things to work correctly in **all** possible scenarios is to make sure the panel **always returns its real visible state** when queried (use `Gtk.Widget.get_visible()` or `Gtk.Widget.is_visible()` ?)."
1646930229,11770,fredcw,2023-07-23T18:51:10Z,"@Gr3q What wrong with my fix, it has the advantage of being a one liner?"
1646945519,11770,ghost,2023-07-23T19:52:30Z,"Here's what I've been thinking.
<del>In **popupMenu.js** > `_calculatePosition()` there's a check commented as:
`// remove visible panels from workable area to avoid overlapping them`
Within this check there's this line:
`if (!panel.getIsVisible()) continue;`
Seems to me this could - and most likely does - provide erroneous results due to the elusive to me `this._shouldShow` in **panel.js**.
As such I thought **panel.js** > `getIsVisible()` could be better off returning `this.actor.is_visible()` instead of `this._shouldShow`.</del>

<del>I believe this would provide instant accurate visibility state of the currently queried panel. What do you guys think...?</del>

Scratch that, it seems it always returns `true`. Darn!
"
1646969555,11770,ghost,2023-07-23T21:58:06Z,"> Download and upload speed must be a special case, and I can take a look at that as well, but the fix probably will be in the applet's code.

And so it seems. I have modified **appletGui.js** > `open()` as follows and <del>that appears to have fixed the issue:</del> No, it doesn't. This is getting ridiculous. 😡

```
	open: function(){
		this.menu._calculatePosition(); // <== added this
		this.menu.open();
	},
```
"
1647426479,11770,Gr3q,2023-07-24T08:12:42Z,"> @Gr3q What wrong with my fix, it has the advantage of being a one liner?

Your fix is ok, I simply missed that comment.

I pushed the previous fix to another branch in case we need that behaviour. Also added one more line so panels will recheck it on popupmenu open.

>And so it seems. I have modified appletGui.js > open() as follows and that appears to have fixed the issue: No, it doesn't. This is getting ridiculous. rage

`open` calls `_calculatePosition` internally. With the changes in this PR now it really shouldn't be under the panel."
1647636936,11770,fredcw,2023-07-24T10:23:42Z,"@Gr3q Nice. Shall I create a separate PR for the menu applet or should it be included in this one? It's basically just deleting the 3 lines in `_onOpenStateChanged()`:
```
if (this.forceShowPanel) {
    this.panel.peekPanel();
}
```
and replacing them with the 3 lines in the comment above in `_updateKeybinding()`

Probably better to create a separate PR I'm guessing."
1648534846,11770,Gr3q,2023-07-24T20:08:44Z,I think another PR would be better if it still has a timing issue with positioning when opened.
1650152776,11770,fredcw,2023-07-25T16:22:40Z,"@Gr3q This commit needs a better description. Also:

>Also added one more line so panels will recheck it on popupmenu open.

This doesn't seem to make any difference.

I can add this commit to my PR if it's easier."
29359552,2662,corbin-auriti,2013-11-27T04:31:35Z,"Hey @Psykar, your code is looking good, but is not functioning with some media players because of how they handle outputting to mpris (such as players that use mpris V1) would you mind testing and patching this to function with various media players such as Tomahawk, GMusic Browser and possibly others.

Cheers
"
29363030,2662,Psykar,2013-11-27T06:29:40Z,"Cheers @RavetcoFX  - I'm guessing that's mainly around the album icon - the track names should be the same at least?

Installing a couple of other players now...
"
29394342,2662,corbin-auriti,2013-11-27T15:45:42Z,"@Psykar In my testing gmusicbrowser with your patch does not display either. But tomahawk, VLC, Clementine do. Hmmm, this is interesting because gmusicbrowser works with the main applet. I will test some more
"
29434744,2662,Psykar,2013-11-28T02:09:18Z,"Cleaned up, fixed up play/pause, tested with tomahawk, gmusicbrowser, spotify, rhythmbox, vlc.
Seems gmusicbrowser doesn't send changed notifications properly, but I've worked around it.

gmusicbrowser also doesn't send it's album art at all, but the others work fine.

Also pushed the update to http://cinnamon-spices.linuxmint.com/applets/view/164 if people want to test it there (different namespace there though)
"
29436574,2662,corbin-auriti,2013-11-28T03:07:40Z,"@Psykar Neat, perhaps it would be a good idea to limit the display information to 20-30 chars (?)
"
29502210,2662,Psykar,2013-11-29T08:31:03Z,"@RavetcoFX I'll get on the display length limit (probably make it a setting slider)
As for the centering the popup, in my mind that's an update that's required to the core ui/js code - it should probably be a default for Applet.TextIconApplet
At the moment, the left edge of the menu gets aligned with the center of the applet.
"
29590082,2662,Psykar,2013-12-02T01:56:00Z,"@RavetcoFX ... and anyone else ;)

Pushed up a setting for truncation of long titles.
"
30569508,2662,ghost,2013-12-14T12:15:12Z,"is it possible to add a ""slide"" like animation when you hover with the mouse over the applet.To be able to see the rest of the text.
"
30815076,2662,Psykar,2013-12-18T04:19:30Z,"@zagortenay333 possible, yes. However, would require setting up a new loop and callback in the code, complicating the relative simplicity of this pull request at the moment.
I may have a look at it, just not in the next couple of weeks.
"
31618806,2662,Psykar,2014-01-05T23:11:21Z,"I'm not convinced the defaults should be false, just so functionality doesn't change when a user upgrades.
If they are set to false, users are likely to not even know the options are there?

Happy to be overruled though.
"
31619360,2662,corbin-auriti,2014-01-05T23:36:34Z,"@Psykar If this is merged, it is likely be mentioned in the release notes, so people would find out about it in that manner. And the album art icons can be laggy, just a thought :)
"
37941503,2662,clefebvre,2014-03-18T14:51:20Z,"Hi,

It works well, but it needs two changes:
- When no artwork is available a default icon should be used (right now I end up with an invisible icon in the panel so if I don't show the title as well I don't see my applet)
- Both settings should be set to False by default.
"
37975917,2662,dtrunk90,2014-03-18T19:17:28Z,"@clefebvre There's a default icon in the popup when no artwork is available. Why not just use that? Here it is a simple disk:
![bildschirmfoto vom 2014-03-18 20 15 41](https://f.cloud.github.com/assets/636557/2452464/e466f978-aed1-11e3-938d-5e9413cf671d.png)
"
38388042,2662,clefebvre,2014-03-23T16:49:04Z,"Yes, that would work nicely and it would be consistent with the artwork show[n|ed] in the applet itself.
"
38405827,2662,Psykar,2014-03-24T01:29:24Z,"I had actually intended this to work with the music note icon - turns out I had an edge case that wasn't handling the no art correctly when moving from a track with art to one with no art.
Fixed up defaults too.

As an aside - should I be squashing these commits before it gets pushed?
"
39195989,2662,clefebvre,2014-04-01T11:45:06Z,"If you want. 

I can't merge as it is though, there's a double try{} on line 818, and the fallback to the DVD icon doesn't work (I still get an empty icon in the panel when a DVD is shown on the art cover inside the applet).
"
39292939,2662,Psykar,2014-04-02T06:31:59Z,"Fixed up the double try (due to the metadata being added in to the init since this pull was created)

What do you refer to by empty icon, just blank space?
It _should_ be showing the 'audio-x-generic' icon, and all my testing has this icon when the track playing has no artwork. I tested with VLC and rhythmbox, by playing a track with no art, or a track with art followed by a track with no art. Both times it reverts to the correct icon.

What media player are you using? What steps reproduce it? (ie. playing a track with album art first, or just loading the media player for a track with no art?)
"
39304097,2662,clefebvre,2014-04-02T08:54:40Z,"Hi,

I used Banshee for testing. I played a song with artwork first, then moved to next songs. Some songs with no artwork showed the symbolic music note icon, some songs with no artwork showed an empty icon (i.e. no icon at all). I'd like the artwork to be the same in the panel and the applet (for consistency), so if we show the album cover when there is one, we should show the DVD icon when there is none, just like we do inside the applet itself.
"
39411823,2662,Psykar,2014-04-03T04:30:43Z,"Seems Banshee sends a album art path, which may be an non existant file. Fixed.

Changed the icon to media-optical-cd-audio when we are showing album art. This is the same icon which is used in the applet itself, but not full colour (~ line 380)
If album art isn't being shown, then the existing 'audio-x-generic' is shown when a media player is open (as per existing code (~ line 770))

In the process, I've cleaned the code around setAppletIcon
"
39948192,2662,clefebvre,2014-04-09T10:13:42Z,"It's better. Be careful to test your code though, you're missing a closing bracket here.

There's also a tiny issue which sets the icon even when the setting is set to False.
"
39949182,2662,clefebvre,2014-04-09T10:26:53Z,"Fixed and merged. 

Thanks for these new features.
"
15036799,1803,mtwebster,2013-03-18T02:42:43Z,"Pretty much done, I want to do some stability testing for a while though, to make sure I'm not missing something.
"
15054944,1803,Lusito,2013-03-18T13:38:07Z,"Nice, nice.
Tho I think it is better to use the keybinding api from muffin instead.
Otherwise it will probably suffer from the same fate other keybinds suffer, like having to press super+l twice before it actually works.
I have not tried your patch yet, so maybe you found a way around it.. I myself tried it a while back with python, but could not find a way.
"
15055109,1803,Lusito,2013-03-18T13:41:43Z,"btw, I think keybindings.js is not ui and as such should be in misc, same goes for settings.js. Just my personal opinion.
"
15055604,1803,mtwebster,2013-03-18T13:52:01Z,"I don't seem to be having that problem - hitting a key once works.

I'm still working at getting the daemon to behave properly when bindings are changed during a session - should be able to work it out though.
"
15093411,1803,mtwebster,2013-03-19T02:00:23Z,"Hmm well apparently super doesn't work at all, except as a standalone hotkey (not as a modifier).. I think I would like to see its special handling in Muffin changed, and simply treat it as another customizable hotkey for Cinnamon.  I'll look into this.
"
15095252,1803,mtwebster,2013-03-19T03:13:16Z,"Ok I have <Super> working similarly to other keybinding service... using it as the lone modifier for another key, you initially have to hit it twice.  Again, I think the answer is to fix muffin - this is unnecessary behavior.
"
15119712,1803,Lusito,2013-03-19T15:04:36Z,"well, you can use super + key for muffins keybinds, so if we could put the keybinding daemon into muffin or cinnamon, this should be no issue anymore.
Altho, It would be better to not have any hardcoded stuff in there at all.
"
15121105,1803,Lusito,2013-03-19T15:28:06Z,"I don't think there is anything we can do to avoid this.
The issue is in keybindings.c in process_overlay_key():
When the super key is pressed, it will be swallowed until the next keyboard event happens, then replayed.
This is necessary, because keybinds get executed once the key is down. If muffin would not swallow the key, the keybind for super would be executed instantly, opening the menu, blocking further keybinds from executing.
So the only way to make super keybinds work with a single press is by using the muffin keybinding api.
"
15121464,1803,mtwebster,2013-03-19T15:32:57Z,"I'm saying super should be treated no differently than control or alt.. gnome-control-center keyboard settings, cinnamon's keyboard settings, all treat super as just another modifier.  Where the disconnect is is in muffin (and certain places in cinnamon where we hardcode super - and if we have a viable hotkey system, I think we can get rid of all this special handling.
"
15123404,1803,Lusito,2013-03-19T16:02:01Z,"If you treat super as a modifer only, you could not use it as a super-only keybind for the menu.
"
15123918,1803,Lusito,2013-03-19T16:07:42Z,"btw, the muffin hack is not about super, it is about modifier keys.. as a user you could change the menu key to alt and have the same issue with the alt key.
"
15124167,1803,mtwebster,2013-03-19T16:10:35Z,"I'll play around with muffin and see
"
15127335,1803,mtwebster,2013-03-19T16:49:07Z,"Hmm interesting stuff, it may be easier to break into muffin's keybinding system - it allows setting runtime keybindings (what we're trying to do) but right now it wants a schema/key from gsettings to pull values from.  I could add a new introspectable method to just pass along the values right in the function call.
"
15127547,1803,Lusito,2013-03-19T16:52:02Z,"I think we can rewrite the keybinding system to not require a schema. After all, they only use it to auto-update the shortcuts when changed.
"
15128788,1803,mtwebster,2013-03-19T17:10:59Z,"Well, i'm not going to break what's there already, just add another method.  I'll adapt the keybinding.js to use muffin as a backend.
"
15128931,1803,Lusito,2013-03-19T17:13:01Z,"sounds good to me.. maybe auto-prefix the key with the uuid to make sure there is no key conflict with other extensions.
"
15150527,1803,mtwebster,2013-03-19T23:36:12Z,"Okay the million dollar question - should applet/desklet/extension bindings be configured in the applet's configuration tab?  Pros: all relevant applet settings are kept together.  Cons: conflict resolution difficult or non-existant

Or should additional entries be added to the main keyboard page in cinnamon settings?  Pros:  conflicts can be handled more robustly (as they currently are on that page).  Cons:  configuration settings are spread out to multiple locations, could be confusing potentially.
"
15156326,1803,mtwebster,2013-03-20T03:15:10Z,"So I've added the ability to handle these custom keybindings regardless of Cinnamon's modal state - so if a popup menu is open (like the main menu), hotkeys will still work.

The ramifications for this are pretty big.. we can pipe a lot of built-in cinnamon keybindings this way to get around the annoying 'hotkeys don't work while a menu is open' problem.
"
15177660,1803,Lusito,2013-03-20T14:10:12Z,"That is awesome!
"
15824402,1803,nbourdau,2013-04-03T08:27:11Z,"I am wondering... Do your patches fix issue https://github.com/linuxmint/Cinnamon/issues/1662?
"
15824516,1803,Lusito,2013-04-03T08:30:15Z,"No, it does not, since media keys are not part of cinnamon.
They are part of the gnome-settings-daemon.
It might however make it possible to create a patch for it.
"
15834152,1803,mtwebster,2013-04-03T12:40:44Z,"It has the potential to, but only once we get g-s-d out of the way.  We could emulate media key control (like how we do in the sound applet currently), but we wouldn't get the on-screen display of volume changing/muting.

I would like to eventually (maybe 2.0?) fork g-s-d, and remove all hotkey functionality from it, and move it to Cinnamon, or have it possibly use muffin for its keybindings as well.
"
261044957,5974,JosephMcc,2016-11-16T19:23:21Z,"I don't feel like you should be rearranging items inside a menu when the position changes. The menu should always have the same order. It's just confusing otherwise.
"
261048103,5974,germanfr,2016-11-16T19:35:05Z,"One does not keep changing from top to bottom panels so often. But the one who uses the top panel wants to have the ""close"" near and the one who uses the bottom panel wants it either. Both can't be satisfied without reverting the order. They won't get confused because they will use one or another. Nobody has two panels with the window list in both. Even if someone had both, its not even confusing. It's the expectable behaviour for this concrete case.
"
261049858,5974,ghost,2016-11-16T19:41:45Z,"I agree with @JosephMcc.
**Edit:**
The only way that this could have sense to me, it's if you revert all menu items, not just the windows list and also allow to do that as an option not by default...
"
261050829,5974,JosephMcc,2016-11-16T19:45:26Z,"> Nobody has two panels with the window list in both

Some people use more than one monitor. The window list is designed to work well with a window list per monitor. I certainly don't want my two window lists to have the menu items in different orders.

> Even if someone had both, its not even confusing. It's the expectable behaviour for this concrete case.

No other menu that I can think of changes the order of it's items like this. 
"
261058991,5974,germanfr,2016-11-16T20:16:06Z,"> No other menu that I can think of changes the order of it's items like this.

This is a special case where the order is important. It has been like that in Cinnamon before. It doesn't change the order randomly, it's a logical and a practical change.

I personally find quite annoying to have things between the ""click"" and close option. It's the most common action.

Alternatively, it could be a toggle in settings like ""swap order"". The user chooses once, and it would ""consistent"" through all panels while keeping top panel users happy.
"
261070496,5974,lots0logs,2016-11-16T21:01:57Z,"> This is a special case where the order is important. It has been like that in Cinnamon before. It doesn't change the order randomly, it's a logical and a practical change.

I agree. These menus are a special case. When they open, you read the items starting with the one closest to your mouse cursor and you go up/down depending on whether its a top or bottom panel. The behavior implemented in this PR was actually the behavior prior to 3.2. Let's try not to confuse this PR with changing the order of the buttons in the list. I know there have been a lot of requests for that but this PR is not that. The order of the buttons does not change. Only their position relative to the panel is changed in order to restore what was the previous (and, IMO, the most desirable behavior) 
"
261079908,5974,NikoKrause,2016-11-16T21:36:42Z,"Waaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaay too much codelines! <- The word ""Way"" here has 69 ""a"". That's the number of codelines this PR has. ;)

Actually the code to revert the order of the contextMenu items on the Top panel is a **oneliner**. The line to add is:

``` js
 _populateMenu: function() {
+        this.box.pack_start = this.orientation == St.Side.TOP;
```

Digging in the history shows the ""fix"" has been made here: https://github.com/linuxmint/Cinnamon/commit/763a9cfb2518b6b56719254d744cbeb7238b079b

I think there is a saying: ""When something has been wrong for too long, it becomes right."" (Or something like that.)
I also think this saying is wrong in many cases, but in this context(Menu <- pun intended) it has it's right, in my opinion.

It's one of the most (if not THE most) used applets. And ""fixing this error"" after all this time (not sure though how long it has been this way) may feel like the GWX ""fix"" to some users.

I'm personally don't really care about it. I'm using the windows-list at the bottom. Just wanted to say, that the code is waaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaay too complicated. :)
"
261083827,5974,germanfr,2016-11-16T21:51:49Z,"@NikoKrause thanks, that's a better solution. I didn't know that property. Also notice that one item that was below ""close"" was shifted to the top for both.
"
261086933,5974,collinss,2016-11-16T22:03:51Z,"There may have been a time where rearranging the menus based on orientation was OK to do, but we now have multi-monitor and vertical panel support. There is just no way we can support all possible configurations and still have it make sense unless we make them all the same, regardless of orientation.
"
261157029,5974,ghost,2016-11-17T05:10:25Z,"There are now in my opinion a highly desktop with a lot of functionalities. So, the desktop can be configured in many ways and can follows different users expectations. This is in my opinion an amassing things. More than amassing fantastic!!!

The controversy it's them a consequence of that. I think that right now, more than before, cinnamon will need to decide with conscience any step about add another configuration option or create more particularity cases, or this will be the second version of KDE.

Third-party extensions are a powerful way to satisfy users, please considered it first before try to create particular cases.

In this direction, I will say again that for me it's more and more important over time, provide a general way to access of all popup menu manager api. This particular case could be resolved if we can accesses to all popup menu managers, then list all menus inside the manager and change the pack start of the menu that we want to change (**or all**) in an extension to do that.

Right now there are not a good way to create an extension for a thing like that.
"
261160058,5974,ghost,2016-11-17T05:37:24Z,"If some one, want to create an extension to change all menu orientation or for return the boxpointer back, there are a bad way to do that currently. This will be make an engineer of all applet, desklets and panel classes.

This is an example for get all menu managers of all applets (inside are all applets menus):

```
function getMenuManagers() {
    var instances = [];
    for(let applet_id in AppletManager.appletObj) {
        let applet = AppletManager.appletObj[applet_id];
        if(applet) {
            for(let attribute in applet) {
                if(applet[attribute] instanceof PopupMenu.PopupMenuManager)
                    instances.push(applet[attribute]);
            }
        }
    }
    return instances;
}
```
"
261171534,5974,germanfr,2016-11-17T07:04:34Z,"I'm not going to fight more for this because it's not worth it, although I feel it right. BUT the preferences item should be pushed to the top. Would you accept that part?
"
261370901,5974,collinss,2016-11-17T21:12:26Z,"@germanfr agreed. The order definitely needs work still. The major actions (i.e close, minimize, maximize) should be on the top or bottom, not in the middle surrounded by submenus.
"
261378526,5974,lots0logs,2016-11-17T21:41:42Z,"@mtwebster @clefebvre What say you regarding [this](https://github.com/linuxmint/Cinnamon/pull/5974#issuecomment-261070496)? :wink: 
"
261667350,5974,germanfr,2016-11-18T23:17:41Z,"I changed the commit. Only change is moved preferences away to top, which I think is reasonable.
"
262045962,5974,JosephMcc,2016-11-21T19:45:43Z,"If we accept that these items need to be rearranged based on orientation, then it needs to be done properly. This PR only takes into account users of a window list at the bottom. By your own explanations you've now broke it for anyone using a window list with a different orientation.

@NikoKrause the change you pointed to should absolutely NOT be undone. It fixed an issue where submenus were broken when a window list was placed in a top panel."
262077192,5974,ghost,2016-11-21T21:46:15Z,"I disagree with this, but if will be done, please reconsider what it's an special case. In my opinion it's not the top panel, it's the bottom panel. In any other orientation different to bottom, if we follow the same criteria, the most close position will be at top of the menu ~~always~~ (not if the applet it's at bottom of a vertical panel).  

![aaa](https://cloud.githubusercontent.com/assets/1389572/20502168/8430ca86-b002-11e6-97df-a289679e0aa5.png)
"
262083458,5974,germanfr,2016-11-21T22:09:48Z,"Major actions shouldn't be in the middle because it is annoying for every orientation.
They can be at the bottom (for bottom users), they can be at the top (for top and vertical users) or they could dinamically change.

@JosephMcc this doesn't break it for top panel users. It was already broken. It just improved it a bit for bottom users, which seem to be the target."
262212660,5974,clefebvre,2016-11-22T11:07:57Z,"Hi,

I don't feel strongly about it.

If I had to choose, I'd prefer things to be symetrical... actions being close to the panel. In other words, yes, I think the menu content should be mirrored/reversed when the applet is on the top panel.

That said, I don't like the solution proposed here. I'd rather see this done at cinnamon's level, for all applets, not for this one in particular. If we need exceptions, then let the applet ""unreverse"" their content I guess.

I don't really see this as a bug for 3.2, so I'm marking it 3.4 for it not to get in the way of point releases right now."
262302244,5974,JosephMcc,2016-11-22T17:10:52Z,"> If I had to choose, I'd prefer things to be symetrical... actions being close to the panel. In other words, yes, I think the menu content should be mirrored/reversed when the applet is on the top panel.

> That said, I don't like the solution proposed here. I'd rather see this done at cinnamon's level, for all applets, not for this one in particular. If we need exceptions, then let the applet ""unreverse"" their content I guess.

I personally hope the decision isn't made to do this. As someone who uses multiple monitors with different panel layouts and multiple instances of applets with different orientations, this sounds like a horrible idea. It means two instances of the same applet could have the menu items in different orders.

In this case you would do what, have the search box in the main cinnamon menu at the bottom in some cases? Or would you special case that one? For some reason deciding it should behave differently?"
262319532,5974,germanfr,2016-11-22T18:11:56Z,"> In this case you would do what, have the search box in the main cinnamon menu at the bottom in some cases? Or would you special case that one? For some reason deciding it should behave differently?

This is why I say this is a special case, not every applet is the same. The order is not important in any applet I know, but it is in this one. I think a global setting for this would be a mess.

I completely understand your point. This should be an optional feature (if it became a feature).

That said. I remember everyone, that feature is not part of this PR anymore. What it currently does is this static change:
![screenshot from 2016-11-22 19-00-32](https://cloud.githubusercontent.com/assets/10391266/20535862/fbdbda28-b0e6-11e6-8a99-517482d5d47e.png)"
278597968,5974,clefebvre,2017-02-09T10:03:20Z,"Hi,

Sorry I'm a bit late to the party and things had to be taken care in emergency. I thought this would be ok for 3.2 but feedback on the BETA release proved otherwise. This was changed with https://github.com/linuxmint/Cinnamon/commit/c62b3d62882454c60b8c43d0b34f0e98dce4915b during that time."
451205210,8251,NikoKrause,2019-01-03T16:54:31Z,"This commit adds new strings, which need to be translated, so IF it would be merged, it won't be before Mint 19.2.
And for Mint 19.2 I'd like to see the search feature from @germanfr implemented into the menu applet.
It's pretty great."
451286617,8251,Curly060,2019-01-03T21:42:19Z,"> This commit adds new strings, which need to be translated, so IF it would be merged, it won't be before Mint 19.2.
> And for Mint 19.2 I'd like to see the search feature from @germanfr implemented into the menu applet.
> It's pretty great.

Where can I find this search feature? I would like to give it a try. And I am more than happy if a better solution than my patch exists. I am now running a patched version which fixes theissue for me, so I can wait."
451350802,8251,LingMan,2019-01-04T04:24:08Z,"In https://github.com/linuxmint/Cinnamon/issues/8070#issuecomment-451350161 I've pointed out that https://github.com/linuxmint/Cinnamon/issues/8070 really deals with two separate issues.
If you split out the changes for issue one into it's own PR, it wouldn't add new strings so at least that part could maybe be merged earlier."
451699397,8251,Curly060,2019-01-05T22:58:47Z,"Even though I know there seems to be something much better on the way in possibly the next major release, I need the search to be usable now, so I have made one last attempt to fix it. I have updated my PR accordingly.
No new settings and strings, no translations needed and IMHO now it is quite usable again and it should fit almost everyone's wishes (within the constraints of the current implementation).

The main change is that I have removed any kind of fulltext search inside app names, keywords or description. Instead, the pattern now must always match at a word boundary (either with regex match or .startsWith).

=> This is usable for me now. Please have a look if that can be applied."
457968672,8251,Curly060,2019-01-28T00:31:36Z,I have updated my PR against current master.
471506552,8251,clefebvre,2019-03-11T11:42:59Z,"I think @itzexor has something big in store which should supersede this, where all matches are visible but sorted according to their type of match. It's not in a PR though atm, James can you confirm?"
490681024,8251,Curly060,2019-05-08T22:54:41Z,"I am getting a little frustrated with this PR. It fixes a rather annoying regression. The change is really tiny and most likely won't cause any problems with whatever is planned/in stock for the menu. There has been a minor release in the meantime, which would have been a perfect chance to pull this really small change, IMHO. Unfortunately, that was not the case.
So, are there any plans for another minor release which might include this? If not, I will close this PR and not waste any more of my time&energy with this."
490776043,8251,itzexor,2019-05-09T07:14:59Z,"Sorry I missed the initial inquiry from clem here. I have done some work on the search, but it's nothing ready to merge. It depends too heavily on running 100s or thousands of regex matches per query (for every character typed too) and I'm worried it's going to perform badly."
506756946,8251,clefebvre,2019-06-28T14:35:48Z,"Until we get proper hierarchy in place (i.e. the ability to sort results by type of match), I've taken the recommendations made in the issues and in this PR and implemented some of them with https://github.com/linuxmint/cinnamon/commit/d40ba4f900da90f09ecda78f3b139f7bef0fd4cf."
937534288,10372,Fantu,2021-10-07T07:38:04Z,"@clefebvre @mtwebster thanks for your big works, very small advice: is good increase muffin build-deps/deps version to >=5.2 to avoid try to build/install with older version"
954655961,10372,Fantu,2021-10-29T11:08:36Z,"@mtwebster I did a small commit to fix 7ab95f0 regression and remove a small code duplication, is in https://github.com/linuxmint/cinnamon/pull/10385/commits if you want take it"
954690794,10372,mtwebster,2021-10-29T12:09:18Z,Ah shoot I must have left this off the commit - I didn't notice because i've been working in an already-running session. That can just be `soundManager.play()` - the 'once_per_session' requirement is eliminated by adding the `global.session_running` check. Thanks for catching that.
954704251,10372,Fantu,2021-10-29T12:30:35Z,"@mtwebster thanks for reply, improved the commit based on your reply https://github.com/linuxmint/cinnamon/pull/10385/commits/89eb0c8ada5e5a5b644972dca0d561f657330e1b (is still in https://github.com/linuxmint/cinnamon/pull/10385/commits)"
955195003,10372,Fantu,2021-10-30T11:34:15Z,"@mtwebster today after more tests of sounds I found that login sound don't work anymore (other sounds still works) and after debug I found that is return on startup_dalay in play function, removing it works correctly, is ok remove it or better fix is needed?

```
    play: function(sound) {
        //if (this.startup_delay)
        //     return;
        if (this.enabled[sound] && this.file[sound] != """") {
            this.playSoundFile(0, this.file[sound]);
        }
    },
```"
955208545,10372,mtwebster,2021-10-30T13:22:31Z,"Yeah that was it, should be ok now, I should test more :)"
955425802,10372,Fantu,2021-10-30T16:25:45Z,"@mtwebster on latest tests login sounds now works correctly and with your latest commit also sounds settings are fully working, so csd-sounds remove result ok
during the various tests of these weeks I have seen big progress and almost all errors disappear from the logs, on latest tests I don't found any other issue or error in logs except things todo already wrote in first post of muffin PR, thanks for the very good job!
Thanks also to all other people who have contributed @clefebvre @JosephMcc "
1018841317,10372,Fantu,2022-01-21T20:36:54Z,"@mtwebster in master there was merging of many PR and some with significant changes, I think that a rebase before continue to work and test is needed and I think is better do now instead do before other changes"
1018845142,10372,mtwebster,2022-01-21T20:42:41Z,"Yeah I need to have a look at the new bases we'll be working from (both bullseye and whatever crazy name ubuntu 22.04 will have), and the newer mutter. I just need to move all this to a new vm first."
1018856030,10372,Fantu,2022-01-21T21:00:39Z,"@mtwebster thanks for all your works, rebase also on latest mutter seems another big changes, probably is better first rebase cinnamon changes and test them with the first big muffin rebase (was of 8 years if I remember good) instead have more difficult doing both at the same time"
1019298971,10372,Fantu,2022-01-22T16:05:53Z,"@mtwebster I did a fast test for kb layout changes (https://launchpad.net/~fantonifabio/+archive/ubuntu/muffin-rebase - cinnamon rebase still missed) and don't show layout at start in both settings and applet:
![actual-layout-missed](https://user-images.githubusercontent.com/2959924/150646145-6bdb8ceb-b2ca-4304-96c9-ae50b44fec69.png)

after adding 2 manually the applet still don't show on applet (even after logout-login), and if I disable and enable the kb applet show only the enabled one, I saw only one warning but I don't know if is related or not:
![layout-switch-not-working](https://user-images.githubusercontent.com/2959924/150646255-e0ad64a0-bfb8-4c61-b7f7-a36e53927e92.png)

"
1024605100,10372,Fantu,2022-01-28T20:16:59Z,"@mtwebster big thanks for your big work

I rebased my PR on latest c-s-d version https://github.com/linuxmint/cinnamon-settings-daemon/pull/350 (is small but should still useful to save you a little time)
and also a commit to add here for increase c-s-d deps: https://github.com/Fantu/Cinnamon/commit/5f16c987cc5fd051b88195e2a694aa9021e4fb71

I also updated my PPA for any user that want do fast/easy tests
small note: is still based on latest mint based on Focal because I don't have enough time to rebuild all other packages (more details in PPA description and also an howto for use it)"
1024631102,10372,mtwebster,2022-01-28T20:59:40Z,"Thanks

This is going to stay on the focal base - I made a quick attempt to rebase on bullseye's (Ubuntu 22.04's would have been too high to support debian also), but there would have been a huge impact on 3rd party spices, among other things... a lot of changes between 3.36 and 3.38 - there's a lot of work to do already, so I'm not really disappointed."
1024641172,10372,Fantu,2022-01-28T21:15:58Z,"about mutter version I also think is better stay to 3.36 and finish the work for it and release if possible for cinnamon 5.4 (this is a really big task...a full muffin rebase after over a decade; but is essential for the future of cinnamon) as continue to rebase also with cinnamon changes too many times can be a waste of time

about my previous comment I mean Focal about testing base and not another rebase to newer mutter (sorry if my english is not understandable enough)"
1028365614,10372,Fantu,2022-02-02T21:16:49Z,"@mtwebster thanks for your work, now doing a very fast build it failed (https://launchpadlibrarian.net/583536736/buildlog_ubuntu-focal-amd64.cinnamon_5.3.0~git20220202_BUILDING.txt.gz):
`src/st/meson.build:141: WARNING: Custom target input '['st-scroll-view-fade.glsl']' can't be converted to File object(s).`
...
`ninja: error: '../src/st/st-scroll-view-fade.glsl', needed by 'src/st/st-scroll-view-fade-generated.h', missing and no known rule to make it`

seems related to https://github.com/linuxmint/cinnamon/commit/b885f7c0139948b87874ecd802e227577bfa55a6 that looking comment seems need require more work anyway, I have too low knowledge of meson and I'm a bit tired now and probably I'm wrong but i have noticed something that seems strange to me  a fast look to:

```
data_to_c = find_program(meson.source_root() + '/src/data-to-c.pl')

glsl_sources = custom_target('scroll-view-fade-glsl',
  input: ['st-scroll-view-fade.glsl'],
  output: ['st-scroll-view-fade-generated.h'],
  capture: true,
  command: [data_to_c, '@INPUT@', 'st_scroll_view_fade_glsl']
)
```

and `Usage: data-to-c.pl <filename> <variable>`

seems strange to me the `@INPUT@` in command and/or input field above"
1028379672,10372,mtwebster,2022-02-02T21:35:24Z,Forgot to add a file. Fixed.
1028424879,10372,Fantu,2022-02-02T22:38:59Z,"@mtwebster thanks, now built correctly
about https://github.com/linuxmint/cinnamon/pull/10606 and https://github.com/linuxmint/cinnamon/pull/10596 I think is good to apply them for 5.2.8 (and in this branch) as make possible build correctly with meson>=0.61 (I already used them in debian unstable), are also a prerequisite for future building in ubuntu 22.04 that also have meson 0.61

for users that want fast/easy test it: https://launchpad.net/~fantonifabio/+archive/ubuntu/muffin-rebase/"
1090319059,10372,AxXxB,2022-04-06T14:10:25Z,@mtwebster Hello! I've created a PR #10671 with a big number of changes and Fantu said that maybe it could be useful if these changes will be merged here as well. The PR among other things contains a KbdLayoutController (similar to your KeyboardLayoutManager) that incapsulates XApp.KbdLayoutController and can be easy reimplemented to another layout API such as new muffin. What should I do? =)
1092832915,10372,mtwebster,2022-04-08T12:58:37Z,"@AxXxB Hi, for a large set of changes like that I'd like to wait to merge until this PR lands on master or (possible but not likely) we decide to wait on this another dev cycle for it. As your changes only affect a single file, it should be an easy one once this is settled.

Also, there is no more KeyboardLayoutManager in thie PR - it would have been a lot of additional work in Cinnamon to get it implemented properly (no more libgnomekbd or XApp, as it would all go thru muffin), and there was already too much to do.  So, at least for 5.2, keyboard layout switching will be unchanged.

edit: I'll go ahead and merge the other PR into master. It won't get in the way of this PR's eventual merge."
1093788635,10372,AxXxB,2022-04-09T07:54:19Z,Thanks a lot for your feedback!
1109538779,10372,Secret-chest,2022-04-26T09:01:23Z,"Thanks for your hard work. I would like to contribute when I have time, but I don't really know what should I do... like get a spare VM... also I do not know a lot about the GNOME ecosystem. However, are any configuration options removed?"
1109904612,10372,JosephMcc,2022-04-26T14:59:02Z,"@Secret-chest honestly, the best way is probably just to build and install the branches from cinnamon-settings-daemon, cinnamon-desktop, muffin, and cinnamon. Run them and see what issues you come across. There are likely going to be a lot of paper cut issues to deal with. "
14980624,1800,askuhn,2013-03-15T19:35:51Z,"I'm just a user and have no idea what this would take to implement, but could the cinnamon settings breadcrumbs match whatever nemo has now for consistency sake?  I'm not even really sure how that would look; just an idea/observation :)

https://github.com/linuxmint/nemo/pull/157
"
14982262,1800,FSteitz,2013-03-15T20:11:45Z,"I agree. Having the same breadcrumbs in cinnamon-settings as in Nemo would improve the look and feel of cinnamon-settings quite a bit.
"
14998000,1800,Lusito,2013-03-16T02:28:34Z,"I have looked into it, but both nemo and mintinstall do quite a lot of custom drawing to make this arrow shaped design work.
That is a lot of work, and more hacky than I'd like.
Imho this kind of styling should be something that is done with themes, not by the application.
I'm not against the design stuff, but I don't like the way it is currently done in nemo or mintinstall.
If you know of any way to solve this nicely with gtk+3, give me some hints and I'll look into it.
"
15029661,1800,Lusito,2013-03-17T20:05:02Z,"Work in progress: http://lusito.info/breadcrumbs_arrows.png
This uses the styles of the installed theme to draw the buttons.
This looks nicely when I remove the primary-toolbar class, but sadly this also removes the separation line, as you can see here on the original:
http://lusito.info/breadcrumbs_applets.png

If I keep the primary-toolbar class, the buttons will not show unless hovered.
I'll keep working on it, maybe I can find a different solution.
"
15033250,1800,bimsebasse,2013-03-17T23:10:57Z,"In the first two screenshots, what functionality do the breadcrumbs add?

Breadcrumbs make sense in layered menus with complex subdivisions (e.g. folder libraries), but when almost all you do is go one step down and one step back up again, what is the point? I don't need the Backgrounds breadcrumb from All Settings when I can already click the Backgrounds icon to go to Backgrounds.

Unless I've misunderstood something?
"
15033605,1800,Lusito,2013-03-17T23:31:37Z,"They provide a nice overview of where you are, and where you just have been.
You could make the same points about mintinstall.

The main reason I added breadcrumbs is because these some unintuitive things about the current design:
- The ""All Settings"" does not look like a back button.
  - It only shows when you are at a sidepage, so you might miss that the area left of the search field might contain other controls.
- You don't see at what sidepage you currently are on, except when you look at the window title, which I rarely do.
- Currently the applet settings page adds its own ""back"" button in the main area, completely disconnected from the other navigation items.

Sure you might argue that breadcrumbs are overkill, but they provide a simple and easy to understand navigational structure.
Of course you could replace them with a generic back button merged with the applet settings back button. But you would also need to put a title label somewhere.
"
15033725,1800,bimsebasse,2013-03-17T23:40:11Z,"You have ""Home"" and you have a lot of 1-level sublayers. You are always (?) either 1 click away from the front page or 1 click away from the required sublevel. In this scenario breadcrumbs simply aren't necessary for navigation. I guess they don't hurt, though - just a lot of other things in Cinnamon that could be done instead of adding an extra way of navigating CS.
"
15033947,1800,Lusito,2013-03-17T23:53:46Z,"> You are always (?) either 1 click away from the front page

Not from an applet setings page, at least not if there is a generic back button.

There already was a breadcrumb like navigation in gnome-c-c, so it's not too far fetched.

Yes there are other things do do for cinnamon, but I don't know most of cinnamon yet. Even tho I have quite some C experience, working on the C code here is something I have avoided so far because it's not as easy to recover from when you mess up.
So I work on other areas that are easier to get into and easier to test. In time I will work on the C code as well, but I want to make sure I know exactly what I'm working on before I start working on it.

You might think that the effort put into it is not worth it, but getting into GTK3 is really hard because the documentation is really really bad. Working on this gives me better understanding on all of the GTK3 stuff.
I could not as easily work on GTK3 in C, even tho I learned Python just as I started on cinnamon a couple of month ago and I learned C over 12 years ago.
"
15034195,1800,Lusito,2013-03-18T00:07:47Z,"If I may quote your post from another issue:

> One of those instances where it's really a shame so little care is put into the UI in many areas of Cinammon

Here I am taking care of exactly that issue and you question it :P
"
15147903,1800,Lusito,2013-03-19T22:35:51Z,"Finally got it working with the help of mtwebster.
Breadcrumbs now adapt correctly to the currently installed theme.
"
15151356,1800,askuhn,2013-03-20T00:01:14Z,"Cool! :+1:   All the work you guys put into these projects is very greatly appreciated :)
I look forward to trying it out soon.
"
15336747,1800,machinaeZER0,2013-03-23T13:03:17Z,"Lusito, really loving the work you've done on Cinnamon. :) I hope more of your work will be pulled soon! I think users are really going to appreciate the extra touches you've added to the menus and setting windows.
"
15349579,1800,Lusito,2013-03-24T01:32:52Z,"Glad you like it :)
"
15349761,1800,machinaeZER0,2013-03-24T01:49:48Z,"I do! I'm hoping the super-editable menu will be merged, but I don't know if it's under contention or not... maybe too sweeping a change? I just really like the idea of having all the elements in the menu being toggle-able. I'm a bit of a toggler.
"
15349985,1800,Lusito,2013-03-24T02:10:13Z,"Not sure either, Clem said my first version was too much, so I toned it down, but so far he didn't get to re-evaluate it.
"
15350019,1800,machinaeZER0,2013-03-24T02:14:07Z,"I'm sure he will soon, one way or another. I'm rooting for it, in whatever capacity.
"
15350040,1800,Lusito,2013-03-24T02:16:01Z,"Don't worry, you'll get to use it, one way or another (separate applet)
"
15350053,1800,machinaeZER0,2013-03-24T02:17:16Z,"Oh yeah, that's true. The magic of applet settings!

On Sat, Mar 23, 2013 at 10:16 PM, Lusito notifications@github.com wrote:

> Don't worry, you'll get to use it, one way or another (separate applet)
> 
> —
> Reply to this email directly or view it on GitHubhttps://github.com/linuxmint/Cinnamon/pull/1800#issuecomment-15350040
> .
"
16174203,1800,Lusito,2013-04-10T13:33:40Z,"Won't get implemented
"
16197523,1800,machinaeZER0,2013-04-10T19:48:23Z,":( Sorry man. That sucks.

On Wed, Apr 10, 2013 at 9:33 AM, Lusito notifications@github.com wrote:

> Won't get implemented
> 
> —
> Reply to this email directly or view it on GitHubhttps://github.com/linuxmint/Cinnamon/pull/1800#issuecomment-16174203
> .
"
297662701,6486,clefebvre,2017-04-27T09:27:43Z,@itzexor could these variables be Null? should we test that before calling .toString() on them?
297820060,6486,itzexor,2017-04-27T19:48:48Z,"I'm not sure. I had the same concern, but I wasn't sure the best way to add a null check considering the `arugments` parsing that's going on.

The timestamp will never be null (I sure hope, at least). Category is easy null check. The part I'm not really sure about is if we are passed null for msg initially, but also have some extra arguments the message won't ever actually be null since we're at the very least appending strings. That's just my guess, but I'm not completely sure.

I think maybe `if (category == undefined || msg == undefined) return;` would do it. That would match undefined and null. I just don't know if anything depends on passing null msg + args (I would hope not, but I'm not totally sure on that.)"
297824154,6486,itzexor,2017-04-27T20:05:20Z,"Let me know if you think this should be solved in a different way.

Edit: Another option would be to check them right before setting `out`, and if one is null or undefined set it to `""""` or call `return`. I don't really see the point in logging a blank msg and if it's the category it's not going to work properly in Melange anyways. So yeah, still unsure on the best route here."
297899126,6486,jaszhix,2017-04-28T03:38:45Z,"Actually this might work better:

```js
function _log(category, msg) {
    category = typeof category != 'string' ? category.toString() : category;
    msg = typeof msg != 'string' ? msg.toString() : msg;
    
    let text = msg;
    if (arguments.length > 2) {
        text += ': ';
        for (let i = 2; i < arguments.length; i++) {
            text += JSON.stringify(arguments[i]);
            if (i < arguments.length - 1)
                text += ' ';
        }
    }
    let out = {timestamp: new Date().getTime().toString(),
                         category: category,
                         message: text };
    _errorLogStack.push(out);
    if (lookingGlass)
        lookingGlass.emitLogUpdate();
    if (can_log) lg_log_file.write(renderLogLine(out), null);
}
```
Because we don't want to skip a log just because strings aren't passed, assuming whatever function reading the ```_errorLogStack``` array isn't going to choke on null values.

Or if we're writing this for mozjs38:

```js
function _log(category, msg) {
    let text = msg;
    if (arguments.length > 2) {
        text += ': ';
        for (let i = 2; i < arguments.length; i++) {
            text += JSON.stringify(arguments[i]);
            if (i < arguments.length - 1)
                text += ' ';
        }
    }
    let out = {timestamp: new Date().getTime().toString(),
                         category: `${category}`,
                         message: `${text}` };
    _errorLogStack.push(out);
    if (lookingGlass)
        lookingGlass.emitLogUpdate();
    if (can_log) lg_log_file.write(renderLogLine(out), null);
}
```

Use string template syntax."
297924699,6486,itzexor,2017-04-28T07:07:38Z,"It has to support js24 and js38 for the time being. The `Main._errorLogStack` object/array is directly converted into a gvariant with the type string `aa{ss}` for use in a dbus method return. That happens inside lookingGlass.js and is called externally by Melange(python looking glass).

Each object in `Main._errorLogStack` must be a dictionary with keys and values both of string type. With js38 something in the stack is not a string and is now throwing a TypeError inside cjs when the gvariant is created. I don't know exactly what log line it is.

In js, at least here in cinnamon, `null == undefined` is true. It won't evaluate true if you use the type checking `===` operator, though.

Edit: as far as I can tell, this is the only use for `Main._errorLogStack`
Edit2: To clarify paragraph one, the GVariant conversion is initiated by the dbus method inside lookingGlass.js, but actually happens inside cjs here https://github.com/linuxmint/cjs/blob/master/modules/overrides/Gio.js#L291 this is where the dbus method call fails and that warning is printed."
297930777,6486,jaszhix,2017-04-28T07:41:41Z,"You're right, I'm used to strict equality (===). I was thinking about it and my first example after the review is wrong. If an object is passed it will show as '[object object]', so ```toString``` would work after being serialized. I'm curious why its doing that though in strict mode, if the inputs passed to JSON.stringify are being serialized or if its the category value."
298091867,6486,itzexor,2017-04-28T19:54:35Z,"The only args that should be passed to `JSON.stringify` are the arguments after msg like in `_log(""info"", ""Got these objects"", someObject, someString, someArray)` `""info""` and `""Got these objects`"" would be used directly and `someObject, someString, someArray` woudl be stringified and turn the var `text` into something like `""Got these objects: [Object object] [string] [Object object]""`

I haven't actually tested this that's my guess. But `arguments[0]` and `arguments[1]` should not be used in the arguments parsing section.

(Edited a few times to fix stuff)"
298117817,6486,jaszhix,2017-04-28T22:07:49Z,Yes. I think we are on the same page (I think?) with passing objects through JSON.stringify first. I am running mozjs38 again with CJS so I can try to reproduce this.
298128911,6486,itzexor,2017-04-28T23:28:03Z,"Ok I got around to tracking down the root cause of this issue. If you have a libgtop-using applet enabled when upgrading to mozjs38 and assuming the libgtop issue is still unresolved, a `Glib.Error` is passed as the `msg` parameter. This is why it's failing to be converted to a GVariant.

I added this code to diagnose what was going on:

inside main.js file/main/module scope or whatever you call this scope:
`let bad_text, bad_arguments;`
after arguments parse code in `_log()`:
```javascript
    let categoryIsString = typeof category === 'string';
    let textIsString = typeof text === 'string';
    if (!categoryIsString || !textIsString) {
        bad_text = text;
        bad_arguments = arguments;
        let warningMsg = ""Attempting to log non-string args: ""
                         + (categoryIsString ? """" : ""category "")
                         + (textIsString ? """" : ""text "");
        _logWarning(warningMsg);
        _logTrace();
        return;
    }
```

This gave me the following output for the offending log call:
```
warning t=2017-04-28T16:15:51Z Attempting to log non-string args: text 
trace t=2017-04-28T16:15:51Z 
<----------------
_log@/usr/share/cinnamon/js/ui/main.js:952:9
_logError@/usr/share/cinnamon/js/ui/main.js:1059:9
Extension.prototype.logError@/usr/share/cinnamon/js/ui/extension.js:189:13
addAppletToPanels@/usr/share/cinnamon/js/ui/appletManager.js:336:9
finishExtensionLoad@/usr/share/cinnamon/js/ui/appletManager.js:60:18
loadExtension@/usr/share/cinnamon/js/ui/extension.js:451:17
onEnabledAppletsChanged@/usr/share/cinnamon/js/ui/appletManager.js:236:13
---------------->
error t=2017-04-28T16:15:51Z [Applet ""cinnamem@exor""]: Failed to load applet: cinnamem@exor/138
error t=2017-04-28T16:15:51Z Could not load applet cinnamem@exor
info t=2017-04-28T16:15:51Z Adding systray: steam (24x24px)
info t=2017-04-28T16:15:51Z Adding systray: unknown (24x24px)
error t=2017-04-28T16:15:51Z applet._extension is undefined
trace t=2017-04-28T16:15:51Z 
<----------------
removeAppletFromPanels@/usr/share/cinnamon/js/ui/appletManager.js:260:9
onEnabledAppletsChanged@/usr/share/cinnamon/js/ui/appletManager.js:209:17
---------------->
error t=2017-04-28T16:15:51Z Failed to refresh list of applets
info t=2017-04-28T16:15:51Z Adding systray: steam (24x24px)
info t=2017-04-28T16:15:51Z Adding systray: unknown (24x24px)
info t=2017-04-28T16:15:53Z Resized steam with normalized size (16x16px)
info t=2017-04-28T16:15:53Z Resized unknown with normalized size (16x16px)
```
and the vars I stored in Main can be inspected and reveal:
```
Main.bad_arguments.length = 2
Main.bad_arguments[0] (category) = ""error""
Main.bad_arguments[1] (msg) = [boxed instance proxy GIName:Glib.Error jsobj@address native@address]
Main.bad_text = [boxed instance proxy GIName:Glib.Error jsobj@address native@address]
```

So there are at least two problems here: we're not handling non-string arguments properly in `Main._log()` and we're passing a non-string argument in the extension code, which seems to also be breaking, possibly for other reasons, at the same time.

After looking into this more, I think we should fix the extension code to only pass a string, and check `typeof category and msg === 'string'` inside `Main._log`

Sorry for the super long message. Let me know what you think."
298129414,6486,itzexor,2017-04-28T23:32:41Z,"Also my guess is that this probably would've broken in js24 the same way, if we ever had an extension throw a GLib.Error, maybe when the library wasn't installed? I haven't seen this though.

Edit: Also to reproduce this you can simply attempt to add a libgtop applet to the panel when already using mozjs38. This doesn't only occur on upgrade, but it will break looking glass logging on every session login if this is the case and the user hasn't removed the applet manually."
298142894,6486,itzexor,2017-04-29T02:58:36Z,"Ok, dug even deeper. The reason we are receiving a `GLib.Error` as the message, is because those errors do not have a `stack` property. Our error logging code expects every error to have that property[1], if it doesn't it's treated as a message.

I don't see a clean way out of this one... The most effective, but probably dirtiest, method I can think of would be to somehow ensure all errors that make it past cjs into user code (from cjs's perspective) are JS native errors. This is dirty as hell, and I'm not sure if it's even possible. It would probably require all kinds of different error type handling code, and would make us diverge more from upstream.

Another fix would be to change isError() to return true as long as it has a message, and fix logging in main.js to properly handle errors without a stack[2][3]. This would touch almost every logging function inside Main.js from what I have seen. One way this could be done is to use a helper function wherever we are grabbing the stack that would return an error's stack if it exists, or create a new stack trace (and somehow intelligently clip the useless last few function calls).

I have hacked together a partial implementation of the second method there. It does work, and the messages are displayed as originally intended in extension.js[4] and then appletManager.js[5], but I don't like this solution so I'll wait for any better suggestions or just leave everything as is for now.

[1] https://github.com/linuxmint/Cinnamon/blob/master/js/ui/main.js#L957
there are many examples of 2 and 3 in main.js
[2] https://github.com/linuxmint/Cinnamon/blob/master/js/ui/main.js#L986
[3] https://github.com/linuxmint/Cinnamon/blob/master/js/ui/main.js#L1013
in 4 the error is printed once, and then later re-thrown to the enclosing try catch in 5
[4] https://github.com/linuxmint/Cinnamon/blob/master/js/ui/extension.js#L193
[5] https://github.com/linuxmint/Cinnamon/blob/master/js/ui/appletManager.js#L336

Edit: heavily edited to add code references"
298143600,6486,itzexor,2017-04-29T03:16:36Z,"And of course the simplest solution is to just convert any non-string, non null/undefined, non-error `msg` into its string representation, or serialize it. String representation makes the logged error completely useless from a support perspective. A serialized object representation (when not strictly intended) could end up being extremely long(and will it even work on non-js natives?)."
298143767,6486,jaszhix,2017-04-29T03:20:52Z,"Maybe we could just check the stack property in ```_LogTraceFormatted``` and ```_logTrace```? If the missing stack prop is the cause of the error, I think it could be straight forward.

```js
function _logTrace(msg) {
    if (!msg.stack) {
      msg.stack = ''
    }
    if(isError(msg)) {
        _LogTraceFormatted(msg.stack);
    } else {
        try {
            throw new Error();
        } catch (e) {
            // e.stack must have at least two lines, with the first being
            // _logTrace() (which we strip off), and the second being
            // our caller.
            let trace = e.stack.substr(e.stack.indexOf('\n') + 1);
            _LogTraceFormatted(trace);
        }
    }
}
```"
298143860,6486,itzexor,2017-04-29T03:23:16Z,"That sounds like a good solution, but I think we should also get a trace for non js-native errors.

Edit: and we still need to address the problem with other code paths handling GLib.Error as a msg/string since it fails isError(GLib.Error)"
298144410,6486,mtwebster,2017-04-29T03:37:44Z,It's either going to be a string or GLib.Error - can't we just check the type (`instanceof`)  of msg and react accordingly?
298144803,6486,itzexor,2017-04-29T03:47:43Z,Yes that is the method I used in the partial implementation I spoke of. Checking `instanceof GLib.Error` does work as expected. I wasn't aware that was the only other error we would need to handle.
298145467,6486,itzexor,2017-04-29T04:05:33Z,"This seems hacky, changing it in a function meant to check it, but it works.

```javascript
/**
 * isError:
 * @obj (Object): the object to be tested
 * 
 * Tests whether @obj is an error object. If the object
 * is a GLib.Error then we add a stack trace to it.
 *
 * Returns (boolean): whether @obj is an error object
 */
function isError(obj) {
    let isErr = false;
    if (typeof(obj) == 'object' && 'message' in obj && 'stack' in obj) {
        isErr = true;
    } else if (obj instanceof GLib.Error) {
        let stack = Error().stack;
        stack = stack.substr(stack.indexOf('\n') + 1);
        obj.stack = stack;
        isErr = true;
    }
    return isErr;
}
```"
298146573,6486,mtwebster,2017-04-29T04:34:23Z,"I'd be ok with that, it still answers the question ""is it an error?"" without complicating all the points this is checked - we just need to make sure the error has a stack.  GLib.Error is the only error type I can think of dealing with - any library that uses gobject (including wrapper libraries for libs that don't) throws GErrors, or some implementation of them."
298152528,6486,itzexor,2017-04-29T07:17:14Z,"I have rebased this.

Edit: Should those new log messages be translated?"
374473327,7376,itzexor,2018-03-20T04:43:39Z,This doesn't fix it for me. The actual percentage still is set to wherever you let the mouse button off at.
374511032,7376,claudiux,2018-03-20T08:16:30Z,"Did you:
 - restart Cinnamon?
 - use the mouse scroll wheel on the slider?

If you simply drag the slider, the 100% mark isn't magnetic. This isn't a bug, but a feature ;)"
374531813,7376,JosephMcc,2018-03-20T09:34:37Z,"> If you simply drag the slider, the 100% mark isn't magnetic. This isn't a bug, but a feature ;)

It being magnetic was intentional. Regardless of anything else you shouldn't remove that."
374671204,7376,claudiux,2018-03-20T16:47:28Z,"I know it was intentional, I am the one who proposed the code to make this mark magnetic.
I don't want to remove that, I want to improve it.

I start with a sound level at 89%. Then I scroll on the slider with the mouse scroll wheel.

## Before the change that I propose:
Init: ![without_89](https://user-images.githubusercontent.com/33965039/37668570-1e292432-2c65-11e8-89c8-318e8e9b90a8.png)

First step: ![without_97](https://user-images.githubusercontent.com/33965039/37668593-2c40fe28-2c65-11e8-9201-1e46f839db31.png)

Second step: ![without_104](https://user-images.githubusercontent.com/33965039/37668627-3f9181b4-2c65-11e8-9568-22406ab92e0d.png)

Where is the magnetic effect ? Nowhere.

## After changing:
Init: ![with_89](https://user-images.githubusercontent.com/33965039/37669066-37915b14-2c66-11e8-89cd-d4429e3396d8.png)

First step: ![with_100](https://user-images.githubusercontent.com/33965039/37669140-5f7bbf98-2c66-11e8-9e54-2baebcbdb301.png)

Second step: ![with_107](https://user-images.githubusercontent.com/33965039/37669169-70cefa3a-2c66-11e8-9483-9c7d11ae2e21.png)

100% is _now_ magnetic.



"
374679272,7376,itzexor,2018-03-20T17:09:13Z,"What I mean by it doesn't work for me is that when you're dragging the
slider with the mouse, even though it's magnetic it's still doesn't always
end up at 100%. It could be anywhere from 96 to 104% depending on where you
let off the mouse button after you are done dragging after it's snaps to
the mark. Not using the scroll wheel. So I still think it needs more
improvements.

On Mar 20, 2018 9:47 AM, ""claudiux"" <notifications@github.com> wrote:

> I know it was intentional, I am the one who proposed the code to make this
> mark magnetic.
> I don't want to remove that, I want to improve it.
>
> I start with a sound level at 89%. Then I scroll on the slider with the
> mouse scroll wheel.
> Before the change that I propose:
>
> Init: [image: without_89]
> <https://user-images.githubusercontent.com/33965039/37668570-1e292432-2c65-11e8-89c8-318e8e9b90a8.png>
>
> First step: [image: without_97]
> <https://user-images.githubusercontent.com/33965039/37668593-2c40fe28-2c65-11e8-9201-1e46f839db31.png>
>
> Second step: [image: without_104]
> <https://user-images.githubusercontent.com/33965039/37668627-3f9181b4-2c65-11e8-9568-22406ab92e0d.png>
>
> Where is the magnetic effect ? Nowhere.
> After changing:
>
> Init: [image: with_89]
> <https://user-images.githubusercontent.com/33965039/37669066-37915b14-2c66-11e8-89cd-d4429e3396d8.png>
>
> First step: [image: with_100]
> <https://user-images.githubusercontent.com/33965039/37669140-5f7bbf98-2c66-11e8-9e54-2baebcbdb301.png>
>
> Second step: [image: with_107]
> <https://user-images.githubusercontent.com/33965039/37669169-70cefa3a-2c66-11e8-9483-9c7d11ae2e21.png>
>
> 100% is *now* magnetic.
>
> —
> You are receiving this because you commented.
> Reply to this email directly, view it on GitHub
> <https://github.com/linuxmint/Cinnamon/pull/7376#issuecomment-374671204>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/ALEHxG2Y-AXXjGWcm3AUGdoqbCrEeXngks5tgTKogaJpZM4SxE1J>
> .
>
"
374765286,7376,claudiux,2018-03-20T21:36:25Z,"I can't reproduce that. Please watch these videos: 

https://github.com/claudiux/docs/blob/master/sound/sound_applet-2018-03-20_22.16.30.mkv 

and 

https://github.com/claudiux/docs/blob/master/sound/sound_applet-2018-03-20_22.32.14.mkv
"
375418103,7376,claudiux,2018-03-22T18:49:15Z,"There is no problem, OK ?"
375428171,7376,itzexor,2018-03-22T19:24:10Z,"Hey sorry i was really busy yesterday didn't have time to get back to you, but I did investigate the behavior more, and I can't reproduce the issue I was talking about anymore so I'm not sure what happened there... But you can just disregard that.

However, I did notice that this makes the scroll increment more than 5% around 100% when the volume is not a multiple of 5. When i was testing it was 8%. I think that might be too big of a jump. Can we make it do < 5%  instead somehow? Like instead of 87 -> 92 -> 100 i think 87 -> 92 -> 97 -> 100 would be better. What do you think?"
375463695,7376,itzexor,2018-03-22T21:28:47Z,"Ok I can reproduce what I was talking about before, but it's not from your changes. It is the same with or without your changes, but if you drag the slider with the mouse and snap it to 100%, even if the sound applet says 100% you can open sound settings and see that the volume is not actually 100%

I think there are some other issues here that need to be fixed up...

edit: after snapping to 100% in applet -> alsamixer 97%, sound settings 97%, applet 100%"
375533956,7376,claudiux,2018-03-23T03:32:45Z,OK. I feel like I have seen where it does not work. I will continue tomorrow.
376223954,7376,claudiux,2018-03-26T16:17:49Z,"I seem to have solved the problem. In fact, I was trying to correct what the ""thermometer"" indicated without worrying about the ""temperature"". Now, the real sound volume (shown in sound settings) is what is indicated in the applet and vice versa.

Can you make some tests, please ?

Thank you."
376699403,7376,claudiux,2018-03-27T22:41:18Z,"The result in video:

https://github.com/claudiux/docs/blob/master/sound/sound_applet-2018-03-28_00.33.21.mkv?raw=true"
379576045,7376,claudiux,2018-04-08T19:33:07Z,"There is no problem now, OK ?"
383144987,7486,Fantu,2018-04-20T16:08:58Z,"Found another issue with circleci tests: gir1.2-nm-1.0 is missed in stretch (my tests on stretch-backport with updated network-manager from unofficial backport not helped to saw it), now I'll check for solution
gir1.2-nm-1.0 was splitted in 1.8.0-2"
383291868,7486,Fantu,2018-04-21T12:37:44Z,"tried today on stretch with cinnamon 3.6 debian packages backport including this PR and cinnamon crash, tried to rebuild network-manager with https://github.com/NetworkManager/NetworkManager/commit/b2af5f7ab676675a496adfa08541ecca43a9d9f8 but still crash and I was unable to debug the exact cause of issue because the backtrace seems not directly related to it but its conseguence :("
383909163,7486,clefebvre,2018-04-24T12:17:56Z,"OK, we're getting closer.

@Fantu can you rebase to solve the conflict on debian/control?

I found the source of the issue (crash when network applet is running):

https://git.gnome.org/browse/network-manager-applet/commit/?id=7a59d41e5f6666d0da51f1f7aae7518befdb1182

This issue is present in Debian stretch. It makes gir1.2-nma use the old libs (NMClient/glib) instead of libnm. This results in making it impossible to use NM and NMA gir at the same time.

In Cinnamon libnma is used via gir in modemManager.js."
383934478,7486,clefebvre,2018-04-24T13:40:58Z,"So, to summarize the state of this PR:

In Mint 19 and distros with recent versions of NM, everything's working fine, no problem at all.

In LMDE 3 and Debian (with NM 1.6), everything's working after applying two patches:

- https://git.gnome.org/browse/network-manager-applet/commit/?id=7a59d41e5f6666d0da51f1f7aae7518befdb1182 fixes NM and NMA conflicting when loaded over GI and Cinnamon crashing as a result.
- https://github.com/NetworkManager/NetworkManager/commit/b2af5f7ab676675a496adfa08541ecca43a9d9f8 fixes the wireless toggle and the stdout warnings.
"
383968329,7486,leigh123linux,2018-04-24T15:08:53Z,"So Debian is broken by design?, why should we accommodate their frozen broken packages?
It is their choice to ship old un-patched versions."
383984585,7486,Fantu,2018-04-24T15:54:53Z,"I also think is not good :(
I opened bugs about but need someone explain better:
https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=892998 (this I also not updated that not is the cause of crash)
https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=896818"
383992280,7486,leigh123linux,2018-04-24T16:16:53Z,"@Fantu Do debian maintainers like a challenge?, it took redhat 4 months to fix.

https://bugzilla.redhat.com/show_bug.cgi?id=1520398

Can debian do better than an enterprise distro?"
384000439,7486,clefebvre,2018-04-24T16:42:35Z,"We just need to illustrate the issues properly and show that they're specific to Debian's versions of libnm and libnma and affect any Debian developer, not just some random future version of Cinnamon which Debian doesn't ship.

I did this here for libNMA:

https://gist.github.com/clefebvre/411ab17558fc4dc438085ce2b6cc9093

and here for libNM:

https://gist.github.com/clefebvre/c957c3eb290116d07aa524e97743a79e

@Fantu can you show these explanations to Michael Biebl <biebl@debian.org>. They speak for themselves and they're isolating both issues.

Then the process is easy:

- Michael gets these issues patched in Debian Stretch
- libNM becomes a library which works in all major distros
- we migrate to it with this PR
- we tag the move in a 3.8.x point release
- everybody's happy and everything works everywhere
"
384222836,7486,maxyz,2018-04-25T09:27:18Z,"I don't think that we have to wait for a solution of this issue in stretch, if that ever happens, it's going to take a while, it needs approval of the stable release team, and the package will only be in proposed updates till the next point release.
I understand that this might be a bit a hassle for lmde3, but it might be simpler and faster to ship network-manager package (if you use a version 1.6.2-3+~lmde3 then it would be possible for a 1.6.2-3+deb9 package to update it) with the mentioned patches there."
386564204,7486,Fantu,2018-05-04T10:40:59Z,"@clem Watch https://github.com/linuxmint/Cinnamon/pull/7536 instead that is better (rebased), also include a change commit I missed here and add also a fix for a bug introduced in 3.8.1 network changes"
428351041,7916,brownsr,2018-10-09T21:02:46Z,"This is causing a display bug for me.  Specifically the workspace switcher applet, in the visual representation mode.  Clicking on the different workspaces changes the workspaces  and windows seem to end up in the right place, and the OSD shows fine, however the highlighting does not work - the highlighting stays on the first workspace representation and does not move."
428395628,7916,jaszhix,2018-10-10T00:16:54Z,"@brownsr I think I see what you mean - are you moving a window to another workspace? 

Edit - I can reproduce this when switching workspaces rapidly - it skips every other one, but always ends up highlighting the correct workspace afterwards. That's a drawback to this approach, but without this PR Cinnamon will appear to be frozen for seconds at a time on workspace switch."
428535570,7916,brownsr,2018-10-10T11:22:42Z,"Hi Jason,  am at work at the moment. Will try to reproduce and see if
anything shows in the log later.

Simon

On Wed, 10 Oct 2018, 01:17 Jason Hicks, <notifications@github.com> wrote:

> @brownsr <https://github.com/brownsr> I think I see what you mean - are
> you moving a window to another workspace? Only reproducer for me.
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/linuxmint/Cinnamon/pull/7916#issuecomment-428395628>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AGB5MWSiMrh2p25u051xlnTWkHofg02Vks5ujTx-gaJpZM4XLetm>
> .
>
"
428687645,7916,brownsr,2018-10-10T18:47:45Z,"@jaszhix 

Cjs-Message: 19:45:37.600: JS LOG: [LookingGlass/info] Resized nvidia-prime with normalized size (64x64px)

(nvidia-prime:1712): Gdk-CRITICAL **: 19:45:37.606: gdk_window_thaw_toplevel_updates: assertion 'window->update_and_descendants_freeze_count > 0' failed

(blueberry-tray.py:1813): Bluetooth-WARNING **: 19:45:39.182: Error setting property 'Powered' on interface org.bluez.Adapter1: GDBus.Error:org.bluez.Error.Blocked: Blocked through rfkill (g-io-error-quark, 36)
Cjs-Message: 19:45:39.361: JS LOG: [LookingGlass/info] Adding systray: blueberry-tray.py (48x48px)
Cjs-Message: 19:45:40.362: JS LOG: [LookingGlass/info] Resized blueberry-tray.py with normalized size (64x64px)
Cjs-Message: 19:45:40.856: JS WARNING: [/usr/share/cinnamon/js/misc/fileUtils.js line 210 > Function 283]: reference to undefined property ""undefined""

(cinnamon:1689): Cjs-WARNING **: 19:45:40.856: JS ERROR: Exception in callback for signal: switch-workspace: TypeError: this.buttons[from] is undefined
_onWorkspaceChanged@/usr/share/cinnamon/applets/workspace-switcher@cinnamon.org/applet.js:283:9
_emit@resource:///org/cinnamon/cjs/modules/signals.js:142:27
WindowManager.prototype.emitSwitchWorkspace/<@/usr/share/cinnamon/js/ui/windowManager.js:736:52


(cinnamon:1689): Cjs-WARNING **: 19:45:42.079: JS ERROR: Exception in callback for signal: switch-workspace: TypeError: this.buttons[from] is undefined
_onWorkspaceChanged@/usr/share/cinnamon/applets/workspace-switcher@cinnamon.org/applet.js:283:9
_emit@resource:///org/cinnamon/cjs/modules/signals.js:142:27
WindowManager.prototype.emitSwitchWorkspace/<@/usr/share/cinnamon/js/ui/windowManager.js:736:52


(cinnamon:1689): Cjs-WARNING **: 19:45:42.607: JS ERROR: Exception in callback for signal: switch-workspace: TypeError: this.buttons[from] is undefined
_onWorkspaceChanged@/usr/share/cinnamon/applets/workspace-switcher@cinnamon.org/applet.js:283:9
_emit@resource:///org/cinnamon/cjs/modules/signals.js:142:27
WindowManager.prototype.emitSwitchWorkspace/<@/usr/share/cinnamon/js/ui/windowManager.js:736:52

Cjs-Message: 19:45:43.516: JS LOG: [LookingGlass/info] Adding systray: mintupdate.py (48x48px)
Cjs-Message: 19:45:44.517: JS LOG: [LookingGlass/info] Resized mintupdate.py with normalized size (64x64px)

(cinnamon:1689): Cjs-WARNING **: 19:45:46.127: JS ERROR: Exception in callback for signal: switch-workspace: TypeError: this.buttons[from] is undefined
_onWorkspaceChanged@/usr/share/cinnamon/applets/workspace-switcher@cinnamon.org/applet.js:283:9
_emit@resource:///org/cinnamon/cjs/modules/signals.js:142:27
WindowManager.prototype.emitSwitchWorkspace/<@/usr/share/cinnamon/js/ui/windowManager.js:736:52"
428690613,7916,jaszhix,2018-10-10T18:56:25Z,"Thanks @brownsr. I can't reproduce this one, but took a guess at a fix. If this works for you and still highlights the buttons correctly, then the signal might be firing multiple times."
428913278,7916,brownsr,2018-10-11T11:02:04Z,will try when I can.  I am having troubling building (master as well as this) at the moment.
429079898,7916,brownsr,2018-10-11T19:01:27Z,"@jaszhix The good news ... the warning messages went away :-)
Unfortunately the display issue is still there :-(

Works fine if you change workspaces via expo.  Doesn't work if using function keys, or clicking on different workspaces in the switcher.

Ah, no, it's more subtle than that in expo.  As far as I can tell it's fine if there's a window in the workspace.  If there isn't then the highlighting does not get deactivated, and you end up with multiple highlighted workspaces.  Or something like that. I'm having trouble getting consistent reproduction.  I am getting an .xsessions error though

(cinnamon:1693): Cjs-WARNING **: 20:24:09.473: JS ERROR: Exception in callback for signal: switch-workspace: TypeError: this.buttons[from] is undefined
_onWorkspaceChanged@/usr/share/cinnamon/applets/workspace-switcher@cinnamon.org/applet.js:284:9
_emit@resource:///org/cinnamon/cjs/modules/signals.js:142:27
WindowManager.prototype.emitSwitchWorkspace/<@/usr/share/cinnamon/js/ui/windowManager.js:736:52  

The error goes away with something like

        if (this.buttons[from])
            this.buttons[from].activate(false);
        if (this.buttons[to])
            this.buttons[to].activate(true);

But that does not fix the underlying display issue."
429201492,7916,jaszhix,2018-10-12T04:35:19Z,"@brownsr I tried to reproduce this on my optimus laptop with no success. I see a delay for the button to be highlighted, but it does highlight correctly through expo, hot corners, clicking the switcher applet, and using keyboard shortcuts while the expo/window overviews are open. I tested this on Nvidia and Intel graphics. Does this happen on a fresh session with no windows open? Also, do you have a copy of the workspace switcher applet in your user directory? I could see this occurring with an old version of the applet. Not sure what else it could be.

Also, check my last commit, I added a check for `from` and `to` - though probably less helpful at this point because now it will fail quietly. We would probably want to bail if either are undefined because then we'll end up in situations you're describing where multiple buttons are highlighted. But we shouldn't fail there at all. The arguments to that function changed, does it look like this?

```js
_onWorkspaceChanged(windowManager, wm, from, to) {
        if (!this.buttons[from] || !this.buttons[to]) return;
        this.buttons[from].activate(false);
        this.buttons[to].activate(true);
    }
```"
429220959,7916,brownsr,2018-10-12T06:40:44Z,"@jaszhix Same result on a fresh session with no windows.  Nividia and intel.  vertical or horizontal panels.  No local copy. Tried different themes. Generally no error messages in log. Code looks the same as above - I just tried the change because your test guarantees both activations get skipped if one button is not defined.  Is there something subtle in the build ?  I have mint 19 base + cjs, muffin, screensaver, xapp, csd all from master, Cinnamon built from the PR.  

Just to make sure we are looking at the same thing, it's the active workspace (border) highlighting that I am looking at in representation configuration, or the active workspace button highlighting in button configuration.  Not button hover activation in button configuration, or tooltips. "
429227771,7916,jaszhix,2018-10-12T07:11:21Z,"The highlighting of the button? I've also tested both workspace switcher view modes.

![image](https://user-images.githubusercontent.com/6859057/46853419-94966080-cdc3-11e8-9da2-2cf21ee4723f.png)

Yeah, I don't doubt its setup correctly, just thought of a time when I had a stock applet in my user directory and it confused me for a while. It could be since its deferring, it may be having unpredictable results if the main thread is busy - or is that maybe a behavior of GLib to ignore low priority function calls in that case? I'll come back to this and see if I can find another way to do this without relying on mainloop."
429299114,7916,jaszhix,2018-10-12T11:47:27Z,"In windowManager.js, if you replace `emitSwitchWorkspace` with

```js
emitSwitchWorkspace: function() {
        this.emit('switch-workspace', ...arguments);
    },
```
Does it still emit junk data for you? It might also be useful to add `global.log(...arguments)` in _onWorkspaceChanged in the applet. Since I can't reproduce this, any debug help would be appreciated.

I would also try reverting the removal of [this line](https://github.com/linuxmint/Cinnamon/pull/7916/files#diff-73d8ed048dbdd9af429eba6537e2660bL473)."
429638812,7916,brownsr,2018-10-14T16:08:50Z,"Sorry @jaszhix I can't spend more time looking at this.  I've no idea why you can't reproduce the errors when it fails every time for me.  I suggest you get someone else to try it as well.

Looking at the code I did have a couple of queries.  

The first was why you are making the change

from        this.signals.connect(global.window_manager, 'switch-workspace', this._refreshAllItems, this);
to        this.signals.connect(Main.wm, 'switch-workspace', this._refreshAllItems, this);
etc. 

Is that fundamental to the change ?  The reason for the query is that there seem to be quite a few other places using global.window_manager, so if you are changing them out for a different call then surely it should be done everywhere for consistency.  I must admit I don't really know what the use of those globals was originally intended to do.

The second was related to 
            cinnamonwm.completed_switch_workspace();
            this.emitSwitchWorkspace(...arguments);

and relates to the sequencing.  The workspace switching is marked as completed, and then all the signals are emitted ?  Not that I could find any difference reversing the order.

I guess a third query is if you are reinventing things to hang off a new signal emitted at the end of the process, then why keep the same 'switch-workspace' signal name for those things that should happen afterwards.  Why not call the initial switch-workspace signal something different for clarity, the later emitted one can be kept the same name to ensure 3rd party applets using it keep working. ?"
429640762,7916,jaszhix,2018-10-14T16:31:54Z,"Before, everything connected to `global.window_manager`'s switch-workspace signal which is emitted in C. What this PR does is add signal methods to `WindowManager.prototype`, and makes it so only it receives the C signal. It then emits its own switch-workspace signal that everything else now connects to. This allows the workspace switching to happen first, then everything else can react after Clutter paints the workspace. As far as I can tell, I already switched out all the signal connections on `global.window_manager` switch-workspace, and replaced them with `Main.wm`, which is what `WindowManager.prototype` is assigned to in main.js.

This changes the signal callback arguments because the signal emission makes the first argument the JS object (Main.wm), and we can't control that. This is backwards compatible, we're not changing the original `global.window_manager` signal, its still there for third party xlets.

We could do this on the aptly named switch-workspace-complete signal, but since it doesn't pass `from` and `to` arguments to the signal callback, the actors need to connect to the same signal that actually performs the switch. This causes too many things to queue repaints at once in no particular order I think, and why there is a 1-2 second delay when switching workspaces."
429648013,7916,brownsr,2018-10-14T18:04:20Z,Now I understand what the PR is about !
430456052,7916,jaszhix,2018-10-17T01:21:57Z,"I rebased this branch and re-worked some of this, and now have a working solution that doesn't rely on Mainloop.

Edit: LMDE CI failure doesn't look related to this PR."
430505078,7916,brownsr,2018-10-17T06:26:27Z,"@jaszhix I've tried the reworked code.  I am still seeing some windows just 'appear' without any apparent animation.  But I am afraid that from my perspective as a user it feels slower than the original - there is a definite lag in the confirmatory things such as workspace switcher display, and I cannot detect any difference in the speed of the core workspace/window switching that would compensate.  Perhaps that is only apparent in a complicated multi-monitor setup ?"
430514139,7916,jaszhix,2018-10-17T07:06:09Z,"On master it looks like cinnamon is frozen for a moment when switching workspaces with animations on. If I disable animations, then its harder to compare but still seems faster on this branch. I think this issue used to be worse with animations off before we updated Clutter in Muffin. 

The workspace animation is broken for me on master, and has been for a while. I first realized it was there on my laptop some time ago, so it may be a multi-monitor issue. Multiple monitors gives Clutter a lot more things to render, and that can affect animations. This is fixed on this branch by using `Meta.later_add` with the BEFORE_REDRAW LaterType enum, which might makes things appear slower, but I think its just letting the animation fully render where as before it would get cut off prematurely or entirely. 

Since we default to animations being enabled, they should either work correctly, or not cause as much lag when they don't. The animation could also be made to be shorter now that its given a chance to fully render. As far as the user knows (with hardware similar to what I use), there's no workspace animation, just a delay between switching workspaces."
435582790,7916,clefebvre,2018-11-03T12:06:36Z,"I can't really tell if the animation is better than before... it's going too fast and affecting too large an area for me to really be able to tell.

However, overall this feels like a regression to me. I understand that everything happened at the same time on master and that now the switch is actually done before the effects.. but that introduces visual lag in my opinion.

On master, as I click a workspace, it gets highlighted in the switcher, it's all happening at once and without delay. On this PR, it's a two-time process and it feels laggy."
435597525,7916,jaszhix,2018-11-03T15:44:23Z,"OK, I'll scrap this for now. After using new-panel-layout for a while, I'm not sure there is a problem to fix still. I don't want to add more complexity to windowManager.js if its not needed."
535390870,8873,clefebvre,2019-09-26T08:07:49Z,"Hi @norbusan 

I don't think we need to pass any info. In cinnamon-launcher we currently have two buttons ""Yes"" and ""No"". We should simply change that to a three buttons dialog, with one of the button starting cinnamon with no local spices.

The way that can work is simply by using an environment variable. Say CINNAMON_TROUBLESHOOT=1 or whatever.. we simply read that in global or in spices managers and when it's set we don't load anything from ~."
535414762,8873,norbusan,2019-09-26T09:11:45Z,"Hi @clefebvre
Thanks for your comments, indeed, that is the better idea. I will work on a psych and send a new PR, shouldn't be too difficult.

Best"
535544085,8873,norbusan,2019-09-26T14:58:07Z,"Hi @clefebvre 
here is a first shot at it. The dialog is not beautiful, and I have opted for a checkbox instead of three buttons. If the checkbox is set, export an env var that is checked extension.js when search for the directory of an extension.

Is this somehow what you intended to?"
535783921,8873,norbusan,2019-09-27T04:47:42Z,"BTW, can anyone here give me a hint *how* I can actually trigger cinnamon crashing so that I can test the loading?

Thanks"
535790478,8873,collinss,2019-09-27T05:20:59Z,"> BTW, can anyone here give me a hint how I can actually trigger cinnamon crashing so that I can test the loading?

Looking glass has that functionality - super+L, then choose actions->Crash Cinnamon in the bottom right of the window that pops up."
535792136,8873,norbusan,2019-09-27T05:28:47Z,"> Looking glass has that functionality - super+L, then choose actions->Crash Cinnamon in the bottom right of the window that pops up.

Cooool, thanks, didn't know that!

"
535794948,8873,norbusan,2019-09-27T05:41:05Z,Just confirmed that my personal applets (in `~`) are not loaded.
536294815,8873,norbusan,2019-09-29T12:25:29Z,"Any further comments to this from @clefebvre or @JosephMcc ? I am planning to upload new packages of Cinnamon 4.2 to Debian/unstable, and I either wait until this is fixed upstream, or patch it into the Debian packages. I would of course prefer upstream inclusion to keep changes minimal.

Thanks for your consideration"
539650625,8873,clefebvre,2019-10-08T18:48:47Z,"Hi @norbusan sorry for the delay, I'll try to review this during the week."
539758553,8873,norbusan,2019-10-09T00:22:06Z,"> Hi @norbusan sorry for the delay, I'll try to review this during the week.

No problem! I have pushed one more commit to beautify the dialog a bit. This is what we currently ship in Debian, but if you include something similar, we will of course use your solution.

All the best

Norbert

PS: cinnamon 4.2 has entered Debian/testing, finally we are more or less uptodate!"
546887595,8873,clefebvre,2019-10-28T10:36:16Z,"Great, there's some minor cosmetic changes to do to the dialog and the msgids but it works very well. I'll merge this and tackle the cosmetics on master."
547203198,8873,norbusan,2019-10-29T00:25:53Z,"Thanks @clefebvre for merging, and all your work on cinnamon!"
1303767758,11228,mtwebster,2022-11-04T15:31:23Z,"Hi could I get you to rebase this please?

This won't currently merge due some previous changes from https://github.com/linuxmint/cinnamon/pull/11164

Thanks
"
1304064408,11228,BrunoNZ,2022-11-04T19:28:45Z,"For sure, @mtwebster ."
1304391169,11228,BrunoNZ,2022-11-05T03:31:10Z,"Done!

Ps: I've noticed that this new icon is not symmetric and also the line width is too thin compared to the others (cinnamon's defaults), but i don't believe my inkscape skills are good enough to be able to fix it."
1304641121,11228,rcalixte,2022-11-05T21:02:56Z,"@BrunoNZ For what it's worth, I think your original implementation of the applet changes was fine. I'm not sure if the OSD needs to match the applet icons. If it would be easier to have them separate, I don't mind using new OSD icons and you can keep the applet changes as they were plus the rebase."
1304951232,11228,BrunoNZ,2022-11-07T00:40:45Z,"@rcalixte , thank you for the feedback!
Actually, i think that the code is  cleaner and safer this way, because it avoids two separate conditions and bugs concerning changing icon's filenames but forgetting to change it in these conditions. It was quite easy to do this changes, once the new class already has a method to return icon's filename.

However, i confess i didn't test it using OSD yet, because i don't know how to compile the whole project to enable it on this applet. So, if it somehow breaks your changes, i don't think it's necessary to undo this last commit. (or at least the code that returns icon's filenames, because the rest is necessary to fix some bugs of my code)."
1304975591,11228,rcalixte,2022-11-07T01:39:47Z,"@BrunoNZ If anything breaks with OSD, it'll be my fault first. 😅 

I was referencing your original PR with the applet icons modified as you attached in the .webm files earlier (and referenced below). I thought that implementation was cleaner. The icons I added for the OSD notification changes were strictly with OSD in mind which is possibly why they aren't playing well with the applet changes.

> After:
> Peek.13-10-2022.23-42.webm

I actually really liked this.

You can test locally by overwriting the files in `/usr/share/cinnamon/applets/inhibit@cinnamon.org` with your work and then restarting Cinnamon. You can also copy the `inhibit@cinnamon.org` folder from your branch to the applets download directory (the default is `~/.local/share/cinnamon/applets`) and then enabling it via Applets. Either option should work. Feel free to shout if you want an extra pair of eyes for testing!"
1305786792,11228,BrunoNZ,2022-11-07T15:33:12Z,"Ohhh, now i get it! haha I thought you were worried that these changes may brake something of your merged PR. My bad!!

Most of the changes were really necessary. I'm using my branch since i've opened the PR and i noticed that there was a bug when cinnamon was initialized with disabled notifications (silence notifications = true), because the default was enabled. So i had to force this initialization to sync it.

However, i totally agree that the code was cleaner before. I was thinking about refactoring this part of the initialization, to first initialize all the switches, and then initialize the icon passing all the values together, but there so many details around this that made me a bit afraid to modify it. I'll give it another go later today.

And about testing, I figured out how to test the applet itself, but i still don't know how to access the logs and i'm not sure if i have to compile something else to enable your hotkeys/OSD feature. About that, it would have helped me a lot to have a guide about how to run and debug applets. I've found [this wiki](https://projects.linuxmint.com/reference/git/cinnamon-tutorials/extension-system.html), but it only covers the source code."
1306392561,11228,BrunoNZ,2022-11-08T00:02:42Z,"Done!!

I moved all notificationsSwitch logic to a new class (NotificationsSwitch), which greatly simplified the main class code. Now it is replicating the same style used for `InhibitSwitch`.

Everything is working fine, except line 173 (`this.toggled(this._switch.state);`).

Every time i execute `this.toggle_inhibit_power()`, in the end of `CinnamonInhibitApplet constructor`, the applet crashes. Commenting this line, it does not crash, but i think it doesn't work as expected. However, the same happens with the old code, so i assume there is something wrong with my system or there is a small bug on it."
1306415279,11228,rcalixte,2022-11-08T00:26:08Z,"> And about testing, I figured out how to test the applet itself, but i still don't know how to access the logs and i'm not sure if i have to compile something else to enable your hotkeys/OSD feature.

The simplest way maybe is just to put a copy of the applets directory from your working area to the one under `~/.local/share/cinnamon/applets` and update with each commit.

For debugging, you can check the system logs under `/var/log/syslog` (something like `tail -F -n0 /var/log/syslog | grep cinnamon.*`) or you can also check the logs under Looking Glass (`cinnamon-looking-glass &`). Setting up a key binding for it that works for you will help if you want to go that path as well.

> Everything is working fine, except line 173 (`this.toggled(this._switch.state);`).
> 
> Every time i execute `this.toggle_inhibit_power()`, in the end of `CinnamonInhibitApplet constructor`, the applet crashes. Commenting this line, it does not crash, but i think it doesn't work as expected. However, the same happens with the old code, so i assume there is something wrong with my system or there is a small bug on it.

I'll take a look too!"
1306438511,11228,BrunoNZ,2022-11-08T00:43:04Z,"Thank you so much for the tips, @rcalixte !!! This CinnamonLookingGlass is awesome!!!

And i was wrong. It does work in master. I've broken something that is causing `sessionProxy` to be null  :thinking: 
I'll try to fix it."
1306487250,11228,BrunoNZ,2022-11-08T01:35:31Z,"Finally!! With the help of the logs i've managed to figure out more things about the applet, and fix some bugs.
Now it's working!!!

I've noticed that the setAppletIcon is being called more times than it should, when `inhibitSwitch` is toggled, but i don't think it will make much difference.

Ohh, and btw, i've just noticed that there is a configuration panel for the applet. LOL!!!
I was trying to add the hotkey inside keyboard settings and i was not finding, obviously... 

[cinnamon-2022-11-07T222655-0300.webm](https://user-images.githubusercontent.com/1660320/200451919-3f194a84-92b2-4622-830e-fd0a4bf4a17a.webm)
"
1311121228,11228,rcalixte,2022-11-11T01:36:09Z,"I've thought about this for a little bit... I'll admit it's not what I had in mind. Just my two cents, I still like the original applet changes better. This is still great though, but I think it might make the applet icons and the OSD notifications more ambiguous.

How would you feel about making it a pair of options to use one set of applet icons or the other (one option for the applet and OSD each)? I'm thinking this can be done using the settings import and ternary conditionals to keep things simple.

(I'm certainly not a design expert though. 😅)"
1313960531,11228,mtwebster,2022-11-14T15:45:26Z,We definitely don't want options to choose icons here - that's overkill. But the bell icon is already used by the notification applet so it can't really be used here. At the moment I don't have any suggestions - there aren't a lot of pixels to work with there. I do want this functionality but it's probably going to have to wait for now.
1314148930,11228,BrunoNZ,2022-11-14T17:50:36Z,"And what about the old icons? I've moved to these ones only because they were in the merged branch, but I think the old ones are pretty ok, maybe changing the ""Z""s for couple of lines, mimicking the notifications bubbles. Thinking about what the applet does, inhibit notifications and energy/screen saver, makes sense to use a ""screen icon"", because both of them translates to screen. A blank screen can be interpreted as no notifications/disturbance, and the ""warning"" tag means that energy saver is off, and user must be cautious about it.

@rcalixte ,I didn't quite understand your worries. Are you talking about the icons by themself, or the fact that the icon shown on OSD is ambiguous because both status are displayed at once. I'm not using the hotkeys/OSDs but i can see your point on this one.

I'll make some tests later today to how it goes."
1314608657,11228,rcalixte,2022-11-15T00:54:38Z,"@BrunoNZ My concerns are about the applet tray icon being ambiguous in the latest version of the implementation versus the original implementation you proposed. (I can't remember despite watching the video several times which the solid bell correlates to and which one the hollow one does. This also feels like it would be confusing rather than intuitive. I actually found your original implementation rather intuitive.) Apologies if the new icons threw you off.

@mtwebster Would you be okay with the original approach that was offered here for the applet tray functionality? Also, I'm open to selecting a new pair of icons for the OSD to make the OSD notifications differentiate from the applet tray icons. That seems like it would wrap out this functionality?

@BrunoNZ @mtwebster In all, I think the result should be 4 icons for the applet tray icon and then 4 _different_ icons for the OSD notifications. Does that work for you? If so, I can work on the PR for the power management OSD notifications (as the notification OSD icons would already be different)."
1314748429,11228,BrunoNZ,2022-11-15T04:14:07Z,"@rcalixte , I'm sorry for the confusion! I really thought the new icons were the new standard, so i didn't bother to change them.

I've made some changes in the code, to make the OSD independent, and updated the icons to a variation of the old version. My fear is that it gets confused to a ""battery icon"", with the multiple stripes, but imho it different enough, once the screen frame is very familiar.

However, i think that using different icons in the OSD causes even more confusion, like shown it the video. Notice that when Notifications are off and I inhibit energy saver the icon used is the ""full screen with the warning"", which made me think that i accidentally reactivated notifications.

I'm trully in doubt about what the right answer to this problem is.

[cinnamon-2022-11-15T005748-0300.webm](https://user-images.githubusercontent.com/1660320/201824833-ab085b46-ca45-4005-825a-9eece0d00c0c.webm)"
1314752489,11228,rcalixte,2022-11-15T04:20:47Z,"@BrunoNZ No need for apologies! We'll get there! My two cents here, if you revert the OSD icons to what they were before and leave the tray applet icons with your current changes, that would work?"
1315621353,11228,BrunoNZ,2022-11-15T17:10:10Z,"I did some experimenting with OSD exclusive icons, and came out with couple of options. I've first tried with ""crossed out"" icons, but i didn't quite like it, i don't know why.. ahhaha Then i went for a simpler solution, using a ""faded out"" approach, which pleased me a little more.

You was totally right about it, as it definitely looks more coherent now. Maybe the icons aren't in their best form yet, but it seems to be a good solution.

What do you think? Is this what you had in mind?

![Captura de tela de 2022-11-15 13-51-41](https://user-images.githubusercontent.com/1660320/201982300-c4a7cd6f-995d-4a12-9c7f-a1b8aa68e738.png)

![Captura de tela de 2022-11-15 13-52-11](https://user-images.githubusercontent.com/1660320/201982307-e2c35024-2dca-4cb9-b83f-3b08d55a24a0.png)

"
1316310830,11228,rcalixte,2022-11-16T04:22:04Z,"@BrunoNZ Take a look at @mtwebster's comment [here](https://github.com/linuxmint/cinnamon/pull/11164#issuecomment-1281124091) pertaining to the 'error' symbolic class.

Would you be okay with replacing the faded icons with the consistent symbolic class? I'm wary of the two OSD icons being too similar still but I'll leave the final say to the wisdom of the crowd."
6707635,843,ebbes,2012-07-02T13:05:58Z,"I tried your applet, it's very cool. But I think it would be even better if the time of the notifications would be added.
"
6708072,843,mtwebster,2012-07-02T13:25:17Z,"Good idea - should be able to do this - or would elapsed time be better?

..27 minutes ago

like that
"
6708778,843,ebbes,2012-07-02T13:56:42Z,"Well, I think elapsed time would be better if it is less than one hour. If the notification says ""just now"" or ""55 minutes ago"", then I know exactly when it happened. But if it says ""one hour ago"" (could be 60 to 159 minutes ago) or even ""17 hours ago"", I run into problems, have to look at the clock and do some calculations in order to get the time.
Therefore I think a mix of both would be best.
Okay, 17 hours is a bit unrealistic, but this comment is based on my personal experience when opening notification center on my iPhone.
"
6714132,843,mtwebster,2012-07-02T17:16:06Z,"Hmm ok - less than a minute: ""Just now""
a minute to an hour: ""xx minutes ago""
over an hour: show actual time.

Something along those lines.
"
6714539,843,ebbes,2012-07-02T17:32:37Z,"This definitely sounds cool.
"
6734364,843,mtwebster,2012-07-03T13:35:06Z,"duh you're right - I lose the forest for the trees sometimes
"
6738147,843,ebbes,2012-07-03T15:49:58Z,"Great work. However, there are two points I'd like to mention.
Personally, I think it would be better if the time string appeared only after the notification is put into the tray, because if you can see it on screen, it is very recent.
I think I found a bug: Rhythmbox song switch notifications won't get removed from the tray, they stay in it until the next song change happens. But since your system works with other apps, it seems to be a Rhythmbox issue...
EDIT: When I clear the tray notifications by clicking clear, Rhythmbox notifications disappear as intended. Only clicking them to dismiss causes them to stay in the tray.
"
6739848,843,mtwebster,2012-07-03T16:51:23Z,"See if this latest patch fixes the Rhythmbox issue.
"
6740046,843,ebbes,2012-07-03T16:58:35Z,"Yes, issue fixed.
"
6756694,843,mtwebster,2012-07-04T09:51:25Z,"squashed some commits for cleanliness.
"
6757779,843,autarkper,2012-07-04T10:58:01Z,"This is a bit off-topic, but anyway:
Squashing, it that what people do to produce clean pull requests? I'm a bit divided on the issue. On the one hand one gets the cleanliness and it hides the silly mistakes one may have made along the way, but on the other hand one loses the ability to pin-point regressions to a specific commit.
"
6758044,843,mtwebster,2012-07-04T11:15:41Z,"Yeah - it basically takes many commits and turns them into 1 single one.  If I was in charge of a repository that people were forking alot or collaborating on, I would NEVER do it (or push --force), as it would screw up everyone's fork - basically you're changing history.

But in this case, I'm submitting to another repository, I want my commits to be as clean as possible, and easy to follow, so if a number of commits relate to a single 'feature' or fix, I squash them so it can definitely be pinpointed for issues.

Basically, before submitting a pull request, I do:

git rebase -i HEAD~10 (or whatever number of commits I've got in my branch), and squash as required

git pull --rebase mint master (make sure I'm up to date with the branch I'm wanting to merge with, rebase makes sure my commits are at the end - mint is a remote pointing to linuxmint/cinnamon)

git push origin _branch-name_
or if I'm updating a branch
git push --force origin _branch-name_

I sort of got into this habit doing work on Android (cyanogenmod) where they were very picky about commits, whitespace, and form.  Not surprisingly, I got very good at git :P
"
6758235,843,autarkper,2012-07-04T11:28:54Z,"@mtwebster: thanks for the tips! I'll try that out! Maybe that'll make my pull requests a bit tastier. But the other day when I was doing an interactive rebase I almost managed to lose all my commits on one branch, so I'm a bit wary of rebase.
"
6758270,843,mtwebster,2012-07-04T11:32:03Z,"If you ever screw up (like accidentally deleting a line during a rebase), try:

git reflog

It'll list all attached and detached commits (like the one you lost) then you can take the hash and do:

git cherry-pick _hash_

and get it back
"
6758748,843,autarkper,2012-07-04T12:01:27Z,"@mtwebster: Thanks again! I knew it wasn't lost, I just didn't know how to find it.
"
6795327,843,dalcde,2012-07-06T01:37:04Z,"It would be nice if you could find a better way of notifying the the notification system that a notification applet is present. This way third-party notification applets will be possible.
"
6795915,843,mtwebster,2012-07-06T02:34:18Z,"hmm I can add something to the metadata file, like 'Purpose' or 'function'  - that would open up additional possibilities for 3rd party replacements of other functions.  I shall ponder on it.
"
26556825,843,mintystark,2013-10-17T22:00:46Z,"Love it!

One suggestion:
It is sort of annoying to read the Notification then have to go down to the tray and clear notifications.
Of course I don't really need to clear them, but I prefer to keep it clean.
Would prefer that I can just dismiss the notification from the popup and that would mean it would not need to be added to the tray.  With this I would also like some settings for notifications and one of them being able to adjust the Timeout of the popup.
"
113820769,4338,ghost,2015-06-20T21:14:07Z,"It's really necessary back to cjs? This will preserve the position of the applets inside the panel (i.e. the applet and desklet definition)?
"
113870596,4338,collinss,2015-06-21T07:16:03Z,"There does seem to be a problem with this. If the applet is multi-instance (which is most of them now) the settings file gets destroyed when `Extension.unloadExtension` is called, so the applet loses it's configuration, which is not ideal. I think you'll have to add a function to `extension.js` to handle reloading cleanly.
"
113870896,4338,ghost,2015-06-21T07:32:00Z,"@collinss why we need to do this? All this can be do in the python side (cinnamon-settings).
Read all instance that we update from gsettings ""enabled-desklets"", ""enabled-applets""... whatever the case(extension type) and store it. Then update the available extension (enabled- applets/desklets) gsettings value, without add the update extensions (this will close all that we update currently). Again update the enabled- but now with all using the save values (the definition).
"
113871370,4338,ghost,2015-06-21T07:46:24Z,"I can help in this, but i don't know how create more than one pull, and the indicator is a big pull to remove it.
"
113877909,4338,ghost,2015-06-21T08:42:14Z,"This is what i propose:

Edit: to fix some problems.

```
    def install_finished(self, need_restart):
        for row in self.gm_model:
            self.gm_model.set_value(row.iter, 2, 0)
        self.install_button.set_sensitive(False)
        self.install_list = []

        if len(need_restart) > 0:
            not_update_extensions = [];
            all_current_extensions = [];
            for enabled_extension in self.enabled_extensions:
                found = False
                for uuid in need_restart:
                    if uuid in enabled_extension:
                        found = True
                        break
                if not found:
                    not_update_extensions.append(enabled_extension)
                all_current_extensions.append(enabled_extension)

            self.settings.set_strv((""enabled-%ss"") % (self.collection_type), not_update_extensions)
            self.settings.set_strv((""enabled-%ss"") % (self.collection_type), all_current_extensions)

        self.load_extensions()
```

Is possible that we need to add a timeout, waiting for the change, between the update of not_update_extensions and all_current_extensions. Need to be tested, if is enough, or is needed the timeout.
"
113880002,4338,ghost,2015-06-21T09:32:06Z,"I tested it with the last change, apparently is working...
"
113933956,4338,collinss,2015-06-21T17:37:23Z,"@lestcape You can do multiple pull requests by using branches.

https://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes
https://git-scm.com/book/en/v2/Git-Branching-Basic-Branching-and-Merging
https://git-scm.com/book/en/v2/Git-Branching-Remote-Branches
1. Create a branch on your fork
2. Switch to the new branch
3. Make the changes
4. Commit the changes
5. Push your branch to github

When you've done that, github will pop up a notification (you might need to go to the cinnamon repo or your fork for it to do that) that asks if you want to submit a pull to upstream.

(Also, you probably want to make sure your master is up to date with linuxmint/master before you create the branch so you don't have to worry about merge conflicts later.)
"
113960905,4338,ghost,2015-06-21T21:18:59Z,"@collinss thanks, but I did not create a branch on indicator. The last part is the problem to me. How update the repo when i have different pending branches and i want create a new one?
"
114077167,4338,pixunil,2015-06-22T11:53:11Z,"@lestcape, you can use

```
git add remote upstream git@github.com:linuxmint/Cinnamon.git
git checkout upstream/master
git checkout -b newbranch
```

---

Back to topic, I don't know what you want to achieve by updating it via gsettings, when I'm taking it correctly, it updates all xlets? Also those which aren't updated?
"
114173805,4338,ghost,2015-06-22T16:38:51Z,"@pixunil when a change in gsettings occurs, then cinnamon (cjs), read this value and only process the value that have a change, so, only will be processed the difference 
between the old value and the current value.
There are two cases:
Case 1: 
self.settings.set_strv((""enabled-%ss"") % (self.collection_type), not_update_extensions)
Case 2:
self.settings.set_strv((""enabled-%ss"") % (self.collection_type), all_current_extensions)

In the case 1:
old value is: all_current_extensions
current value is:  not_update_extensions

So the difference:
(all_current_extensions - not_update_extensions) as a set difference. 
This difference is the extensions that need a restart. 

In the case 2:
old value is: (all_current_extensions - not_update_extensions)
current value is: all_current_extensions

Then, cjs will process the current difference again, this actually is:  
((all_current_extensions - not_update_extensions) - all_current_extensions) 
So is the same as:
(all_current_extensions - not_update_extensions) 
So again will be process only the extension that need a restart.

In both calls,  only will be processed the extension that need a restart, and will not touched any other extension. In the first called, process means unload the extensions as now are not present, and in the second, means load the extensions with an specific definition (the old one) because is added.

You will understand easy this after read: https://github.com/linuxmint/Cinnamon/blob/master/js/ui/extensionSystem.js#L62-L73

Please see:
https://github.com/linuxmint/Cinnamon/blob/master/js/ui/extensionSystem.js#L66
The condition: enabledExtensions.indexOf(uuid) == -1 will satisfy the case 1, then only will be unload the  extensions that currently are not present...

Case 2 apparently is not satisfy here:
https://github.com/linuxmint/Cinnamon/blob/master/js/ui/extensionSystem.js#L71
but it is satisfied here:
https://github.com/linuxmint/Cinnamon/blob/master/js/ui/extension.js#L461

We need to be checked the gsettings next-applet-id or next-desklet-id values, is possible that we need to update this value, but i think is internally updated by cinnamon.
"
114185455,4338,collinss,2015-06-22T17:14:33Z,"I don't think setting the gsettings key is the way to do it. Not only does it feel hasckish to me, but it calls all of the same functions that @pixunil's method does, which means that the problem I mentioned above is still relevant. The proper solution IMHO is to implement a separate 'reload' function as I also mentioned above. This would have several advantages:
1. It would ensure that everything is done right.
2. It would (theoretically at least) be more efficient, as there is probably some code that wouldn't have to be run again
3. Such a function would enable applet developers to easily reload their code, without having to restart all of Cinnamon every time they made a minor change to their applet.
"
114189217,4338,ghost,2015-06-22T17:24:43Z,"Same function for applets: https://github.com/linuxmint/Cinnamon/blob/master/js/ui/appletManager.js#L173-L215
Same function for desklets: https://github.com/linuxmint/Cinnamon/blob/master/js/ui/deskletManager.js#L168-L210

@collinss 
About what you say, yes is probably that what i say not preserved the configuration, as i don't take on account this. I have not tried.
"
114200065,4338,ghost,2015-06-22T17:59:42Z,"@collinss 
1- ""It would ensure that everything is done right"", not really, as this is more complex than that, because involve two sides, and will be more easy maybe for cjs, but what is relate to the gsettings definitions, is not clear anyway... Also this not involve a properly call to destroy the desklets and applets(this is needed to disconnect some signals, for example: https://github.com/pixunil/Cinnamon/blob/b2263a25bc621705f885fa261f7c1254a74980aa/js/ui/appletManager.js#L180), some signals to the javascript objects (not st and also some other objects  inside applets as some menu objects will not be destroyed) will keeping connected. some of them with catastrophic result as for example the global menu...
2- What you propose, how is over Dbus, will involve be less efficient (practical at least), also a more complex mechanism and will require add more code.
3- ""Such a function would enable applet developers to easily reload their code, without having to restart all of Cinnamon every time they made a minor change to their applet."" This is now possible(see my sticky notes implementation), what you say is with less code? I don't find the utility anyway.
"
114223994,4338,ghost,2015-06-22T19:10:10Z,"What i propose will not remove the configuration for the non multi-instances extensions (applet, desklets), but will be removed for the multi-instances. I think, will be possible do what @pixunil do and in the change event send a parameter deleteConfig with false as is what occurs for only one instance (will be preserved the configuration).
"
114253518,4338,ghost,2015-06-22T20:28:06Z,"I tested, this current proposition and what i say about not properly destroy the objects is not true, as this is done in prepareExtensionUnload. Apparently the definition (in gsettings) is not touch, so will not create problems.

Maybe, this line is not necessary: https://github.com/pixunil/Cinnamon/blob/b2263a25bc621705f885fa261f7c1254a74980aa/files/usr/lib/cinnamon-settings/bin/ExtensionCore.py#L901 is here the connection: https://github.com/pixunil/Cinnamon/blob/b2263a25bc621705f885fa261f7c1254a74980aa/files/usr/lib/cinnamon-settings/bin/ExtensionCore.py#L968

Both ways apparently will work ok...
"
114263211,4338,collinss,2015-06-22T21:12:59Z,"@lestcape `prepareExtensionUnload` is called by `unloadExtension` (unless the extension object doesn't exist), and `unloadExtension` is called by `onEnabledAppletsChanged`, which in turn is called when the gsettings key is changed:

https://github.com/linuxmint/Cinnamon/blob/master/js/ui/appletManager.js#L51
https://github.com/linuxmint/Cinnamon/blob/master/js/ui/appletManager.js#L187
https://github.com/linuxmint/Cinnamon/blob/master/js/ui/extension.js#L510

Thus all multi-instance settings will be lost by this method.
"
114281846,4338,ghost,2015-06-22T22:08:19Z,"@collinss in both methods, will be needed the same thing to not lost the settings of multi-instance (and can be done in both), just is a different way to do the same, but please see if this line is necessary: https://github.com/pixunil/Cinnamon/blob/b2263a25bc621705f885fa261f7c1254a74980aa/files/usr/lib/cinnamon-settings/bin/ExtensionCore.py#L901
"
114300600,4338,collinss,2015-06-22T23:21:01Z,"@lestcape 
https://github.com/linuxmint/Cinnamon/blob/master/files/usr/lib/cinnamon-settings/bin/ExtensionCore.py#L1001
It looks like it is needed because it gets disconnected every time the callback gets called...
"
114331737,4338,ghost,2015-06-23T02:27:06Z,"That's, ok then, only is strange...
"
256514711,5859,NikoKrause,2016-10-27T00:28:01Z,"""dnd-copy"" is a hand with a plus symbol.

For the second option (the one with the (pointing)""hand"" cursor) I would have liked to have another cursor. In my opinion it should be a hand with a minus symbol, called ""dnd-remove"".

But there was no such cursor. Maybe it is possible to create such a cursor?

EDIT:
I added the following line
`global.set_cursor(Cinnamon.Cursor.POINTING_HAND);`
to get this cursor.

I think it would be better to create `DND.DragMotionResult.REMOVE_DROP` in dnd.js file.
But i didn't found the `cinnamon-global.c` file in my root directory /, which has to be changed also for that. I don't know were it's stored. And I was to afraid to break my system.

If this PR will be merged, it is something that could be changed by someone who's more familiar with that.
"
256751562,5859,Odyseus,2016-10-27T19:55:43Z,"Hello, @NikoKrause.

The `cinnamon-global.c` file is a source file and it's located only in this repository ([**src/cinnamon-global.c**](https://github.com/linuxmint/Cinnamon/blob/master/src/cinnamon-global.c)). You will not see it in an installed system. In that file are only 15 different cursors defined. As I understand it (I know nothing about C language) the cursors are extracted(?) from a module(?) called [**GdkCursor**](https://developer.gnome.org/gdk3/stable/gdk3-Cursors.html#gdk-cursor-new-from-name)? There are available 30 different cursors. But I thing that the way to go would be to add all the cursors from the the [CSS specification](https://developer.mozilla.org/en-US/docs/Web/CSS/cursor).

Either way, what you want to achieve _""isn't possible""_. The cursor that you want to implement (a hand with a minus symbol) doesn't exist in any standard implementation (not in the CSS specification linked above nor in the [freedesktop cursor conventions specification](https://freedesktop.org/wiki/Specifications/cursor-spec/)) nor in any cursor theme (that I know about).
"
256763025,5859,NikoKrause,2016-10-27T20:42:25Z,"I created such a cursor for the DMZ-White cursor theme.
It looks like this:
![dnd-remove](https://cloud.githubusercontent.com/assets/8415124/19784505/580fee84-9c96-11e6-80b8-ad4bf7272425.png)
Here is the link to the file: 
https://github.com/NikoKrause/arc-theme/blob/master/dnd-remove

Isn't it possible to include this to the DMZ-White cursor theme and use it in the menu-applet instead of the pointing hand cursor?
"
256797868,5859,NikoKrause,2016-10-27T23:25:27Z,"@Odyseus 
I think Cinnamon uses the cursor theme from here
https://packages.qa.debian.org/d/dmz-cursor-theme.html
"
257098371,5859,NikoKrause,2016-10-29T15:38:23Z,"I got in touch with the Debian developers. Here is the response I got:

> Debian is only maintaining the packaging of the Debian
> dmz-cursor-theme package, not the development of the cursor theme nor
> the creation of new icons.
> 
> According to the Debian packaging, the upstream git repository is on
> gitorious, which is now defunct and read-only:
> 
> http://metadata.ftp-master.debian.org/changelogs/main/d/dmz-cursor-theme/unstable_copyright
> https://gitorious.org/
> https://gitorious.org/opensuse/art
> 
> Here is the history of the upstream git repository:
> 
> https://gitorious.org/opensuse/art?p=opensuse:art.git;a=history;f=cursors/dmz;hb=HEAD
> 
> It appears that the right person to contact about adding new icons to
> the DMZ cursor theme is this person:
> 
> Jakub Steiner jimmac@gmail.com
> 
> Here is his website:
> 
> http://jimmac.musichall.cz/

Does this

> the upstream git repository is on gitorious, which is now defunct and read-only:

mean, that even when a new icon will be added, I won't be able to use it, because the repository is defunct?
"
257100241,5859,collinss,2016-10-29T16:11:37Z,"@NikoKrause the problem with adding custom cursors is that most cursor themes will not support them, and not everyone uses the same cursor theme. As for adding new cursors, I did that a while back in #4465. You could see what I did there.
"
257111399,5859,NikoKrause,2016-10-29T19:34:32Z,"@collinss 
Thanks for your reply.

> the problem with adding custom cursors is that most cursor themes will not support them, and not everyone uses the same cursor theme

I used some custom cursor themes,, which don't have for example dnd-copy cursor. The cursor falls back and uses the DMZ-White cursor instead. What I was wondering about: Is Cinnamon shipped with the DMZ cursor theme by default for other OSes as well (e.g. in ArchLinux?)

I see that you changed the global file. Where did you put the file of the new cursor? I don't see that in the commit. Thanks for your help.
"
257113113,5859,Odyseus,2016-10-29T20:09:43Z,"@NikoKrause
Cinnamon doesn't come with any cursor theme (we could say that Cinnamon is cursor theme agnostic). The DMZ-White/Black cursor themes are shipped with Linux Mint. Cinnamon on Arch Linux doesn't install the DMZ cursor theme (although, it can be installed from its package manager). What **collinss** did in that commit was to add to one of Cinnamon's modules the ability to programmatically set more cursor types. It has nothing to do with any cursor theme in particular.

You should abandon the idea of changing the cursor theme itself. In the commit linked by **collinss**, **lestcape** [mentions a method](https://github.com/linuxmint/Cinnamon/pull/4465#issuecomment-124745026) that could be just what you are looking for (although, I didn't understood half of what the code does (LOL)).
"
257113822,5859,NikoKrause,2016-10-29T20:22:49Z,"> What collinss did in that commit was to add to one of Cinnamon's modules the ability to programmatically set more cursor types.

He creates new cursor types, but he doesn't use new cursor icons for that (he uses only existing cursor icons), does he?

So I guess Cinnamon needs his own Cursor Icon Theme ;) I think the absent possibility to add new icons is a restriction you have to live with.

I think it would be better to use an existing icon, isn't it?

Any proposals, which icon I should use for this feature instead? I'm not very happy with the pointing hand. Maybe the dnd-link icon?
![dnd-link](https://cloud.githubusercontent.com/assets/8415124/19832537/1af54fe4-9e26-11e6-839d-62c1fc22d062.png)
Or the dnd-ask icon?
![dnd-ask](https://cloud.githubusercontent.com/assets/8415124/19832542/37617180-9e26-11e6-9855-cf835c27cadc.png)
"
257148334,5859,NikoKrause,2016-10-30T12:30:25Z,"> It appears that the right person to contact about adding new icons to
> the DMZ cursor theme is this person:
> 
> Jakub Steiner

@jimmac
I would like to hear your opinion on this thread, i.e. about how good/bad it is to add new cursor icons.
"
257165679,5859,NikoKrause,2016-10-30T17:39:58Z,"@collinss 
Right now I had an idea, but I don't know if it is possible to do.
I would like to create a new cursor type like you did. I want to say that cursor type, use the custom cursor (hand with minus Symbol). If this cursor doesn't exist in your cursor theme, then use the cursor with the pointing Hand, which exists for sure. 
Do you know if this is possible?
"
257363722,5859,jimmac,2016-10-31T17:38:09Z,"DMZ is bitrotten and no longer maintained. gtk+ itself provides core cursors, including improved DND ones.
"
257364702,5859,NikoKrause,2016-10-31T17:41:31Z,"@jimmac 
Where can I find them? Can you post a link?
"
260094209,5859,jimmac,2016-11-12T02:00:22Z,"Sorry, it's not gtk+ itself, but adwaita-icon-theme. The 'sources' live in https://git.gnome.org/browse/adwaita-icon-theme/tree/src/cursors
"
292922744,5859,clefebvre,2017-04-10T11:27:37Z,Closing this for now.
292923169,5859,NikoKrause,2017-04-10T11:29:56Z,Why?
292963205,5859,clefebvre,2017-04-10T14:18:19Z,Sorry I assumed this was dead and going nowhere.
292964025,5859,NikoKrause,2017-04-10T14:21:15Z,"No, it worked fine. The follow up discussion was only asking if a new cursor icon could be added. Since this is hard to accomplish, I just usw the pointy finger cursor instead.

You can try it, if you like the chosen cursors."
294135743,5859,NikoKrause,2017-04-14T10:57:17Z,"So is this closed as ""Do not want to"" or ""Do not like it""?"
7523558,1003,Cobinja,2012-08-06T13:18:25Z,"@autarkper: could you take another look at this? currently it breaks setting bottom panel height without cinnamon restart. the position is not adjusted (probably to not calling LayoutManager.updateBoxes)
"
7524150,1003,autarkper,2012-08-06T13:46:39Z,"@Cobinja: The way I see it, it is already broken in master. It is one of the remaining warts, but I don't think I have made it any worse than it already is. Please check again and correct me if I'm wrong.
"
7526260,1003,Cobinja,2012-08-06T15:13:19Z,"@autarkper: I checked. In master it works fine.
Problem seems to be the deletion of lines 784 and 808 from panel.js
"
7527870,1003,autarkper,2012-08-06T16:12:48Z,"@Cobinja: Well then I'm doubly stumped, once for not being able to reproduce correct behavior in current master, twice for not being able to fix it on my branch. Re lines 784 and 808, they have not been deleted, but reworked. The call of Main.layoutManager._updateBoxes is done in layout.js instead; duplicating the call in panel.js does not have any perceivable effect.
"
7528757,1003,Cobinja,2012-08-06T16:47:05Z,"@autarkper: you need to call layoutManager._updateBoxes every time the panel height is changed. otherwise the y-position of the bottom panel is not adjusted.
"
7529112,1003,autarkper,2012-08-06T17:01:47Z,"If you put a log statement in _updateBoxes you will see that it is called. Please note that the code works for the top panel.
"
7537111,1003,Cobinja,2012-08-06T21:37:12Z,"@autarkper: I looked again. Your 3rd commit solves it.
Imho it would be better to just call _updateBoxes from panel.js instead of doing all that autohide change stuff in layout.js additionally (inc. avoiding the ""interesting"" naming scheme with onPanelAutoHideChanged reacting to changes in ""panel-top-height"" and ""panel-bottom-height"").
"
7537928,1003,autarkper,2012-08-06T22:08:12Z,"The latest commit solves the problem with the desktop not resizing correctly after changing the size of the bottom panel.

@Cobinja: There must be something different in our configurations, because I had to do even more to make it work around here. As I've said before, simply calling _updateBoxes from panel.js does not work for me. I agree that the names are not very descriptive anymore; I'll try and find something more suitable.
"
7541993,1003,Cobinja,2012-08-07T02:06:14Z,"@autarkper: The problem with the desktop size is solved. Still, there's something that's not really a problem. Showing and instantly hiding a panel when changing the height with autohide on looks somehow weird (at least to me).
"
7544435,1003,autarkper,2012-08-07T05:50:21Z,"@Cobinja: Thanks for testing! Flashing the panel bugs me too, a bit, but given that users probably won't be changing panel settings very often I hope it'll be acceptable. Actually, I think the ability to resize panels currently isn't very useful anyway, since the contents doesn't scale.
"
7544843,1003,autarkper,2012-08-07T06:24:10Z,"I have squashed the commits somewhat.
"
7547912,1003,Cobinja,2012-08-07T09:27:09Z,"@autarkper: For ""autohide on"" i think we don't have to adjust the desktop size, since it's not affected by autohidden panels.
"
7549652,1003,autarkper,2012-08-07T10:50:32Z,"@Cobinja: Is that really so? Turning auto-hide on should reclaim the space previously occupied by the panels.
"
7549728,1003,Cobinja,2012-08-07T10:54:20Z,"@autarkper: Sry, that wasn't expressed well. Better: While autohide is turned on, I think we don't have to adjust the desktop size when setting a new panel height, since it's not affected by an autohidden panel, and thus we can maybe avoid showing and instantly hiding the panel.
"
7550063,1003,autarkper,2012-08-07T11:14:13Z,"@Cobinja: OK, that makes sense. I'll check.
"
7552351,1003,autarkper,2012-08-07T13:00:24Z,"@Cobinja: I have investigated making an exception when auto-hide is on and not changing, but the result is not satisfactory. I won't have much more time to work on this issue, so I'll have to leave it as it is.
"
8301147,1003,autarkper,2012-09-05T14:44:01Z,"This will no longer merge cleanly to master; there is currently a conflict in panel.js that cannot be mechanically resolved. Unfortunately I'm not able to work that out for the time being.
"
8303760,1003,autarkper,2012-09-05T15:54:49Z,"I'm closing this for now, as this needs more testing. I would also like to investigate whether we can support multi-monitor configurations better than today.
"
11392729,1504,glebihan,2012-12-14T21:19:22Z,"I'm not sure I understand the idea behind the ""classic flipped"" layout ?
How is it different from the ""classic"" (not flipped) layout, since applets can be moved from one panel to the other anyway ?
"
11393685,1504,autarkper,2012-12-14T21:50:06Z,"The problem with the ""classic"" layout is that the top panel becomes the main panel, which means that new applets are placed there by default. Also, if you want to switch between different layouts you have to move your applets manually, which I find quite tedious and error-prone. The ""classic-flipped"" layout is intended for those that want to keep their main panel at the bottom and use the top panel as a secondary panel, maybe hideable, where they can keep the applets they don't want to look at all the time.
"
11394261,1504,glebihan,2012-12-14T22:09:30Z,"I think most users don't switch layout very often, so I'm not sure the switching thing is really an issue.
I have the feeling that having both those options might be confusing.
"
11396150,1504,dalcde,2012-12-14T23:23:46Z,"I've got a different way of approaching this which I am working on. Perhaps I make a pull request later and compare and contrast?
"
11400890,1504,autarkper,2012-12-15T07:22:40Z,"@dalcde: sure, I'm looking forward to that.
"
11400973,1504,dalcde,2012-12-15T07:31:47Z,"Made a pull request :)
"
11401232,1504,autarkper,2012-12-15T08:18:24Z,"@dalcde : Since mine was submitted before yours, mine is obviously the winner! :)
"
11401256,1504,bimsebasse,2012-12-15T08:22:18Z,"The layout selection is goofy enough as it (two near-synonyms in ""Classic"" and ""Traditional"" (?) plus ""Flipped"") - a ""Classic Flipped"" introduced will make it definitely ridiculous.

This is probably too obvious and simple and un-misunderstandable:

Panel layout
- Top panel
- Bottom panel
- Top + bottom panel
"
11401429,1504,autarkper,2012-12-15T08:47:43Z,"We can always rename the labels, but in the case of two panels, you want to say which one is primary and which one is secondary, IMO. And I've seen a number of people requesting more than two panels, or two panels side-by-side; that makes the current model with a fixed set of options untenable.
"
11409298,1504,autarkper,2012-12-15T19:33:34Z,"With my latest commit, there is now support for user-defined panel layouts (no support for that in Cinnamon Settings, unfortunately).

2 panels, top-left and bottom-right (assumes side-by-side monitor configuration):
gsettings set org.cinnamon desktop-panel-layout 'top,left+bottom,right'

2 panels, bottom-left and bottom-right (assumes side-by-side monitor configuration):
gsettings set org.cinnamon desktop-panel-layout 'bottom,left+bottom,right'

4 panels, bottom-left, top-left, top-right and bottom-right (assumes side-by-side monitor configuration):
gsettings set org.cinnamon desktop-panel-layout 'bottom,left+bottom,right+top,left+top,right'

There is no validation of user-defined layouts yet, so panels may end up overlaying each other.

Update: You can now have an unlimited number of panels (in theory, of course).
"
11413731,1504,Lusito,2012-12-16T03:27:15Z,"Just an idea for the both of you: Why not drag & drop the applets to the respective panels from the applet dialog, which would make the whole idea of a ""main"" panel obsolete.
I'd like to see panels completely free of layout names like traditional, flipped, etc.
If there can only be one panel each side, name them top,bottom,left, right, otherwise give them an attribute position, which is one of the 4, maybe plus a monitor id.
"
11414503,1504,dalcde,2012-12-16T05:33:28Z,"```
I'd like to see panels completely free of layout names like traditional, flipped, etc.
```

That's my plan :) It's just that I have to get rid of all Main.panel etc. references before I can get that working.
"
11415672,1504,bimsebasse,2012-12-16T08:54:28Z,"it would be awesome if Panel Settings registered your monitor setup and only listed advanced multi monitor layout options if it finds you're using two monitors, otherwise it's probably gonna confuse many newcomers and inexperienced users. You'd be surprised how many users are utterly confused by something as - to us - simple to navigate as Cinnamon's theme handling.

Failing that, a by default unchecked ""Show multi monitor layout options"" which when checked shows the expanded options, or a ""single monitor mode/dual monitor mode"" toggle somewhere.
"
11416170,1504,autarkper,2012-12-16T10:11:56Z,"I'm not going to dig a lot deeper than this until we have a decision on which (whose) approach is going to be chosen.
"
11416240,1504,dalcde,2012-12-16T10:21:35Z,"Okay. Same for me
"
11421359,1504,autarkper,2012-12-16T19:04:44Z,"That hasn't stopped me from making some improvements, partially with the help of dalcde's work.
"
12015328,1504,autarkper,2013-01-08T20:21:19Z,"Rebased on top of the recent changes to the Applet Manager.
"
12033959,1504,autarkper,2013-01-09T07:09:07Z,"I'm closing this pull request, soon opening a new one.
"
370267483,7325,brownsr,2018-03-04T21:52:09Z,"Excellent.  That dead strip with a border had bugged me before, but I never got to the bottom of it.  This seems to all work fine for me.  Suggest you check all is OK on multiple monitors, I can't check that readily.  Could you add a brief comment in the code ?  - or the logic is going to be incomprehensible in the future.  Testing RTL is difficult, you need to set locale to a RTL language such as Arabic, Hebrew etc.  I suspect there may well be RTL issues lurking because of the challenge of doing this, I don't think any of the frequent developers know RTL languages so if by any chance you do then that would be great."
370268847,7325,germanfr,2018-03-04T22:09:06Z,"Yes, I just checked and it works with multiple monitors.

I downloaded the Hebrew locale, I enabled it globally in settings and I also tried this command, but now way it to enable RTL.
```shell
LANGUAGE=he_IL.utf8 cinnamon --replace
```"
370326536,7325,JosephMcc,2018-03-05T06:56:32Z,"@germanfr I posted this for brownsr somewhere else earlier but I'll copy it here. Not sure what distro you run but this is how I test it.

```
ok the way I did this in Mint was use mintlocale to install an arabic language
make sure all the language packs are installed
create a new user account for testing
I set the new account to use the arabic language
then reboot. A simple log in and out isn't enough for the new language to fully take effect
boot into your new user account and it will be using the new language

simply doing it with cinnamon --replace in a current sesssion doesn't seem to make it fully take effect
once everything is installed you can do a `LANGUAGE=ar_AE.UTF-8 cinnamon --replace` but it doesn't seem to update everything
it flips your panel around and updates some things so may work in his case but a better test is probably the dummy account
```"
370452580,7325,germanfr,2018-03-05T15:19:36Z,"@JosephMcc I tried that, everything is in Arabic but RTL is not enabled in any program. I installed `ar_SA` and also started cinnamon with `LANGUAGE=ar_SA.UTF-8 cinnamon --replace`, but nothing."
370534796,7325,germanfr,2018-03-05T19:28:44Z,"I added some commits to be squashed. They fix wrong positions for the panel corners due to borders too and I added some comments (not many, I can't explain it better than the code itself)."
370549407,7325,brownsr,2018-03-05T20:14:20Z,"Looking good.  I thought I had spotted an error, but then I found it was there in the master version too.  You may be able to see the cause as you are amending this section. Using theme faience from the spices repository which has visible corners, I set up two side panels, then added a new one at top (or bottom), all fine so far, then move the horizontal panel to the other side of the screen.  That's definitely not fine, with corners left around, not replaced, and some blanked out or overwritten bits of panel towards the corners of the screen."
370556192,7325,germanfr,2018-03-05T20:36:40Z,"@brownsr Yes, I can reproduce that in master too. It's a completely different issue not related to this. It's not even related to the corners, it happens whether they exist or not and also side panels don't update their heights.
I think it was reported some time ago, but I have no idea how to fix it, sorry."
370561652,7325,JosephMcc,2018-03-05T20:54:27Z,I know this had been discussed internally but the panel corner stuff could really die. It's hardly used anywhere and overcomplicates the panel code for virtually no benefit.
371081618,7325,smurphos,2018-03-07T09:42:36Z,"Glad this came up - I've been been attempting to work around this by various methods for a while trying to get bordered objects in panels to look OK in bordered panels and it's never quite right.

As the subject has come up I get other strange behaviour attempting to get a single outside border on all 4 panels. Can others reproduce this? Should I raise a separate issue?

This works.
```
.panel-bottom {
  border-top: 1px solid white;
}
```
This doesn't
```
.panel-top {
  border-bottom: 1px solid white;
}
```
but this does
```
 .panel-top {
    border: 1px solid white;
    border-top: 0px;
    border-left: 0px;
    border-right: 0px;
}
```
Similar stunts are needed for left and right panels.
"
371102324,7325,smurphos,2018-03-07T10:57:52Z,"With this fix and a thick border are tooltips rendering across the panel border?  Edit - Yes they are....

It would be good to fix that at the same time. In general having a selector available to modify applet tooltip position from css would also be good to have."
371171094,7325,germanfr,2018-03-07T15:16:13Z,"> With this fix and a thick border are tooltips rendering across the panel border? Edit - Yes they are....

I added a commit to fix popup menus being drawn behind borders.

> As the subject has come up I get other strange behaviour attempting to get a single outside border on all 4 panels. Can others reproduce this? Should I raise a separate issue?

It's not related to this, it's from the C part. If I'm right, that was because it doesn't support different colors for each side and it uses the color from the top border. So when you type `border-bottom: 1px solid red`, the top border color is still transparent and that's why you don't see them, but they are there. You can check that by doing this:

```css
/* Doesn't work */
.panel-top {
    border-bottom: 1px solid red; /* Border color is transparent */
}

/* Works */
.panel-top {
    border-bottom: 1px solid red; 
    border-top-color: yellow; /* Border color is now defined */
}
```"
371935707,7325,brownsr,2018-03-09T20:25:36Z,Is this still Work In Progress ?
371940893,7325,germanfr,2018-03-09T20:48:31Z,"I don't think I need to add anything, but I haven't been able to test it in RTL mode as I said. I think it's correct but I can't confirm."
372152576,7325,germanfr,2018-03-11T21:49:31Z,"I finally managed to test it in RTL and it worked, although I found some more old issues that I solved in my last commit. I think it is ready. Tell me if you want me to squash the commits."
372152967,7325,JosephMcc,2018-03-11T21:54:47Z,It can always be squashed during merge so you probably don't need to worry about it too much.
372162505,7325,germanfr,2018-03-12T00:13:55Z,"I modified the last commit because I fixed the panels alignment in the wrong place. It is so easy to get wrong with this. I must say that it feels so stupid to flip the panels depending on the language, because they are both... panels. It complicates the code a lot and it adds nothing (one could move the applets if they wanted). It made sense in Gnome because applets are kind of fixed, but here...

EDIT: Sorry for closing and reopening, my phone fell from my hands while I was writing this and I pressed the wrong button."
372194723,7325,JosephMcc,2018-03-12T05:05:36Z,"> I must say that it feels so stupid to flip the panels depending on the language, because they are both... panels.

I've always kind of felt that way also but that's how it works in other apps as well. In xed for example the left pane switches to the right for RTL. So I suppose it's consistent the way it is."
372216823,7325,germanfr,2018-03-12T07:34:55Z,"> In xed for example the left pane switches to the right for RTL. So I suppose it's consistent the way it is.

In xed moving the pane to the right makes... having the pane in the right, but flipping the panels makes... nothing. For a user with RTL it's like it isn't flipped. But anyways, this is a bit off topic. I just wanted to know your opinions."
1557253018,11665,mtwebster,2023-05-22T13:47:25Z,"Works well - I noticed one thing, related to another bug unfortunately - 

If you try to resize while the app list isn't at the top - basically when you can reproduce the 'invisible menu items above the menu' issue, dragging the top edge to resize will also start a dnd operation on whatever menu item was under the pointer at the time.

Can we block dnd while `resizingInProgress == true`?

(ps: I revisit the other issue pretty regularly and haven't had any luck fixing it)"
1557583905,11665,fredcw,2023-05-22T17:02:24Z,"@mtwebster 
Here's the sequence of events:

Mouse button is pressed on menu edge.
dnd.js receives signal and grabs pointer (_onButtonPress() )
resizer receives signal, grabs pointer and begins resizing
button is released
resizer receives signal, ends resizing and ungrabs pointer
dnd.js doesn't receive signal and still thinks button is pressed
dnd.js receives motion event and starts dragging

Unfortunately, there's no global variable or function in dnd.js to detect or change the grab status until dragging begins (after the motion event) which only begins after resizing has stopped.

Not sure what the solution is, I'll think about it. maybe add a global function to dnd.js to cancel all grab events?"
1560134942,11665,lestcape,2023-05-23T21:17:37Z,"@fredcw There are not any better solution to a problem that avoid to occurs.

So, this is only a problem because the actor is connected to the signal 'button-press-event' in the `_Draggable` class before is connected to the same signal in the `Applet.PopupResizeHandler` class. The connection to the _`Draggable` class occurs in the constructor of this class and happens when you called ` DND.makeDraggable(this.actor)`.

Then the solution should be change the order of when that both connections happens and then when you receive a 'button-press-event' in your `Applet.PopupResizeHandler` class you can try to do a thing like that to avoid the DND activation: `this.actor._delegate._draggable.inhibit = true` or you can play with `this.actor.reactive` = false instead.

To change the order of the connection, a general possible way is move the `DND.makeDraggable(this.actor)` to outside the constructor to a ""protected"" function (that you will call in the constructor) and override that protected function in your children to do nothing and then after you connected your actor, then call that function using the `super` class definition.

Another way to change the order of the connection is pass another parameter to the constructor of class like can be `make_dragable` and only call `DND.makeDraggable(this.actor)` if the parameter is true (default should be true for compatibility). So, in that way you can control when you want to make an actor draggable. In that way you need to call the constructor with false in the  `make_dragable` then you can defined the actor as resizable and finally you can make the actor draggable, because following that order you ensure the connection order you wanted."
1560247149,11665,fredcw,2023-05-23T23:17:21Z,"@lestcape I though it works in the following way (or something like it): The resizer class connects to the AppletPopupMenu actor while the _dragable class connects to a menu button. Since the menu button is contained within the AppletPopupMenu actor, it will be higher in the z order and will always receive the signal first."
1560267957,11665,lestcape,2023-05-23T23:53:41Z,"I was always thinking that it was the same actor, sorry for not fully understanding what was happening. In that case, i recommend the same anyway: ""There are not any better solution to a problem that avoid to occurs"". Then, you just need to change the type of the event you are capturing in the `Applet.PopupResizeHandler` class by an event with more precedence and stop the event propagation if your condition for enter in a resize state is satisfy. See for more info:

https://www.gnu.org/software/guile-gnome/docs/clutter/html/ClutterActor.html

> Once an actor has been determined to be the source of an event, Clutter will traverse the scene graph from the top-level actor towards the event source, emitting the <""captured-event""> signal on each ancestor until it reaches the source; this phase is also called the capture phase. If the event propagation was not stopped, the graph is walked backwards, from the source actor to the top-level, and the <""event""> signal, along with other event signals if needed, is emitted; this phase is also called the bubble phase. At any point of the signal emission, signal handlers can stop the propagation through the scene graph by returning ‘CLUTTER_EVENT_STOP’; otherwise, they can continue the propagation by returning ‘CLUTTER_EVENT_PROPAGATE’.

I also recommend you to review the condition for enter in a resize state, because you can end disabling fully the draggable property of the menu button actors that way.

Here there are a similar example for a similar situation:
https://github.com/linuxmint/cinnamon/blob/master/js/ui/main.js#L1087-L1092"
1575672892,11665,mtwebster,2023-06-04T18:52:23Z,"@fredcw Seems to work well now with your fix.

The only other thing that was mentioned to me was if we could have something in the corner to indicate that it can be resized, like normal windows used to have (don't you have something like this in your menu applet?)  Not a big deal if we can't.

Thanks"
1575678398,11665,fredcw,2023-06-04T19:11:51Z,"@mtwebster I couldn't think of a way to do this in Cinnamenu so I ended up just putting a tip in the options/config dialog that said: ""Note/tip: Drag on the menu edge to change the menu size"". I could add such a tip in the menu config if you think it's needed.

Now that I know a more about widgets, I suppose it might be possible to place an icon in the corner that would sit above the other widgets and their padding. And it would have to work in all corners depending on where the applet was placed. I suppose it's possible but it would probably take me some time to figure it out.

Edit: And tbh, it's appearance would be highly dependant on the cinnamon theme and it might somewhat spoil the nice neat appearance of the menu. Actually, now I think about it, I suppose you could fit an icon in between the end of the search bar and the menu edge and only have it in top right corner regardless of the menu position on the screen. But then the resizer would have to work on the icon as well so that could get quite complicated."
1578813421,11665,mtwebster,2023-06-06T13:53:45Z,"Ok, I can't think of a simple solution either - I know you could make a particular corner 'different' from the others using the theme, but how to make that difference say 'grab me here', I'm not sure :) 
"
1578825772,11665,mtwebster,2023-06-06T14:00:46Z,"Can you squash this so that there's only two commits:

1) Support resizing in js/ui/applet.js, dnd.js, etc...
2) Add support to the menu applet

Thanks
"
1579042295,11665,fredcw,2023-06-06T16:00:15Z,"@mtwebster No problem, I'll have to create a new PR."
1579162664,11665,fredcw,2023-06-06T17:18:47Z,Created new PR #11688
1579805038,11665,fredcw,2023-06-07T03:10:28Z,">I know you could make a particular corner 'different' from the others using the theme, but how to make that difference say 'grab me here', I'm not sure :)

I didn't think of this option.
With this svg:

![menu_resize](https://github.com/linuxmint/cinnamon/assets/58893963/8370131a-85cd-4c38-afdd-b2cee90b7ec2)

and adding:

```
.menu-background {
  border-image: url(""light-assets/menu/menu_resize.svg"") 14; }

```
to cinnamon.css, you could make the Mint-Y light themes look like this:

![Untitled](https://github.com/linuxmint/cinnamon/assets/58893963/a5690248-bb07-49f4-ad3c-dbfea5ca9f5e)

The background color would be hardcoded into the svg so I assume changing the theme bg color would be more difficult in the future."
1579928402,11665,Secret-chest,2023-06-07T05:28:01Z,I think it's not needed. The settings page can include a note about this.
1580749879,11665,mtwebster,2023-06-07T12:49:58Z,"> I think it's not needed. The settings page can include a note about this.

That's the kind of thing it's better to avoid. The corner mark is commonly understood to mean 'you can resize this', isn't only discoverable *only* if they open the menu settings, and doesn't require someone in every supported language to translate it for us.

@fredcw That looks really nice - could it just be a transparent background or would that end up with no color at all there? Otherwise most themes could probably 'inherit the thing from the default one."
1580773878,11665,fredcw,2023-06-07T13:03:22Z,"@mtwebster I tried the transparent bg, it just turns the whole menu transparent.

Edit: I think any change to the menu bg in a theme is going to override any default image. I think the feature is somewhat discoverable due the the pointer changing, whether that's enough or not, I'm not sure."
1581218140,11665,Secret-chest,2023-06-07T17:08:34Z,I don't like the visual clutter it creates. Windows' 10 Start Menu was resizeable and it had no corner mark.
1581235846,11665,lestcape,2023-06-07T17:25:12Z,"I added the mark in configurable menu using a floating actor, but it's also possible duplicate the whole menu actor, and set in the top one  actor the transparent background and in the bottom actor the current one with a visible background. In that way people can change the theme without break the mark and if the color of the mark don't match with the theme they can override the svg with one that match."
1581554605,11665,JosephMcc,2023-06-07T21:49:22Z,"Keep in mind that if you do a visual indicator like that, you might want to move it based on where the panel is located. Putting it in the upper right is going to seem a bit weird if your menu is in a right side vertical panel. You would also need the placement to account for themes that can use quite large border rounding. So that doesn't end up weird cut off or floating partially out in space."
8360061,1086,autarkper,2012-09-07T09:07:19Z,"@Cobinja: Could you please have a look at this?
"
8360977,1086,Cobinja,2012-09-07T09:53:10Z,"@autarkper: Looks good to me.
"
8361783,1086,autarkper,2012-09-07T10:37:45Z,"@mtwebster: Do your scalable icons still work after applying this patch?
"
8362707,1086,mtwebster,2012-09-07T11:29:01Z,"I'll test this evening
"
8386533,1086,AlbertJP,2012-09-08T10:58:06Z,"I still can't get Cinnamon to run with this branch. I'm getting Error: No JS module 'flashspot' found in search path @ js/ui/cinnamonDBus.js:8.
"
8387016,1086,autarkper,2012-09-08T12:17:04Z,"@AlbertJP: Thanks for bravely trying! That's a weird error though, because diffing between master and my branch shows nothing about flashspot. Are you sure your js/Makefile.am has a line ""ui/flashspot.js     \""?
"
8387138,1086,AlbertJP,2012-09-08T12:33:34Z,"@autarkper commit 1ffcdae7bc0fb05478ddd22d345bbd410643e21c fixes it.
"
8387919,1086,autarkper,2012-09-08T14:10:51Z,"@AlbertJP: That commit is already on my branch, as far as I can see. Strange...
"
8388058,1086,AlbertJP,2012-09-08T14:26:55Z,"Yes and it's now working. Maybe running autogen.sh again has fixed it.
"
8388071,1086,mtwebster,2012-09-08T14:28:47Z,"I've had the same problem - I had to run autogen once to regenerate the .in files, for some reason dpkg-buildpackage wasn't doing it.
"
8388134,1086,AlbertJP,2012-09-08T14:36:33Z,"Actually, what I have done is trying dpkg-buildpackage on a few other branches. After doing that it seemed to have run ./autogen.sh as it was fixed on autarkper's branch as well.
"
8391845,1086,autarkper,2012-09-08T17:24:23Z,"What do you say, could this make it to 1.6 after all? I know of at least one user who would be happy. It's a bug fix, not a new feature.
"
8394187,1086,mtwebster,2012-09-08T18:17:51Z,"I tried it yesterday, appeared to work fine, but I wasn't entirely sure what fixes I was looking for with regards to expo and scale mode.  Nothing seemed broken however.
"
8394428,1086,autarkper,2012-09-08T18:24:35Z,"It's mainly got to do with panel auto-hide: if auto-hide is on and you enter and exit Expo or Scale, there are grey areas where the panels would be. It also makes the desktop adapt after new panel sizes have been set; this does not currently work well with two panels or a single top panel (if my memory serves correctly - I don't have Cinnamon running here). One could argue that configurable panels is not fully implemented until these issues have been fixed.
"
8402036,1086,AlbertJP,2012-09-09T09:22:41Z,"Changing screen resolutions is not yet fixed.

When changing the resolution, the panel becomes unresponsive until I focus another window (with Alt-Tab for example) or open Expo. And the grey empty panel still appears - because it is unresponsive, it stays empty until I open a program or Expo, and then put my mouse on the panel. By the way, the unresponsiveness of the panel is also there if auto-hide is not on.

Expo however, is working fine now.
"
8402917,1086,autarkper,2012-09-09T11:51:30Z,"Thanks everyone who helped me pull this pull request through!
"
8405010,1086,autarkper,2012-09-09T16:12:46Z,"@AlbertJP: Re changing screen resolution, could you open a separate issue on that, with steps to reproduce?
"
6864845,892,dalcde,2012-07-10T01:45:40Z,"You should allow users to disable it. Sent you a pull request!

P.S. Shouldn't #827 be closed?
"
6868797,892,autarkper,2012-07-10T07:31:10Z,"@dalcde: Thanks!

I'm not sure, though, why somebody would want to opt out of window outlining, but I understand that not everybody wants to have window preview enabled. I don't think anybody wants to have too many fine-grained options, so maybe the option should be whether to have window preview or not.
"
6970182,892,rjanja,2012-07-13T17:45:36Z,"I like the idea behind this but when windows are already open for some reason it's shrinking them for the preview, while the actual window still shows behind it:
  http://i.imgur.com/NwllN.png
(I can tell from your screenshot I am missing some theme CSS for the window tinting.)
"
6970273,892,rjanja,2012-07-13T17:50:20Z,"Sorry, I updated my theme with the missing rule and it looks great. Ignore previous comment. Nice feature!
"
6970511,892,autarkper,2012-07-13T17:59:28Z,"@rjanja: Thanks for trying it out!

The shrinking effect is not intended, though. I don't know why the window clone turns out slightly smaller than the source window, when I size it to have exactly the same dimensions. Is there some padding involved?
"
6978203,892,rjanja,2012-07-13T23:51:06Z,"@autarkper It seems to get re-sized because the texture is actually larger than the size of `window.get_outer_rect()`. In this case the texture includes the invisible borders so to accommodate, if you use `window.get_input_rect()` instead, it will use the input size (slightly larger to include area for cursor to re-size, etc) and result in no resizing of the texture.

The downside here is there doesn't seem to be an easy way to get rid of the invisible border. If you remove the CSS background and add a border the invisible border is pretty easy to spot. Border outlines with no shading would look very sexy if not for the invisible space in between the border and window that we seem not to be able to control.
"
6981143,892,autarkper,2012-07-14T08:28:58Z,"@rjanja: Thanks for your insightful comments!

I have pushed a new commit that solves the shrinking business. I'm still struggling with the exact positioning though; the code uses a couple of magic numbers that seem to take care of the invisible borders, but that doesn't feel like a robust solution.
"
6981220,892,dalcde,2012-07-14T08:42:24Z,"Have you tried to change to different themes (especially Window theme) to make sure the ""magic numbers"" are always right?
"
6981439,892,autarkper,2012-07-14T09:17:04Z,"It looks like different themes have different border widths, so the magic-number hack is obviously not reliable. I think the main issue that neither the input rect nor the outer rect is the rect I'm looking for.

I'll push a new version with the magic numbers set to 0.
"
6985929,892,autarkper,2012-07-14T19:36:25Z,"I have pushed a solution that works fine with all window themes, as far as I can test, without any magic numbers.

Screen shot: http://www.autark.se/dump/alt-tab-with-clone-20120715.jpg
"
6995377,892,mtwebster,2012-07-15T21:53:06Z,"Just tried out - very nice.  My only gripe is that the previews lack the window style of the actual windows - i.e. with the default theme the window borders are rounded, and the previews, 'clones', are squared off, so it ruins the illusion somewhat - not enough to turn me off of this by any means, just a nit - I don't know enough about the wm to know if it would be possible to fully emulate the theming going on to the window borders.
"
6996806,892,rjanja,2012-07-16T01:15:35Z,"@autarkper: Well done sir! Looks great!

@mtwebster: I'm sending autarkper a pull request to add in support for border-radius. Here's an [example of it](http://i.imgur.com/8byvA.jpg) working locally (I prefer a more subtle hinting myself). I couldn't find a way to draw the arcs counter-clockwise (arc() here seems to only accept 5 parameters), so there are a few extra lines that simply reposition the cursor before the arcs are drawn. One thing to note is that there's no background clipping, so if you set a border-radius of 50px or so, you'll see the border and the window's content beyond that border, though it's not a problem at all with a reasonably-sized border radius.

My slightly altered Ambiance Mint theme CSS:

``` css
.switcher-outlinebox {
   background-color: rgba(50, 50, 50, 0.9);
   border-color: #676;
   border: 3px;
   border-radius: 4px;
}
```
"
6999706,892,autarkper,2012-07-16T07:09:05Z,"@rjanja: Thanks a lot, it looks great!

I have set a border-radius of 4px in the default stylesheet, which makes a small but visible difference. Different window themes have different corners, though, so without digging into the current window theme we may have to do with a compromise.

It seems that most themes actually only round the top corners, maybe I should do the same?

Screen shot: http://www.autark.se/dump/alt-tab-with-clone-20120716.jpg
"
7011627,892,autarkper,2012-07-16T16:44:50Z,"I was able to cut down on a lot of code by using styles to draw the borders.
"
7024848,892,rjanja,2012-07-17T01:59:54Z,"@autarkper: Just pulled in your latest and it's working great, and more efficiently without all that canvas drawing code. I think this is ready for prime time now. Nice work!
"
7027836,892,autarkper,2012-07-17T06:39:17Z,"@rjanja: Thanks! I'm sorry that your arcs had to go, though.
"
7035339,892,autarkper,2012-07-17T13:39:47Z,"It has landed on master! Without borders and no red background in the default theme, but I can live with that.
"
561718855,8988,clefebvre,2019-12-04T16:20:18Z,"The CI issue comes from LMDE not having the timedate lib required by cs_calendar in 4.4. It's not related to this PR indeed.

New msgids are introduced here so we'll need to wait for 4.6 to merge this. Marking it as Next."
561736676,8988,claudiux,2019-12-04T17:00:02Z,@clefebvre Thank you.
572748036,8988,mtwebster,2020-01-09T20:47:45Z,"Hi, can you squash this down to one commit (or if you're ok with it, I can do it as I merge it)

Thanks"
572769766,8988,claudiux,2020-01-09T21:42:46Z,"@mtwebster Hi Michael, that's done!"
573131143,8988,mtwebster,2020-01-10T17:32:51Z,"Ok just a couple minor things:

- If you try to eject/stop/remove, and the drive is busy, you get an error.  Instead of e.toString() this should be e.message [(see here)](https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError) - this will give you the error message (translated), but without the Gio error enum.  These errors from `*_with_operation_finish()` will always be a GError.  I'm not sure if anything else within the try/catch block would throw a js error, and whether we should try and distinguish between the 2.  Maybe try to handle it like `try {e.message} catch {e.toString()}`
- I don't think ejectFinish and stopFinish msg2 needs to have the device id - the name in msg1 is plenty.  This is how nemo does it too.

nemo: 
![nemo](https://user-images.githubusercontent.com/262776/72173106-d20de300-33a4-11ea-804f-79c7a8741084.png)

placesManager:
![placesManager](https://user-images.githubusercontent.com/262776/72173115-d803c400-33a4-11ea-88ce-d1ab99d4a4fd.png)

I'm ok with the extra name in parentheses in msg1.

It would be nicer if we had a persistent notification as an eject operation is waiting (like nemo) but this is better than having nothing and losing data - as we talked about before, the other method would be very tedious.  If we really wanted that someday, I'd probably take Nemo's code and make it accessible anywhere (like over dbus or as a command-line script that an applet could execute).

Otherwise I think it's fine - thanks

"
573242280,8988,claudiux,2020-01-10T23:14:42Z,"@mtwebster,
I replaced all `e.toString()` by `e.message`.

I tried to reduce the instructions present in the try-catch, but it is still perfectible (especially in `_removeFinish()`).

I think displaying the device id is useful. It is for me when, for example, I make (for my students) multiple copies of the Cinnamon installation iso on identical USB keys. This is one of the reasons which led me to modify `placesManager.js`."
573343727,8988,claudiux,2020-01-11T18:46:28Z,@mtwebster Is this version suitable?
573715289,8988,mtwebster,2020-01-13T15:21:00Z,"Hi, I put a couple of notes in the diff, but looks good overall.  I have an idea about handling 'busy' errors but I have to think about it a bit if it's worth it or not.  Go ahead and squash if you want as well.  Thanks"
574229564,8988,claudiux,2020-01-14T15:29:36Z,"@mtwebster I had disabled the code which never seems to be used. (I put it into comments, to be able to easily reactivate it if issues are reported.)
Also, I reduced all ""try {...}"" contents to only one instruction."
575056683,8988,clefebvre,2020-01-16T09:14:27Z,"
![Codacy](https://app.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Complexity increasing per file
==============================
- js/ui/placesManager.js  1
         

Clones added
============
- js/ui/placesManager.js  5
         
```


See the complete overview on [Codacy](https://app.codacy.com/manual/cinnamon/Cinnamon/pullRequest?prid=4592501&bid=15419825)
        "
575059500,8988,claudiux,2020-01-16T09:21:22Z,@mtwebster I squashed my commits. Please tell me if you want I remove certain comments.
578553211,8988,gmk57,2020-01-26T23:13:20Z,"Oh guys, thank you so much for your efforts!

My external drive takes up to 50 seconds to flush cache after large writes, so I had to resort to command line unmounting to be sure everything is complete.

Now the latest placesManager.js works like a charm, it even retries if drive is in use!

I'm personally very glad you didn't clone Nemo logic because that one doesn't work on my system: if the drive is busy, message ""Unmounting (disk name) Disconnecting from filesystem"" gets stuck forever, and otherwise there is no notification at all.

Do you have any idea when this patch will be released in Cinnamon? Is it safe to use new placesManager.js until then, or it may break something (e.g. during Cinnamon update)?

One more question: maybe you know if ejecting process do ensure that USB-HDD hardware cache is flushed too? I'm a bit worried by https://unix.stackexchange.com/q/495670 and can't dig the source code deep enough to find the answer myself."
581052102,8988,claudiux,2020-02-01T17:37:40Z,"@gmk57 Thank you, too. I'm using this version with Cinnamon 4.4.8, without any problem. I don't know how Gio works about cache flushing."
938431279,10377,Fantu,2021-10-08T08:02:14Z,"libgraphene-1.0-dev where is needed that I not found from a fast search?
gsettings-desktop-schemas-dev should not needed in build here but only gsettings-desktop-schemas already present in cinnamon dep.
Can you point to the code where there are needed please?"
938441765,10377,kelebek333,2021-10-08T08:17:28Z,"> libgraphene-1.0-dev where is needed that I not found from a fast search?

```
../meson.build:24:0: ERROR: Could not generate cargs for muffin-clutter-0:
Package graphene-gobject-1.0 was not found in the pkg-config search path.
Perhaps you should add the directory containing `graphene-gobject-1.0.pc'
to the PKG_CONFIG_PATH environment variable
Package 'graphene-gobject-1.0', required by 'muffin-cogl-0', not found
```

> gsettings-desktop-schemas already present in cinnamon dep.

This is not build-dep.

```
meson.build:40:0: ERROR: Could not generate cargs for libmuffin-0:
Package gsettings-desktop-schemas was not found in the pkg-config search path.
Perhaps you should add the directory containing `gsettings-desktop-schemas.pc'
to the PKG_CONFIG_PATH environment variable
Package 'gsettings-desktop-schemas', required by 'libmuffin-0', not found
```

```
pkg-config error with 'libmuffin-0': Could not generate cargs for libmuffin-0:
Package gsettings-desktop-schemas was not found in the pkg-config search path.
Perhaps you should add the directory containing `gsettings-desktop-schemas.pc'
to the PKG_CONFIG_PATH environment variable
Package 'gsettings-desktop-schemas', required by 'libmuffin-0', not found
```"
938446135,10377,Fantu,2021-10-08T08:24:15Z,"sry I don't saw that is about muffin rebase branch, in that I saw something about graphene in https://github.com/linuxmint/cinnamon/commit/618408a8bb4cc17cad7716e0eb219a5c81ff7c19"
938455511,10377,Fantu,2021-10-08T08:38:20Z,"since you are ""fixing"" debian/control of muffin-5.2-test in this PR can you please also increase all muffin pkgs version to >=5.2 in build-deps and deps to avoid try to build/install with older muffin not compatible?"
938567209,10377,Fantu,2021-10-08T11:30:07Z,"after better check ""missed"" build-deps is caused by https://github.com/linuxmint/muffin/commit/e3b579ea47c8fb34c48a036dd1458b7be284a9cb merge of -dev packages without add -dev deps, in any case -dev packages should be separated to avoid install of many packages not needed for major of users"
938634312,10377,kelebek333,2021-10-08T13:14:57Z,"These are only depends of package building, are not depends of packages. Following files provides by dev packages.

> Perhaps you should add the directory containing **graphene-gobject-1.0.pc**

> Perhaps you should add the directory containing **gsettings-desktop-schemas.pc**

```
dpkg -S graphene-gobject-1.0.pc
libgraphene-1.0-dev:amd64: /usr/lib/x86_64-linux-gnu/pkgconfig/graphene-gobject-1.0.pc
```

```
dpkg -S gsettings-desktop-schemas.pc
gsettings-desktop-schemas-dev:amd64: /usr/share/pkgconfig/gsettings-desktop-schemas.pc

```
"
938657940,10377,Fantu,2021-10-08T13:48:08Z,@kelebek333 try to build with https://github.com/Fantu/muffin/tree/fix-5.2-test and https://github.com/Fantu/Cinnamon/tree/fix-muffin-5.2-test
938731920,10377,leigh123linux,2021-10-08T15:28:26Z,Muffin-5.2 requires gsettings-desktop-schemas and graphene-gobject-1.0 to compile not cinnamon
938748246,10377,kelebek333,2021-10-08T15:52:22Z,"@leigh123linux , did you try build cinnamon without graphene-gobject-1.0 and gsettings-desktop-schemas? You can look following build logs.

Without libgraphene-1.0-dev and gsettings-desktop-schemas-dev

https://launchpadlibrarian.net/562595276/buildlog_ubuntu-focal-amd64.cinnamon_5.0.5+uma+5.2+rebase+testing_BUILDING.txt.gz

Without  gsettings-desktop-schemas-dev

https://launchpadlibrarian.net/562627992/buildlog_ubuntu-focal-amd64.cinnamon_5.0.5+uma+5.2+rebase+testing1_BUILDING.txt.gz
"
938759003,10377,Fantu,2021-10-08T16:07:53Z,"@kelebek333 the real issue is in muffin packages, try to build with my commits (see previous post)
another thing, I see https://launchpad.net/~kelebek333/+archive/ubuntu/muffin-3.36rebase-test seems you rebuild only new muffin and cinnamon on focal but is needed build also all other components updated because focal have older version"
938807339,10377,leigh123linux,2021-10-08T16:34:57Z,"> @leigh123linux , did you try build cinnamon without graphene-gobject-1.0 and gsettings-desktop-schemas? You can look following build logs.
> 

muffin-dev declares them in it's pkgconfig files so it should require them, see

```
$ rpm -qp --requires '/home/leigh/Desktop/test/muffin-devel-5.2-1.fc35.x86_64.rpm' 
/usr/bin/pkg-config
libmuffin.so.0()(64bit)
muffin(x86-64) = 5.2-1.fc35
pkgconfig(atk) >= 2.5.3
pkgconfig(cairo) >= 1.10.0
pkgconfig(cairo-gobject) >= 1.10.0
pkgconfig(egl)
pkgconfig(gio-unix-2.0) >= 2.61.1
pkgconfig(gl)
pkgconfig(glesv2)
pkgconfig(glib-2.0) >= 2.61.1
pkgconfig(gobject-2.0) >= 2.61.1
pkgconfig(graphene-gobject-1.0) >= 1.9.3
pkgconfig(gsettings-desktop-schemas) >= 3.33.0
pkgconfig(gtk+-3.0) >= 3.19.8
pkgconfig(json-glib-1.0) >= 0.12.0
pkgconfig(muffin-clutter-6)
pkgconfig(muffin-cogl-6)
pkgconfig(pango) >= 1.2.0
pkgconfig(x11)
pkgconfig(xfixes) >= 3
pkgconfig(xi) >= 1.7.4
```

> Without libgraphene-1.0-dev and gsettings-desktop-schemas-dev
> 
> https://launchpadlibrarian.net/562595276/buildlog_ubuntu-focal-amd64.cinnamon_5.0.5+uma+5.2+rebase+testing_BUILDING.txt.gz
> 
> Without gsettings-desktop-schemas-dev
> 
> https://launchpadlibrarian.net/562627992/buildlog_ubuntu-focal-amd64.cinnamon_5.0.5+uma+5.2+rebase+testing1_BUILDING.txt.gz

"
938852436,10377,kelebek333,2021-10-08T16:55:36Z,"@Fantu , If the libmuffin-dev's pull request will revert back, you are right, but else not.

For current, development packages should be added to Cinnamon. 

> I see https://launchpad.net/~kelebek333/+archive/ubuntu/muffin-3.36rebase-test seems you rebuild only new muffin and cinnamon on focal but is needed build also all other components updated because focal have older version

Linux Mint Daily Builds PPA is extra dependencies for my PPA. The PPA is not uses focal packages for Cinnamon.

> muffin-dev declares them in it's pkgconfig files so it should require them, see

@leigh123linux , 

Currently, there is no libmuffin0-dev package for Debian control file on linuxmint:muffin-5.2-test branch. It migrated to libmuffin0. https://github.com/linuxmint/muffin/pull/601/commits/e3b579ea47c8fb34c48a036dd1458b7be284a9cb If the commit will revert back, so this PR is not required. 

> apt depends libmuffin0
> libmuffin0
>   Depends: muffin-common
>   Depends: libatk1.0-0
>   Depends: libc6
>   Depends: libcairo-gobject2
>   Depends: libcairo2
>   Depends: libcanberra-gtk3-0
>   Depends: libcanberra0
>   Depends: libegl1
>   Depends: libfontconfig1
>   Depends: libgdk-pixbuf2.0-0
>   Depends: libgirepository-1.0-1
>   Depends: libgl1
>   Depends: libglib2.0-0
>   Depends: libgtk-3-0
>   Depends: libice6
>   Depends: libjson-glib-1.0-0
>   Depends: libpango-1.0-0
>   Depends: libpangocairo-1.0-0
>   Depends: libpangoft2-1.0-0
>   Depends: libsm6
>   Depends: libstartup-notification0
>   Depends: libx11-6
>   Depends: libx11-xcb1
>   Depends: libxcb-res0
>   Depends: libxcomposite1
>   Depends: libxcursor1
>   Depends: libxdamage1
>   Depends: libxext6
>   Depends: libxfixes3
>   Depends: libxi6
>   Depends: libxinerama1
>   Depends: libxrandr2
>   Depends: libxrender1
>   Depends: libxtst6
>   Replaces: libmuffin-dev"
938878144,10377,Fantu,2021-10-08T17:07:30Z,"@kelebek333 about ppa sry I didn't saw dep on other ppa, now I'll try to build on another ppa with my commits using the same ppa dep"
938965146,10377,leigh123linux,2021-10-08T17:47:53Z," 
> Currently, there is no libmuffin0-dev package for Debian control file on linuxmint:muffin-5.2-test branch. It migrated to libmuffin0. [linuxmint/muffin@e3b579e](https://github.com/linuxmint/muffin/commit/e3b579ea47c8fb34c48a036dd1458b7be284a9cb) If the commit will revert back, so this PR is not required.

@clefebvre  Is that commit just for testing?


"
939009737,10377,Fantu,2021-10-08T18:08:31Z,"the bad thing packaging is also in muffin 5.0 probably clem simply did same of older version thinking to avoid possible regression but without calculate possible unexpected cases caused by this, -dev package separate and correctly don't do regression (only need a small change in cinnamon debian/control), we already use in debian packages, I already did the commits if clem want cherry-pick them (already posted in muffin PR post) and I have already tested: https://launchpad.net/~fantonifabio/+archive/ubuntu/muffin-rebase/
@kelebek333 in the ppa above build correctly fixing muffin packages without add other build-deps in cinnamon"
939284277,10377,leigh123linux,2021-10-09T11:51:21Z,fixed https://github.com/linuxmint/muffin/commit/5fdd79045683df85a87d19edd4a41eb899c5b974
939285508,10377,Fantu,2021-10-09T12:00:19Z,"for now the commit is partial (debian/libmuffin-dev.install is missed) and is missed the commit in cinnamon to update build-deps
I rebased my branchs including latest clem and mtwebster fixes and added a missed break/replace in my commit to make working upgrade (also from any other 5.2 testing build installed because I didn't put the version for now) if someone want do a fast tests
https://github.com/Fantu/muffin/commits/fix-5.2-test
https://github.com/Fantu/Cinnamon/commits/fix-muffin-5.2-test
I tried to update my ppa (https://launchpad.net/~fantonifabio/+archive/ubuntu/muffin-rebase/) but cinnamon strange fails for muffin not found (even if is in same repository), yesteday also failed first time because muffin built package was published after long time but today seems too many time. Launchpad has it gotten worse lately? (I used it rarely lately)
edit: I created mint testing install, added ""Linux Mint Daily Builds"" ppa and my ppa but don't show my packages, after a check with apt-cache policy I found that is because ""Linux Mint Daily Builds"" have higher pinning
workaround, for example for install from my ppa:
```
sudo nano /etc/apt/preferences.d/fantu.pref

Package: *
Pin: release o=LP-PPA-fantonifabio-muffin-rebase
Pin-Priority: 700
```

edit2: build issue on launchpad was my stupid mistake, break/replace (of package splitted with file moved from another) when there is a dep on same package must have version (and must be minor that actual version of the package) or will be excluded making it uninstallable"
9898637,1293,autarkper,2012-10-30T09:05:32Z,"I have added this to my master branch.
"
10350359,1293,rayza,2012-11-14T00:30:53Z,"Added the option to place the menu icon in the title bar as well. See commit comment for more info.
"
10356689,1293,autarkper,2012-11-14T06:39:34Z,"Great addition! Didn't know that was possible.
"
10362652,1293,AlbertJP,2012-11-14T11:12:13Z,"@rayza You do not have to retain the text ""Update file..."". It's often more clear to us if you remove this text and replace it by your own title. (No need to re-do the existing commits, however).
"
11156890,1293,autarkper,2012-12-08T09:36:29Z,"This one needs to be rebased on current master.
"
11162008,1293,rayza,2012-12-08T18:47:34Z,"Should I close this request and start a new one therefor?
"
11162063,1293,autarkper,2012-12-08T18:53:09Z,"@rayza : This is quite common when things have changed on the master branch, so a new branch is not necessary. Just force-push to the same branch after rebasing (""git push origin +patch-1"") and all will be fine.

Update: whoops, I initially gave the instructions for deleting the branch.
"
11425097,1293,rayza,2012-12-17T00:02:52Z,"I tried. It didn't let me though. Had to completely revamp it.
"
11791977,1293,e70838,2013-01-01T19:17:58Z,"Hello, I have installed linux mint yesterday (after 4 years of ubuntu). This was very important to disable alt+click because I needs photoshop (via wine). I have modified /usr/lib/cinnamon-settings/cinnamon-settings.py (sudo gedit) using the description at https://github.com/linuxmint/Cinnamon/pull/1293/files. After that, menu ""Preferences"", ""all parameters"", ""windows"", and the new option is available.

It works perfectly. I hope my post will help newbies apply the correction. Thank you very very much for this correction.
"
13113151,1293,goteeguy,2013-02-05T03:35:47Z,"Just tried it... works great.  Just what I was looking for.  Thanks so much!
"
13144883,1293,dev344,2013-02-05T18:51:11Z,"Yep. I just changed my cinnamon-settings.py file and it works!! Thanks to e70838 for giving the confidence.
Menu-> Preferences -> Cinnamon Settings -> Windows will lead you to the option.

@clefebvre, @rayza, etc: Will I have any problem later on when I update mint?
"
13159156,1293,Perturbatio,2013-02-05T23:45:57Z,"I'd like to say a thank you for this, it's been bugging me for ages, photoshop in wine is not easy to use when you can't change things like this.

I would suggest you backup the original before changing and also make a copy of the changed version somewhere so you can re-apply easily if updates break it.
"
13160808,1293,goteeguy,2013-02-06T00:35:23Z,"FYI:  I have assigned the Windows key as the mouse modifier.  Alter I hold the Windows key & Left Click to drag a window, the default action of the Windows key gets a bit wonky.  It does not always show the Menu, and <Alt><Tab> does not always show the window list.  Not big issues for me, but thought I'd mention it.  Cheers!
"
13179365,1293,AlbertJP,2013-02-06T12:17:59Z,"@dev344 Pull request #1514 is already merged so future Cinnamon versions will include that fix. (It's indeed true that manual changes will be undone when you install a newer Cinnamon).
"
13323651,1293,rayza,2013-02-09T01:25:07Z,"I'm glad you find it useful guys!
"
14011796,1293,AlienTux,2013-02-24T17:15:06Z,"Thank you very much rayza!!! I've been looking for this for ages!!!
"
13350441,1701,Lusito,2013-02-10T14:23:49Z,"I don't like the idea of a window getting force activated.
What If I'm currently writing my password in a terminal, my messenger pops up and I accidentally send it to the person messaging me?
Everyone can read the notification, no need to activate the window automatically.
"
13350857,1701,autarkper,2013-02-10T14:54:53Z,"You will have been warned by the notification popping up some time before the automatic activation. Anyway, the automatic activation will of course be optional. I just don't want to mess with the settings at this stage, because it makes it a lot harder for other people to try out. You did try it out of course?
"
13355605,1701,Lusito,2013-02-10T17:11:13Z,"I have not tried it yet, as I don't really have any attention seeking apps running I think. xchat notifies via message tray icon, thunderbird via notifications.
I just know that skype did this instantly on a new message and I hated it.
If you can recommend a way to simulate the attention status I'd be happy to try.

10 seconds, even if warned is not good, say you have 2 monitors and concentrate only on your terminal, while the notification is on the other monitor. it is easy to miss when concentrating on something else.
"
13362413,1701,autarkper,2013-02-10T22:10:09Z,"You can test it by running tests/interactive/urgentwindow.py - it sets the ""urgent"" flag on and off. For testing the attention-seeking case, you can activate the logout dialog by pressing Ctrl+Alt+Del in a terminal window - you must trick the logout dialog to appear without grabbing input focus.

About the automatic activation, I get your point although I personally prefer not to miss important notifications.
"
13370171,1701,netjerykhet,2013-02-11T07:00:54Z,"> If a window is marked urgent I automatically set focus to the window after a grace period of about 10 seconds.

Good grief. Talk about pulling the rug out from under the user.
"
13370897,1701,autarkper,2013-02-11T07:47:30Z,"@netjerykhet: Sorry if I've been unclear about the fact that this is going to be an optional feature.
"
13450546,1701,mtwebster,2013-02-12T19:21:25Z,"I'm not sure how much of this is pride speaking and how much is sound reasoning :), but I think the window list is the more appropriate avenue for windows to clamor for attention.  Notifications just don't seem right to me - and many apps already send a notification as well as a window signal, so would be generating two notifications instead of just the one (like xchat, some chat programs, though I realize you can turn them off in most cases).

I would propose instead an applet maybe, that listens for demands-attention and marked-urgent signals, for those that maybe choose not to use a window list manager, or implementing both this solution as well as the window-list one and maybe letting the user decide (I know more options, more confusion)

Just my 2 cents
"
13457454,1701,autarkper,2013-02-12T20:55:25Z,"I feel we are trying to work around basic shortcomings in the window manager. IMO, the window manager should at least draw attention to alerting and urgent windows by pulsating the title bar (if the window is behind other windows or minimized it should be brought to the front without giving it input focus). Then we only have to solve the problem with alerting window that are on another workspace. For that, I think both the window-list approach and this approach have their merits.

@mtwebster : I thought of making an applet, but my panel is already quite full of applets that most of the time just take up space. But maybe it could be an applet that doesn't have any ""chrome"" at all and just creates notifications, if that's even possible. It sort of goes against the basic idea of applets, though.
"
13463332,1701,Lusito,2013-02-12T22:32:22Z,"How about an extension instead of an applet ? No icon needed for it.

A different idea for highlighting: Create a Preview of the window, just like with alt-tab and make it flash in a configurable corner.
flash as in fade in/out transparency of the preview, possibly vibrate it.
"
13506663,1701,autarkper,2013-02-13T17:39:21Z,"@Lusito: Yeah, maybe an extension. Your idea is intriguing, but isn't that just a more annoying sort of notification?
"
13507415,1701,Lusito,2013-02-13T17:53:31Z,"Well attention seeking windows should be annoying, they need to inform. Best way to do that is to be annoying.
Emphasis on inform. They should not act by taking over the focus.
How annoying they are (flash intervals, preview size, etc.) could be made configurable.
"
13533283,1701,netjerykhet,2013-02-14T05:00:04Z,"> make it flash

Windows should not seek attention, nor should they annoyingly flash, under any circumstances whatsoever, except in the case of imminent earthquake of 6 or more on the Richter scale, volcanic super-eruption or 30' tsunami travelling in your general direction.

I mean, really, is any task that a computer can't immediately undertake worth inducing epileptic fits in users with flashing, blinking annoyances, optional or otherwise?
"
13535445,1701,autarkper,2013-02-14T06:48:15Z,"I have two examples of windows that need attention and to which the user had better respond in time:

1) The logout dialog.
2) The shutdown dialog.

These two dialogs have the annoying habit of not consistently grabbing keyboard focus, and yet they count down to either logout or shutdown of the computer, unless you take action. It was primarily with these two dialogs in mind that I added the hateful automatic-activation feature.
"
13535473,1701,Lusito,2013-02-14T06:50:38Z,"then you are trying to work around an issue that should be solved in these dialogs.
"
13537188,1701,autarkper,2013-02-14T08:13:08Z,"They are not under our control, unless I'm mistaken.
"
14038312,1701,autarkper,2013-02-25T12:16:02Z,"Better close this one off before somebody beats me to it.
"
790605616,9957,lestcape,2021-03-04T13:08:21Z,"Thanks @collinss, because even though I really wanted to do this myself, something inside me was holding me back from doing it. I hope this help to install easily non official spices and with that more third party developers will want to create useful spices for the Cinnamon users from their own software development gits.

Maybe you want to also include a warning message to the users  before install an spice, explaining that install it locally may not be so safe as install it from the spices website or something similar. Today maybe that have not sense (because not one is using this new method), but could be something useful in the future to avoid unnecessary inconvenience... Personally, I still cannot see a real difference in security between the extensions of the website of spices and any other, but there are those who believe deeply that there is this difference. If actually exists that difference, I think it would be useful to make the user notice it or this option could end up disappearing, like how disappeared the freedom that third party developers used to have in Cinnamon some time ago."
811556144,9957,ItzSwirlz,2021-04-01T00:37:14Z,"Thing is you are going to have to trust the end user with this-which shouldn't be a big problem. Users shouldn't be downloading from unsafe sources, so it can be a security issue depending on where the spices are hosted. "
812314644,9957,lestcape,2021-04-02T04:46:08Z,"@ItzSwirlz i disagree with you because, you can not ensure you have security with a simple inspection. So, all source are insecure in one level or another and to me insecure means insecure, the level is a human factor, so should be inconsequential.

Anyway, the focus on my comment was avoid unhappy users claiming things that cannot be resolved from inside the mint repositories."
821077193,9957,clefebvre,2021-04-16T10:22:08Z," > Users shouldn't be downloading from unsafe sources, so it can be a security issue depending on where the spices are hosted.

The computer belongs to the user so that is entirely the user's choice. We should not go against it. Also, I think it's widely known and understood that downloading software outside of the official sources is a risk taken and accepted by the user. So I don't think we should really worry about this.

What we need to worry about is taking responsibility for the sources which are predefined by default. Whether it's a spice or a software application, if it's found by the user on a 3rd party website or repository, it's really none of our business whether it has bugs or even whether is has security issues. When that software comes from preinstalled sources though (cinnamon-spices or our APT repos) then our responsibility is clearly engaged because we give the guarantee of safety to the user and commit for him/her to delegate scrutiny to us. When that spice/software is installed by default, the bar is even higher, it needs to work PERFECTLY.

Now, with all that said, and before I get to the bad news (I'm closing the PR), I'd like to tell @lestcape and other devs that this initiative (as the origin of this PR) was mine. I started this project. I did it for you, and I did it to fulfill a promise I made you the last time we talked about this. I agreed at the time that we should make it easy to install 3rd party spices, and since then I also found out there were bugs and shortcomings associated with just moving files to ~, so these should be fixed as well.

The problem here is integration and UI mostly. We've been working on this for weeks now, about 4 of our devs joined in on the design and we can't still can't manage to get to a point where this looks OK. Some of the devs don't understand why we're spending so much time on this and we're ready to give up on the UI side and switch to something we've already worked on which is the CLI that does this.

`cinnamon-install-spice xlet uuid`

This CLI doesn't just install the spice, it unpacks the translations properly and is compatible with the update system (this is not relevant to 3rd party spices since they have no update source but it's very relevant for spices manually installed as ZIP from the spice website).

We'll close this PR and abandon the UI changes. On the spice website we'll replace the instructions to move files to the home folder advertise the use of this command instead. I recommend 3rd party sources do the same.

Last but not least I am not opposed to a re-implementation of a UI change to accommodate this but it's no longer in our roadmap. If  done again it will need to solve all the problems we bumped into.

I list some of the big issues below:

- exceptions/errors need to be handled and made visible
- a dedicated screen/page should be used to show information about the spice and/or warning messages prior to confirmation
- themes settings are different than other settings, there is no page there to remove manually installed spices, a redesign is needed.
"
821274810,9957,clefebvre,2021-04-16T15:56:23Z,I'm going to add zip auto-decompression and spice type auto-detection to the CLI.
821541151,9957,lestcape,2021-04-16T20:24:51Z,"I really don't get you.... So, the conclusion is there are not support for third party extension here right?

The mechanism to install extensions from spices is download it to a temporal folder and then make a local installation. So, is clear to me that what need a local installation is just only part of the procedure to install extensions from spice, but some how you said is differently? Is simple, is not differently and have not other new different issue to the already needed procedure.

That is why i only can concluded, you simple don't want to support any third party here and i see this is your personal decision as i don't see any other here than you writing strange reasons without any basis for me. It is in the end your decision what so you want to make, but do not try to convince us that there is something other than your personal decision here.

Don't get it wrong, I also make personal decisions, we all do that. In this case, my personal decision is also not to waste time developing code for an environment that, far from supporting others to contribute, blocks them. Good job!!"
821639632,9957,clefebvre,2021-04-16T22:30:45Z,"Wow, indeed, you really don't get me."
821686653,9957,lestcape,2021-04-16T22:53:33Z,"> Wow, indeed, you really don't get me.

No, really not. It is clear to me that the code that currently exists is far from perfect, but it is not clear to me that this should be specially important for install third party, because it's in general a problem for any installation method. That is why I do not understand that you only cancel the installation of third parties and not the installation in general.

For example merging Gtk stuff in [Spice_Harvester](https://github.com/linuxmint/cinnamon/blob/master/files/usr/share/cinnamon/cinnamon-settings/bin/Spices.py#L127) was a wrong decision it should be better a service instead and provide a DBus Server to inform the client (a clutter or Gtk client) about the installation process. For example, you can create or delegate to an applet the responsibility to control exceptions in the server and also, it could work as a replacement to the cinnamon-settings page or better than that, because the settings is not always open when you are installing extension (example CLI) and the applet can be loaded at all times on the desktop connected as a DBus client waiting for an installation to start.

**Edit:** 
Let me clarify, because although it seems obvious it may not be. Putting a button cannot take weeks and also not needed 4 developer. Also fixing everything that may be wrong and are BIG issues has nothing to do with putting a button.
"
821903751,9957,clefebvre,2021-04-17T23:49:22Z,These issues are specific to 3rd party. The CLI (which is dedicated to 3rd party) fixes all of them.
821904714,9957,clefebvre,2021-04-17T23:59:34Z,"> Let me clarify, because although it seems obvious it may not be. Putting a button cannot take weeks and also not needed 4 developer. Also fixing everything that may be wrong and are BIG issues has nothing to do with putting a button.

Anyone can add a button, it takes 5 minutes. Integrating it properly and getting everything sorted takes way longer. If you think you can do better than @collinss then by all means make a PR. If you introduce more issues than you solve then your PR will get closed.

As for me, I'm going to prioritize other things. As I said before, I'm doing this for you. So if you're not happy with it, I'm wasting my time.
"
821941441,9957,lestcape,2021-04-18T06:19:45Z,"> These issues are specific to 3rd party. The CLI (which is dedicated to 3rd party) fixes all of them.

> exceptions/errors need to be handled and made visible

The exception and errors can only occurs when the zip file have a wrong structure, a missing files or other things and can occurs in both scenarios, from spice and local. Anyway, when the creation of the zip file correspond to 3rd party we have a 3rd party bug and you already said: **""it's really none of our business whether it has bugs or even whether is has security issues""**. So, is or is not your business?

> a dedicated screen/page should be used to show information about the spice and/or warning messages prior to confirmation

True, I commented the same: [""Maybe you want to also include a warning message to the users before install an spice""](https://github.com/linuxmint/cinnamon/pull/9957#issuecomment-790605616), but is not need a page to show an info, a message dialog should be enough and is more common to show a message in a message dialog than in a form/page.

> themes settings are different than other settings, there is no page there to remove manually installed spices, a redesign is needed.

Sorry but this is not an specific 3rd party issue at all. Also i was never consider the themes as something to target, but is nice that you also considered it. Anyway this is a pointless for 3rd party here.

> If you think you can do better than @collinss then by all means make a PR. If you introduce more issues than you solve then your PR will get closed.

This is difficult because apparently i don' t recognize what is a bug at same as you. So, i can not ""fixed"" what is not a problem to me. What is not broken not need to be fixed.

> I'm doing this for you. So if you're not happy with it, I'm wasting my time.

I sincerely apologize for bringing you to this point. I also apologize for what I am about to say, but, NO, please don't do anything for me!!! I've never done anything for you either, everything I did was for the users and fully depersonalized. Cinnamon should be also depersonalized. If you think that is correct do it, if it has more or lees priority for you do it with your priority and your rules, but don' t do that for me at all. 

Anyway, what you are doing is not exactly what i think should be useful for 3rd party, instead what @collinss did and you considered wrong was what i considered useful. People are complex and difficult to understand right? Please note in my comment what was that I originally said and paid specially attention when i said **from a GUI source**:

[""What is not so understandable is that in parallel there is no way to install extensions **from a GUI source** other than the official one at a user's decision (for example, a git repository of an external developer).""](https://github.com/linuxmint/cinnamon/issues/8955#issuecomment-559897996)

So, you are working in something that was not what i request. A CLI not resolve the same to me, because i don' t want something to be used by a 3rd party, i want something to be used by NOVICE USERS to install extensions that was made by a 3rd party.

Yes, what i want is something easy to preserved, also if it occurred to you again to restructure everything in Cinnamon. Something that should not be a big deal to be maintained. That is to prevent than your ideas of changes will affect the work of others 3rd party again and with that the users of this extensions they created. But seem to be you see BIG issues in all places related with 3rd party and you really not want to resolve the situation. I think the situation is created precisely by having a vision to exercise control over third-party develop and precisely my point is that give them freedom, because in the end those who suffer the problem are the users who are only going to stay with the features that are offered in an official way by cinnamon, something that is of course limited."
821953293,9957,lestcape,2021-04-18T08:16:56Z,"So, please notice this as a summary of everything I can understand about what you are writing: 

> The 3rd party bugs [**""it's really none of our business""**](https://github.com/linuxmint/cinnamon/pull/9957#issuecomment-821077193), but we cannot merge this pull request because it create issues [**""specific to 3rd party""**](https://github.com/linuxmint/cinnamon/pull/9957#issuecomment-821903751).

It' s seriously, you need to revisited your own position if you want that someone can understand you. I personally don' t get you at all. I can not help in the current situation  for that reason."
821978254,9957,clefebvre,2021-04-18T11:41:26Z,"It's very simple to understand. I explained it already in my first message. We're committed to supporting anything we provide.

We don't provide 3rd party spices, so they don't need to work, they're not ""ours"". The button itself is ours though, it needs to work fully. If the spice fails to install for any reason it needs to show why. If we let people install manually, we need to also let them remove as well. In @collinss's PR the position of the button is not OK, the design is not OK, the lack of being able to remove 3rd party themes is not OK, and the lack of error handling is not OK. You can decide that it's OK to add BETA or ALPHA features in your projects, that's entirely up to you, but it isn't your place to expect that of us. If we're not happy and consider something half baked, then we don't add it. That's our prerogative.

In regards to who the feature is for, I don't actually think or know if there's a need for this feature at the moment. We're certainly not doing it for Cinnamon users, we're doing it for potential 3rd party developers. Cinnamon users already have access to hundreds of spices through the ecosystem and there is no demand for 3rd party support. Even the bugs I talked about (translations and lack of updates) when using ZIP files are not well known to the public. Telling people to use the CLI instead of moving ZIP content to ~ will fix that, but even that isn't a big problem since users have embedded access to spices already and thus do not require the use of ZIP files in the first place. There is no real demand from the community on these aspects.

In regards to who is doing what and who wants what, you're seeing what you want to see and you've no idea what's actually happening. We worked on this as a team and didn't reach a satisfactory outcome, if you think @collinss really wants this and I really don't, you're completely mistaken, this is just a WIP on something we've been trying to design together for weeks and after which we agreed to move to CLI instead. It was not @collinss who wanted this feature at the start, it was me. This isn't a Stephen idea squashed by me, this is an idea started by me, which many in the team worked on: Stephen, myself and Niko primarily but also Simon, Isaac and recently Darryn. You're just seeing a WIP PR which isn't ready and doesn't solve the entire picture. We all agreed it wasn't working, we had no real demand for it, it required a UI redesign and the CLI was a better approach to this. I can understand you're disappointed since you wanted it to be graphical, but don't go imagining things.

What you can do is continue this PR we're abandoning and put a lot of work in getting it complete (with a redesign of the theme section and full error handling). It's a lot of work but if you manage to pull it off (pun intended), then we'll merge it.

What you can do also is understand that the CLI is pretty good at doing this and that the demand for this is extremely niche. There aren't many 3rd party spices out there. It is obviously a chicken and egg situation but the reality is still that the demand for this is extremely small.

Note that the CLI already existed since Cinnamon 3.8 and that since 3.8 it already fixes the bugs (lack of updates and lack of translations) triggered by manually moving spices into ~. What I was suggesting was to make it even simpler. Right now it takes 4 commands to install something:

```
wget https://cinnamon-spices.linuxmint.com/files/applets/weather@mockturtl.zip?time=1618745817
unzip weather@mockturtl.zip
cinnamon-spice-installer applet weather@mockturl
rm weather@mockturtl.zip
```

The idea is to simplify this into one command:

`cinnamon-spice-installer https://cinnamon-spices.linuxmint.com/files/applets/weather@mockturtl.zip?time=1618745817`

But as I said before, we're not doing this for us. If you don't like it, we are wasting our time. A full UI redesign is too costly for such a small demand, and even a little CLI improvement is not worth it if nobody cares about it. I'm not even sure who else is interested in this, so yes, if you aren't, then we've no reason to work on it at all.
"
821981943,9957,lestcape,2021-04-18T12:11:32Z,"Well, what you are saying in your last comment now makes sense and is more clear to me. Thanks for clarify it because to me was not the same of the previous comments.

Please, no, do not work on anything more personally made for me, that far from cheer me up, makes me sad, as my intention is not resolved a personal problem. Mi intention was show up what is to me a problem and I think i already showed it. Non of you need to agree with me in that, so there is not sense in a discussion about it. Maybe I'm the only one that think that way and the users are not losing anything and they are not selecting a different environment with more options for that reason. Thanks to every body involved for the effort anyway."
824821983,9957,lestcape,2021-04-22T13:02:48Z,Just to link to implications: https://www.reddit.com/r/linuxmint/comments/ju4gy7/global_menu_in_linux_mint/gvfsnqy/?utm_source=reddit&utm_medium=web2x&context=3
987161584,9957,Secret-chest,2021-12-06T20:16:35Z,"> Some of the devs don't understand why we're spending so much time on this and we're ready to give up on the UI side and switch to something we've already worked on which is the CLI that does this.\n\ncinnamon-install-spice xlet uuid\n\nThis CLI doesn't just install the spice, it unpacks the translations properly and is compatible with the update system (this is not relevant to 3rd party spices since they have no update source but it's very relevant for spices manually installed as ZIP from the spice website).

Oh, nice! I found an emoji picker and wanted to install it"
987123014,10499,Secret-chest,2021-12-06T19:43:37Z,"I don't think this would work. Elder accounts need to be configured separately, vision problems are diverse. We could add an assistant in Accesibility. Same for child accounts."
987191355,10499,clefebvre,2021-12-06T20:42:27Z,"I think that's the distribution's job, not the DE's. Also I'd rather see this in the welcome screen."
987888103,10499,KAMI911,2021-12-07T12:38:54Z,"@Secret-chest  and what about content filtering? I mainly created this not just for custom settings but for support easy filter presets that built into the OS toolset. Adding a current (and updatable) blocking rules to iptables/nftable with blocking a specific group like:
iptables -A OUTPUT -m set --match-set content-block-net src -m owner --gid-owner child -j LOG --log-prefix 'CONTENT_FILTER 
iptables -A OUTPUT -m set --match-set content-block-net src -m owner --gid-owner child -j DROP
may make easier the life for a family Linux distribution. We could load the blacklist data to iptables' ipset for the greatest performance.

What do you think about?"
987888692,10499,KAMI911,2021-12-07T12:39:43Z,"@clefebvre, How do you like to integrate into Welcome screen?"
987895179,10499,Secret-chest,2021-12-07T12:48:46Z,just don't add fun themes. Also we could improve mintnanny to block domains only for specific users.
987896675,10499,Secret-chest,2021-12-07T12:50:42Z,"> Also I'd rather see this in the welcome screen.

I don't understand. You create user accounts in that application, not in the welcome screen. You could however link to it in the welcome screen with something like: ""To create more user accounts, [click here]"""
991517378,10499,KAMI911,2021-12-11T07:47:09Z,"Probably we can use this work as blacklist:
https://dsi.ut-capitole.fr/blacklists/index_en.php
List is here:
https://dsi.ut-capitole.fr/blacklists/download/

It is updated frequently.
I think it is good idea to add features to MintNanny. Probably we could add functionality to MintNanny to handle iptables/nftables or use firewalld. It seems ufw not handling group based rules at all.
New features:
* Using kernel based blocking firewall (ipsets) instead of hosts file based
* Create multiple ipsets based on blacklist categories
* Add/remove ipsets members in one group based user preferences
* Add/remove/update ipsets from blacklist (automatically?, daily?, manually?)
* Assign ipsets to groups (child, elder)

What do you think about?"
1001024829,10499,KAMI911,2021-12-25T14:28:24Z,Additionally we could have  a time based internet usage settings too. 
1001917598,10499,Secret-chest,2021-12-28T07:39:53Z,"> Additionally we could have  a time based internet usage settings too. 

How would this work?"
1002431754,10499,KAMI911,2021-12-29T07:20:11Z,"Probably we can use iptables capabilities like:

iptables RULE -m time --timestart TIME --timestop TIME --days DAYS -j ACTION

"
1024986153,10499,KAMI911,2022-01-29T21:05:31Z,It would be nice to have configure blacklist / autoupdate from Internet like mintnanny. Do you have tools for UI prototype or should I use Glade? Do you have idea how the app should look like? 
1037908643,10499,KAMI911,2022-02-13T08:05:55Z,I started to work on backend functions. Can anyone who experienced with UI help? 
1037923704,10499,KAMI911,2022-02-13T08:30:23Z,"We can query all the „A” type DNS records via:
`dig -f type.txt +short`
Based on downloaded list we can cache DNS queries in files and add as list of IPs in ipsets.
Using pydig python modules we can use it easily.
Additional modules: IPy, ipsetpy, geoipsets, pyroute2, pyroute2.ipset
https://docs.python.org/3/library/ipaddress.html"
1054066763,10499,KAMI911,2022-02-28T09:38:35Z,Do you have idea for the UI?
1152384692,10499,clefebvre,2022-06-10T13:50:08Z,"Hi guys, sorry for the delay.

mintnanny is really barebone, it doesnt' do much at all. I'd love to see a parental control solution integrated into Mint, and then we'd link to it from the welcome screen, but developing such a solution requires a huge amount of work. This is not a simple thing.

Just like timeshift and ufw, this really is something that could make the desktop better. We need to find a good upstream solution though and then take time to properly integrate it."
1152672433,10499,KAMI911,2022-06-10T19:35:43Z,"@clefebvre, do you know open source upstream solution? I am happy to help somehow."
13697226,1719,bimsebasse,2013-02-17T21:31:29Z,"""Selected application title & description are now left aligned for better readability.""

To me the right-alignment is more readable + better utilization of space
"
13697494,1719,Lusito,2013-02-17T21:46:07Z,"if the start of the text bounces from left to right because it is right aligned, your eye has to bounce as well, making it more difficult to focus on the text.
Utilization of space is not different between the two.
I'm guessing this is just you being used to the text being right aligned.
"
13697634,1719,bimsebasse,2013-02-17T21:52:21Z,"Utilization of space is very different; you have a - mostly - big empty space at the bottom right corner of the menu, immediately beneath the app you have selected.

Eyes will bounce _less_ from the right side of the menu (where your selected application is) and in a straight vertical line down to the bottom right corner than from the right side of the menu to the bottom left side of the menu. 

![basic](http://i.imgur.com/DwVxZ70.png) 

![basic](http://i.imgur.com/dsgN1HN.png) 
"
13699989,1719,Lusito,2013-02-17T23:15:57Z,"Your line is only effective if you only want to look at one item.
If you look at multiple items one after another you will switch between app button and description, and then you'll notice how the description starts at a different position for every button if it is aligned right, making you search for the start of the text every time.

The amount of free space is still the same. It's just put together differently.
The big empty space is only there if your list on the right is not filled up.

Look at how it looks when your list is full:

![Menu](http://lusito.info/compactmenu.png)
"
13700124,1719,bimsebasse,2013-02-17T23:23:13Z,"Well, that's a different menu altogether. Gotta say I think the current menu looks a lot tidier and more attractive than that - just an individual opinion.

""If you look at multiple items one after another you will switch between app button and description, and then you'll notice how the description starts at a different position for every button if it is aligned right, making you search for the start of the text every time.""

Is that how you use the menu? Read the description for every single item in the app box that is highlighted? I can't imagine anyone apart from an elderly first-timer doing so. Most of the time you know what you look for in a menu. Most of the time you don't read the description - and you certainly wouldn't read the description for every single item your mouse hovers over - the eye travel bonanza you're worried about won't actually take place.
"
13700283,1719,Lusito,2013-02-17T23:32:00Z,"it's the same menu, just a different theme and a few items turned off.
btw, the overhaul did some changes to the theme, if your theme is not adapted, it will show some things in a way that is not desired.
try the cinnamon default theme (with this patch applied) to see how it is supposed to look.
"
13700410,1719,Lusito,2013-02-17T23:45:36Z,"This is how the default menu with default theme looks like (with this patch applied):
(the search box and app info is flipped because my menu is on the bottom)

![Menu](http://lusito.info/originalmenu.png)
"
13700515,1719,bimsebasse,2013-02-17T23:51:20Z,"It's certainly better left-aligned when you swap the entry box and the description box around - I just don't see a prettier or more tidy menu resulting from it - the description is less in the way when underneath the application box than on top of the whole menu. Doesn't matter though. The ability to disable/enable menu elements would be a great addition to Cinnamon.
"
13700615,1719,Lusito,2013-02-17T23:58:06Z,"""Most of the time you know what you look for in a menu. Most of the time you don't read the description""
Yes indeed, most of the time I just type in some words in the searchbox, and know what I am looking for.
But the description is for people who want/need to read it, so it's them we gotta think about when designing this part of the menu.
Most themes currently have it right aligned, and I'm not sure if they would change that, so in the end it's a choice of the theme developer.
I personally don't care that much for decisions on the top menu, as I use the bottom menu, so if you say you want right aligned text for top menu, that can be arranged.
It can even be arranged to put the app-info at the top, above the search box for the top menu.
I'd like to get some more opinions on that tho before doing it.
"
13700810,1719,bimsebasse,2013-02-18T00:10:50Z,"Yeah, don't agree, but doesn't matter :) 

If you go through with this you should set the categories/application boxes to have fixed height (like in the screenshots above) to keep the two columns more tidy, check the Tyr Himinn cinnamon.css for the code. It aligns categories titles with application titles horizontally (pre-scroll, of course).
"
13700916,1719,Lusito,2013-02-18T00:16:52Z,"Tyr Himinn ? Where do I get that theme ? doesn't seem to be on the spices website.

Currently the height of the menu depends on 2 factors:
- The number of entries in the categories box. so the categories box never needs to be scrolled.
- The number of items in the favorites box, which also should not need to be scrolled.

You can't make the categories box have a fixed height except you want them to be scrolled.
Similar with the favorites box. Either make it scrolled, or with a fixed categories box you'd get a lot of this wasted space depending on how many favorites are added.

Maybe I've misunderstood something here..

edit:
ah, you mean the buttons, not the list boxes.. Yes that would indeed be desirable.
"
13701138,1719,bimsebasse,2013-02-18T00:30:25Z,"Best explained with images.

Fixed height categories/applications buttons:
![basic](http://i.imgur.com/YEDZyIj.png) 

Padding only:
![basic](http://i.imgur.com/W5shTea.png) 

code:

.menu-application-button {
height: 36px;
padding: 0px 7px;
}
.menu-application-button:hover,
.menu-application-button-selected {
height: 36px;
padding: 0px 7px;
}
.menu-category-button {
height: 36px;
padding: 0px 7px;
}
.menu-category-button-greyed {
height: 36px;
padding: 0px 7px;
}
.menu-category-button-selected {
height: 36px;
padding: 0px 7px;
}

.. doesn't have to be 36px.
"
13702243,1719,Lusito,2013-02-18T01:07:12Z,"thanks, nice theme btw, why is it not on spices ?
"
13703726,1719,bimsebasse,2013-02-18T02:09:05Z,"it's this one: http://cinnamon-spices.linuxmint.com/themes/view/153
"
16313733,1719,Lusito,2013-04-12T19:47:57Z,"won't get implemented, will release it as separate applet instead.
"
6821838,886,dalcde,2012-07-07T09:38:28Z,"Has anyone tried to merge all 34 pull requests? I'm pretty sure there will be a whole lot of conflicts!
"
6822168,886,autarkper,2012-07-07T10:48:49Z,"As for my pull requests, I know there will be conflicts between some of them. The best approach may be to merge just a few at a time, those that involve different source files, and wait for the authors of the remaining pull requests to update them accordingly, incrementally. Otherwise, things may get lost.
"
6822196,886,dalcde,2012-07-07T10:55:22Z,"The most problematic file is probably cinnamon-settings.py
But merging isn't our job, anyway.
"
6822354,886,AlbertJP,2012-07-07T11:30:07Z,"Clem's busy with Mint 13 Xfce right now, and perhaps also KDE. The one pull request that got merged by glebihan was one which I had already discussed with clem in the past.
"
6826507,886,bimsebasse,2012-07-07T20:59:11Z,"I'd like to see this expanded to include some or all of #844 :o)
"
6827021,886,dalcde,2012-07-07T22:13:27Z,"I'll wait for #843 to get merged first or else things will get messy!
"
7036213,886,clefebvre,2012-07-17T14:13:16Z,"What's the rationale behind disabling notifications? Why/when do you need to disable them?

Say you need to disable them when watching a movie in full screen mode... then it's likely everybody's in the same case and we don't want notifications to show when in full-screen mode. In this case we're better off fixing that as a bug than exposing a configuration option we don't need?

Just thinking out loud, let me know what you think.
"
7036295,886,izacus,2012-07-17T14:16:14Z,"The other use cases are similar to ""Presentation mode"" - e.g. you're having a public presentation / productivity time and you want to disable all popups and distractions. Having a global setting which shuts them off is very useful in such situations.
"
7052000,886,dalcde,2012-07-17T22:52:54Z,"Personally I hate notifications, since they are mostly useless information to me (I don't need it to tell me that I've mounted a drive. I know it when I plug a device in), and I'm pretty sure that's the case for some of us. I'm used to having no notifications (e.g. in Openbox).

It doesn't hurt to have a choice, anyway.
"
7056831,886,bimsebasse,2012-07-18T04:59:01Z,"Same here - the only notifications useful to me are the low battery and message notifications, the rest is spam to me.

Gnome Shell pops up a notification every time your player starts a new song in a playlist - just in case you didn't notice!
"
7058081,886,mtwebster,2012-07-18T06:45:03Z,"Maybe we could create a user-definable filter of sorts - the cinnamon message handler ignores anything coming from X source.  The sources could auto-populate based on previously received notifications - instead of trying to predict all possible sources and making a master list, we just let the list generate itself over time - the first time a user gets a notification he doesn't want to see any more, he can go in the list and disable or filter them out.  And you can also have the option of disabling notifications altogether for those that want to live on the edge!

I could definitely see ways of going about accomplishing this, and I think it's a natural extension of managing system messaging.
"
7058181,886,mtwebster,2012-07-18T06:52:06Z,"Could also filter by notification urgency (though what App A thinks is urgent and what App B thinks may be very different things) - but it would be another way of reducing spam.

_--gears turning--_
"
7060530,886,AlbertJP,2012-07-18T08:58:30Z,"That's a good idea. When watching a movie I like to know when my computer runs out of battery power but I don't need the earlier warnings, printer notifications, and the monthly backup reminder. And I'd like to be able to easily turn them on again, as when I'm printing a document I like having a print notification to know if I need to go upstairs to turn on the network printer.
"
7066429,886,mtwebster,2012-07-18T12:09:47Z,"So here's what I'm thinking, please throw in you guys' ideas:

Notification applet: right-click menu displays the following options:
- Disable all notifications until restart
- Disable all non-critical notifications until restart
- Normal notifications (default state)

or something to that effect - wordage may change - basically affects all notifications until any sort of cinnamon restart (i.e. log out, reboot, alt-f2-r)

In the cinnamon settings app, we have a new Notifications tab, whose settings are temporarily overridden by the applet toggle.
- Option to set minimum filter level (Display All, Normal and higher, critical only, disable all notifications)
- Individual source options, allow filtering all notifications on a per-source basis.  Source list grows as our system detects additional sources.  Basically, you can't filter a source until you've received a notification from that source (though there could be some standard ones already there - for Cinnamon applets that we know about - for instance - networking).

I'm a little worried about over-complicating things - is this too far?  Obviously this level of control is entirely optional, and we'd default to what we have currently.
"
7076265,886,bimsebasse,2012-07-18T17:44:54Z,"That sounds excellent, mtwebster. It's certainly not following any of the modern KISS UI tenets but I'm convinced it would be a great asset for Cinnamon and boost its appeal. As long as the default is status quo, the complication will only happen to people who want things to get complicated (advanced customization). Think you hit what's needed and how it could be done pretty well, can't think of anything obvious you missed.
"
9023481,1232,autarkper,2012-10-01T07:20:32Z,"One minor nit, which isn't really your fault, is that I have to scroll to see the ""Enable highlighting [...]"" option in the window-settings tab. Other than that, most of this is difficult to test - any suggestions?

Update: With the help of @dalcde I have tested that the cross-workspace alert functionality works. (We used xchat).
"
9102385,1232,CapnKernel,2012-10-03T10:56:34Z,"I'm desperate to see this, don't like having my windows change workspace.
"
9103128,1232,autarkper,2012-10-03T11:32:16Z,"I have tested the new ""only-flash-for-a-few-seconds"" behavior, and it works fine. That should be a lot less CPU-consuming in the long run.

But I think the default behavior should be to set the alert style, not to do any alerting at all. The pulsing should be optional, though.
"
9259566,1232,joske,2012-10-09T13:03:28Z,"please merge :-)
"
9397815,1232,cooperq,2012-10-12T23:44:07Z,"+1 this is one of the few annoyances that keeps cinnamon from being perfect (for me).  
"
9638594,1232,mtwebster,2012-10-21T01:02:36Z,"Okay I made some changes (hopefully for the better) - 
- For now, I changed the applet to only listen to 'urgent' signals, and allow the windowAttentionHandler 'handle' demands-attention signals.  The upshot of this as I see it now is:
  -- Say I have a browser open in workspace 2, and I'm working in Cinnamon settings on workspace 1.  If I go to the clock/calendar configuration and click the link for strfgoodtime, it automatically shifts to workspace 2 and focuses the browser and the new tab.
  -- Say I've got xchat open in workspace 2, and I'm working in workspace 1.  I get mentioned, the window-list applet will flash, and I can click on the alert button in the window list, which will bring me to workspace 2.  I don't get sent there automatically.
- Other changes:
  -- Window-list alerts will appear on the left side of the 'main' list if the workspace they're on is to your left, and on the right side, if they're to your right.  This behavior will 'recalculate' as you switch workspaces, to always hint at which direction the window in question is in.
  -- Drag and drop is disabled for these 'alert' items in the window list
  -- They get destroyed once the window in question gets focused - either by clicking on the alert button, or navigating to the window manually.
  -- The blinking effect only happens once - they won't start blinking again upon each workspace shift.
- Concerns:
  -- Right now there's extra padding between the main window-list box, and the left and right alert boxes.  I could say that's intentional but it's not.  It could be desirable, however, so I didn't do anything to remove it, since that may be a separate discussion (issues have been raised in the past about this padding).  For now, I'm calling it a feature that these alert items are kept separate from the main box.
  -- I've tested this stuff with xchat and empathy.  It would be great if it could be tested with other apps (I'm thinking eclipse for one) - so we can evaluate whether we still want to monitor the 'needs attention' signal instead of having windowAttentionHandler do it.
"
9638852,1232,CapnKernel,2012-10-21T01:51:04Z,"That sounds great, can't wait to try it.
"
9902746,1232,autarkper,2012-10-30T11:49:06Z,"I've merged the latest set of changes to my master branch (I already had merged it once, some time ago). It was a conflicted merge, due to my pull request #1166.
"
10150306,1232,autarkper,2012-11-07T14:42:29Z,"Hey, I've found a problem with windows that set the urgent state more than once. I thought I saw it once with XChat, but couldn't reproduce it until I hacked together a script. Run the script and switch to another workspace. You should see a new phantom list entry each time the windows goes into the urgent state.

```
#!/usr/bin/python
from gi.repository import Gtk
import glib

class MessageDialogWindow(Gtk.Window):
    counter = 0

    def __init__(self):
        super(MessageDialogWindow, self).__init__(title=""Urgent MessageDialog"")

    def show_urgent(self):
        self.set_urgency_hint(self.counter%2 == 0)
        self.counter = self.counter + 1
        glib.timeout_add(5000, self.show_urgent)

win = MessageDialogWindow()
win.connect(""delete-event"", Gtk.main_quit)
win.show_all()
glib.timeout_add(3000, win.show_urgent)
Gtk.main()
```
"
10151828,1232,mtwebster,2012-11-07T15:21:44Z,"Oops.. guess I need to check if the window is already accounted for before making a new phantom entry.

Thanks
"
10511656,1232,mtwebster,2012-11-19T12:25:45Z,"I need to refactor this for recent changes, will reopen once I do
"
10523683,1232,autarkper,2012-11-19T17:58:15Z,"@mtwebster : I'm going to take a look at this and see if I can make it merge cleanly again.
"
10523769,1232,mtwebster,2012-11-19T18:00:32Z,"@autarkper thanks :)
"
12446094,1620,Lusito,2013-01-18T23:44:59Z,"seems you mixed in your pillow support commit into this pull request
"
13492670,1620,Lusito,2013-02-13T13:49:42Z,"I've just started porting my looking glass interface to gdbus and must say, it's hell converting the stuff.
It seems you need to know the dbus interface signatures in advance if you want to use it. With dbus-glib it could detect that from the dbus service.
Do you know if there is a way around it ? or at least a way to avoid writing the interface twice, maybe by exporting the xml into a file ?
gdbus documentation seems non-existent.
"
16293503,1620,clefebvre,2013-04-12T13:44:51Z,"It seems to work with Mint 13 and 14 so let's do it.

We should probably talk about this one on Monday to see how to best tackle this. 

This impacts the following files in Cinnamon and probably 3rd party applets as well:

./files/usr/share/cinnamon/applets/power@cinnamon.org/applet.js:3:const DBus = imports.dbus;
./files/usr/share/cinnamon/applets/sound@cinnamon.org/applet.js:4:const DBus = imports.dbus;
./files/usr/share/cinnamon/applets/brightness@cinnamon.org/applet.js:8:const DBus = imports.dbus;
./files/usr/share/cinnamon/applets/xrandr@cinnamon.org/applet.js:3:const DBus = imports.dbus;
./js/ui/automountManager.js:4:const DBus = imports.dbus;
./js/ui/scripting.js:3:const DBus = imports.dbus;
./js/ui/autorunManager.js:4:const DBus = imports.dbus;
./js/ui/magnifierDBus.js:3:const DBus = imports.dbus;
./js/ui/cinnamonDBus.js:3:const DBus = imports.dbus;
./js/ui/notificationDaemon.js:4:const DBus = imports.dbus;
./js/ui/calendar.js:3:const DBus = imports.dbus;
./js/ui/keyboard.js:5:const DBus = imports.dbus;
./js/ui/endSessionDialog.js:21:const DBus = imports.dbus;
./js/ui/main.js:4:const DBus = imports.dbus;
./js/ui/appletManager.js:10:const DBus = imports.dbus;
./js/misc/screenSaver.js:3:const DBus = imports.dbus;
./js/misc/modemManager.js:3:const DBus = imports.dbus;
./js/misc/gnomeSession.js:3:const DBus = imports.dbus;

Worst case scenario it's easy to revert the dbus deletion in gjs, but that'll be down to individual distros to patch, which isn't ideal.
"
16339868,1620,City-busz,2013-04-13T20:09:21Z,"Reverting the dbus deletion in gjs is not an option for Arch Linux, because we always ship vanilla packages. Cinnamon needs to be ported to GDBus ASAP, otherwise we will have to remove Cinnamon from our repositories in the next days, when gjs 1.36.0 moved to our stable repositories.

Many related patches can be found in gnome-shell source code:
https://git.gnome.org/browse/gnome-shell/log/?qt=grep&q=gdbus
"
16348899,1620,clefebvre,2013-04-14T10:22:41Z,"Your options are simple: 
- Do it (we'll merge it quickly)
- Patch gjs (surely you didn't mean to say your users aren't as important as your policies or aversion to patches)
- Delay your gjs upgrade and wait for someone else to do the job 

I don't mean to be cheeky but you're telling us what you need ""ASAP"", and you don't offer any solution for it. 

We're all busy and we all want this to be done eventually. You look like you care about providing Cinnamon to your users just as much as we care whether this happens right now or in 6 months time: not enough. If neither you or us are the driving force behind this and nobody steps up to fill your urgent need, it just won't happen. There's no need to wave the package removal scenario at us, ultimately we're talking about Arch users losing out. Surely that's more important than not patching gjs, or not making an effort to work on what's needed here.. the patches you mentioned.

There's a lot of Cinnamon devs out there and I'm sure you've plenty of resources as well. If somebody steps up to do the dirty work in time for that gjs upgrade you seem such in a hurry to apply, then great, I'll be responsive and merge it quickly. 

I've merged a lot of 3.8 pulls already, I'm ready to merge more if more contributions come in. This one isn't complete yet.

I'm a little bit annoyed at the lack of compatibility coming from GNOME 3.8 and everyone assuming it's our responsibility to be compatible with it the minute it comes out when we're not set to use it for another 6 months.  

Just to be clear here. Assuming someone forgot why they were paid for and prioritized this over their own agenda, you'd still be giving your users an unstable version of Cinnamon. If today Cinnamon 1.7.5 gets full 3.8 compatibility, you'll go ahead and provide 3.8 alongside with 1.7.5 instead of doing the right thing and waiting for 1.8 to provide both stable versions? The minute you upgrade GNOME and gjs, the minute you lose compatibility with Cinnamon 1.6.7. Whether Cinnamon ""git-latest"" has full 3.8 compatibility or not, if you care about your Cinnamon users your upgrade path should be from 1.6 to 1.8. 

Now you can tell me I'm wrong, that Cinnamon doesn't really matter to you and that upgrading GNOME ASAP is way more important, and we'll then know where we stand. That can be explained more clearly than with vague ""Cinnamon is 1 year late"" statements (like in the case of Cinnarch), so that when Cinnamon is indeed pulled from the Arch repository, Arch users understand the reason why. That being: Your commitment being on upgrading important packages such as GNOME at the cost of delivering unstable snapshots or not delivering at all non-important packages such as Cinnamon. 

There's a lack of commitment here, on both sides. 

Thanks for your understanding and apologies for the tough talk. I hope you get what you want (full 3.8 compatibility in time for ""ASAP""). I've no idea who's going to step up and do it though (although I'll prioritize its merging when it happens). 
"
16349021,1620,clefebvre,2013-04-14T10:33:26Z,"Another quick point. 
- At the moment, 3.8 compatibility is not a requirement for Cinnamon 1.8.
- Cinnamon 1.8 is planned for release around the end of April.
- Our next meeting is this Monday at 6pm (London time) on #linuxmint-dev irc.spotchat.org
- Distributors hoping to ship GNOME 3.8 and Cinnamon 1.8 are welcome to join in. We can talk about the state of Cinnamon 1.7 on top of 3.8, what's left to do, who really needs it and how to achieve it.
"
16349145,1620,dalcde,2013-04-14T10:44:03Z,"@clefebvre I can do the porting to gdbus. I'll cherry-pick leigh's commits and work on top of it. Shouldn't be a difficult job.
"
16349347,1620,leigh123linux,2013-04-14T11:01:38Z,"@clefebvre 

I believe most/all these changes  for gjs are backwards compatible with 3.6 so I don't see any real issues merging them once ported.
I never expected you to make this a high priority task when I reported the issue and any help form you is gratefully received.
I'm not available for tomorrows meeting but am hoping to ship 1.7 when F19 is released in June/July. 
"
16349423,1620,dalcde,2013-04-14T11:06:28Z,"Taking that back. Isn't as trivial as I thought. I'll still work on it but I cannot guarantee success.
"
16349713,1620,clefebvre,2013-04-14T11:33:30Z,"@leigh: Thanks and thanks for starting the work on this. I tested your pull on both 3.4 and 3.6 (well.. their respective gjs versions). It works well on both. We'll have 1.8 for sure and we can make sure 3.8 compatibility is in in time for F19. The issue is more problematic for other distros so it's likely to be done way before that. If it isn't, we'll make sure it gets done by June/July and we can add it in a 1.8.x release. 

@dalcde: Thanks for stepping up on this one.
"
16350051,1620,dalcde,2013-04-14T12:03:49Z,"Helpful link: https://mail.gnome.org/archives/commits-list/2012-November/msg00361.html
"
16351174,1620,vdcow,2013-04-14T13:42:58Z,"May be it will be helpful. I tried to port Cinnamon on gdbus to work with Gnome 3.8. There are  several commits

http://git.altlinux.org/people/cow/packages/?p=cinnamon.git;a=commitdiff;h=f693e5fce6f339a5ad67ff12cfa26dcb3d805e76

http://git.altlinux.org/people/cow/packages/?p=cinnamon.git;a=commitdiff;h=4f077e0d38147214518e7f53429339abcaf31e7d

First commit contain patches from  @leigh123linux. With this patches I was able to start Cinnamon but there are other problems described at  #1788 . Patches primary based on patches from gnome-shell git. But note that  I didn't have any experience with gdbus(and dbus) before so there are can be bugs. 
"
16351372,1620,Lusito,2013-04-14T13:56:39Z,"@clefebvre: It would avoid some merging conflicts if you merged #1649 before @dalcde starts porting cinnamonDBus.js
"
16356832,1620,clefebvre,2013-04-14T18:45:20Z,"Thanks @vovka-korovka.

@Lusito: Thanks, it's merged now.
"
16497025,1620,clefebvre,2013-04-17T09:58:33Z,"This pull is superseded by https://github.com/linuxmint/Cinnamon/pull/1872
"
13013543,1655,autarkper,2013-02-01T20:53:10Z,"I would rather see the camelCase refactoring be reverted. I see very little benefit from such cosmetic changes to the code base.
"
13015034,1655,FSteitz,2013-02-01T21:26:27Z,"I think having a consistent code base is the ultimate goal of each application. So why not refactoring it? I don't see the problem.
"
13024899,1655,Lusito,2013-02-02T05:09:18Z,"A clean consistent codebase will benefit both new and current developers. As long as backwards compatibility is ensured, it's a good thing.
"
13025551,1655,autarkper,2013-02-02T06:39:27Z,"I may agree on principle, but when a refactoring involves a widely used API one has to be pragmatical. The ripple effects from the camelCase refactoring are already starting to show, with 25 files changed in this pull request. I wish we could focus on fixing real bugs and enhancing the user experience instead of chasing some aesthetic ideal.

And this refactoring left applet.js looking uglier than ever. I know, it's going to be cleaned up one day, but that is going to lead to new ripple effects and probably new regressions.
"
13025777,1655,Lusito,2013-02-02T07:05:12Z,"Having a clean api and a good documentation hopefully leads to more developers writing  applets, leading to a better user experience.
"
13026192,1655,autarkper,2013-02-02T08:03:54Z,"@Lusito: Your making a valid point. However, IMO, a stable API that doesn't change for change's sake also has its merits.
"
13027130,1655,FSteitz,2013-02-02T09:51:12Z,"@autarkper I agree that a stable API is important. But one way to solve this issue could be to keep both kind of methods temporarily (i.e. underscore methods are just wrappers) and to communicate, that these methods will be removed in a future release. Or making this change clear before the release, so applet developers can prepare a new version of their applet.

But the longer such changes are postponed, the more developer will rely on the current API.
"
13027187,1655,Cobinja,2013-02-02T09:56:39Z,"@FSteitz: The underscore API actually is kept at the moment, output deprecation warnings into looking glass logs. I mainly opened this pull request to reduce that output.
"
13078505,1655,clefebvre,2013-02-04T14:15:03Z,"Hi autarkper,

Backwards compatibility is a requirement. Afaik cobinja's changes do not break any applets. Regarding the code itself, I agree with Lusito and Cobinja, it would be better if everything was coherent. As long as we have 100% backwards compatibility I'm ok with it.
"
13093587,1655,autarkper,2013-02-04T19:12:25Z,"Hi @clefebvre,

I would not have reacted so strongly if the camelCase refactoring had been done in a more gentle manner. IMO, the ""depreaction"" log-spam could have been introduced at a later stage, after the dual naming scheme had been in effect for some time. And now there is work under way to make the deprecation messages only appear once per applet, or something like that. In my world that means another potential point of failure, and for no user gain at all.

Furthermore, I would like to see some guidance for the independent applet authors. If they immediately start converting their applets to the new naming scheme, they will make their applets incompatible with current released versions of Cinnamon, and if they don't, they risk having their applets not work with future versions. Should they maintain dual versions, or are there some programming tricks they can use to make their applets compatible with both schemes, without making the code too ugly?
"
13103797,1655,dalcde,2013-02-04T22:34:08Z,"@autarkper I've cut the logs so that each applet only shows one log. ca88260
"
13105815,1655,Lusito,2013-02-04T23:21:42Z,"This would be my approach (untested, might need a little work): http://nopaste.dk/p19990 
It would remove all the compatibility stuff from applet.js except for 5 lines of code, so the code is more readable and maintainable.
As for the question what happens with applets that use the new api on an old-api cinnamon, well that could be solved with a copy/paste codeblock.
"
13106110,1655,Lusito,2013-02-04T23:28:03Z,"I wonder tho, is there really anyone who would not be able to upgrade cinnamon ?
"
13120110,1655,dalcde,2013-02-05T08:56:02Z,"clem might hate this (multitracking?), but we can issue a Cinnamon 1.6.8 that provides support for the new API.
"
13120162,1655,dalcde,2013-02-05T08:57:31Z,"@Lusito I think generally you don't get big version jumps in upgrades within the same release, e.g. you will never get GNOME 3.6 on Ubuntu 12.04.
"
316715118,6708,NikoKrause,2017-07-20T14:09:36Z,I would remove metadata.version completely.
316786627,6708,Odyseus,2017-07-20T18:13:32Z,"Hello, everybody.

@NikoKrause: The *""version""* field on the about dialogs should never have been hidden/removed. The *""last-edited""* field is completely useless for feedback/debugging purposes.

For example, if an applet cannot be loaded into a panel (or a desklet cannot be loaded into the desktop), its about dialog can't be accessed. With extensions is worse, because they lack about dialogs all together. By looking at the **metadata.json** file, the *""last-edited""* field is a *non human-readable* number which we (the xlets developers) are forced to convert into a *human-readable* format for it to make sense. And even with that *human-readable* ""version"" at hand, it's still completely useless, because we (at least I) keep the **metadata.json** files *clean* (with the *""last-edited""* field and other fields removed, otherwise, we are bothered to remove them from our pull requests). And without something to compare to the ""version"" provided by the *feedback giver*, trying to determine the version used by him/her will simply be a soothsaying act!

Like I said, the *""version""* field should never have been hidden/removed. If it exists, **display it always**."
316821129,6708,NikoKrause,2017-07-20T20:31:01Z,"The last-edited timestamp gets added automatically if a users installs an applet through Cinnamon. So it's always there. You can convert the timestamp to readable UTC form, e.g. with online converters. Then you have the date of the commit the user is running and can look it up in the commit history. So it's pretty helpful, even when the About dialog does not appear.(which should happen very rarely anyway)"
316841328,6708,jaszhix,2017-07-20T21:55:55Z,"The ultimate question is, do we want to deprecate the version property? I don't think we should, semantic versioning is one of the most basic things that can be available to xlets, and software in general. Its good to have an exact time stamp, but Odyseus makes a good point that it adds extra effort to cross reference it to find the actual commit. If an xlet is updated twice in one day, especially so. Its nice that the time stamp adds additional information, and is used internally by Cinnamon, but for figuring out if someone is on the latest version, we can't know by just looking at it. It should be treated as a secondary indicator of the version or as a fallback if a version isn't present, IMHO.

Edit - I went ahead and added the label for the date property. This is what it looks like after my last commit:

![last_published](https://user-images.githubusercontent.com/6859057/28459633-dab9f0be-6dd3-11e7-930e-cb96fc745caf.png)
"
317105852,6708,collinss,2017-07-21T20:33:57Z,"@jaszhix applet versioning was never really an official thing as far as Cinnamon is concerned. When I first wrote the about dialog, I included it there because a handful of applet devs (including myself) were including a version in the metadata. It was a way for the few of us who used it to more easily determine whether the user was up to date, at a time when there wasn't really a good way to do so otherwise. Most of the applets still don't include that information (I picked about 5 or 6 at random and none of them did). Now we have a system that not only is more reliable, but also works for all applets, without the need for the author to do anything. And since we are talking about official, the official version scheme for applets is now to use the timestamp, since each commit constitutes a new version. Finally, versioning of the 'traditional' form (eg. 1.2.3) really only makes sense for software that has periodic releases. For rolling releases (such as betas, nightlies, etc.) which the applets more closely resemble, it is more traditional to use a timestamp, or a modified version thereof.
I think a much better way of handling the issue would be to add a button to the about dialog which would copy all the relevant information (ie. uuid, timestamp, author, etc) to the clipboard."
317145905,6708,jaszhix,2017-07-22T01:49:11Z,"I like the idea about copying metadata to the clipboard. Really, I'm just trying to preserve the ability for people to share what version they're on so applets can be easily debugged. If I start receiving dates in issues, that will create extra work for me. I still don't understand what's ""official"" or not. It seems like if something gets merged into Cinnamon, regardless of how it ended up there, it then becomes official. "
317171860,6708,NikoKrause,2017-07-22T09:51:15Z,"> The ""last-edited"" field is completely useless for feedback/debugging purposes.

> trying to determine the version used by him/her will simply be a soothsaying act!

Hello and welcome to FAQ about timestamps and how to find out if the user is running the latest version of my applet.

1. _Q: The timestamp is useless. How does it tell me, which version the user is running?_
    A: For example the user is running Icing Task Manager (ITM) and the user is telling you that the About dialog of his ITM applet says `2017-07-18 14:15:06 UTC`. Open the [cinnamon-spices website of ITM](https://cinnamon-spices.linuxmint.com/applets/view/269) applet, e.g. by pressing the `More info` button in the about dialog. There you click on the [last-commit](https://github.com/linuxmint/cinnamon-spices-applets/commits/master/IcingTaskManager@json) link. Now you see the commit history of ITM only.
![screenshot-area-2017-07-22-105644](https://user-images.githubusercontent.com/8415124/28489836-c59b5066-6ecc-11e7-8d0d-9f7e01bc221d.png)
You'll see, the user is running the second latest version. There is already a newer version from July 19, to which the user can update.
2. _Q: But there are more than 1 commit on the same date. How can I be sure, which version the user is running?_
    A: Hover over the date under the commit message and there'll appear a tooltip with the full date:
![screenshot-area-2017-07-22-110925](https://user-images.githubusercontent.com/8415124/28489913-4ed461aa-6ece-11e7-81ab-76e21d335764.png)
![screenshot-area-2017-07-22-110938](https://user-images.githubusercontent.com/8415124/28489915-532bb802-6ece-11e7-9212-c4c7dbccfd9a.png)
3. _Q: But the timestamp on the GitHub website in you screenshot doesn't say UTC it says GTM. How am I supposed to know which time it is in UTC?_
     A: The interesting part in the date `12 Mai 2017, 22:38 GMT+2` is the `+2` at the end. Subtract two hours from the date and you get the UTC, so it's `20:38 UTC`.
4. _Q: But there are 7 commits in less than 5 minutes and I noticed that the timestamps shown in the about dialog and those shown on the website are +-10 minutes difference. How am I supposed to know, which of those commits the user is running, for sure?_
      A: Nice catch. The cinnamon spices website is updating every 5 minutes. So the minutes of the timestamps in the about dialog are divisble by 5, i.e. ""21:05, 21:10, 21:15, 21:20, etc.""
          So if there are e.g. 3 commits at `20:11`, `20:12` and `20:13`, then there is no chance the user is running the first two commits, since the website updates at `20:10` and `20:15` and therefore the first two commits are never available through Cinnamon settings.
5. _Q: But in question 4 I can't be 100% sure, if the user is running the very latest version, can I?
      A: If this case really happens, that there are 13 commits in 13 mintues and you want to be 100% sure the user is running the very latest version, then download the latest version of the applet on your own and compare the  your about dialog timestamp with the users timestamp._
6. _Q: But the user says, that he cannot add the applet to the panel and therefore he cannot open the about dialog. How am I supposed to read the timestamp?_
      A: Ask the user to send you the `last-edited` line in the metadata.json file, e.g. by using the terminal:
      ```
        grep last-edited ~/.local/share/cinnamon/applets/printers@linux-man/metadata.json
      ```
      And the output is:
      ```
      ""last-edited"": 1499365506,
      ```
     You can convert this by an online timestamp converter or by using the terminal command:
      ```
      date -u -d @1499365506
      ```
     Which gets you:
      ```
       6. Jul 18:25:06 UTC 2017
      ```
7. _Q: Extensions lack about dialogs all together. How am I supposed to know, which version the user is running?_
     A: That's no argument for using metadata.version. If you can't access the about dialog, you can't see the timestamp, but you can't see the metadata.version either. It's a tie! To get the timestamp anyway see question No. 6.
8. _Q: The about dialog of my ITM applet says `Last published: 2017-05-10 14:15:06 UTC` But I can clearly see on the website, that there have been a few updates of ITM in June and July. Why does my about dialog says, last published version of ITM is in May, when I can clearly see that the latest version of ITM is on July?_
      A: I think it's just a bad wording. It should supposed to mean, that you are running the version published on 10 May."
317173283,6708,jaszhix,2017-07-22T10:13:35Z,"I rebased my branch and removed the date identifier.

My point is ordinary users shouldn't have to go to Github just to find out if they're on the latest version. Most won't, I think. Look at the amount of text you have to write just to explain this to people. Its too complicated for a version. What we need is a boolean value, and maybe it could tie into xlet-settings - where Cinnamon knows whether or not each applet is up to date. They click the About dialog and it says ""Up to date"". If not, it says ""An update is available"". I don't think there's any use for the time stamp if that were done.

Edit - Another benefit of semantic versioning is you can differentiate big changes from small changes. Dates won't convey this. For all the user knows a translation for another language other than their own was merged, and it wouldn't benefit them to upgrade."
317174059,6708,NikoKrause,2017-07-22T10:26:05Z,"Oh. The FAQ is not meant for the users. It's meant for the devs.
Ordinary users don't need to go to GitHub to find out, if they are running the latest version. Ordinary users do refresh the list and then see available updates through Cinnamon settings.
And some ordinary users don't have a clue, that they need to refresh the list. Those users go to GitHub anyway to report an issue. Then you need to tell them to update, based on their timestamp."
317174504,6708,jaszhix,2017-07-22T10:34:43Z,"Even worse, I don't have time for that much cross referencing because we don't have better update logic in Cinnamon. Its not fair to people who are already doing all the work. I'm going to leave my PR as is, and bow out of the discussion, as I don't think such a small reversal is worth this much conversation unless it turns into a conversation on how to make this more streamlined for everyone."
317180658,6708,NikoKrause,2017-07-22T12:32:49Z,"I just wanted to show, that it's not soothsaying to say which version the user is running using timestamps.

I'm not disagreeing with you, that checking for up-to-date version couldn't or shouldn't be improved.
I'm disagreeing with you to use metadata.version for that. Because not every developer uses/updates the metadata.version. Hence it's unreliable and inconsistent. Timestamps are autogenerated, consistent for all spices and updated for each commit. (I know you and Odyseus are updating it every time, but you are the exception and not the norm. A solution for this, should be something, that is consistent and reliable for ALL spices)

Improving this, shouldn't rely on showing the metadata.version.
There are a few things, which could be improved, as you said.
1. Showing the latest timestamp on the spices website as suggested here: https://github.com/clefebvre/cinnamon-spices/issues/14
2. Adding a ""Check for update"" in the About dialog.
3. Creating an update notifier for spices, as you mentioned in the past. 

A cool feature would be, if the user gets notified about an update and where he gets an offer to look at the changelog, which shows him the changes between his current version and the latest version. "
317187995,6708,collinss,2017-07-22T14:44:04Z,"@jaszhix there already is an easy way for the user to tell if they're up to date: open applet/desklet/extension/theme settings, go to the download page, hit the refresh button. The problem is that currently, the user has to update the cache to tell if there is an update. If we implement an auto-refresh of the cache, it will be easier."
317190361,6708,jaszhix,2017-07-22T15:18:40Z,"@NikoKrause The version being there does not affect any other part of the UI. Its just making the UI inconsistent for people when the version disappears after they change the install method.

@collinss There has been interest in a way to do this so its more convenient. Such as #6706."
322994808,6708,NikoKrause,2017-08-17T07:45:30Z,"I looked at LineageOS. They have nightly builds and show the version number as well as a build date.
Also versions are more common than timestamps. So I created a PR https://github.com/linuxmint/Cinnamon/pull/6808 here, to clarify what the timestamp means and called it `Build date`. And added the version back in to show always if exists.
There are some valid points, the one that convinced me is, that by a version number it's more obvious if it's a bigger change or a minor change of the applet. You don't see this by timestamp.

Also to make the timestamp even more useful, I asked the team of the spices website, if they can show the latest timestamp in the website as well. So it makes more easy to compare the timestamp by hitting the `More info` button in the about Dialog."
322995480,6708,jaszhix,2017-08-17T07:48:52Z,"Looks good, I'll close this since #6808 addresses it more thoroughly."
275874417,6226,NikoKrause,2017-01-28T21:02:03Z,Screenshot? ;)
275877494,6226,Cobinja,2017-01-28T21:55:54Z,"Before:
![screenshot-window-2017-01-28-225320](https://cloud.githubusercontent.com/assets/1781127/22400103/9eeb9f10-e5ac-11e6-94d3-61c874ffaf5a.png)
After:
![screenshot-window-2017-01-28-225229](https://cloud.githubusercontent.com/assets/1781127/22400104/a7cbbeda-e5ac-11e6-9c6b-0ca9acc6284f.png)
That's what it looks at this moment. If an xlet has other settings, e.g. a hotkey, the other elements look too wide, that's why it's WIP."
275877840,6226,NikoKrause,2017-01-28T22:02:01Z,"The height is different, isn't it.
What happens, when the word in the combobox is really long? Instead of Celsius something like FahrenheitTemperatureAndOtherWeirdStuff"
275877922,6226,Cobinja,2017-01-28T22:03:38Z,"The height is different, yes.
With a really long entry in a combobox, it would make all others have the same width"
275879590,6226,JosephMcc,2017-01-28T22:34:40Z,I have to admit I'm not a big fan of that change. They no longer match the style of rest of cinnamon settings. It also totally breaks the styling of the switches. Those just don't look good. I'm also not sure exactly what behavior you would get with themes that use an image for GtkSwitch.
275880295,6226,collinss,2017-01-28T22:48:12Z,"I'm also a bit uncomfortable with this for usability reasons. Some of the widgets have to be larger in order to be functional (eg text entries, keybindings, file choosers, etc). As @JosephMcc pointed out, forcing some of the smaller widgets to be as large makes them look wrong. Also, I think this actually makes it slightly harder to follow."
275880865,6226,Cobinja,2017-01-28T22:59:39Z,"My personal preference would be to add the ability for settings-schema.json to define which items go into a size group and which don't. I'm just taking this as a starting point.
@collinss What do you mean by ""harder to follow""?"
275881104,6226,JosephMcc,2017-01-28T23:04:20Z,@Cobinja I agree. That would be much better than forcing all widgets in to it. You also need to be sure nothing else is broken in cinnamon-settings by changing the size_group_mode in SettingsBox.
275882441,6226,collinss,2017-01-28T23:32:35Z,"@Cobinja It's a little hard to explain, but because everything is the same size my brain just sort of skips over them. My brain is weird though, so it could just be me."
275883569,6226,Cobinja,2017-01-28T23:57:09Z,@JoseohMcc I did make sure. I used a previously unused group
275905723,6226,Cobinja,2017-01-29T10:34:10Z,"How about this?
![screenshot-window-2017-01-29-112806](https://cloud.githubusercontent.com/assets/1781127/22403414/88fcdede-e616-11e6-8982-b6312a15491e.png)
There seems to be a small allocation bug with the icon widget, will look into it.
For this screenshot, I put the switches and the spinbutton in one size group and the edit field and icon widget in another, configurable via settings-schema.json."
275910271,6226,JosephMcc,2017-01-29T12:18:35Z,Personally I don't want to see switches placed in size groups ever. And like I said before this won't behave properly in themes that use an image to theme the switches. I wouldn't be against a dev being able to set size groups somehow using the settings API but that has a downside as well. It means some devs will probably do this well and others will break the look of items like switches in comparison to other cinnamon-settings pages.
275914033,6226,Cobinja,2017-01-29T13:33:48Z,"It's just an example. It would be up to the settings-schema, which items go into a group."
275914240,6226,Cobinja,2017-01-29T13:37:31Z,Or I could manually exclude them
292922606,6226,clefebvre,2017-04-10T11:26:50Z,Closing this for now.
437430401,8008,jaszhix,2018-11-09T17:18:33Z,"This PR will conflict with #7986, which also changes styles and includes bug fixes. 

I also think this is not as sane of a default as some styling. Without any default theming, we have to make sure every theme doesn't look like this:

![image](https://user-images.githubusercontent.com/6859057/48277063-39ca4600-e40f-11e8-82fa-311edb509916.png)

The thumbnail styles were originally inlined because the close button size could be customized in ITM, and some scaling trouble.

We decided that the current close button size worked well, and too small of a button could pose usability issues. Theme authors have the power to make the UI less usable, and often times due to abandonment, or upgrades, they inadvertently do. I think this change makes it more likely users will be looking at a broken interface, and makes theme maintenance more difficult.

This change also breaks thumbnail scaling and makes thumbnails clip out of the monitor without constraint - which is another good reason to not give theme authors complete control of the UI. Its easier to make thumbnails not clip the monitor when we can predict some things, instead of calling expensive `peek_theme_node` calls.  

Tested by cherry picking into #7986, resolving conflicts.

https://github.com/jaszhix/Cinnamon/commit/4061b1fc88e58ec1e63e5795d32c9fab2af78caf

Edit:

Realized my merge-reconciliation effort left this line out
```js
this.titleBox.style = `width: ${Math.floor(this.thumbnailWidth - 16)}px;`;
```
Adding that where this.container.style was assigned makes the close button position outside the thumbnail container."
437487665,8008,germanfr,2018-11-09T20:36:33Z,"I understand your point with the icon size. That is something totally unnecessary to this PR. I'm not sure why is the text in your image so small in proportion to the rest of the UI though.

About the overflow. Is that with any special styling or is it always? I'm not able to reproduce right now. In fact, the width is applied to the outermost container like it was before. It only turns out it is a box layout instead of a bin with the box layout inside."
437559706,8008,jaszhix,2018-11-10T05:25:19Z,"Are you testing with #7986? If you try my merge branch of the two PRs, switch to Mint Y, its reproducible that way. I haven't tested this on master because that's too far behind the work I've been doing, and was surprised this conflicted with my maintenance branch.

I think if we do anything that changes thumbnail styling, it shouldn't cause any problems in terms of functionality. There's actually fixes in places in #7986 for the thumbnail scaling, and its a tedious thing to get right. Giving themes complete control means I have to start over again. #7986 is intended to be a part of a minor bug fix release in 4.0.x."
437572645,8008,germanfr,2018-11-10T10:03:13Z,"I discovered why is the overflow, and it's because of the auto-merging forgot to also remove [these lines](https://github.com/linuxmint/Cinnamon/pull/8008/commits/258c324be015afe08bebb72b914778da618bf91c#diff-81b3056bae7441aa2fdaca2ba3d863c6L759) that set the width of the label (no longer needed). Fixed that, I'll revert the customizable size thing and there are no more problems I can see."
437572962,8008,germanfr,2018-11-10T10:09:25Z,"I'll mark this as WIP until #7986 is merged into master, and then I'll rebase."
438074264,8008,germanfr,2018-11-12T23:49:20Z,"@jaszhix ready, thoughts?"
438082881,8008,jaszhix,2018-11-13T00:32:46Z,"This is still conflicting with my bug fix PR, I thought you were going to wait?

Edit - oops, just noticed it was merged, I will test it later."
438137994,8008,jaszhix,2018-11-13T05:04:04Z,"Hi @germanfr, I was able to test this again. It looks like this regresses thumbnail scaling again - for instance, if you open gnome-calculator repeatedly, the thumbnail menu should fill the entire width of the monitor, but there's a large gap between the edge, and the thumbnails scale too soon. When it switches to vertical orientation from too many thumbnails, text from the thumbnail title goes missing.

Is it necessary to theme the label container? We need to take that into consideration and call style_length on the label container in refreshThumbnails. These are not cheap calls, and I added the padding/margin checks out of necessity, so I'm not thrilled with seeing more classes added to make this more complicated. Window thumbnails are the most performance sensitive part of GWL as they have the most constructor instances.

I'm not a fan of the symbolic close button, and this PR doesn't make it obvious that is being changed. The hover pseudo class added to the button in cinnamon.css doesn't have any apparent effect. I think using the `window-close` style class is better and makes it look more like a button in most themes. Themes can still use SVGs with it. "
438399964,8008,germanfr,2018-11-13T19:15:07Z,"Actually @jaszhix, I think the calculation was already broken before this PR, because if you look closely at the example of the calculators, the last `item-box` is outside of its container.

Now the title box has the same width assigned to the thumbnail container (they have to be the same width because they are above each other). Before the PR the titlebox didn't have a width but the label had (width - 16px) resulting in a slightly larger width than the width assigned to the thumbnail actor, leading to wider item-boxes and an appearance of fitting, but it wasn't really ok. 

In summary, it's the width given to the thumbnail actor the one that was wrong and have to be fixed :)"
438402416,8008,jaszhix,2018-11-13T19:22:18Z,"The 16px offset can probably go, but I don't think we need to throw away everything. There's still a lot of code left over from ITM, where it was easier to make these assumptions.

> leading to wider item-boxes and an appearance of fitting, but it wasn't really ok.

Did you have a solution to this? It currently works fine on master. It may be in need for improvement, but its only broken on your branch."
438404713,8008,germanfr,2018-11-13T19:29:15Z,"> Is it necessary to theme the label container?

Yes, it is. From a theme's point of view, it is easier to define the spacing between the title and the thumbnail, and you can also set the font from there. There is no need to target the label specifically. In my opinion the label class should be removed.

> I'm not a fan of the symbolic close button

This is why icons exist, the theme doesn't have (and doesn't want) to maintain images for each action in the interface (for example popup menu icons). The notification has the same close icon, at least this adds some consistency. This can still be styled like a button with CSS and background images because StIcon is a themable element.

> When it switches to vertical orientation from too many thumbnails, text from the thumbnail title goes missing.

I can't reproduce at all.

> We need to take that into consideration and call style_length on the label container in refreshThumbnails

We already did that, but to the label container instead of the title container, whose width we have already calculated (it's the same as the thumbnail container), and then its children auto fit.
"
438405912,8008,germanfr,2018-11-13T19:32:51Z,"> It currently works fine on master. It may be in need for improvement, but its only broken on your branch.

It is already broken on master, look:
![screenshot from 2018-11-13 20-31-07](https://user-images.githubusercontent.com/10391266/48438026-3cb49600-e783-11e8-99fa-95dae5107a2f.png)

"
438407721,8008,germanfr,2018-11-13T19:38:06Z,"> Did you have a solution to this?

I am working on it. Though I think it'd be better not t o try to fit the size exactly, because it is hard to calculate the width of elements inside elements."
438411806,8008,jaszhix,2018-11-13T19:50:01Z,"Ok, I understand the change in the hierarchy, and it is simpler. But I think that's where the simplicity ends here.

- You're cloning the close button. It looks like a hack.
- Actors and relayouts are performant. Theming every actor because you can isn't.
- You're breaking the scaling method I implemented _before this PR was open that's been refined in ITM for nearly 2 years_, and saying I should fix it.

This is _not_ happening on master:

![thumb2](https://user-images.githubusercontent.com/6859057/48438867-8fbe2700-e74a-11e8-97d4-cd2d0025ecb8.png)
![thumb1](https://user-images.githubusercontent.com/6859057/48438868-8fbe2700-e74a-11e8-9481-a8fc449daa6c.png)

> This is why icons exist, the theme doesn't have (and doesn't want) to maintain images for each action in the interface (for example popup menu icons). The notification has the same close icon, at least this adds some consistency. This can still be styled like a button with CSS and background images because StIcon is a themable element.

Yes, but by who? We have tons of themes that don't support all this new stuff, and the close button is a design decision that should be in a separate PR and scrutinized differently from a refactor one. Infact, any PR that says its just ""simplifying"", but adds new things, is doing too many things at once. You don't even mention it in your PR message."
438412696,8008,germanfr,2018-11-13T19:52:34Z,@jaszhix why are you always right? :)
584534574,9133,Epskampie,2020-02-11T09:02:55Z,Is there anything I can do to have this move forward?
585688684,9133,kacperpaczos,2020-02-13T11:29:49Z,"@Epskampie what you think about this?
https://github.com/linuxmint/cinnamon/issues/8539"
585701797,9133,Epskampie,2020-02-13T11:37:31Z,"@pyroxar you can quickly try this by using the renamed extension I made: https://github.com/Epskampie/grouped-window-list-epskampie

To install: [Download the zip](https://github.com/Epskampie/grouped-window-list-epskampie/archive/master.zip) and decompress it in `~/.local/share/cinnamon/applets/grouped-window-list@epskampie`. Then rightclick the panel and select `applets` to add it.
Don't forget to configure the applet. Change `left click action` to `active, then cycle`."
585723036,9133,kacperpaczos,2020-02-13T12:02:55Z,"I can't configure: 
![obraz](https://user-images.githubusercontent.com/23406555/74433594-015eb680-4e61-11ea-9860-24820205935a.png)
Should I off the original applet?
"
585729989,9133,Epskampie,2020-02-13T12:22:36Z,"Right click:
![Selection_009](https://user-images.githubusercontent.com/1692043/74435051-e3df1c00-4e63-11ea-91ef-431f932b06b2.png)
"
585741884,9133,kacperpaczos,2020-02-13T12:56:42Z,"I can't run your applet, I have only originally cinnamon applet
![obraz](https://user-images.githubusercontent.com/23406555/74437568-9f09b400-4e68-11ea-942a-d24a2a2cd403.png)
"
598220331,9133,mtwebster,2020-03-12T14:32:24Z,"I'm confused -

Take a look at settings, this is already an option, from what I can see - under general, look at 'left-click-action'.  If I set it to cycle windows, it behaves (I think) exactly how you want it to.

The normal option - toggle activation of last focused window, sounds like what you expect the current behavior should be.  If what you describe is happening, then that's something that needs to be fixed."
598227768,9133,Epskampie,2020-03-12T14:44:53Z,"For me, the default `cycle` will always cycle windows, even if the program wasn't selected. This makes it extremely annoying to switch between two programs a lot if at least one of them has multiple windows.

The `toggle activation of last focused window` doesn't give you an easy way to switch windows. With my tweak, you can just click the taskbar icon more then once."
598245241,9133,mtwebster,2020-03-12T15:17:03Z,"Ah sorry - I didn't try the workflow you described with that cycle option selected. I can reproduce the issue of it always choosing another window in the group when you go back to it.  I can't imagine this was intended - it should behave the way your PR is intended to work.

So:

- toggle activation... should do just that, click it, last-used window should focus.  Click again, it should go away.
- cycle windows - should do exactly like the first option, except subsequent clicks should cycle thru the window group.  It should also remember the last window that was focused, and return to that, but this is not happening - instead it's continuing the cycle even though you were just working in an entirely different application.

I'm not sure why 'none' is an option, that's just silly, but that's another discussion.

So, I'd prefer to either a) Fix the existing option (which should *already* be working in the manner you want here), or b) replace the code related to that option with yours (I'm totally ok with this route, if it works reliably).
"
599408101,9133,Epskampie,2020-03-16T08:33:19Z,"I agree, I feel like the current ""cycle"" functionality is broken a bit, and should be fixed. However, I do not know people's workflow, so maybe I'm wrong, in that case adding an extra option would be fine too.

However, no maintainer seems to be active here, so this whole PR seems to be an execise in futility. :-)"
609878526,9133,mtwebster,2020-04-06T15:52:11Z,"I'm sorry if you think so, I gave some feedback, I have no problem using this pr but I'd rather replace the existing option which I think is broken.  If someone complains later I'll deal with it then.

I know it can be frustrating waiting for responses but unfortunately other things take priority and sometimes there just isn't time to dedicate to this stuff."
609889300,9133,Epskampie,2020-04-06T16:10:46Z,"Ah, my bad, I didn't see you are one of the contributors to this repo, I have to start paying attention to the way that gihub shows that.

I'll change this PR so that it modifies the `cycle` option."
612380074,9133,clefebvre,2020-04-11T09:43:04Z,"
![Codacy](https://app.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Clones added
============
- files/usr/share/cinnamon/applets/grouped-window-list@cinnamon.org/appGroup.js  2
         
```


See the complete overview on [Codacy](https://app.codacy.com/manual/cinnamon/Cinnamon/pullRequest?prid=4872794&bid=16153089)
        "
612380937,9133,Epskampie,2020-04-11T09:48:15Z,"@mtwebster  I've changed this pull request to change the `cycle` option instead of adding a new option. 

As you can see the code change is pretty short, and most of the ""new"" code was taken from the existing `toggle activation` option."
616697192,9133,mtwebster,2020-04-20T17:21:15Z,"Looks good, thanks!"
687246123,9559,brownsr,2020-09-04T16:14:36Z,"I couldn't see where you had pulled the code from.  Regardless, we'd want to see that this does not cause themeing regressions in applets, so could you please include some examples of where you have successfully regression tested this against existing applets and themes.  Also a specific example of how someone might apply this change to a theme's CSS would be useful,  so documentation could be updated. A screenshot or two of the intended result would also be useful.

Regards

Simon"
687261029,9559,bomdia,2020-09-04T16:42:39Z,"""I couldn't see where you had pulled the code from."" what do you mean @brownsr ?

i'm running this right now and i don't see any regression,
howeaver i think that can't be any regression as i only added a className to the existing one to better identify any applet in css.

you could use this class for appling specific css code to an applet in your theme ex
you have an hover border image applied for all applet-box but in a particular applet like show desktop you want to use another image, some **scss** of this:

```
@each $pos in top, bottom { 
    .panel-#{$pos} .applet-box {
        text-align: center;
        &:hover {
            border-image: url(""img/panel/panel-#{$pos}__inactive__open.svg"") 4;
        }

         &:checked {
            color: $text-active;
        }
    }
}
.applet-box.show-desktop-cinnamon-org-applet, .applet-box.sw-mohammad-sn-applet {
    &:hover {
        border-image: url(""img/panel/mini-semi-transparent-hover.svg"") 2;
    }
    .applet-icon {
        width: 0;        
    }
    border-image: url(""img/panel/mini-semi-transparent-bg.svg"") 2;
    width: 1em;
}
```
![mod](https://user-images.githubusercontent.com/1759618/92264101-f8593380-eedd-11ea-89dc-129afd5053d6.png)

as you see the first is the common one for all and the second is the specific one for show-desktop

using a specific class name help theme developer to select the right applet that they want to apply a css rule

and because we talking about this thing i'll ask for a better support of css rule from gtk object (ex StIcon) like the display one or the opacity
"
693471127,9559,bomdia,2020-09-16T15:10:37Z,there is any news on this?
703115474,9559,brownsr,2020-10-03T14:50:13Z,"This definitely causes regressions for me.  I've not tried to debug the code, but it breaks the themeing in the vertical panels that I use.  To aid your fault-finding, that's using spices theme graphite-zero, if that's at all relevant.  At first glance it seems like all the themeing that is in applet-box.vertical gets missed out with this PR in place.

Regards

Simon"
703124535,9559,NikoKrause,2020-10-03T15:55:56Z,"As @collinss mentioned the class shouldn't be overwritten, but you should add an extra style class on top. It checks for the added style class first, if it doesn't find the style class in the theme, it falls back to the original style class. For example I'm doing this in CinnVIIStarkMenu. I submitted a review to this PR, but I haven't tested it yet. Maybe @brownsr can test and confirm, if it fixes the issues?"
703314998,9559,brownsr,2020-10-04T20:57:11Z,"With the suggested changes it is definitely better.  The applet box themeing appears to work as originally.  But systray themeing is still broken.  I'd suggest reverting, and let the author bring it back once he has tested all the various cases out.

Regards

Simon"
716555266,9559,bomdia,2020-10-26T13:44:38Z,"@brownsr i was reviewing this thing and i need to know what was broken with systray and how it had to be for correct behavior, so i can fix this thing and commit again with patched thing"
717529492,9559,brownsr,2020-10-27T20:47:44Z,"I found problems with vertical panels, the existing CSS appeared not to be
applied.  I happen to use theme graphite-zero, but you may find the issues
on others as well.  From memory the font size adjustments in things like
the weather applet were not applied, and hovering over things in the
systray caused excess bordering, an 'item within item' appearance that the
CSS was crafted to avoid.  I seem to remember (may not be right here, I
didn't take notes) that hover could be a bit 'bouncy' in places with the
icon moving slightly around on hover.  I suspect that the .vertical bits in
the CSS were getting over-ridden.

hope that helps you debug

Regards

Simon

On Mon, Oct 26, 2020 at 1:44 PM Mirko Girgenti <notifications@github.com>
wrote:

> @brownsr <https://github.com/brownsr> i was reviewing this thing and i
> need to know what was broken with systray and how it had to be for correct
> behavior, so i can fix this thing and commit again with patched thing
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/linuxmint/cinnamon/pull/9559#issuecomment-716555266>,
> or unsubscribe
> <https://github.com/notifications/unsubscribe-auth/ABQHSMJTSBE74V6NVGCVWCTSMV4NPANCNFSM4QX77QYQ>
> .
>
"
717608546,9559,bomdia,2020-10-27T23:54:59Z,"@brownsr found it, the problem happen because of poor code, i rewroted this better with te add as @NikoKrause suggested but without re adding applet-box class as  we are not setting it but adding and i don't get Any systray weird item in item and theme seems the same ad usual if they don't use new descriptor to theme thing, i'll submit the changes because i've moved the logic in a new function for better readibility"
1461905395,11548,clefebvre,2023-03-09T12:00:43Z,"![image](https://user-images.githubusercontent.com/1138515/224016990-2aa4824b-232b-4161-89e4-e6f68ceb44f3.png)
"
1461919637,11548,Secret-chest,2023-03-09T12:08:34Z,PLEASE NO! Add this to the welcom screen! Please don't only support Mint themes!
1461921054,11548,Secret-chest,2023-03-09T12:09:30Z,"Also, is this a hint that the folders will receive colourful versions? Just how I wanted it :)"
1461921782,11548,Secret-chest,2023-03-09T12:09:56Z,Would you add an API so custom theme devs can use this interface as well?
1461926867,11548,Secret-chest,2023-03-09T12:12:31Z,"Even though the UI is pretty nice, I think it would be better added in the welcome screen and keep the themes menu as-is."
1463095755,11548,ItzSwirlz,2023-03-10T02:01:08Z,Does the color selector only appear if it exists for the theme? Some themes do have multi-color but vary and can only be told depending on the suffix (e.g. Yaru-*)
1463406945,11548,Secret-chest,2023-03-10T07:51:41Z,"> Does the color selector only appear if it exists for the theme? Some themes do have multi-color but vary and can only be told depending on the suffix (e.g. Yaru-*)

The themes have to be manually added to the dropdown. By default only mint themes and adwaita seem to be available, adwaita seems to only have blue colour."
1463861496,11548,mtwebster,2023-03-10T14:12:11Z,"Advanced Settings is the old <= 5.4 view - nothing is being taken away. All themes will appear like before, no changes required. For themes to show up in the new page, the definition file would need to include them.

There's only one Adwaita because they only have a light and dark (blue) theme, no other variants.

Mint Welcome is not meant as a normal configuration tool, it's more for initial setup or for less experienced users perform certain major things (like the panel style) without getting lost.

This new theme page is not a novice, introductory tool, it's a less-cluttered way to change the desktop appearance, which is all most users really have a need for."
1464930930,11548,clefebvre,2023-03-11T15:06:58Z,"> Does the color selector only appear if it exists for the theme? Some themes do have multi-color but vary and can only be told depending on the suffix (e.g. Yaru-*)

We don't look at the theme name to guess available color variants (we'll stop doing that as well in folder-color-switcher btw). We use variant definitions stored in /usr/share/cinnamon/styles.d/.

A definition for Adwaita is added here as part of this PR. Another is added via https://github.com/linuxmint/mint-artwork/pull/1
"
1465271778,11548,Secret-chest,2023-03-12T18:48:37Z,Would it be possible to be able to ship these kinds of definitions when installing a Cinnamon Spices theme?
1465271975,11548,Secret-chest,2023-03-12T18:49:39Z,"> This new theme page is not a novice, introductory tool, it's a less-cluttered way to change the desktop appearance, which is all most users really have a need for.

I agree, and I think it's got potential since new definition files CAN be shipped with theme debs."
1470082118,11548,clefebvre,2023-03-15T14:11:24Z,"> Would it be possible to be able to ship these kinds of definitions when installing a Cinnamon Spices theme?

No, it would need write permissions to /usr/share/cinnamon/styles.d/ which is a system directory.

Also, it's not something we'd want. A style is much more than a Spice theme, it's the combination of a GTK theme, an icon theme etc... it's a complete set.

When you're at the point of installing Cinnamon themes, you're already in the Custom tab. If you use a custom set like this the settings app will default to that tab for you whenever you open it again."
1470330295,11548,Secret-chest,2023-03-15T16:12:41Z,"Looks good then. Serious themes are just going to get installers now (to add them here), aren't they?"
1470331188,11548,Secret-chest,2023-03-15T16:13:13Z,"> Looks good then. Serious themes are just going to get installers now (to add them here), aren't they?

Not sarcasm."
1470650499,11548,clefebvre,2023-03-15T19:13:16Z,"> Looks good then. Serious themes are just going to get installers now (to add them here), aren't they?

Either that or distributions. The way it works is that they can override each others. Files in /usr/share/cinnamon/styles.d/ are read in alphabetical order. If two files define the same style name, the latter one overwrites the former.

This allows Cinnamon to ship with a predefined style for Adwaita for instance which distributions can override, or which GNOME/Adwaita can override.
"
1781860134,11905,timur-g,2023-10-26T20:36:27Z,"Tested .Seems to work, thanks. 
Some notes, though - tested in Linux Mint 21.2 with Cinnamon:
1. I cannot switch between tunnels with just clicking the other, need to turn of WG and turn on other tunnel (not grave)
2. I still cannot import WF conf from file, that can be imported via nmcli (says no IP address on line 3)
3. ""WireGuard Connections"" is turned ON on boot, even if it was turned OFF before (seems NOK and a bug, ""VPN connections"" does not behave like that )"
1781977602,11905,claudiux,2023-10-26T22:29:04Z,I see. Thanx for the feedback.
1782500399,11905,timur-g,2023-10-27T08:20:06Z,"Plese see my edited 3., may be the bug.
Not related, but if you are willing to wok more on Network Manager, it has another annoying issue: does not show Hotspot to turn on/off with the same presets (so only command is possible). "
1782662747,11905,claudiux,2023-10-27T10:16:59Z,"I've never seen ""WireGuard Connections"" ON at startup, except when a WireGuard connection is already activated.
EDIT: Are you using another applet, like VPN-Sentinel?
EDIT2: Have you requested automatic connection to Wireguard?"
1783370770,11905,claudiux,2023-10-27T18:57:22Z,"I have some problems (and I need help!):

  * even when a Wireguard connection is active, the only active connection detected is ""wired"". The icon therefore remains that of the wired connection;
  * clicking on another Wireguard connection doesn't deactivate the old one.

@timur-g Can you give me a .conf file (containing fake data) to understand the origin of your problem? Or tell me if its structure is the same of the one in https://cinnamon-spices.linuxmint.com/applets/view/368 (Wireguard section)."
1785341414,11905,timur-g,2023-10-30T14:29:43Z,"Here it is:
```
[Interface]
PrivateKey = 12345=
Address = 1.2.3.4/32
MTU = 1280


[Peer]
PresharedKey = 67890=
PublicKey = 11111=
AllowedIPs = 11.22.33.44,55.66.77.88
Endpoint = end.point.com:51820
PersistentKeepalive = 25
```
"
1785494392,11905,claudiux,2023-10-30T15:42:00Z,"@timur-g To import this .conf file, try removing the `/32' part of Address."
1785582948,11905,timur-g,2023-10-30T16:26:30Z,"Even if removed, import does not work, says Line 10 needs valid IP. It is where there are 2 IP addresses IP1,IP2."
1785989657,11905,claudiux,2023-10-30T20:31:13Z,"@timur-g Try replacing the comma by a space:
```
AllowedIPs = 11.22.33.44 55.66.77.88
```"
1787160700,11905,timur-g,2023-10-31T12:52:25Z,"If comma is replaced by space, than GIU Import works, but puts that connection under VPN, which is expected, as it says ""Import VPN"". So it wouldbe good to have ""Import Wireguard"". Just saying. as import via nmcli works and it is one-time anyway. 
So this is an improvement used daily - only issue for me is that auto start on boot."
1787702133,11905,leigh123linux,2023-10-31T17:50:26Z,"@claudiux  This could be ported to c-c-c 


https://github.com/GNOME/gnome-control-center/commit/475faaf26bccfd2bed0b3b5a79e314249697e9a3"
1789867705,11905,claudiux,2023-11-02T00:20:43Z,The icon problem seems solved now!
1824117540,11905,timur-g,2023-11-23T10:10:02Z,"I use this and it is great, should be in merged in Cinnamon IMO.
I noticed one more issue, not sure if that can be addressed here: 
WireGuard has it's own section in addition to VPN Connections, which is fine.
But network connections have ""Automatically connect to VPN"" and there should also be another check box for ""Automatically connect to Wireguard"". "
1824321795,11905,claudiux,2023-11-23T12:07:58Z,"@timur-g Thanks for the feedback. Good suggestion, I'll try to take it into account."
1865954544,11905,timur-g,2023-12-21T09:44:47Z,"Hi @claudiux. Happy with this, just wondering will you work more or someone should check and merge PRs?
IDK how it goes here, should someone with permission be mentioned to look? 
It would be pitty that this just stays like this.  "
1554195148,11664,clefebvre,2023-05-19T08:00:55Z,"don't we test to see if the executable is present before showing the module?

if so we don't need to say ""if Mint, else""

it's a bit weird to have Mint on one side and then all other distros on the other within the code."
1554522746,11664,rcalixte,2023-05-19T12:48:29Z,"> don't we test to see if the executable is present before showing the module?
> 
> if so we don't need to say ""if Mint, else""

The goal was to avoid collisions and duplicates in Mint where other installations of Cinnamon do not have the additional modules present. Rather than chasing down multiple upstreams to patch Cinnamon's settings modules, this would carve out a space for those modules and expand the list of modules on non-Mint installations of Cinnamon.

> it's a bit weird to have Mint on one side and then all other distros on the other within the code.

Most of the additional modules could be moved to the main definition but the main exception is `software-properties-gtk`. @clefebvre Are the plans in future versions of Mint to use a different namespace for this? Otherwise, this would conflict on Mint installations. If this is incorrect, we can consolidate the additional modules and simplify things. The original goal was to leave Mint undisturbed."
1554532171,11664,clefebvre,2023-05-19T12:56:58Z,"OK, an easy way to solve this would be to add a module blacklist in gsettings. Mint could set this to ""['software-properties-gtk']"", other distros could set this to suit themselves."
1554539705,11664,rcalixte,2023-05-19T13:03:03Z,"> OK, an easy way to solve this would be to add a module blacklist in gsettings. Mint could set this to ""['software-properties-gtk']"", other distros could set this to suit themselves.

Wouldn't this be more difficult to maintain? Not only for other downstreams but for users as well? This would create two locations to configure one facet within Cinnamon.

Would it be easier to have just `software-properties-gtk` as the only additional module in the conditional and move the rest into the main list?"
1555884067,11664,clefebvre,2023-05-20T10:40:08Z,"Yeah, you could only show software-properties-gtk if mintsources isn't present. That would work and be quite simple."
1555889691,11664,fredcw,2023-05-20T11:16:06Z,"I curious about something. As each item seems to have an associated .desktop file, would it not be better to get the icon name for each item from it's .desktop file rather than have to specify it in this file. This would also ensure that the icon used in system settings would always be consistent with the icon used in the menu applet."
1555924234,11664,clefebvre,2023-05-20T14:30:38Z,"> I curious about something. As each item seems to have an associated .desktop file, would it not be better to get the icon name for each item from it's .desktop file rather than have to specify it in this file. This would also ensure that the icon used in system settings would always be consistent with the icon used in the menu applet.

Yes. Good point."
1556070233,11664,rcalixte,2023-05-21T03:00:24Z,"> Yeah, you could only show software-properties-gtk if mintsources isn't present. That would work and be quite simple.

Updated. I'm open to modifying the conditional if needed. We can check inside the `load_standalone_modules` function as well after determining whether the process was found. That was the original implementation when this PR was opened.



> I curious about something. As each item seems to have an associated .desktop file, would it not be better to get the icon name for each item from it's .desktop file rather than have to specify it in this file. This would also ensure that the icon used in system settings would always be consistent with the icon used in the menu applet.

I encountered the challenge with icons when I was testing since I had installed so many packages but had no way to differentiate them when they were all the same. If we're going to source .desktop files for icons, would it make sense to source the localized Name as well? (This is all assuming sourcing the .desktop files is trivial enough as well. I know it's possible, I primarily want to try to keep things simple.)"
1556073886,11664,fredcw,2023-05-21T03:34:36Z,"@rcalixte Oh, I wasn't suggesting you do the icon thing as part of this PR, it's a separate issue for a different PR. Maybe I'll take a look at it sometime. Then again, maybe it's not worth bothering with. ""if it ain't broke, don't fix it"" as it were."
1681300635,11664,lestcape,2023-08-16T21:35:08Z,"I don't think it's a good idea to hardcode a list of modules at all. I thinks that all modules should be provided in a module file and there should be a function implemented by modules to evaluate if a module can be enabled or not. Thus, the responsibility of loading or not a module will be delegated to the module itself, which is the one who really knows its own requirements to be loaded.

Another improvement that I think should be nice is to have something to override the default modules. This is useful, for example, when there is more than one software to do the same thing and both are available on the system, but Mint prefers to use one, while a different Linux distribution prefers to use the other software. This can be done simply by using two different module folders, one which would be the primary ""default"" and the other would be where the distribution should put its ""custom"" module version. The cinnamon-settings should look first in the ""custom"" folder and then in the ""default"" folder and modules with the same name should only be loaded the first time they found. Using this organization, the modules of a distribution can even be added and maintained in a totally different and exclusive package of the distribution, without any need to modify the default code that comes with Cinnamon. Furthermore, the external distro can even excluded a module they don't like by providing a module witch the same name whose evaluation function is always return false.

The only downside to this is that it can be costly in terms of performance to have to load each module file to test its availability, but I believe the benefit would outweigh the prejudice and the real cost of doing this would be in terms of milliseconds. This if we are careful to separate the module file where the evaluation function is from the actual functionality of the module, so that no additional library needs to be loaded in a module that is not actually going to be loaded because it evaluation function return false."
1703949989,11664,rcalixte,2023-09-02T21:56:56Z,"> Yeah, you could only show software-properties-gtk if mintsources isn't present. That would work and be quite simple.

This is now done in the latest rebase.

"
2039908021,11664,mtwebster,2024-04-05T14:10:34Z,"Can you rebase this?

The only issue is the addition of this line:
https://github.com/linuxmint/Cinnamon/blob/master/files/usr/share/cinnamon/cinnamon-settings/cinnamon-settings.py#L90
and the comma at the end of the previous line."
74186513,3858,mtwebster,2015-02-13T00:59:35Z,"Some feedback (Testing on Debian Jessie)
- No players appear by default (that's fine) - if I launch a player, it's recognized by the applet, also good.  But if I close the program, it won't let me re-launch it until I restart Cinnamon.
  -- Launched Gnome Music, closed - result-> Launch Player now appears, but there is no expansion under it - it's empty.  Restart cinnamon, all is well.
  -- Launch rhythmbox, close - result-> Still only showing gnome music, until I restart.
- If I have multiple players running, I switch between one to the other within the applet, I don't get track length info (and possibly other mpris info) - just the current time in the track.  (I could only test with a radio station, not sure what else might be missing)
- Should quit player be next to the player name at the top?  (just asking for discussion, not saying it should be so)
- This seems a bit confused:
  ![image](https://cloud.githubusercontent.com/assets/262776/6180275/78b3ce08-b2f0-11e4-9510-e5574199fbc4.png)

-- I think it may be the fact that the slider doesn't align with the text above it - lose the icon and center the text?  or align the text with the slider?  Not sure - try some things?  Also, maybe there should be a separator between the main volume and the app volumes?  Seems a little crowded.
- Weird things happen to the main volume if you adjust the player volume - expected?
"
74318002,3858,pixunil,2015-02-13T20:07:43Z,"1. _No players appear by default_ - Vlc and banshee should be, appearing after getting DBus connection is now implemented
2. _I don't get track length info_ - Can't reproduce atm
3. _Should quit player be next to the player name at the top?_ - Nice thought, but then Raise should be also there
4. _This seems a bit confused_ - Theme issue, with Mint-X and other 3rd party the submenus are colored something other. I think I talked a bit with @josephmcc on IRC
5. _Weird things happen_ - Can't reproduce atm
"
74321096,3858,JosephMcc,2015-02-13T20:26:56Z,"3)  If you do this you should probably add them with a style class of their own. Otherwise the buttons will probably be much larger than what you want in most cases. Not sure if I like the idea or not.

4) This is only partially a theme issue. I think a separator between the main volume slider and the ""Applications..."" label may not be a bad idea. Also kind of like the idea of centering the icon/label for the individiual applications in the submenu. Would have to see what it actually looks like.
"
74542632,3858,pixunil,2015-02-16T17:20:20Z,"3) Yep, that's true, but as we aren't sure whether we implement it, we shouldn't discuss the details
4)

> I think a separator between the main volume slider and the ""Applications..."" label may not be a bad idea.

Personally, I thought this for a little moment in development but discarded it, because I thought that we have ""Player | Output | (Input) | Settings"" (| = separator) and I would dived the Output section with it. But if you think it has got better readability, I'll write this line of course.

> I think a separator between the main volume slider and the ""Applications..."" label may not be a bad idea.

A bit unconventional, right? (as everything is left-aligned).
The fact that the icon - label menuitem is not aligned like the icon - slider is true, I'm using a `St.BoxLayout` for the first and a `_allocate` hack (which I would like to dump) which respects the `_spacing` property for the slider.
I think that the easiest (and laziest) way for me to solve this is to wait for #3902.
"
74681515,3858,mtwebster,2015-02-17T15:05:46Z,"Reminder - we can discuss anything we want, even if it's out of the scope of the current PR - maybe we want it _in_ the scope :) - not saying we do, but we only know by discussion.
"
74832266,3858,anandrkris,2015-02-18T09:00:51Z,"I remember suggesting this earlier, how about publishing this as a new applet in spices and seek feedback (assuming it works on 2.4)....
"
74871101,3858,pixunil,2015-02-18T14:23:43Z,"##### Pros for 3)
- selecting the player in the sound applet, raising and closing the player in one place - makes sense as those are methods which are more or less the same
- cleans the control area as it will contain only play / pause, stop, next, previous where raise and quit aren't controls in this context (maybe space for shuffle / loop)

##### Cons for 3)
- probably 3rd-party issues, as @JosephMcc mentioned we'll need a new style class

@mtwebster, regarding 2), this shouldn't happen as the player section exists and can be modified. It is not added though, but this shouldn't have an effect an this. Do you have some more information for 5?

@anandrkris it works on 2.4, but you don't have got the audio feedback when changing sound, because I modified two Cinnamon js files and cinnamon-settings-daemon, which can't be installed over spices.
"
77000994,3858,mtwebster,2015-03-03T18:11:11Z,"Sorry, got pulled away at work - 

I actually like this: https://trello-attachments.s3.amazonaws.com/5482ec374223fe02944e9598/279x360/b124c1e4f883830583edd14b71753b3e/sound_applet.png because the theme makes things not stand out...

I don't imagine our popup menu api would let you indent the section under ""Applications..."" ?
"
83236166,3858,mtwebster,2015-03-19T00:35:08Z,"I think we're good here - the volume issue I was talking about, I think it's intentional, where if you raise an application's volume, it increases the main volume.

Can you squash?
"
83735819,3858,JosephMcc,2015-03-19T19:41:56Z,"The changes to the applet broke compatibility with Pithos. No album art, song info, progress or anything is shown. It all worked before. The player can be tested by installing from the repos and just using a free account on Pandora.
"
84065241,3858,pixunil,2015-03-20T16:43:33Z,"Sorry, I couldn't create an account for pandora, so I couldn't try to reproduce.
Do you have got something in your logs?
"
84070777,3858,mtwebster,2015-03-20T17:01:33Z,"I did a little bit of debugging on it, it seems like the program doesn't set the 'rate' property, and everything falls apart from there.. defaulting to rate of 1 or rate of 1000 upon initializing the player interface allows the ui to finish loading, but we get no progress info - you can't seek pandora, but it should be able to show/update the current position.

I can make a dummy account for you
"
84072763,3858,pixunil,2015-03-20T17:07:05Z,"okay, I blamed the desktopentry first, but this sounds more logical…

and according to http://www.pandora.com/restricted:

> We are deeply, deeply sorry to say that due to licensing constraints, we can no longer allow access to Pandora for listeners located outside of the U.S., Australia and New Zealand. We will continue to work diligently to realize the vision of a truly global Pandora, but for the time being we are required to restrict its use. We are very sad to have to do this, but there is no other alternative.
"
84712591,3858,JosephMcc,2015-03-22T22:04:02Z,"@pixunil These are the errors I get in .xsession-errors whenever a song changes with pithos

```
(cinnamon:3348): Cjs-WARNING **: JS ERROR: Exception in callback for signal: PropertiesChanged: Error: value is out of range for Argument 'interval' (type guint32)
timeout_source@resource:///org/gnome/gjs/modules/mainloop.js:60
timeout_add@resource:///org/gnome/gjs/modules/mainloop.js:72
Player.prototype._runTimer@/usr/share/cinnamon/applets/sound@cinnamon.org/applet.js:690
Player.prototype._setStatus@/usr/share/cinnamon/applets/sound@cinnamon.org/applet.js:624
@/usr/share/cinnamon/applets/sound@cinnamon.org/applet.js:444
_emit@resource:///org/gnome/gjs/modules/signals.js:124
_convertToNativeSignal@resource:///org/gnome/gjs/modules/overrides/Gio.js:129
```
"
106990544,4229,dalcde,2015-05-30T05:09:50Z,"I'm not convinced this is the right thing to do. `this._storage` is a map that maps a signal name to an array, and each element of the array is an `[object, signalId, callback]` tuple. Here you are making it loop through the `[key, signal]`, and `signal` will give you the array of all signals with the name `key`, but what we want is the individual signals.

What are the errors you've got?
"
107043683,4229,collinss,2015-05-30T14:07:26Z,"You're right. I misread line https://github.com/linuxmint/Cinnamon/blob/master/js/misc/signalManager.js#L116, and then I forgot that String(array) removes the brackets in Javascript, so it looked like it was passing me the correct values. I guess I shouldn't try to code when I'm tired...
The error I'm getting is http://pastebin.com/M3AGMmtc.
"
107044897,4229,collinss,2015-05-30T14:33:02Z,"I think I figured out the real problem. The systray applet is trying to connect to `Main.statusIconDispatcher`, which is a javascript object. It then gets passed as the first argument to https://github.com/linuxmint/Cinnamon/blob/master/js/misc/signalManager.js#L143, but `GObject.signal_handler_is_connected` requires a gobject, which `Main.statusIconDispatcher` is not. It looks like it will need a different test if it is to work properly with javascript objects.
"
107067925,4229,dalcde,2015-05-30T17:29:42Z,"Does this fix the issue for you: https://github.com/linuxmint/Cinnamon/pull/4231
"
107074807,4229,collinss,2015-05-30T18:44:35Z,"Now I'm getting http://pastebin.com/JwfAkjHp
"
107074899,4229,dalcde,2015-05-30T18:47:01Z,"Force-pushed. Try again
"
107076001,4229,collinss,2015-05-30T19:00:47Z,"Yeah, that seems to fix it. :)
"
110463970,4229,ghost,2015-06-09T18:55:32Z,"I found the same, 2 hours trying to find the reason of the fail...  yumm..
Cjs-WARNING **: JS ERROR: Exception in callback for signal: destroy: TypeError: Object 0x7f7926d0d340 is not a subclass of GObject_Object, it's a Object

disconnectAllSignals not need the same?

Anyway, with the change:
(cinnamon:3134): Cjs-WARNING **: JS ERROR: Exception in callback for signal: destroy: TypeError: signal[0].signalHandlerIsConnected is not a function

I'm try to use this on the indicators, but i thing i need to revert all... There are a solution?
Thanks.
"
110498232,4229,collinss,2015-06-09T20:39:58Z,"@lestcape Did you also build cjs with https://github.com/linuxmint/cjs/pull/24?
"
110502938,4229,ghost,2015-06-09T21:01:25Z,"ups, not... Thanks @collinss 
"
110504690,4229,collinss,2015-06-09T21:07:21Z,"No problem :)
"
110505753,4229,ghost,2015-06-09T21:12:32Z,"Do you know why this is not merged? I don't know what i can do now. This is really useful, i have a lot of signals.
"
110533816,4229,collinss,2015-06-09T23:38:51Z,"No idea. Maybe @clefebvre forgot about it, or maybe he hasn't got around to testing it yet. I imagine he's been really busy with getting ready for 17.2 right now.
"
110552929,4229,ghost,2015-06-10T01:29:28Z,"Ok, thanks again i will wait for the @dalcde recommendation and then decide if i will do a regression or not. As is code for cinnamon i don't know the right decision here.
"
342395314,6992,Odyseus,2017-11-07T07:12:47Z,"Hello, @collinss.

Thank you very much for this! It's a very welcome change.

Just today I was looking at the **Spices.py** file. The mixed `print """"` with `print()` statements on this file alone made my linter go crazy. LOL

I was about to report an *error* in this file (**Spices.py**), but since you are doing these modifications, maybe you can fix it? There is a semicolon [at the end of line 563](https://github.com/collinss/Cinnamon/blob/d41e1abcd220f1745401ec50c9c754b5b665e65b/files/usr/share/cinnamon/cinnamon-settings/bin/Spices.py#L563).

Keep up the good work. :+1:"
342606065,6992,collinss,2017-11-07T20:07:38Z,@Odyseus done
360107760,6992,clefebvre,2018-01-24T11:53:25Z,"@collinss I get this in cinnamon-settings-applets:

Failed to load extension Cinnamenu@json: 'GNUTranslations' object has no attribute 'ugettext'
Failed to load extension weather@mockturtl: 'GNUTranslations' object has no attribute 'ugettext'

Can you rebase this PR also (to trigger CI on it)."
361656610,6992,clefebvre,2018-01-30T16:48:07Z,python3-pam not present in LMDE 3.
361657814,6992,clefebvre,2018-01-30T16:51:33Z,https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=680148
361658138,6992,clefebvre,2018-01-30T16:52:34Z,I might have to backport it into LMDE... it doesn't look like it's getting in Debian soon.
366514863,6992,clefebvre,2018-02-18T13:06:36Z,"I still get the same error:

```
Failed to load extension sound150@claudiux: 'GNUTranslations' object has no attribute 'ugettext'
Failed to load extension Cinnamenu@json: 'GNUTranslations' object has no attribute 'ugettext'
Failed to load extension weather@mockturtl: 'GNUTranslations' object has no attribute 'ugettext'
```
"
366514905,6992,clefebvre,2018-02-18T13:07:30Z,These applets are installed but do not appear in the list with your PR.
456623525,8314,itzexor,2019-01-23T00:51:58Z,"@Odyseus thanks for the review, i'll look into those. This branch is still heavy WIP right now."
456745100,8314,clefebvre,2019-01-23T10:13:13Z,Please rebase.
457940174,8314,brownsr,2019-01-27T18:06:20Z,"I've been trying this PR a number of times.  I can't find any issues with it, and the performance is a definite improvement.  Great work !

Regards

Simon"
464507407,8314,itzexor,2019-02-17T20:52:01Z,"- rebased on master
- fixed indentation issue
- moved some more experimental commits to a new branch https://github.com/itzexor/Cinnamon/commits/menu-various-3 which is branched off of this one, so most of those commits are just these ones.

I think this may be ready for testing and merge if it looks good to everyone. There are a lot of changes here that touch a lot of different parts of the menu so I've probably missed a few things here and there.

The loop warning (which is not new) is fixed on a different branch now, opened as PR #8396"
465630626,8314,clefebvre,2019-02-20T15:41:20Z,"@itzexor Quick black box testing:

- It feels fast!
- Mouse wheel scrolling the all applications category is much smoother than on master!
- Small regression described below

When moving the mouse back and forth between the categories box and the apps box, the apps move 1px to the right/left. This was fixed before, it had to do with a +1 somewhere in the vector box if I remember right."
465664236,8314,clefebvre,2019-02-20T16:56:22Z,"Another small regression:

- Right-click an app, choose uninstall. The pkexec window appears but the menu doesn't close."
465779751,8314,itzexor,2019-02-20T22:24:34Z,"- rebased on master
- fix menu closing for context menu item activation
- hopefully fix vectorBox size/position errors
- added retry timeout loop to 'add to panel' context menu item. sometimes this would fail because the applet instance can take a bit of time to actually be loaded."
1442668375,11530,anaximeno,2023-02-24T01:31:13Z,"So far, I've managed to get the St.Icon (or St.Bin) object that represents the icons of the windows, but I didn't find how to draw those icons in the Cairo context."
1487593921,11530,lestcape,2023-03-28T21:08:27Z,"@anaximeno While maybe your idea can be done, this probably is not the right way to go. You should avoid complex task of painting things from the cjs side and instead create it as an actor and let Muffin to draw it from the c side.

So, I think that instead of try to find a way to draw a texture/St.Icon you should probably try to find a way to set a Clutter actor (your texture) at top of the drawing area. Maybe this code should help you:

https://github.com/linuxmint/cinnamon/blob/master/js/ui/boxpointer.js#L47-L52

The other possibility that i not recommended is try to find the real icon of the app instead of a texture of it and then load it as a pixbuf, to then you can write it in the cairo context."
1487865707,11530,anaximeno,2023-03-29T02:38:22Z,Thanks for the suggestion @lestcape.
1610009974,11530,anaximeno,2023-06-27T18:21:05Z,"If anyone wants to implement this let me know here and I will close my request in favor of their request. I have little free time to do all the necessary research before implementing this the right way, but I may complete it when I have more free time.

Another piece of code I'm using as a reference:
https://github.com/linuxmint/cinnamon/blob/ae4523dd7d88b764bcaa0753389be6f91d964e6d/files/usr/share/cinnamon/applets/grouped-window-list%40cinnamon.org/appGroup.js#L273-L294"
1880245241,11530,anaximeno,2024-01-08T00:26:54Z,"I believe it's **ready for review**.

Tested under **LM 21.3** with **X11** and with **Wayland** (worked without any issues)
Tested under **LMDE 6** (worked without any issues)

Thanks again @lestcape!"
1941647571,11530,mtwebster,2024-02-13T14:33:20Z,"Hi,

So this seems to work pretty well, but with one big issue - the icons are blurry.

I took a look at things, and you're loading the icons correctly, but you end up scaling the entire applet (or some other parent actor) which ruins the icons. You can see this by slowly increasing panel height (like mouse-wheel the slider) and observing the icons' sharpness changing as you go...

I didn't look at how the applet is graphically constructed, but possibly you need to add/improve size calculations so the layout is rendered without scaling (accounting for theme padding/margins maybe), or render the icons separately, on top of the scaled WindowGraphs.
"
1942125433,11530,anaximeno,2024-02-13T18:09:52Z,"The icon is rendered separately I believe, it is added at the top of the window graph drawing area after drawing the window graph in the correct position on the workspace graph, the size of the icons is determined in the workspace-switcher settings so it is not modified according to the size of the workspace on the panel but rather manually by the user, maybe automatically updating the size of the icon according to the size of the workspace switcher applet on the panel could be a solution?"
1942155844,11530,mtwebster,2024-02-13T18:30:14Z,"Hmm assuming these are svgs (most app icons will be I think), maybe it's related to it being rendered 'in between' pixels. Maybe try rounding their position to a whole number? I'm not really well-versed in that sort of thing, but I know we've had icon sharpness issues in the past, when an icon wasn't aligned properly on its canvas."
1942277863,11530,lestcape,2024-02-13T19:42:05Z,"@anaximeno the icon have 12 px by default. It's difficult that it will not be blurry at that size. The smallest icon size Cinnamon uses have 24 pixels and normal app icon have at less 16px, while most of common apps icons are 32px at less. So, use 12px means that the icon was scaled for sure.

I recommended you select always standard icons sizes with more than 24px, and do not allow other size, because other size means a re-scaled the icons. You should see: /usr/share/icons/hicolor for the standard icons size. And also you can have an idea of who may apps have an icon in the select a size and how it luck like if you enter to the folder of the size you want. For example for the size 32px it should be: /usr/share/icons/hicolor/32x32/apps

I don´t think you can improve your implementation in that regards, but you can smart selected the preferred icon size to improve the result."
1944088271,11530,anaximeno,2024-02-14T15:40:36Z,"I would prefer not limiting the feature to only sizes greater or equal to 24px because that would make it almost unusable on smaller screens and panels (here's an example with the panel height = 28):

- **24 px**
![screenshot-auto_1707924409](https://github.com/linuxmint/cinnamon/assets/63073056/a8b35f69-abf3-4645-80b4-6bc36576b13e)

- **8 px**
![screenshot-auto_1707924437](https://github.com/linuxmint/cinnamon/assets/63073056/b80474de-3167-4c4a-99c6-658c611fde5b)

And to be fair the blurriness is barely noticeable on smaller screens, though I suspect it might be more noticeable on wider screens, I will test with a wider monitor and see how bad it is."
1944693831,11530,lestcape,2024-02-14T21:41:34Z,"Separate point: You should take the scalefactor on account in the icon size. Currently you only have on account the position, not the size. It probably should help to be possible display the icon with a better resolution in a screen with a big scalefactor.
"
1945265919,11530,anaximeno,2024-02-15T02:26:25Z,"> Separate point: You should take the scalefactor on account in the icon size. Currently you only have on account the position, not the size. It probably should help to be possible display the icon with a better resolution in a screen with a big scalefactor.

I believe you are talking about the `global.ui_scale` of the monitor, for what I've observed, I believe Cinnamon (or Muffin) already takes care of applying scaling to the icons, so I believe it wouldn't be necessary to scale the size of the icon on the code when instantiating the icon. But I have to take it into account while calculating the position where the icon should be placed because the real size of the icon is bigger (because of the scaling) than the one I sent while creating the icon instance."
2118901700,11530,anaximeno,2024-05-18T17:56:56Z,I will recreate this PR with a cleaner commit log.
2118910323,11530,anaximeno,2024-05-18T18:24:11Z,Replaced by #12202 
15743683,1831,Lusito,2013-04-01T23:31:08Z,"What about the on_desklet_removed callback ?
"
15743727,1831,dalcde,2013-04-01T23:31:57Z,"I was just about to fix that :)
"
16043641,1831,Lusito,2013-04-08T10:41:51Z,"- Is it really good to call the destroy method on the desklet before the fade tween is done ?
- You should probably check if this.timeout is set before disconnecting from it (on the clock desklet).
"
16043916,1831,dalcde,2013-04-08T10:49:33Z,"- You're right. Fixing
- I don't see any reason why this.timeout would be not set.
  P.S. It doesn't hurt if it crashes during removal (bad excuse?)
"
16044018,1831,Lusito,2013-04-08T10:51:48Z,"nevermind the timeout.
"
16047077,1831,clefebvre,2013-04-08T12:20:51Z,"Ok, this is really good. There's one critical issue though... the photoframe rework loads all images into memory. On my box here, this equates in cinnamon using 1.2GB RAM! :)
"
16716542,1831,dalcde,2013-04-21T05:50:51Z,"Fixed memory issues.
"
17057236,1831,autarkper,2013-04-26T06:16:11Z,"Yes, muffin master. No problem when executed in Looking Glass.

Update: Actually that code may only be the indirect cause of the crash, since the crash seems to happen a bit later on.
"
17135335,1831,autarkper,2013-04-28T14:58:39Z,"Below are the Muffin log statements leading up to the crash. Judging by their somehow pointing to the desktop, I have made sure that my Nemo is up to date, but that doesn't help, nor does killing Nemo before restarting.

```
     5  WINDOW_STATE: Putting 0x3200004 (XChat: aut) in the move_resize queue
     6  WINDOW_STATE: Putting 0x4000003 (Applets) in the move_resize queue
     7  WINDOW_STATE: Putting 0x3800004 (deskletMan) in the move_resize queue
     8  WINDOW_STATE: Putting 0x3600003 (cinnamon-d) in the move_resize queue
     9  WINDOW_STATE: Putting 0x3e000ad (Issues · ) in the move_resize queue
    10  WINDOW_STATE: Putting 0x4400003 (Menu) in the move_resize queue
    11  WINDOW_STATE: Putting 0x2438925 (Terminal) in the move_resize queue
    12  PREFS: Notifying listeners that pref THEME changed
    13  THEMES: Setting current theme to ""ClearlooksClassic""
    14  WINDOW_STATE: Putting 0x1000004 (Desktop) in the move_resize queue
    15  PREFS: Notifying listeners that pref MOUSE_BUTTON_MODS changed
    16  VERBOSE: Ungrabbing 0x1000004 sync = 0 button = 1 modmask 0x8
    17  VERBOSE: Ungrabbing 0x1000004 sync = 0 button = 2 modmask 0x8
    18  VERBOSE: Ungrabbing 0x1000004 sync = 0 button = 3 modmask 0x8
    19  VERBOSE: Ungrabbing unfocused window buttons for 0x1000004 (Desktop)
    20  VERBOSE: Ungrabbing 0x1000004 sync = 0 button = 1 modmask 0x0
    21  VERBOSE: Ungrabbing 0x1000004 sync = 0 button = 2 modmask 0x0
    22  VERBOSE: Ungrabbing 0x1000004 sync = 0 button = 3 modmask 0x0
    23  VERBOSE: Ungrabbing 0x4400003 sync = 0 button = 1 modmask 0x8
    24  VERBOSE: Ungrabbing 0x4400003 sync = 0 button = 2 modmask 0x8
    25  VERBOSE: Ungrabbing 0x4400003 sync = 0 button = 3 modmask 0x8
    26  VERBOSE: Ungrabbing unfocused window buttons for 0x4400003 (Menu)
    27  VERBOSE: Ungrabbing 0x4400003 sync = 0 button = 1 modmask 0x0
    28  VERBOSE: Ungrabbing 0x4400003 sync = 0 button = 2 modmask 0x0
    29  VERBOSE: Ungrabbing 0x4400003 sync = 0 button = 3 modmask 0x0
    30  VERBOSE: Ungrabbing 0x4000003 sync = 0 button = 1 modmask 0x8
    31  VERBOSE: Ungrabbing 0x4000003 sync = 0 button = 2 modmask 0x8
    32  VERBOSE: Ungrabbing 0x4000003 sync = 0 button = 3 modmask 0x8
    33  VERBOSE: Ungrabbing unfocused window buttons for 0x4000003 (Applets)
    34  VERBOSE: Ungrabbing 0x4000003 sync = 0 button = 1 modmask 0x0
    35  VERBOSE: Ungrabbing 0x4000003 sync = 0 button = 2 modmask 0x0
    36  VERBOSE: Ungrabbing 0x4000003 sync = 0 button = 3 modmask 0x0
    37  VERBOSE: Ungrabbing 0x3600003 sync = 0 button = 1 modmask 0x8
    38  VERBOSE: Ungrabbing 0x3600003 sync = 0 button = 2 modmask 0x8
    39  VERBOSE: Ungrabbing 0x3600003 sync = 0 button = 3 modmask 0x8
    40  VERBOSE: Ungrabbing unfocused window buttons for 0x3600003 (cinnamon-d)
    41  VERBOSE: Ungrabbing 0x3600003 sync = 0 button = 1 modmask 0x0
    42  VERBOSE: Ungrabbing 0x3600003 sync = 0 button = 2 modmask 0x0
    43  VERBOSE: Ungrabbing 0x3600003 sync = 0 button = 3 modmask 0x0
    44  VERBOSE: Ungrabbing 0x3e000ad sync = 0 button = 1 modmask 0x8
    45  VERBOSE: Ungrabbing 0x3e000ad sync = 0 button = 2 modmask 0x8
    46  VERBOSE: Ungrabbing 0x3e000ad sync = 0 button = 3 modmask 0x8
    47  VERBOSE: Ungrabbing unfocused window buttons for 0x3e000ad (Issues · )
    48  VERBOSE: Ungrabbing 0x3e000ad sync = 0 button = 1 modmask 0x0
    49  VERBOSE: Ungrabbing 0x3e000ad sync = 0 button = 2 modmask 0x0
    50  VERBOSE: Ungrabbing 0x3e000ad sync = 0 button = 3 modmask 0x0
    51  VERBOSE: Ungrabbing 0x3200004 sync = 0 button = 1 modmask 0x8
    52  VERBOSE: Ungrabbing 0x3200004 sync = 0 button = 2 modmask 0x8
    53  VERBOSE: Ungrabbing 0x3200004 sync = 0 button = 3 modmask 0x8
    54  VERBOSE: Ungrabbing unfocused window buttons for 0x3200004 (XChat: aut)
    55  VERBOSE: Ungrabbing 0x3200004 sync = 0 button = 1 modmask 0x0
    56  VERBOSE: Ungrabbing 0x3200004 sync = 0 button = 2 modmask 0x0
    57  VERBOSE: Ungrabbing 0x3200004 sync = 0 button = 3 modmask 0x0
    58  VERBOSE: Ungrabbing 0x3800004 sync = 0 button = 1 modmask 0x8
    59  VERBOSE: Ungrabbing 0x3800004 sync = 0 button = 2 modmask 0x8
    60  VERBOSE: Ungrabbing 0x3800004 sync = 0 button = 3 modmask 0x8
    61  VERBOSE: Ungrabbing unfocused window buttons for 0x3800004 (deskletMan)
    62  VERBOSE: Ungrabbing 0x3800004 sync = 0 button = 1 modmask 0x0
    63  VERBOSE: Ungrabbing 0x3800004 sync = 0 button = 2 modmask 0x0
    64  VERBOSE: Ungrabbing 0x3800004 sync = 0 button = 3 modmask 0x0
    65  VERBOSE: Ungrabbing 0x2438925 sync = 0 button = 1 modmask 0x8
    66  VERBOSE: Ungrabbing 0x2438925 sync = 0 button = 2 modmask 0x8
    67  VERBOSE: Ungrabbing 0x2438925 sync = 0 button = 3 modmask 0x8
    68  VERBOSE: Ungrabbing unfocused window buttons for 0x2438925 (Terminal)
    69  VERBOSE: Grabbing unfocused window buttons for 0x1000004 (Desktop)
    70  VERBOSE: Grabbing 0x1000004 sync = 1 button = 1 modmask 0x0
    71  VERBOSE: Grabbing 0x1000004 sync = 1 button = 2 modmask 0x0
    72  VERBOSE: Grabbing 0x1000004 sync = 1 button = 3 modmask 0x0
    73  VERBOSE: Grabbing window buttons for 0x1000004
    74  VERBOSE: Grabbing 0x1000004 sync = 0 button = 1 modmask 0x8
    75  VERBOSE: Grabbing 0x1000004 sync = 0 button = 2 modmask 0x8
    76  VERBOSE: Grabbing 0x1000004 sync = 0 button = 3 modmask 0x8
    77  VERBOSE: Grabbing 0x1000004 sync = 0 button = 1 modmask 0x9
    78  VERBOSE: Grabbing unfocused window buttons for 0x4400003 (Menu)
    79  VERBOSE: Grabbing 0x4400003 sync = 1 button = 1 modmask 0x0
    80  VERBOSE: Grabbing 0x4400003 sync = 1 button = 2 modmask 0x0
    81  VERBOSE: Grabbing 0x4400003 sync = 1 button = 3 modmask 0x0
    82  VERBOSE: Grabbing window buttons for 0x4400003
    83  VERBOSE: Grabbing 0x4400003 sync = 0 button = 1 modmask 0x8
    84  VERBOSE: Grabbing 0x4400003 sync = 0 button = 2 modmask 0x8
    85  VERBOSE: Grabbing 0x4400003 sync = 0 button = 3 modmask 0x8
    86  VERBOSE: Grabbing 0x4400003 sync = 0 button = 1 modmask 0x9
    87  VERBOSE: Grabbing unfocused window buttons for 0x4000003 (Applets)
    88  VERBOSE: Grabbing 0x4000003 sync = 1 button = 1 modmask 0x0
    89  VERBOSE: Grabbing 0x4000003 sync = 1 button = 2 modmask 0x0
    90  VERBOSE: Grabbing 0x4000003 sync = 1 button = 3 modmask 0x0
    91  VERBOSE: Grabbing window buttons for 0x4000003
    92  VERBOSE: Grabbing 0x4000003 sync = 0 button = 1 modmask 0x8
    93  VERBOSE: Grabbing 0x4000003 sync = 0 button = 2 modmask 0x8
    94  VERBOSE: Grabbing 0x4000003 sync = 0 button = 3 modmask 0x8
    95  VERBOSE: Grabbing 0x4000003 sync = 0 button = 1 modmask 0x9
    96  VERBOSE: Grabbing unfocused window buttons for 0x3600003 (cinnamon-d)
    97  VERBOSE: Grabbing 0x3600003 sync = 1 button = 1 modmask 0x0
    98  VERBOSE: Grabbing 0x3600003 sync = 1 button = 2 modmask 0x0
    99  VERBOSE: Grabbing 0x3600003 sync = 1 button = 3 modmask 0x0
   100  VERBOSE: Grabbing window buttons for 0x3600003
   101  VERBOSE: Grabbing 0x3600003 sync = 0 button = 1 modmask 0x8
   102  VERBOSE: Grabbing 0x3600003 sync = 0 button = 2 modmask 0x8
   103  VERBOSE: Grabbing 0x3600003 sync = 0 button = 3 modmask 0x8
   104  VERBOSE: Grabbing 0x3600003 sync = 0 button = 1 modmask 0x9
   105  VERBOSE: Grabbing unfocused window buttons for 0x3e000ad (Issues · )
   106  VERBOSE: Grabbing 0x3e000ad sync = 1 button = 1 modmask 0x0
   107  VERBOSE: Grabbing 0x3e000ad sync = 1 button = 2 modmask 0x0
   108  VERBOSE: Grabbing 0x3e000ad sync = 1 button = 3 modmask 0x0
   109  VERBOSE: Grabbing window buttons for 0x3e000ad
   110  VERBOSE: Grabbing 0x3e000ad sync = 0 button = 1 modmask 0x8
   111  VERBOSE: Grabbing 0x3e000ad sync = 0 button = 2 modmask 0x8
   112  VERBOSE: Grabbing 0x3e000ad sync = 0 button = 3 modmask 0x8
   113  VERBOSE: Grabbing 0x3e000ad sync = 0 button = 1 modmask 0x9
   114  VERBOSE: Grabbing unfocused window buttons for 0x3200004 (XChat: aut)
   115  VERBOSE: Grabbing 0x3200004 sync = 1 button = 1 modmask 0x0
   116  VERBOSE: Grabbing 0x3200004 sync = 1 button = 2 modmask 0x0
   117  VERBOSE: Grabbing 0x3200004 sync = 1 button = 3 modmask 0x0
   118  VERBOSE: Grabbing window buttons for 0x3200004
   119  VERBOSE: Grabbing 0x3200004 sync = 0 button = 1 modmask 0x8
   120  VERBOSE: Grabbing 0x3200004 sync = 0 button = 2 modmask 0x8
   121  VERBOSE: Grabbing 0x3200004 sync = 0 button = 3 modmask 0x8
   122  VERBOSE: Grabbing 0x3200004 sync = 0 button = 1 modmask 0x9
   123  VERBOSE: Grabbing unfocused window buttons for 0x3800004 (deskletMan)
   124  VERBOSE: Grabbing 0x3800004 sync = 1 button = 1 modmask 0x0
   125  VERBOSE: Grabbing 0x3800004 sync = 1 button = 2 modmask 0x0
   126  VERBOSE: Grabbing 0x3800004 sync = 1 button = 3 modmask 0x0
   127  VERBOSE: Grabbing window buttons for 0x3800004
   128  VERBOSE: Grabbing 0x3800004 sync = 0 button = 1 modmask 0x8
   129  VERBOSE: Grabbing 0x3800004 sync = 0 button = 2 modmask 0x8
   130  VERBOSE: Grabbing 0x3800004 sync = 0 button = 3 modmask 0x8
   131  VERBOSE: Grabbing 0x3800004 sync = 0 button = 1 modmask 0x9
   132  VERBOSE: Grabbing unfocused window buttons for 0x2438925 (Terminal)
   133  VERBOSE: Grabbing 0x2438925 sync = 1 button = 1 modmask 0x0
   134  VERBOSE: Grabbing 0x2438925 sync = 1 button = 2 modmask 0x0
   135  VERBOSE: Grabbing 0x2438925 sync = 1 button = 3 modmask 0x0
   136  VERBOSE: Grabbing window buttons for 0x2438925
   137  VERBOSE: Grabbing 0x2438925 sync = 0 button = 1 modmask 0x8
   138  VERBOSE: Grabbing 0x2438925 sync = 0 button = 2 modmask 0x8
   139  VERBOSE: Grabbing 0x2438925 sync = 0 button = 3 modmask 0x8
   140  VERBOSE: Grabbing 0x2438925 sync = 0 button = 1 modmask 0x9
   141  PREFS: Notifying listeners that pref WORKSPACES_ONLY_ON_PRIMARY changed
   142  WINDOW_STATE: Putting 0x2438925 (Terminal) in the calc_showing queue
   143  WINDOW_STATE: Putting 0x3800004 (deskletMan) in the calc_showing queue
   144  WINDOW_STATE: Putting 0x3200004 (XChat: aut) in the calc_showing queue
   145  WINDOW_STATE: Putting 0x3e000ad (Issues · ) in the calc_showing queue
   146  WINDOW_STATE: Putting 0x3600003 (cinnamon-d) in the calc_showing queue
   147  WINDOW_STATE: Putting 0x4000003 (Applets) in the calc_showing queue
   148  WINDOW_STATE: Putting 0x4400003 (Menu) in the calc_showing queue
   149  WINDOW_STATE: Putting 0x1000004 (Desktop) in the calc_showing queue
   428  ** Message: applet now removed from the notification area
```
"
17177677,1831,autarkper,2013-04-29T16:29:23Z,"This line from the log is probably important:

```
   141  PREFS: Notifying listeners that pref WORKSPACES_ONLY_ON_PRIMARY changed
```

It turns out that I have that pref enabled. Turning the pref off enables me to restart Cinnamon without any problem. Turning the pref on again will kill Cinnamon instantly.
"
17184875,1831,autarkper,2013-04-29T18:29:11Z,"I think if we could just pass null into get_mouse_window we wouldn't have any problem:

```
    let window = global.screen.get_mouse_window(null); /
```

But that gives us:

```
JS ERROR: !!!     stack = '""(""Argument 'not_this_one' (type interface) may not be null"")@gjs_throw:0
```

So, I'm wondering, how do we change the type interface to accept null?
"
17199218,1831,dalcde,2013-04-29T22:40:19Z,"It <i>should</i> be able to accept null as argument, according to the description in muffin :(
"
17321322,1831,autarkper,2013-05-02T05:38:12Z,"Found guidance here: https://live.gnome.org/GObjectIntrospection/Annotations
"
9441055,1273,AlbertJP,2012-10-15T10:51:29Z,"You can just type #1271 if you want to link to another issue or pull request, no need to type HTML for that.
"
9441150,1273,AlbertJP,2012-10-15T10:55:09Z,"We only need this with Gnome 3.6, right?
"
9445440,1273,leigh123linux,2012-10-15T13:51:52Z,"@AlbertJP  Yes that is correct.
"
9597985,1273,bjo81,2012-10-19T11:31:32Z,"Works with Gnome 3.6 on Arch Linux.
"
10268918,1273,orschiro,2012-11-11T16:28:28Z,"I guess I am facing the same issue. I am running Cinnamon 1.6 on Arch and I cannot run gnome-screensaver. 

It will simply look like that and nothing happens:

```
[orschiro@thinkpad ~]$ gnome-screensaver
_
```
"
10324980,1273,clefebvre,2012-11-13T12:44:08Z,"Thanks for this Leigh. It helps. 
We got this done in Mint 14 and I would encourage all distributions to fix this. 
I disagree with this being a fix that needs to go in Cinnamon itself though. This should be fixed at the distribution level.
"
10328619,1273,AlbertJP,2012-11-13T14:50:04Z,"@clefebvre You basically want every distribution to package this, because you want to avoid problems on those that still run Gnome 3.4?
"
10332257,1273,leigh123linux,2012-11-13T16:25:26Z,"@clefebvre 

Unless you register cinnamon at feedesktop.org this isn't going to be easy, why are you making it hard.
"
10332762,1273,mtwebster,2012-11-13T16:39:31Z,"@leigh123linux what about all the programs that are OnlyShowIn=GNOME or Unity.  Adding Cinnamon would essentially break every 3rd party application that hasn't included Cinnamon in their desktop file, wouldn't it?  Maybe I don't quite understand the desktop standards, but that's the gist I got from it.
"
10335583,1273,leigh123linux,2012-11-13T17:51:25Z,"@mtwebster  I was frustrated at Clem's refusal to fix this.

I can't see any distro using gnome-screensaver-3.6 that will agree with Clem on this as it will breaks it for gnome

screensaver only starts for fallback in gnome

AutostartCondition=GNOME3 if-session gnome-fallback 
"
10439108,1273,abarysiuk,2012-11-16T07:54:09Z,"So is there any fix for this? Or workaround to get it works?
"
10439230,1273,orschiro,2012-11-16T08:00:55Z,"Hasn't it been fixed already?

It least with the last update to 1.6.7 gnome-sreensaver is working for me
now.

Robert

On 16 November 2012 08:54, abarysiuk notifications@github.com wrote:

> So is there any fix for this? Or workaround to get it works?
> 
> —
> Reply to this email directly or view it on GitHubhttps://github.com/linuxmint/Cinnamon/pull/1273#issuecomment-10439108.
"
10863559,1273,dtrunk90,2012-11-29T19:55:33Z,"how to deactivate the screensaver now? i dont want a screensaver. i just want to lock my screen, so deinstalling gnome-screensaver isn't an option...
"
72501584,3877,dalcde,2015-02-02T17:44:12Z,"Just some nit-picking - you can ignore me if you wish :)
I think using a date object for determining the time is overkill. A simple Math.round(time/60) or something like that would do.

In fact it seems like that's how it originally worked. Why did you change the way it works, apart from removing slight code duplication?
"
72503321,3877,michaeldjcox,2015-02-02T17:54:07Z,"Nit-pick away - glad to have some help with this. 

I went through similar attempts to fix this with mint 16 but the changes never got pulled despite numerous ""+1""s.  I'm very keen to do everything possible this time to make sure the fix is acceptable, works for everyone, and gets pulled into the next release of cinnamon.

Regarding the time handling. I lost some faith in some of the existing calculations - saw some strange results, couldn't explain the code that was there, and saw the opportunity to consolidate similar calculations made in several places into one function call.

I can have a look to amending the function I created. 
"
72504149,3877,clefebvre,2015-02-02T17:58:27Z,"Hi Michael, thanks for persisting with this. I remember the original PR. I hope we find a solution that works for all devices out there.

I can help testing this in a few days if nobody else has a single battery device (I'm using the laptop to work on betsy atm).
"
72505983,3877,dalcde,2015-02-02T18:07:57Z,"It works well on my laptop. Curiously the original version does not. (Lenovo E440, single battery, for the record)

However, now I have two labels in the popup, one saying ""... hours ... minutes remaining"" and the other showing ""Laptop Battery"", both with the remaining percent label. I think the idea is to show the time remaining for your primary battery, and then percentage remaining for the other batteries below. But would it make a bit more sense if the ""Laptop Battery"" item is not shown for the primary battery in use?
"
72508141,3877,michaeldjcox,2015-02-02T18:18:41Z,"If I have two batteries I am interested knowing the total time remaining.

But I take your point if there is only one battery then the % remaining is there twice.

So we could either:

1) remove the percentage from the top line if there is only one battery...
2) remove the laptop battery / % entry

I prefer the former really because it seems to offer a more consistent experience across laptop types and if I remove one of my batteries altogether. 
"
72652165,3877,dalcde,2015-02-03T13:45:03Z,"Just spotted another issue: The percentage remaining does not show up when I am charging. Presumably because it thinks the AC is the primary battery, and is unable to retrieve a percentage reading from it.
"
73009614,3877,michaeldjcox,2015-02-05T08:15:28Z,"ideally it would show time left until fully charged. Need to look into this. I think the information is available.
"
73082710,3877,clefebvre,2015-02-05T16:58:13Z,"Hi,

I tested the applet on a macbook pro. On the master branch the battery doesn't show the remaining time, only the percentage. This is due to ""device"" (returned in GetPrimaryDeviceRemote) being an array.

This PR fixes the issue.

## Remaining issues: 
- As mentioned above, the percentage looks duplicated when there's only one device (since the overal value is identical to the value of the single battery). In my example I see ""3 hours remaining ... 70%"" and just below I see ""Battery ... 70%"".
- When plugged on AC power, the overall information disappears and all I see then is ""Battery .. 70%"" (This time with a charging icon). The problem though, is that the percentage is no longer visible in the panel itself.
"
73083784,3877,clefebvre,2015-02-05T17:03:25Z,"In the cinnamon power settings, you can see the remaining time until full charge. The source code for this is in cinnamon-control-center (https://github.com/linuxmint/cinnamon-control-center/blob/master/panels/power/cc-power-panel.c#L230)
"
73089042,3877,michaeldjcox,2015-02-05T17:31:15Z,"I will try and fix the remaining issues.

I'm also separately addressing the cinnamon-control-center now.

There I only see the text ""using Battery Power"" (no time remaining) and the T440s internal battery is shown. The status of the 2nd external battery is only shown if its full discharged or fully discharged 

Theres some kind over overarching device that reports the overall time across the two batteries and the overall percentage. 

The applet has access to that but the cinnamon control panel does not. I'm not sure how to get access from the C++ code of the cinnamon control panel.

But thats an issue for another repo, fork and pull request....
"
73196316,3877,michaeldjcox,2015-02-06T07:24:26Z,"So I found that the ""time"" available with the device shows the time remaining until charged when the AC power is plugged. This is good: I can add the time across the batteries and display that in the menu top summary line. 

I can also show this on the panel which I will do next time I'm near a power source.

What I don't have any more is an overall percentage of battery charge across the two batteries.

My fixes are also a bit ""hacky"".

The reason for both these things is that the picture of the world I get when the battery is discharging is:

```
Composite (96% 11hrs 21 min DISCHARGING)
|
+--Battery 0 (99% unknown UNKNOWN)
|
+- Battery 1 (96% 9hrs 7min DISCHARGING) 
```

(This reflects what can be seen with acpitool -B)

But when the AC Adapter is plugged in I get:

```
+--Battery 0 (99% 0hrs 5min CHARGING)
|
+- Battery 1 (96% 9hrs 7min CHARGING) 
```

(This does not reflect what is in acpitool -B)

The GetPrimaryDeviceRemote call seems to return with error when the AC power is plugged in.

Theres good information available in upower and acpitool but I'm not sure this applet is getting a consistent picture from whatever is feeding this information.

Work continues...
"
97038698,3877,clefebvre,2015-04-28T12:10:12Z,"Hi Michael,

A quick follow up on this. I used your feedback and redesigned the applet to make the code much simpler than before. I also changed the rationale so it lists all devices and information for each of them. Finally I took the opportunity to revamp the UI as well. 

Most issues should be solved now. The guys also merged brightness and keyboard backlight into it (prior to my changes so I had to continue on master and close this PR). The remaining thing I didn't take care of is for cases with multiple laptop batteries with none of them defined as primary... in this case the panel shows the info for the first one rather than an average of the values.
"
159186342,3877,michaeldjcox,2015-11-24T07:45:02Z,"Thank you.

Finally upgraded to 17.2 - without a hitch.

The power applet and control panel still does not really work well for 
me on reporting status of multiple batteries on this particular laptop.

I miss seeing the time remaining on the panel and a cumulative % 
indication.

I'm not sure whether % time remaining above the brightness I see in the 
applet is for one battery or cumulative.

If you restart cinnamon the % charge remaining in the panel disappears 
and you cannot get it back

The battery info in the control panel does not list all the batteries 
and their status

I will take a look again as for some reason knowing what my batteries 
are up to seems to be very important to me!

Unless you are aware of any work already in hand here.

Hopefully I can make a contribution suitable for adoption.

Regards,

Michael

On 28/04/15 13:10, Clement Lefebvre wrote:

> Hi Michael,
> 
> A quick follow up on this. I used your feedback and redesigned the 
> applet to make the code much simpler than before. I also changed the 
> rationale so it lists all devices and information for each of them. 
> Finally I took the opportunity to revamp the UI as well.
> 
> Most issues should be solved now. The guys also merged brightness and 
> keyboard backlight into it (prior to my changes so I had to continue 
> on master and close this PR). The remaining thing I didn't take care 
> of is for cases with multiple laptop batteries with none of them 
> defined as primary... in this case the panel shows the info for the 
> first one rather than an average of the values.
> 
> —
> Reply to this email directly or view it on GitHub 
> https://github.com/linuxmint/Cinnamon/pull/3877#issuecomment-97038698.
"
255592300,5829,anandrkris,2016-10-23T14:39:40Z,"Hope this gets merged - lot of votes for this :)
https://github.com/linuxmint/Cinnamon/issues/1050
"
255773373,5829,anandrkris,2016-10-24T15:25:45Z,"Also, a suggestion - when icon is visible in the corner, can the action be displayed as a tooltip on hover over icon?
Show All workspaces, windows, custom action, etc
"
255898025,5829,Odyseus,2016-10-24T23:51:15Z,"Hello, @anandrkris.

I like your suggestion about adding a tooltip to the hot corners icons. I have been doing some tests but, sadly, without success. No matter how or at which point I add the tooltip, it never shows on icon hover.

Here is a shortened version of what I did in case someone has any suggestion:

After adding the import for the tooltip module in the **js/ui/hotCorner.js** file...

``` javascript
const Tooltips = imports.ui.tooltips;
```

...I simply added the tooltip to the icon inside the **setProperties** method like this...

``` javascript
if (this.icon) {
    new Tooltips.Tooltip(this.iconActor, ""Tooltip text."");
    this.iconActor.show();
} else
    this.iconActor.hide();
```

Is it even possible for the hot corners icons to have a tooltip?
"
255988801,5829,NikoKrause,2016-10-25T09:47:03Z,"@Odyseus 
Try this.

``` js
this.tooltip = new Tooltips.Tooltip(this.iconActor, ""Tooltip text."");
```
"
256048100,5829,Odyseus,2016-10-25T14:19:01Z,"Hello, @NikoKrause.

I already tried that. The very first thing that I tried was to create the tooltip inside **HotCorner._init** and then use the **set_text()** method inside the **setProperties** method to apply the correct tooltip text. It's pretty straight forward and it works in every applet code that I ever used, except here with the hot corners.
"
256064129,5829,NikoKrause,2016-10-25T15:12:14Z,"@Odyseus
Does my suggestion doesn't work?
I tried your code and added `this.tooltip =`, which you forgot before `new`
And it showed the Tooltip on icon hover like expected.
"
256102262,5829,Odyseus,2016-10-25T17:24:42Z,"@NikoKrause.

> Does my suggestion doesn't work?

Like I said, I already tried that. I used the exact code that you posted and it didn't work.

> I tried your code and added this.tooltip =, which you forgot before new

I didn't really forget. It isn't needed to store the tooltip in a new variable because the tooltip is already _added_ to the element passed by the first argument of the constructor ([here](https://github.com/Odyseus/CinnamonTools/blob/master/Applets/0dyseus%40QuickMenu/applet.js#L375) is a functional example that I use in one of my applets). Eighter way, like I stated before, I already added `this.tooltip =` in front of that line and it still doesn't work for me.

I did my tests in all of my 4 Cinnamon systems with the same results. The tooltip isn't shown when hovering over the hot corner icon.

I will give this rest for now. Maybe someone else can create a different pull request that adds the tooltips to the hot corners icons.
"
256126139,5829,NikoKrause,2016-10-25T18:25:56Z,"@Odyseus 
Could you check if my branch works for you https://github.com/NikoKrause/Cinnamon/tree/hot-corner-tooltip? I created a commit with your code in there https://github.com/NikoKrause/Cinnamon/commit/60993434fb7410879a943358c02ce0ff334cb2a7.

Just replace the hotCorner.js file in `/usr/share/cinnamon/js/ui` with the file from my branch.

It looks like this on my machine:
![bildschirmfoto vom 2016-10-25 20-25-10](https://cloud.githubusercontent.com/assets/8415124/19698860/3753f7b8-9af1-11e6-99d5-cecf422537f5.png)
"
256152047,5829,Odyseus,2016-10-25T19:35:00Z,"@NikoKrause

No, it still isn't working on any of the 4 Cinnamon systems I tried before. **But**, I tried it on a fith system (an Archlinux system with Cinnamon) and all tooltips work like a charm here! This is very strange!

I hesitate to add to this pull request something that I can't make work reliable on all my systems. If you want to add this feature yourself and send the pull request, [here is a Gist](https://gist.github.com/Odyseus/084193105d6bd8fc9cc06da4e4f4a237) with the **hotCorner.js** file with icons tooltips fully implemented.
"
256173144,5829,Odyseus,2016-10-25T20:56:11Z,"@NikoKrause and other code reviewers.

Ignore the previous posts discussing problems while setting the tooltips for the hot corners icons. I had an extension enabled that was interfering with the hot corners code. I disabled it and everything started working as it should.

@anandrkris: If this PR _doesn't make it_, NikoKrause just send a [pull request](https://github.com/linuxmint/Cinnamon/pull/5852) adding the tooltips to the hot corner icons.

Apologies for the _noise_.
"
256177006,5829,collinss,2016-10-25T21:10:42Z,"@Odyseus A couple notes/suggestions.
- You don't need to worry about the translations. Putting `_()` around the string is enough to insure that it will get translated for the next release.
- `Gtk.HBox` and `Gtk.VBox` were deprecated in favor of `Gtk.Box`, which adds an additional orientation property to make it vertical. Unless you need the extra layout features of `Gtk.Grid` (which you do not here), I would recommend using `Gtk.Box`.
- I would recommend adding the tooltip to the actor as soon as you create it. If you need to make sure the tooltip is not shown under certain circumstances, you can set the text to an empty string later (you don't need to do this if your actor is hidden as it wont show anyway). The way you did it above could lead to multiple tooltips on the same actor, all competing with each other.
"
256218304,5829,Odyseus,2016-10-26T00:35:21Z,"Hello, @collinss.
- **About translations:** Got it.
- **About `Gtk.Box`s:** I have chosen a `Gtk.Grid` because I couldn't make the `Gtk.Box` _""look good""_ (basically, I couldn't understand the arguments passed to **pack_start**). But since you recommended me to use a `Gtk.Box`, I gave it another try and I successfully made it work.
- **About the tooltips:** The code that I posted was just an example. So that someone willing to help me out finding the root of my problem could quickly set up a tooltip with just two lines of code. Thanks to NikoKrause's assistance, I figured that the _problem_ was on several of my systems.

Thanks for your notes/suggestions, collinss.

Pull request updated.
"
256671519,5829,anandrkris,2016-10-27T15:15:38Z,"Thanks @Odyseus for listening :smile: and again for your efforts.  :clap: 
"
323739783,6821,NikoKrause,2017-08-21T13:05:22Z,This would hardcode the linuxmint logo. It should show the logo of the used OS. Is there a way to use the OS logo? Not sure if there is a general path for it.
323769465,6821,leigh123linux,2017-08-21T15:09:42Z,You will probably need to add some image size constraints as well.
323770972,6821,dominichayesferen,2017-08-21T15:14:35Z,"I'm personally not sure about Icons, nor constraints for it, as I'm personally a newbie to Python+GTK and constructing a GTK Section with Python Code..."
324153270,6821,dominichayesferen,2017-08-22T21:12:50Z,"Ok, I've been trying a method of using the icon set's icon for the Logo, so that it can get` distributor-logo` to use as the icon, but I'm currently at another issue, importing `gtk` (which is needed for this method) causes this error:
```
Gtk-Message: Failed to load module ""unity-gtk-module""
Loading Info module
Traceback (most recent call last):
  File ""/usr/share/cinnamon/cinnamon-settings/cinnamon-settings.py"", line 555, in button_press
    self.side_view_nav(widget, None, category)
  File ""/usr/share/cinnamon/cinnamon-settings/cinnamon-settings.py"", line 115, in side_view_nav
    self.go_to_sidepage(cat, filtered_path)
  File ""/usr/share/cinnamon/cinnamon-settings/cinnamon-settings.py"", line 128, in go_to_sidepage
    sidePage.build()
  File ""/usr/share/cinnamon/cinnamon-settings/bin/SettingsWidgets.py"", line 123, in build
    self.module.on_module_selected()
  File ""/usr/share/cinnamon/cinnamon-settings/modules/cs_info.py"", line 159, in on_module_selected
    icon_theme = gtk.icon_theme_get_default()
  File ""/usr/lib/python2.7/dist-packages/gi/__init__.py"", line 64, in __getattr__
    raise AttributeError(_static_binding_error)
AttributeError: When using gi.repository you must not import static modules like ""gobject"". Please change all occurrences of ""import gobject"" to ""from gi.repository import GObject"". See: https://bugzilla.gnome.org/show_bug.cgi?id=709183
```


...and the code itself that causes this error (with gtk imported at top):
```
                icon_theme = gtk.icon_theme_get_default()
		pixbuf = icon_theme.load_icon(""distributor-logo"", 48, 0)
	        image = Gtk.Image(pixbuf)
	        widget.pack_start(image, True, False, 0)
	        widget.pack_end(image, True, False, 0)
	        settings.add_row(widget)
```

Also, the references I'm using: http://www.pygtk.org/pygtk2reference/class-gtkicontheme.html
https://stackoverflow.com/questions/5746620/pygtk-set-icon-of-window-with-stock-image?rq=1"
324275165,6821,dominichayesferen,2017-08-23T09:31:49Z,"Other than that, so far, I've managed to make it a 48x48 Stock Open Icon...
![screenshot from 2017-08-23 11-36-53](https://user-images.githubusercontent.com/11057934/29611913-61edddce-87f7-11e7-8a27-fb315c8c3504.png)
"
324290963,6821,dominichayesferen,2017-08-23T10:39:33Z,"Bingo! I've figured out how to make it work, now I just need to find out how to make this thing bigger, and I'll commit it to this Pull.
![screenshot from 2017-08-23 11-38-47](https://user-images.githubusercontent.com/11057934/29612019-bb157ae2-87f7-11e7-97b7-f63bb1e33430.png)
"
324296165,6821,dominichayesferen,2017-08-23T11:04:53Z,"Nevermind about the size, looks like it won't get any bigger, mainly due to the icon set's restrictions, and that GTK keeps complaining that a bigger icon size, like 48, is ""invalid""...

Submitted the non-hardcoded one to the Pull just now."
324373096,6821,collinss,2017-08-23T15:30:40Z,"@feren the function you are using to set the icon size isn't looking for a pixel size, but rather a stock size. This is a number between 1 and 6. The one I think you want to use is 6.
Also, I noticed that there are a bunch of tabs in there. You will need to change those to spaces. It messes with indentation, which is very important in python. "
324586864,6821,dominichayesferen,2017-08-24T09:41:43Z,"@collinss How do you change Tabs to Indents? (I'm having trouble now and then with indent issues, and have ended up doing it in Thonny, because that's the surefire way to prevent nonsense indentation errors)
Ok, thanks for the info for the numbers, I'll try it"
324588113,6821,dominichayesferen,2017-08-24T09:46:54Z,"@collinss Ok, I've set it to 6, but the problem I can see with this is that icon sets will restrict how big the icon can be, for example, Mint-X/Y are both limited to 16x16 for 'distributor-logo'..."
324632837,6821,leigh123linux,2017-08-24T13:21:06Z,"@feren python has a tool to fix your indent issues that are still present

```
/usr/lib64/python2.7/Tools/scripts/reindent.py cs_info.py
```


[fix_indent.patch.txt](https://github.com/linuxmint/Cinnamon/files/1248916/fix_indent.patch.txt)
"
325156377,6821,dominichayesferen,2017-08-26T19:13:00Z,"I'm not really sure if I can do really anything else to this now, I did try moving the OS Name below the logo, but that just made the Text and Logo split sides in the first grid section, rather than it being text below image..."
336413066,6821,clefebvre,2017-10-13T10:20:29Z,"I don't mind the idea too much, but the implementation is awful. It even removes features... looks like a mistake.. 

I'll close this PR as it's worthless as it is. Please create an issue for the idea itself."
327183588,6694,clefebvre,2017-09-05T13:58:19Z,"I don't mind improving this and I don't even mind considering a dependency on libinput (i.e. that would result in basically always using that driver), but no matter what happens, things have to work well out of the box.

Here are my findings on a Macbook Pro:

with LibInput:

- two-finger scrolling works by default but can't scroll with one finger only
- right-click is done by clicking invisible right part of touchpad, two-finger emulates middle-button, so does 3finger click
--> works if clickpad action is set to use multiple fingers.

with Synaptics:

- two-finger scrolling works by default but can't scroll with one finger only
- can't right-click, can't middle-click
--> works if clickpad action is set to use multiple fingers.

As you can see the default situation isn't acceptable with synaptics.

Losing the ability to edge-scroll is OK if and only if selecting 2-finger-scrolling by default works on touchpads which don't support it (i.e. if it falls back to edge-scrolling for these).

I'll have to test that with another laptop to make sure."
327185594,6694,leigh123linux,2017-09-05T14:05:06Z,@clefebvre  Maybe defer this till Mint rebases to the next LTS then remove synaptics support completely?
328118273,6694,clefebvre,2017-09-08T14:28:37Z,"Well, we don't really need to wait. We just need to figure out how to make things work for the most people out of the box."
329986844,6694,AlbertJP,2017-09-16T18:33:57Z,"@clefebvre, thanks for the review. Your Mac does right clicks differently than my ThinkPad X1 Carbon, so it's good to check the behaviour on multiple laptops. On my laptop Synaptics emulates the bottom mouse buttons in any case and I do not think I can _disable_ that with the synaptics driver.

You're right that it is worth testing the code on a laptop that lacks 2-finger scroll support, but those are probably hard to find. My previous laptop, a 2006 ThinkPad supports it (the touchpad is, however, pretty bad at detecting 3-finger gestures). I'll see if I can find another old laptop to check the touchpad behaviour.

Edit: Found a test subject, an HP Pavilion dv4245EA from 2005 which currently runs an older Mint. It doesn't boot from USB, however. I'm just trying to use the existing grub to load the live system of Mint 18.
The touchpad is an Alps GlidePoint, it doesn't support two-finger scrolling."
329993514,6694,AlbertJP,2017-09-16T20:39:40Z,"Using Mint 17, I can confirm that on the HP laptop, synaptics does _not_ fall back to edge scrolling if I set the requested configuration options manually (that was already reported the previous time we introduced a combobox for scrolling: https://github.com/linuxmint/cinnamon-settings-daemon/commit/1eba56f1e89920c7cf5125ad9a21c704a48baf91).
It turns out the laptop has a number of hardware issues including faulty USB ports & I once swapped out the DVD drive to fix another laptop, so I currently don't see a way to boot Mint 18 on it and test libinput. Tomorrow I'll be able to check on another 2005 HP laptop which has no hardware issues that I'm aware of, and should be able to boot from USB."
330025747,6694,AlbertJP,2017-09-17T07:08:20Z,"I managed to boot the dv4245EA using Plop Boot Manager and the USB port was - by sheer luck - working stably for long enough to nearly install Mint 18 on the machine, even though dmesg was full of hardware errors. I only had to do a grub install afterwards as the installer locked up when installing language packs. Will try installing libinput later today."
330033970,6694,AlbertJP,2017-09-17T10:15:09Z,"Test results with the HP Pavilion dv4245EA (2005), touchpad: Alps Glidepoint

Right-click method: makes no difference, since the device has physical buttons.

Libinput:
- edge scrolling by default

Synaptics driver:
- no scrolling by default, can be set to edge scrolling

Your laptop has issues with the default right-click mode, this old one with the default scrolling mode when Synaptics is used. When I find time for it, I will a mode: Automatic or Default, which will use the default values of libinput (which are quite sensible and depend on the device's capabilities) and will enable all methods in synaptics as is currently default in Mint 18."
330949691,6694,AlbertJP,2017-09-20T19:03:23Z,"I have just implemented an automatic mode in c-s-d which takes libinput's default & enables all scroll & click methods on synaptics. Please test with your Mac, @clefebvre. It will probably not be until next week that I have access to the old HP again."
334124993,6694,clefebvre,2017-10-04T11:21:01Z,"So...

This new automatic mode works perfectly on the macbook, with both drivers."
334169952,6694,clefebvre,2017-10-04T14:16:38Z,"On an old HP laptop, automatic works perfectly with synaptics... but I get no scrolling at all with libinput.

I think that touchpad only supports edge scrolling, so when scrolling-method is set to automatic and libinput is installed, we get no scrolling at all.

I know libinput is supposed to be better... but that kinda sucks."
334170315,6694,clefebvre,2017-10-04T14:17:50Z,"With libinput in automatic mode, could we maybe detect the capabilities of the touchpad? If it doesn't support two-finger scrolling, we should set the scrolling method to edge-scrolling."
334173720,6694,clefebvre,2017-10-04T14:28:07Z,"ok, don't mind the previous comment...

There is a ""libinput Scroll Methods Available"" property, but I just found out the touchpad supported two-finger scrolling.

It's just a really bad touchpad and it barely works... if your two fingers are too close, it just sees them as one finger and moves the cursor :)

OK, so anyway...

Long story short, the code is fine and works well with synaptic in auto mode.

We then need to decide whether to ship with libinput or not in the 18.3 Cinnamon edition, and it looks like we might be able to :)

Thanks for your patience and your work @AlbertJP!

"
334315939,6694,AlbertJP,2017-10-04T23:13:51Z,"> There is a ""libinput Scroll Methods Available"" property, but I just found out the touchpad supported two-finger scrolling.
>
> It's just a really bad touchpad and it barely works... if your two fingers are too close, it just sees them as one finger and moves the cursor :)

I'd like to be able to measure how comfortable a touchpad works :) the Alps Glidepoint which I encountered in an HP laptop wasn't exactly a nice touchpad either, but libinput correctly detects it capabilities. You could file a bug report with libinput to see if the default can be changed or two-finger detection improved, they appear to be quite helpful with issues like these."
358177994,7187,claudiux,2018-01-17T02:46:48Z,"Hi,

It seems to be OK.

Some new strings have to be translated in settings-schema.json:
""% of nominal volume""
""Maximum volume control""
""You can try to increase the volume of your sound card up to 150% of its nominal value. Use with caution. You can also set a value less than 100%, for example on a child's computer.""

As an indication, I attach a .pot file and es.po, fr.po and it.po.

[es.po.txt](https://github.com/linuxmint/Cinnamon/files/1637551/es.po.txt)
[fr.po.txt](https://github.com/linuxmint/Cinnamon/files/1637552/fr.po.txt)
[it.po.txt](https://github.com/linuxmint/Cinnamon/files/1637553/it.po.txt)
[sound@cinnamon.org.pot.txt](https://github.com/linuxmint/Cinnamon/files/1637554/sound.cinnamon.org.pot.txt)

Best regards,

claudiux"
360982587,7187,NikoKrause,2018-01-27T12:45:53Z,"I really wanted this feature for a long time. I tested your applet in spices. I guess that's pretty much the same as this PR.

I like that the slider is a little bit magnetic at 100%. That's also what @clefebvre wanted it to be.
A few issues I have:
(1) The slider is at the very edge. This looks ugly. Look at the default sound applet, where it's aligned with the text.
(2) Not sure about the colors. The applet uses symbolic icons so it looks nice with the other default applets.
(3) I wouldn't make the settings to be a counter, but a checkbox. Either I want it to go above 100% or I don't want to to go above 100%.
(4) Your counter just counts up to 150%. I checked on a lot of machines and the max volume on all of them is 153%.

Something more difficult but nice to have would be a mark at 100%."
361102737,7187,claudiux,2018-01-28T22:36:53Z,"Hi @NikoKrause,

(1) I have just solved the problem of size.
(2) A new option in settings allows to don't use colors.
(3) I prefer that there is a counter. I installed this applet on my daughter's computer (7 years old) and set the maximum volume at 70%. With a checkbox, this would no longer be possible.
(4) At 153%, the sound becomes very painful. I prefer to leave this margin. If this feature was really required, it would be easy to modify the settings-schema.json file.

The mark at 100% already exists in v1.2.0.

The v1.3.0 with all these new features is coming soon.


"
361144469,7187,collinss,2018-01-29T05:33:17Z,"I personally have a couple of issues with the spinbutton in the settings.

The first is in terms of usability. Whenever looking at adding configuration/complexity to the user experience, I try to weigh it against the potential gain. A spinbutton is going to be potentially more confusing and less obvious to the user than a checkbox would be. The only real gain I see is (as you said) being able to set the value to something less than 100% in situations where you want to limit the volume for someone who might otherwise abuse it. This case is somewhat rare, and it's easy enough for the person to get around this by simply going to the settings and changing it. A much better approach is to [set the max volume](https://askubuntu.com/questions/219739/adjust-max-possible-volume-in-pulseaudio#219925) that pulseaudio allows. It requires more know-how to overcome, and has the added bonus of still working with the much simpler checkbox.

That brings me to my other issue. While 153 is the _default_ maximum, it isn't the _guaranteed_ maximum. As mentioned above it is possible to change this value to 70, 170 or even 7000 if you wanted, and I believe it could depend on the device as well. While it is probably rare for the value to be different than the default, there is no single value that can be guaranteed to work for everyone."
361147826,7187,collinss,2018-01-29T05:59:47Z,"Another issue with this pr is that you have a stylesheet included in the applet directory. The styling for system applets should instead be added to the default cinnamon theme (found in [data/theme/cinnamon.css](https://github.com/linuxmint/Cinnamon/blob/master/data/theme/cinnamon.css)) as well as the other mint cinnamon themes. Also, I would recommend using pseudo classes instead of having a separate style class for each state."
361154565,7187,JosephMcc,2018-01-29T06:49:03Z,I'd have to agree with 2 issues pointed out by others. The margin at the left of the volume icon could be improved and the color changing part should be removed.
361627210,7187,clefebvre,2018-01-30T15:23:11Z,"Hi @claudiux, many thanks for working on this. This is something we committed to fixing for the next release. We weren't quite sure how to tackle it. Your ideas and implementation helped a lot.

We've been discussing this a lot lately. Your idea to set a max volume was excellent. We weren't quite sure how to implement the marker and magnetism in clutter, that was brilliant too.

We need a global setting rather than an applet setting because we want this to affect not only the applet, but the sound settings (in Cinnamon) and the media-keys OSD (in CSD).

I've got an implementation for this now and a couple of PRs. I'll link them here and close this one."
361628984,7187,clefebvre,2018-01-30T15:28:35Z,"Oh, I forgot to comment on the 153%... 

This is an arbitrary value in PulseAudio. It doesn't correspond to any particular device, it's just the percentage value which corresponds to a gain of +11dB.

https://freedesktop.org/software/pulseaudio/doxygen/volume_8h.html#a353b44010677b005abd390af732eb86e

https://github.com/pulseaudio/pavucontrol/commit/297af52ae5581f5373bb008f60c7aac858bb365a

Unless exactly +11dB is proved to be somewhat a key value in terms of acoustics, it really doesn't matter whether it's 153% or 150%... the former looking really weird from a user point of view.

So with that in mind, 150% makes more sense.

Theoretically you could set the volume to whatever you want. PA won't stop you from going over 153%... in practice you'll quickly get clipping and sound distortion, and you can also damage your hears and/or your speakers... so it's not a great idea to let people go over a certain value.

I've done like @claudiux in my implementation, I've used 150% as the upper limit.
"
361636119,7187,clefebvre,2018-01-30T15:49:13Z,cdesktop: https://github.com/linuxmint/cinnamon-desktop/commit/d35987157f5d35c3b19db9d5f5adc19633f49589
361637353,7187,clefebvre,2018-01-30T15:52:47Z,CSD: https://github.com/linuxmint/cinnamon-settings-daemon/pull/215
361639588,7187,clefebvre,2018-01-30T15:59:01Z,Cinnamon (applet and settings): https://github.com/linuxmint/Cinnamon/pull/7238
361752459,7187,claudiux,2018-01-30T22:13:32Z,"Hi @clefebvre, @NikoKrause, @collinss and @JosephMcc,

I'm happy that parts of my code are right for you and that you're integrating them into Cinnamon.

For my part, I continue to develop the applet sound150@claudiux.

I considered the points of view and criticisms expressed here.

I deleted the stylesheet.css file; the colors are changed in the code; the style sheets of the themes are respected, including after a change of theme. The problem of margins is thus solved. In addition, a switch allows the user not to display the colors, if they do not suit him.

I made sure to replace the sliders with comboboxes; but I do not think that this solution is very elegant because it forces the user to make fixed choices.

The maximum percentage of the nominal volume is now determined by the code, but if it is still 153% and it is better to limit it to 150% (which I think from the beginning, as the name sound150 @ claudiux of my applet indicates it) that presents only little interest.

The time to redo the translations of the modified messages, and I make a commit and a PR of my applet on cinnamon-spices-applets.

Best regards."
362794892,7252,clefebvre,2018-02-03T09:58:13Z,"Please describe a use case, with browser and web-app, detailing how the current behavior is an issue and how the new one would help."
362841302,7252,tomKPZ,2018-02-03T18:09:26Z,"Here are some ways notifications could go missing:

1. Three web apps create notifications at around the same time.  The user clicks on the first one, which focuses Chrome.  The other 2 notifications never get shown and don't go to the message tray.

2. The user receives three notifications while they're away.  The log into their machine and focus Chrome.  They notice an icon disappear out of the corner of their eye.  It was the notification tray indicating there were 3 unread notifications.

3. Three web apps create notifications which all go to the message tray.  The user opens the message tray and notices they all have ""OK"" and ""Cancel"" buttons on them.  They want to click OK on all of them.  They click OK on the first one, which focuses Chrome, but also causes the other two to disappear.

By eliminating the unintuitive clear-notifications-on-focus behavior, all of these issues would go away."
363063538,7252,clefebvre,2018-02-05T11:54:39Z,"That's not what I mean. Please describe an actual use case this would solve, with the actual website and the content of the notifications."
363173119,7252,tomKPZ,2018-02-05T18:19:23Z,"In Google Calendar, notifications are typically generated 10 minutes before events.  Lets say there are 2 overlapping events: one is office hours with your manager that you usually don't attend.  The other is a real meeting that you are planning on attending.  Cinnamon displays notifications one-at-a-time, so lets say you see the office hours notification first.  You click on it to dismiss it, but this causes the meeting notification to disappear.  If users are relying on notifications as reminders, they may miss the meeting."
363407872,7252,clefebvre,2018-02-06T12:29:22Z,"That's a fair point, although I don't totally agree.

If you're in front of the computer you see both. If you're away, by the time you come back you see none, and your notification tray has both for you to see before you click anything.

Also, they both have the same purpose... to bring your attention to the calendar itself.

One last point, if one particular event isn't important and another one is, you'd expect the calendar to treat them differently. The important event would typically use a CRITICAL notification, so that it would remain on the screen for you to see, whereas the other one would simply end up in your tray.

"
363532513,7252,beverloo,2018-02-06T19:13:40Z,"Browsers display notifications on behalf of different websites. The fact that Chrome gets focused, either because the user manually launches the app or because they activate a notification from a particular site (e.g. Calendar), does not mean that they're aware of events that happened elsewhere. There is no 1:1 relationship between a notification shown by a browser and its conceptual sender.

Web Developers can show notifications not just from the visible tab, but also from backgrounded tabs and/or windows. In fact, there is no requirement for there to be a tab at all if they display a notification in response to a push message. (This is by design.)

If there is no foreground window or tab for a particular site (e.g. Twitter), how do we expect the user to be aware of activity if the notification gets dismissed when they just start the browser, or when they click on the notification of a completely different site?"
363720750,7252,clefebvre,2018-02-07T10:12:17Z,"Isn't that the job of the browser itself?

Firefox improved for instance by showing which tab was emitting sounds lately. You also see Twitter indicate the presence of new messages in the tab title itself."
363754408,7252,beverloo,2018-02-07T12:29:56Z,"Yes, and we do, but that's orthogonal.

When a user returns to their computer with a particular goal in mind (for example to find a recipe) they'll launch the browser and it's reasonable to expect that they'll miss the notification icon in the tray—context from those notifications is now lost, even if the tab title might've been updated.

Furthermore, as I mentioned, there's no requirement for there to be a tab at all in either browser. Notifications _are_ the UI surface where such updates are portrayed. Giving the user the ability to interact with each individual notification at a time that's convenient for them is critical."
366724570,7252,schachmat,2018-02-19T15:23:35Z,"TBH, I'd rather see Chrome use a similar approach to X11 where windows can have an urgency hint set that goes away after selecting them. In chrome, tabs could have this urgency hint, highlighting them in a different color/flashing/whatever in the tab bar and when the user selects the tab the browser UI could show a ""drawer"" (similar to the notification shade pull down on android) that has the contents of the notification and optional interaction items. This would help to unify notification experience and between desktop chrome and android.

Additionally I can imagine chrome having just one system-native notification that draws the users attention to the chrome window if there are notifications available within chrome."
366727413,7252,beverloo,2018-02-19T15:33:40Z,"Thank you for the additional input. Unfortunately the fact that there doesn't have to be a tab for a website to display a notification makes such an association impractical.

Chrome used to ship its own notification center, also on Linux, but we removed this following vast amounts of feedback from users who felt that the duplication with the system's notification server was confusing at best. (This was supported by usage metrics.)"
368535868,7252,jaszhix,2018-02-26T15:15:42Z,"Sometimes an app will be notifying about something that's occurring in a temporary manner, like a chat message. If the notifications disappears from the applet, the app is focused, and the user isn't alerted to it, they may never know it occurred. I think the whole point of native browser notifications is to make the browser more integrated - if the browser is expected to have its own notification system on top of the native notifications, it will be more complicated - more things to check and click through.

Maybe there needs to be a solution though to prevent the notifications from piling up too much, like a setting for notifications to be auto-pruned from the applet after a specified amount of time. I think that would be better than clearing on focus, because that assumes the user is going to always check the applet first, which isn't guaranteed."
373026221,7252,clefebvre,2018-03-14T13:47:25Z,"Hi everyone,

I'd like to thank you all for your patience and for your feedback. We've been talking about this and notifications a lot internally. It's not easy to think of what might work best for everybody. You're always afraid to wave off significant needs/use-cases.. and at the same time you don't want to fall into a niche and you certainly want it to work a certain way without requiring the user to fine tune settings he might or might not understand and certainly shouldn't need to worry about.

Note: this also got in: https://github.com/linuxmint/Cinnamon/pull/7336.

It introduces a close button on all notifications and removes the fade semi-transparency effect on hover. Clicking a notification closes it and focuses the caller app. Clicking the little close button on the other hand, only closes the notification, without focusing the caller app. This isn't directly related to this PR (it was done to fix the case where you don't want to lose focus on your current app or when you just want to dismiss a notification without being interrupted in your current activity).

"
373089581,7252,tanderson-google,2018-03-14T16:38:31Z,"Thanks for coming back to this, Clement.  Glad to see it merged!"
375949615,7395,Tak,2018-03-25T06:50:52Z,The things that CodeFactor found seem to be issues in the preexisting code
378200694,7395,Tak,2018-04-03T10:16:06Z,Is there more action I need to take on this?
383875980,7395,clefebvre,2018-04-24T10:01:36Z,"Hi @Tak, could you rebase this PR please?"
383938221,7395,clefebvre,2018-04-24T13:51:12Z,"You're missing something here..

`if (apps.indexOf(appId)) != -1) {`"
386905501,7395,NikoKrause,2018-05-06T19:14:49Z,@Tak 
386974263,7395,Tak,2018-05-07T06:51:57Z,"Oops, must have missed that notification, fixed."
430276667,7395,Tak,2018-10-16T15:11:59Z,Thanks!
441347255,8057,smurphos,2018-11-24T06:31:22Z,"This causes a regression.

Hover over a focused app, highlight the thumbnail, then move the mouse away. GWL reverts to active while the app remains focused in the foreground."
441350105,8057,jaszhix,2018-11-24T07:42:50Z,@smurphos Thanks for catching that - I pushed a fix.
441351869,8057,smurphos,2018-11-24T08:25:13Z,All good now ;-)
441417184,8057,smurphos,2018-11-25T05:45:11Z,I'm seeing invisible/blank labels on launching a pinned app right now. Switching the label mode or refreshing the theme brings them back. Unpinned apps are OK.
441419419,8057,jaszhix,2018-11-25T06:47:11Z,"@smurphos Thanks, looks like its because of the animated width transition to 1px when hidden. This worked fine before, but with the allocation changes the label width needs to be set explicitly when shown."
441430074,8057,smurphos,2018-11-25T10:26:55Z,"Looking good - I'm glad you've fixed the little bit of right - padding on pinned icons when labels are active.. ;-)

One little bug still. If I open a pinned app, then close it, then open another app the closed pinned app then gets a label."
441431618,8057,jaszhix,2018-11-25T10:56:13Z,@smurphos Pushed another fix. Does that work?
441437432,8057,smurphos,2018-11-25T12:36:28Z,"It fixes the label appearing. Now there's an issue with the width of a pinned app not reverting to the normal closed width if there is another open app in the applet. It does revert as soon as the mouse hovers over the applet. 

Edit - the above issue is dependent on how the app is closed. If I close the via the thumbnail close button it reverts straight away, if via right click applet context menu or the window decoration close button it doesn't revert straightaway. But it's also not 100% reproducible - occasionally it does revert OK.

When there isn't another app open it does revert but the animation is a bit glitchy on my machine.  "
441500032,8057,jaszhix,2018-11-26T02:22:31Z,"@smurphos I reproduced the choppy animation. I went ahead and removed the hide animation. Some of the allocation code from the window list applet is used on this branch, and I'm not sure if I can reconcile that change with the old animation (it predates ITM)."
441935491,8057,smurphos,2018-11-27T06:03:56Z,All looking good now ;-)
443375148,8057,ovari,2018-11-30T23:55:17Z,Does this work correctly when a user defines Super+Space to cycle though keyboard layouts? Thank you
443376733,8057,jaszhix,2018-12-01T00:05:01Z,If there's another keyboard shortcut using that combination it may not. You can change the binding in the applet's settings.
437955583,8004,lestcape,2018-11-12T17:01:03Z,"@jaszhix with the last fix, you are returning now a Clutter.Actor here: https://github.com/linuxmint/Cinnamon/commit/7ad7a02162339739fa4b80d1d1536f83eda8128f#diff-05db65ea5625e393ffab82cc7a763e9cR1276

Return a Clutter.Actor is a bad idea because you can not set a theme in a Clutter.Actor  and now an indicator actor can have two different types of actors, because it also can be an St.Icon: https://github.com/linuxmint/Cinnamon/blob/master/js/ui/indicatorManager.js#L1222

So, finally the manager is producing different **types of** actors depending from where the actor is constructed and it can cause incompatibilities to whatever use the API from an extension for example.

The issue you mention in the ubuntu side have nothing to be with the problem you fixed. Probably the issue was caused with the code i introduce to resolve the incompatibility between the Clutter.Actor and the St.Icon. As you revert that code probably the problem was gone but again the API is inconsistent.

**Edit:**
I think the problem reside in this lines:
```js
 let stream = Gio.MemoryInputStream.new_from_bytes(bytes);
 let pixbuf = GdkPixbuf.Pixbuf.new_from_stream(stream, null);
```
As this is not working currently (was working before),  to construct the pixbuf. Anyway this is already working:
```js
let pixbuf = GdkPixbuf.Pixbuf.new_from_bytes (bytes,
                                              GdkPixbuf.Colorspace.RGB, //Cogl.PixelFormat.ARGB_8888,
                                              true,  //has_alpha
                                              8,//bits_per_sample
                                              width,
                                              height,
                                              rowstride);
```
What is interesting is why we get an icon with one method and another different one with the another. Example goldendict: At right `GdkPixbuf.Pixbuf.new_from_bytes` and at left `Clutter.Image.set_bytes`

![diference](https://user-images.githubusercontent.com/43790722/48371153-bd3e9e00-e680-11e8-83a3-76203885fff2.png)

This occurs, because GdkPixbuf only have support for the Colorspace: GdkPixbuf.Colorspace.RGB and it interpret his RGB as Cogl.PixelFormat.RGBA_8888 when what is need is Cogl.PixelFormat.ARGB_8888 Note the difference of the character A (alpha) position in the color interpretation."
438096618,8004,jaszhix,2018-11-13T01:36:29Z,"Hi @lestcape, thanks for the tip. Your suggested change using `new_from_bytes` does indeed work, and I will update this PR accordingly when I rebase it."
438102395,8004,lestcape,2018-11-13T02:06:41Z,"@jaszhix the change that i suggested not work properly because the bytes are in Cogl.PixelFormat.ARGB_8888 pixel format and the GDkPixbuf only support the Cogl.PixelFormat.RGBA_8888 pixel format. This is just a tip, from where i let it some time ago. Also of course this is the real cause of the original bug. Maybe you can try another complete different solution to unify how the manager is working and also support themes, but i just shared what i tested a long time ago. Regards."
438169549,8004,lestcape,2018-11-13T07:52:13Z,"In case you don' t find a good way, this code should work (as a workaround of the GdkPixbuf.Pixbuf missing support), but I don't recommended perform that task in the compositor thread. Please note that depending of the size of the image the function `_changeARGBToRGBA` can freeze the shell. A recommend procedure is implement this function in C and in an asynchronous way using an auxiliary thread, just convert the pixel format before the `GdkPixbuf.Pixbuf` will be constructed.

 ```js
// This function convert a ARGB pixel format to a RGBA pixel format.
_changeARGBToRGBA: function(bytes, width, height) {
    let temp;
    for (let x = 4*(width*height-1); x>=0; x-=4) {
        temp = bytes[x+3];
        bytes[x+3] = bytes[x+0];
        bytes[x+0] = bytes[x+1];
        bytes[x+1] = bytes[x+2];
        bytes[x+2] = temp;
    }
    return bytes;
},

bytes = this._changeARGBToRGBA(bytes, width, height);
let pixbuf = GdkPixbuf.Pixbuf.new_from_bytes (bytes,
                                              GdkPixbuf.Colorspace.RGB, //Cogl.PixelFormat.ARGB_8888,
                                              true, //has_alpha
                                              8, //bits_per_sample
                                              width,
                                              height,
                                              rowstride);
 ``` "
438181877,8004,jaszhix,2018-11-13T08:39:47Z,"@lestcape The issue appears to be depending on how the icon is created, it could be St.Icon or Clutter.Actor. I think this is fine for now because we don't theme the St.Icon, and it serves a purpose of having the icon search path built into its initialization. When an icon is added to the systray applet, its treated like a Clutter.Actor, and only Clutter methods are called on it. I can't see a difference between normal systray icons and indicator ones on this branch, and since we now handle icon sizes globally, it might not make sense to theme it."
438184521,8004,lestcape,2018-11-13T08:48:55Z,"@jaszhix this was in that way, because the default Cinnamon theme already apply an special style to icons inside the panel. Is an effect like a light shining behind the icon. But if this was removed i don' t know, i don' t use cinnamon for a long time ago. If it's fine to you... that's ok."
438186216,8004,jaszhix,2018-11-13T08:54:48Z,"I pushed a commit that uses St.Icon anyway, its a sub-class of St.Widget (which sub-classes Clutter.Actor), so should be fine."
438201962,8004,lestcape,2018-11-13T09:44:47Z,"I think if you set the Clutter.Actor.content the theme will never be apply, because the content override any attempt, but well, maybe I'm outdated and this works."
438212703,8004,jaszhix,2018-11-13T10:19:14Z,"As a test, I added this rule to cinnamon.css:

```css
StIcon {
    width: 16px !important;
    height: 16px !important;
}
```

After restarting cinnamon, most of the icons were forced to 16px, except the tray icons - regardless if indicators were enabled and what the icon size setting was for its panel zone. This makes sense for normal icons, because the normal tray icons are CinnamonTrayIcon instances, and I guess for indicators its because its actually IndicatorActor being used in the systray applet, not the icon itself? In any case seems to be fine with the way it works now."
438386617,8004,lestcape,2018-11-13T18:36:17Z,"Make a test of the sizes when you already know they are hard-code (https://github.com/linuxmint/Cinnamon/commit/7c40ef4b960c1556583fbfbe83508fef2f1803ff) don't has sense at all to me, but i don' t know what you want to prove with that, if is fine to you that nice.

What you have right now are some indicators that can have a theme, that are `_createIconByName` and also some indicators that can **NOT** have a theme, that are `_createIconFromPixmap`. In any case non of those icons have currently an style class, so they directly can not have a theme, but they can have a theme indirectly using the parent class name and then the StIcon class.

Like the parent class https://github.com/linuxmint/Cinnamon/blob/master/js/ui/indicatorManager.js#L956 have an style class set as as a 'applet-box', this automatically apply an style to the child elements in the default theme. That style can be see for those icons that are create by `_createIconByName`, but not with those that are create with  `_createIconFromPixmap`. As how both are indicators icons, i think just for consistency should have not difference between them regardless if they should have or not themes.

But to be honest is like you want it be. Also in the case that i will use cinnamon, i don' t care how the indicators are show or if they have consistency or not."
438392880,8004,jaszhix,2018-11-13T18:54:09Z,"We added icon size configuration per-panel zone (https://github.com/linuxmint/Cinnamon/commit/0d6c75f5b2ebe390813f4b65e25a62ff5df5d472). They can be set between 16px-64px, the first commit you referenced just changes the defaults.

I didn't notice any change with the applet-box style class applied to that actor, so I removed it. This may have been different when you added indicator support originally."
438444564,8004,lestcape,2018-11-13T21:30:50Z,"> This may have been different when you added indicator support originally.

Yes, probably is like you say, i don't know how is right now. Originally have theme support was a requirement and the main incentive to port it to Cinnamon because this was the main difference with status icons, as indicators are shell friendly and the status icons are Cuttler embeded GtkWidgets only. If that change some how or now this is not important is ok."
450699471,8230,lestcape,2018-12-31T23:44:17Z,"@jaszhix Hi. I don't know what you understand really, but in the case you are lost with the beautiful ideas about the performance point in the [upstream MR](https://gitlab.gnome.org/GNOME/gnome-shell/merge_requests/153), please forget it, because this issue is about remove an oldest patch and not about performance.

The GenericContainer was introduced just because the impossibility of to have a good inheritance in Gjs classes and when that issue was fixed in gjs, they want then to remove also the patch that they introduce before (the GenericContainer) in concordance. So, any solution that do not remove the usage of the GenericContainer, is not in the same direction of the **upstream MR**. 

Also please note that, remove the GenericContainer is not the only important point of this **upstream MR**, because the idea is also remove the way of how you prototypes classes. Actually is something like that:

```classWapper {  actor: ClutterActor }```

And the idea is remove the wrapper of the actor and make the actor also the class:

```classActor extends ClutterActor (...}```

So yes, this is a big change in the conception of how we can prototype classes and make inheritance, but the performance is not the point of this at all, just probably a side effect that you need to test.

Please see all this need a lot of changes internally and yes it can produce a lot of new crashes if that big change will not come all at the same time in all areas. Nothing of this means you are wrong in something, just be carefully because is really big and is more conceptual than practical."
450700602,8230,jaszhix,2019-01-01T00:07:35Z,"> So, any solution that do not remove the usage of the GenericContainer, is not in the same direction of the upstream MR.

I said it is ""loosely"" based on it. The one area this overlaps is reducing usage of signals for allocation. I am seeing less micro-stutter on this branch than on master, so I think it's worth it.

There is no point in switching all of our classes to GObject classes, it will introduce more overhead because each time a class is constructed the monkey patching override functions in gjs will be invoked. It makes the prototype more complex and in most cases isn't necessary. From what I've seen working with GI in JS, bugs seem to occur more when you start blurring the lines between JS objects and GObjects, so it seems safer to keep those types separate. 

There are also implementation bugs that need to be resolved before vfuncs can be used in JS without side effects, see the GJS issue I linked to in the original PR message. I understand why GNOME went in this direction, it's their binding library, and it's the way it's supposed to be used in any language using GI. In my opinion however, this results in worse performance, and for the reasons mentioned in my PR message - it is moving allocation code from GenericContainer to JS, which is slower."
450703727,8230,lestcape,2019-01-01T01:27:14Z,"Im not agree with you about the gnome conspirancy about his GObject usage and like i say the issue is not about performance, is about make the things in the rigth way. Just see my comment 3 years ago about it:

https://github.com/linuxmint/Cinnamon/issues/4428#issuecomment-121324197"
450704686,8230,jaszhix,2019-01-01T01:59:40Z,"I don't think it's a conspiracy - I tried this approach as a wrapper solution in #8068 and it didn't work out. I am discussing what makes sense for _Cinnamon_ from a JS developer's perspective. For me, this is a performance issue, and I'm not interested in what GNOME thinks is the right way - especially when it doesn't follow ECMAScript standards. There are caveats that I see affecting any approach that sub-classes GObjects in JS with GJS in its current state, and they can't be ignored when talking about this."
450705853,8230,lestcape,2019-01-01T02:29:32Z,Well is not gnome who think that this is the rigth way. The author of the pull is not a gnome developer and i'm not a gnome develper. A genericcontainer is a patch that need to disapear like all patches in all softwares... that is all for my point of view and have nothing to be with ECMAScript.
450706167,8230,jaszhix,2019-01-01T02:39:52Z,"> The author of the pull is not a gnome developer

His name appears on the [members page](https://www.gnome.org/foundation/membership/), and he has push access. 

What I meant was, replacing  CinnamonGenericContainer means tolerating [this bug](https://gitlab.gnome.org/GNOME/gjs/issues/89), which has performance ramifications for all actors, because it causes all actors' vfuncs to be overridden. This causes all allocation to occur in JS. That is not how prototype inheritance is supposed to work."
450767048,8230,lestcape,2019-01-02T00:04:45Z,"> What I meant was, replacing CinnamonGenericContainer means tolerating this bug.

This bug also occurs in Gtk and have a workaround, i think is worse the continuation of the usage of the GenericContainer, like also the gnome developers think, because the pull was merged.

What is an important bug that can give you the reason, is the fact that there are not way to unregistered a GObject class (https://gitlab.gnome.org/GNOME/gnome-shell/merge_requests/153#note_307911). So, load and reload a js module (extensions), will required a restart always. That is in my opinion really problematic. What you mention is not a critical bug to me, but if you think it is, that ok."
450805429,8230,jaszhix,2019-01-02T08:11:20Z,"> This bug also occurs in Gtk and have a workaround

This affects all bindings, and I don't think the workaround makes much sense in terms of JS classes.

> So, load and reload a js module (extensions), will required a restart always

Cinnamon has its own file loader for extensions, so this isn't an issue.

CinnamonGenericContainer is just another Clutter actor with some hooks for allocation. There's nothing inherently wrong with it. If GNOME wants to get rid of it, fine. We don't necessarily have to, that's why Cinnamon is a fork. We can take a step back and look at some of these decisions more objectively."
450856356,8230,lestcape,2019-01-02T12:54:20Z,"> I don't think the workaround makes much sense in terms of JS classes

> CinnamonGenericContainer is just another Clutter actor with some hooks for allocation. There's nothing inherently wrong with it

In my opinion, the GenericContainer workaround it's worse because it's a shell class and that mean you can not port a code when it use a GenericContainer to outside a shell context. This is in my opinion a very bad thing, because in the end  you are making code that can only be use in a pretty specific context and the interoperability is just fiction in that case. Gjs works outside any shell, also Clutter and you can make St work too.

> Cinnamon has its own file loader for extensions, so this isn't an issue

Read the link again, a loader can not avoid a GObject issue. In fact a loader have nothing to be with how the introspection works.

**Edit:** or just read the issue directly here: https://bugzilla.gnome.org/show_bug.cgi?id=688973"
450862856,8230,jaszhix,2019-01-02T13:27:37Z,"We don't have to worry about the code being portable - this is a patch tailored for Cinnamon, so I don't understand your point. In any case, this is becoming off-topic and I don't want to debate abstract design preferences over a practical performance patch.

If you'd like to suggest an alternative, feel free to open a PR and we can test it for performance regressions."
450865282,8230,lestcape,2019-01-02T13:38:29Z,"> I don't want to debate abstract design preferences over a practical performance patch.

Well the upstream issue is all about this. Sorry if this is not important to you."
478284588,8230,brownsr,2019-03-30T20:00:09Z,"I am finding a lot of issues, but as far as I can tell they are there on master too.  However the log is showing a number of callback related issues, which as far as I can tell are just related to this. I've removed some familiar caribou messages.

```
(cinnamon:1777): Cjs-WARNING **: 19:44:55.290: JS ERROR: Exception in callback for signal: open-state-changed: TypeError: this._applicationsButtons[i].actor is undefined
_onOpenStateChanged@/usr/share/cinnamon/applets/menu@cinnamon.org/applet.js:1142:17
_emit@resource:///org/cinnamon/cjs/modules/signals.js:142:27
open@/usr/share/cinnamon/js/ui/popupMenu.js:2315:9
toggle_with_options@/usr/share/cinnamon/js/ui/popupMenu.js:2064:13
on_applet_clicked@/usr/share/cinnamon/applets/menu@cinnamon.org/applet.js:1107:9
_onButtonPressEvent@/usr/share/cinnamon/js/ui/applet.js:278:13


(cinnamon:1777): Clutter-CRITICAL **: 19:44:55.305: clutter_layout_manager_allocate: assertion 'CLUTTER_IS_LAYOUT_MANAGER (manager)' failed

(cinnamon:1777): Clutter-CRITICAL **: 19:44:55.320: clutter_layout_manager_allocate: assertion 'CLUTTER_IS_LAYOUT_MANAGER (manager)' failed


Cjs-Message: 19:50:01.679: JS LOG: [LookingGlass/info] this.actor is undefined
Cjs-Message: 19:50:01.680: JS LOG: [LookingGlass/trace] 
<----------------
destroy@/usr/share/cinnamon/applets/menu@cinnamon.org/applet.js:238:13
_refreshApps@/usr/share/cinnamon/applets/menu@cinnamon.org/applet.js:2109:17
_refreshAll@/usr/share/cinnamon/applets/menu@cinnamon.org/applet.js:1001:13
anonymous/onAppSysChanged/<@/usr/share/cinnamon/applets/menu@cinnamon.org/applet.js:995:51
---------------->
Cjs-Message: 19:50:03.570: JS LOG: [LookingGlass/info] this.actor is undefined
Cjs-Message: 19:50:03.570: JS LOG: [LookingGlass/trace] 
<----------------
destroy@/usr/share/cinnamon/applets/menu@cinnamon.org/applet.js:238:13
_refreshApps@/usr/share/cinnamon/applets/menu@cinnamon.org/applet.js:2109:17
_refreshAll@/usr/share/cinnamon/applets/menu@cinnamon.org/applet.js:1001:13
anonymous/onAppSysChanged/<@/usr/share/cinnamon/applets/menu@cinnamon.org/applet.js:995:51
---------------->
Cjs-Message: 19:50:05.569: JS LOG: [LookingGlass/info] this.actor is undefined
Cjs-Message: 19:50:05.570: JS LOG: [LookingGlass/trace] 
<----------------
destroy@/usr/share/cinnamon/applets/menu@cinnamon.org/applet.js:238:13
_refreshApps@/usr/share/cinnamon/applets/menu@cinnamon.org/applet.js:2109:17
_refreshAll@/usr/share/cinnamon/applets/menu@cinnamon.org/applet.js:1001:13
anonymous/onAppSysChanged/<@/usr/share/cinnamon/applets/menu@cinnamon.org/applet.js:995:51
---------------->
Cjs-Message: 19:50:10.570: JS LOG: [LookingGlass/info] this.actor is undefined
Cjs-Message: 19:50:10.571: JS LOG: [LookingGlass/trace] 
<----------------
destroy@/usr/share/cinnamon/applets/menu@cinnamon.org/applet.js:238:13
_refreshApps@/usr/share/cinnamon/applets/menu@cinnamon.org/applet.js:2109:17
_refreshAll@/usr/share/cinnamon/applets/menu@cinnamon.org/applet.js:1001:13
anonymous/onAppSysChanged/<@/usr/share/cinnamon/applets/menu@cinnamon.org/applet.js:995:51
---------------->
Cjs-Message: 19:50:18.577: JS LOG: [LookingGlass/info] this.actor is undefined
Cjs-Message: 19:50:18.578: JS LOG: [LookingGlass/trace] 
<----------------
destroy@/usr/share/cinnamon/applets/menu@cinnamon.org/applet.js:238:13
_refreshApps@/usr/share/cinnamon/applets/menu@cinnamon.org/applet.js:2109:17
_refreshAll@/usr/share/cinnamon/applets/menu@cinnamon.org/applet.js:1001:13
anonymous/onAppSysChanged/<@/usr/share/cinnamon/applets/menu@cinnamon.org/applet.js:995:51
---------------->
Cjs-Message: 19:50:21.569: JS LOG: [LookingGlass/info] this.actor is undefined
Cjs-Message: 19:50:21.570: JS LOG: [LookingGlass/trace] 
<----------------
destroy@/usr/share/cinnamon/applets/menu@cinnamon.org/applet.js:238:13
_refreshApps@/usr/share/cinnamon/applets/menu@cinnamon.org/applet.js:2109:17
_refreshAll@/usr/share/cinnamon/applets/menu@cinnamon.org/applet.js:1001:13
anonymous/onAppSysChanged/<@/usr/share/cinnamon/applets/menu@cinnamon.org/applet.js:995:51
---------------->

(cinnamon:1777): Cjs-WARNING **: 19:50:24.044: JS ERROR: Exception in callback for signal: changed: TypeError: this.actor is undefined
destroy@/usr/share/cinnamon/applets/menu@cinnamon.org/applet.js:238:13
_refreshRecent@/usr/share/cinnamon/applets/menu@cinnamon.org/applet.js:2043:13
_emit@resource:///org/cinnamon/cjs/modules/signals.js:142:27
DocManager.prototype._reload@/usr/share/cinnamon/js/misc/docInfo.js:84:9


(cinnamon:1777): Cjs-WARNING **: 19:50:25.959: JS ERROR: Exception in callback for signal: changed: TypeError: this.actor is undefined
destroy@/usr/share/cinnamon/applets/menu@cinnamon.org/applet.js:238:13
_refreshRecent@/usr/share/cinnamon/applets/menu@cinnamon.org/applet.js:2043:13
_emit@resource:///org/cinnamon/cjs/modules/signals.js:142:27
DocManager.prototype._reload@/usr/share/cinnamon/js/misc/docInfo.js:84:9

Cinnamon warning: Log level 16: invalid (NULL) pointer instance
Cinnamon warning: Log level 8: g_signal_emit_valist: assertion 'G_TYPE_CHECK_INSTANCE (instance)' failed
Cinnamon warning: CurrentTime used to choose focus window; focus window may not be correct.
Cinnamon warning: Got a request to focus the no_focus_window with a timestamp of 0.  This shouldn't happen!
Cinnamon warning: Log level 8: Source ID 247 was not found when attempting to remove it
```"
478287416,8230,jaszhix,2019-03-30T20:37:31Z,"Those callbacks are not changed in this PR. I can fix them up, but it might be better in a separate PR. This PR converts `style-changed`, `allocate`, `get-preferred-width`, and `get-preferred-height`. In fact, I'm not seeing anywhere in the menu applet affected by these because it doesn't use `Cinnamon.GenericContainer`."
516835980,8746,claudiux,2019-07-31T12:54:19Z,This PR should fix https://github.com/linuxmint/cinnamon-spices-themes/issues/580.
517914791,8746,brownsr,2019-08-03T10:36:29Z,"HI @claudiux there's been a security change on the spices site, I think things are working fine now."
517935591,8746,claudiux,2019-08-03T16:05:28Z,"Hi @brownsr,

Sorry but the problem is not solved.

When I try to update the latest version of SpicesUpdate@claudiux, from Cinnamon Settings, the old version of the zip file is installed. However the ""last-edited"" field in metadata.json was updated: 1563823305. The user obtains an old version of this applet, declared as the latest version.

When I try to download the zip file using button on the site, I again obtain its old version.

Since your security change, adding a question mark at the end of the download url seems useless: I obtain also the old version of the zip file."
517936891,8746,claudiux,2019-08-03T16:24:17Z,"Using a random word after the question mark does the job! The latest version of zip file is downloaded.

I will change my code."
517944556,8746,claudiux,2019-08-03T18:18:29Z,"Now, a random query is added to the URL of json and zip files.

I used uuid4() to create this random query.

So, the request for `/files/applets/SpicesUpdate@claudiux.zip` becomes like a request for `/files/applets/SpicesUpdate@claudiux.zip?02472d96-43b4-4a4f-acf8-f164c0e65288`.

This works like a charm with Cinnamon Settings. But the problem of the Download button of the Spices web site is not solved."
517966679,8746,Bundy01,2019-08-04T01:37:04Z,"Hi,
I confirm that the last PR solves the problem with Cinnamon's settings."
522582235,8746,clefebvre,2019-08-19T13:45:18Z,This was fixed on the server side. It's an elegant solution but I don't think we need it anymore.
523918618,8746,claudiux,2019-08-22T13:59:05Z,"@clefebvre Glad to know that this has been corrected server side. But this solution also bypass all other caches: proxy-cache, browser cache, etc. It's not cool to get an old version of a file when we hope to download its most recent version."
524039400,8746,claudiux,2019-08-22T19:16:24Z,"@clefebvre This method could be used for the Download button links of the Spices website, replacing the uuid by the 'last_edited' parameter of each Spice."
525112020,8746,claudiux,2019-08-27T02:41:55Z,"@clefebvre The problem is still here: https://github.com/linuxmint/cinnamon/issues/8747#issuecomment-525093214

I have seen it on Cinnamon of all versions. People think they have downloaded the latest version and end up with an older version.

On 4.2, if I replace the original Spyces.py file by the mine, then all works well.

Regards."
528003060,8746,claudiux,2019-09-04T17:29:03Z,"@clefebvre This issue is still here in Cinnamon 4.2.4. I just updated (using Cinnamon Settings) the `placesCenter@scollins` applet, which I made the latest version, and got the previous version!"
528008534,8746,collinss,2019-09-04T17:43:27Z,"It can take a while to update on the site. I don't remember the specifics of how it works, but I want to say that there's a delay because the site only checks every so often for a newer version, so it may take an hour or so to update. I just checked myself, and it's using the version from a few days ago. This means it's almost certainly not a cache issue because I haven't been to that page in months. If it were loading a cached version, it probably wouldn't have shown the version it did."
528021149,8746,claudiux,2019-09-04T18:14:24Z,"@collinss Please test yourself this link: [https://cinnamon-spices.linuxmint.com/files/applets/placesCenter@scollins.zip](https://cinnamon-spices.linuxmint.com/files/applets/placesCenter@scollins.zip). You will obtain this:
![Capture du 2019-09-04 20-07-12](https://user-images.githubusercontent.com/33965039/64279691-ec940380-cf4f-11e9-9386-a218a2991e2a.png)


 Then test this link: [https://cinnamon-spices.linuxmint.com/files/applets/placesCenter@scollins.zip?cf6c9eee-1d29-42f1-8e52-91db49195f2b](https://cinnamon-spices.linuxmint.com/files/applets/placesCenter@scollins.zip?cf6c9eee-1d29-42f1-8e52-91db49195f2b). You will obtain this:
![Capture du 2019-09-04 20-08-40](https://user-images.githubusercontent.com/33965039/64279726-fddd1000-cf4f-11e9-87d2-0b6ce637a945.png)
The zip file is already on the server. But we obtain a cached version by the default link. (Where is this cache? I don't know and it is not very important). The solution to this issue is so simple and is in this PR.

"
792889670,9954,mtwebster,2021-03-08T16:43:58Z,"Hi, looks good as just text. However, I'd like to reduce the options, there's no need for so many, and I don't want to remove the volume.

There should just be a single additional option to show or not show the track info. I apologize for not noticing this the first time around, I was focused on the other aspects of this pr.

It's reasonably easy to just update this existing pr, so you don't need to go thru the work of creating a new one - this way we can also squash all of these commits into one at the same time.

Hopefully this could be useful in the future as well..

1) Make the changes on your `add-information-to-sound-tooltip` branch.
2) `git commit -a`, then save the commit file (you can just type some garbage for the message, you'll see why in a moment)
3) `git log` should show you now have 5 commits that are your own, on top of existing cinnamon ones.
4) `git reset --soft HEAD~3 && git commit --amend` - this should bring up the editor with the message from your 'Add additional information..' commit. Edit it if you'd like, then save.
5) `git log` should show you just have a single commit now - containing the changes from all commits.
6) `git pull --rebase origin master` - this will temporarily remove your single commit, apply all new commits from the master branch since you originally cloned it to your local drive, then re-apply your commit.
7) `git log` should show your commit, and the next one below it should have a tag 'origin/master' (and maybe more).

Up until this point, *nothing* has been changed on github. If you messed up any of the above steps and are unsure, you can simply remove the cloned cinnamon folder, clone linuxmint/cinnamon again, and re-add your fork remote (or vice-versa).

8) Now, update the PR on github: `git push --force <name-of-your-remote> add-information-to-sound-tooltip`.

`<name-of-your-remote>` will be whatever name you assigned to your fork - do `git remote -v` if you ever want to see the list.

There's actually a more useful command (interactive rebase) that I'd normally use for step 4, but your emoji symbols seem to giving git some trouble so we can't use it.

Let me know if you have trouble."
797673280,9954,sphh,2021-03-12T18:29:33Z,"I can certainly remove the option which toggles the volume info. What is the reason for not making its display optional? Personally I do not need this information at all and I also think, it is somewhat redundant.

What about the option to show the player? Should this be incorporated into the new ""single additional option"" or stay as a separate option?

The reason, why I made separate options for the track title _and_ the artist is as follows: I regularly listen radio stations. If I am not mistaken, all internet radio stations send both the artist and the title in the title tag. The artist tag is always empty, hence I do not want to have an empty line displayed. A possible workaround is, to not display it, if it is empty. This could be done for the title and the artist. What do you think?

Is the procedure you outlined, so that this PR appears as a single (big) commit and not many small ones?"
797673460,9954,sphh,2021-03-12T18:30:06Z,"I can certainly remove the option which toggles the volume info. What is the reason for not making its display optional? Personally I do not need this information at all and I also think, it is somewhat redundant.

What about the option to show the player? Should this be incorporated into the new ""single additional option"" or stay as a separate option?

The reason, why I made separate options for the track title _and_ the artist is as follows: I regularly listen radio stations. If I am not mistaken, all internet radio stations send both the artist and the title in the title tag. The artist tag is always empty, hence I do not want to have an empty line displayed. A possible workaround is, to not display it, if it is empty. This could be done for the title and the artist. What do you think?

Is the procedure you outlined, so that this PR appears as a single (big) commit and not many small ones?"
797675858,9954,sphh,2021-03-12T18:37:37Z,"I can certainly remove the option which toggles the volume info. What is the reason for not making its display optional? Personally I do not need this information at all and I also think, it is somewhat redundant.

What about the option to show the player? Should this be incorporated into the new ""single additional option"" or stay as a separate option?

The reason, why I made separate options for the track title _and_ the artist is as follows: I regularly listen radio stations. If I am not mistaken, all internet radio stations send both the artist and the title in the title tag. The artist tag is always empty, hence I do not want to have an empty line displayed. A possible workaround is, to not display it, if it is empty. This could be done for the title and the artist. What do you think?

Is the procedure you outlined, so that this PR appears as a single (big) commit and not many small ones?"
797683654,9954,sphh,2021-03-12T18:55:10Z,"I can certainly remove the option which toggles the volume info. What is the reason for not making its display optional? Personally I do not need this information at all and I also think, it is somewhat redundant.

What about the option to show the player? Should this be incorporated into the new ""single additional option"" or stay as a separate option?

The reason, why I made separate options for the track title _and_ the artist is as follows: I regularly listen radio stations. If I am not mistaken, all internet radio stations send both the artist and the title in the title tag. The artist tag is always empty, hence I do not want to have an empty line displayed. A possible workaround is, to not display it, if it is empty. This could be done for the title and the artist. What do you think?

Is the procedure you outlined, so that this PR appears as a single (big) commit and not many small ones?"
821971742,9954,sphh,2021-04-18T10:48:22Z,@mtwebster: Have you had a think about my proposition regarding the artist and title? I would really love to cross this off my list. Thanks.
826991319,9954,mtwebster,2021-04-26T16:48:37Z,"Hi, I apologize for not getting back to this sooner - 

Thanks for explaining your reasoning a bit more.

I think I'm ok with your suggestion - reduce this to 3 options (if I understand you correctly) -
a) volume
b) player status
c) track/artist, but only showing non-empty info.

What is the reason behind showing the player info btw?

Thanks"
826999036,9954,sphh,2021-04-26T17:00:22Z,"Yes, you understood me correctly. But option b) is actually ""player + status"".

Why I included the player and the status? Because the drop-down display also has this included. Simple as that ;-) But also you could have more than one player running and then it might be good to know, to which player the information belongs.

Do you think, I should remove it?

Thinking about it, it would be best to show all active players in the tooltip. But don't worry, that's too much for now!"
827081839,9954,sphh,2021-04-26T19:16:05Z,"@mtwebster: Done with the latest commit https://github.com/linuxmint/cinnamon/pull/9954/commits/af5a7e965404f5742f454c32b2ad4b2de9138877

Collapsing artist/title into one option and not displaying if empty, works and looks great. (Finally I got rid of this ""Unknown artist"" field …) Thanks for the idea!"
829441127,9954,mtwebster,2021-04-29T17:12:52Z,"Looks good now, only three small things - 

- If all tooltip options are disabled, let's just not show any tooltip (I think you can just set the tooltip to an empty string).
- Make the defaults to match the existing behavior (only volume enabled).
- Change 'artist/title' to 'artist and title'.

Thanks!"
829452168,9954,sphh,2021-04-29T17:29:31Z,@mtwebster: Done.
830098401,9954,sphh,2021-04-30T13:33:58Z,"Thanks, @mtwebster!"
830145582,9954,mtwebster,2021-04-30T14:46:04Z,"Np, thanks for dealing with my endless demands :)
"
831365471,10043,mtwebster,2021-05-03T16:08:41Z,Why are you removing cinnamon_util_format_date - how is it related to the rest of the pr?? That's needed by a workaround we have in environment.js.
840732500,10043,ItzSwirlz,2021-05-13T18:03:37Z,"> Why are you removing cinnamon_util_format_date - how is it related to the rest of the pr?? That's needed by a workaround we have in environment.js.

Didn't know that."
851592411,10043,ItzSwirlz,2021-05-31T16:41:53Z,"_i can't do crap i just rewrote the function using GstDateTime and other stuff the compiler recommended_

and of course the g_get_real_time cast still makes me want to cry

Anyways, test time.. and it still protection faults. dangit."
852200840,10043,ItzSwirlz,2021-06-01T15:05:13Z,"Finally done, tested and recorder works. Apparently it doesn't care if the function is a GstClockTime and it returns a gint64?"
950347721,10043,ItzSwirlz,2021-10-24T15:47:03Z,"By the way, this is done (don't want to keep racking up the PRs sitting around). It looks like it can merge"
954830457,10043,mtwebster,2021-10-29T15:22:15Z,You didn't test the hotplug-sniffer change. It segfaults immediately.
1973912086,12100,Secret-chest,2024-03-01T21:00:44Z,Beautiful
1974377389,12100,fredcw,2024-03-02T06:15:52Z,@Secret-chest Not my theme.
1974667469,12100,fredcw,2024-03-02T07:41:43Z,"I'll mark this [WIP] for now as I think it's more of a proposal than a PR. Thoughts/suggestions welcome.

I would prefer the ""theme options"" button to appear under selected theme button but I don't know how to do that though I guess having the button at the bottom of the page isn't too bad.

The idea of making this spec DE agnostic and including an gui config program in the theme is that it might encourage theme writers to distribute their themes like this? The config program fully updates the theme on GNOME, XFCE, and MATE DEs.

Here's a possible spec for the `options_config.json` file:

All fields required unless stated otherwise.
```
{
    ""spec_version"": <number> , Earliest version of this spec this file is compatible with. (only version=1 so far)
    ""script_name"": <string>, The script/program to call to apply theme changes.
    ""theme_name"":  <string>,
    ""adwaita_link_to_gtk4"": <boolean> Optional, default=false. If files (gtk.css, gtk-dark.css, assets/) in <theme>/gtk-4.0 can be linked to from ~/.config/gtk-4.0 in order to theme libadwaita apps.
    ""options"": [ 
            <combo_type|switch_type>, ...
        ]
}
```
combo_type. 
```
{
            ""name"": <string>, This is also the name of the argument passed to the script as --<name> <id_string>
            ""label"": <string>, 
            ""type"": ""combo"",
            ""desktop"": <string>, One of all|GNOME|Cinnamon|XFCE|MATE|Budgie|pop|Pantheon|Unity|<some other>. The DE in which this option should appear.
            ""ids"": [
                <string>, ...
            ],
            ""labels"": [
                <string>, ...
            ],
            ""color_codes"": [ Optional - use color swatches instead of labels if implemented. Color code format: ""#XXXXXX""
                <string>, ...
            ],
            ""value"": <number> A default value with distributed theme and subsequently used to store the current user value
        }
```
switch_type.
```
{
            ""name"": <string>, This is also the name of the argument passed to the script when the option is selected (true) eg. --name, no argument is passed when false
            ""label"": <string>,
            ""type"": ""switch"",
            ""desktop"": <string>,
            ""value"": <boolean>
        }
```
I suppose other option types could be added eg. a numerical value like Gtk.SpinButton and a color picker option.
"
1974881003,12100,Secret-chest,2024-03-02T19:07:05Z,Colour picker and numbers would be really useful.
1975324249,12100,JosephMcc,2024-03-03T20:59:40Z,"Couple of initial thoughts on this.

First, with this part of Cinnamon, how many themes are really going to support it? If it's mostly about changing the highlight color, there is already a means in place for that in the theme chooser. So this feels a bit redundant and confusing the way it's presented to the user. On top of that, themes come and go. People get excited about and work on them and then just disappear and leave them unmaintained. This almost feels like something a theme dev could do themselves if they really want to.

The second is the handling of libadwaita. I only took a quick glance but what happens if I use this and then say just switch back to Mint-Y-Blue? Did you just leave a bunch of stuff hanging out in ~/.config? Not a good way to handle this as most people won't get why they are now stuck with that theming on libadwaita apps."
1978295906,12100,fredcw,2024-03-05T09:18:43Z,"@JosephMcc 

>how many themes are really going to support it?

Yes, I guess that this is the crux of the matter. If it's not going to be adopted by theme devs then then this PR doesn't really serve any purpose. I guess it's also a bit of a chicken and egg situation, theme devs can't adopt it if it isn't implemented. Since the button only appears if a theme supports it, it would make no difference to the settings>themes GUI with themes that don't. Maybe it would be worth a try and if it isn't widely used then it could be removed again at a later date. I guess there's only really one way to find out.

>there is already a means in place for that in the theme chooser.

The idea of using it with Mint-Y, Mint-X, and Mint-L themes was just an afterthought, and having considered it, it's impractical. This idea was only really about 3rd party themes and as you say, there is already a way to select options for the Mint themes. The problem of course is that it only works for Mint themes and can't be used for 3rd party themes.

>If it's mostly about changing the highlight color

Well Fluent theme has 7 different things to configure and the Cinnamox theme variations in the repo for instance, mainly change the background color, and with the last theme uploaded to the repo, the author says he has variations in the gradient fill on panels.

>and work on them and then just disappear and leave them unmaintained

Yes, that's the current situation and I agree that that probably won't change much. But I think that an unmaintained configurable theme is still probably better than an unmaintained non-configurable theme.

>This almost feels like something a theme dev could do themselves if they really want to.

I think that they would think that writing a GUI app for the options would be too much effort. I've also written the options.py program which basically does the same as this PR but has to be included in the theme directory and run from there. My thought is that providing this would make adding theme options easier and may encourage adding theme options. With cinnamon themes uploaded to the spices repo, maybe a GUI in cinnamon like this is exactly what is needed to make theme devs think it's worthwhile implementing configurable options.

>The second is the handling of libadwaita.

Yes, libadwaita is a problem. It seems to me that there are a few ways to deal with this.

1. Do nothing, which means that people can't theme libawaita apps except manually which is the current situation. And unthemeable libawaita apps defeats the purpose of theming. IMO.
2. What I've done with this PR - make it easier to link libadwaita to the current theme (if the theme supports it) and to easily remove the theming if wanted. Unfortunately, if libadwaita is to be themeable at all then there's no way around this. If you were to change to Mint-Y then there's no way to theme libadwaita to Mint-Y anyway except by using the command line. If you still have the theme installed that you linked to libadwaita then hopefully the user would remember that they used that to theme libadwaita and would think to use that to untheme libadwaita. And in any case, they still can't theme Mint-Y to libadwaita. (btw, if the theme that libadwaita is linked to is removed, thereby leaving broken links in `~/.config/gtk-4.0`, libadwaita automatically reverts to the default adwaita theme.)
3. ~This I think is the best option though I don't know how to go about implementing this: Perhaps in cinnamon settings deamon, the current gtk theme could be monitored and when changed, Cinnamon checks to see if the current gtk theme has a gtk-4.0 folder that appears suitable for linking to .config/gtk-4.0 and if so, automatically installs links, otherwise remove links. That way, whenever the current theme ""supports"" libadwaita (including Mint-Y), libadwaita is automatically themed to it, otherwise it's set to the default adwaita theme. I don't think people would want to theme libadwaita differently to gtk3 any more than they'd want to theme gtk4 or gtk2 apps differently to gtk3.~

So I agree, the libadwaita situation is not ideal but giving the option to theme libadwaita for some themes is at least better than nothing. In any case, this feature can be removed if necessary.

Edit: It turns that a gtk4 theme has to include specific support for libadwaita, not just gtk4 so this 3rd option wouldn't work."
1997571119,12100,fredcw,2024-03-14T14:20:14Z,"Added color-chooser and spinbutton option types and removed ""link theme to adwaita"" option. Themes fully update on wayland session without cinnamon restart.

Latest spec for `options_config.json` file here: https://github.com/fredcw/theme-config

Added configurable theme ""Graphite"" to cinnamon-spices-themes repo."
1999033699,12100,Secret-chest,2024-03-15T06:41:02Z,There is a program called Gradience for themeing LibAdwaita.
2002194074,12100,fredcw,2024-03-17T00:01:03Z,"@Secret-chest Gradience allows you to painstakingly change some colors but it's not really theming in the same way that gtk2, 3, & 4, cinnamon, xfwm, etc are themed, i.e. install a theme and have nearly all your apps have a consistent theme.
"
2002411188,12100,Secret-chest,2024-03-17T11:09:19Z,But it does custom css.
2021721529,12100,fredcw,2024-03-27T00:46:49Z,"I'll remove the WIP tag because I don't think there's much more I can add to this. There are 3 themes with configurable options in cinnamon-spices-themes now: Fluent, Graphite, and Material."
2030818186,12100,anaximeno,2024-04-02T00:01:42Z,"@fredcw I believe you are aware of the recent developments on the KDE theme issue of a theme deleting user data? If I understood right, this will make it possible to add a script for extra customizations to be made, therefore making issues like that possible, which means that a greater level of caution would be necessary with pull request to the theme spices repository as well.

Some Refs:
- https://www.reddit.com/r/kde/comments/1bixmbx/do_not_install_global_themes_some_wipe_out_all/
- https://blog.davidedmundson.co.uk/blog/kde-store-content/"
2032815773,12100,fredcw,2024-04-02T18:50:43Z,"@anaximeno Thanks, this is something I hadn't considered. While themes uploaded to cinnamon spices would have to be checked for harmful code, this is the same with applets and desklets. But I think there is a scenario where a user could run untrusted code without realizing. If a user downloaded a theme from an untrusted source thinking that it's safe because it's only a theme, they could then find the theme options button in cinnamon, change the theme options and thereby run code from an untrusted source without realizing that that's what they're doing.

Because of this, I can't recommend this PR be merged in its current state."
17749001,2006,dalcde,2013-05-10T23:05:12Z,"The general guideline is don't mess with (cleanup) the code not related to your pull request (i.e. not in the section you are editing). 1, it makes it much more vulnerable to merge conflicts (especially the gsettings schema), and 2, it makes it difficult to review the code.
"
17756398,2006,nkoep,2013-05-11T08:37:38Z,"Committed again, this time without removal of trailing whitespaces and the invasive clean-up of unrelated code. The new old commit also includes a fix to make sure a desklet's draggable has the proper lock state set upon initialization.
"
17756998,2006,dalcde,2013-05-11T09:30:32Z,"Looks good now. It would be better if you omitted the other cleanup (e.g. separating lines into two - line 46), but I guess it's good enough for merge.
"
17992881,2006,AlbertJP,2013-05-16T10:20:24Z,"Marked for Cinnamon 2.0 for the moment.
"
49151938,2006,clefebvre,2014-07-16T11:17:24Z,"Hi,

This was requested a lot in Mint 17, but for applets. Maybe it's time we rename our ""panel edit mode"" into a ""Lock desktop"" toggle which prevents removing/moving xlets in general?
"
49156542,2006,nkoep,2014-07-16T12:13:56Z,"I guess that would make things a bit easier overall. This PR has merge conflicts and needs rebasing anyway so I could just as well get rid of the ""desklets-locked"" key again and check for ""panel-edit-mode"" instead. I'm still not sure though if it wouldn't be better to be able to lock desklets individually. I can't really say how common that use case is as I'm currently not using any desklets myself.
"
49172221,2006,clefebvre,2014-07-16T14:21:27Z,"I'm not really sure what's best either.. I like being able to move my desklets personally without having to unlock things. And running with panel edit mode ON by default is definitely not an option.
"
49181971,2006,highwindmx,2014-07-16T15:25:16Z,"how about putting these items in different ""layers"" and user operate in a merged one, 
and split this layer again until we want to edit (change size ,location and so on) them?
"
49304647,2006,nkoep,2014-07-17T13:16:13Z,"I've thought about this for a while and I think it would be best to make desklets lockable invididually. I also think that the panel-edit mode should be left as is. I reckon it's a safe assumption that most users use a lot more applets than they use desklets (10 vs. 0 in my case). I also think it's a safe bet that desklets are moved around more frequently than, for instance, the Cinnamon menu. I've updated the commit to implement the proposed change. Maybe we should field-test it first to see if it would be preferable to use @clefebvre's proposed ""lock desktop"" option instead.
"
49535911,2006,mtwebster,2014-07-20T03:19:35Z,"#3363 
Just linking these, because they are relevant to one another I think.
"
50298194,2006,highwindmx,2014-07-28T03:55:21Z,"Or find some ways to let x-lets can be edited(moved) easily but not accidentally, some way I think can be options:
1.two click way (like renaming file with double clicking issue);
2.press right click to drag;
3.right click pop up a ""move icon"" to drag;
4.hove-over to show a side-bar to drag (like in KDE).
"
52877673,2006,anandrkris,2014-08-21T04:33:55Z,"IMO, Panel applets / desklets in Desktop are not likewise comparable. Panel applets should be locked by default (as-is) and desklets should not be locked by default. (as-is). i would like to have desklets behave akin to icons on desktop which can be freely moved.
However, agree that we need to fix issues related to unintentional movement and have an option to restrict movement for users who need it.
Few everyday use cases -
- I have a fortune literature quote of the day _(goes without saying that it makes me feel erudite)_ :wink:  and the text in it would vary and hence its size. So would like to have this portable.
- I may want to take notes in my Sticky Notes desklet from another application window which is snapped / tiled.
- As above, use Calculator desklet to do basic arithmetic....
"
22054649,2320,ManIVIctorious,2013-08-03T13:07:25Z,"cool, but are the search-strings configurable?
"
22063814,2320,dalcde,2013-08-03T23:14:47Z,"no

EDIT: now they are
"
22442452,2320,clefebvre,2013-08-10T16:13:24Z,"A couple of things:
- We could add icons in front of the search engine
- As unpopular as this will be, Google cannot be in the list (their TOS forbids CSE to be used, and the Mint policy doesn't allow for commercial engines to be present by default if they don't share the revenue generated by our users).
- Yahoo could be added, but the locale would have to be checked (it's a different Yahoo depending on it, and it's not available for all locales)
- Generic and non-generic engines could be separated by a separator... for instance Yahoo, DuckDuckGo, separator, Wikipedia..separator, Amazon, etc..
- We could use the settings API for this, giving the ability for the user to configure things.
- Other distros are likely to patch the default settings too, we should make sure they're able to do so.
"
22457031,2320,dalcde,2013-08-11T12:33:13Z,"What do you mean by locales in Yahoo? afaik searching with Yahoo in firefox directs me to Yahoo US regardless of where I actually am
"
22474041,2320,dalcde,2013-08-12T05:34:12Z,"Need better icons :(
"
22810595,2320,dalcde,2013-08-17T12:09:35Z,"I'd consider this pull request complete. Separator functionality is implemented but not used by default
"
25627230,2320,corbin-auriti,2013-10-03T14:54:26Z,"Because we can't include Google by default, can the user still add it?
"
25641777,2320,imarkskinner,2013-10-03T17:42:00Z,"My 2 cents for what its worth, I agree with RavetcoFX, its not possible for Google to be included by default but hopefully it is easily added in a similar fashion that Google search is is easily added to the default Firefox setup
"
25817543,2320,clefebvre,2013-10-07T15:21:27Z,"Hi,

This is promising but I can't consider it complete until the set of engines is able to differ for each locale.
"
33658395,2320,anandrkris,2014-01-30T03:56:44Z,"KDE Homerun looks a lot like Cinnamon. Displays search results in multiple columns. Sharing here for interest.
http://blogs.kde.org/2014/01/29/homerun-120
![homerun_kicker_1 1](https://f.cloud.github.com/assets/4663298/2037085/24eeb544-8961-11e3-8d25-37f636a4e70e.png)
![homerun_kicker_2 1](https://f.cloud.github.com/assets/4663298/2037113/483f3522-8962-11e3-85de-057823e07bd5.png)
"
37020704,2320,ghost,2014-03-07T12:44:24Z,"Hi, i need to say that the dalcde request it's implemented on the applet Configurable Menu:
https://github.com/lestcape/Configurable-Menu
Appear that all work well... I also take a look of the code of Mint Menu, and change the url of google to appear the Mint logo on search...

Like @dalcde said, we can not have a Yahoo  or google locale, but we can have a wikipedia locale. I really don't know if wikipedia have all locales, but if wikipedia do not have all locales, who have all locales then? I added to my implementation a code to fixed the locale of the user when he search on the wikipedia. Also will be good have a listbox on settings to allow user add more search engines.

Thanks for all works...
"
38403917,2320,clefebvre,2014-03-24T00:52:44Z,"Closing. The idea is still very good but glebihan took the lead with a new implementation, more generic, with locale support and fully functional called ""search providers"".
"
31286391,2779,mintystark,2013-12-28T00:29:21Z,"Sorry, but I don't agree.  Release is very common.  Also some applets have drag and drop like the Application Launcher.  Why would you prefer on press?
"
31294321,2779,Garibaldo,2013-12-28T10:50:53Z,"@mintystark So you shouldn't use any other Desktop Environment then, because every single other DE, on any operating system, uses ""on button press"" event in order to open their main menus.
Anyway, this appplet: http://cinnamon-spices.linuxmint.com/applets/view/163 allows you to choose how should the menu be opened: either ""on button press"" or ""on button release"". So it's possible to use ""on button press"" only for the application menu, while the other applets stay using ""on button release"". 
By the way, this ""Configurable Menu"" applet has many other very interesting features that could be brought to the Cinnamon stock application menu, such as resizing by mouse dragging and changing the way of showing the application items.
"
31309441,2779,mintystark,2013-12-29T02:17:29Z,"Well, if you give people the option then I guess it is fine. 
For menus it is ok, but for applications I would still prefer to open on release.
I agree that having the option for users to choose is fine as long as it isn't made default.
"
31310764,2779,mtwebster,2013-12-29T03:44:06Z,"This has a fairly significant impact on the perceived speed of opening menus.  And perception counts for quite a bit.

Also, drag and drop functionality is preserved in the window list and panel launcher applets.  Launching a panel launcher and focusing a window from the window list are still considered 'button release' events.

The only downside I see to this, and it remains to be seen how it will fair.. is there is potential, if you begin moving the mouse off the applet in anticipation of its menu, your button-release event could end up activating something unintentionally.  It has not happened for me yet during my testing, however.
"
31311869,2779,corbin-auriti,2013-12-29T05:34:16Z,"This works well for me, it oddly does appear to make opening applets ""snappier"". With your concern about opening items with the button release, I wouldn't say its a major issue since the shutdown/lock/logout is not activated by that, but the favorites could be activated if the user swung their mouse to high. I guess if this is merged we will see complaints or not...
"
31361252,2779,mdchaves,2013-12-30T18:49:53Z,"Great improvement! Thanks mtwebster. It's crazy how such a small change can have an impact so significant on the perception of snappiness. Indeed, with respect to the menu, each split second matters.  
@mtwebster why didn't you merge it directly into the master branch? It would be easier for the users to test it through the nightly ppa. 
@mtwebster is there still room for speed improvement? I'm not complaining, I'd just like to know whether there is still plans for optimizing the menu opening speed further.  
"
31361674,2779,mtwebster,2013-12-30T18:58:01Z,"I didn't merge it because it really didn't fall under 'bugfix' - I'm waiting to see if clem does another point release for 2.0 before moving to 'development' mode.

There could be room for improvement still.  We're likely going to iterate through the applet again and improve and add some new stuff, more optimization could result as well.
"
31382585,2779,gauravjuvekar,2013-12-31T03:40:47Z,"Does this include keyboard shortcuts (super button) on-button-pressed or on-button-released? That would be a problem for shortcuts like super+d
"
31545132,2779,mtwebster,2014-01-03T19:03:36Z,"No, this has no effect on keyboard shortcuts, only mouse.
"
33837778,2779,collinss,2014-01-31T20:10:09Z,"@mtwebster I found a bug with this. If the menu has not yet opened and you move your mouse over where the menu will be, it activates whatever menu item is at that location when it does open. This happens to me a lot. Perhaps this wont be an issue for faster computers, but for older ones like mine, this is a big problem.
My guess is that the button release doesn't get handled until after everything from the button press is completed (including opening the menu, due to the single-threaded nature of Cinnamon). By the time it does register the release event, the mouse has moved so the location that gets registered is not the location where the release occurs - and thus Cinnamon thinks that it happened over the now-open menu, which in turn triggers the menu item.
I'm not sure of the best solution to the problem though...
"
33842180,2779,mtwebster,2014-01-31T21:03:15Z,"Yep - I noticed that before I merged it, but I wanted to see if it was something I would 'adjust' to or not.

It's definitely a problem with the menu applet... however in regular popups it could be advantageous, as you can more quickly open a menu, select an item, and activate it (on button-release).  This is how GTK already behaves with regards to menus.
"
33842789,2779,collinss,2014-01-31T21:10:40Z,"Hmm... I see what you mean, though there is still the problem where, if I release the mouse while still over the applet, then move my mouse, it will still trigger the menu item.
"
31050649,2765,corbin-auriti,2013-12-20T23:57:20Z,"Nice pull, but I am not a huge fan of it being dependent on window-list-applet-scroll, just my two-cents though.
"
31056763,2765,mdcb,2013-12-21T04:43:38Z,"TBH I am not a huge fan of window-list-applet-scroll.
If the pull goes under consideration, I can add check options for different scroll-wheel behaviours config, but best I think: CTRL-scroll opacity always on. The key modifier somewhat shields the new behaviour if people don't fancy it.
"
31056907,2765,corbin-auriti,2013-12-21T04:53:13Z,"Personally I could see putting a slider in the right click pop-up menu along with the ctrl-scroll
"
31056939,2765,mdcb,2013-12-21T04:55:30Z,"I'm definetly not a huge fan of slider, too much mouse action.
All the options could away with:
scroll -> nothing
CTRL-scroll -> change opacity
ALT-scroll -> circulate window
"
31058024,2765,corbin-auriti,2013-12-21T06:37:16Z,"What do you mean by circulate window? 
And the slider would go alongside the mouse scrolling, it would be there for simple users to find.
"
31058495,2765,mdcb,2013-12-21T07:21:18Z,"> What do you mean by circulate window?

I meant 'cycle window' - what ""Enable mouse-wheel scrolling in Window List applet"" is currently doing.

> And the slider would go alongside the mouse scrolling, it would be there for simple users to find.

I'm not convinced. The leaner the better. But you're welcome to make another pull req. :)
"
31064583,2765,mtwebster,2013-12-21T14:47:08Z,"I'm not convinced of the usefulness of this, and I wonder if this wouldn't be better off as a global binding on the title bar of a window (handled in muffin) rather than part of the applet.
"
31104480,2765,mdcb,2013-12-23T05:00:28Z,"Having control of the window opacity can be quite useful if you need a quick visual diff tool: e.g. compare some plots, dataset images, a complete desktop session, PDF spec sheets, etc - I simply superpose windows (can be previously taken screenshots) and quickly get what's changed or different looking through the layers.

Agreed something from the window title bar would be best (a la compiz/beryl). I looked into it long time ago and resigned myself because the code was too complex. It seemed the opacity setting would only be transient if I recall - iconizing windows and bringing them back reset to fully opaque, IIRC.

The windows-list applet turned out fairly easy to hack in comparison.

Maybe the windows-list applet could provide (has?) hooks for extension. This is actually the second time I'm patching it and thought maybe the original authors/maintainers might like the idea.

That's where it's at.
"
35917564,2765,corbin-auriti,2014-02-24T18:22:35Z,"For now I would suggest to upload it as an applet in the cinnamon spices, and see what other people think.
"
36084323,2765,mdcb,2014-02-26T02:26:07Z,"applet in spices - http://cinnamon-spices.linuxmint.com/applets/view/178
"
38387026,2765,clefebvre,2014-03-23T16:13:38Z,"Hi,

+1 on mtwebster, I think that's better in muffin. Ideally not only on the titlebar but also on the content of the window. With that said.. careful, CTRL+mousewheel is used by certain apps. In Firefox and in Nemo for instance it modifies the zoom level.
"
40171341,2765,corbin-auriti,2014-04-11T05:11:49Z,"Mabey we can look into something like this for muffin: 

![enable_transparency_windows7_5](https://cloud.githubusercontent.com/assets/1816681/2676409/e2e5ef3c-c137-11e3-9767-5a4f3cb81ff7.jpg)
"
5522402,673,bjo81,2012-05-04T23:24:03Z,"Works here.
"
5524692,673,ghost,2012-05-05T05:45:42Z,"Why did you revert #588 ?
"
5525033,673,tesfabpel,2012-05-05T07:03:44Z,"Sorry... i'll fix it with the latest version... :(((((
"
5526185,673,bjo81,2012-05-05T11:01:59Z,"This isn't bad that you reverted #588, so this version also works with 1.4.
"
5526239,673,tesfabpel,2012-05-05T11:09:32Z,"@bjo81 You can grab the file for 1.4 here: https://gist.github.com/2596526 :)
"
5534894,673,AlbertJP,2012-05-06T11:18:26Z,"@tesfabpel You can commit any reverted code again and then push that to your patch-1 branch:
$ git checkout patch-1
then edit the files
$ git commit _filename_
$ git push
(correct me if I'm wrong, I'm not a git expert)
"
5559065,673,im-kulikov,2012-05-07T19:51:54Z,"to tesfabpel:

thanx, it fix this issue.
"
5579753,673,AlbertJP,2012-05-08T16:52:23Z,"@tesfabpel You committed the ""fix"" to the master branch instead of the patch-1 branch. Please do git checkout patch-1 then commit it again to the patch-1 branch. then it gets included in this pull request.
"
5581075,673,tesfabpel,2012-05-08T17:35:50Z,"Please tell me that I did it correctly -.-
(PS: I'm doing it from the web interface in Github...)
If I didn't, I'll close my fork because I'm not able to do it (it's my first time with Github, never used git before... :(((( )
There is a Gist for this patch everyone is allowed to fork cinnamon and post it the right way...
"
5581868,673,AlbertJP,2012-05-08T18:05:31Z,"@tesfabpel The commit is added to the pull request. However you or your text editor replaced tabs with spaces causing a huge diff containing mostly nonsense. I don't know how Clem thinks about this, perhaps he'll commit the things that actually make sense himself and close the request (this happened when pull requests became incompatible because of invasive changes in Cinnamon master).
Probably the easiest way to fix it is by closing this pull request, and using the ""Fork & edit"" button above the file in the tree to commit the changes that do make sense to a new clean pull request that does not revert anything.

I know myself how confusing git/github can be to people new to it. I don't blame you for not understanding it.
"
5582209,673,tesfabpel,2012-05-08T18:18:15Z,"Okay I'll do that... Maybe this time it will be Okay :)

I'm reading the git book available at
http://git-scm.com/book
so maybe the next time I won't do any damage ^^
"
5582886,673,tesfabpel,2012-05-08T18:45:07Z,"Okay I've started over and created a new fork and pull request...
https://github.com/linuxmint/Cinnamon/pull/678
I paid much attention to spaces and tabs and now it reports +18 additions and -3 deletions... :)
Fix for Issue #588 is there (I haven't reverted again :P)...
So it should work...

Thanks very much guys for assisting my in my first contribution (although) to the Open Source World :)
"
8768194,1173,autarkper,2012-09-21T15:24:52Z,"I have tested Cobinja's branch and found that is works beautifully. Since we don't have any ranges yet in our schema, I had to invent a few arbitrary ones:

```
<key type=""i"" name=""panel-hide-delay"">
  <default>20</default>
  <range min=""15"" />
  <summary>Duration of the delay before a shown panel is hidden</summary>
  <description>Duration of the delay (in milliseconds)</description>
</key>

<key name=""panel-top-height"" type=""i"">
  <default>25</default>
  <range min=""15"" max=""100"" />
  <_summary>Panel size</_summary>
  <_description>
    User-defined panel-height for top panel
  </_description>
</key>

<key name=""panel-bottom-height"" type=""i"">
  <default>25</default>
  <range max=""100"" />
  <_summary>Panel size</_summary>
  <_description>
    User-defined panel-height for bottom panel
  </_description>
</key>
```
"
8770164,1173,mtwebster,2012-09-21T16:28:42Z,"Why not add those updated keys in this request also?  And anymore that may be needed.

Looks like there should be a min also in the panel-bottom-height key.
"
8771478,1173,autarkper,2012-09-21T16:34:34Z,"Actually, those were only my test values. On Cobinja's suggestion I made 
some of the ranges incomplete, so that could be tested too.
"
8771734,1173,Cobinja,2012-09-21T16:34:54Z,"@mtwebster: For two reasons: 1. We haven't agreed yet on a suitable minimum height for panels. 2. I wanted to keep the functionality separated from schema changes.
"
8782967,1173,mtwebster,2012-09-21T23:11:33Z,"I was working on something else in cinnamon-settings.py, and came across a GSettingsRangeSpin class - it's only used once, for font scaling, but essentially accomplishes the same thing I think.
"
8783103,1173,Cobinja,2012-09-21T23:21:48Z,"@mtwebster : Essentially it does, except for the fact that it does not take into account keys without a schema-defined range. For those keys, it will fail and probably make cinnamon-settings crash. Gladly, the one it's used for does have a range.
I asked Clem about it and GSettingsRange, another class for the same use case, which is not used at all. He said ""just leave it in, like all the unused GConf classes.""
"
8822744,1173,Cobinja,2012-09-24T15:27:56Z,"This fixes #1165
"
8823595,1173,autarkper,2012-09-24T15:49:47Z,"@Cobinja: or rather, ""makes it unlikely to happen by mistake""? :)
"
8825898,1173,Cobinja,2012-09-24T16:52:09Z,"@autarkper: That's a ""yes"", if someone changes the panel height with an application that doesn't care about schema defined ranges.
"
9897702,1173,autarkper,2012-10-30T08:18:28Z,"I have merged this to my master branch.
"
11156809,1173,autarkper,2012-12-08T09:25:02Z,"This one needs to be rebased, after the modularization of cinnamon-settings.py.
"
11159053,1173,Cobinja,2012-12-08T14:14:32Z,"Rebased to current master
"
13881614,1664,AlbertJP,2013-02-21T10:09:03Z,"This pull also can't be merged automatically right now, maybe you need to rebase it.
"
13935908,1664,nbourdau,2013-02-22T09:56:07Z,"Rebased!
"
13936126,1664,nbourdau,2013-02-22T10:03:04Z,"Now cleanly rebased! :-)
"
13939067,1664,AlbertJP,2013-02-22T11:28:12Z,"GitHub still tells me it can't be automatically merged.
"
13939488,1664,nbourdau,2013-02-22T11:41:07Z,"Oops, my bad.

NOW it is rebased correctly. :-)

BTW I have removed the commit about demoting cinnamon-control-center to
recommends since it is off topic of this pull request.
"
13942975,1664,AlbertJP,2013-02-22T13:22:58Z,"It's fixed. Thank you.
"
16601848,1664,AlbertJP,2013-04-18T19:43:28Z,"Ok, it didn't get merged yet (even though I really appreciate this cleanup) and it's conflicting again since #1865 got merged.
"
16723148,1664,nbourdau,2013-04-21T13:31:33Z,"I think it would be nice these commits get integrated, or that somebody tell be that they will not make it... I get tired to rebase at every release :-)
"
16738581,1664,clefebvre,2013-04-21T18:16:42Z,"Salut Nico,
1. Apologies for the delay and the needs for rebasing
2. Many thanks for this one, it's much clearer during the build.
3. I noticed the following:

dpkg-gencontrol: avertissement: champ Depends du paquet cinnamon : variable de substitution inconnue ${icon-theme:Depends}
dpkg-gencontrol: avertissement: paquet cinnamon : variable de substitution inutilisée ${python:Depends}
"
16790232,1664,AlbertJP,2013-04-22T14:19:13Z,"cinnamon-enum-types.c is auto-generated, but cinnamon-enum-types.h is not, so it generates an error.
"
16794725,1664,nbourdau,2013-04-22T15:27:00Z,"@AlbertJP: Both are autogenerated. I believe that if you have
experienced issues with them it was due to some leftovers of previous build.

@Clem: no problem about the delay... I should have ping earlier but I
thought it was because of issues I was not aware.

Concerning the ${python:Depends}, it is not critical, i.e. the generated
binary packages are no worse than before with respect to this. Anyway I
will provide in few days a patch to make use of it.

For ${icon-theme:Depends}, it is normal on Debian... I mimic the same
behavior as before (check previous version of debian/rules):
${icon-theme:Depends} is substituted by gnome-icon-theme-full only on
Ubuntu. On debian nothing is done.

Cheers,
Nicolas
"
16801322,1664,AlbertJP,2013-04-22T16:55:40Z,"@nbourdau I was compiling it with make instead of dpkg-buildpackage when I encountered the missing cinnamon-enum-types.h file. With dpkg-buildpackage it did generate the file. Anyway I'll start again with a clean cinnamon git to see if that fixes it. For the moment I manually put back the old file.
"
10927350,1448,autarkper,2012-12-02T08:35:35Z,"I have merged this to my master branch. I don't have many applications installed, and my menu is not very slow to begin with, so I'm not expecting to see much difference personally, but others may do.
"
10930646,1448,dalcde,2012-12-02T15:10:17Z,"Helps (but not solves) #1389
"
11157054,1448,autarkper,2012-12-08T09:59:13Z,"I cannot find the menu_speedup branch anymore.
"
11167155,1448,joequant,2012-12-09T03:36:26Z,"I found that the speed up didn't do very much.  I reset my tree to much mtwebster/Cinnamon and I'm working on the menu-again branch
"
11171391,1448,joequant,2012-12-09T14:19:34Z,"I've ported my changes over to joequant:menu-again which includes a lot of mtwebster's fixes.
"
12483547,1448,Lusito,2013-01-21T03:39:17Z,"app.get_id() sometimes returns null. you can't use that as key, you will remove all but one application of those that return null as id.
"
12545607,1448,joequant,2013-01-22T14:04:52Z,"would it work to just use app as a key? 
"
12578635,1448,Lusito,2013-01-23T02:27:58Z,"no, javascript can't use objects as keys, they will be cast to strings. i.e. if you do obj[app] = value; the key will be ""app"". or at least that's how it works in most browsers.
"
12596045,1448,joequant,2013-01-23T13:49:13Z,"What about app.get_name()  if you have two apps that have the same name then it's not going to be too useful to add both to the menu.
"
12602866,1448,Lusito,2013-01-23T16:13:14Z,"I guess name + description would be quite unique. even if name in itself should be somewhat unique, just look at the name ""Files"" for nemo and you'll see that it won't be enough.
I'd probably go for app-id if exists and name+description if not.
"
12609035,1448,joequant,2013-01-23T17:02:06Z,"I just put in a pull-request to mtwebster/menu-again that does this.  Thanks for the note.
"
13881171,1448,AlbertJP,2013-02-21T09:59:35Z,"Since your code is merged into mtwebster's branch, I am closing this pull request.
"
241364330,5556,HermannDppes,2016-08-22T09:48:20Z,"Spotify currently crashes randomly, leading me to detect an issue with this.

I'm on Cinnamon 3.0.7 and copy-pasted this over my sound applet. (Works beautifully otherwise, so far.)

Steps to reproduce:
- 1. Open two players. (Spotify and VLC in my tests.)
- 2. Kill one (`$killall spotify` or `$killall vlc`)
  _Ideal result:_ Killed player vanishes.
  _Actual result:_ Killed player still shown in selection.
- 3. Select killed player.
  _Expected result:_ Applet detects mistake, takes steps to correct.
  _Actual result:_ Killed player gets “selected” dot.
- 4. Select unkilled player.
  _Expected result:_ Chosen player selected.
  _Actual result:_ Nothing happens.
- 5. Start killed player again.
  _Expected result:_ I don't even know anymore. Everything works again?
  _Actual result:_ Player shows double, only selected once. Still can't be unselected.

**Note:** This issue appears if player is restarted _before_ selecting the dead version, too. With the same end result.

**Current workaround:** Alt+F2, “r”

So far I have not been able to produce a player showing triple, but I could get both VLC and Spotify to show double.

Last, but not least: Thank you for this patch, it has increased my appreciation for this applet immensely.
"
241378529,5556,marcus-lundgren,2016-08-22T10:53:25Z,"Thank you for the feedback!

I was unable to exactly reproduce the behavior you described. But I did however remember something similar happening to me before, which seemed to be due to Cinnamon crashing. By crashing Cinnamon, I was able to reproduce a behavior similar to what you described.

I've made another commit that will remove entries from the list if the associated player doesn't seem to exist anymore. It also includes a fix for an issue that could arise when a ""owner change"" happened.

Could you try and see if this fixes your issues? And just as an FYI, you can put this applet in **~/.local/share/cinnamon/applets** instead of overwriting the actual player in **/usr/share/cinnamon/applets**. :-)
"
241420132,5556,HermannDppes,2016-08-22T13:56:20Z,"I can't test properly right now, but first impressions: When killed with `killall` players usually vanish immediately, got a dead player only once. That vanished properly when clicked on, focus returned to only other player.

**_tl;dr:**_ Looks good so far.

Thanks for he FYI, seems a lot saner than my method.
"
244931935,5556,ManIVIctorious,2016-09-06T12:15:18Z,"I hope this gets merged before cinnamon 3.2
"
246223488,5556,mtwebster,2016-09-12T02:10:02Z,"Hi, thanks for this - I've been testing some other things and ran into the fact I couldn't change running players.  A bit of feedback:

I'm getting the following in ~/.xsession-errors when I close a player (either via the applet x or the player itself)  - 

```
(cinnamon:2307): Cjs-WARNING **: JS ERROR: Exception in callback for signal: destroy: Error: No signal connection 4 found
_disconnect@resource:///org/gnome/gjs/modules/signals.js:74
PopupMenuBase.prototype.addMenuItem/<@/usr/share/cinnamon/js/ui/popupMenu.js:1847
_emit@resource:///org/gnome/gjs/modules/signals.js:140
PopupMenuBase.prototype.destroy@/usr/share/cinnamon/js/ui/popupMenu.js:2008
Player.prototype.destroy@/usr/share/cinnamon/applets/sound@cinnamon.org/applet.js:834
MyApplet.prototype._removePlayer@/usr/share/cinnamon/applets/sound@cinnamon.org/applet.js:1247
@/usr/share/cinnamon/applets/sound@cinnamon.org/applet.js:938
_emit@resource:///org/gnome/gjs/modules/signals.js:140
_convertToNativeSignal@resource:///org/gnome/gjs/modules/overrides/Gio.js:129


(cinnamon:2307): Clutter-CRITICAL **: clutter_actor_remove_child: assertion 'child->priv->parent != NULL' failed

(cinnamon:2307): Cjs-WARNING **: JS ERROR: Exception in callback for signal: destroy: Error: No signal connection 7 found
_disconnect@resource:///org/gnome/gjs/modules/signals.js:74
PopupMenuBase.prototype.addMenuItem/<@/usr/share/cinnamon/js/ui/popupMenu.js:1847
_emit@resource:///org/gnome/gjs/modules/signals.js:140
PopupMenuBase.prototype.destroy@/usr/share/cinnamon/js/ui/popupMenu.js:2008
Player.prototype.destroy@/usr/share/cinnamon/applets/sound@cinnamon.org/applet.js:834
MyApplet.prototype._removePlayer@/usr/share/cinnamon/applets/sound@cinnamon.org/applet.js:1247
Player.prototype._dbus_acquired/btn<@/usr/share/cinnamon/applets/sound@cinnamon.org/applet.js:314


(cinnamon:2307): Cjs-WARNING **: JS ERROR: Exception in callback for signal: destroy: Error: No signal connection 7 found
_disconnect@resource:///org/gnome/gjs/modules/signals.js:74
PopupMenuBase.prototype.addMenuItem/<@/usr/share/cinnamon/js/ui/popupMenu.js:1847
_emit@resource:///org/gnome/gjs/modules/signals.js:140
PopupMenuBase.prototype.destroy@/usr/share/cinnamon/js/ui/popupMenu.js:2008
Player.prototype.destroy@/usr/share/cinnamon/applets/sound@cinnamon.org/applet.js:834
MyApplet.prototype._removePlayer@/usr/share/cinnamon/applets/sound@cinnamon.org/applet.js:1247
Player.prototype._dbus_acquired/btn<@/usr/share/cinnamon/applets/sound@cinnamon.org/applet.js:314


(cinnamon:2307): Clutter-CRITICAL **: clutter_actor_remove_child: assertion 'child->priv->parent != NULL' failed
```

It could be you're destroying something twice.  

.xsession-errors will usually contain errors like this - things related to introspected libraries rather than javascript-specific stuff ( which tends to end up in .cinnamon/glass.log)

One other observation, I'm not sure I'm crazy about having an extra line there simply to tell me there are multiple players.  What about having the expander on the currently active player (so during normal use, the player looks the same as without this chooser, except with the addition of the expander arrow).  You expand it, and can select another player, and that one now becomes the visible player, the expander collapses automatically behind you.  Just something to consider - I was gonna merge this anyhow, and worry about it later, but for the errors.
"
246438669,5556,marcus-lundgren,2016-09-12T18:10:50Z,"I am able to reproduce this error with the existing sound applet, which suggests that it was not introduced in the changes I've made. For me, the easiest way to reproduce this was to have two players active, and then closing them one by one with maybe a small number of seconds apart (haven't tried with faster/slower, as time is sparse). Are you also able to reproduce it in the currently released version?

I've thought about having the player be an expander itself. But for me, the list approach seems nicer. Then the items don't jump around whilst selecting a new player, which means that you can click through them all as you wish. It would also mean that the close button wouldn't be able to be next of the player name. The close button could of course be moved, but I wanted to do as small changes as possible to the existing behavior/look of the applet.
"
246511281,5556,marcus-lundgren,2016-09-12T22:10:36Z,"Nevermind, read one of the stack trace types wrong. One of the stack trace types you have suggests that when using the close button of the active player in the applet could be problematic. I was unable to reproduce the issue, but since it seems to works just fine without the call so I've simply removed it. This should fix the stack trace originating from:

```
Player.prototype._dbus_acquired/btn<@/usr/share/cinnamon/applets/sound@cinnamon.org/applet.js:314
```

Please let me know if you still have issues related to this.

The other stack trace type is the one that I've been able to reproduce using the original version of applet however. It has something to do with how the DBus listener handles owner changes. My knowledge of how this should work is beyond me at the moment, so I don't feel confident enough to attempt at a fix for it in this PR.
"
254189533,5556,clefebvre,2016-10-17T12:08:56Z,"Hi @marcus-lundgren. Sorry it took me so long to get involved in this PR.

I like it but I'm having cold feet. 

I observed two issues when testing this but I'm unable to reproduce them always.

The first one isn't critical, on my first try I already had Spotify opened. The applet showed me the option to switch between two ""spotify"" players. After switching from spotify to spotify (hehe), the choice disappeared as if the applet understood there was only one player.

The second one is much more serious. I get random Cinnamon crashes when switching controls between Spotify and Banshee. 

`(cinnamon:2645): St-CRITICAL **: st_theme_context_get_for_stage: assertion 'CLUTTER_IS_STAGE (stage)' failed
Window manager warning: Log level 8: g_object_get: assertion 'G_IS_OBJECT (object)' failed

(cinnamon:2645): St-CRITICAL **: st_theme_context_get_for_stage: assertion 'CLUTTER_IS_STAGE (stage)' failed
Window manager warning: Log level 8: g_object_get: assertion 'G_IS_OBJECT (object)' failed

(cinnamon:2645): Cjs-WARNING **: JS ERROR: Error: cairo error on context: ""invalid value (typically too big) for the size of the input (surface, pattern, etc.)"" (32)
BoxPointer.prototype._drawBorder@/usr/share/cinnamon/js/ui/boxpointer.js:287

(cinnamon:2645): Cogl-ERROR **: Failed to create texture 2d due to size/format constraints
Gtk-Message: GtkDialog mapped without a transient parent. This is discouraged.

*\* (gnome-panel:27866): WARNING **: Failed to register client: GDBus.Error:org.gnome.SessionManager.AlreadyRegistered: Unable to register client

(cinnamon:27927): Cjs-WARNING **: JS ERROR: Exception in callback for signal: destroy: Error: No signal connection 7 found
_disconnect@resource:///org/gnome/gjs/modules/signals.js:74
PopupMenuBase.prototype.addMenuItem/<@/usr/share/cinnamon/js/ui/popupMenu.js:1847
_emit@resource:///org/gnome/gjs/modules/signals.js:140
PopupMenuBase.prototype.destroy@/usr/share/cinnamon/js/ui/popupMenu.js:2008
Player.prototype.destroy@/usr/share/cinnamon/applets/sound@cinnamon.org/applet.js:833
MyApplet.prototype._removePlayer@/usr/share/cinnamon/applets/sound@cinnamon.org/applet.js:1266
@/usr/share/cinnamon/applets/sound@cinnamon.org/applet.js:940
_emit@resource:///org/gnome/gjs/modules/signals.js:140
_convertToNativeSignal@resource:///org/gnome/gjs/modules/overrides/Gio.js:129
`
"
254940206,5556,marcus-lundgren,2016-10-19T21:03:52Z,"Thanks for the feedback, @clefebvre.

The first issue is one I've experienced mostly when the applet has been readded to the panel or when Cinnamon has been restarted/crashed. A possible fix could be to redo the whole list of available players based on the list of player objects that exists, but I am not really sure when this should be done (unless there is a good signal/method that is called when left clicking the applet). I've used this applet since August and can't recall having those issues outside of those scenarios mentioned earlier, which makes it at least for me not that big of an issue.

I guess that it is only the last stacktrace that you attribute to my applet. Please correct me if I am wrong in this assumption. This stacktrace is identical to the one that @mtwebster referred to, which I've been able to reproduce with the current version of the applet shipped in stable Cinnamon. This would therefore suggest that the issue wasn't introduced in this PR. Would you mind testing out the current stable version of the sound applet and see if you can also recreate the issue there?
"
256303009,5556,clefebvre,2016-10-26T10:01:01Z,"I'm able to confirm this exception on master:

(cinnamon:28585): Cjs-WARNING **: JS ERROR: Exception in callback for signal: destroy: Error: No signal connection 4 found
_disconnect@resource:///org/gnome/gjs/modules/signals.js:74
PopupMenuBase.prototype.addMenuItem/<@/usr/share/cinnamon/js/ui/popupMenu.js:1936
_emit@resource:///org/gnome/gjs/modules/signals.js:140
PopupMenuBase.prototype.destroy@/usr/share/cinnamon/js/ui/popupMenu.js:2097
Player.prototype.destroy@/usr/share/cinnamon/applets/sound@cinnamon.org/applet.js:833
MyApplet.prototype._removePlayer@/usr/share/cinnamon/applets/sound@cinnamon.org/applet.js:1230
@/usr/share/cinnamon/applets/sound@cinnamon.org/applet.js:939
_emit@resource:///org/gnome/gjs/modules/signals.js:140
_convertToNativeSignal@resource:///org/gnome/gjs/modules/overrides/Gio.js:129

It happens if I run two players and I terminate the player tracked by the applet. It doesn't crash cinnamon though.
"
256303167,5556,clefebvre,2016-10-26T10:01:48Z,"Getting these two on master.. same thing:

(cinnamon:28585): St-CRITICAL **: st_theme_context_get_for_stage: assertion 'CLUTTER_IS_STAGE (stage)' failed
Window manager warning: Log level 8: g_object_get: assertion 'G_IS_OBJECT (object)' failed
"
256304573,5556,clefebvre,2016-10-26T10:08:01Z,"I can't make it crash anymore :)

The other day I pasted this:

> (cinnamon:2645): Cjs-WARNING **: JS ERROR: Error: cairo error on context: ""invalid value (typically too big) for the size of the input (surface, pattern, etc.)"" (32)
> BoxPointer.prototype._drawBorder@/usr/share/cinnamon/js/ui/boxpointer.js:287
> 
> (cinnamon:2645): Cogl-ERROR **: Failed to create texture 2d due to size/format constraints

There's no boxpointer in Cinnamon anymore.. maybe that's why it no longer occurs. In any case, it looks good and ready to merge.
"
260128900,5942,brownsr,2016-11-12T15:37:38Z,"I can't see any change.  Is there a bug that describes the problem you are trying to solve, or some other case where you see an issue ? How do I reproduce a problem case that this solves ?
"
260129685,5942,Odyseus,2016-11-12T15:49:13Z,"Hello, @brownsr.
Sorry for not being specific. I was having internet connection problems and didn't have the opportunity to update my initial comment.

The problem is simple. The code that I added back is responsible for showing the separator inside the context menu for applets when one adds to the context menu some custom menu items.

In a nut shell, the context looks like this...
![context-not-ok](https://cloud.githubusercontent.com/assets/3822556/20239018/39db3440-a8d6-11e6-914c-b65fad4c000d.png)

When it should look like this...
![context-ok](https://cloud.githubusercontent.com/assets/3822556/20239017/39d332ae-a8d6-11e6-99d7-ceaaf57896d7.png)

@brownsr: I will wait for your response to update the commit message in case you provide more information.
"
260151486,5942,NikoKrause,2016-11-12T22:04:57Z,"Sorry, I don't get it either. The contextMenu of which applet is this?
"
260152405,5942,JosephMcc,2016-11-12T22:20:18Z,"I would like to see the normal context items put into a preferences submenu when an applet adds additional menu items to it. Something like was done here for the panel launchers applet: https://github.com/linuxmint/Cinnamon/commit/2271b0c73a5aedde667cd3b236f5411eaba2a924
"
260168622,5942,collinss,2016-11-13T05:54:14Z,"@JosephMcc I disagree. Often there's only one or two additional options there, and that seems a little bit clunky to me. For example, in the sound applet there is only mute input and output, plus the normal options. It doesn't look too long, and it's not hard to find what you're looking for. Putting those extra things in a submenu would make it slightly harder to access, and would make it less consistent. Plus, that would be a fairly significant change when the new version of Cinnamon has already been tagged.
"
260171029,5942,Odyseus,2016-11-13T07:20:03Z,"@NikoKrause.
The applet is irrelevant. I used and image of a context menu of an applet with custom items just to show the difference with the separator added and without it. I updated the first comment and the commit message with detailed information. Let me know if you understand it now.

@JosephMcc
I agree with **collinss** view on this one; to which I add. Context menus have to have easy and fast access at all times. In a context menu with sub-menus built with any toolkit, one can access those sub-menus quickly by hovering over them. The sub-menus built with Clutter(?) are, to cut it short, the epitome of clumsiness. Not just because it requires to click on them to open them, but also because they are constantly resizing the width of a menu. And if the menu that a sub-menu has to display contains a scrollbar, you will see the clumsiness I talked about in its maximum expression.

~~**About the Launchers applet:** In this applet a sub-menu for the default actions (About, Configure, etc.) in its context menu would make sense. But a sub-menu for actions that will be performed with the launchers, it's just annoying. When one right click on a launcher, 99% of the time it's because one wants to perform an action related to the launcher. The sub-menu is there just to add an extra click. In my opinion, that first sub-menu should be removed, or at least be open by default.~~
"
260172191,5942,brownsr,2016-11-13T07:58:02Z,"@Odyseus I finally found somewhere your code affected so I could test before/after.  The context menu on the workspace switcher shows its effects.  It tests out fine (Mint-X) and I have found no issues.  But themes like Mint-Y that I imagine do not have a separator will just show a blank line, that does not look obtrusive to my eyes.  I am not going to get into the separator vs sub-menu debate, all I wanted to do was to test your code out, which I have now done.
"
260172792,5942,Odyseus,2016-11-13T08:17:11Z,"@brownsr: Sorry, I can't explain it better than I already did. The detailed description that I added to the first message and the code added by this commit speak by themselves.

@JosephMcc: Forget what I said about the launchers applet. Clearly, I don't use it (It's the first thing that I remove from all desktop environments I use). Because it makes perfect sense both sub-menus right how they are. Sorry about the confusion.
"
260172864,5942,brownsr,2016-11-13T08:19:46Z,"@Odyseus Sorry, our posts crossed.  I've put my testing results in my comment above.
"
260173554,5942,Odyseus,2016-11-13T08:40:53Z,"@brownsr: Very sorry for not pointing you to an specific applet to test this out. I almost do not use the default ones, and the default applets that I do use doesn't add extra items to their context menu. Plus, I didn't thought a good idea to linking you to a third party applet.

About the _separator vs sub-menu ""debate""_. I didn't meant to start a debate. I just gave my point of view.
"
260173718,5942,JosephMcc,2016-11-13T08:45:13Z,"@brownsr Remember that some themes will use a transparent separator so you won't see it either way in that case.

Edit: It seems like some posts are being edited quicker than I'm responding ;)
"
260174022,5942,JosephMcc,2016-11-13T08:53:44Z,"> I agree with collinss view on this one; to which I add. Context menus have to have easy and fast access at all times.

That argument doesn't make sense in this case. The items below the separator are little used items. In most cases you barely touch them once the applet is set the way you want. The items specific to the applet are the ones that you will nearly always want.

In any case, I won't be the one deciding :)
"
